[{"title": "failing test chrome due fault spec", "body": "version reproduction link steps reproduce clean install branch run expected tests pass actually happening test fails returning spec double clicks label alreadycompleted todo line changes text lines finally blurs field clicking something else line footer catch actually clicks inview centre point footer according nightwatch docs active filter button rendered least using chrome happen phantomjs clicks active filter justedited todo hidden spec asserts text first visible todo match expectations fails fault lives line simple solution simply click something else like newtodo text input solves issue make pr fix", "num": "7937", "d": "3/2018"}, {"title": "could please support using symbol value key field using vfor list rendering", "body": "problem feature solve using vfor render list every instance list id would like use symbol type express id fill id key every thing ok id push instance list twice function checkduplicatekeys vue detected duplicate key log warning warnning code file key symbol type browser throw error jointing symbol value string byebye application check document nt tell us use symbol key think bug could please support symbol type list rendering proposed api look like itemcontent import export default vueextend data return list id symbol id content id symbol id content b id symbol id content c id symbol id content", "num": "7936", "d": "3/2018"}, {"title": "optimize vfor rendering render users", "body": "hi rendering list users way example show first users second end takes time render users one time render first users show rest example vfor userssplice vfor rest userssplice simple way things thank", "num": "7934", "d": "3/2018"}, {"title": "make eslint available emacs", "body": "recently study vue find install vue command init webpack select eslint lint code find emacs check vue code eslint try eslint lint code emacs check vue code eslint make emacs use eslint eslint lint code", "num": "7933", "d": "3/2018"}, {"title": "created strict mode code may include mix scopedslot", "body": "version reproduction link steps reproduce trying mix custom scopedslots already loaded component looks like created objectdefineproperty scopedslots setter scopedslots add custom slots already existed slots custom slots created template string contained html code template scopedslots gt let slotargs templatematch slotscope let slotbody vuecompile template rendertostring match return scopedslots slotname eval expected mix scopedslot must work actually happening vueesmjs syntaxerror strict mode code may include statement use use helper render please help please enable strict mode mounted", "num": "7932", "d": "3/2018"}, {"title": "broken options values bound dates", "body": "version reproduction link steps reproduce try select item except first one expected item selected actually happening always shows first item item except first selected possible select first one actually possible shows correct selected item item selected twice row seems bug introduced ver reproduced objects instead dates", "num": "7928", "d": "3/2018"}, {"title": "vuejs support fragments tag like react", "body": "problem feature solve vuejs support fragments tag like react proposed api look like", "num": "7925", "d": "3/2018"}, {"title": "root opts attributes support", "body": "problem feature solve desired opts feature offer possibility provide data markup mostly backend vue instance pass optionsparams outside vue scope example use case right requires custom helperscode pipe data component much better would comfortable way similar way riot opts proposed api look like since instance root custom tag compared riot imagine using prefixed attributes eg root may look like html hello optsfirstname optslastname", "num": "7924", "d": "3/2018"}, {"title": "mixin provide symbols nt get merged properly", "body": "version reproduction link steps reproduce run code injected result show console expected merging work properly expected result see convert strings actually happening merging fails", "num": "7923", "d": "3/2018"}, {"title": "feature request pass vue instance first parameter computed properties", "body": "problem feature solve absolutely imagine nobody brought search nt delivered anything take topic first love concept computed properties much however one implementation detail bugs time time computed properties often pretty simple calculations string concatenations find tedious always cover three lines code one property name one implementation one closing curly brace course put one line usually makes implementation looks less obvious rather confusing arrow functions elegant solution simple mappings know applicable computed properties different context proposed api look like since computed properties currently nt take arguments would relatively cheap regarding implementation effort possible bc changes bind context according vue instance also pass parameter basic example would allow elegant solutions like even getters setters point could see api getting slightly ugly computed property setters already receive parameter would take second argument avoid breaking changes getters setters could omitted topic entirely ie staying unchanged usually concise anyway however consistency propose receive vue instance well setter second argument conclusion far tell whole approach break existing code unfortunately feature available userland implementation felt would appropriate feature request love hear thoughts", "num": "7922", "d": "3/2018"}, {"title": "vuejs deferred component misbehaves", "body": "version reproduction link steps reproduce two jsfiddles working expected working fiddle fire every seconds also render component first one could problem expected return resolved component actually happening fires main parent component infinitely resolving child component", "num": "7921", "d": "3/2018"}, {"title": "typeerror create property placement string popperoptions", "body": "save problem help save problem", "num": "7920", "d": "3/2018"}, {"title": "typeerror create property placement string popperoptions", "body": "save problem help save problem", "num": "7919", "d": "3/2018"}, {"title": "emit event registe via events property still keep empty array", "body": "version reproduction link steps reproduce registe event via emit event expected thisevents property empty actually happening thisevents keep events empty array deliberately amp thx lot", "num": "7917", "d": "3/2018"}, {"title": "vuejs deffered component misbehaves", "body": "created component loader gets deferred component rerenders infinitely two jsfiddles working expected working fiddle fire every seconds also render component first one could problem component loader creates dynamic component renders name", "num": "7916", "d": "3/2018"}, {"title": "prop changes always trigger watch", "body": "version reproduction link steps reproduce open jsfiddle scroll scrollbar rapidly observe console warns occur prop update missed expected fired every scroll event actually happening vue handling subsequent scroll events watch firing use case integrating another system important nt skip events change reproducible versions gt change version reproducer see correct behavior looking change log seems like commit likely culprit", "num": "7915", "d": "3/2018"}, {"title": "vbind attrs problems value attribute multicheckboxes", "body": "version reproduction link steps reproduce check checkbox see value set null even though input element value correctly set foo expected value passed attrs checkbox value used never hits dom element fact present dom element nt used model conflict imo actually happening null set", "num": "7914", "d": "3/2018"}, {"title": "unexpected duplicate presence slot", "body": "version reproduction link steps reproduce created component scoped slot appswitchervue use another component slot helloworldvue slot subtext add element slot div appvue expected work without errors actually happening changes appswitchervue caus duplicate presence slot subtext found render tree error duplicates also adding div appvue solves problem error happens without", "num": "7913", "d": "3/2018"}, {"title": "setdata nt work correctly", "body": "version reproduction link steps reproduce clone repository checkout tests branch run yarn test expected wrappersetdata change data app correctly directive update highlighted word actually happening setdata nt update correctly data console print read property split undefined seems wrapper mounted remove data appvue sfc error changes avoid adding reactive properties vue instance root data runtime declare upfront data option", "num": "7912", "d": "3/2018"}, {"title": "", "body": "version reproduction link steps reproduce const createbundlerenderer require vueserverrenderer const path require path const server require express const serverbundle pathjoin dirname distvuessrserverbundlejson const renderer createbundlerenderer serverbundle runinnewcontext false \u63a8\u8350 template require fs readfilesync clientmanifest pathjoin dirname distvuessrclientmanifestjson serverget req res gt const context url requrl rendererrendertostring context err html gt ressend html listen expected actually happening thispublicpath clientmanifestpublicpathreplace var clientmanifest thisclientmanifest optionsclientmanifest var clientmanifest thisclientmanifest clientmanifest jsonparse require fs readfilesync optionsclientmanifest", "num": "7911", "d": "3/2018"}, {"title": "watch callback triggered props routerview", "body": "version latest reproduction link steps reproduce home page click driver open view driver view click driver expected watcher props triggered props uuid changed load data corresponding new props actually happening watcher triggered", "num": "7910", "d": "3/2018"}, {"title": "use slots component name textarea", "body": "version reproduction link steps reproduce name component add slots expected would expect component rendered normally slots distributed properly actually happening textarea rendered without slots default one building vue uiux framework run bug guys let know fix wo nt prefix framework components thank", "num": "7908", "d": "3/2018"}, {"title": "shorthand directive class binding", "body": "problem feature solve far know binding classes boolean dataprop works passing object like shorthand binding single class would nice proposed api look like currently using custom directive thought proposing feature could good idea syntax directive looks like jsfiddle implenentation directive request implemented class directive api would look like would implemented prefix like event handler api could look like nt know good prefix character approche", "num": "7907", "d": "3/2018"}, {"title": "scopedslot acknowledged nested template tag", "body": "version reproduction link steps reproduce execute jsfiddle notice scopedslot nt rendered expected scopedslot rendered actually happening scopedslot rendered minimal reproduction little unpractical would unnecessarily nest content attributeless tag jsfiddle reflective real usecase dealing", "num": "7904", "d": "3/2018"}, {"title": "innerhtml make content element lost", "body": "version reproduction link steps reproduce click click button would execute clear contents watch right expected content correct browsers actually happening chrome content correct firefox content correct content empty bug would appear", "num": "7903", "d": "3/2018"}, {"title": "comments cause clientside rendered virtual dom tree matching serverrendered content", "body": "version template add html serverrendered content browser render serverrendered content html comments symbols causeed vue warn clientside rendered virtual dom tree matching serverrendered", "num": "7900", "d": "3/2018"}, {"title": "comments", "body": "", "num": "7899", "d": "3/2018"}, {"title": "vue ssr render initial css chunks correctly", "body": "problem feature solve supports css also supported use ssr still get css files ssr rendering investigation current vuessr webpack plugin generate corresponding css inside also renderer render css includes splitted async css chunks proposed api look like css initial chunks css spiltted chunks contextrenderstyles return chunks auto load chunks", "num": "7897", "d": "3/2018"}, {"title": "vbind bug img list", "body": "version reproduction link steps reproduce html html itempostbody javascript expected images rendering list actually happening images list", "num": "7896", "d": "3/2018"}, {"title": "buggy type inference props array type", "body": "version reproduction link sorry nt found online tool shows type annotations steps reproduce type following ts enabled editor like vs code expected correct type inference least message actually happening getting error property message nt exist nt happen type prop object data simple object function", "num": "7895", "d": "3/2018"}, {"title": "sync modifier working component", "body": "version reproduction link steps reproduce type text input expected text paragraph change actually happening paragraph text changing way use sync modifier", "num": "7894", "d": "3/2018"}, {"title": "sync modifier working component", "body": "hi check issue added sync modifier component check codepen link", "num": "7893", "d": "3/2018"}, {"title": "sync modifier working component", "body": "hi check sync modifier working component pl check link", "num": "7892", "d": "3/2018"}, {"title": "error component sync modifier", "body": "hi written small demo code getting following warning vue warn avoid mutating prop directly since value overwritten whenever parent component rerenders instead use data computed property based prop value prop mutated input found pl check code", "num": "7891", "d": "3/2018"}, {"title": "error updatechildren method declared read property withtask undefined", "body": "version reproduction link steps reproduce method declared update children error like read property withtask undefined occur although warning like vue warn invalid handler event click got undefined developer disabled warn difficult resolve problem expected error happen rendering continued actually happening error occured", "num": "7890", "d": "3/2018"}, {"title": "issue recursive component event propagation", "body": "version reproduction link steps reproduce provided fiddle link click node see errors expected recursive component able stop propagation events clicked node pass current node data actually happening emit toggledstop get note pass event click emit error goes away event bubbles without stop passing whole tree data", "num": "7889", "d": "3/2018"}, {"title": "wrong property resolved node", "body": "problem probably mistaken property", "num": "7888", "d": "3/2018"}, {"title": "input bindings string", "body": "vue compile string", "num": "7886", "d": "3/2018"}, {"title": "href\u7684\u95ee\u9898", "body": "version reproduction link steps reproduce \u5355\u5411 expected a\u6807\u7b7e\u7684\u90fd\u80fd\u663e\u793a actually happening \u6240\u6709\u7684a\u6807\u7b7e\u90fd\u80fd\u70b9\u51fb\u800c\u4e14\u6210\u529f\u8df3\u8f6c \u4f46\u4ece\u7b2c\u4e8c\u4e2aa\u6807\u7b7e\u5f00\u59cb\u7684\u6837\u5f0f\u5c31\u6ca1\u6709\u4e86 \u8981\u70b9\u51fb\u8fc7\u624d\u6709\u6837\u5f0f\u51fa\u6765 \u8fd8\u6709\u53ea\u6709 href\u7684\u94fe\u63a5\u53ea\u8981\u586b\u5199\u5185\u5bb9\u90fd\u4f1a\u5bfc\u81f4\u8be5\u6837\u5f0f\u6d88\u5931", "num": "7885", "d": "3/2018"}, {"title": "disable autoload vue project update code vue file", "body": "dear sirmadam request nt want function autoloading vue file update code vue file possible william", "num": "7884", "d": "3/2018"}, {"title": "bug createelement accepting first argument function", "body": "version reproduction link steps reproduce create render function first argument function returns html tag expected element render actually happening element rendered according documentation first argument createelement function function returns html tag name component options function returns html tag name work far see sure looking right place handling function tag maybe documentation date", "num": "7883", "d": "3/2018"}, {"title": "\u5bf9\u4e8ehtml\u7f16\u8bd1\u7684\u770b\u6cd5", "body": "\u5b9e\u9645\u4e0a\u4f60\u4eec\u53ef\u4ee5\u8ddf\u6d4f\u89c8\u5668\u5408\u4f5c \u6211\u6000\u7591\u4f60\u4eec\u628a\u6d4f\u89c8\u5668\u7684html\u7684\u89e3\u6790\u7f16\u8bd1\u7684\u4e8b\u60c5\u53c8\u91cd\u65b0\u505a\u4e86\u4e00\u6b21 \u6240\u4ee5\u7f16\u8bd1\u53ef\u4ee5\u76f4\u63a5\u653e\u5728\u6d4f\u89c8\u5668\u7f16\u8bd1\u7684\u65f6\u5019\u5b8c\u6210 \u8fd9\u6837\u89e3\u91ca\u4e86\u65f6\u95f4 \u548c vue\u672c\u8eab\u7684\u4f53\u79ef", "num": "7882", "d": "3/2018"}, {"title": "keydownescape work edge", "body": "version reproduction link steps reproduce open linked reproduction link microsoft edge open developer tools console section click inside input field codepen output hit escape keyboard expected keydownescape keydownesc handlers triggered log esc escape actually happening keydownescape keydownesc handlers triggered unfiltered keydown handler triggered issue tested microsoft edge verified working expected latest safari chrome firefox macos", "num": "7880", "d": "3/2018"}, {"title": "vshow triggers move transition enter", "body": "version reproduction link steps reproduce open fiddle click toggle button watch transition trigger enter expected like move transitions triggered enter note already triggered leave actually happening nt checked source yet guessing since elements still technically coordinates transition triggered enter sure would nt also occur leave though may connected also special thanks rachelnabors finding bug", "num": "7879", "d": "3/2018"}, {"title": "usage vue app iframe embedded indexhtml website", "body": "problem feature solve sure feature meet usecase think let propose anyway usecase application something like chatbot starts user embedding async js call js file indexhtml js chatbot work basically iframe best solution sourcing iframe body onload get clientjs sourced vue mounted indexhtml issue picking xyzvue styles proposed api look like api usecase yet", "num": "7877", "d": "3/2018"}, {"title": "\u5b50\u7ec4\u4ef6\u4e5f\u60f3\u4f7f\u7528\u7ec4\u4ef6\u7684key", "body": "problem feature solve proposed api look like", "num": "7876", "d": "3/2018"}, {"title": "", "body": "\u4e0d\u662f\u5e94\u8be5\u670d\u52a1\u7aef\u8def\u7531\u5339\u914d\u540erender domstring", "num": "7874", "d": "3/2018"}, {"title": "incorrect invalid prop warning prop type symbol", "body": "version reproduction link steps reproduce create simple component required prop type symbol pass symbol component expected warnings actually happening warning given warning message wrong message expected type empty space comma", "num": "7873", "d": "3/2018"}, {"title": "\u5173\u4e8etypescript\u5b9a\u4e49\u6587\u4ef6\u7684\u4e00\u70b9\u5efa\u8bae", "body": "problem feature solve gt lt proposed api look like", "num": "7872", "d": "3/2018"}, {"title": "query preferred method publishing", "body": "convention publishing reusable components npm publish file compiled component pros cons either approach", "num": "7871", "d": "3/2018"}, {"title": "correct width dom object", "body": "problem feature solve div object div put text parameter width auto size browser inspector thiswidthone clientwidth offsetwidth create static width div work correct proposed api look like thiswidthone", "num": "7870", "d": "3/2018"}, {"title": "correct width dom object", "body": "mounted function nexttick function consolelog mounted size browser inspector thiswidthone text row width auto clientwidth offsetwidth create static width work correct", "num": "7869", "d": "3/2018"}, {"title": "suggestion custom proxy prefix component props", "body": "problem feature solve define props component general give friendly understandable props names given proxied well data attributes friendly names longer used want modify prop define data attribute modified use friendly name gave prop would interesting able proxy props instance variable add prefix without proxying would public interface props friendly names would available data attributes component proposed api look like think understood idea", "num": "7867", "d": "3/2018"}, {"title": "modifying input model resets caret position also way handle", "body": "version reproduction link steps reproduce modify model input caret resets example place cursor hello world remove dot cursor reset end know could change text helloworld something vue would idea put caret modification apart using pure nonvue plainoldjavascript way way handle caret position final result nt want alow user type two dots one right helloworld forbidden needs changed helloworld problem ca nt control caret using vue guys help expected way control caret actually happening way control caret", "num": "7866", "d": "3/2018"}, {"title": "declarations componentoptions must identical type parameters", "body": "version reproduction link steps reproduce tsconfig json compileroptions target strict true module moduleresolution node baseurl outdir dist paths src types tencentwxapp allowjs true allowsyntheticdefaultimports true noimplicitany false experimentaldecorators true include src exclude nodemodules typeacquisition enable true atloader declarations componentoptions must identical type parameters expected success actually happening atloader declarations componentoptions must identical type parameters", "num": "7865", "d": "3/2018"}, {"title": "find closest opened tag type htmlparsejs", "body": "problem feature solve htmlparsejs think last tag stack opened tag endtag find stack evidence compilerparserindexjs end remove trailing whitespace const element stack stacklength const lastnode elementchildren elementchildrenlength lastnode amp amp lastnodetype amp amp lastnodetext amp amp inpre elementchildrenpop pop stack stacklength currentparent stack stacklength closeelement element pop line proposed api look like pop last element stack htmlparserjs parseendtag", "num": "7864", "d": "3/2018"}, {"title": "state saved using two components vif", "body": "version reproduction link steps reproduce component state render two components vif expected two components different actually happening state change vshow ok", "num": "7863", "d": "3/2018"}, {"title": "subscribe custom events child component", "body": "problem feature solve would make writing wrapper components easier proposed api look like von receives function trigger every custom event emitted child argument one could name event", "num": "7862", "d": "3/2018"}, {"title": "xss using html entities", "body": "version reproduction link steps reproduce vue parses expression even enclosed curlybraces using html entitties example constructorconstructor quot alert quot expected expression rendered html entities parsed actually happening vue parsing instead reading xss vue wrote helper php template engine replace curlybraces unsafe expressions html entity equivalent expected vue render expressions written actual curlybraces unfortunately feasible add vpre directive every place project working renders unsafe user input", "num": "7860", "d": "3/2018"}, {"title": "vue srr renders newline characters class attributes", "body": "version reproduction link gist steps reproduce download gist file expected rendered browser class styles applied second element actually happening class attribute rendered styles applied worked around adding space midattribute line break however nt play nicely eslint rule settings many common editors", "num": "7859", "d": "3/2018"}, {"title": "vshow true possibly incorrect ssr", "body": "version reproduction link gist steps reproduce download gist file expected would expect element rendered server side render fashion one without directive actually happening elements rendered ssr seemingly invalid style attribute without directive contain attribute nt know causes specific rendering issues moment noticed chrome dev tools complaining styles element", "num": "7858", "d": "3/2018"}, {"title": "evaluation slot content context inconsistent slotscope behavior", "body": "version reproduction link steps reproduce open pen message box get opened full context gets evaluated since slot shown evaluation unnecessary point negates optimizations one declares slotscope like components vue shows correct behavior expected slotted context evaluate lazy manner actually happening slotted context gets evaluate right away", "num": "7856", "d": "3/2018"}, {"title": "vue metro", "body": "version reproduction link steps reproduce add vue initialization components initialized twice expected single component initialization actually happening double initialization components name sergey pimenov author metro help understand using vuejs components initialized twice metro components initialized using muatationobserver appeared dom metro subsystem initialized", "num": "7855", "d": "3/2018"}, {"title": "content security policy helmet prevent loading js", "body": "version reproduction link steps reproduce ca nt get build sandbox describe happens build files serve expressjs static file serve function serverjs use helmet try apply content security policy code looks like nt work error messages console jus scripts loaded tried still nt work scripts loaded web page blank expected page display proper information actually happening page blank", "num": "7854", "d": "3/2018"}, {"title": "different vision global variables development minified version", "body": "version reproduction link steps reproduce change vueminjs vuejs expected showing global variable actually happening error variable defining easy reproduce test nothing additional", "num": "7853", "d": "3/2018"}, {"title": "component inline template vfor variable undefined one", "body": "version reproduction link steps reproduce make component make inlinetemplate vfor component expected last component created print prop undefined actually happening error excepted use template work well", "num": "7852", "d": "3/2018"}, {"title": "effect devserver built command npm start looks different production server built command npm run build", "body": "version steps reproduce contentlistitem transition contentlistmove transition transform contentlistenter contentlistleaveto opacity transform translatex contentlistleaveactive position absolute expected effect devserver expected actually happening effect production mode unexpected", "num": "7851", "d": "3/2018"}, {"title": "", "body": "version reproduction link none steps reproduce keepyalive expected \u7406\u8bba\u4e0aheader\u7684emit\u89e6\u53d1a\u7684\u4e8b\u4ef6 actually happening", "num": "7850", "d": "3/2018"}, {"title": "render state leave transition", "body": "version reproduction link steps reproduce click toggle button show label wait second two click hide label click hide label label hiding succesfully leave callbacks indeed triggered template wo nt respond expected label text update according transition status entere go entering entered leave change entering leave gt leaving gt exited hidden actually happening transition callbacks indeed triggered wo nt render changes", "num": "7849", "d": "3/2018"}, {"title": "short syntax vbind attributes names", "body": "problem feature solve reduce amount code make code neater proposed api look like looks like destructuring assignment instead right nt work since according standards attributes considered boolean attributes converted even sure bad practice use proposed way since attributes called boolean attributes represent boolean values feature would really great", "num": "7848", "d": "3/2018"}, {"title": "short syntax vbind attributes names", "body": "problem feature solve reduce amount code make code neater proposed api look like looks like destructuring assignment instead right nt work since according standards attributes considered boolean attributes converted even sure bad practice use proposed way since attributes called boolean attributes represent boolean values feature would really great", "num": "7847", "d": "3/2018"}, {"title": "extending object syntax von support modifiers", "body": "problem feature solve object syntax von directive vital achieving conditional binding event listeners shown discussions however current object syntax allow modifiers feature request suggest extend object syntax following way allow modifiers example would conditionally install leftclickhandler clickleftprevent mouseoverhandler mouseoverstop embedded object notation also conceptually consistent dotnotation already adopted function inline syntax proposed api look like proposed von object syntax would like like extension current syntax", "num": "7846", "d": "3/2018"}, {"title": "directive integer range work constant attribute works binding", "body": "version reproduction link steps reproduce observe interpolation tag working working open observe works fine interpolation works three cases expected would expect three uses component work documentation reflects fact latter two work component property used range parameter property set literal must bound actually happening works integer range defined component property component property bound however interpolations work component properties even property set literal constant component used fooled fact interpolation tag works three cases vfor directive works latter two wasted hours trying various variants syntax certainly use binding live application trying integerrange support vfor directive first time plonked multiple instances component building onto page different values value property set constants ended posting stackoverflow question question promptly answered understand mistake think behaviour either bug failure documentation opening issue anyway", "num": "7845", "d": "3/2018"}, {"title": "directive integer range work constant attribute works binding", "body": "confused strange behaviour related directive vue integer ranges ended posting stackoverflow question question promptly answered understand mistake think behaviour either bug failure documentation opening issue anyway brief summary component note use directive integer range bound property use jsfiddle nt work however following work jsfiddle jsfiddle source great fooled fact interpolation tag works three cases directive works latter two wasted hours trying various variants syntax certainly use binding live application trying integerrange support directive first time plonked multiple instances component building onto page different values property set constants suggested resolution propose either changed works three cases documentation updated reflect requirement component property used range parameter property set literal must bound sure phrase latter guess simply updating docs would responsible course action", "num": "7844", "d": "3/2018"}, {"title": "inconsistent behavior functional component normal ones", "body": "version reproduction link steps reproduce create component slot add fallback content slot create component render function use slot content create functional component render function use slot content expected fallback content rendered actually happening normal component fallback content cleared comment node rendered functional component fallback content rendered related", "num": "7841", "d": "3/2018"}, {"title": "add enum sugar prop validators", "body": "problem feature solve enum props common validate given value valid enum values like proposed api look like think handy provide extra convenience supporting", "num": "7840", "d": "3/2018"}, {"title": "transition mode outin one tick delay", "body": "version reproduction link steps reproduce find let update transition onoff buttons outin website click button code one tick text one attribute addition fixed original transition without add special styling jump immediately jumb bug appears browser firefox chrome works expected expected one tick jump text button actually happening text jumps firefox realize may browser bug sure", "num": "7838", "d": "3/2018"}, {"title": "keepalive breaks initial transition", "body": "version also checked version reproduction link steps reproduce add items see animation every item remove items order add item time animation item applied remove items reverse order add items animation works correctly expected transition work every time actually happening transitiongroup inside keepalive activated deactivated sometimes doest apply transition first rendered element", "num": "7837", "d": "3/2018"}, {"title": "getting avoid mutating prop directly error using splice shift prop array", "body": "version reproduction link steps reproduce click x button next list item expected maybe understanding wrong thought changing value bound prop child component nogo testing used arraysplice prop expecting give error actually happening nt give error see devtools parent updates properly missing something correct assumed emit back parent change value works assigning completely new value however gives error", "num": "7836", "d": "3/2018"}, {"title": "unknown custom element warning recursive components babel", "body": "version reproduction link steps reproduce repo based webpack template run start project expected attempting reuse components nested pattern entitycomponent render relationshipcomponent turn render entitycomponent actually happening although component defined name property receive following warning console nothing rendered page make change entitycomponent file hot swap component render without warning tried vain set keys name property child element rename element attempting alias component name also proved unsuccessful removing component means rest component appears correctly barebones reproduction final version uses vuex state management child component property passed getter used pull information specific reference array store using vfor div list relevant array entries part works seems name property ignored nested component struggling find documentation possibly due using wrong keywords happy write blog post ifwhen gets resolved give others helping hand", "num": "7835", "d": "3/2018"}, {"title": "unable simulate click", "body": "version reproduction link steps reproduce click demo comment part uncomment part try expected native input modal supposed triggered actually happening modal triggered triggered", "num": "7834", "d": "3/2018"}, {"title": "", "body": "problem feature solve proposed api look like vueaop vueaoplifecycle", "num": "7833", "d": "3/2018"}, {"title": "docs propsdata incomplete", "body": "problem feature solve documentation propsdata omits fact props set via update n value changes description ways simulate reactivity props programmatically instantiated components proposed api look like na", "num": "7832", "d": "3/2018"}, {"title": "hiding component vif results notfounderror failed execute insertbefore node", "body": "version reproduction link steps reproduce click hide jsfiddle expected components actually hide least give meaningful warning instead erroring actually happening notfounderror failed execute insertbefore node node new node inserted child node", "num": "7831", "d": "3/2018"}, {"title": "vmodel support web components stenciljs", "body": "problem feature solve vmodel support web components tested web component implemented ionic stenciljs compiler work works enabled support ignored elements well declared proposed api look like declaration usage", "num": "7830", "d": "3/2018"}, {"title": "provide way explicitly fill scoped slot nothing", "body": "problem feature solve see background information providing explicit way declare slot empty wo nt use props control whether slot gon na rendered proposed api look like", "num": "7829", "d": "3/2018"}, {"title": "ssr render function dom node larger", "body": "problem feature solve use ssr dom node page much rendered asynchronously much synchronized renderingso study source code shows maxstackdepth distinguish two different rendering methods reason solve performance problem javascript let param vuerendererrendertostring new vue template tmplcontent data syncdata function error htmlstr error htmlstr actshowerrorpage return param htmlstr consolelog head dom node larger first console body console head dom node smaller first console head console body proposed api look like", "num": "7827", "d": "3/2018"}, {"title": "globally registered component naming converts kebapcase pascalcase used", "body": "version steps reproduce currently globally registered components automatically convert name kebapcase js register component vuecomponent routerlink get component fails returns undefined vuecomponent routerlink get component works returns component vuecomponent routerlink would nice registered components also available pascalcase naming would also mean could use pascalcase naming templates nice way quickly distinguish vue components html elements right possible make work code used html link components routerlink vuecomponent routerlink expected access globally registered components pascalcase naming provided register function call actually happening component naming always converts kebapcase", "num": "7825", "d": "3/2018"}, {"title": "vue", "body": "", "num": "7821", "d": "3/2018"}, {"title": "want learn vuejs", "body": "", "num": "7820", "d": "3/2018"}, {"title": "named slot wo nt render", "body": "version reproduction link steps reproduce jsfiddle link reproduces issue pretty intricate combination reproduces removing wrapping noopundefinedfalse removing dependency fix issue expected named slot render case reproduction text render text actually happening named slot rendering", "num": "7817", "d": "3/2018"}, {"title": "performance question vhtml vs braces", "body": "understand difference provide far escaping tags data binding nt know vue team sees preferred method performance differences example less work vue engine especially large scale used repeaters etc curious since methods provide outcome also prefer use braces unless absolutely necessary nt want hinder performance overusing vhtml takes power braces thanks", "num": "7816", "d": "3/2018"}, {"title": "different array arraylength", "body": "version reproduction link steps reproduce tab view change tab view second tab different third tab expected second tab third actually happening second tab different third tab set see data array empty view still exist set really disappear method array wrong", "num": "7815", "d": "3/2018"}, {"title": "ssr lost vshow style binding array", "body": "version reproduction link steps reproduce npm install vue vueserverrender new code run node indexjs expected html test actually happening html test please run codepen node", "num": "7813", "d": "3/2018"}, {"title": "ssr \u670d\u52a1\u7aef\u6e32\u67d3\u80fd\u5426\u589e\u52a0\u81ea\u5b9a\u4e49 templaterenderer \u6216\u8005", "body": "problem feature solve \u5f53\u6211\u4f7f\u7528 inject true \u7684\u53c2\u6570\u6e32\u67d3 ssr renderscripts \u5982\u679c \u6211\u8bbe\u7f6e\u4e86 inject html\u6a21\u677f\u4e2d \u6dfb\u52a0 \u5404\u79cd render proposed api look like createbundlerenderer inject true renderscripts function", "num": "7812", "d": "3/2018"}, {"title": "vbind attrs overrides input type attribute", "body": "version reproduction link steps reproduce create custom component input wrapped div inherit attributes set type attribute input vmodel input expected inner input still receives type checkbox actually happening type attribute inherited custom checkbox component provides label styling etc used able declare input type well inherit attributes component attributes set inner input passed correctly ie disabled truevalue etc type attribute unless bind working prior temporary fix implemented changing setting vbind attrs computed property returns object objectassign type checkbox attrs removing vmodel input also fixes use handle multiple checkboxes bound array fiddle working", "num": "7811", "d": "3/2018"}, {"title": "beforeload placeholder async component", "body": "problem feature solve use case parent component needs properly calculate number children render parent mounted children async component need beforeload component option proposed api look like", "num": "7810", "d": "3/2018"}, {"title": "arrslice always reuses dom vfor key", "body": "version reproduction link steps reproduce case problem visible rowsslice followed visible rowsslice case b problem visible rowsslice followed visible rowsslice first reuses dom elements latter appears create new ones seen inspecting div boxes firefox see flashing orange clicking button button minimal reproduction kind optimization bug trying scrolling page updown show rows view huge table visibly faster scroll despite elements absolutely positioned happens chrome firefox expected dom elements reused case b actually happening dom elements appear recreated case b potentially causing unnecessary performance hit contradicting loving vue keep great work", "num": "7809", "d": "3/2018"}, {"title": "euler number breaks vmodel numeric inputs", "body": "version reproduction link steps reproduce set native input element type set number type e wherever numeric value expected emitted value include euler number eg etc actually happening mapped vmodel value becomes undefined", "num": "7808", "d": "3/2018"}, {"title": "vfor evaluated even vif statement false", "body": "version reproduction link steps reproduce make variable data eg project null undefined get server later make div vif project vfor item projectlist get error even vif evaluated false expected nothing append actually happening error vue trying evaluate empty variable quite annoying case add extra div wrap vfor statement evaluate vfor vif statement false html tag way exemple project data assigned later request server", "num": "7807", "d": "3/2018"}, {"title": "keydown events working arrow keys", "body": "version reproduction link steps reproduce click input field press arrow keys expected paragraph input field display last arrow key pressed enter enter key actually happening enter key recognized displayed problem occurs using works properly using versions work chrome firefox", "num": "7806", "d": "3/2018"}, {"title": "components duplicated share data object", "body": "version reproduction link steps reproduce open reproduction link expected foo bar rendered class name actually happening passing data object multiple components causes duplication", "num": "7805", "d": "3/2018"}, {"title": "read property components undefined", "body": "version steps reproduce importing appvue component named profilevuein profilevue also import another component named changepasswordvueeverything works worked fine dont want anymore import changapassword profilevue componentbut delete import delete component registration delete html tag changepassword component got strange error expected expected change affect something application also dont get error actually happening got follow error error render typeerror read property components undefined found srcappvue vueesmjs typeerror read property components undefined checkcomponents vueesmjs mergeoptions vueesmjs mergeoptions vueesmjs functionvueextend vueesmjs createcomponent vueesmjs createelement vueesmjs createelement vueesmjs vmc vueesmjs proxyrender eval nodemodulesvueloaderlibtemplatecompilerindexjs id hasscoped false transformtorequire video src poster source src img src image xlink href buble transforms nodemodulesvueloaderlibselectorjs typetemplate amp srcappvue vuecomponentvuerender vueesmjs think miss something since delete import profilevue delete components section also html tag related changepasswordvue everything work fineidk isnt", "num": "7804", "d": "3/2018"}, {"title": "firefox changing anything element via refs table breaks binding", "body": "version reproduction link jsfiddle steps reproduce create vuejs instance add data field create new title property app create element output title add ref element change title app using method change title via refs table change back title via method expected title change back set method actually happening title ca nt changed anymore method vue losing binding element updated via refs happens firefox using browsers chrome chromium fine", "num": "7803", "d": "3/2018"}, {"title": "hotmodulereplacement net", "body": "hi want ask configure hotmodulereplacement mvc net trouble development build working net core link please guided thanks", "num": "7800", "d": "3/2018"}, {"title": "vnode work functional", "body": "version reproduction link steps reproduce codepen demo works well change blank output expected work well actually happening blank output", "num": "7799", "d": "3/2018"}, {"title": "vue \u670d\u52a1\u5668\u6e32\u67d3\u548cphp\u7b49\u4f20\u7edf \u670d\u52a1\u5668\u6e32\u67d3\u6709\u6ca1\u6709\u6027\u80fd\u4e0a\u7684\u5dee\u522b", "body": "vue \u670d\u52a1\u5668\u6e32\u67d3\u548cphp\u7b49\u4f20\u7edf \u670d\u52a1\u5668\u6e32\u67d3\u6709\u6ca1\u6709\u6027\u80fd\u4e0a\u7684\u5dee\u522b \u5c24", "num": "7798", "d": "3/2018"}, {"title": "vue\u5982\u4f55\u67e5\u770b\u6bcf\u4e2a\u7248\u672c\u7684\u66f4\u65b0\u65e5\u5fd7", "body": "version reproduction link steps reproduce null expected null actually happening null", "num": "7796", "d": "3/2018"}, {"title": "register component twice leads subtle bug", "body": "version reproduction link steps reproduce demo click button see parent element replaced new element reason replacement occurs component attribute changed first time second time changes replacement nt occur expected give warning redundant component registration actually happening leads subtle bug encountered wrapper accidentally registered twice html tag main body another footer subtle bug type first character focus lost everything appears normal wonder print warning redundant registering components dev mode polymer type warning would super helpful like vuejs lot thank making great framework", "num": "7795", "d": "3/2018"}, {"title": "register component twice leads subtle bug", "body": "demo click button see parent element replaced new element reason replacement occurs component attribute changed first time second time changes replacement nt occur leads subtle bug encountered wrapper accidentally registered twice html tag main body another footer subtle bug type first character focus lost everything appears normal wonder print warning redundant registering components dev mode polymer type warning would super helpful like vuejs lot thank making great framework", "num": "7794", "d": "3/2018"}, {"title": "unable use newline vfor attribute", "body": "version reproduction link steps reproduce run look error console expected newline n support vfor actually happening vuejs vue warn error compiling template message invalid expression unexpected token raw expression vfor real case much complex would need newline readability especially since comment accepted", "num": "7792", "d": "3/2018"}, {"title": "vmodel work properly use", "body": "version reproduction link steps reproduce type input view update input value expected view display input value properly actually happening input value changes object", "num": "7791", "d": "3/2018"}, {"title": "radio button working using vfor", "body": "version reproduction link steps reproduce select first question answer move next question choosing next answer go back previous question chosen radio button checked expected first answered radio button must checked default actually happening first answered radio button checked", "num": "7790", "d": "3/2018"}, {"title": "textarea vmodel updated dynamically", "body": "version reproduction link steps reproduce change textarea enter text try clear code input works fine textarea shift click button text clears shiftenter log fires text clear expected clear actually happening clear thanks looking", "num": "7789", "d": "3/2018"}, {"title": "maximum call stack exceeded using custom components", "body": "version reproduction link steps reproduce including vue elementio styles library opening new form opening new form element using custom date picker element expected expected render custom ui component date picking actually happening element render console filled errors rangeerror maximum call stack size exceeded issue related latest vuejs version working expected", "num": "7788", "d": "3/2018"}, {"title": "ssr classes reapplied hydration without ref", "body": "version reproduction link ref ref steps reproduce open codepen expected applied actually happening nothing changes hydration unless element ref opened similar issue ago styles thing happens custom attributes btw expect give mismatched nodes error least ref ref text fine though", "num": "7787", "d": "3/2018"}, {"title": "maximum call stack size exceeded vbind class using slots", "body": "version reproduction link steps reproduce run fiddle expected render without error actually happening console warns maximum call stack size exceeded demo works fine prior versions might regression another find nt pass error", "num": "7786", "d": "3/2018"}, {"title": "ssr async component functional typeerror read property ctor undefined", "body": "version reproduction link steps reproduce server rendering component asynchronously also functional errors thrown console particular repo vue hacker news fails first time reason works subsequent request thing works fine done browser nonssr expected errors thrown correct html produced server actually happening error thrown console html produced", "num": "7784", "d": "3/2018"}, {"title": "render lists nested comments", "body": "request help comment json field called parentid know structure visually id parentid userid comment comment since days ago id parentid userid comment comment since days ago render nested list dynamic vuejs", "num": "7783", "d": "3/2018"}, {"title": "checkbox binding working", "body": "version reproduction link steps reproduce create data property named value create input element checkbox type template bind value attribute value property run code check uncheck checkbox observing value property expected value property checkbox check state actually happening value property always false working firefox chrome also tried using checked attribute input element ca nt use vmodel mechanisms code", "num": "7782", "d": "3/2018"}, {"title": "checkbox binding working chrome", "body": "hi using chrome vue try bind value checkbox variable always false problem exist firefox tried value checked properties working cant use vmodel mechanisms code vue export default name test props value required true", "num": "7780", "d": "3/2018"}, {"title": "use transition routerview component use vfcuse animation lose frame", "body": "use transition routerview component use vfcuse animation lose frame use vuecli appvue html javascript export default name app data return transitionname slideleft watch route const todepth topathsplit length const fromdepth frompathsplit length consolelog todepth fromdepth thistransitionname todepth lt fromdepth slideright slideleft consolelog thistransitionname css slideleftenteractive slideleftleaveactive sliderightenteractive sliderightleaveactive willchange transform transition height top position absolute backfacevisibility hidden perspective slideleftenter opacity transform slideleftleaveactive opacity transform sliderightenter opacity transform sliderightleaveto opacity transform router component html javascript export default directives focus inserted function el elfocus load component reload animation lose frame", "num": "7779", "d": "3/2018"}, {"title": "single file component pass contextdata", "body": "version reproduction link steps reproduce look codesandbox expected issues actually happening error", "num": "7778", "d": "3/2018"}, {"title": "use functional components inside transitiongroup", "body": "version reproduction link expected actually happening \u6e32\u67d3\u5931\u8d25", "num": "7777", "d": "3/2018"}, {"title": "vue transitiongroup \u4e2d\u6e32\u67d3\u51fd\u6570\u7ec4\u4ef6\u62a5\u9519", "body": "version reproduction link steps reproduce const tag vuecomponent cpttag functional true render h c return h span tag expected actually happening \u6e32\u67d3\u5931\u8d25", "num": "7776", "d": "3/2018"}, {"title": "properties starting others starting", "body": "problem feature solve proposed api look like", "num": "7775", "d": "3/2018"}, {"title": "different results", "body": "version reproduction link steps reproduce vue init webpack vuedemo change mainjs template gt gt template get vue warn change indexhtml gt gt rendered string get different results expected get results actually happening get different results", "num": "7774", "d": "3/2018"}, {"title": "default slot replaced also executed throw errors", "body": "version reproduction link steps reproduce chid default slot render incorrect data expected replace execuite actually happening execute throw unrelated errors background", "num": "7773", "d": "3/2018"}, {"title": "functional component ca nt render multiple root nodes functional components", "body": "version reproduction link steps reproduce observe jsfiddle link expected see times actually happening renders instead functional component", "num": "7772", "d": "3/2018"}, {"title": "extended global vue use plugins", "body": "version reproduction link steps reproduce open simple use case see error console expected written issue vueextend work expected code create new global vue instance installa plugin used component template actually happening console error due method found wrote reproduction fiddle starting evan one set function directly plugin global vue like works", "num": "7771", "d": "3/2018"}, {"title": "simple current solution constants ref", "body": "recommend adding current solution constants docs import constants foo constants computed constants gt constants", "num": "7770", "d": "3/2018"}, {"title": "configurable document reference", "body": "problem feature solve using vue components containing html styles want use container wrapped iframe using following code rendered html gets injected properly generated style tag gets injected default main document head element makes sense case cause isolated rendered html one solution would option configure custom document object another option would make sure html styles get injected isolated context document would prefer first one proposed api look like vueoptionsdocument myiframecontentdocument vuedocument vueoptionsdocument document", "num": "7769", "d": "3/2018"}, {"title": "webassembly ideas", "body": "problem feature solve webassembly integration compilation performance proposed api look like came across interesting project bringing webassembly net core jsworld together browser brainstorm future future inspiration could imagine could work integrated vue workflow logic making dll plugin fork etc components layouts vuex communication creating kind integration package whatever comes mind bringing ideas incrementally adoptable could could use vue goodness thanks feedback cs counter current count currentcount functions int currentcount", "num": "7768", "d": "3/2018"}, {"title": "render function called whenever computed value dependency updated though value nt change", "body": "version reproduction link steps reproduce open jsfiddle link see console output expected render function nt called actually happening render function called even nothing changed creates unnecessary render function calls leads performance issues component complex render function calls nt cheap", "num": "7767", "d": "3/2018"}, {"title": "add expose html attribute escape function", "body": "problem feature solve instantiate vue components markdown runtimegenerated html generated html provides mount point uid must properly attributeescaped trivial see link vue already attributeescape function exposed api please consider adding one many use cases vue components markdown case extending markdown support fillable forms generated schema external markdown proposed api look like vueattrescape string returns string vueattrunescape string returns string much attribute escaping", "num": "7766", "d": "3/2018"}, {"title": "make warning messages explicit", "body": "problem feature solve seeing warning message like would great vue could display actual values encountered instance immediately seeing would speed development proposed api look like api changes", "num": "7764", "d": "3/2018"}, {"title": "using boolean string props boolean work properly", "body": "version reproduction link steps reproduce create component property types attribute nt behave like normal boolean value anymore instead gets discarded empty string expected would expect attribute vbind attribute output actually happening adding string prop type well attribute version working", "num": "7763", "d": "3/2018"}, {"title": "custom directive inserted hook element moved inserted hook ended", "body": "version reproduction link steps reproduce click button expected focused actually happening focused something else cause blur immediately bug discovered stack overflow question together acdcjunior example clicking button console log inserted hook callback moved particular reason caused element blur see details answer", "num": "7761", "d": "3/2018"}, {"title": "sfc invalid root tag structure throw error", "body": "moved vueloader problem feature solve single file component tag may may closed works html chicken chicken export default data return chicken fried eof however lt style gt nt lt style gt styles simply ignored without warning errors html chicken chicken export default data return chicken fried", "num": "7760", "d": "3/2018"}, {"title": "transition class removed hidden element changes fast vshow", "body": "version reproduction link steps reproduce change value vue really fast transition wo nt remove leaveto class expected label shown actually happening label nt shown app redirected page supposed app header redirected another page header missing anyway", "num": "7759", "d": "3/2018"}, {"title": "unclear update schedule", "body": "regular releases halted dec unusually long delay next update usually github one provides milestone points going terms next update old ones issues please update maintain milestones would gives clear picture project terms next updaterelease people know expect", "num": "7758", "d": "3/2018"}, {"title": "using proxies instead gettersetters", "body": "problem feature solve proxies allow transparent reactivity without need vueset vm set improved performance proposed api look like changes existing api except deprecating vueset vm set internal changes", "num": "7757", "d": "3/2018"}, {"title": "adding removing style rules like sub rules applied", "body": "version reproduction link steps reproduce add set value click add see box red click remove check box expected box gray actually happening box bug found matwaligora discord problem update styles reapply properties already applied browser apply modify etc think styles need reapplied setting side effects need reapply properties probably rules like", "num": "7756", "d": "3/2018"}, {"title": "use vue develop static websites", "body": "need develop static website like image static web may pages use vue make things like html bootstrap better aother technich use question anyone familiar static web answer thanks advanced", "num": "7754", "d": "3/2018"}, {"title": "use vue develop static websites", "body": "need develop static website like image static web may pages use vue make things like html bootstrap better aother technich use question anyone familiar static web answer thanks advanced", "num": "7753", "d": "3/2018"}, {"title": "please support native", "body": "problem feature solve want catch click event parent component child component support click event used eladdeventlistener project think clicknative supported better proposed api look like mounted function parent clicknative e gt consolelog clicknative", "num": "7752", "d": "3/2018"}, {"title": "file componentshelloworldhelloworldvue module refactoring boilerplate using", "body": "version reproduction link steps reproduce clone repository run run expected dev run start without errors actually happening file module error edit replacing causes error go away nt happen alias", "num": "7751", "d": "3/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u4e0b\u5982\u679c\u63a7\u4ef6\u6709placeholder \u5c5e\u6027 \u5982\u679c\u6709\u9ed8\u8ba4\u503c\u66f4\u65b0\u53c8\u6b63\u5e38\u7684 expected actually happening", "num": "7750", "d": "3/2018"}, {"title": "listeners cleaned upon component reuse", "body": "version reproduction link steps reproduce html var testcom template lt div click emit test gt lt slot gt lt div gt var vm new vue data ok true el root template lt testcom vif ok test onclick gt ok lt testcom gt lt testcom velse gt ok lt testcom gt methods onclick consolelog clicked new date components testcom settimeout gt vmok false expected ok actually happening \u663e\u793a ok", "num": "7749", "d": "3/2018"}, {"title": "proposition better compatibility jquery native events", "body": "problem feature solve model input jquery work works checked internal jquery looking method works begin vuejs suppose better way find automatically function created better integration jquery simplify transition existing code suppose allow better compatibility jquery plugins said begin vue let know wrong better way proposed api look like final code propose think way add functions vue binding cases think vue section jquery documentation somewhere else", "num": "7748", "d": "3/2018"}, {"title": "please update api doc modifier", "body": "please update api doc modifier", "num": "7747", "d": "3/2018"}, {"title": "scrollbehavior use", "body": "using version scrollbehavior api use code mode history scrollbehavior savedposition savedposition consolelog savedposition return savedposition else return x", "num": "7746", "d": "3/2018"}, {"title": "\u62a5\u9519invalidcharactererror vueminjs", "body": "version reproduction link steps reproduce \u4f1a\u62a5invalidcharactererror \u9519\u8bef \u9875\u9762\u7a7a\u767d expected error actually happening \u62a5\u9519invalidcharactererror", "num": "7745", "d": "3/2018"}, {"title": "\u62a5\u9519invalidcharactererror", "body": "version reproduction link steps reproduce \u4f1a\u62a5invalidcharactererror \u9519\u8bef \u9875\u9762\u7a7a\u767d expected error actually happening \u62a5\u9519invalidcharactererror", "num": "7744", "d": "3/2018"}, {"title": "\u62a5\u9519invalidcharactererror vueminjs", "body": "\u4f1a\u62a5invalidcharactererror \u9519\u8bef \u9875\u9762\u7a7a\u767d vue\u7248\u672c vuejs", "num": "7743", "d": "3/2018"}, {"title": "ability disable compilation child nodes", "body": "version steps reproduce option disable interpolation via directive way disable parsing compiling custom components common case tags contain text custom components use component tried lot options reach required functionality still nothing would grateful could introduce way thanks expected way disable compilation child nodes actually happening clear way", "num": "7742", "d": "3/2018"}, {"title": "ability disable compilation child nodes", "body": "option disable interpolation via directive way disable parsing compiling custom components common case tags contain text custom components use component tried lot options reach required functionality still nothing would grateful could introduce way thanks", "num": "7741", "d": "3/2018"}, {"title": "allow slotscope set defining component", "body": "problem feature solve set component child component defines scoped slot fails set defining component default scoped slot setting parent allowed would remove unnecessary pair tags cases make templates cleaner mainly confusing inconsistent get error nt defined code code proposed api look like", "num": "7740", "d": "3/2018"}, {"title": "allow override vmodel callback", "body": "problem feature solve great bind form fields child components data fields unfortunately currently use component props vmodel effectively prop would change prop allowed would possible change custom callback could instead example emit event form field gets changed way could directly use props nt need copy props data fields proposed api look like component whose template contains add configuration option takes function called child component emits model event see complete example course throws warnings changing data nt actually supported yet", "num": "7736", "d": "3/2018"}, {"title": "components init value", "body": "problem feature solve dictionary object certain value dictionary arrary items items like provider id name para name name beijing component edit item try edit para use another component first level component like level component show give error property method inputdict defined instance referenced render make sure property reactive either data option classbased components initializing property see think first level dict object determind yet initiallize secondary level dictionary set initilal value components find props value set proposed api look like export default props components dictinput dictinput inputdict key value key value inputdict key value key value initial value component later rending bind value later", "num": "7732", "d": "3/2018"}, {"title": "problem vmodel end spaces", "body": "version reproduction link steps reproduce create input vmodel like try change value expected value model change actually happening value model nt change creates new property object ended space like obj value", "num": "7730", "d": "3/2018"}, {"title": "recursive calls creates", "body": "tableitemvue text text text tablevue error vue warn failed mount component template render function defined found recursive calls recursive calls creats", "num": "7728", "d": "3/2018"}, {"title": "access created hook component options using typescript", "body": "version reproduction link steps reproduce see error follows expected expect webpacktypescript compile finish without errors value function actually happening typescript definitions allow access however exist runtime trying follow vue unit testing guide shown first example gives test therefore believe test also work typescript nt work perhaps documentation bug instead code bug", "num": "7727", "d": "3/2018"}, {"title": "template ca nt use vtext directive", "body": "version reproduction link steps reproduce check appvue file see template working expected would expect vtext work template eg inject text received data function actually happening throwing error", "num": "7726", "d": "3/2018"}, {"title": "clicknativestop possible", "body": "several nested components page parents component implementation therefore click area occupied child component living inside parent click actions executed parent nested children example list multiple products click canvas belonging modal dialog also get fired productdetails modaldialog belongs would nice something like possible right clicknative clickhandler methods clickhandler e estoppropagation consolelog e code vue ready please upload new image upload add images upload images hello world import modaldialog componentscommonmodaldialog export default components modaldialog props files default gt type array data return upload false computed obtain single image media array getmedia const media thisfiles return media methods clickhandler e estoppropagation consolelog e mediamanager img maxwidth height auto cursor pointer", "num": "7725", "d": "3/2018"}, {"body": "sorry bug vue nested close", "d": "3/2018"}, {"body": "promised looking options moving tests chrome headless test failing chrome headless hence fix anything else holding vue back move", "d": "3/2018"}, {"body": "works fine please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "use statement discouraged may result forwardincompatible code supposed readonly", "d": "3/2018"}, {"body": "leopiccionia known vuejs use oh noo method works problems scope", "d": "3/2018"}, {"body": "use new function instead eval", "d": "3/2018"}, {"body": "closing nt even provide reproplayground hacking way around vue talk forum chat instead explain trying achieve", "d": "3/2018"}, {"body": "looking looseequal handle dates correctly added check dates looseequal sure best way go could use second pair eyes", "d": "3/2018"}, {"body": "time think suggested solution use render function result array items", "d": "3/2018"}, {"body": "ejweiler supported functional component", "d": "3/2018"}, {"body": "sqal need output multiple elements root level component might current option use functional component", "d": "3/2018"}, {"body": "duplicated", "d": "3/2018"}, {"body": "much better would comfortable way similar way riot opts nt look like api propose html looks much like simply passing creating instance looks like adding properties props could imply", "d": "3/2018"}, {"body": "thanks linusborg quick response tried implement example propsdata like nt work nothing appears template vue browser extension tells undefined html javascript import vue vue import myroot myrootvue const el documentgetelementbyid myroot new vue el el propsdata eldataset render h gt h myroot hello firstname export default props firstname however even would work several downsides assumes working ids let myroot call pagination want one pagination page need specify options props within template vue file maybe wrong overseeing something nt seen way yet pipe data markup non vue origin template least way easy riot really simple custom tag markup vue root elem custom attr like easy access tag file vue component template via propsdata solution nt meet demand", "d": "3/2018"}, {"body": "update found way works although somehow nt feel straight forward looks like time using pagination realistic example homehtml html lorem ipsum srcpaginationjs srcpaginationvue vue current page optspage export default data return opts rootopts easier way nt think need simplify via vue may close feature request", "d": "3/2018"}, {"body": "previous two comments two suggestions wo nt able drop right might give something consider try vue instance wrapped html closer level body could pass variables like paginationvue template paginationjs template alternatively possible solve plugin inspired way using vuex gives stores children could make plugin provides props components javascript const useroptionsfromserver const userdataplugin install vue vuemixin created thisopts useroptionsfromserver vueuse userdataplugin", "d": "3/2018"}, {"body": "thank ejweiler help correct wrong template syntax example requires vue compiler client right interpreted vue runtime reason breaking components pagination search etc independent files instead one big bundled appjs want load less code page possible thus using vue without compiler since html gets build backend ca nt precompile ssr vue option thus precompile vue files way posted one found far let include component page different dataoptions backend", "d": "3/2018"}, {"body": "sassninja nt realize constraints option trying plugin", "d": "3/2018"}, {"body": "try", "d": "3/2018"}, {"body": "uhm feel slightly stupid always worked way", "d": "3/2018"}, {"body": "already works added minor releases back think also works way lifecycle methods would helpful well think seems missed document opened issue", "d": "3/2018"}, {"body": "alright thanks fast", "d": "3/2018"}, {"body": "also happens latest version vuejs", "d": "3/2018"}, {"body": "well move definition async component render otherwise recreate move save component instance", "d": "3/2018"}, {"body": "issue partially resolved end goal dynamic component creation asynchronously exactly like asynchronously addition create called twice vuecomponent create vueextend template create header", "d": "3/2018"}, {"body": "already opened topic nun forum please ask additional questions issue resolved since bug present", "d": "3/2018"}, {"body": "linusborg thanks replied forum", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "3/2018"}, {"body": "well empty array beginning nonexistant things usually easier js classic events internal property anyway discourage using applications", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "might variable shadowing problem", "d": "3/2018"}, {"body": "zllovesuki dont think could problem changed variable names issue persists", "d": "3/2018"}, {"body": "indeed skipping callbacks sure easily fixable without breaking something else", "d": "3/2018"}, {"body": "hello changes go might solve confusion", "d": "3/2018"}, {"body": "yeah know nt really understand get error duplicates slot rerender", "d": "3/2018"}, {"body": "reported instead", "d": "3/2018"}, {"body": "object rather path string read parse outside", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "\u5e76\u4e0d\u662f\u6587\u4ef6\u8def\u5f84", "d": "3/2018"}, {"body": "likely case props oldprops newprops refer object", "d": "3/2018"}, {"body": "ca nt create component whose kebabcase name name html tag names reserved suggestion name kebabcased", "d": "3/2018"}, {"body": "know reserved however vue handles fine use pascalcase naming template component replacing slots working properly example", "d": "3/2018"}, {"body": "leopiccionia said nt name components html tag names better prefix component", "d": "3/2018"}, {"body": "short think need support syntax", "d": "3/2018"}, {"body": "intention directive wrote huge fan using object syntax html code argument feature subjective opinion could also say click already short enough nt need proposal nt aim short solution also offer better syntax use case single class bound", "d": "3/2018"}, {"body": "syntax would helpful single file components inline templates would require template compiler updates html attributes case insensitive used browser would end class would say definitely worth trouble", "d": "3/2018"}, {"body": "ok valid point close request keep using custom directive projects", "d": "3/2018"}, {"body": "marked bug improvement sure intended work could also improvement", "d": "3/2018"}, {"body": "test right sure happen without vue", "d": "3/2018"}, {"body": "indeed behavior different ie related vuejs fiddle problem without vuejs code", "d": "3/2018"}, {"body": "found could update even invoke modify data", "d": "3/2018"}, {"body": "something vue fix ie breaks dom nodes replaced innerhtml", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "3/2018"}, {"body": "typo simply", "d": "3/2018"}, {"body": "sirlancelot sorry", "d": "3/2018"}, {"body": "looks like duplicate using typescript issue please provide example github repo reproduce", "d": "3/2018"}, {"body": "exactly duplicate breaks overloading function last alternative overloading picked type nt included workaround manual annotation ts import vue propoptions vue vueextend props myprop type array propoptions", "d": "3/2018"}, {"body": "recommended read documentation carefully create issue child component update foo value needs explicitly emit event instead mutating prop", "d": "3/2018"}, {"body": "thanks solved adding input emit update input input textfield", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "think responsibility developers framework", "d": "3/2018"}, {"body": "hi thanks filling issue developers enable warnings development", "d": "3/2018"}, {"body": "fnlctrl yes right responsibility developers fucking project enable warnings access repertory setup framework makes wasting much time fixed problems like read property withtask undefined", "d": "3/2018"}, {"body": "hi looks like mixed custom component events native dom events modifier dom events please check revision demo see whether meets expectation", "d": "3/2018"}, {"body": "get mixup modifiers however expectation clickstop fire node bubble see console see event bubbling end whole tree data instead clicked node", "d": "3/2018"}, {"body": "click event fires toggled event manually bubbled everything looks fine", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "3/2018"}, {"body": "believe documentation problem constructor vue subclass created", "d": "3/2018"}, {"body": "first argument function async factory finally resolve component definition see", "d": "3/2018"}, {"body": "maybe documentation changed clearly states html tag name component options function returning one required", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "3/2018"}, {"body": "\u6211\u53ea\u662f\u5efa\u8bae \u554a", "d": "3/2018"}, {"body": "test edge right may related name edge giving name actually failing good first issue fix wrong fix help someone get contribution", "d": "3/2018"}, {"body": "woohoo managed break something", "d": "3/2018"}, {"body": "give issue try", "d": "3/2018"}, {"body": "cause welcome", "d": "3/2018"}, {"body": "coordinate using getboundingclientrect method get value getboundingclientrect method value display none change line vuejs c block c c value taken", "d": "3/2018"}, {"body": "hey wlkuro believe right cause supposed make changes dist files self generated file change suggested work", "d": "3/2018"}, {"body": "wlkuro think better solution add element execute like", "d": "3/2018"}, {"body": "see exactly entercb", "d": "3/2018"}, {"body": "sorry seeing pr entercb executed enter transition finished move transition triggered think better similar behavior executed would lose enter transition", "d": "3/2018"}, {"body": "related vue best case could related vueloader please consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "3/2018"}, {"body": "key usually attribute object passed component case still create prop named key pass property use key", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "3/2018"}, {"body": "ssr", "d": "3/2018"}, {"body": "jounqin", "d": "3/2018"}, {"body": "\u722c\u866b\u8bbf\u95ee\u9875\u9762\u4e0d\u4f1a\u6267\u884c", "d": "3/2018"}, {"body": "um case using symbol polyfill vue recognize properly prop types checking", "d": "3/2018"}, {"body": "jkzing nt explicitly add symbol polyfill new barebones vuejs build understanding documentation vuejs supports symbol prop type box ca nt seem find information different way use symbol prop types", "d": "3/2018"}, {"body": "seems working native symbol use build setup probably polyfills symbol based browser targets targeting typically suboptimal use symbol polyfills targeting browsers native symbols make sure tweak browser target either way bug vue core likely setup issue vuecli webpack template", "d": "3/2018"}, {"body": "sounds good try perhaps still bug warning message generated though think see expected prop type rendered blank right comma", "d": "3/2018"}, {"body": "\u4f60\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a\u6587\u4ef6 import \u4e4b\u540e declare \u554a", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "feature request want report bug use proper format", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "3/2018"}, {"body": "already unless nt really understand mean", "d": "3/2018"}, {"body": "mean give way proxy props elsewhere avoid data name conflict indeed possible add local prefix data attribute idea items example sometimes would like declare data attribute name prop possible thanks quick reply", "d": "3/2018"}, {"body": "really related vue setting value input cursor resets read set", "d": "3/2018"}, {"body": "please provide reproduction repo issue seems libraries outdated typing", "d": "3/2018"}, {"body": "please nt use issues ask questions", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "linusborg remember components reused default least versions prior behavior change intentional probably documented", "d": "3/2018"}, {"body": "new behaviour vue always reused components situation like vfor splice array", "d": "3/2018"}, {"body": "right tested older versions behavior though still think surprising behavior component state reused instead dom state indicated document", "d": "3/2018"}, {"body": "yes surprising new users expected anyone familiar virtual dom implementation also think talk section explains use context improve docs effect vuejsorg repository issue closed", "d": "3/2018"}, {"body": "imho cases proxy events would intuitive case want different things different events vue onanyevent eventname eventargs switch eventname case click case input vue", "d": "3/2018"}, {"body": "vue security rule never ever feed untrusted content template compiled vue period nothing vue save xss", "d": "3/2018"}, {"body": "understand argument vue supposed parse template even using html entities example would never feed vue component directly input server rendered page common serverrendered content unfortunately goes inside app root aside using directive one supposed properly escape user input serverrendered pages tailor every specific page restrict vue app root strict safe context", "d": "3/2018"}, {"body": "believe ranting trying solve problem believe many devs worried based reading sorry poor english common vue app root top level element render generic server side content inside interact vue app imagine user profile malicious user changed name xss string another idea way completely disable braces interpolation allowing usage directives know change delimiters vue app something esoteric option completely disable braces interpolation allow render directives suppose app would run faster problems would solved write components using would nt difficult migrate braces usage thanks advance sorry sounded rude anyway", "d": "3/2018"}, {"body": "problem essentially telling vue compile template usergenerated content source exactly like user put content file template part add see vue compiler sees template solve could either put escaped user content js variable replace double curly braces something else", "d": "3/2018"}, {"body": "example", "d": "3/2018"}, {"body": "akryum tried replacing double curly braces html entity equivalent seems javascript read dom tell html entity actual curly brace understand never use user generated content inside vue component imagine enhancing existing traditional serverbased app slowly use vue components common approach far could find tutorials vue app root element encloses app content unfortunately enhancement approach user generated content could fall inside vue app root way disable double curly braces completely would solve problem generally use render content know change delimiters something esoteric bypass project working limitation time completely rewrite spa could disabled imagine app would faster would check templates fiddling runtimeonly version could get work yet nt know asking thanks attention", "d": "3/2018"}, {"body": "akryum tried replacing double curly braces html entity equivalent seems javascript read dom tell html entity actual curly brace html entities entities encode characters html javascript get real decoded one except sensitive ones fiddling runtimeonly version could get work yet nt know asking wo nt help nt template compilator made work wrapping tags nt need convert html entities", "d": "3/2018"}, {"body": "akryum clever solution worked flawlessly thanks lot", "d": "3/2018"}, {"body": "see point would pretty huge breaking change would wait vue long time away", "d": "3/2018"}, {"body": "thining loud hand could maybe transform slots object way replaces propertys like getter lazily evaluates vnodes would keep public api intact would nt hm otoh would nt work using render functions would", "d": "3/2018"}, {"body": "hmm talking could find current behavior defined inside api maybe wrong nt see anyone would rely expressions evaluated result discarded anyways saying possible solution thinking breaks changes ca nt use behavior latter example extrapolate ah ok people might want access content inside component defines slot referring right evaluated differently using slot scopes look code", "d": "3/2018"}, {"body": "maybe compromise would add attribute internally acts slot scope defined allow usage attribute without actual value assignment would break anything costs line code opens room dom optimisations using slots srccompilerparserindexjs edit ah incomplete get idea make simply alias", "d": "3/2018"}, {"body": "hmm talking could find current behavior defined inside api maybe wrong nt see anyone would rely expressions evaluated result discarded anyways point example render function resulting template looks roughly like computed prop evaluated parent order generate vnodes passed component available current publi api guarantees returns array vnodes content passed default slot parent vnodes already generated parent skipping evaluation parent would require something like scoped slots namely wrapping code generates slot vnodes kind function would pass child according public api nt return function returns array vnodes would find way evaluate function someone accesses keep api consistent return array vnodes initial gut reaction replace e g prop getter allow us evaluate function property accessed gut reaction though", "d": "3/2018"}, {"body": "already got thanks lot depth explanation using getter sounds good nt tests define api passes current tests would good go anyways another solution case really pressing issue keep good work cheers", "d": "3/2018"}, {"body": "really like see vue performance reasons would allow us conditionally render things slots provide concrete use cases interested currently possible scoped slots however ca nt declare scoped slot without slotscope nt plausible solution nt props pass slot", "d": "3/2018"}, {"body": "nt see conditional rendering possible well yeah vnodes created parent matter part equation performance set aside nt think point", "d": "3/2018"}, {"body": "playing around idea using slots conditionally render templates state available application consider following component vue export default computed user return storestateuser could use remove conditionals child component render available vue username export default computed user return storestateuser username need check user exists guarded execution ifloggedin return storestateuserfirstname storestateuserlastname possible scoped slots currently scoped slots exist declare something attribute", "d": "3/2018"}, {"body": "found solve metro must initialized hook thank vuejs", "d": "3/2018"}, {"body": "part backend code", "d": "3/2018"}, {"body": "unfortunately related vue able find answer stackoverflow also seek help forums", "d": "3/2018"}, {"body": "rely defined vue instance need add root instance prototype vue access everywhere", "d": "3/2018"}, {"body": "need put template outside app template vue lt div gt v lt div gt", "d": "3/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "3/2018"}, {"body": "hi please make sure follow issue reporting guidelines opening issue provide repro reporting bug thanks", "d": "3/2018"}, {"body": "leaving callbacks trigger late change template wo nt render anymore need display something different need delay toggling one tick wrapping transition component manually delaying hiding hacky version would modify element manually component actually destroyed leaving transition happens", "d": "3/2018"}, {"body": "idea proposed", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "passing string instead number usually warning using minified version", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "literal prop passed string number", "d": "3/2018"}, {"body": "thank information helpful understand issue literal prop string passed vbind prop somehow coerced still think documentation make mention however obvious mistake make trying use prop range parameter immediately obvious thing technical editor add paragraph saying something along lines note rangeparameter may property component property must integer followed example mistake example working solution also nt get warning jsfiddle using minified file real dev environment using full esm even shows warnings like developmentmode warning never saw warning chances discovering cause solution basically nil", "d": "3/2018"}, {"body": "coerced use binding whatever quotes evaluated javascript difference like vs javascript", "d": "3/2018"}, {"body": "get warning technically possible iterate string vfor well", "d": "3/2018"}, {"body": "think order rendering functional components rendered child using slot gets rendered case normal components", "d": "3/2018"}, {"body": "think might unwanted right solving depending current behavior seems fragile", "d": "3/2018"}, {"body": "related seem odd failures bootstrapvue several people flagged occuring beforehand", "d": "3/2018"}, {"body": "want shorthand use arrow function less magic javascript", "d": "3/2018"}, {"body": "also think necessary note prop validation stripped production builds beware objects enum though", "d": "3/2018"}, {"body": "less magic javascript want less magic maybe quite vue current shorthand syntax would unnecessary even case actually shorthand type checking imo depends whether folks think use array value clear enough stands validating enum values btw needs polyfilled write want wider browser support although nt cost much bothers quite developers including repeat every single time beware objects enum though cases enum values primitive ignore objectarray values warn", "d": "3/2018"}, {"body": "implied behavior indeed ambiguous regarding objectsarrays handled actually think better explicit", "d": "3/2018"}, {"body": "tested firefox nightly seems gone gif firefox reflects op saying nt appear always", "d": "3/2018"}, {"body": "hmm noticed nt reset id counter removing item works fine", "d": "3/2018"}, {"body": "think triggers component renders empty list items add new one reactives item already animation happens ideally deactivate component transition finished keepalive component would nt make sense use vshow without keepalive", "d": "3/2018"}, {"body": "warning appears try override prop value component modifying array still possible discouraged indeed emit event parent modify array javascript behaviour regarding objects passed reference would costly watch every single property observed sake development warning", "d": "3/2018"}, {"body": "component option like etc prop", "d": "3/2018"}, {"body": "yep defined export files using name prop could little confusing apologies also tried prop original project sheer desperation", "d": "3/2018"}, {"body": "test right seen", "d": "3/2018"}, {"body": "looks right little unintuitive must got frustrated document put following mainjs everything right world js import entitycomponent componentsretrieveentitycomponent import relationshipcomponent componentsretrieverelationshipcomponent vuecomponent entitycomponent entitycomponent vuecomponent relationshipcomponent relationshipcomponent thanks pointer posva", "d": "3/2018"}, {"body": "possibly related", "d": "3/2018"}, {"body": "seems explained see also", "d": "3/2018"}, {"body": "please read document first simple", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "mixin", "d": "3/2018"}, {"body": "thanks", "d": "3/2018"}, {"body": "normal long value object agree notice docs would helpful please directly open pr docs repo", "d": "3/2018"}, {"body": "trigger certainly document objectarray case works", "d": "3/2018"}, {"body": "nt manually move dom controlled vue think looking portal implementation", "d": "3/2018"}, {"body": "posva understood ca nt vue give warningsuggestion instead breaking understand likely edge case though", "d": "3/2018"}, {"body": "something users supposed may hard vue detect things prs kind things usually accepted impact users performance undesired warnings specific scenario may difficult find right spot nt think worth adding prooved wrong", "d": "3/2018"}, {"body": "creating custom component userland use case forcing content seems specific use case even shorter", "d": "3/2018"}, {"body": "posva problem although zerowidth space supposed invisible produce extra line box acts like following elements slightly different nothing actual use case creating layout component possible different parts optional eg may component like vue alert content bordertop solid ccc content firstchild bordertop none slot title empty use like html something went wrong oops something went wrong something went wrong although use prop control rendering optional slot may easier type providing special syntax component like automatically makes slots clearable otherwise component authors may provide different ways handle scenario btw earlier today discussed jinjiang found clearing named slot nt possible according current webcomponents implementation would creates another problem vue components compiled wcs found currently seems named slots wcs accept already different vue slot implementation sure", "d": "3/2018"}, {"body": "last comment interesting tried empty string seems work well updated comment", "d": "3/2018"}, {"body": "posva inserts actual html element makes selectors like nt work expected", "d": "3/2018"}, {"body": "damn tested chrome", "d": "3/2018"}, {"body": "afraid nt work even chrome case element nt match", "d": "3/2018"}, {"body": "kind fence whether vue allow clearing slot fallback core seems little hacky possible get exactly want userland though created sample update turns nt use functional component works", "d": "3/2018"}, {"body": "turns nt use functional component works confirmed feels like real hack functional component renders nothing behaves differently normal one may unwanted consistency vue handle slot contents vue clear slot provide nothing slot later considered bug fixed guarantee future versions would nt happen hack", "d": "3/2018"}, {"body": "sirlancelot issued bug report current behavior nt think expected", "d": "3/2018"}, {"body": "probably mean way around foo vuecomponent foolink true vuecomponent foolink false true", "d": "3/2018"}, {"body": "posva right sorry bad recently tried use vuerouter nt work looked repo saw got confused however actual released version using still", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "3/2018"}, {"body": "check find need", "d": "3/2018"}, {"body": "definitely something weird going added log functional component render function inspect slots received weird thing rendered twice explained receives slot namedslot default even though setup", "d": "3/2018"}, {"body": "afraid render right see", "d": "3/2018"}, {"body": "gebilaoxiong sure test case applies situation elaborate test case linked incorporates one functional component passing slot content another different situation issue", "d": "3/2018"}, {"body": "linusborg simple example think difference understanding template compb compb rendered generates structure similar follow html text render stateprop compa rendered slots think render right", "d": "3/2018"}, {"body": "perhaps deleted compb rendered maybe right", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "replaces element whole replace element whole interpolates useful want mix literals", "d": "3/2018"}, {"body": "leopiccionia thanks additional info still curious performance like ones use less resources etc suggesting braces may use resources need interpret mixed literals", "d": "3/2018"}, {"body": "issue losed", "d": "3/2018"}, {"body": "nt understand asking want way display placeholder component nested async components loaded", "d": "3/2018"}, {"body": "yes sorry wording confusing mon mar evan notifications githubcom wrote nt understand asking want way display placeholder component nested async components loaded receiving authored thread reply email directly view github mute thread", "d": "3/2018"}, {"body": "unfortunately something easily done vue moment somewhat doable userland know components may loaded tree tricky get right suggestion avoid oversplitting since nested async components result waterfall requests", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "duplicate", "d": "3/2018"}, {"body": "others may run problem possible get lot better performance push waiting nexttick shift multiple pushs shifts happen cycle without triggering issue", "d": "3/2018"}, {"body": "working expected js becomes nt valid number", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "whan qkdreyer said", "d": "3/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "3/2018"}, {"body": "think bug", "d": "3/2018"}, {"body": "bugs need provide minimal repro", "d": "3/2018"}, {"body": "bug occurs situationi cant reproit strange erroranyway going ask forum", "d": "3/2018"}, {"body": "solved someone gets error even code right make sure named componentsi named components dont get error", "d": "3/2018"}, {"body": "set throws aways current textnodes inside element creates new ones however vue still holding textnodes subsequent updates note recommended mutate nodes via unless absolutely need said change text without replacing text nodes use", "d": "3/2018"}, {"body": "happens firefox chrome", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "need ur help could u plz fix", "d": "3/2018"}, {"body": "mentioning evan get help faster read every issue priorize issues accoring grater needs vue ecosystem", "d": "3/2018"}, {"body": "using converting instance vnode like object reason seeing expected result although usage worked previous version recommend use standard way vue vuecomponent valuevnode functional true render h props gt propsvalue", "d": "3/2018"}, {"body": "hhm sure whole vnode type gets lost need bind one value use one single prop pretty much jkzing said writing comment got published", "d": "3/2018"}, {"body": "op usage covered board usage support nonplain object hand returning non vnode data render function nt make much sense might invalidate js engine type speculation might harm runtime performance sure", "d": "3/2018"}, {"body": "jkzing maybe helper function change use clonevnode", "d": "3/2018"}, {"body": "actually pretty agree herringtondarkholme render function return vnode data returning non vnode object working previous version warning would reasonable fix", "d": "3/2018"}, {"body": "jkzing nt think vbind alias like jsx case work like vbind mean bind something whatever u nt want support u guys change think", "d": "3/2018"}, {"body": "bind something whatever sadly vue works vue vnode two fields handled differently internally means vue create two separate objects extract props attrs hand react flavor jsx one props passing object makes sense", "d": "3/2018"}, {"body": "herringtondarkholme matter work meaning u guys change", "d": "3/2018"}, {"body": "well nt get define means", "d": "3/2018"}, {"body": "herringtondarkholme jkzing linusborg works well untill breaking change", "d": "3/2018"}, {"body": "breaking change", "d": "3/2018"}, {"body": "works well untill breaking change never intended work breaking change u guys change vbind vbind object hand would big breaking change props named would longer work expected", "d": "3/2018"}, {"body": "linusborg u guys fix nt", "d": "3/2018"}, {"body": "ringt still nt see fix since worked first place far tell far far understand right nt see anything fix maybe find way improve behaviour could also document bit better improve men found", "d": "3/2018"}, {"body": "linusborg key point render return works untill nt work u guys say nt work ok could u please give api like make work import class", "d": "3/2018"}, {"body": "yozman already gave proper usage want pass vnode via props rather whole vnode explicitly bind prop like", "d": "3/2018"}, {"body": "jkzing think trick solution ok u guys nt like jsx support think support", "d": "3/2018"}, {"body": "jkzing ui library support thousand user fxxking breaking change u know", "d": "3/2018"}, {"body": "need swearing simply lock issue ca nt discuss civil manner", "d": "3/2018"}, {"body": "without argument works example explained nt used way really persist using without argument like js vuecomponent opvnode functional true render h props gt propsnode vuecomponent oprow template", "d": "3/2018"}, {"body": "breaking change never intended work considered breaking change usage explicitly documented public api library thousands users nt mean get demand arbitrary changes vue valid workaround suggested multiple times need update implementation publish patch release library instead waiting vue change received warning swearing blocked vue repositories", "d": "3/2018"}, {"body": "got sorry bad words", "d": "3/2018"}, {"body": "linusborg jkzing must trouble vnode case javascript import opbutton opbutton import opcol opcol import opform opform import oprow oprow import opvnode opvnode import slots srcmixinsslots const template html export default template components opbutton opcol opform oprow opvnode mixins slots data gt expanded false computed grid expanded getgrid slots slots gt getgrid slots reduce getgrid slots control expanded slots length mathmin slots length methods getgrid arr item index thisexpanded amp amp index gt return arr index return arr item arr arrlength push item return arr know computed add make observerable use like javascript import opui wnpmopui const template html const component template components opui data gt fullscreen false select date time export default component path list change view nt update everything works well untill use", "d": "3/2018"}, {"body": "yozman please open separate issue proper reproduction thread personal support line", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "3/2018"}, {"body": "performance analysis according environment please", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "happens second component registration first one shadowing components feature printing warning unfortunately possible", "d": "3/2018"}, {"body": "thank response reproduction subtle bug described typing first letter focus lost", "d": "3/2018"}, {"body": "loses focus component gets replaced soon template renders happens type", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "created computed property instead usually would nt recommend putting complex computation directly template", "d": "3/2018"}, {"body": "duplicate", "d": "3/2018"}, {"body": "need put element fixed example", "d": "3/2018"}, {"body": "nt clear enter also changes variable add make work way want please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "3/2018"}, {"body": "thank guess input works nt change value seems like able change value enter changed ah well want enter submit new line shift enter clear prevents enter working manually add n works cool ps tried googling minutes find solution posting always easy find answers", "d": "3/2018"}, {"body": "duplicate", "d": "3/2018"}, {"body": "still get error nt got time put together reproduction case right know exists still going back resolves issue error looks like traverse function error", "d": "3/2018"}, {"body": "mutating state affecting output ssr would effect", "d": "3/2018"}, {"body": "work ref basically different attribute", "d": "3/2018"}, {"body": "particular reason qualifies bug", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "introduced workround use something like", "d": "3/2018"}, {"body": "hotfix upd released", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "feature request", "d": "3/2018"}, {"body": "request help asking", "d": "3/2018"}, {"body": "please use forum chat room help clearly stated issue list reserved exclusively bug reports feature requests", "d": "3/2018"}, {"body": "thanks", "d": "3/2018"}, {"body": "use double binding set attribute", "d": "3/2018"}, {"body": "maxirozay said also listen event please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow vue span check", "d": "3/2018"}, {"body": "seems problem related functional components transitiongroup changed title", "d": "3/2018"}, {"body": "component nt get could wrap like", "d": "3/2018"}, {"body": "nt function component get key transitiongroup", "d": "3/2018"}, {"body": "seems implemented", "d": "3/2018"}, {"body": "see warning simply pass reference object root element component", "d": "3/2018"}, {"body": "glad sometimes sqal", "d": "3/2018"}, {"body": "pretty", "d": "3/2018"}, {"body": "single file component bind contextdata sqal posva maxirozay", "d": "3/2018"}, {"body": "things start internals private api things start things public api start nt collide data props methods computed properties added user", "d": "3/2018"}, {"body": "vue needs root element mount please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "3/2018"}, {"body": "sorry template get three app", "d": "3/2018"}, {"body": "either put template option set html vue pick template option first please move kind discussions discord chat forums people able give feedback", "d": "3/2018"}, {"body": "please follow errors provided console version errors following console errors please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "3/2018"}, {"body": "posva use index instead item work around error throw reason show error templated child component expected replated computed expected expected computed rendered replaced", "d": "3/2018"}, {"body": "functional components render multiple vnodes according seems ca nt vnode wrapped another functional component", "d": "3/2018"}, {"body": "fixed released yet", "d": "3/2018"}, {"body": "process writing composition much programming send request problem due inadequate english skills great", "d": "3/2018"}, {"body": "bring precision plugin seems install method root component child component access method example differ use plugin directly global instance extending vue example", "d": "3/2018"}, {"body": "mistake assuming would work previous comments make fully operate base constructor additional internal flag needs set made default likely exposed via public api", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "hey something fixed vue core related either webpack config vueloader usage maybe check may extracting css scenario nt want webpack question prefer use channels like forum discord server ask", "d": "3/2018"}, {"body": "something build setup really nt designed probably want use different build setup want component target iframe instead relying final style insertion remove make last loader css handle insertion js import css foocss export default mounted insert css", "d": "3/2018"}, {"body": "thank clarification actually worked", "d": "3/2018"}, {"body": "technically could possible integration layer connection c js something planned yet think something community probably going bring team every language compiles web assembly also web assembly support still limited", "d": "3/2018"}, {"body": "personaly think huge potential performance fe gaining kind integration plus ecosystem advantages plus adoption early stages however know might ways come similar results", "d": "3/2018"}, {"body": "like building completely new framework similar syntax definitely something core team interested bandwidth would nt discourage anyone interested try", "d": "3/2018"}, {"body": "ok thanks", "d": "3/2018"}, {"body": "featurenotbug computed calculate called getter accessed render function", "d": "3/2018"}, {"body": "ouch debugging half day suddenly got stuttering animations lately smile", "d": "3/2018"}, {"body": "vue utility library utility functions contained private parts change remove refactor without worrying breaking users code fact intentionally removed lot utility functions exposed perfectly fine use dedicated library purpose", "d": "3/2018"}, {"body": "recognize maintenance benefits philosophy also fosters dependency proliferation code bloat apps javascript linker would nt say alas suppose vue provided unstable api section wherein function signatures could change across mx mnx releases many utilities attributeescape presumably highly stable", "d": "3/2018"}, {"body": "take issue", "d": "3/2018"}, {"body": "course", "d": "3/2018"}, {"body": "posuva since first contribution tell startoff", "d": "3/2018"}, {"body": "ajomadlabs suggest searching string file go case", "d": "3/2018"}, {"body": "posva replace value actual value encountered correct wrong", "d": "3/2018"}, {"body": "ajomadlabs goal allow dev see value generated error name props failed test guessing string could something like defined consistent vue messages also sure display type value adding quotes string like quotes number like", "d": "3/2018"}, {"body": "alexandrebonneau thanks", "d": "3/2018"}, {"body": "since nothing happened days wondering could taker one first contribution", "d": "3/2018"}, {"body": "dczombera working getting stuck middle", "d": "3/2018"}, {"body": "need particular help getting unstuck ajomadlabs feature highly anticipated around", "d": "3/2018"}, {"body": "alexandrebonneau think found", "d": "3/2018"}, {"body": "shipit", "d": "3/2018"}, {"body": "seems related", "d": "3/2018"}, {"body": "duplicate", "d": "3/2018"}, {"body": "seems related element gets moved necessary causing blur wonder inserted could called end rather exactly inserted valid workaround focus element", "d": "3/2018"}, {"body": "work confirmed", "d": "3/2018"}, {"body": "case element reused hook fired moved technically diffing could probably improved since need really move guaranteed cases provided safer always focus nexttick", "d": "3/2018"}, {"body": "posva take issue", "d": "3/2018"}, {"body": "even stupid situation sfc compiler nt throw error least config seems invoke sassloader eslint sass got transpiled worked intended behavior", "d": "3/2018"}, {"body": "also multiple tag exists last tags simply ignored", "d": "3/2018"}, {"body": "workaround moment use instead", "d": "3/2018"}, {"body": "moment debounced used local property works wanted let know bug", "d": "3/2018"}, {"body": "may dup", "d": "3/2018"}, {"body": "oh yeah nt even check code see vshow transitiongroup expecting seems related may caused different things think keep open moment", "d": "3/2018"}, {"body": "fixed released yet", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "autoclosed wow good", "d": "3/2018"}, {"body": "vitalyt", "d": "3/2018"}, {"body": "frlinw thank still think milestones maintained standard way planning update plus developers github check first also roadmap nt show much done toward next release ie indication progress", "d": "3/2018"}, {"body": "auto closed clear issue policies issue template obviously nt read github milestones nt mean use maintainers decide manage plans project also next time make suggestions open source project consider using tone actually sounds like suggestion rather making demands like paying customer", "d": "3/2018"}, {"body": "polite suggestion saying pay get make suggestions rest dance around maintainers decide manage plans project sounds positively autocratic", "d": "3/2018"}, {"body": "anyone make suggestions given proposed proper manner request also valid suggestion bit entitled side please stop stretching words", "d": "3/2018"}, {"body": "already planned", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "wow prompt reply thank expected release time update", "d": "3/2018"}, {"body": "possible way fix whenever property like removed remove property starting name force adding style", "d": "3/2018"}, {"body": "way see removing property since shorthand sub properties like removed well expected nt want removed apply remove individual properties instead lot css propertiesshorthands like top head font border grid flexbox really vue scope deal imo", "d": "3/2018"}, {"body": "phanan exactly problem even though model still contains sub properties ignored style reappliment case bug kind wysiwyg editor user able apply css styles object merged base values thus possible object properties", "d": "3/2018"}, {"body": "matwaligora think add back tag styles applied makes things clearer", "d": "3/2018"}, {"body": "slowly getting idea still reduce simple fiddle tell reproduce issue without need fullblown sfc app", "d": "3/2018"}, {"body": "ok refactored reproduction project something smaller", "d": "3/2018"}, {"body": "ok nt enough time play sandbox right looks like something related change tag either element prevent vue reusing dom problem go away", "d": "3/2018"}, {"body": "yeah solution problem", "d": "3/2018"}, {"body": "wontfix impractical handle possible shorthand variations diffing algorithm solution use shorthand properties inline styles really eg allowing user edit css arbitrarily workaround giving element question key equivalents hash inline styles forces element replaced fresh inline styles change", "d": "3/2018"}, {"body": "yes issue closed nt respect issue usage please check use issues bug reports feature requests", "d": "3/2018"}, {"body": "check nuxtjs want statically rendered websites please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "3/2018"}, {"body": "thanks get", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "thanks proposals doable userland overriding method call original api freeze nt forget override", "d": "3/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "3/2018"}, {"body": "looks like ie triggering focus displaying modal thus reflecting changes variable focuses modal closed set variables probably work around blurring input creating modal behaviour consistent across browsers please nt open issues external libraries checking error nt come demo external libraries reproduces problem interested checking", "d": "3/2018"}, {"body": "\u7531\u4e8e\u91cd\u65b0\u6e32\u67d3\u5f97\u5230\u7684 vnode listeners test bug \u90a3\u4e48\u7ec4\u4ef6\u5728\u70b9\u51fb\u540e\u4f1a\u6267\u884c listeners", "d": "3/2018"}, {"body": "add property inform vue reuse vnode", "d": "3/2018"}, {"body": "hi luobotang work around exists issue think listener updated still bug since reusing vnode case work vue update listeners case remove listeners well", "d": "3/2018"}, {"body": "herringtondarkholme agree", "d": "3/2018"}, {"body": "originally added", "d": "3/2018"}, {"body": "bug fixed last year new release published", "d": "3/2018"}, {"body": "oh lol saw date nt even ask question", "d": "3/2018"}, {"body": "jquery actually trigger native events instead adding logic vue make work specifically jquery make sure indeed triggering native events", "d": "3/2018"}, {"body": "makes sense function defined think defining provided jquery general adding something doc explain trigger events andor something jquery little confusing new comers", "d": "3/2018"}, {"body": "yes probably add section regarding interop jquery cc chrisvfritz", "d": "3/2018"}, {"body": "best solution found moment create plugin also create helpers tests ember understand scope vue maybe better create plugin check time fits goals", "d": "3/2018"}, {"body": "think would something best covered specific cookbook example sarahedo good know time javascript thing rather vue thing think jquery probably make note misleading behavior docs though", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "documentation issues submitted vuejsvuejsorg", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "\u63d0\u4f9b\u4e00\u4e0b\u590d\u73b0\u4ee3\u7801\u4f1a\u6bd4\u8f83\u597d", "d": "3/2018"}, {"body": "closing provided information enough error probably comes code ran ie", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "3/2018"}, {"body": "inside tags escape like regular html html lt foo gt lt foo gt even vue ignored component config would still see nothing html would parsing", "d": "3/2018"}, {"body": "posva implemented directive strip automatically use vue compiles", "d": "3/2018"}, {"body": "posva btw way ignore custom components talking vueconfigignoreelements first global ignores ignoring vue custom components", "d": "3/2018"}, {"body": "oh thought used code anyways said need escape caret character like regular html comes string use looking better workflow put code samples files html vue use custom webpack loader handle transformation string goes beyond vue", "d": "3/2018"}, {"body": "posva nt comes string imagine page demo component description use something like toast use vrawvhighlight html custom directive escape html code highlight syntax", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "possible component used inside another component one scope referring first one second one", "d": "3/2018"}, {"body": "feel need ambiguity pointed posva indeed problem probably need form special syntax get rid ambiguity", "d": "3/2018"}, {"body": "confusing working", "d": "3/2018"}, {"body": "convinced directive something wrong different name like apart looking different thing nice short relates clearly personally nt like much beginning semantical meaning thus nt read like stuff vue", "d": "3/2018"}, {"body": "anselwong requires", "d": "3/2018"}, {"body": "posva true primary reason using means becomes new reserved prop ie user components longer use prop name", "d": "3/2018"}, {"body": "use computed property setter emit event", "d": "3/2018"}, {"body": "mean alternative proposed change information could also copy props data use deep watcher proposed syntax seems still much cleaner actually nt know could implement computed setter see example course throws warnings changing data nt actually supported yet", "d": "3/2018"}, {"body": "model option apply components form fields inside components", "d": "3/2018"}, {"body": "oh right supposed given child component new option supposed given component contains renamed updated proposal", "d": "3/2018"}, {"body": "nt quite flexible api expression vmodel may name prop second thought something nt solved extra property would apply every vmodel nt feel intuitive rest api two choices first one expanding one one use computed properties setters could also create helper function generates computed properties similar way vuex", "d": "3/2018"}, {"body": "application developer puts expression currently would assignable course also provide callback handle expression see problem yes point new option apply every vmodel component exactly default feels like arbitrary choice nt cover many important use cases manually expanding might work components still less intuitive nt work checkboxes radiobuttons selects sure something like would workaround example problem would still require listing modelnames nt understand better force user catch computed setter instead allowing changed first place", "d": "3/2018"}, {"body": "fyi checkboxes radios selects emit events", "d": "3/2018"}, {"body": "also skip rendering using way stop going deeper nonexistant nested object js please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "3/2018"}, {"body": "fixed via", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "import tableitem tableitemjs lt js must vue", "d": "3/2018"}, {"body": "keep mind unit test different component exports raw component exporting wrapped component one work though", "d": "3/2018"}, {"body": "nt public api nt included typing may ask need access test", "d": "3/2018"}, {"body": "nt concrete use feel ought possible test specifically case test thing unit testing tutorial using typescript case fair enough perhaps unit testing tutorial example changed", "d": "3/2018"}, {"body": "doc might conctrived indeed", "d": "3/2018"}, {"body": "docs example improved root difference plain object options vs extended constructor closing nothing fixed type definition", "d": "3/2018"}, {"body": "change component use sure anyway still problem ca nt access hook true nt realistic example perhaps second example try call function suffers problem", "d": "3/2018"}, {"body": "eg", "d": "3/2018"}, {"body": "use template tag wrap elements would use display text", "d": "3/2018"}, {"body": "supported template used container structural directives text use double mustaches", "d": "3/2018"}, {"body": "maxirozay nt worry white space renders screen tags eg vs mydata working large teams simplifies ui inconsistencies white space introduces html lots devs nt realize white space rendered screen", "d": "3/2018"}, {"body": "gave valid reason", "d": "3/2018"}, {"body": "said use double mustaches spaces renders also something like", "d": "3/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "3/2018"}, {"body": "looks like safari bug seems happen adding class sometimes style removing element vue feel free use fiddle report bug safari edit tried find workaround using setting position absolute also triggers bug find complex workaround safari fixes bug", "d": "3/2018"}, {"body": "thank posva submitted bug safari", "d": "3/2018"}, {"body": "new flag", "d": "3/2018"}, {"body": "toooooooooooo long hope find keyword one word", "d": "3/2018"}, {"body": "thank", "d": "3/2018"}, {"body": "generateui fix issue adding class vueprototype nt work", "d": "3/2018"}, {"body": "indexjs works see also indexjs file", "d": "3/2018"}, {"body": "looks like deferred rerendering triggered event handler produces problem add scroll event listener manually inside hook avoid example", "d": "3/2018"}, {"body": "link vuenexttick doc shows nexttick callback executed next dom update may breaking change vue necessary better vue", "d": "3/2018"}, {"body": "currently callbacks longer assured invoked dom updates stated docs may lead confusion way normal developers know caveat would good knowledge internal mechanism order use without breaking code us one vue best part developers would nt dig internals create rather complicated yet performant applications works", "d": "3/2018"}, {"body": "think likely revert always use microtask change fixed really niche edge cases incurs quirks like actually problematic ones fixed", "d": "3/2018"}, {"body": "closed via", "d": "3/2018"}, {"body": "solved problem also meet question", "d": "3/2018"}, {"body": "version also problem", "d": "3/2018"}, {"body": "nt solve however bundle renderer works think would nice solved point basic approach straightforward purposes would sufficient", "d": "3/2018"}, {"body": "importing bundling inside application requiring another copy vue via commonjs two conflicting copies vue script need externalize vue webpack config bundle script using copy vue see", "d": "3/2018"}, {"body": "html renders consecutive whitespaces including newlines everything single space chomping consecutive whitespaces single space results exact render output reducing payload intended fact consistent expect styling plain html css", "d": "3/2018"}, {"body": "remove check actually would nt solve problem", "d": "3/2018"}, {"body": "eddyerburgh simulating ssr mocking browser environment", "d": "3/2018"}, {"body": "would running unit tests serverside code process tests clientside code vue test utils two vueservertestutils would good run tests using libraries process set differently depending method used js import rendertostring vueservertestutils import shallow vuetestutils rendertostring testcomponent yes shallow testcomponent html", "d": "3/2018"}, {"body": "think leave users run tests ssr code correct environment making isserver writable makes possible write tests pass fail production", "d": "3/2018"}, {"body": "fixed", "d": "3/2018"}, {"body": "guess problem overloading commenting last overloading signature solves", "d": "3/2018"}, {"body": "boiled reproduction ts type prop declare function test prop declare function test prop toggle line var test array apush", "d": "3/2018"}, {"body": "issue tracked nothing vue let close wait ts team fix manually annotate prop definition shown", "d": "3/2018"}, {"body": "atinux issue told suggestions could help ssr would love ear", "d": "3/2018"}, {"body": "frozen feature likely deprecated future adding changes improvements", "d": "3/2018"}, {"body": "something done vue chrome already gives ability inspect listeners arbitrary dom elements", "d": "3/2018"}, {"body": "however think chrome inspector listeners shown vue apps readable", "d": "3/2018"}, {"body": "thanks lot stuckouttongueclosedeyes stuckouttongueclosedeyes stuckouttongueclosedeyes", "d": "3/2018"}, {"body": "technically expected behavior although admit confusing extent vue reactivity system trigger rerender state actually changed case setting value already vue figures nothing needs update perform another aspect problem ignoring whatever happening dom fact state element modified user reflecting back state checkbox unchecked state nt updated one way justineo suggested explicitly sync dom state back app state first resetting another way let note case always syncs dom state back app state handler would trigger update necessary case handler simply react case actually perform value check always results update calling react similar mutating state calling", "d": "3/2018"}, {"body": "thank appreciate explanation", "d": "3/2018"}, {"body": "another workaround avoids global component looks pretty js import somechildren somechildrenvue export default props components type object default return somechildren", "d": "3/2018"}, {"body": "think worth mentioning error message quite unintuitive error bubbles first instance component reason feature local functional component registration get implemented least add dev warning says something effect also awkward registering unknown component first parent instance component clears error without polluting global component name scope strange coupling components though choose hack suppose", "d": "3/2018"}, {"body": "linusborg use like want delete item", "d": "3/2018"}, {"body": "nt see attribute would course ca nt recommend using internal id anything", "d": "3/2018"}, {"body": "loop array objects use key value allow delete item array view rendered real time", "d": "3/2018"}, {"body": "progress experiencing problem well", "d": "3/2018"}, {"body": "\u8bf7\u95ee\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417", "d": "3/2018"}, {"body": "real use case vuerelay need listen change refetch relay store update accordingly attempted following methods issue refetch trigger another rerendering fired watch props separately works correctly brings performance penalty multiple props changed callback runs multiple times latest version logic avoid running refetch data multiple time logic still run multiple times watch ideally exactly want apparently proxy never changes watch computed value uses props modified based suggestions method works perfectly triggers callback level issue worked around last method really ugly would nice lifecycle hook addresses issue natively", "d": "3/2018"}, {"body": "sorry wrong operation", "d": "3/2018"}, {"body": "considered bug behavior adjusted match lifecycle diagram previous docs description revert docs", "d": "3/2018"}, {"body": "done userland nt see included default", "d": "3/2018"}, {"body": "niche use case add firstclass template syntax also risks making slot syntax ambiguous usage outside different potential ways consuming component make use slot said doable render functions essentially treat meta data construct new vnodes based manually cloning mutating props needed requires become familiar render functions vnode interface however discussion exactly done scope issues", "d": "3/2018"}, {"body": "maybe mixins takes higher priority extends source", "d": "3/2018"}, {"body": "suggested solution way apply modifiers like stopprevent", "d": "3/2018"}, {"body": "closing since original proposal doable userland implementation details scope issues", "d": "3/2018"}, {"body": "behavior hard say whether right wrong since changing would breaking existing code leave", "d": "3/2018"}, {"body": "think may lead subtle issues regarding timing component definedextended vs global one registered prefer keep explicit", "d": "3/2018"}, {"body": "\u6211\u4e5f\u53d1\u73b0\u4e86\u8fd9\u4e2abug", "d": "3/2018"}, {"body": "\u6240\u4ee5", "d": "3/2018"}, {"body": "want create complex widgetscomponents describe one dynamic templates also notice issue template cache call change prop value component works fine gon na core problem", "d": "3/2018"}, {"body": "wmui \u89e3\u51b3\u4e86\u6211\u7684\u56f0\u6270", "d": "3/2018"}, {"body": "see", "d": "3/2018"}, {"body": "tried dom stays", "d": "3/2018"}, {"body": "nt seem fixed classes ref ref open new issue expected behaviour", "d": "3/2018"}, {"body": "wrapping class instance object bypasses problem", "d": "3/2018"}, {"body": "mean give example", "d": "3/2018"}, {"body": "instead something like let mywrappedclassobject object myclassobject mywrappedclassobjectobjectvalue", "d": "3/2018"}, {"body": "works thanks also utilise shorthand properties object destructuring make cleaner component parent", "d": "3/2018"}, {"body": "known best practice wait transitions finish outside current component eg page transition around vuerouter example need wait page transitions fix", "d": "3/2018"}, {"body": "note xsl concept const variable splitting templates using computed method always possible without breaking logical blocks reducing readability", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "trying possible solutions closing wontfix imo something fixed firefox behavior normal refresh middleclickrefresh inconsistent fires one specific case every browser fires technically possible vue address behavior however introduces nontrivial complexity codebase listening ff causes listeners fired twice nonefficient may cause unnecessary rerenders microtasks fire use event input types ff breaks user code expects trigger updates manually dispatching events tradeoff nt really worth niche case", "d": "3/2018"}, {"body": "closing since seems able find good solution concerns possible implement logic lifecycle hooks eg", "d": "3/2018"}, {"body": "nt think want support arbitrary properties nonobject types least default rare nonrecommended usage performance overhead need extra property enumerations function arrays initial observation yes explicitly calling possible workaround", "d": "3/2018"}, {"body": "nt know missed calling manually trick use case solved published new npm version", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "right jumped vue would realy help debug html code request related pr", "d": "3/2018"}, {"body": "\u6211\u4e5f\u9047\u5230\u540c\u6837\u7684\u95ee\u9898 \u4f60\u89e3\u51b3\u4e86\u5417", "d": "3/2018"}, {"body": "ran issue copy pasting event component native element think least warning generated modifier used native element", "d": "3/2018"}, {"body": "possible workaround fixed edge html export default name forminput props value type string number methods updatevalueinedge e edge trigger input event arrow keys used change value key codes used microsoft browsers others use arrowup arrowdown ekey ekey thisupdatevalue e updatevalue e emit input etargetvalue", "d": "3/2018"}, {"body": "came across issue resolved adding key attribute datenow value key", "d": "3/2018"}, {"body": "e good solution mean give use inplace patch strategy", "d": "3/2018"}, {"body": "fyi get normalized props metadata component via group raw args blaze props raw attributes based metadata mistaken solve desired use case", "d": "3/2018"}, {"body": "thanks request since kept backwardscompat old generated code mind making new changes believe working well far essentially change causes runtime incompatible render functions generated older version compiler considered breaking change keep library authors nt recompile libraries avoid broken", "d": "3/2018"}, {"body": "bjunc also need ssr seo displaying html wordpress content huge concern well latest issue content inside share code well html passed taking shot dark usecase involving wrapping content inside anchor tag html post edit delete contained anchor tags would get warning good news able work around using outside anchor tag additionally actually able reproduce even break html within vhtml even put nested anchor tags blog post html fine", "d": "3/2018"}, {"body": "curtisbelt nt recall exact markup caused hydration error case hydration issue may simply nesting div block element anchor see stack overflow question proactive workarounds validating wysiwyg probably anyway etc still nt know ca nt get reactive exception thrown hydration fails", "d": "3/2018"}, {"body": "bjunc ah yes know nested block anchor invalid meant highlight broke hydration template html blogposthtml causes invalid html together blogposthtml invalid code put invalid html inside blogposthtml nt break hydration anymore also tried omitting closing tags seemed ok see renders without warning even though violation hope makes sense maybe nt really helping sorry unable break inside vhtml alone thought maybe component html could similar issue html post edit delete however find example breaks vhtml please let know intend monitor topic much possible launch client months", "d": "3/2018"}, {"body": "stumbled issue handling composition events mvc way seem doable current browser behavior breaker live searchlive autocompletion functionality best way handle make form input element reread every compositionupdate event seems hack works uc browser reason uc update inputs inside forms composition yet gives undefined event data good standard way set upstream handle proper explanation bug nature across browsers docs afraid cross browser solution involve hardcoded hack major browser version", "d": "3/2018"}, {"body": "work vue version", "d": "3/2018"}, {"body": "thomhurks find solution backspace issue", "d": "3/2018"}, {"body": "tegola quirk application day one noticed think users nt often make typo directly space often make typo middle word mistype first letter word space delete space deleted think still fix might try using vmodel components rolling making prop syncs custom code trimming sending input event", "d": "3/2018"}, {"body": "thomhurks unfortunately one users noticed looking fix actually component nt event use wanted every textbox trimmed without specifying every binding added prop component stripped version html export default props value string number trim type boolean default true methods oninput event const value eventtargetvalue emit input thistrim valuetrim value onchange event const value eventtargetvalue emit change thistrim valuetrim value behavior though looks identical backspaceing last char also removes space know old thread maybe something missing", "d": "3/2018"}, {"body": "yeah bit weird nt says however textarea child still focus update blocked nt seem case deleting characters delete character whitespace present character whitespace trimmed immediately input control even input still focus nt completely understand mechanics anyway seem solve nt update event event still using component parent use following behaviour value parent always trimmed value child trimmed blur deleting character preceding whitespace preserved nt send event parent immediately however value parent lag behind display value somewhere else correspondence immediately typing case objection though tegola solution work", "d": "3/2018"}, {"body": "thomhurks changing configuration indeed help would loved keep input event least something like alas nt work keep change event fact normal inputs handle backspaces fine bothers thanks help", "d": "3/2018"}, {"body": "primary need maintain valid html component generates table rows different rendering depending different logic ca nt give div parent without violating html rules accessibility priority table good html structure semantics important fairly certain satisfy need render bummer sacrifice clean declarative implementation", "d": "3/2018"}, {"body": "also encountered reason didt config babelrc", "d": "3/2018"}, {"body": "another better way", "d": "3/2018"}, {"body": "create computed gettersetter within component use instead", "d": "3/2018"}, {"body": "still happening", "d": "3/2018"}, {"body": "gaoqiankun hi newbie please", "d": "3/2018"}, {"body": "still think implemented natively vue one common things libraries implement way result code bloat bugs increased bundle size words would stop people reinventing wheel", "d": "3/2018"}, {"body": "example user imports different select tags dropdown uses vueportal means instances custom portal code could reevaluate necessity feature", "d": "3/2018"}, {"body": "example user imports different select tags dropdown uses vueportal means instances custom portal code said many many thingsfeatures looking react core lib comes even less features vue yes seem portals like transition system community simply comes bunch solutions eventually one libs becomes defactostandard goal mission vue provide core feature every common need web development goal provide basic toolset build solutions satisfy needs portalvue nt thousands stars gaining popularity could solve problem way solution would converge using portalvue case even nt happen code involved build barebones portal solution single library like drodown small nt see big overhead said might add portals time future work vue rewrite virtualdom simply way keeps portals mind core feature right problem solved elegantly enough userland immediate need put lot work core implementation disclaimer author portalvue vue core team member may conflict interest time know perspectives", "d": "3/2018"}, {"body": "understand try writing portalish logic couple different ways directive component nt many ways avoid dom mess clean leaves stale elements component standalone portaltarget thing need add dropdown body solutions elegant become hacky like whole portal functionality feels moment know different mindsets portal mindset deal element id allow dropping part component another component etc allows users instead structuring data driven codebase turn mess hard manage could solved traditional simpler ways nt mean attack portalvue simple allow dropping specified dom element etc developer responsible wrapper etc work transitions cleaning whats needed component removal moment guarantee seems portaled element wrapped component component cleaning end day wrapper wrapper hate wrappers theory portal thing sounds easier actually example portal directive needs know element transition otherwise get big fat error transition tries remove element many small details come across trying implement thing somewhat supported solution would solve many headaches unexpected outcomes", "d": "3/2018"}, {"body": "know different mindsets portal simple allow dropping specified dom element documentbody documentcreateelement etc developer responsible wrapper etc work transitions sure api nt want done wrapper component later mention directives write paragaphs description get good picture imagine work wrapper wrapper hate wrappers sure refer say vue team hate wrappers much contrary encapsulating behaviour wrapper components concept use many things like bet implemented portal functionality core would use sort wrapper well deeper integration underlying virtualdom probably theory portal thing sounds easier actually want create featurerich solution many scenarios right need move modal end really hard example portal directive needs know element transition well implementing directive aware transitions vue design would approach wrong level abstraction directives meant lowlevel dom access vue transitions highly abstracted part solve component back top bit deal element id allow dropping part component another component etc allows users instead structuring data driven codebase turn mess hard manage could solved traditional simpler ways nt mean attack portalvue nt take attack worries raise valid critisism using portalvue excessively indeed happen users nt approach app datacentric mind nt invalidate whole concept useful solving specific problems solve nicely like moving modals dropdown menus etc end", "d": "3/2018"}, {"body": "sure refer say vue team hate wrappers much contrary encapsulating behaviour wrapper components concept use many things like clear wrapper nt mean wrapper component rather wrapper element introduces headaches used bought templates mostly admindashboard templates framework based lot direct child selectors wrapper element cause theme break well implementing directive aware transitions vue design would approach wrong level abstraction directives meant lowlevel dom access vue transitions highly abstracted part solve component true end day kind achieves result common component based portal usages implemented following way sticking export default mounted documentbodyappendchild el directive equivalent similar export default inserted el documentbodyappendchild el work worth keeping without wrapper elements keeps injectprovide working etc though directive problems transition element without advanced lookups yet big component libraries used yet directive based approach least last time checked nice thing component based approach keeps transitions working cleans element undocumented may vue god forgive us separated element displayed component tree maybe bad make seem maybe need step back think edit remember evan said nt done maybe feel bad", "d": "3/2018"}, {"body": "portals userland eliminate extra dom wrapper elements implementation still keep robust happy use believe react provide core solution purely", "d": "3/2018"}, {"body": "portals userland eliminate extra dom wrapper elements implementation still keep robust look portalvue possible slot content passed portal single root element case target nt create root node nt use instead use interface get slot contents render support docs always improved", "d": "3/2018"}, {"body": "solution ugly pipe need orthogonal seems language design bug", "d": "3/2018"}, {"body": "add perhaps obvious case might cause guilty another silly reason getting error method called click handler accidentally placed computed properties instead methods damn syntax highlighting threw combination generic console error nt really understand fact app rendered browser even though compilation failed ide error got much helpful error command line funny compilation error usually get black overlay browser blocks render nt case sure good reason nt yet understand might gotcha", "d": "3/2018"}, {"body": "making work ran another issue worth noting nt wan na see anyone suffer like situation application button makes something true shows second based true value nt trigger second shows weird behavior discussing workaround change works first place", "d": "3/2018"}, {"body": "question takes precedence velse vfor show string velse vfor obj keys iid vue handle situation recommend", "d": "3/2018"}, {"body": "driveby impressions coming aurelia durandal found bizarre expected work surely updating data api responses queried based user input common usecase computed properties would cache computed desired types uses would forced reroll features scratch structure updates based input caches results change exactly need async query use case might done without async probably store value another field defining one computed property extract value seen suggestions use hook startup fill data contrast experience usecases types updating properties way around often querying small sets much larger datasets would impractical load startup edit realise exists probably suits cases find angularjs style clunky though", "d": "3/2018"}, {"body": "reading discussion went rxjs try async computed subscriptions handling async properties use mergemap", "d": "3/2018"}, {"body": "solved way need know input field id advance code addresses one problem ssr page input field could edited manually user component mounted think slow mobile connection thwat could delay js execution thus input state could differ value set server thank", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "codysherman cool", "d": "3/2018"}, {"body": "thank much gijovarghese glad able help", "d": "3/2018"}, {"body": "started vue already need type two way filters", "d": "3/2018"}, {"body": "definitely needed", "d": "3/2018"}, {"body": "kokodoko use variables kind tested making numpages property component data object prop even computed property would work currentnumberofitems define one cases data return currentnumberofitems props currentnumberofitems default computed currentnumberofitems complicated stuff compute return value return", "d": "3/2018"}, {"body": "raychenfj cool", "d": "3/2018"}, {"body": "mykeels nice write", "d": "3/2018"}, {"body": "think anywhere atilkan long direct reference element question placing attribute element question work eg vue component html export default mounted directly reference checkbox via ref attribute value consolelog refscheckbox could also reference different component directly advisable direct access component like html import mycheckbox pathtocheckboxvue export default components mycheckbox mounted const mycheckbox refsmycheckbox references mycheckbox component const checkboxelement mycheckbox refscheckbox references input typecheckbox within mycheckbox component checkboxelementdispatchevent new event change trigger change event must trigger event external component suggest using vue event emitters rather direct reference keep components clean also looks like fiddle link nt work anymore url vue script broken", "d": "3/2018"}, {"body": "got input event emit happen checkbox value changes using computed template input", "d": "3/2018"}, {"body": "seems like bad assumption completely remove option appears one thinks got serverside rendered html components ie using vue simply attach functionality causes inconsistency css rendering cases vue yet loaded gets bootstrapped consider following part collection inside flexbox container flexbox layout affects immediate descendants left put styles template root one point page going look incorrect page looking correct incorrect based upon vue bootstrapped curious way vue suffering option especially default made think needs consideration affects circumstances typical spa specifically cases components nt injected clientside", "d": "3/2018"}, {"body": "way temporarily pause observation reactive unpause later prop watcher within update huge object nt want trigger dom update whole data preparation finished", "d": "3/2018"}, {"body": "intijk exactly see depends trying vue eventually apply state simply pausing calculated nt help much instead trying skip intermediate states apply final state start new object assign object end example psuedocode javascript doupdate const state clonedeep thismystate intermediate state updates thismystate state normal vue caveats object reactivity apply recommendation would use trick skip sections large object nt need reactive need reactive recommend using something like", "d": "3/2018"}, {"body": "morgul already used trick long fact longer want use trick anymore case data object kind big range perform deep copy object quite painful", "d": "3/2018"}, {"body": "intijk sounds incredibly complex something bind vue use case", "d": "3/2018"}, {"body": "morgul nt think case complex case simple data kind big time network load indexed visualization log file visualization component display", "d": "3/2018"}, {"body": "anyone thoughts defining nonreactive field within computed property first idea depends nonreactivity assignment array template props id input computed env function return reactive thisid nonreactive markdown function return markdown within markdownrender envnonreactive internaldata exactly selfdocumenting", "d": "3/2018"}, {"body": "hey guys found issue found facing problem pretty like rpkilby problem project construct series vue virtual doms called vnode json object use json object construct android app anyway json object great size use json vue observed vue tried rpkilby morgul way nt work btw team guys may pretty familiar vue probably cause json observed vue version wondering vue traverse function traverse val seen var keys var isa arrayisarray val isa amp amp isobject val objectisfrozen val val instanceof vnode val amp amp val vuenonreactive return see add val amp amp val vuenonreactive modify json object vuenonreactive true root node json solve problem wondering may cause problem considered new feature vue enable developer configure object observed vue configuring property object objectfreeze may change object immutable object ca nt fit every situation", "d": "3/2018"}, {"body": "news future plans possibly native support", "d": "3/2018"}, {"body": "prob fix found custom directive form node module", "d": "3/2018"}, {"body": "style background url techcontainbgsrc backgroundsize", "d": "3/2018"}, {"body": "wishing unless slot explicitly attributes merges original declaration component", "d": "3/2018"}, {"body": "use lodash globally", "d": "3/2018"}, {"body": "englishextra could elaborate maybe example", "d": "3/2018"}, {"body": "jlmmns work fine", "d": "3/2018"}, {"body": "unclegena explain little please could help many us", "d": "3/2018"}, {"body": "bernardmarieonzo according docs note mutating rather replacing object array old value new value reference objectarray vue keep copy premutate value unclegena get old value creating copy existing array another variable create new value reference memory whatever wan na add original array new variable created instead replace old array new one replacing reference memory thisoriginarray copiedarray thus vue references variables able get new old value clear understanding works like basically saving variable object array javascript nt keep record value instead keeps reference location memory change array object update value memory old new value variable reference memory location", "d": "3/2018"}, {"body": "done api rest consume returns properties", "d": "3/2018"}, {"body": "done api rest consume returns properties access using", "d": "3/2018"}, {"body": "specifically want reuse vuex getter another getter first one child object name embedded access spear get error", "d": "3/2018"}, {"body": "guys linusborg said", "d": "3/2018"}, {"body": "decent workaround", "d": "3/2018"}, {"body": "maybe could provided something like directive edit also see discussion possible workarounds", "d": "3/2018"}, {"body": "weird issue support objects consequent also support maps sets exactly reason", "d": "3/2018"}, {"body": "another elegant workaround wrap onclick logic vuenexttick onclickfunc vuenexttick gt goes onclick logic", "d": "3/2018"}, {"body": "solution worked pretty well found readable making computed properties watch component use instance like based thattomperson suggestion", "d": "3/2018"}, {"body": "based denwerboy solution pass watched property name callback function useful save changes localstorage automatically call mount inspect arguments", "d": "3/2018"}, {"body": "ractive solves watching multiple paths asterisk could things like seems strange ca nt easily define single callback watcher multiple properties vue", "d": "3/2018"}, {"body": "document said problem due limitations javascript limitaion could please make sepecific fact find works try detect array", "d": "3/2018"}, {"body": "heard array detected defineproperty", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "computed property depends server call want offer refresh button could good use case", "d": "3/2018"}]