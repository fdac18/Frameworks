[{"title": "tests pretenderjs broken upgrade latest rsvpjs", "body": "use pretenderjs tests huge ember app tests fine ember unfortunately pretenderjs work together actual ember builds problem inside rsvpjs problem already solved rsvpjs repository emberjs project updated still using v latest version rsvpjs verison following promiseprototype constructor promise version promiseprototype constructor promise wondering possible update rsvpjs emberjs beta channel maybe", "num": "10314", "d": "1/2015"}, {"title": "create container registry calling", "body": "seems like latest changes ember registry resulted errors way ed registers ember canary ed canary throws error demo repo rwjblue fivetanley thoughts", "num": "10313", "d": "1/2015"}, {"title": "split emberset module", "body": "remember reading release notes emberset would split module included need still planned", "num": "10312", "d": "1/2015"}, {"title": "exception swallowing within willtransition", "body": "exception thrown within exception gets swallowed router breaks subtle way took quite awhile triage originally thought bug within queryparams linkview steps reproduce type anything input notice queryparam updates expected click bar notice query param pushed onto new route url side effect bug notice console nt see stacktrace excepted emit stacktrace console", "num": "10311", "d": "1/2015"}, {"title": "container registry split routing refactor causes global app integration test issues", "body": "changes application boot canary seem broken ability call callback prepare next test likely affects globals style apps embercli applications due fact new instance created integration test issue routing started happens first calling attempt register see however due registry container split registry persistent across calls making second call fail following error demos fails canary builds jsbin works beta builds jsbin dgeb wycats tomdale directly related yall work area definitely appreciate feedback suggested path forward", "num": "10310", "d": "1/2015"}, {"title": "chained computed map properties run map function often", "body": "computed map properties chained together later properties call map functions often gets worse chain gets longer created js bin demonstrate issue really two problems first events getting multiplied go chain second map functions getting called items removed understand might need trigger extra events first map property nt think multiply go chain betting extra events causing items get remapped often", "num": "10309", "d": "1/2015"}, {"title": "documentation ember cli htmlbars emberhandlebarscompile function", "body": "found using html bars ember cli use function work box got view following code work box htmlbars maybe behaviour documented elsewhere maybe rwjblue know documentation belongs", "num": "10307", "d": "1/2015"}, {"title": "async test helper nt work expected", "body": "attempted create helper pause test execution stop qunit eventually helper executes js test visiting function visit sleep andthen function equal currentpath index cc quantuminformation", "num": "10306", "d": "1/2015"}, {"title": "input helper action work expected", "body": "im basically trying get work doable per docs problem action triggers value passed always character short actual value input element eg input value add value passed action ad failing bin also noted using events like dont trigger action found issue solving question", "num": "10305", "d": "1/2015"}, {"title": "application view rerender uncaught typeerror read property append null", "body": "embercli debug ember debug ember data debug jquery stack called anonymous function erroring line function rendererinsertelement view parentview element index element null element undefined return trying refresh views modifying locale translations code using refresh top level application view originally posted", "num": "10304", "d": "1/2015"}, {"title": "handlebars bindattr nt preserve case", "body": "noticed preserve case eg result mostly minor annoyance nt really change since html case sensitive anyway however found something perculiar using elements see controller property used element however generated nt really know going guess initial value inserted camelcase name value updated inserted lowercase name", "num": "10303", "d": "1/2015"}, {"title": "srcset attribute nt supported using bindattr", "body": "using bindattr srcset resulting markup looks like expect test using view work around since srcset part responsive image spec something bind bindattr questions srcset works see docs talk wilto want human touch thanks frog", "num": "10301", "d": "1/2015"}, {"title": "doc deprecated docs containerview", "body": "see shows setting container deprecated following code taken docs results warning deprecation setting container deprecated viewextendinit apply superwrapper init apply new class functionclassmixinpropscreate seems like whole page needs refreshment nt feel competent submit pr", "num": "10299", "d": "1/2015"}, {"title": "sending actions components application work", "body": "considering example expected result alerts first blub however first alerted example wrong usage components actions docs need updates correctly", "num": "10298", "d": "1/2015"}, {"title": "registerboundhelpergenerated helpers support use handlebars blocks", "body": "update handlebars got deprecation rewrite code using boundhelper got helper look like", "num": "10295", "d": "1/2015"}, {"title": "non closing block matches wrong block uncaught error audioplayer nt match", "body": "following block code gave follow error console due matching feel error message verbose", "num": "10294", "d": "1/2015"}, {"title": "emberselect multiple mode trigger computed property setter used emberselect selection", "body": "simple app js appindexroute emberrouteextend model function return id name ember id name rocks id name id name planet appindexcontroller embercontrollerextend foo embercomputed function key value prevvalue consolelog computed value choose something selectbox see computed value console expected set selectbox multiple mode choosing items selectbox trigger computed property see nothing console according docs support multiple mode element content currently selected array elements demo sparkles sparkles two chunks code one one difference two chunks one deals single item deals array items notice every time make choice selectbox property updated computed property see message every time make changes selectbox property updated fired though get filled newly selected content please confirm whether legit bug ps background use case array records displayed page selectbox record content select box comes property record user configure record either singleselect multiselect example code would make normal property computed property ember data attrs computed properties another reason computed property also depends matter content dynamic content changes removed items listed selected", "num": "10286", "d": "1/2015"}, {"title": "feature request indirect computed property", "body": "like add new indirect computed property inspired ms excel function makes possible property holding path another property using second property bound path eg javascript emberobjectextend foo bar path value embercomputedindirect path create oget value foo oset value something oget something oset path oget value bar oset value anything oget anything use case form builder client describe nested data structure input data using form generated structure data stored along format right use magic names special properties say client name field used title displaying data instance list want traverse data format provided client find path first required text field use title much logical explain customers first required text field used title ui excuse coffeescript kind working example technique behind example dynamically create extra bound property object add observer property guess easier ways one thanks wonderful work guys amazing", "num": "10278", "d": "1/2015"}, {"title": "styleguidemd misleading notes unobvious perfomance improvementdegradation resulting new array", "body": "styleguidemd contains following inadequate anymore statements nt reassign arguments perfectly fine strict mode nt result perfomance degrade result perfomance degradation using direct scope sloppy mode assume ember contributors sane reference script run following command leaking directly still results deoptimisation know exact length know array going grow use new array n nt obvious deal requires deeper thinking firefox results better perfomance objects nt got hidden class results degraded perfomance objects got hidden class results degraded perfomance objects nt got hidden class results increased perfomance objects got hidden class optimisation spidermonkey probably important little bit slower engine", "num": "10275", "d": "1/2015"}, {"title": "feature automated api documentation", "body": "pipedream found working api team would quite nice tool uses existing model information serializer adapter information help create documentation exported hosted shared seems like pieces perhaps opportunity leverage comments permodel basis supplement definition", "num": "10273", "d": "1/2015"}, {"title": "add ability know proxied object equal unproxied object", "body": "something like would make life whole lot easier", "num": "10272", "d": "1/2015"}, {"title": "routerecognizerversion incorrectly set ember version", "body": "since merged change way routerecognizer built uses similar string replacement add number property since emberjsbuild consumes package via bower module nt get chance instead replaced ember though nt believe internal code depends version correct clearly wrong probably fix change found", "num": "10269", "d": "1/2015"}, {"title": "call compile without template compiler loaded", "body": "hi ember component wrapper library jqueryui examples hosted github cli app things used work get error call compile without template compiler loaded please load embertemplatecompilerjs prior calling compile downloaded included embertemplatecompilerjs course without full cli machinery gives referenceerror exports defined onthefly compiling taken latest canary one work around handlebars version thanks broken example", "num": "10265", "d": "1/2015"}, {"title": "generated acceptance test failing newly created app", "body": "creating new app using embercli updating ember canary adding route generated acceptance test failing pushed failing example everything generated embercli apart minor template changes ember ember data", "num": "10264", "d": "1/2015"}, {"title": "undefined wait test helper", "body": "using authenticatesession test helper test suite crashes crash happens inside method returns undefined line acceptance test basic import ember emberimport startapp helpersstartapp app null module acceptance login setup app startapp teardown emberrun app destroy test redirects already logged authenticatesession visit login andthen equal currentpath remove call test runs without issue known conditions may cause undefined anything get information debugging ember ember data jquery ember simple auth ember simple auth devise", "num": "10263", "d": "1/2015"}, {"title": "query params updated transitiontoreplacewith active transition", "body": "entering route call update query params called prior hook example clicking set qp", "num": "10262", "d": "1/2015"}, {"title": "poor performance views andor components involved", "body": "issue table creating via take seconds render initially andor sorted rows requirement row dozen components nested components discovered one components parsehtml done multiplied number rows performance really bad merely updating objects rows performance quite good sort takes another seconds seconds seems gc whatever going internally well already discussed issue ebryn wanted make sure issue recorded github eyes land track progress facing rewrites refactors work around ember performance arrays listview nt ideal solution requirements inflight efforts help happy resolving performance issue top list cc jayphelps", "num": "10261", "d": "1/2015"}, {"title": "sticky query params confusing", "body": "using query params awhile default stickiness seems cause lot subtle non obvious sides effects completely obvious consistently reset query params transitions would suggest either following provide global nonsticky option params words provide easy configure flag forces query params set transition possibly model hooks feasible perhaps something along lines provide clear documentation guide reset params googled around behavior front center documentation section query params", "num": "10260", "d": "1/2015"}, {"title": "queryparams set bound variable undefined", "body": "controller bind destination property global variable use destination property queryparam variable empty default route desitination property still empty te model hook init controller also still empty gets corrupted empty undefined remove desitnation property queryparams working fine hope helps app emberapplicationcreate destination appsearchindexcontroller emberarraycontrollerextend needs currentuser queryparams destination destinationbinding appdestination", "num": "10257", "d": "1/2015"}, {"title": "emberapplicationreset clear controller properties defined arrays controller defined", "body": "applies ember controller arrays persist accumulate data tests reset function nt clear declare controller property empty array programmatically assign property empty array use add object ember application run destroyed still contains object pushed onto jsfiddle demonstrating screenshots capture", "num": "10255", "d": "1/2015"}, {"title": "bug ember data beta unlabeled debug version", "body": "started new app declaring script dependencies localstorageadapter nothing else html head body tags ember data debug throws error uncaught syntaxerror unexpected token typeof ember switch ember dataprod ember datamin bug nt appear guess use one two versions", "num": "10253", "d": "1/2015"}, {"title": "using mandatorysetters observing nonexistent property result value undefined even property exists", "body": "demonstration issue copy relevant stuff javascript var person emberobjectextend var person personcreate firstname yehuda init function since using setter behind ember back yes wrong exposes interesting behavior later mandatory setters ca nt protect course thislastname katz thisunwatchedproperty foo works expected personget unwatchedproperty foo since property watched existed getter broken return undefined mandatory setters enabled personget lastname undefined returns even though property exists underlying object point might thinking cares went behind ember back set properties init method stop use typescript wrote base typescript class allows typescript object model work ember object model ability manually set properties like object creation time key getting typescript object model work ember typescript properties classes simply assigned object constructor ability construction time still use ember methods later properties works fine long nt use mandatory setters observers would still work nt subtle bug mandatorysetter happens properties observed creation time nt exist object yet reason comes lines code ember normally watch property current value gets placed however watch property construction property nt yet exist object entry add metavalues get code return undefined even though defined fixesworkarounds add following lines adds property metavalues things work expected however nt take care defining mandatorysetter property would called property make custom debug build ember compiles mandatorysetters allow disable mandatorysetters development build mentioned issue debug using emberproduction give niceties try find workaround typescript base class would involve sort iteration properties typescript initialized calling make ember aware sure feasible honestly since required debug mode would add overhead every object created nt know want jump hoops prefer solution number makes sure mandatory setter code nt mask underlying object point returning even though property defined underlying object however realize obscure use case fact worked happy accident perhaps appeal principle least surprise surprised debug vs production code would vary certainly surprised see property values according ember even though properties value know might bigger fish fry like open source typescript base class unite typescript object model ember minor bug major impediment potential consumers help workaround offer would greatly appreciated", "num": "10252", "d": "1/2015"}, {"title": "rfc make computedor return truthy object rather true", "body": "current behavior embercomputedor return true propose would useful instead return truthy object moreclosely matches semantics javascript could make moreuseful rendering templates seldom want render may want render one ed objects example use case see tripping people written implementations depending property words potential break apps depending existing behavior", "num": "10251", "d": "1/2015"}, {"title": "using protocol relative urls rest adapter cause issues", "body": "using protocol relative url rest adapter issues happen attempting retrieve related models example library adapter store dsstoreextend adapter dsrestadapterextend namespace host mylibrarycom appregister library main store appinject route library library main library model iterating template get following errors problem url wrong correct url forcing protocol adapter declaration fixes issue", "num": "10248", "d": "1/2015"}, {"title": "handlebars subexpressions nt pass values helpers", "body": "demo value returned nested helper passed current result reproduce issue canary fix somehow ember", "num": "10247", "d": "1/2015"}, {"title": "document path based componenthelper names", "body": "handlebars allows path based helper names eg mycomponentsub started using feature soon available organize code nice organization embercli pods ability use naming structure nt documented components anywhere find addition use path based names provide parameters helper must wrapped like nested components found answer issue thread believe would helpful document ability nest component paths stipulations using paths correctly example", "num": "10243", "d": "1/2015"}, {"title": "firefox bug parentview undefined", "body": "able run ember app safari chrome fails error parentview undefined firefox function ember causing error line function appendview route view options optionsinto var parentview routerouterlookupactiveview optionsinto var teardownoutletview generateoutletteardown parentview optionsoutlet routeteardownoutletviews routeteardownoutletviews replace routeteardownoutletviews teardownoutletview parentviewconnectoutlet optionsoutlet view else var rootelement get routerouter namespacerootelement tear view one already rendered routeteardowntoplevelview routeteardowntoplevelview routerouterconnectactiveview optionsname view routeteardowntoplevelview generatetoplevelteardown view viewappendto rootelement", "num": "10241", "d": "1/2015"}, {"title": "router supports didtransition willtransition", "body": "currently router supports route didtransition event however router support route willtransition event words ca nt specific reason supporting willtransition happy submit pr like able saverecord state right transition happens general level specific individual route something along lines intercepting time linkto happens", "num": "10235", "d": "1/2015"}, {"title": "opening ember application link target blank attribute failed load", "body": "ember application using torri open application page link whose target attribute blank tab opens application failed load", "num": "10233", "d": "1/2015"}, {"title": "emberjs future ember views", "body": "apologize isnt correct forum really need speak authors framework figure upcoming changes may affect us significantly recently huge debate current contract related components vs views aware components preferred views however extremely complicated presentation layer views able deal complexity far future views specifically ember ember expected released upcoming plans begin deprecated views going supported", "num": "10232", "d": "1/2015"}, {"title": "click testing helper nt trigger focusin contenteditable element", "body": "see looks like fired inputs however seems make sense fire element contenteditable happy fix seems reasonable", "num": "10229", "d": "1/2015"}, {"title": "sortable mixin assuming arrangedcontent always sorted", "body": "sortable mixin assume arrangedcontent array always sorted leads invalid ordered results sortproperties modified bulk using beginpropertychanges endpropertychanges performed sort operations using comparaisons item item left right invalid underlying data already updated jsbin illustrating problem click reorder link multiple times check console see problem", "num": "10225", "d": "1/2015"}, {"title": "canary regression referenceerror defaultfeatures defined", "body": "discussed rwjblue defaultfeatures supposed replaced config ember default feature list", "num": "10224", "d": "1/2015"}, {"title": "weird issue mixindetect", "body": "issue provides instructions checking whether class mixin found following weirdness though trying use methods love offer suggestion nt make sense", "num": "10222", "d": "1/2015"}, {"title": "documentation child routes getting started guide unclear", "body": "hi trying wrap head around emberjs first time working way getting started guide things pretty clear adding child routes section point presented following instructions next split single template set nested templates transition different lists todos reaction user interaction indexhtml move entire todos new template named adding new handlebars template tag inside document file moved exactly user create file extension instead coming without prior knowledge handlebars works typical situation newcomers imagine docs say move new template clear templates go named would really helpful file structure clearly explained stage process tree diagram page would great js bin html single file clear things organized real world", "num": "10220", "d": "1/2015"}, {"title": "returning rejected promise prevents url updated eagerly", "body": "jsbin reproduce try clicking works updates url would expect go back index page back button click boom server causes error response rejected promise url still eagerly updated allows back button refresh button etc work correctly go back index page back button click boom client causes error rejected promise however url updated breaks back button way go back sure falls bugimprovementquestion right place feel free close tell code might working expected eager url update code aborted transition aborted runloop however unclear happening within runloop work around impression promise publication stuff happening asynchronously assuming returning would return progress promise reject accurately publish rejection next tick essentially semantics ajax request would suppose use work around feels bit strange need go way seems like would almost always want url update eagerly error occurs locally otherwise would end broken back button problem mentioned probably good reasons ca nt work way though cc machty", "num": "10219", "d": "1/2015"}, {"title": "retried transitions enter route", "body": "jsbin reproduce try clicking post trigger logged check postroute beforemodel redirecting login page upon finish login step click go transition retried end correct post page go back index click post see error page post exist refresh app clear logged state click post like would redirect login page finish login procedure like expect postroute model returns rejected promise however expected app transition route rejection model like step actual app stuck broken state", "num": "10218", "d": "1/2015"}, {"title": "endtoend testing using selenium webdriver", "body": "starting think using approach similar protractor allow writing endtoend acceptance tests node use selenium webdriverjs bindings looking protractor guidessource noticed angular directly exposes way know timerseventspending updates flushed application back steady state official way ember", "num": "10216", "d": "1/2015"}, {"title": "include development build", "body": "currently dev build emberjs take account bad means features missing even promoted beta channel exacerbated master right due fact handlebars support removed htmlbars still behind feature flag development builds broken box ticket filed request rwjblue", "num": "10212", "d": "1/2015"}, {"title": "embermap must use emberset set property", "body": "must use emberset set property object object receive error adding value map version upgrading option stage trace ember assert get mandatory setter complaining value wrong problem insert first item overcome without upgrading", "num": "10209", "d": "1/2015"}, {"title": "query params connecting lazy loading resolver resolvecontroller used", "body": "query params works fine settimeout removed however functional otherwise", "num": "10207", "d": "1/2015"}, {"title": "properties available element prototype get set", "body": "check see property exists given attribute set prop use case elements property fallback leads added dom demo", "num": "10202", "d": "1/2015"}, {"title": "overly aggressive autolocation rooturl assertion", "body": "two invariants maintained autolocation via assertions caused regression skylight nt know exactly change caused break trying untangle thread bottom line believe autolocation aggressive handle case gracefully two invariants causing problems autolocation enforces must always end slash example set raise exception unless change autolocation verifies contained url inside raises exception problematic ember app served rails app links generated rails link guessed trailing slash point app started throwing exceptions hitting directly instead perversely everything works fine comment abovelinked assertion seems like much case ember automatically redirects nt know robust way handle case seems like loosen constraints automatically normalization code rather pushing complexity user cc cibernox jayphelps", "num": "10201", "d": "1/2015"}, {"title": "add autocomplete emberselect view", "body": "would enable chrome autofill similar mechanisms know value select select box", "num": "10199", "d": "1/2015"}, {"title": "warning attempting render view passing propertybinding view helper without quoted value syntax ambiguous either surround propertybinding value quotes remove propertybinding", "body": "ember embercli code snippet works fine chrome errors wrap detailcategory quotes nt give warning course passes string object also get following two errors hav nt yet isolated likely related also appear chrome", "num": "10196", "d": "1/2015"}, {"title": "linkto classname stuck", "body": "embercanary link pointing route set repro click link page transitioned click link link background red see css tab removed transitioning another route yet correct behavior show classname already target route", "num": "10195", "d": "1/2015"}, {"title": "replace foreach arrayslice dependentarraysobserverdependentarraydidchange", "body": "noticed big performance bottleneck implementation primarily regards working larger data sets seems certain circumstances using iterate subsection array creates ton unnecessary work doubles garbage collection time slice otherwise used anything obvious candidate optimization case chaining dataset grows every page retrieved items replacing simple iterator function traverses improved performance method nearly times according chrome performance profiling example implementation javascript packagesemberruntimelibcomputedreducecomputedjs function runthrough arr start end ctx fn var index sliceindex index start sliceindex index end fncall ctx arrobjectat index sliceindex sliceindex index dependentarraysobserverprototype dependentarraydidchange function dependentarray index removedcount addedcount runthrough dependentarray normalizedindex endindex function item sliceindex usage case described refactor took average time propagating changes record array inserting items store around boost average performance", "num": "10191", "d": "1/2015"}, {"title": "queryparams pluses nt converted spaces", "body": "see link technically bug standard supposed encoded decoded nt convert spaces right send link facebook receiver get link converted link broken link ember canary problem version thanks", "num": "10190", "d": "1/2015"}, {"title": "parent component willdestroyelement called", "body": "component extension another willinsertelement chain works uses chain nt coffeescript mycomponent emberselectextend didinsertelement consolelog insert mycomponent super myextendedcomponent mycomponentextend didinsertelement consolelog insert myextendedcomponent super", "num": "10189", "d": "1/2015"}, {"title": "value attributebinding rendered attribute", "body": "component used ember nt render attribute interestingly use attributebinding ember render attribute", "num": "10183", "d": "1/2015"}, {"title": "set uses strict equality", "body": "currently emberset uses strict equality compare current new values determine object updated works primitives dates objects call set objectname objectval update since strict equality always fail emberisequal already method compare objects implement isequal function using check set object object date properties would updated values actually changed modified ember fork fix issue added tests tests passing reason nt included core ember build", "num": "10182", "d": "1/2015"}, {"title": "using syntax notempty computed properties cause computed arrays function", "body": "summary creating whose source property uses syntax produces property cause array computed properties reference misbehave true believe means change ember commit references actually breaking changes may actually general problem computed property depends sample code also jsfiddle javascript var item emberobjectextend children null embercomputednotempty children embercomputednotempty children collection emberobjectextend items null embercomputedfilterby items true embercomputedfilterby items true col collectioncreate items itemcreate children emberassert first item nt children colget emberassert first item nt children colget emberassert empty colget emberassert empty colget colget itemsfirstobjectchildren pushobject emberassert first item children colget emberassert first item children colget emberassert empty colget emberassert empty colget none assertions fire secondtolast one words aggregated property array computed property uses syntax array computed property update properly severity causes array computed properties using computed properties keys function think pretty severe know need use syntax anymore used bug caused nasty regression code still using syntax words looks like change removed need unintentionallybreaking change think bug fixed least deprecation warning using syntax investigation cause investigation get closer source issue looks like immediate problem fires twice fires remains array changes never flushed firing twice following two pseudostacks looks like fire twice calls nt reach following pseudostack executing calls time get longer watching return instead calling back point pretty well depth hoping hand expert diagnose fix problem", "num": "10181", "d": "1/2015"}, {"title": "current route name easily accessible within router didtransition hook", "body": "problem certain circumstances desirable logic hook based previouscurrent route currently way obtain container request would possible get info argument callback hook maybe even transition object indicating fromto routes back story use case led scenario trying get google analytics tracking app something like ember guides suggest problem running getting events doubled whenever slow transition occured firing substate second time model promise resolved desirable correct behaviour however need ignore transition route matches page view tracking purposes javascript approuterreopen notifygoogleanalytics function get current route name hacky way currentroute appcontainerlookup controller application get currentroutename didtransition ideally could little nicer something like javascript approuterreopen notifygoogleanalytics function transition assuming transition originalroute targetroute obtain current route arguments property router currentroute transitionto didtransition", "num": "10180", "d": "1/2015"}, {"title": "ca nt nt know basic loop operations emberhandlebars htmlbars", "body": "trying steps step get error array go create junk array manually exists reason loop array seeing handlebars supposed able output index index nt work basically way performing one fundamental functions javascript wrong possible giant hole framework", "num": "10178", "d": "1/2015"}, {"title": "deprecation called registry call directly associated container instead", "body": "hi upgrading htmlbars getting lots deprecation notices like stack nt really provide way helping find need update code new style remember reading important move away registry container maybe tom dale blog post read missing documentation address message anyone offer advice fix thanks", "num": "10177", "d": "1/2015"}, {"title": "attribute binding override", "body": "could nt find information trying extend behaviour trying add logic inputs able bind datetyped variables directly know input values strings dates new class extends need new property bound input basically date converted string input expects ideally would like reopen apply logic input type bound value questions way change attribute binding defined superclass possible could write viewcomponent subclass would override previous binding definition date binding support feature desired core", "num": "10176", "d": "1/2015"}, {"title": "fiddle link contrib page broken", "body": "works jsfiddle appears contributingmd work interest solving problems rather reporting new fiddle cloned settings working jsbin see also really old idea owns idea even update fiddle without changing url", "num": "10175", "d": "1/2015"}, {"title": "attributes without value disappear", "body": "embercanary html rendered html renders element correctly jsbin", "num": "10169", "d": "1/2015"}, {"title": "ember application booting safari private mode", "body": "hello everyone interesting problem solve able come agreement ember everything needed well done job thanks problem app simply start opened safari private mode bug error console nothing aware localstorage issue problem application would load properly know app works properly private mode chrome firefox app works properly safari nonprivate mode application used initialize work properly one earlier versions started development ember current version url current production version though impresive mytennishotelcom aware giving useful informations users likely use configuration boss willing donate ember guys help us solve problem provide whole lot details asked", "num": "10167", "d": "1/2015"}, {"title": "inconsistent behaviour linked component instantiation properties", "body": "exists inconsistent behaviour components accessing property setter another property eg foobarjs appfoobarcomponent embercomponentextend content null result function key value var content argumentslength gt content thisget content consolelog content prints null return value property content ember content property retrieved inside setter result computed property working jsbin ember content property accessible working jsbin strange thing changed usage component template foobar resultsomestring contentsomeproperty works working ember jsbin tried setting result static value template breaks working ember jsbin sure issues independent volatile behaviour preventing us upgrading ember", "num": "10165", "d": "1/2015"}, {"title": "add index optional parameter block params", "body": "would like change dom styling items according position following image example app would ideally like write components look index rendering different display information", "num": "10158", "d": "1/2015"}, {"title": "environmenthasdom check broken", "body": "check pass specifically", "num": "10155", "d": "1/2015"}, {"title": "disconect outlets issue", "body": "method returns promise lead outlets disconnected reconnected promise resolves path see example", "num": "10154", "d": "1/2015"}, {"title": "htmlbars helper passing simplestream params", "body": "helper call template works remove stops working print params gives going", "num": "10153", "d": "1/2015"}, {"title": "transitionto enhancement", "body": "wo nt anything point route model calls workarounds like action router call controller instead also causes complications template conditionally use instead think pagination perhaps add optional parameter function enable reload model behavior needed", "num": "10151", "d": "1/2015"}, {"title": "streams htmlbars helpers accessible developers", "body": "working migrating app encountering difficulties trying slowly simplify helpers written switch htmlbars causing pain points helpers disobey assertion creating helper must dash got away using finding unwrapping call returns original parameters htmlbars helpers take could expose helper functions well stream helpers understand low layer api frustrating helpers longer work find tool belt missing several important tools", "num": "10150", "d": "1/2015"}, {"title": "beta packages include emberdebugjs", "body": "even though tagged builds page includes ember release bower package include file instead bower package includes leads console warning using", "num": "10148", "d": "1/2015"}, {"title": "ember checkbox click event firing", "body": "internal modal system made ember background div placed whole screen inner modal window placed top recently added click event background div fades screen would close modal clicked unfortunately seems method choose seems causing errors ember specifically checkboxes nt consistently fire toggle value jquery click events like used start file upload file input box also firing jsbin checkbox problem structured similar modals work", "num": "10146", "d": "1/2015"}, {"title": "computed property firing change", "body": "lesson student model onetoone association following computed properties controller actions scheduling canceling lesson gets appropriately updated never called called page loads changing student property via actions believe idiom work run issue lot ember wondering something obvious wrong", "num": "10145", "d": "1/2015"}, {"title": "canary generated controller using id modelid", "body": "obviously controllerjs viewjs computed model", "num": "10144", "d": "1/2015"}, {"title": "canary add documentation objectcontroller deprecation", "body": "says migrate modelpropertyname example given documentation tests best practice define", "num": "10143", "d": "1/2015"}, {"title": "removed content property relationships ember", "body": "used work fine ember js segment many messages var messages segmentget messages get plain array var messagesarray messagesget content need", "num": "10142", "d": "1/2015"}, {"title": "emcomputedsort triggers computed property twice", "body": "problems seems triggered twice ends causing bunch issues app see question jsbin simplified version basically one components app copies maps model sorts slices loops data javascript initial property copied initial function return thisget model slice property model sorted sortprop age desc sorted embercomputedsort initial sortprop slice loop function runs twice final function return thisget sorted slice property sorted issue triggered twice model changed first time runs still using data old model contains items second time use new updated model data contains items sure sort function runs twice whether messed something actually bug", "num": "10133", "d": "1/2015"}, {"title": "queryparams routerefresh debounce emberjs reverts property", "body": "hello scenario controller property property bound queryparams property also bound text field property observed changes observer sends action emberrundebounce avoid sending multiple times action user typing text field action handled route refresh route model hook calls ember getjson call takes time complete scenario type text field ember sometimes overwrite whatever typing issue seems extremely timing sensitive sometimes observe sometimes nt depending speed type created jsbin tries simulate issue tuned timings simulation observe issue every single time things might differ machines please adjust timings accordingly simulation simulation works simulating typing string aaaa selecting everything cmda typing string bbbb issue triggered see aaaa typed bbbb typed final value text field aaaa debugging sure right track especially first contact ever ember like days ago debugging session issue seems caused line emberjs one linked jsbin inside object seems contain sets queryparams one called called something like first one quickly returned contains old value query params one contains correct value hope enough analyze issue thanks ps know goal code filter text field list user types text field need debounce typing send request server refresh list based results case intent nt clear", "num": "10120", "d": "1/2015"}, {"title": "better htmlbars error dumb html attributes closing tag", "body": "upgrading ember app use htmlbars got cryptic error bad html would cool get kind error saying something like invalid markup line closing tags attributes", "num": "10117", "d": "1/2015"}, {"title": "legacy bindattr throws undefined function", "body": "latest canary noticed using deprecated helper threw undefined function error line seems bindattr helper object function expected helper looks like console works without problem using deprecated syntax throws error", "num": "10116", "d": "1/2015"}, {"title": "ember object support property method", "body": "ember embercli jquery emberdata emberjspackagesemberruntimelibmixinsenumerablejs line every function callback target object nt support property method using following brocfilejs", "num": "10113", "d": "1/2015"}, {"title": "rendering child named outlet blanks content parent named outlet", "body": "named outlet parent overwritten child blank go back parent see following jsbin steps reproduce notice sidebar displayed click settings link admin displayed instead click home link go back application sidebar gone asked", "num": "10104", "d": "1/2015"}, {"body": "see available template best approach", "d": "1/2015"}, {"body": "opsb yes works", "d": "1/2015"}, {"body": "think needs addressing", "d": "1/2015"}, {"body": "upgrade rsvp possible still last time attempted update odd errors nt tracked yet also pretender requests actually done asynchronously previously sync understanding issue describing solve", "d": "1/2015"}, {"body": "thanks response hopefully going solve problem however update tests compatible new asynchronous behaviour", "d": "1/2015"}, {"body": "however update tests compatible new asynchronous behaviour likely good thing async real life async tests", "d": "1/2015"}, {"body": "seems like defined application registry runinitializers executed defined application instance", "d": "1/2015"}, {"body": "containerregistry initializersinstanceinitializers code recently changed landed might related", "d": "1/2015"}, {"body": "failing jsbin line causing error emberdata store initializer definitely seems like regression tomdale dgeb mind taking look one", "d": "1/2015"}, {"body": "oh god one constantly trolls machty promised would fix brokenheart", "d": "1/2015"}, {"body": "think problem resetting app container registry appinstancespecific registry see appinstancespecific registry introduced receive registrations instead appspecific registry destroy whole instance including registry container could either fix quick patch canary wait merge branch", "d": "1/2015"}, {"body": "dgeb discussing rwjblue let get merged fallback registry improvements place", "d": "1/2015"}, {"body": "merged bootreform branch believe pending resolve issue tomdale correct", "d": "1/2015"}, {"body": "rwjblue yes branch instance destroyed reset clear instancespecific registry container well", "d": "1/2015"}, {"body": "rwjblue verify fixed merged", "d": "1/2015"}, {"body": "previously failing jsbin passes properly thanks yall hard work", "d": "1/2015"}, {"body": "nt include template compiler browser default primarily meant build tool steps mostly slow abused cause suboptimal experiences users additionally unsure compiler browser compatibility ember suspect limited developers really need need include template compiler", "d": "1/2015"}, {"body": "stefanpenner thank think compatibility ember rework views use normal templates via views", "d": "1/2015"}, {"body": "might relevant", "d": "1/2015"}, {"body": "lolmaus mentioned return helper", "d": "1/2015"}, {"body": "thanks naming method bit confusing", "d": "1/2015"}, {"body": "return promise helper way know long wait name helper executes difference async sync helpers js embertestregisterasynchelper sleep function app time consolelog sleeping emberrunlater function consolelog finished sleeping time return wait embertestregisterasynchelper asynclog function consolelog async log embertestregisterhelper synclog function consolelog sync log sleep asynclog synclog output sync log sleeping finished sleeping async log", "d": "1/2015"}, {"body": "could sleep helper added ember core", "d": "1/2015"}, {"body": "quantuminformation nt really think adding random sleep tests generally great idea much better wait actual time need fairly straightforward wrapping promises async helper", "d": "1/2015"}, {"body": "quantuminformation helps situations debuggingdeveloping", "d": "1/2015"}, {"body": "blessenm tried events officially listed dasherized nt work completely e g nt trigger action completely astonished", "d": "1/2015"}, {"body": "jsbin without errors works properly outlet errors setting renderer outlet view errors setting unable replicate exact error zyllorion reporting though clearly thing fix zyllorion tweak one jsbin trigger specific error getting", "d": "1/2015"}, {"body": "code path changed significantly beta channel canary believe exact case viewbox svg elements actually used example newer tests update jsbin beta retest", "d": "1/2015"}, {"body": "yep looks like works properly canary", "d": "1/2015"}, {"body": "hrm ok issue passing string pass function controller works", "d": "1/2015"}, {"body": "nt think test working looks like default ember jsfiddle start maybe wrong link gut dynamic data raw string nothing bind instead variable available view bind template even fun compute string based fine grained pieces js mediumsrc mediumjpg mediumsize largesrc largejpg largesize srcsetsizes function var msrc thisget mediumsrc var msize thisget mediumsize var lsrc thisget largesrc var lsize thisget largesize return property mediumsrc mediumsize largesrc largesize", "d": "1/2015"}, {"body": "definitely feels like bug ca nt use string", "d": "1/2015"}, {"body": "soooo sorry slexaxton fixing jsfiddle bmac explained could nt use string", "d": "1/2015"}, {"body": "fivetanley binding attribute static string", "d": "1/2015"}, {"body": "seems ripe something go wrong since strings could property names static strings collision etc", "d": "1/2015"}, {"body": "perhaps warn pass string seems like footgun strange sense confusion", "d": "1/2015"}, {"body": "clear handled differently first place see something wholly custom like data attribute native attribute work right box", "d": "1/2015"}, {"body": "think great warning something like problem initial example went added property view like technically bind real silly example probably would nt silly lots cases nt initialize view think string sudden property", "d": "1/2015"}, {"body": "wilto different handling nt need bound like attribute nt bound perfectly valid works equally invalid nt work equally", "d": "1/2015"}, {"body": "ahh okay way outta depth ember make stretchy pictures", "d": "1/2015"}, {"body": "hi wilto yes hi id like make pictures wideangle thnx", "d": "1/2015"}, {"body": "wide stretchy pictures low low price directly paypal order", "d": "1/2015"}, {"body": "believe duplicate", "d": "1/2015"}, {"body": "yes closing", "d": "1/2015"}, {"body": "components isolated default must subscribed facilitate reuse", "d": "1/2015"}, {"body": "documented likely unclear ideas improve let us know", "d": "1/2015"}, {"body": "read section top bottom clear pass name property component holds name action actually send know last paragraph section even makes sense could agree reopen issue call something like improve documentation create new one additionally say way trigger action name directly component", "d": "1/2015"}, {"body": "feel free open issue website repo contains guides", "d": "1/2015"}, {"body": "ah ok confused api generated doccomments", "d": "1/2015"}, {"body": "way trigger action directly component one could even use pass return value send action logic", "d": "1/2015"}, {"body": "interested resolution regarding well similar helper equal need maintain", "d": "1/2015"}, {"body": "beta able able use subexpression", "d": "1/2015"}, {"body": "thanks works versions", "d": "1/2015"}, {"body": "version ember using error messages better", "d": "1/2015"}, {"body": "", "d": "1/2015"}, {"body": "oh quite old beta would suggest upgrading", "d": "1/2015"}, {"body": "fixed number bugs demo updated link new link another demo shows property associated multiple mode observed well using observer valid workaround demo", "d": "1/2015"}, {"body": "lolmaus simplified jsbin think accomplishes trying first instinct use nt seem work familiar maybe bug someone knowledgable explain nt work", "d": "1/2015"}, {"body": "seem bug jsbin demonstrates issue think traced problem far lines used instead value form nt get updated template", "d": "1/2015"}, {"body": "xtian also looked line carefully line blame means bug emberselect rather fundamental bug property changes ember notify observers computed properties depending nt notify computed property behind issue might exist many ember classes computed property setters nt popular us discover issues also code written ember also prone reasonable statement", "d": "1/2015"}, {"body": "yeah think array computed properties address issue signified brackets sure apply case though", "d": "1/2015"}, {"body": "would prefer bake ember addon", "d": "1/2015"}, {"body": "need something like always cobbled together custom solution wanted little bit challenge spice monday created small ember addon nt published yet want make sure nt make obvious mistakes everything checks implementation pretty simple js export default function indirect middlepropertyname var sourcepropertyobserver lastsourceproperty return function key value var sourceproperty thisget middlepropertyname property middlepropertyname see working ssured example code", "d": "1/2015"}, {"body": "gordonkristan nice implementation much concise one thing though leaks observers removed destroy mmun prefer code core indirect primitive enables lot functionality takes little code open possibilities", "d": "1/2015"}, {"body": "ssured lack primitives require built core seems better suited", "d": "1/2015"}, {"body": "nt reassign arguments perfectly fine strict mode nt result performance degrade debugging performance cases reassigning argument results dev tools updating properly reflecting actually changed leads much annoying debugging know exact length know array going grow use new array n nt obvious deal requires deeper thinking agreed", "d": "1/2015"}, {"body": "cases reassigning argument results dev tools updating properly reflecting arguments actually changed consider devtools bug expected behavior sloppy mode buggy strict mode", "d": "1/2015"}, {"body": "consider devtools bug expected behavior sloppy mode buggy strict mode totally agreed would absolutely love upstream browser dev tool bugs fixed written guide impact performance potential aid debugging put rule squarely camp subjective style guide responsible seems like winwin potentially wintie", "d": "1/2015"}, {"body": "come across issue well best work around time moment checking either objects proxies getting content javascript instanceof emberobjectproxy aget content b b instanceof emberobjectproxy bget content b emberisequal b", "d": "1/2015"}, {"body": "yes using workaround like javascript apputilsproxyhelpersjs import ember ember export function isproxy obj note added emberarrayproxy arrproxy intanceof emberobjectproxy gt false return obj instanceof emberobjectproxy obj instanceof emberarrayproxy export function withoutproxies obj isproxy obj obj objget content return obj export function isequalproxied b return emberisequal withoutproxies withoutproxies b real issue instance ember array proxied objects reference object without proxies want know index array wo nt work reliably also relates emberselect issue although ca nt find issue right created following function workaround javascript apputilsindexofproxiedjs import withoutproxies isequalproxied utilsproxyhelpers function itemat arr index typeof arrobjectat function return arrobjectat index else return arr export default function arr object fromindex fromindex null fromindex else fromindex lt fromindex mathmax thislength fromindex arr withoutproxies arr arr null return var fromindex lt arrlength var item itemat arr isequalproxied item object return return updated findings", "d": "1/2015"}, {"body": "anyone interested working rough outline needs change routerecognizer needs generate folder contains preprocessed aka version string replaced part prepublish script update emberjsbuild pull routerecognizer npm use source tree instead bowercomponents htmlbars pulled works well", "d": "1/2015"}, {"body": "replicated well", "d": "1/2015"}, {"body": "think guys need include embertemplatecompilerjs thejchap", "d": "1/2015"}, {"body": "thank workmanw absolutely correct", "d": "1/2015"}, {"body": "hi rwjblue workmanw gladly retry including embertemplatecompilerjs report back however mentioned original issue leads referenceerror exports defined error could related changes getting mixed simply including embertemplatecompiler trick switch ember back handlebars everything works fine thanks", "d": "1/2015"}, {"body": "workmanw thanks temporary issue documentation weshould contribute somewhere", "d": "1/2015"}, {"body": "fyi handlebars longer needed temporary supposed writing blog post explaining new template compilation process better get", "d": "1/2015"}, {"body": "thejchap huh worked one many available embertemplatecompilerjs use used one npm get referenceerror exports defined since library live examples desperate get working pl advise offline himansudesai gmailcom getting voluminous issues page try rwjblue suggestion remove handlebars", "d": "1/2015"}, {"body": "rwjblue wait writeup thanks hard work recent improvements currently get uncaught typeerror read property compilerrevision undefined embertemplatecompilerjs line include compiler handlebars thanks", "d": "1/2015"}, {"body": "please make sure using embertemplatecompilerjs published specific build", "d": "1/2015"}, {"body": "sounds like old embertemplatecompiler package file thay paired ember build", "d": "1/2015"}, {"body": "rwjblue bet right sorry sounding like noob nt know find right pairing thought one using might old published npm months ago went emberjscombuilds canary obviously mention embertemplatecompiler thanks", "d": "1/2015"}, {"body": "rwjblue found url one ember jsbin examples nice lt canaryembertemplatecompilerjs easy enough url remember ps canary based examples currently broken missing embertemplatecompiler go compile list broken ones wish", "d": "1/2015"}, {"body": "hi folks wanted chime run problem using cli thought manual inclusion compiler mentioned would simply matter adding following brocfile done still getting compile error want amounts act desperation switched htmlbars cursing breath noticed variation message surprised nearly close enough intricaciesdependencies htmlbars anyway small new project starting wanted hit cutting edge ember wondering must step back edge little help getting back edge would much appreciated", "d": "1/2015"}, {"body": "tested successfully ember breaking change canary", "d": "1/2015"}, {"body": "full stack trace edit link incorrect lot changes", "d": "1/2015"}, {"body": "stack trace reported test failure", "d": "1/2015"}, {"body": "yeah line ember data error happens ember canary right play around see figure causing", "d": "1/2015"}, {"body": "confirm definitely result using canary branch ember data removing ember data whilst still running canary resolves issue odd thing test app nt done anything include ember data ember data models routes empty", "d": "1/2015"}, {"body": "getting error dig", "d": "1/2015"}, {"body": "strange reliably replicate issue repository linked anything else may affecting system currently node followed nukereinstall project directory also effect", "d": "1/2015"}, {"body": "kevinansfield edited post clear everything", "d": "1/2015"}, {"body": "ember data bug please reopen ember data", "d": "1/2015"}, {"body": "fixed latest ember data canary could check kevinansfield", "d": "1/2015"}, {"body": "confirmed fixed latest ember data canary", "d": "1/2015"}, {"body": "iirc router setup running first call", "d": "1/2015"}, {"body": "thanks adding call fixes particular error open pull request updates embersimpleauthtesting docs", "d": "1/2015"}, {"body": "think fixed usually point visiting route session authenticated except activate router described eg test like guess would ok change nt perform check active transition router nt running yet", "d": "1/2015"}, {"body": "fixed", "d": "1/2015"}, {"body": "thanks", "d": "1/2015"}, {"body": "clarify aware ember listview suit needs workaround underlying poor performance badly need rewrite came sproutcore destroys views underlying changes even sort instead moving views around one reasons performs poorly", "d": "1/2015"}, {"body": "ebryn magicked collection view work may interesting news erik", "d": "1/2015"}, {"body": "cc machty", "d": "1/2015"}, {"body": "yup array instance currently shared instances think maybe something could warn work around return computed property gets new array instance reset properly", "d": "1/2015"}, {"body": "fivetanley honestly sure error condition legitimate cases wanting use shared state amongst instances although agree much rarer", "d": "1/2015"}, {"body": "may thinking naively surprised behavior documentation indicates emberapplicationreset deactivate existing routes destroy objects container create new application container reroute existing url would think part process would recreating controller empty array defined controller definition think unexpected need manually clear properties careful array defined test nt start breaking previous test cause objects stored array mind ca nt define controller properties arrays boss telling anyway least without using computed property would helpful docs causes tests break way difficult figure nt mean critical general really like way ember going guys great job first time reported issue using ember months", "d": "1/2015"}, {"body": "rustytoms storing mutable data prototype object shared instances emberobject thing normal javascript thing javascript function person personprototypelisting var bob new person var alice new person boblisting alicelisting gt true clears container instantiated singleton controllers live way clear data stored prototype controller instead instance solution set array instance object prototype plain javascript example would look like javascript function person thislisting var bob new person var alice new person boblisting alicelisting gt false lets apply standard js knowledge first example storing mutable data prototype javascript var person emberobjectextend listing var bob personcreate var alice personcreate boblisting alicelisting gt true without storing prototype javascript var person emberobjectextend init function thislisting var bob personcreate var alice personcreate boblisting alicelisting gt false", "d": "1/2015"}, {"body": "rwjblue thank detailed explanation helpful nt thinking way understand better singletons thinking properties instance instead prototype", "d": "1/2015"}, {"body": "likely issue emberdata emberjs", "d": "1/2015"}, {"body": "tauranjanitor recreate issue emberdata thanks", "d": "1/2015"}, {"body": "nt know obscure going happen time try integrate external object model example ran issue rendering property native xhr nt available reached certain point like experience really surprising nasty track vote option something similar", "d": "1/2015"}, {"body": "thanks cowboyd relieved hear one folks might run interest full disclosure discover another workaround typescript base class digs internal guts ember finds properties watched nt entries metavalues yet inserts values appears work however fragile ugly sounds", "d": "1/2015"}, {"body": "worries btw says profile austin totally stop say hi come next emberatx meetup would love talk shop sometime", "d": "1/2015"}, {"body": "would also love see backwards compatible issues also", "d": "1/2015"}, {"body": "would something could get pr quickly move forward extremely useful", "d": "1/2015"}, {"body": "likely yes", "d": "1/2015"}, {"body": "problem putting pr expect one tonight nobody else gets first", "d": "1/2015"}, {"body": "problem putting pr expect one tonight nobody else gets first", "d": "1/2015"}, {"body": "different", "d": "1/2015"}, {"body": "ahacking nt deprecate reason", "d": "1/2015"}, {"body": "stefanpenner ok cool support deprecating calling getting speed ember first reached numerous occasions later discovering implementing cp get semantics wanted", "d": "1/2015"}, {"body": "week came across issue even searched api could nt find method returns instead ended writing btw still nt know reference argument next noticed ahacking comment", "d": "1/2015"}, {"body": "implementationwise slightly different returns rather sure matters anyone", "d": "1/2015"}, {"body": "thinking little null return value probably important template rendering way javascript works returns last value makes sense well", "d": "1/2015"}, {"body": "believe ticket belongs", "d": "1/2015"}, {"body": "opened", "d": "1/2015"}, {"body": "might mistaken nt believe ever made custom subexpressions public api ember indeed bound correctly due limitations handlebars forward expected work become common template code sure might need get working want", "d": "1/2015"}, {"body": "mixonic correct bound subexpressions able supported versions prior", "d": "1/2015"}, {"body": "sorry roughly way implement without massive changes closing supported", "d": "1/2015"}, {"body": "sglanzer definitely look know every handlebars feature actually supported ember sounds like already used without issue however verify nt unknown sideeffects document", "d": "1/2015"}, {"body": "confirm error occurs chrome built application", "d": "1/2015"}, {"body": "dremora mean built", "d": "1/2015"}, {"body": "created serve folder likely get issue chrome", "d": "1/2015"}, {"body": "provide steps reproduce", "d": "1/2015"}, {"body": "stefanpenner unfortunately big project nt know start reproduce error happens every single route also using ember htmlbars", "d": "1/2015"}, {"body": "case happens selected routes steps reproduce go look test click album appears list check error console source code serve run please note bug occur running", "d": "1/2015"}, {"body": "confirm well seen ember firefox release new version january perhaps change release issue seems unlikely issue would lurking around ember long without notice suddenly multiple people stumbled across time", "d": "1/2015"}, {"body": "need reproducible case jsbin demo embercli app steps reproduce error help track", "d": "1/2015"}, {"body": "asakusuma think might able achieve want using activate deactivate hooks blog post", "d": "1/2015"}, {"body": "chadhietala tried activatedeactivate ember works route expected router sure router code distributed elsewhere routerjs appears line triggering didtransition event nt see events like deactivate willtransition", "d": "1/2015"}, {"body": "would need added tildeiorouterjs since actual originally invoked router seems fairly trivial gladly pr core ok addition seems like exist parity", "d": "1/2015"}, {"body": "jayphelps thanks wait ok core open pr", "d": "1/2015"}, {"body": "seems reasonable lets check mr router sure", "d": "1/2015"}, {"body": "asakusuma seems like good idea add routerjsember router pr", "d": "1/2015"}, {"body": "awesome submit pr shortly", "d": "1/2015"}, {"body": "teh tildeiorouter pr open another pr emberjs", "d": "1/2015"}, {"body": "asakusuma looks like tildeiorouterjs merged", "d": "1/2015"}, {"body": "pr merged closing thanks", "d": "1/2015"}, {"body": "similar issue", "d": "1/2015"}, {"body": "topqualityua recreate without torii", "d": "1/2015"}, {"body": "mixonic try today recreate without torii nt think torii main reason ember application running", "d": "1/2015"}, {"body": "mixonic ive updated torii works great thank quick response", "d": "1/2015"}, {"body": "might want look perhaps scroll comment tom dale", "d": "1/2015"}, {"body": "gist highlights upcoming shifts ember gist find links various presentations videos links topic ember emberjs releases plans items roadmap commitment made date release may releases use feature flags optin new features beta want try early give feedback far know series releases prevent continuing use views links gist info using components address behind shift toward components tom robert stefan given talks details changes ember bring rfc post highlights roadmap invites comments good listen well", "d": "1/2015"}, {"body": "think pixelhandler joostdevries pointed great resources emberjsrfcs probably correct venue", "d": "1/2015"}, {"body": "pixelhandler joostdevries fivetanley thanks wealth information helpful trying still trying get make sense references routeable components many people noticed controllers ember look lot like components arbitrary division responsibilities agree current versions ember route entered builds controller associates model hands oldstyle view rendering view invisible write template correct name plan transition route entered renders component passing along model attr eliminates vestigial use oldstyle views associates toplevel template regular component biggest challenge switching components application business logic shared components concern controllers represented place put common business logic one action multiple views views could contain ui specific computed properties validation controllers business logic specific computed properties validation set want echo pradeek wrote use view amp controller different templates render coursedate thiscoursedate render coursedatemobile thiscoursedate controller coursedate view coursedate also use controller different views amp different templates render sections modelsections render sectionstoc modelsections controller sections ember moves really interested seeing use components achieve encapsulation reusability current amp rudimentary understanding components seems nt support find similiar manner presentation layer complex truly need way components ability communicate challenge using components since isolated default knowledge views shined us past ui many things need observer react based selections make situations like talks new ways handle understanding stated views go bye bye top level component", "d": "1/2015"}, {"body": "embercli addon chose use custom dom events components communicate see repo components eocviewport parent listens custom events components fire instead event handler component converting event ember action simply convert click event custom dom event bubbles parent component template components sued together embercli addons provides dummy app type communication components uses event pooling approach uses custom events components work together similar post opinion ember actions powerful useful sometimes using native dom events instead may right contextual solution problem still choices mix ember provides browser provides", "d": "1/2015"}, {"body": "wanted sprinkle alfredo sauce call done appreciate considerate ember community interested word street checkout", "d": "1/2015"}, {"body": "paddyobrien looked contenteditable focus work together moments seems reasonable thing support focusing contenteditable indeed thing demo case anyone else curious", "d": "1/2015"}, {"body": "sweet get pr together weekend", "d": "1/2015"}, {"body": "hit wall minutes ago updating embercli glad see nt clue getting error", "d": "1/2015"}, {"body": "ya broke build fix asap", "d": "1/2015"}, {"body": "aexmachina think might better demonstrate issue running calling class mixin seems cause prototype mutated returns true function calls second time new class nt created thus sideeffect calling persists second test new class created returns false prototype", "d": "1/2015"}, {"body": "okay outcome bulletproof way detect whether class contains given mixin nice improve close issue leave", "d": "1/2015"}, {"body": "would use hbs using templates file done tutorial time tutorials add templates script tag blocks body would give two templates html html script tag set considered template keep mind naming also important", "d": "1/2015"}, {"body": "okay makes lot sense thanks clarifying might still good emphasize guide templates individual files notion template quite bit different something like rails elaboration point getting started guide would good addition think", "d": "1/2015"}, {"body": "fwiw guides live repo please track issues", "d": "1/2015"}, {"body": "case helps understand context came across working tutorialblog post pushed draft case want dig deeper actual use cases", "d": "1/2015"}, {"body": "eager url updating removed due number bugs cropped last releases", "d": "1/2015"}, {"body": "removal land initially", "d": "1/2015"}, {"body": "ah bummer read related issues leading removal feature completely agree tricky issue complex one solve might turn issue completely unrelated eagerness updating url though fundamental problem whenever transition error substate updated url point eagerly otherwise reason shown jsbin final state ui original route torn replaced error template people probably instinctively reach back button hoping bring back last working state app probably temporarily solved accident via eager url updates appears discussion around feature around loading use case shown already nt work synchronous errors today even eager url update imagine correct solution make sure update url settled error state sure url would though", "d": "1/2015"}, {"body": "chancancode initial response bit hip mobile could nt really review jsbin detail mostly let know eager updating feature removed case fundamental issue try review detail soon", "d": "1/2015"}, {"body": "response helpful able find related materials understand background", "d": "1/2015"}, {"body": "good question seems like better question stackoverflow discourse forum bug something broken prevents working please feel reopen", "d": "1/2015"}, {"body": "tomdale rwjblue move issue emberjsbuild", "d": "1/2015"}, {"body": "size nonobservable currently mean observing template likely causes issues seems really crappy", "d": "1/2015"}, {"body": "stefanpenner crappy", "d": "1/2015"}, {"body": "indeed observing size property template though", "d": "1/2015"}, {"body": "crappy crappy framework kind bummer mandatory setter ca nt really use manipulate pojos ever put template either", "d": "1/2015"}, {"body": "good know remember problem code worked believe exceptions thrown lucky callers map class observe changes manually", "d": "1/2015"}, {"body": "fivetanley stefanpenner thanks explanation create workaround issue unfortunately qualify good enough contribute source otherwise would done pr resolve issue thanks wonderful job done already", "d": "1/2015"}, {"body": "duplicate", "d": "1/2015"}, {"body": "mixonic confirm summary may propattr thing backwards", "d": "1/2015"}, {"body": "way looks like camelcased property expected camelcase property looks like works", "d": "1/2015"}, {"body": "wagenet normalization code caught believe issue would tests around elsewhere using maxlength example perhaps unearth bug caching code something", "d": "1/2015"}, {"body": "turns new regression last worked rendered", "d": "1/2015"}, {"body": "", "d": "1/2015"}, {"body": "seeing issue anything help", "d": "1/2015"}, {"body": "normalization canary point good news fix since would go normalization happens attrnodes sadly think make beta pretty big change make late beta cycle", "d": "1/2015"}, {"body": "kiwiupover top head believe related try dig around confirmdeny", "d": "1/2015"}, {"body": "rwjblue thanks thanks heaps", "d": "1/2015"}, {"body": "tomdale dig old convos explaining choices made", "d": "1/2015"}, {"body": "tomdale tl dr historyhash location classes assume different paths cause extra history states created several users reported redirect issues index path path app index inside app comment assertions try noted redirected try nonhistory supported browser like many servers cause infinite redirect battle visitor lands ember redirects via support server redirects back etc etc", "d": "1/2015"}, {"body": "jayphelps try support browsers naively considered carefully case hash routes particular index state given probably makes sense us app either mandate trailing slash rails seems pretty easy via likely always use history location thanks info", "d": "1/2015"}, {"body": "tomdale problem complex situation explain manywish easy way support btw would guess nt want serve routes trailing slashes via one otherwise normal emberroute urls get trailing slash incorrectly gt wrong", "d": "1/2015"}, {"body": "try support browsers pushstate use autolocation", "d": "1/2015"}, {"body": "closing", "d": "1/2015"}, {"body": "use property name let us know problem persists suspect issue", "d": "1/2015"}, {"body": "sorry luck warning attempting render view passing ddbinding view helper without quoted value syntax ambiguous either surround ddbinding value quotes remove ddbinding would nt surprised related setattribute comment", "d": "1/2015"}, {"body": "zyllorion given try canary", "d": "1/2015"}, {"body": "based zyllorion comments related htmlbars issue believe resolved closing happy reopen needed", "d": "1/2015"}, {"body": "actually running issue tried follow zyllorion comment htmlbars could nt find anything similar tips narrowing code could causing issue", "d": "1/2015"}, {"body": "update latest canary ember bug htmlbars", "d": "1/2015"}, {"body": "looks like fixed", "d": "1/2015"}, {"body": "wagenet keep ticket open fix lands emberjsmaster since requires pr merged version cut pr made emberjs updating merged think important record open", "d": "1/2015"}, {"body": "reopening dep updated", "d": "1/2015"}, {"body": "arg typo parent", "d": "1/2015"}, {"body": "would nice way possible inspector logging stepping viewroute etc lifecycle demand teddyzeenny sound reasonable handwaving around describing magic", "d": "1/2015"}, {"body": "trek understand correctly mean something like pause lifecycle hook click next hook continue unless use something like breakpoint halts js execution need builtin async support return blocking promises halt transition seems currently feasible routes views nt enough info know possible let look", "d": "1/2015"}, {"body": "teddyzeenny exactly automatic resolution objects easy get trolled silent failures misspellings placing items wrong place get used double checking think would obvious walked lifecycle messages like called didinsertelement view subclass generated framework", "d": "1/2015"}, {"body": "happening ember special casing attribute named whole codepath removed", "d": "1/2015"}, {"body": "see", "d": "1/2015"}, {"body": "closing favor pr", "d": "1/2015"}, {"body": "cowboyd thanks sure missed pr applied code pr repo tests still ran looks good", "d": "1/2015"}, {"body": "reason ca nt observe applicationcontroller guide", "d": "1/2015"}, {"body": "thing container lookup works nice also nice access actual emberroute object", "d": "1/2015"}, {"body": "excellent question stackoverflow try use issues report manage bugs", "d": "1/2015"}, {"body": "getting index indeed feature missing framework long time thankfully tim evans implemented read enabling feature flags canary builds reading configuration need sure put script tag loading ember also add block pregenerated ember cli", "d": "1/2015"}, {"body": "need array sequential integers could use subexpression generate range javascript emberhtmlbarsregisterhelper range function values var start values var count values var ret var lt count retpush istart return ret handlebars range item item", "d": "1/2015"}, {"body": "fivetanley workmanw thank helpful trek much make something fundamental take minute take hour trial error going forums bug kind issue attitude makes framework less usable", "d": "1/2015"}, {"body": "make something fundamental take minute take hour trial error going forums bug everyone different levels experience aggregate every feature every library takes someone hour trial error stackoverflow excellent place triage types questions ember community great answer rate always direct people questions stackoverflow think best location type communication use issue specifically tracking bugserrors read issue submission guidelines link also posted top new issue page like large projects significant amount community volunteer team spent reading organizing issues part contributing document ask difficulties using emberjs question usage please ask question stack overflow helps us prioritize errors need fixing next release glad someone able answer question try communicate venue think questions best serve community issue example way surface many answers bestcorrect answer answering questions issues also tendency turn long semitraining experiences immensely useful person asking also fills every project collaborator inbox every new reply makes harder us manage project people least ember community also tend search stackoverflow github issues problems like one experienced problem answered means next person runs hurdle nt benefit answered could please repost question stackoverflow sure fivetanley workmanw also reply giving chance select best answer letting future people upvote answers worked", "d": "1/2015"}, {"body": "agree topic belongs stackoverflow irc creating issue bug lack understanding compose two ember tools specific use case case two tools helper array filled numbers array could handled static array computed property subexpression wesley comment", "d": "1/2015"}, {"body": "mmun must read either original message fivetanley message index missing go create junk array manually exists reason getting index indeed feature missing framework long time thankfully tim evans implemented", "d": "1/2015"}, {"body": "trek nt buy reasoning everyone different levels experience aggregate every feature every library takes someone hour trial error talking something fundamental programming language loop integer input denying usage simply makes using framework harder merit feature issue asking fact provide answer original post go create junk array manually exists reason fact question asked solution issue", "d": "1/2015"}, {"body": "core principle handlebars ca nt add two numbers either despite fundamental operation programming languages suggest improve documentation", "d": "1/2015"}, {"body": "explaining principle merit proper way merit would mean better way nt better way principle flawed nt exist", "d": "1/2015"}, {"body": "flawed perfectly natural solutions problem array junk functional languages fine without loops", "d": "1/2015"}, {"body": "flaw imo need redundant array memory another lines code words principle makes harder less efficient task", "d": "1/2015"}, {"body": "future could support generators alleviate memory concerns", "d": "1/2015"}, {"body": "mmun thats cool idea handlebars block syntax yield generator function values block", "d": "1/2015"}, {"body": "mmun pretty sure generators already work react", "d": "1/2015"}, {"body": "trek yes react uses dom builderjsx templates allow full js expressiveness features importantly preserve js context scope prefer power lesser overhead approach compared forced propertycp land feed rather simple handlebars templates approaches seen said handlebars templates friendlier designers workflow lets edit application templates even severe limits ca nt expect allow designer refactor view make changes willy nilly unless understand ember apps specific naming conventions refactors also require developer involvement likely result change stuff within moustaches well ideally ember framework allow certainly interested dom builder rendering capability support native jsjsxlike apporaches preferably layered within embers core failing via addon new isomorphic support may make much easier injectable renderers nt looked details", "d": "1/2015"}, {"body": "chrism coming calls registry likely result calling initializer one easy way find deprecations triggered set throw error instead printing deprecation console use stack determine offenders app going close dupe basically message helpful", "d": "1/2015"}, {"body": "demo flag open dev tools setup break exceptions able take look stack see calling", "d": "1/2015"}, {"body": "hi thanks much rwjblue makes perfect sense trying break exceptions chrome try see stack amp find containerlookups", "d": "1/2015"}, {"body": "great question stackoverflow try use issues reporting bugs check contributing guidelines information ways post please link stackoverflow question back posted", "d": "1/2015"}, {"body": "miguelcobain able post get help", "d": "1/2015"}, {"body": "trek yes working solution rather see ember supporting something like overridable concatenated properties overridable attributeclass bindings", "d": "1/2015"}, {"body": "feature desired core would happy try make pr probably behind feature flag", "d": "1/2015"}, {"body": "submitted failing test htmlbars yesterday plan attack needs someone pick", "d": "1/2015"}, {"body": "fixed master beta using htmlbars", "d": "1/2015"}, {"body": "still seeing issues embercli ember emberclihtmlbars", "d": "1/2015"}, {"body": "see", "d": "1/2015"}, {"body": "wagenet originally reported issue issue plain html template using quite different screenshot original jsbin demonstrating working properly", "d": "1/2015"}, {"body": "wagenet closing favor specifically issue jsbin", "d": "1/2015"}, {"body": "rwjblue right mistake", "d": "1/2015"}, {"body": "try date version ember confirm work nt know bug already fixed going guess related use strict bugs beta canary", "d": "1/2015"}, {"body": "get back updated thing", "d": "1/2015"}, {"body": "start looking advanced ways debug hoping someone webkitsafari teams info stefanpenner know anybody", "d": "1/2015"}, {"body": "update initial checks iphone show change able push changes production tomorrow", "d": "1/2015"}, {"body": "get isolated reproduction private access app public url hit investigate", "d": "1/2015"}, {"body": "mytennishotelcom public url minified code", "d": "1/2015"}, {"body": "update console indeed return error one would expect find localstorage calls application code safariprivate localstorage issue really pain back far issue goes problem actually fixed question remains error localstorage removed place used infinite page reload loop chrome maybe ember killed error message way mytennishotelcom still version load throws error seems leak ember file guys want investigate close issue", "d": "1/2015"}, {"body": "killapl case nt known available safari private browsing mode design need feature detect whether available act accordingly see info unrelated ember", "d": "1/2015"}, {"body": "question remains error wonder ember swallowed error mistake along im closing nt believe ember related merely feature safari", "d": "1/2015"}, {"body": "sure thanks time sorry nt actually bring value", "d": "1/2015"}, {"body": "killapl might actually surprised value sure one notice change ticket helps others correlate diagnose symptoms debugging certainly nt vain", "d": "1/2015"}, {"body": "mmun stefanpenner", "d": "1/2015"}, {"body": "shripathee seems fixed canary", "d": "1/2015"}, {"body": "mmun changing order component properties instantiation breaks canary believe behaviour dependent order properties also issue set static value component property still exists canary", "d": "1/2015"}, {"body": "behaviour though correct", "d": "1/2015"}, {"body": "nt see could change behaviour order independent working setters example expect log", "d": "1/2015"}, {"body": "another specific example dependent property indeterminism cps recall also issue dealing undefined inputs cps due assignment order object create occurs init called mmun example cant really work reliably clear mutual dependencecircular dependency regard impossible kind thing going easy address given cps work without maintaining dag ordering dependencies assignment could applied proper order could possibly detect direct indirect circular deps feat attemot sink hole performance", "d": "1/2015"}, {"body": "ahacking really nothing cps dependency keys problems would arise using native setters problem setter pattern general order matters equivalent setters example personally never use setter aspects cps", "d": "1/2015"}, {"body": "mmun something related template compiler look properties order compiled template", "d": "1/2015"}, {"body": "manoharank yes good catch must bug handlebars ember depended regardless fixed htmlbars currently beta", "d": "1/2015"}, {"body": "mmun honestly didnt look minute detail particular issue happens set b depends b b regular property know problem inside objectcreate assigns passed props property setter would get undefined b nt set yet", "d": "1/2015"}, {"body": "also since js nt defined order object keys likely get different assignment ordering different browsers", "d": "1/2015"}, {"body": "would amazing wonder multiple block params mmun mixonic rwjblue", "d": "1/2015"}, {"body": "fivetanley able index would lovely", "d": "1/2015"}, {"body": "timevans easy add think change", "d": "1/2015"}, {"body": "ok seems strange test belongs emberhtmlbars tad confusing", "d": "1/2015"}, {"body": "quantumking working expected want ember take care stream stuff use js var registerhelper emberhtmlbarsregisterhelper var makeboundhelper emberhtmlbarsmakeboundhelper registerhelper humanreadabletype makeboundhelper function params switch params case information return information case text return freeform text", "d": "1/2015"}, {"body": "mmun need every bound helper", "d": "1/2015"}, {"body": "wraps", "d": "1/2015"}, {"body": "could", "d": "1/2015"}, {"body": "think shim", "d": "1/2015"}, {"body": "quantumking curiosity using register helpers", "d": "1/2015"}, {"body": "mmun previous example registering view helpers would replace", "d": "1/2015"}, {"body": "right using simulate previous behaviour", "d": "1/2015"}, {"body": "nt want conflate bound helpers view helpers become deprecated anyways prefer separate registerviewhelper", "d": "1/2015"}, {"body": "ok well thanks help mmun really appreciate", "d": "1/2015"}, {"body": "needs serious documentation like new approach streams arguments passed helper much cleaner", "d": "1/2015"}, {"body": "favor separate functions modules world embercli specifically simply done need separate functions keeping api relatively small composable much better results trying make every single possible scenario single function call", "d": "1/2015"}, {"body": "absolutely possible make addon folks want everything kitchen sink style api strongly prefer keep public api focused point", "d": "1/2015"}, {"body": "registerboundhelper nt seem crazy common glue would normally sort thing kind common patterns ember wraps glue code rather manually wiring things together seems like burden put user upgrading using embercli world", "d": "1/2015"}, {"body": "fivetanley embercli supposed true modules build ember helper module point exactly want matter fact helper dash name nt even need use resolver work", "d": "1/2015"}, {"body": "specific use case trouble refreshing model click page link already page think web page users expect happen cc machty wycats tomdale", "d": "1/2015"}, {"body": "pass model transitionto linkto explicitly saying use model ready go want cause lookup transition id instead becomes", "d": "1/2015"}, {"body": "issue second case nt refresh model linkto arguments", "d": "1/2015"}, {"body": "router look params pass see match serialized params existing model loaded route without calling model hooks", "d": "1/2015"}, {"body": "ah nt realize optimized like carry", "d": "1/2015"}, {"body": "ditto trying migrate helper today found hard work debug streams wrapped closures little documentation might go long way", "d": "1/2015"}, {"body": "see timevans workmanw explain types helpers require manually working streams migrate", "d": "1/2015"}, {"body": "two helper use cases deals looking custom action targets components need able target parent view target currently supported embercomponenttargetobject nt allow provide target arg look via stream basic input components inputtextarea select checkbox button etc use custom view mixin errormixin tl dr components setup custom stream dynamically value bound ember data model handle validation errors lookup valuebinding setup secondary dynamic binding errors hash eg valuebinding userage setup stream keep sync regards sure going catch loads flack ember proper eds validation handling dserrors creates lot boiler plate attempt reducing", "d": "1/2015"}, {"body": "custom translation helper named localization helper named binds interpolated string string ends dynamically created using bindings would like decompose helpers string concatenation translation means need write join helper returns stream nt currently see solution providing dynamic concatenation strings passed helper left use cases involve shorthand action helpers trigger events router controller action would prefer keeping helpers terse since used app helper creation function bypass requirement components important use case especially using localization internationalization html attributes", "d": "1/2015"}, {"body": "timevans great thanks may also interested writing htmlbars ast transform rewrites status compile time possible write ember addons workmanw sorry hard time understanding could show example use helper template", "d": "1/2015"}, {"body": "mmun would fantastic way change code thanks idea", "d": "1/2015"}, {"body": "merged need go next weekly meeting", "d": "1/2015"}, {"body": "fixed componentsember updated tagged build", "d": "1/2015"}, {"body": "thanks", "d": "1/2015"}, {"body": "never reported bug ember community bit surprised nt got reply yet hoping nt report incorrectly", "d": "1/2015"}, {"body": "appears duplicate explanation work", "d": "1/2015"}, {"body": "brilliant using preventsdefaultfalse parent element fact fix checkboxes also case file inputs triggered click thanks much", "d": "1/2015"}, {"body": "mean instead", "d": "1/2015"}, {"body": "wooow yes thank", "d": "1/2015"}, {"body": "provide jsbin", "d": "1/2015"}, {"body": "easily would try recreate scratch much company logic complex models see recreate get mo warning moment show stopper suspect case adding model generator code somewhere happy inspect debug point look", "d": "1/2015"}, {"body": "without steps reproduce clarity versions using issue nt actionable", "d": "1/2015"}, {"body": "sorry thought canary would enough debug ember debug ember data debug jquery take quick look source try find generator code try mock something reproduce", "d": "1/2015"}, {"body": "duplicate", "d": "1/2015"}, {"body": "template using instead message indicates", "d": "1/2015"}, {"body": "aha nested component could error message enhanced name viewcomponent error currently says controller bit misleading thanks help", "d": "1/2015"}, {"body": "absolutely need add deprecations guide deprecation link guide information interim probably best list things checkwork references made deprecation updated ghost remove usage emberobjectcontroller", "d": "1/2015"}, {"body": "great thanks related issue changes method controller property access issues latest build passing controller property array objects ca nt see anything obvious commit history componentname parammycontrollerarray passes null used work fairly sure hav nt changed anything area code", "d": "1/2015"}, {"body": "think documentation could really use example load multiple models controller especially area changing", "d": "1/2015"}, {"body": "componentname parammycontrollerarray passes null zyllorion still work properly jsbin demo think documentation could really use example load multiple models controller especially area changing maybe really sure document differently hooks present route hooks documented general", "d": "1/2015"}, {"body": "reason mention started took ages find forum post worked ending slightly obscure export default emberrouteextend model function params var self may able remove wrapping promise return new emberrsvppromise function resolve new emberrsvphash selfstorefind paramssomeid selfstorefind paramssomeid selfstorefindall function results resolve issue reason asking removing proxying behaviour specifying modelfieldname logically expect requirement controllerpropertyname viewpropertyname hence made sense code nt work anymore though hav nt found access property yet working", "d": "1/2015"}, {"body": "zyllorion shorter version work also need wrap promise call function hash model hook wait promises resolve template loads set model return value model previously", "d": "1/2015"}, {"body": "aha great suspected simpler way thanks slightly tangential question would recommended way propogate handle feedback errors ajax calls wrapping promise could set failure function reroute erroradvice page without probably ember magic need know", "d": "1/2015"}, {"body": "mentioned blog post reason need get plain array", "d": "1/2015"}, {"body": "also sorry inconvenience reopen githubcomemberjsdata issue nt think related ember", "d": "1/2015"}, {"body": "opened githubcomemberjsdata", "d": "1/2015"}, {"body": "known issue", "d": "1/2015"}, {"body": "closing favor meta", "d": "1/2015"}, {"body": "fyi tried well canary see issue", "d": "1/2015"}, {"body": "kind question probably best asked stackoverflow guess route probably setting query params controller transition completes overwriting value user entered meantime two sources truth ie user input routeurl param unavoidable timing issues deal may want think separating user editable property route param property better control one authoritative time already debounce user input control propagation user input property value route param property", "d": "1/2015"}, {"body": "believe understand mean however still inclined think issue emberjs hence continuing discussion instead asking stackoverflow keep reading reasoning behind statement able work around issue solve introduce new properties controller properties handle use case properties bound text field bound query param bound anything idea observe send debounced actions router like one crucial difference debounced notifications sent initialize property controller based query param needed hook access query params controller used route seems something route responsibility code something like works truly smells thing even though sources truth user editing one time one user modifying authoritative one new value flow thing user editing property things bound property nt make sense since apparently notion flowing changes one source bound things use manage properties add hook deal branches feels counter intuitive missing something thanks bruno", "d": "1/2015"}, {"body": "yes feel pain ember user come conclusion computed properties cps observers path hell part problems dealing set aware route driven controllers get created persist life application modelcontent changed router make sure observe modelcontent property reset ininitialized flag router ugly largely ember way due cp observer side effect architecture enough shenanigans use private functions suspend observers run loop deferred processing run guards eventually get something works avoids multiple recomputations ember fragile takes immense amount time dealing corner cases feedback loops nt use embers array computed properties either broken many surprising ways may like review ember rfc put experiences views forward rather critical computed properties observers based experiences ember think deprecated unidirectional data flow adopted tame complexity", "d": "1/2015"}, {"body": "whip jsbin showing example", "d": "1/2015"}, {"body": "mitchlloyd never getting errors like bug compiler template causing", "d": "1/2015"}, {"body": "get trying htmlbars take care unless someone else wants", "d": "1/2015"}, {"body": "oneeman please", "d": "1/2015"}, {"body": "sorry markdown fail original post see template causing error oneeman correct", "d": "1/2015"}, {"body": "thanks quick fixes issues everyone awesome work", "d": "1/2015"}, {"body": "", "d": "1/2015"}, {"body": "submitted fix", "d": "1/2015"}, {"body": "mitchlloyd thanks reporting", "d": "1/2015"}, {"body": "closing removal shimsham definition fixed", "d": "1/2015"}, {"body": "zyllorion specify clearly fixed packages error get without including vendorfiles", "d": "1/2015"}, {"body": "came workaround using component instead named outlet", "d": "1/2015"}, {"body": "tell us like customize", "d": "1/2015"}, {"body": "request really two parts wrote embermobiletouch dropin addon enabling full gesture support embercentric approach eventing includes removing click default action linkview event favor tap part make easy change event triggers action click tap action helper requires overwriting helper like see part make possible listen one event action helper often mobile one event trigger behavior instance ios style slidetoggles trigger tap press pan critical instance allow one gesture initiate tap many users especially older ones conflate tapping pressing default working towards allowing either tap press event trigger linkview action", "d": "1/2015"}, {"body": "incidentally open pring changes acceptable nt require much", "d": "1/2015"}, {"body": "boom done", "d": "1/2015"}, {"body": "may miss something would nt good also rename first parameter initializers doc examples embercli generators", "d": "1/2015"}, {"body": "ilkkao stable yes kinda makes wonder need generators specific versions ember", "d": "1/2015"}, {"body": "currently proper way getting service container register global callback popup window came instantiating using instantiate false better way course could bypass moment defaultcontainerlookup say real solution coming", "d": "1/2015"}, {"body": "addressed emberjswebsite feel free close rwjblue", "d": "1/2015"}, {"body": "guess closed", "d": "1/2015"}, {"body": "documentation updated reflect actual behavior", "d": "1/2015"}, {"body": "lolmaus sure policy already updated master see branch consider done believe updated web next stable release", "d": "1/2015"}, {"body": "ah okay see reference thread references nt produce email notifications thx pointing", "d": "1/2015"}, {"body": "bubble action passed bcardarella looking", "d": "1/2015"}, {"body": "yes suspect issue camelcasing thanks", "d": "1/2015"}, {"body": "case actual view function invoked instance calls currentvalue event annoying conflicting method name action name", "d": "1/2015"}, {"body": "confirm another wtfminute", "d": "1/2015"}, {"body": "conflict resolved drop setting properties root viewscomponent template set sometime soonish maintain root properties properties throughout semver", "d": "1/2015"}, {"body": "bitten well extract input focusing behavior helper separate function use right finding forspareparts would mind taking stab fixing", "d": "1/2015"}, {"body": "closing favor", "d": "1/2015"}, {"body": "seems problem caused sortsolutions function routerecognizer comment top function mentions general strategy mention purpose first place first intuition using router routes priority based order adding router would match route first route search matched think behaviour easier document easier predict developer suppose changing release nogo backwards compatibility maybe could addressed", "d": "1/2015"}, {"body": "drogus refile", "d": "1/2015"}, {"body": "posted fix", "d": "1/2015"}, {"body": "pulled beta stable cc rwjblue", "d": "1/2015"}, {"body": "commenting stops showing needs attention list", "d": "1/2015"}, {"body": "test latest stable canary provide example jsbin failing test us dive quickly", "d": "1/2015"}, {"body": "made super simple demo showing pass index general definitely need jsbin reproduction showing issue able track happening situation", "d": "1/2015"}, {"body": "created jsbin find later ember release work tried use report error failed reproduce issue sorry sure jsbin fail later version works think maybe issue related older versions fine close thank time", "d": "1/2015"}, {"body": "thanks confirming us", "d": "1/2015"}, {"body": "chatting oneeman irc fairly sure fix awesome work salzhrani oneeman done upstream htmlbars beta line needs updated parse namespace pass third parameter call", "d": "1/2015"}, {"body": "mentioned oneeman following work canary today", "d": "1/2015"}, {"body": "thanks salzhrani first thought issue closed maybe keep open also works", "d": "1/2015"}, {"body": "merged issue closed", "d": "1/2015"}, {"body": "tried take look could nt figure change codepen ember version likely obtuse test", "d": "1/2015"}, {"body": "ok made jsbin canary", "d": "1/2015"}, {"body": "thanks robert see got rough idea problem lies", "d": "1/2015"}, {"body": "merged fixed htmlbars version bump", "d": "1/2015"}, {"body": "updated canary beta htmlbars seems working properly", "d": "1/2015"}, {"body": "see behavior persists", "d": "1/2015"}, {"body": "regression nothing htmlbars fixed badbehaving jsbin note space list wellbehaving jsbin space list bad behavior quirk way use template isolation combined bug rendering engines chrome safari check first jsbin fine firefox clean fix nt think dropping handlebars template compiling clean think would justify point release regardless behavior correct", "d": "1/2015"}, {"body": "mixonic nt think justifies point release mainly affects windows users far see perfectly good work around remove compiling templates around corner think anyone run wait", "d": "1/2015"}, {"body": "imo think cut bitten always trivial upgrade next sub version many large apps make use publicprivate apis fluxing lot lately core team job keep private apis stable providing patches regressions shows community take seriously know answer nt always well upgrade happy help anything also realize workaround sends wrong message edit rwjblue clarified fixed nt use compiler anymore nt trivial sounds since needs fixed upstream anyone tracked offending area handlebars", "d": "1/2015"}, {"body": "jayphelps discussed options best one would stripping windows newlines templates compiling nt develop windows nt feel comfortable landing patch may sideeffects needs testing offending area rendering engines chrome safari incorrectly consider significant whitespace inserting insignificant whitespace nt opened ticket jayphelps really sorry feel letting community need choose focus efforts please nt think serious fixing bugs imo unwarranted reaction spent significant amount time nailing problem something reproducible specific lot people thread use windows ember happy help land patch also happy advocate release nothing ruled", "d": "1/2015"}, {"body": "mixonic sorry confusion thought edit clarified mistakenly thought trivial known fix already place choosing back port digging quite bit well came conclusions also comment response jonnii comment", "d": "1/2015"}, {"body": "jayphelps happy happy", "d": "1/2015"}, {"body": "", "d": "1/2015"}, {"body": "works latest embercanary thanks oneeman", "d": "1/2015"}, {"body": "mixonic believe something working currently cd", "d": "1/2015"}, {"body": "focusing attr bindings piece cake", "d": "1/2015"}, {"body": "mixonic believe something working currently cd", "d": "1/2015"}, {"body": "underway tests failing large number changes", "d": "1/2015"}, {"body": "need deprecated nt ever public api legacy support appendchild string buffer", "d": "1/2015"}, {"body": "seanpdoyle sorry losing track holidays look moment regroup", "d": "1/2015"}, {"body": "fix released ember still broken ember", "d": "1/2015"}, {"body": "mutewinter correct changes included already included betas", "d": "1/2015"}, {"body": "oh bad issue causes serious bugs application hard diagnose incorporated rsvp patch ember version worries developers partial runloop finish results strange bugs", "d": "1/2015"}, {"body": "mutewinter yep agreed weird hard diagnose implementing bypasses issue affected versions right around corner", "d": "1/2015"}, {"body": "closed", "d": "1/2015"}, {"body": "jcbvm ended anyone curious change line", "d": "1/2015"}, {"body": "thing tried variation courthead solution works chrome half time really wrote jasmine spec keep pressing browser half times spec passes half fails error guess sort race condition involved", "d": "1/2015"}, {"body": "guys suggest update libraries using problem solved updated several libraries latest versions incompatible current ember version", "d": "1/2015"}, {"body": "ruslanzavacky libraries talking libraries using ember requirejs jquery latest versions", "d": "1/2015"}, {"body": "nikolas throw error update error", "d": "1/2015"}, {"body": "longer require package longer issue closing happy reopen repro repo latest canary", "d": "1/2015"}, {"body": "jacdx nt need shim handlebars requirejs config newer handlebars defines module via umd", "d": "1/2015"}, {"body": "everyone else thread make nt including shims vendor clobbering handlebars module update handlebars export module sees amd define instead global since shim would end breaking", "d": "1/2015"}, {"body": "longer require handlebars package rwjblue curious templates get compiled beta assuming want compile browser know recommended currently use handlebars gone", "d": "1/2015"}, {"body": "tfga yes actually aliased internally", "d": "1/2015"}, {"body": "even easier fix include handlebarsjs file almondjs order relevant includes", "d": "1/2015"}, {"body": "stefanpenner needs done", "d": "1/2015"}, {"body": "need made performant", "d": "1/2015"}, {"body": "initial implementation done definitely still room improvement prsissues welcome", "d": "1/2015"}, {"body": "bug today", "d": "1/2015"}, {"body": "ya lame shifting goes away entirely item controllers become deprecated suspect may see fix unless someone spare time dig", "d": "1/2015"}, {"body": "would want use without specified case use", "d": "1/2015"}, {"body": "sure smilecat still regression lol maybe set value cp changes later", "d": "1/2015"}, {"body": "research attribute set initialized empty string embertextsupport embertextfield removing default values fixes issue reported odd using case specified assume input checkbox", "d": "1/2015"}, {"body": "create another component use instead inherit possibly making inherit common base something mixonic thoughts", "d": "1/2015"}, {"body": "weird indeed sounds little logical jan robert jackson notifications githubcom wrote research value attribute set initialized empty string embertextsupport embertextfield removing default values fixes issue reported odd using embertextfield case type submit specified assume input checkbox embertextfield reply email directly view github", "d": "1/2015"}, {"body": "rwjblue general button class seem ripe become series mixins views general working changes attribute bindings definitely noted places bindings seem unexpected test see changes address issue regardless slimmer viewcomponent makes sense", "d": "1/2015"}, {"body": "please provide reproduction nt think much without one", "d": "1/2015"}, {"body": "fixed must miss tagged fixed", "d": "1/2015"}, {"body": "stefanpenner flesh assume mean modify clear translation would needed", "d": "1/2015"}, {"body": "nt methods properties really conflict", "d": "1/2015"}, {"body": "igort something comply spec says definitely conflict", "d": "1/2015"}, {"body": "nt exist spec", "d": "1/2015"}, {"body": "igort internal key listing prop never implement method spec know object single thing named", "d": "1/2015"}, {"body": "keys nt exist spec keys since functions pinned properties conflicts", "d": "1/2015"}, {"body": "wanted return fascinating conversation original issue beartrap lurking ember codebase plan action pr warning docs feature", "d": "1/2015"}, {"body": "favor pr deprecating arraycomputed reducecomputed people want keep using could directed addon would warning removal", "d": "1/2015"}, {"body": "simple replacements broken mapreduce whole array change wed jan edward faulkner notifications githubcom wrote favor pr deprecating arraycomputed reducecomputed people want keep using could directed addon would warning removal reply email directly view github", "d": "1/2015"}, {"body": "working", "d": "1/2015"}, {"body": "timevans mind making pr", "d": "1/2015"}, {"body": "would love help suggestions", "d": "1/2015"}, {"body": "ground shifted little bit since opened proposal continue updating ember dependencies instead updating latest move esperanto contributor project well eager find fix bugs may present nt hesitate file issues find behavior expect", "d": "1/2015"}, {"body": "salzhrani since opened ticket lot changed would want eviltrout samsaffron much problem newer versions loader upmost move microlibraries esperanto", "d": "1/2015"}, {"body": "eventualbuddha ember passing tests using esperanto required many fixeschanges locally last major hurdle plan try implement today", "d": "1/2015"}, {"body": "lol issue cached last night nt brian comment", "d": "1/2015"}, {"body": "sorry long delay reporting back yes setup init routes controllers", "d": "1/2015"}, {"body": "things resolved satisfaction", "d": "1/2015"}, {"body": "less nt able satisfactorily solve problem setting primary controller use queryparams defined secondary controller default value queryparam secondary controller null used primary controller fact null converted string value primary controller manually set default value queryparam empty string controllers working queryparams useful seems like better supported option sharing controllers", "d": "1/2015"}, {"body": "queryparams useful seems like better supported option sharing controllers agreed wonder use mixin", "d": "1/2015"}, {"body": "going go ahead close however someone proposal making things better please share", "d": "1/2015"}, {"body": "updates would like help fix nt think understand internals router well enough", "d": "1/2015"}, {"body": "sorry taking long response going close deprecated think changing way works interim", "d": "1/2015"}, {"body": "shawnam sorry lack response delay agree odd since working properly going close", "d": "1/2015"}, {"body": "using ember use controller change param via thisset action handler controller get error second invocation action first one always works time constrained debug noting anyone following", "d": "1/2015"}, {"body": "also issue since ember prevented updates fix remove used display spinner overlay graphic looks like loading route deprecated nt able replicate jsbin hope helps others fix issue", "d": "1/2015"}, {"body": "another round testing ember seems working fine windowsxp without thanks guys cc mixonic", "d": "1/2015"}, {"body": "broken anyway", "d": "1/2015"}, {"body": "confirm nt working used conjunction ember anyone workaround used", "d": "1/2015"}, {"body": "told fixed let know turns case", "d": "1/2015"}, {"body": "confirm strange behavior also seems bug moving item top bottom moving items bottom top nt seem trigger problem also interesting extra items created nt appear ember view tree debugger extension like dom associated views nt remove", "d": "1/2015"}, {"body": "vincz confirm persists", "d": "1/2015"}, {"body": "mixonic yes made test current canary current beta current release", "d": "1/2015"}, {"body": "let know bug still nt fixed ember", "d": "1/2015"}, {"body": "seems still broken even fix", "d": "1/2015"}, {"body": "balaf please open new issue reproducing jsbin", "d": "1/2015"}, {"body": "disregard ca nt reproduce anymore must mistake works fine", "d": "1/2015"}, {"body": "sorry comment closed issue updated hoping catch bug fix unfortunately app still getting error moved another milestone way easily see release available", "d": "1/2015"}, {"body": "kelsin yes easy way see click pr find got merged click merge commit top commit description see commit meaning earliest release fix", "d": "1/2015"}, {"body": "ok bug must variation one thanks much", "d": "1/2015"}, {"body": "example click link wo nt get query param remove settimeout work fine", "d": "1/2015"}, {"body": "ya known bug really blocker query params entering system suspect ember approach help solve issue", "d": "1/2015"}, {"body": "jdalton", "d": "1/2015"}, {"body": "machty thoughts", "d": "1/2015"}, {"body": "selvagsz mixonic mmun gentlemen thoughts handle particularly tried amend mergedomviewbindings first step arrays currently treated depending length inside introduced lives", "d": "1/2015"}, {"body": "news one", "d": "1/2015"}, {"body": "yeah got hit", "d": "1/2015"}, {"body": "think close", "d": "1/2015"}, {"body": "also happens extending regulary would work jsbin wo nt jsbin", "d": "1/2015"}, {"body": "debugging mergemixins seems sets prototype current mixin chain applied nt get chance modify hash part mixin chain extending another class already exists base point safely work think easy way fix seems many people mix often guys thing important fix code maybe update docs specify mixing works applied abstract classes", "d": "1/2015"}, {"body": "minefield initialization also unfortunately minefield discussion deprecating least deprecating instance created think real answers lie", "d": "1/2015"}, {"body": "dgeb take look items let us know fixed recent refactoring", "d": "1/2015"}, {"body": "nt support childcontainers one fixed two depend future refactoring remove internal extend", "d": "1/2015"}, {"body": "rwjblue stefanpenner confirm issue one addressed deliberately tried avoid changing internal behavior refactoring apis refactoring complete good time resolve", "d": "1/2015"}, {"body": "issue keyword scope hit local path lookup see sets initially inherit parent template scope case outer context helper called", "d": "1/2015"}, {"body": "sorry missed post pressed hi got similar issue trying make kind smart forms exactly problem wish could find way catch actions components maybe ca nt find idea component catch action without controller mediator example option example declare actions catches example still nt solve problem still property controller binded component connect least make controller less bloated", "d": "1/2015"}, {"body": "creating component would like use attribute named got depreciation notice ok use name needs goof something view", "d": "1/2015"}, {"body": "safe override viewcomponent subclasses viewcomponent nt proxy internalprivate property used track views current rendering state", "d": "1/2015"}, {"body": "rwjblue hum still get depreciation notice ok tried couple different ways seem called depreciation notice", "d": "1/2015"}, {"body": "ran bug spent time investigating today underlying issue adds array observer content depends things array proxy content items changed array proxy content changed results calls calls done first invoked result believe could fixed keeping meta information number running array observers skipping runs already ran try come example solution ideas please let know", "d": "1/2015"}, {"body": "forgot example setup without javascript var arrayproxy arrayproxyextend arrangedcontent embercomputed content function return thisget content create embera firstitem var wrapper emberarrayproxyextend content arrayproxy create run function arrayproxyset content embera newfirstitem setup invoke twice twice", "d": "1/2015"}, {"body": "stefanpenner application route actually good place go misses possibility inject stuff kinds entities like possible intializer far see di initializer without abusing course missing something", "d": "1/2015"}, {"body": "currently implementing url fragment behavior query parameters thanks work done far bump", "d": "1/2015"}, {"body": "sorry late response besides usual channel watching changelogs may include minor changes personally care github show branch tag commit lives example merged see landed stable release yet code actually scroll page though changes made allow sort code happen talked core members implementation still plan try add core meantime definitely use add code fairly straight forward simple cases somethine like totally untested find cycles work working example suggest plow ahead", "d": "1/2015"}, {"body": "wycats status addenumerableobserver still shows member emberarray started using enumerable observers months back issue came across post switch something else need", "d": "1/2015"}, {"body": "issue wasted several days development time user new ember starting test existing ember app absolutely idea promise nt resolving tests timed hint might causing problem horrible experience put sample code continuous redrawing views app unable run integration tests app jsbin illustrates problem", "d": "1/2015"}, {"body": "also bitten couple weeks ago additional documentation testing guide would helpful", "d": "1/2015"}, {"body": "stefanpenner seeing seems show production builds app via embercli seems like sort timing issue", "d": "1/2015"}, {"body": "ember currently running", "d": "1/2015"}, {"body": "fwiw old stackoverflow question shows issue jsbin showing error click one links top get error code throwing nt seem changed since release days fun fact enough points see op final solution posted deleted sad", "d": "1/2015"}, {"body": "investigation shows something apparently destroying top level view contains outlet next view added outlet still digging", "d": "1/2015"}, {"body": "issue funny one embercli moved inline creation ember app creating ember app output script file updated embercli nt remove inline app creation indexhtml applications running page", "d": "1/2015"}, {"body": "app use organizations array controller set index controller list organizations received want ui blocked data loading right way javascript model function thiscontrollerfor organizations set loadingdata true nt like setupcontroller called data loading", "d": "1/2015"}, {"body": "wagenet saying add observer like responsible calling controller torn lack documentation leaves huge possibility memory leaks suggest reopening issue according stack overflow thread requirement exist using guessing example require cleanup", "d": "1/2015"}, {"body": "aldendaniels required example provided", "d": "1/2015"}, {"body": "wagenet refactored fiddle like work reason console output tell array sort change reflected page effect reason workaround found set property new array e g nasty would prefer leaner way notifying property change please explain notifying property change nt work make work", "d": "1/2015"}]