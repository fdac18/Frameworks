[{"title": "historystart url conversion broken oldie wantshashchange wantspushstate", "body": "say windowlocation browser call turns location turn location happens initially computes fragment empty string return since oldie calls fragment empty currently work around problem specific case hack", "num": "3358", "d": "10/2014"}, {"title": "collectioncreate call save adding nonunique model", "body": "var mymodel backbonemodelextend defaults id null var mycollection backbonecollectionextend url foo model mymodel var mycollection new mycollection mycollectioncreate id mycollectioncreate id example two put requests sent given url seems odd second add noop pass wait true intended", "num": "3355", "d": "10/2014"}, {"title": "using pushstate hashes together", "body": "according current implementation use pushstate hashes routing need direct routes hashes routes", "num": "3352", "d": "10/2014"}, {"title": "second parameter initialize replaced object", "body": "strange issue object initialization second argument null etc live preview", "num": "3350", "d": "10/2014"}, {"title": "collection length updated models removing fetch", "body": "line backbonejs code variable nt updated models removed causes sometimes error think also problem cid id modelmap object keys model id cid", "num": "3348", "d": "10/2014"}, {"title": "move wraperror functionality backbonesync", "body": "currently wraperror always called backbonesync wraperror removed functionality moved within backbonesync provide added benefits users override backbonesync check see error parameter explicitly defined code unnecessary preemptive checks see optionserror specified every ajax call", "num": "3346", "d": "10/2014"}, {"title": "custom comparators", "body": "backbone set relies underscore isequal method determine whether attributes changed however becomes issue attribute contains another model collection really like way specify custom comparator attribute could consulted instead isequal present overriding set gets pain", "num": "3345", "d": "10/2014"}, {"title": "collectioncreate throws missing url exception given model", "body": "succeeds nt pass specifically happens passing model expected surprised want use collection url hence using instead", "num": "3344", "d": "10/2014"}, {"title": "adding model collection fails", "body": "trying add model collection however get looking code makes sense backbone passes model instance collectionget get looks model supposed add instantiated models collection", "num": "3343", "d": "10/2014"}, {"title": "server side backbonejs application serve indexhtml rest api server", "body": "good day guys sure right place question asked stack overflow google groups answer trying figure make rest api server backbone js application question keep track requests methods post get others question give client indexhtml page found example entry point site root gives index page problem solution go url users without going first get json list users without entire site understand way rest api works would like site give clients index page always connect first time need server keep track whether first connection give indexhtml along data request first one server sends indexhtml server rest api looks like little confused hope help sory bad english", "num": "3342", "d": "10/2014"}, {"title": "ajax error destroying model", "body": "error occurs server returns empty response jquery trying parse empty response forced default suggest add one condition check type request javascript default jsonrequest options var params type type type delete paramsdatatype json", "num": "3339", "d": "10/2014"}, {"title": "ioswebkitdebugproxy installation error aclocal file exist", "body": "tried install ioswebkitdebugproxy throwing teh error update brew could please guide resolve error aclocal error aclocal file exist ebiztestsmacbookpro ebiztest brew update updated homebrew gt updated formulae awscli opam qwt varnish chromedriver libssh pianobar solr daemon mksh soundtouch wireshark geoserver mongodb unixodbc ebiztestsmacbookpro ebiztest brew install ioswebkitdebugproxy gt downloading already downloaded gt autogensh autogensh aclocal aclocal error aclocal file exist", "num": "3335", "d": "10/2014"}, {"title": "allow listento callback method name string", "body": "since callback always called object context perhaps could optionally give string name method object would closely mirror functionality events hash open doors error method nt exist object people already pass undefined issue really already exists", "num": "3333", "d": "10/2014"}, {"title": "create valid equivalent event successful validation", "body": "chance could new standard event validation run errors found would really useful happen complement invalid event validation run example backbone view model shows error messaging invalid events var model backbonemodelextend validate function thisget foo bar return foo bar var view backboneviewextend events click onclick sounds like reasonable feature request let know work patch", "num": "3332", "d": "10/2014"}, {"title": "backbonecollection trigger invalid event", "body": "collection create new model property invalid attributes collection nt trigger event method always return new model return new model attribute default use method instead property", "num": "3328", "d": "10/2014"}, {"body": "behavior since initial release going need override support", "d": "10/2014"}, {"body": "meant map canonical resource identifier typically assigned backend simply put nt already model trying create first time", "d": "10/2014"}, {"body": "jridgewell backbone code working always checked id field implemented let set field complains database using properly rest api uses username find data users simply type name looking usernames also unique indexed work well ids users set username registering need submit model field completed", "d": "10/2014"}, {"body": "good catch fix short order", "d": "10/2014"}, {"body": "think addressed issue would mind giving spin", "d": "10/2014"}, {"body": "thanks quick patch think fixes right thing see code review pull request", "d": "10/2014"}, {"body": "odd trying create resource trying create another one backbonejs psychic powers nt know still exists server deleted time expired ephemeral non restful resource whatever crazy scheme might cooked", "d": "10/2014"}, {"body": "please try mailing list stackoverflow irc channel questions github issues maintaining framework", "d": "10/2014"}, {"body": "wrong argument types model constructor signature anything else incorrect future please use stackoverflow mailing list questions github issues maintaing framework", "d": "10/2014"}, {"body": "thanks read doc carefully", "d": "10/2014"}, {"body": "bad", "d": "10/2014"}, {"body": "override case", "d": "10/2014"}, {"body": "current approach overriding isequal wrapper method set reverting back original underscore isequal feels like kludge primarily nt want pollute underscore code internal logic lot stuff depends isequal secondly substitute isequal set conditions someone got sloppy forgot revert method could issues finally going forward objects may complex comparison logic instance two models equal subset attributes equal ie maintain timestamps record keeping model state nt weigh equality check guess could add custom comparator logic expand isequal respect custom comparators still feels less ideal", "d": "10/2014"}, {"body": "cbroome curious need store collectionmodel attributes reserve attributes strictly primary data types plain objects even though require nested hierarchies modelscollections app want attach model another model would nt suffice attach id attribute default usual backbone wiring sync together may something like enlighten use case", "d": "10/2014"}, {"body": "want attach model another model would nt suffice attach id attribute default usual backbone wiring sync together ramseydsilva still nt cover equality check suppose want see attribute categorymodel changed setting still need write custom isequal would know verify categorymodels within context itemmodel aside sometimes back complex components models models wo nt corresponding id api every new one get unique backbone cid instance scheduler component understands ical assigns intervals backed backbonemodel model scheduler attribute property like able say performing equality check look scheduler tojson attribute state", "d": "10/2014"}, {"body": "expected passing option backbone wait server agree adding model jsfiddle example sending post request jsfiddle agree post request specified url error post forbidden", "d": "10/2014"}, {"body": "taking talking runtime error url property must defined expected oct jeremy ashkenas notifications githubcom wrote closed reply email directly view github", "d": "10/2014"}, {"body": "know url bad example show collection url defined try call throws exception pass", "d": "10/2014"}, {"body": "cleaned fiddle try make easier read", "d": "10/2014"}, {"body": "michaelhgchen could please review reconsider resubmit issue real issue tried clarify might explained well first time", "d": "10/2014"}, {"body": "collection create meant called attributes object model instance try see works reason need pass model instance create set collection property first", "d": "10/2014"}, {"body": "mind posting failing test case jsfiddle", "d": "10/2014"}, {"body": "nambrot may wrong might wanted instead", "d": "10/2014"}, {"body": "sorry super busy currently able create jsfiddle please close nt want issue laying around ramseydsilva rake care", "d": "10/2014"}, {"body": "nambrot ah see never knew could", "d": "10/2014"}, {"body": "legitimately curious got tried reproducing thing come either overwritten model created using", "d": "10/2014"}, {"body": "ahhhhh sorry fault indeed overwritten totally ignored would impact object access", "d": "10/2014"}, {"body": "ah makes sense glad found", "d": "10/2014"}, {"body": "appears duplicate others search background", "d": "10/2014"}, {"body": "experience anyone figure sparkles", "d": "10/2014"}, {"body": "add homebrew support backbone", "d": "10/2014"}, {"body": "verified reproducible issue", "d": "10/2014"}, {"body": "infotoudaya looks like missing collection macros locate utilise pkgconfig osx system install missing dep via best luck side note wrong repo", "d": "10/2014"}, {"body": "interesting idea", "d": "10/2014"}, {"body": "big question callback resolved bind time trigger time people might expect one confused think solved docs people wo nt know feature unless reading section either would equally useful usually binding prototype methods eg looks like resolving method trigger time would involve changes core event dispatch would best maybe double size triggerevents worse might cause noticeable perf degradation option resolving method bindtime would pretty easy implement check callback string see context function property name", "d": "10/2014"}, {"body": "chatting coworker mentioned resolving method trigger time would actually buy power could switch event handler object based state resolve bind time really syntactic sugar", "d": "10/2014"}, {"body": "correct wrong believe event looking fired validation nt prevent need means fired validation confirms conditions valid nt produce", "d": "10/2014"}, {"body": "trigger event want end validation", "d": "10/2014"}, {"body": "true trigger validation change event triggered actually changing model dontshootme true probably work short term wanted ask standard event since also event whatever reason event considered undesirable like know necessary nt really fly could said", "d": "10/2014"}, {"body": "second thought see need invalid since needs fire event match change operation fails nt see ca nt extend logic successful validation since leverage trigger error messages clear", "d": "10/2014"}, {"body": "closing dupe probably others", "d": "10/2014"}, {"body": "platinumazure maybe use monkey patch whith something like javascript validatefn backbonemodelprototypevalidate backbonemodelprototypevalidate function attrs options var ret validatefncall attrs options ret true thistrigger valid options return ret preparemodelfn backbonecollectionprototypepreparemodel backbonecollectionprototypepreparemodel function attrs options var ret preparemodelfncall attrs options ret false return false thistrigger valid ret options return ret careful tested used triggering events early late could undesirable effect", "d": "10/2014"}, {"body": "oops missed duplicate think searching open issues sorry", "d": "10/2014"}, {"body": "let tag em close em", "d": "10/2014"}, {"body": "sorry return question much time passed busy month underscore partial definitely help minor improvement still requires individual functions set advance looking define arguments right events hash looking source code uses jquery function allows passing argument accessible eventdata using bit regex arguments could extracted passed calling would happy write pull request changes sounds viable", "d": "10/2014"}, {"body": "closed", "d": "10/2014"}, {"body": "think correct behavior actually defer braddunbar rewritten sort nested setting behavior recently", "d": "10/2014"}, {"body": "sequence events see listed level nesting update attribute fire change event call first listener arguments event update attribute nested fire change event call first listener arguments event call second listener arguments event call second listener arguments event opinion sort behavior inherent triggering events synchronously suggestion would use event fired events using values event updating values nested manner cc tgriesser", "d": "10/2014"}, {"body": "yep agree correct synchronous behavior wanted defer authority many ways address app quickest easiest simple", "d": "10/2014"}, {"body": "okay makes sense thanks update", "d": "10/2014"}, {"body": "nt think support encourage behavior passing custom options callback handler encourages second channel information outside actual url value whole point providing url value give link return place left options forwarded means return bookmark options nt forwarded state app different defeating point routing first place truly client side bit information pass around different way truly persistent bit state something nt want serialized url put session router options nt right way communicate", "d": "10/2014"}, {"body": "reason ca nt use pass context provided ajax library naganowl provide realworld example would useful", "d": "10/2014"}, {"body": "jashkenas allowing modelcollection specified ajax option callbacks promise based callbacks maintain consistent function body instance client would nt able display property model options error callback could modified pull model first argument seems elegant callbacks able reference rather everywhere examples could rendering parts view success model request without relying events flexibility course said collections well ultimately fact backbone dependency jquery calls method methods call makes think also respect properties options provided", "d": "10/2014"}, {"body": "naganowl face similar issue propose forward original options sent crud methods backbonesync would help use case well see", "d": "10/2014"}, {"body": "ramseydsilva along lines ultimately issue wants keep logic success error callbacks handlers called proper context rather rewrite overridden success handler", "d": "10/2014"}, {"body": "fetch returns ajax returns deferred object rely code chain successive events moreover fetch returns completion may unnecessary block code waiting fetch resolve already handle model nt suffice also model fetched server repeatedly fetch keep sync", "d": "10/2014"}, {"body": "also return thing ie deferred object proposed wo nt really solve problem need wait fetch finish instantiating view could", "d": "10/2014"}, {"body": "yep something done app recommend binding render event model", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "let leave something fixed constructor", "d": "10/2014"}, {"body": "agree method missing also thought using conjunction ran across problem trigger event twice using option calling option also want event fired property gets unset method would take new attributes hash fill hash values old attributes keys present new attribute hash js modelprototypereset function attrs options var key thisattributes key attrs continue attrs key void", "d": "10/2014"}, {"body": "lennerd", "d": "10/2014"}, {"body": "help imagine key current attributes hash model present new hash pass listen event wo nt triggered new value used silent mode js backbonemodelprototypereset function attrs options var key thisattributes thisunset key silent true return thisset attrs options var bar new backbonemodel baron change function model consolelog model bar changed baron change foo function model foo consolelog foo changed foo barset foo test gt model bar changed gt foo changed test barreset gt model bar changed foo resetted change event triggered", "d": "10/2014"}, {"body": "cool get mean probably opt using overriding thisattributes explicitly matter swapping pandaface", "d": "10/2014"}, {"body": "pardon ignorance show still relatively new backbonejs behavior discussed sounds like description says resets model state server looks though events still triggered make model dirty reason approach taken looking reset attributes based server response would imagine situation might occur model changes sideeffect another operation generally sideeffects considered poor programming avoided possible sideeffect avoided perhaps makes sense send update model xyz response flag instead new model attributes trigger whenever see response pardon ignorance exhibiting comment", "d": "10/2014"}, {"body": "let tag em close em", "d": "10/2014"}, {"body": "sorry late response would nt call optimization code style cleanup tend oneliner statements resulting line small less characters onelinered particular statement argue harder read line personal preference think fine asis", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "jashkenas chance discussion", "d": "10/2014"}, {"body": "sure need take look first", "d": "10/2014"}, {"body": "requirebin reproduces bug", "d": "10/2014"}, {"body": "whipped failing unit test demonstrates issue", "d": "10/2014"}, {"body": "solution looks right maltewessel jmeas combine failing test fix single pr", "d": "10/2014"}, {"body": "yup update pr", "d": "10/2014"}, {"body": "closed favor", "d": "10/2014"}, {"body": "would better", "d": "10/2014"}, {"body": "record overwriting history nt necessary things like repository example require copy pasting scoped regexes backbone feels pretty gross putting router prototype would make extending router bit friendly lot less hacky feeling", "d": "10/2014"}, {"body": "working tweaking history router observation made extending history router objects stands stark contrast objects backbone classes provide numerous hooks making changes behavior two classes offer methods properties override modify work even small changes router history require copying pasting large chunks code including inscope regular expressions use never feels good guess would wager major contributing factor far know nobody made router powerful angular uirouter ember router super cool think changes classes made friendlier extend exposing regexp little step direction", "d": "10/2014"}, {"body": "braddunbar removed antipattern issues jiyinyiyong found addressed somehow imo", "d": "10/2014"}, {"body": "russplaysguitar change fairly small piece backbone would rather large breaking change care would need taken", "d": "10/2014"}, {"body": "needed feature well since model allowed collection design code differently lot situations makes sense model multiple collections feature", "d": "10/2014"}, {"body": "let move pr conversation", "d": "10/2014"}, {"body": "let say saving sensitive data frontend data needs creating ie ssn data nt returned api last digits instead want validated present creating nt want validated receive server server responds last instead full ssn validating twice specifically validating whilst setting breaks scenarios like", "d": "10/2014"}, {"body": "nt think use consistent data model", "d": "10/2014"}, {"body": "nt work though modelset validates new attributes returned server fail full validation edit saving user wtih ssn expecting ssn saved server respond still going fail validation set validates server attrs also despite model still ssn attribute attributes created understandable", "d": "10/2014"}, {"body": "like issue found backbone pretty speedy replies crazy question think consistent uses modelset nt seem like validation enabled default setting data call manually hit save called left validating saving meant originally surprising", "d": "10/2014"}, {"body": "jashkenas could pass hash method sync start new argument override backbonesync stop happening stick default behaviour wo nt break anything modify particular bit behaviour without screwing library ca nt right relies closure good make patch pr edit bullshit nt work gets called via jquery forgot", "d": "10/2014"}, {"body": "like issue found backbone pretty speedy replies crazy depends time mood got lucky think consistent uses nt think surprising still sure problem modelsave ssn modelunset ssn server response comes back sets nt see terrible", "d": "10/2014"}, {"body": "ha hear ya happening issue locally backbone validating presence ssn field creating fine locally nt exist server response set called fails validation nt update attributes server info", "d": "10/2014"}, {"body": "validation either ssn valid ssn nt exist captures actual valid state model", "d": "10/2014"}, {"body": "yeah fair enough empty string instead undefined validating frontend thanks heads man", "d": "10/2014"}, {"body": "went pretty deep rabbit hole trying figure unit tests collection mocked models ids behaving strangely unit tests collection working fine testing collectiontojson matched original mock data unit tests controller always seemed drop model would cool error thrown using id could cause problems least mention constraint documentation", "d": "10/2014"}, {"body": "doc fix would welcome want open pull", "d": "10/2014"}, {"body": "gladly see", "d": "10/2014"}, {"body": "hi problem events fired expect click event using plugin contextmenu backbone", "d": "10/2014"}, {"body": "easytab uses notation trigger display tabs notation also used backbone trigger routes click tab easytab interpreted backbone routing event error logged console design issue js error", "d": "10/2014"}, {"body": "pity issue closed backbone definitely play well partial model update seems developers dont listen users workaround", "d": "10/2014"}, {"body": "seems like users dont read docs workaround particularly bit", "d": "10/2014"}, {"body": "suspect comments except really rude one end predate support patch attribute added dec", "d": "10/2014"}]