[{"title": "vif directive interferes nested templates", "body": "see", "num": "529", "d": "10/2014"}, {"title": "expression filter concatenation", "body": "using following code render gravatar images jsfiddle expected result actual result workaround jsfiddle", "num": "528", "d": "10/2014"}, {"title": "prefixed variables", "body": "currently nesting viewmodels variables used dom unprefixed unclear viewmodel belong also using variables name children parents use access variable parent access grandparent ugly results big mess suggest add functionality like angularjs could use vcomponent directive like access variables new component using would make whole pile variables page way clear fiddle demonstrating problem fiddle demonstrating solution syntax course", "num": "527", "d": "10/2014"}, {"title": "prefixed data options set vm", "body": "tested", "num": "526", "d": "10/2014"}, {"title": "bind directive data vm", "body": "hi working audio player advanced logic based custom directive multiple audio players based vrepeat want bind vdirectives like vif vstyle state within directive would created jsfiddle illustrate problem directive inner state isplaying want use externally setup controls vif fairly new vuejs might another approach problem thanks martin", "num": "525", "d": "10/2014"}, {"title": "vuejs throw error call method undefined ucbrowser", "body": "often get error android uc browser specific phone specific version current happend throw source code version line component ready attach response extend response throw error debug found emiter empty try fixed bug js hack emitter alreadyconverted convert obj emitter objemitter work well", "num": "524", "d": "10/2014"}, {"title": "pluralize filter issue", "body": "hello ok", "num": "523", "d": "10/2014"}, {"title": "vue instance setupteardown best practice plugin", "body": "hi comments development plugin developing plugin nt know setupteardown vue instance worried read codes vuejs tried idea result found setup teardown following js vueoptionsevents hook created function setup thisstate foo hook destroyed function teardown thisstate null vueprototype hello function consolelog hello thisstate var v new vue v hello ways tell best practice", "num": "522", "d": "10/2014"}, {"title": "computed property depending vm", "body": "hi intended changes vm observed computed property", "num": "521", "d": "10/2014"}, {"title": "", "body": "hello gt", "num": "520", "d": "10/2014"}, {"title": "von context change directives", "body": "write code like get one item pages add directive like work anymore find get right arguemnts full example code", "num": "519", "d": "10/2014"}, {"title": "child vm nonroot element", "body": "html text x works well returns node list returns undefined returns node list demo", "num": "518", "d": "10/2014"}, {"title": "model inline value type number get converted initial render", "body": "tested", "num": "517", "d": "10/2014"}, {"title": "component data next", "body": "filing default data input used work input stays empty also setting later", "num": "516", "d": "10/2014"}, {"title": "dom change js api view binding broken", "body": "want change dom directly code like change model change dom api times know input element operate", "num": "515", "d": "10/2014"}, {"title": "regression vuetouch", "body": "upgrading causes directive update inside plugin fail line undefined apologies lack jsfiddle vuetouch available via cdn", "num": "514", "d": "10/2014"}, {"title": "update model sortable view changes", "body": "update model automatically view sorted jquery ui want happen automatically possible sorting objects multiple lists question sort asked nt understand answer", "num": "513", "d": "10/2014"}, {"title": "failed resolve filter", "body": "failed resolve filter use filter attribute like value attribute created jsfiddle sample reproduce issue nt happen vue vue works fine seems affect", "num": "512", "d": "10/2014"}, {"title": "race condition input range max value filter", "body": "iterating inverse slider example trying make simpler time instead sliders coupled percentage linked directly split total changes modifies max attribute sliders problem want proportion split stay sliders stay position value split update proportionally relation total filter total seemed convenient want change value total want change split total changes need old value total calculate proportion times works perfectly times slider moves nt represent stored value seems happens race condition updating attributes sliders tried add timeout solves problem also adds little glitch slider wondering maybe way vue internals would make desired outcome consistent without use timeout", "num": "510", "d": "10/2014"}, {"title": "better warning invalid types vmodel", "body": "filter passes string input using vmodel vue behave erratically initial render value missing errors user input field erase character input teams use type attribute trigger correct keyboard mobile control input value want enforce type maybe warning wrong one used make sure tag contibutionswanted want help thanks awesome library", "num": "509", "d": "10/2014"}, {"title": "publish tag npm", "body": "forgot publish npm", "num": "508", "d": "10/2014"}, {"title": "trigger update binding sending value", "body": "", "num": "507", "d": "10/2014"}, {"title": "strange interaction filter", "body": "without filter move slider past computed limit adding bogus filter enough prevent slider thumb going past limit happen edit nt happen", "num": "506", "d": "10/2014"}, {"title": "inline value overwrite nt passing filterwrite", "body": "two features introduced model overwritten values set inline html values nt sent filter stupid example filter necessary serves demonstrate issue", "num": "505", "d": "10/2014"}, {"title": "custom directive model", "body": "lets say element like way make directive know already assigned model", "num": "504", "d": "10/2014"}, {"title": "dispatching inputchange events model changes", "body": "vue send inputchange events modifies ui reflect model could useful party ui plugins know update", "num": "503", "d": "10/2014"}, {"title": "component vm content nt affected vm scope", "body": "seems content component inheriting directly component model think proper behavior content inherit parent model main reasoning kind conflicts way web components look using shadow dom define component takes content expect component whatever markup wants content rendered normally within example something like parent model mycomponent template html wow fancy main vue template web components would intuitively think would add fancy wrapper top vue would need explicitly pass scope render propose vue isolates model content component instead inherits model parent", "num": "502", "d": "10/2014"}, {"title": "bug inline partial custom delimiters used", "body": "", "num": "501", "d": "10/2014"}, {"title": "", "body": "", "num": "500", "d": "10/2014"}, {"title": "ios web app unresponsive comes sleeplock screen", "body": "hi one strangest bugs found really obscure one let guide trough process replicating need ios device visit url safari land page click large button calculate next random number displays alert page using vtext everything looks ok far click share button safari click add home screen button page set web app capable metatags launch home screen open without safari ui pure page click newly created icon loads click large button works normal press power button lock device unlock click button get alert next random number text never updated js executing view updating first thought ios problem everything works ios tried logic native js worked problem somewhere vue updates viewdom tree device unlocked try fixing problem", "num": "499", "d": "10/2014"}, {"title": "child views nt pass event handler expressions", "body": "using something like dom event normally passed handler argument however view question child view expected argument example", "num": "498", "d": "10/2014"}, {"title": "exceptions thrown dom handler expressions disappear", "body": "dom event handled function reference exceptions thrown inside handler reported console however dom event handled expression exception reported example", "num": "497", "d": "10/2014"}, {"title": "merge fails properties exist firefox", "body": "following throws exception firefox chrome safari mistake part knew overlooked existence writing mixin helper shortcut would process options watch hash nt know intended behavior would expect either explicit exception informing trying overwrite something allowed jsfiddle would work firefox", "num": "496", "d": "10/2014"}, {"title": "plugin api", "body": "documentation understand installuse plugin nt understand use exposed vue object export new functionality context componentsdirectivesmethods example force intended behavior", "num": "495", "d": "10/2014"}, {"title": "nt vhtml accept dom nodes", "body": "strings okay sometimes use libraries give back dom nodes", "num": "494", "d": "10/2014"}, {"title": "vue next validator", "body": "think already saw experimental validation planed vue next ca nt find anymore gone imagine everything", "num": "493", "d": "10/2014"}, {"title": "event handler name delete executed", "body": "error appears js console however rename event handler remove anything else works expected example code messagetext x new vue el chat data messages newmessage methods send function e epreventdefault thismessagespush text thisnewmessage thisnewmessage remove function message thismessagessplice thismessagesindexof message", "num": "492", "d": "10/2014"}, {"title": "inside component data function vm", "body": "executing consolelog inside component data function inherit true shows window object current viewmodel", "num": "491", "d": "10/2014"}, {"title": "value setting issue", "body": "hello reporting suspicious behavior looks like vue uses strict matching setting value data array common case string number", "num": "490", "d": "10/2014"}, {"title": "vif loses data context", "body": "works expected introduce directive get empty object text", "num": "489", "d": "10/2014"}, {"title": "chrome removing transitioned elements", "body": "elements linger vleave still class attribute need tool debug chrome used", "num": "488", "d": "10/2014"}, {"title": "vrepeat conflicts nested vref", "body": "references nested components nt behave expected children repeated", "num": "487", "d": "10/2014"}, {"title": "vmodel filter issue", "body": "hello using input example along filter lag input value vm data value see example try typing numbers input value modified filter always lag add something like fix problem nt know bug feature would like get easy method sync values", "num": "486", "d": "10/2014"}, {"title": "probably incorrect behaviour expressions attributes", "body": "hello testing new version expression worked well expression get empty class attribute time expression returns expected result attribute expression seem work fine example inspect elements classes please", "num": "485", "d": "10/2014"}, {"title": "safari error template vrepeat", "body": "first thanks great library safari getting error using template vrepeat appears working fine chrome firefox running", "num": "484", "d": "10/2014"}, {"title": "apply required dynamically updating vhtmlcontent", "body": "updating parameter includes vuecode indexhtml file result parser called case similar apply angular", "num": "483", "d": "10/2014"}, {"title": "var iteration iteration firebase example", "body": "think implementation whole library also examples iteration codes like native var loops native loops seen example examplesfirebaseappjs row var key thisvalidation possible look whole library examples change loops native loops well thanks", "num": "482", "d": "10/2014"}, {"title": "filterby", "body": "", "num": "481", "d": "10/2014"}, {"title": "", "body": "", "num": "480", "d": "10/2014"}, {"title": "setting handlers using von nested components v", "body": "currently seems nt see handler parent scope wondering way pull live example", "num": "479", "d": "10/2014"}, {"title": "typescript vue general", "body": "small problem love two things time typescript vue tried handfull different approaches make work together using ts modules andor classes publicprivatestatic properties shim vue components best got love intelisense autocompletion error hints get kind hacky wanted ask think typescript think possible bring togeher natural way maybe refactoring parts extend routine make internals reachable typescript construtor could make huge difference", "num": "478", "d": "10/2014"}, {"title": "objects computed properties", "body": "think request question bug report attempted use object computed property bind properties object using see nt work although expected looks like getters setters never created computed object sidestep issue using individual computed properties rather compound one however would nice convenience least put together templates cases thought reach get thoughts whether reasonable illadvised", "num": "477", "d": "10/2014"}, {"title": "problem setting value via vmodel vrepeated options", "body": "hope subject describes check example see need manually reset value ready function value copy simple selftoself setting wo nt trigger change seems like options created first value setting via moment options select value ca nt set ca nt come decent problem solution deserves fix maybe", "num": "476", "d": "10/2014"}, {"title": "vshow ca nt mess css", "body": "element css setting display none vshow directive vshow nt reveal element normal", "num": "475", "d": "10/2014"}, {"title": "broadcast working instances", "body": "case dynamically create list components html adding something list changing element component longer receive events let know issues reproducing", "num": "474", "d": "10/2014"}, {"title": "vattr applied component", "body": "using expected results select menu initially disabled changing state checkbox update attribute element actual result select menu initially enabled state checkbox effect attribute", "num": "473", "d": "10/2014"}, {"title": "vclass support function", "body": "hi using vuejs currently found vclass nt support function think uncomfortable supporting function make vclass powerful example put complicated logic function isselected instead attribute please think suggestion thanks", "num": "472", "d": "10/2014"}, {"title": "vif multiple issues", "body": "hi try debug following sample updated sorry complexity mixed multiple features nt found main issue please click selection button selection button nt expected also nt work next branch something similar works would cool debug things faster btw vueconfigdebug true nt show log next branch", "num": "471", "d": "10/2014"}, {"title": "work directly set data param without using set method", "body": "work work set method", "num": "470", "d": "10/2014"}, {"title": "dynamic components vcomponent", "body": "trying new vcomponent dynamic binding nt seem work change functionality nt mentioned changelog type test textbox vue recognizes correct component name nt change vcomponent binding", "num": "468", "d": "10/2014"}, {"title": "infinite loop watch subcomponent", "body": "data component subcomponent subcomponent watch temperaturevalue set temperaturechanged true got infinite loop watch subcomponent work fine see example thanks", "num": "467", "d": "10/2014"}, {"title": "filterby booleans", "body": "possible apply boolean property like results empty generated condition false works fine true solution", "num": "466", "d": "10/2014"}, {"title": "filterby booleans", "body": "possible apply boolean property like results empty generated condition false works fine true solution", "num": "465", "d": "10/2014"}, {"title": "css transition enter state", "body": "possible supply venter class vleave transition viceversa", "num": "464", "d": "10/2014"}, {"title": "want turn effects scenarios", "body": "hello want turn effects lowperformance android devices way achieve tried disable properties css vuejs still add class elements classes would never removed", "num": "463", "d": "10/2014"}, {"title": "removes first item", "body": "sometimes causes error changing contentattributes removing first item viewmodel array example removing items except first", "num": "462", "d": "10/2014"}, {"title": "add reacts strangely keys dots", "body": "using add add properties object iterating vrepeat keys dots reason add trying read dots object notation adding strange additional property real one example", "num": "461", "d": "10/2014"}, {"title": "partial recursion repeat alias", "body": "hi using vue issue trying build tree partial recursion works fine add alias repeat breaks getting uncaught rangeerror maximum call stack size exceeded added alias c wanted reference loop also tried children index children undefined value also", "num": "460", "d": "10/2014"}, {"title": "deep watching working", "body": "see codepen", "num": "459", "d": "10/2014"}, {"title": "vrepeat working vcomponent", "body": "next branch tried html failed warning console finding component work however", "num": "458", "d": "10/2014"}, {"title": "final grid result", "body": "search pagination sorting working fine thanks", "num": "457", "d": "10/2014"}, {"title": "vif intermittent", "body": "next branch quite hard reproduce every come across sometimes data updates vif toggle view nt update mean time using conditional vclass toggles", "num": "456", "d": "10/2014"}, {"title": "way using vwith like twoway binding", "body": "got case need update parent binding inside component using vwith", "num": "455", "d": "10/2014"}, {"title": "sometimes destroy nt trigger transition mobile", "body": "instead sometimes see vleave get added element immediately removed rc", "num": "454", "d": "10/2014"}, {"title": "destroy removing element", "body": "rc calling nt element", "num": "453", "d": "10/2014"}, {"title": "access parent vm methods inserted content directives", "body": "goal small component allows parent component insert elements directives attached directives reference properties parent vm example child component complain defined method however call method either way accomplish behavior stuck child component dispatch event button clicked listen parent", "num": "452", "d": "10/2014"}, {"body": "limitations arrays primitive values use arrays objects work", "d": "10/2014"}, {"body": "template interprets block directives template ignored template content extracted block", "d": "10/2014"}, {"body": "oh see intercalating one template element inbetween support directives solved problem", "d": "10/2014"}, {"body": "binding vwith work either template", "d": "10/2014"}, {"body": "filters must used end maybe filter called template looks cleaner eg", "d": "10/2014"}, {"body": "indeed looks way better", "d": "10/2014"}, {"body": "see discussion", "d": "10/2014"}, {"body": "skipped watching data object properties starts nt quite get discussion", "d": "10/2014"}, {"body": "oh sorry misread description prefixed data observed proxied could potential clash builtin propertiesmethods still access", "d": "10/2014"}, {"body": "ok got mention changes page", "d": "10/2014"}, {"body": "think directive component instead vuejs directives dom manipulations", "d": "10/2014"}, {"body": "ok thanks pointer", "d": "10/2014"}, {"body": "thanks reporting never used uc android probably never use smartisan since old version found way fix close", "d": "10/2014"}, {"body": "indeed", "d": "10/2014"}, {"body": "haha considering removing since filter trying much think could better dealt userland casebycase basis want take stab better implementation filter go ahead submit pr", "d": "10/2014"}, {"body": "think post good way write plugins using new option example js var mymixin created function thisstate foo destroyed function teardown thisstate null methods hello function consolelog thisstate var component vueextend mixins mymixin var c new component chello good thing approach avoids modifying default vue options plugin might look like nt think fixed way though feel free make suggestions", "d": "10/2014"}, {"body": "could understand plugin ran vuejs run mixin sorry poor english", "d": "10/2014"}, {"body": "plugin mixinonly need call instead pass create components js var validationmixin require vuevalidation mixin vuecomponent componentwithvalidation mixins validationmixin", "d": "10/2014"}, {"body": "ok thank sample code advice could understand advice continue development vuevalidator plugin", "d": "10/2014"}, {"body": "design vue instances used observed data example use", "d": "10/2014"}, {"body": "ok actual use case building hierarchical selector keeping state original data object end iterating children vms computed properties", "d": "10/2014"}, {"body": "hi \u7136\u540e\u8ba9\u6211\u770b\u4e0b\u51fa\u6765\u7684 stack trace stack trace \u4e5f\u53ef\u4ee5", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "branch \u6700\u65b0\u7684 commit", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "viewmodel page model bug caused issues passing items event listeners since fixed take look", "d": "10/2014"}, {"body": "ok great thx", "d": "10/2014"}, {"body": "every item vm registered child vm instead", "d": "10/2014"}, {"body": "array dom element man achieved code html text x possible make shortcut", "d": "10/2014"}, {"body": "haha right thought actually use", "d": "10/2014"}, {"body": "also possible make global like codes maybe intuitive way html text x", "d": "10/2014"}, {"body": "would complicate internal implementation might easier give class", "d": "10/2014"}, {"body": "maybe right perhaps misusing need find another way instead", "d": "10/2014"}, {"body": "thanks fixed", "d": "10/2014"}, {"body": "component definitions require function", "d": "10/2014"}, {"body": "right forgot", "d": "10/2014"}, {"body": "ok find directive good solution vue good thx", "d": "10/2014"}, {"body": "fixed due change", "d": "10/2014"}, {"body": "thank", "d": "10/2014"}, {"body": "assume item unique id id also set dom elements use jquery sortable hook inside hook call get array sorted ids update model array match order sorted ids easiest way probably create new array replace old one", "d": "10/2014"}, {"body": "try tonight tomorrow comment back method worked thanks", "d": "10/2014"}, {"body": "thanks fixed", "d": "10/2014"}, {"body": "first suggest avoid side effects inside filters filters pure functions concern transforming single value case would use watch value update split accordingly problem using filter change ui filter gets called first updated however filter part evaluating moment value written model yet directive triggered old value example reveal issue internal async batching patched using would work correctly", "d": "10/2014"}, {"body": "makes sense updated used watch result seems similar", "d": "10/2014"}, {"body": "hmm done hook works correctly need figure late behaves differently", "d": "10/2014"}, {"body": "using new option also works correctly inside option works correctly next like discovered", "d": "10/2014"}, {"body": "ok latest commit cases working intended", "d": "10/2014"}, {"body": "yup also works latest thank reference simple iteration variable total split limit ended like", "d": "10/2014"}, {"body": "cool", "d": "10/2014"}, {"body": "actually noticed input type take strings long parsed something like example string break string work hope helps", "d": "10/2014"}, {"body": "want input field display formatted string afaik default behavior set value anything parsed number erase whole thing note filter using default read filter formats data way model view input writes model gets formatted set input value resulting erasing everything working example would require use read write filters", "d": "10/2014"}, {"body": "humm right input parse similar way parseint set value input set value erasing characters bit odd since regular input parse cant anymore vue nt exactly wrong would still helpful warn situation think", "d": "10/2014"}, {"body": "browser setting results empty value nothing vue actually", "d": "10/2014"}, {"body": "added warning using readonly filters however behavior within scope vue warnings", "d": "10/2014"}, {"body": "til input types parse numbers glad hear warning thanks", "d": "10/2014"}, {"body": "ha thanks", "d": "10/2014"}, {"body": "found vm set field value true", "d": "10/2014"}, {"body": "hmm actually wrong", "d": "10/2014"}, {"body": "need", "d": "10/2014"}, {"body": "variable sometimes needs update value common exactly user enters page parameters page displays data links page different parameters", "d": "10/2014"}, {"body": "curious dealing params ca nt update params routing eg", "d": "10/2014"}, {"body": "getting params page like logic triggers attached event component view", "d": "10/2014"}, {"body": "interesting side effect internal mechanism deal filters turns fix outofbound issue range inputs", "d": "10/2014"}, {"body": "good catch thanks", "d": "10/2014"}, {"body": "depending handling options pass expression custom one option", "d": "10/2014"}, {"body": "yes without specifying model name element already maybe directive access raw element attributesdirectives template would easy get trying figure good dry design form validaton manageable complex forms first idea already mention filters way go see similar problem filter nt know caller model yourothers take", "d": "10/2014"}, {"body": "pushed makes attribute removal happen link time means give custom directive higher priority priority time called attribute still present", "d": "10/2014"}, {"body": "nice solution thanks", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "related matter event passed handler access target element would also useful filters access element validation purposes might validator many similar elements way right reference element manually filter parameter correct", "d": "10/2014"}, {"body": "aristidesfl would need access element value already passed filter", "d": "10/2014"}, {"body": "implementation validator", "d": "10/2014"}, {"body": "always next frame data change although deferring mechanism depends whether available wrapped know data ui change depends emit custom event watch callback", "d": "10/2014"}, {"body": "clarify wrote party plugin nt meant vue plugin example", "d": "10/2014"}, {"body": "hmm give brief description expect use event", "d": "10/2014"}, {"body": "example second instance plugin fixed send input events changed results vue updating model reflect changes made fake slider user idea vue sending input change events changes dom element plugin listen update interface accordingly", "d": "10/2014"}, {"body": "components default isolated scope want inherit parent model pass component", "d": "10/2014"}, {"body": "yeah inheriting scope component intuitive inherited parent scope instead", "d": "10/2014"}, {"body": "next branch", "d": "10/2014"}, {"body": "delimiter api changed need provide tokens", "d": "10/2014"}, {"body": "yea works nt fully read changesmd bad thanks", "d": "10/2014"}, {"body": "vrepeat", "d": "10/2014"}, {"body": "\u7528 \u7684 object repeat object \u6dfb\u52a0\u5c5e\u6027\u7684\u65f6\u5019\u8981\u7528", "d": "10/2014"}, {"body": "nt device hand test moment think likely wrap native js test raf call see still working", "d": "10/2014"}, {"body": "yes right tried example device wakes count longer updated meaning request animation frame never triggered file bug apple", "d": "10/2014"}, {"body": "closing apple bug also latest build able get around setting false", "d": "10/2014"}, {"body": "fixed thanks", "d": "10/2014"}, {"body": "fixed next branch", "d": "10/2014"}, {"body": "interesting turns firefox implements nonstandard method changed strategy hash created fixes issue", "d": "10/2014"}, {"body": "well requires bit understanding vue internals write plugins also depends type plugins want write basically several possiblities add global method eg vueelement add set global assets directivesfilterstransitions etc eg vuetouch add vue instance methods attaching convention vue instance methods prefixed nt conflict user data methods example method overwritten methods option", "d": "10/2014"}, {"body": "want write thank much listing possibilities mapping examples thanks also headsup naming convention well already ran forget writing example plans expand documentation plugins release", "d": "10/2014"}, {"body": "yes expand part docs", "d": "10/2014"}, {"body": "thanks excited release though really called", "d": "10/2014"}, {"body": "well big rewrite expect bit unstable basically want see stable usage pushing", "d": "10/2014"}, {"body": "nope directives mapping plain data dom behavior also dom nodes observed using vue observation mechanism need insert dom nodes use native dom api", "d": "10/2014"}, {"body": "function triggered vhtml", "d": "10/2014"}, {"body": "yep planned bit twoway filters think validation done userland plugin", "d": "10/2014"}, {"body": "thx info", "d": "10/2014"}, {"body": "keyword expression interpreted trying valid javascript expression avoid keywords expressions", "d": "10/2014"}, {"body": "although true think confusing since objdelete valid javascript least possibility call delete method somehow", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "nt work", "d": "10/2014"}, {"body": "rename method back", "d": "10/2014"}, {"body": "yes following would work nt obvious", "d": "10/2014"}, {"body": "version using works correctly", "d": "10/2014"}, {"body": "using", "d": "10/2014"}, {"body": "stuck afraid either rename method use workaround", "d": "10/2014"}, {"body": "problem right evaluating frameworks", "d": "10/2014"}, {"body": "curious need access instance data function", "d": "10/2014"}, {"body": "remember grid component passing options inside data function component grid component one options setup function call click function calls method upper vm", "d": "10/2014"}, {"body": "hmm sure good way crossvm method calls makes vms tightly coupled harder reason dispatch events child vms", "d": "10/2014"}, {"body": "understand couplement issue actually singlepage router happens variable inside master vm easily call wherever need inside components inheriting master vm", "d": "10/2014"}, {"body": "thing could happen socket instance variable master vm components reusing instance", "d": "10/2014"}, {"body": "alright", "d": "10/2014"}, {"body": "thanks lot", "d": "10/2014"}, {"body": "good catch", "d": "10/2014"}, {"body": "simple example seems work correctly suspect something else using component vif well", "d": "10/2014"}, {"body": "demo", "d": "10/2014"}, {"body": "oh ok thought referring property instead yeah caveat creates anonymous wrapper instance around content inherits normal properties empty object probably rework part later since anonymous instance nt ideal anyway", "d": "10/2014"}, {"body": "also make annoying intermittent", "d": "10/2014"}, {"body": "provide information seeing type behavior eg css rules applied element type transition directive triggering transition", "d": "10/2014"}, {"body": "directive triggering transition transitions see get access app experiencing", "d": "10/2014"}, {"body": "confirm transitionend triggered element nt removed", "d": "10/2014"}, {"body": "fixed thanks", "d": "10/2014"}, {"body": "actually caused way vmodel restores cursor position updating value adjusted restoring algorithm work example seems common use case another thing using write filter instead read one", "d": "10/2014"}, {"body": "yeah noticed fixed branch thanks reporting", "d": "10/2014"}, {"body": "ca nt seem reproduce make jsfiddle", "d": "10/2014"}, {"body": "sure able see iteration vrepeat rendered latest chrome firefox however safari getting error", "d": "10/2014"}, {"body": "actually caused nasty bug safari pretty tricky fix vue side since vue relies clonenode lot internally sure fix time soon meanwhile suggestion use wrapper div instead template see webkit team reacts bug report", "d": "10/2014"}, {"body": "interesting thanks looking", "d": "10/2014"}, {"body": "ok workedaround next branch hope fix soon", "d": "10/2014"}, {"body": "nt compile content meant static html snippets recommended define components parts need change dynamically switch components instead raw html", "d": "10/2014"}, {"body": "thanks indeed started using components currentview instead though larger projects order keep files separate feature dynamically load html files vuedirectives inside would great", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "loops mean javascript engine needs create function turn seen point following link writes avoid forin loops function based iteration logic behind pretty straightforward instead looping set indexes like would dowhile forin might loop additional array items also requires effort order loop items javascript set function one functionbased iteration comes slew performance issues extra function introduced corresponding execution context created destroyed top additional object added scope chain thanks", "d": "10/2014"}, {"body": "talking looping arrays firebase example looping object array also nt heard anywhere creates function iteration largely engine implementation dependent hardly truth modern engines like interferes optimization looped object hashslow mode possible situations vue uses loop internally target object simple performance difference far small justify writing different way", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "components isolated scope default make component work intended still trying find proper solution eg directives written inline component always compiled inherited scope know need invoke method root scope", "d": "10/2014"}, {"body": "yup closing thanks", "d": "10/2014"}, {"body": "personally nt used typescript much vue requires pretty special treatment extend functionality works need look ts class transpiling works first hand know working vue ts lot works might want take look join forces", "d": "10/2014"}, {"body": "made gist pattern maybe helps somebody else think little bring vues extend tss extend closer together", "d": "10/2014"}, {"body": "indus issue extending vue directly typescript call super vue implied configuration passed constructor yet proceeds ts class member creation fix add support vue pass false constructor defer configuration call vueinit config change allows map typescript class vue side effects using production seeing limitations key logic", "d": "10/2014"}, {"body": "logic greatly simplified option merging externalized constructor constructors simply call think make ts integration bit easier guys think", "d": "10/2014"}, {"body": "missed change thanks", "d": "10/2014"}, {"body": "merge options code lets say create something needs ready funktion internal setup also want give user possibility paste options well another readyfunction example maybe mergeoptions vues extendprocedure available vueutil called every instantiation seems wrong", "d": "10/2014"}, {"body": "typescript needs way subclass vue via prototype pass configuration instance via constructor typescript class instances create members call super thus creates subtle timing issue vue could instanciated passing configuration via constructor subclasses would fail attempting pass members super existed solution pass super false vue call separate vue method set configuration via subclass ok team breaking vuets make vue better adapt external way set configuration vue ted mon oct indus notifications githubcom wrote merge options code lets say create something needs ready funktion internal setup also want give user possibility paste options well another readyfunction example constructor instanceopt maybe mergeoptions vues extendprocedure available vueutil called every instantiation seems wrong reply email directly view github", "d": "10/2014"}, {"body": "nt think makes sense use nested value computed property computed properties meant data needs persisted every time computed property getter invoked fresh copy value returned case object computed property every time get different object trying write back modifying different object every time also example nt explain want way since eventually want write back instead", "d": "10/2014"}, {"body": "fair enough problem originally trying solve something akin following view model array objects view displays objects radio selection selected object persisted model html objname elsewhere view display checkbox configures currently selected object originally attempted following case properties could manipulated selected object first tried method several ways around multiple computed properties child vm config directly watching keypath care seems like good reasons way originally attempted large part motivation asking thanks", "d": "10/2014"}, {"body": "resolved new param attribute elements", "d": "10/2014"}, {"body": "oh actually bound value evaluates true unsets inline display value fallback whatever initial css value element initially want overwrite initial style explicitly use instead", "d": "10/2014"}, {"body": "want element initially hidden js loads inline", "d": "10/2014"}, {"body": "use css rules", "d": "10/2014"}, {"body": "seems fix reset wait nexttick update", "d": "10/2014"}, {"body": "change components instantiated next tick broadcast events happens since events synchronous new components miss might case", "d": "10/2014"}, {"body": "mean receive broadcast events matter fire also array empty reproducing issue took bit diving though chrome script debugging tool find", "d": "10/2014"}, {"body": "wow ca nt believe stupid bug know look fix commit p", "d": "10/2014"}, {"body": "haha splice removing elements nice", "d": "10/2014"}, {"body": "actually deletes elements index hence empty children array", "d": "10/2014"}, {"body": "oh wow learn something every day", "d": "10/2014"}, {"body": "adding managed work around issue", "d": "10/2014"}, {"body": "components default isolated scope direct access parent properties many ways get around make component access parent properties use pass bind still considering directives root element isolated component handled tricky theoretically handled component scope context feels natural able bind parent property", "d": "10/2014"}, {"body": "using computed properties instead function", "d": "10/2014"}, {"body": "rayfranco computed properties good choice however want pass value function computed properties solve problem", "d": "10/2014"}, {"body": "chaomao tried", "d": "10/2014"}, {"body": "rayfranco way works however function invoke twice elegant", "d": "10/2014"}, {"body": "longer evaluate twice", "d": "10/2014"}, {"body": "right fiddle ca nt seem find issue", "d": "10/2014"}, {"body": "sorry wrong sample wait update", "d": "10/2014"}, {"body": "update cloudflare cdn", "d": "10/2014"}, {"body": "indeed bug sorry fixed next branch", "d": "10/2014"}, {"body": "issues code could computed property property method called causing conflict part issue actually nt need method method nt define first", "d": "10/2014"}, {"body": "thanks fast support great project", "d": "10/2014"}, {"body": "tested works", "d": "10/2014"}, {"body": "hi sure something similar documented", "d": "10/2014"}, {"body": "use value initialized initialized bindfunctions update test param value click work example", "d": "10/2014"}, {"body": "expected behavior rules thumb list properties expect component option upfront possible component initialized way add observed data", "d": "10/2014"}, {"body": "sorry indeed bug directive skips setting watcher falsy initial value give truthy initial value work meanwhile fixed next branch", "d": "10/2014"}, {"body": "thank looking", "d": "10/2014"}, {"body": "resolved check release", "d": "10/2014"}, {"body": "create custom filter filters array anyway want", "d": "10/2014"}, {"body": "thanks tip also seems handled ing work fine", "d": "10/2014"}, {"body": "able achieve", "d": "10/2014"}, {"body": "instead pm evan notifications githubcom wrote able achieve setting transition none vleave reply email directly view github tim smart developer tel fax level cuba st po box marion st wellington new zealand", "d": "10/2014"}, {"body": "sorry though said try", "d": "10/2014"}, {"body": "great works thanks", "d": "10/2014"}, {"body": "way toggle moment able disable transitions something like hack setting something like sure would work since nt android device test", "d": "10/2014"}, {"body": "upgrade using everything works well thanks new api looks simple amp nice like", "d": "10/2014"}, {"body": "using expression incorrectly actually calling instance dom api method method nt manipulate array never call instance methods expressions write expression mutates array turn removes instance", "d": "10/2014"}, {"body": "got thanks", "d": "10/2014"}, {"body": "using longer happen", "d": "10/2014"}, {"body": "yep still using npm", "d": "10/2014"}, {"body": "yeah bunch breaking changes make sure read changes doc", "d": "10/2014"}, {"body": "thanks stick sanitizing dots", "d": "10/2014"}, {"body": "got gets reference anyway dig recursion issue otherwise close vue rocks", "d": "10/2014"}, {"body": "reason alias causing infinite loop first recursion referring parent children instead repeating list make work alias write like guess without alias makes much simpler", "d": "10/2014"}, {"body": "field present initial vue detect newly added properties either define initial data fine use", "d": "10/2014"}, {"body": "thanks", "d": "10/2014"}, {"body": "good catch fixed", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "close since related vue code feel free post vuejsdiscussion", "d": "10/2014"}, {"body": "sounds quite vague anyway actually use workaround", "d": "10/2014"}, {"body": "using transitions element vif", "d": "10/2014"}, {"body": "seems working fine sure happening", "d": "10/2014"}, {"body": "pass object changes object reflect parent", "d": "10/2014"}, {"body": "component like changes currentdate inside component nt reflect parent forcing", "d": "10/2014"}, {"body": "reason nt reflect parent component isolated scope avoid modifying parent state take whatever data parent gives unidirectional data flow needs access modify parent state make inherit parent scope", "d": "10/2014"}, {"body": "would inherit much good pattern", "d": "10/2014"}, {"body": "sure big component input field make component", "d": "10/2014"}, {"body": "would love keep behavior consistent arguments passed functions javascript ca nt modify original variable outside function within mutate object passed", "d": "10/2014"}, {"body": "makes sense", "d": "10/2014"}, {"body": "give context reproduce mobile devices particular ipad", "d": "10/2014"}, {"body": "tested iphone ios ca nt seem reproduce issue css using transition", "d": "10/2014"}, {"body": "email test case translatez transforms", "d": "10/2014"}, {"body": "cool able reproduce issue using css fixed simple test case let know works app seems using npm install next", "d": "10/2014"}, {"body": "working great ipad thanks getting issues chrome android though", "d": "10/2014"}, {"body": "specify versions chrome android", "d": "10/2014"}, {"body": "android chrome pm evan notifications githubcom wrote specify versions chrome android reply email directly view github", "d": "10/2014"}, {"body": "hmm exactly setup everything seems work fine exactly running", "d": "10/2014"}, {"body": "nevermind everything working fine cheers", "d": "10/2014"}, {"body": "cool app looks slick btw let know launches", "d": "10/2014"}, {"body": "pm want see app reproduce", "d": "10/2014"}, {"body": "need call remove element", "d": "10/2014"}, {"body": "work expected stuck moment", "d": "10/2014"}, {"body": "gotcha hoping put logic parent vm would nt modify child every time use looking forward giving shot soon", "d": "10/2014"}, {"body": "maybe could make work addchild used options", "d": "10/2014"}, {"body": "indus yeah made work", "d": "10/2014"}, {"body": "first thank fantastic framework design strategies speedup init time grid scenario long loading time vs raw using version upgrading new version advantage situation", "d": "10/2014"}, {"body": "way vrepeat without databinding ie know want render component forget", "d": "10/2014"}, {"body": "want render huge array fastest way write directive similar instantiating component incur lot additional work even rendered plain innerhtml always fastest also important something ca nt done builtin directives always write", "d": "10/2014"}, {"body": "plugin better use built standalone every option would need", "d": "10/2014"}, {"body": "let leave userland feasible approach use two separate properties one vmodel one search key throttle callback vmodel property change search key property", "d": "10/2014"}, {"body": "bumping told cheerio nodejs jquery allowing render dom faster jsdom least said fullfs might want give try previous setup compare", "d": "10/2014"}, {"body": "good point ayamflow times faster still enough another thing wo nt help launching module allows work html stored string real dom using jquery syntax word works plain text dom emulation current state ca nt work plain text need dom way gone little crazy developed decent server rendering module vuejs uses modules like text parsing expression parsing copies almost behavior excluding events dynamic things etc even stable fast thing quality code poor afraid wo nt help end though maybe could interesting concept", "d": "10/2014"}, {"body": "fullfs wow still sounds pretty cool though picking prerendered content front end", "d": "10/2014"}, {"body": "mean rerender client example ractivejs way event blinking know flaw shows things like flashbanners render twice back picking imagine process go like get html server get raw templates somewhere initialize vuejs vue renders dom tree wo nt append document creates hidden dom tree vue starts matching present visible nodes nodes hidden dom tree searching equal elements changing binding hidden nodes visible nodes note process requires equal html rendering result every side method still need render twice plus time matching relinking take look derbyjs uses interesting mechanism html picking broadly speaking sets ids nodes unique value like sends map embedded json containing ids marks probably rerenders dom shadows ps ok probably tell right know team working new project wanted use kind fullstack framework bothsides rendering isomorphic ideology sharing templates code server client long story decided go way ok main thing vuejs really good far developed framework prototype based vuejs bothsides rendering nt know could share forces something least could provide feedback also troubles development due several vue features would like make suggestions enhancements fullstack approach point view", "d": "10/2014"}, {"body": "interesting blowing everything away nt ideal working maybe good enough would love hear feedback get shoot email profile", "d": "10/2014"}, {"body": "nt think best way either anyway ca nt manage better without serious vue modifications wanted leave vue original state talking right way make notes need kind template precompilation function convert raw html tokens could send server client make first initialization faster handlebars ractive something similar nt want spend time rendering nodes twice need way still need kind map fully compiled vue instance match html againt could use precompiled templates make map without creating real dom nodes faster right next could make matching vue would pick html server nodes without need create new ones replacing existing think ps actually sure motivated go trouble making vue work fullstack technology mean nt want trouble subject plans imagined would great", "d": "10/2014"}, {"body": "limitation mainly comes vue approach dombased templating issue angular vue compilation process relies dom leaves string parsing browser basically designed isomorphic javascript mind could made work separate stringbased parser server leave hints rendered html plugin client side helps vue pick hints yeah nontrivial efforts really priority vue ok leaving space frameworks designed specifically isomorphism mind eg react", "d": "10/2014"}, {"body": "ok thanks explaining focus developing crazy stuff pseudovue rendering", "d": "10/2014"}, {"body": "might wrong place ask could expect see release start using", "d": "10/2014"}, {"body": "check rc releases", "d": "10/2014"}, {"body": "csp compliant build available branch", "d": "10/2014"}, {"body": "using adapters \u00e0 la rivets integrating vue application written backbone since models parse save logic already built tested either serialize back forth hand buy way run multiple code paths apis worked big web startups kinda crappy require parsing passed webapp nt think use case would uncommon would especially rad feature something like amp model front end data modeling tools var customers new customers customersfetch urlfragment customers written backbone var customersview new customersview model customers customersviewrender else urlfragment customer written vue var customer findcustomer customers urlfragment customervue customer", "d": "10/2014"}, {"body": "started issue coming precisely rivets adapters", "d": "10/2014"}, {"body": "need js land good stand data modeling absence made conspicuously obvious new wave view layer frameworks like vue react ractive etc full featured libraries saw need nt opened wider community yet ember emberdata angular resource backbone backbonemodel best tool seen far ampersandmodel since allows access data accessor may even observable way vue deal nt looked deep enough vue source know sure sure super busy getting door thoughts vueresource would work adapters possible", "d": "10/2014"}, {"body": "example wrote using vue backbone model essence since manipulated independently anything wraps operates pojo used persistence layer", "d": "10/2014"}, {"body": "think probably better handled option", "d": "10/2014"}, {"body": "rethinking problem probably better", "d": "10/2014"}, {"body": "thanks ted work closing put link vuets readme", "d": "10/2014"}, {"body": "component looks something like title component title null parent title ends getting displayed instead usually behavior want case component title null want leave blank good way referencing datatitle thanks", "d": "10/2014"}, {"body": "chrisdavies pretty sure wo nt happen still sounds weird define child component title late", "d": "10/2014"}, {"body": "fact child title never defined null json serializer server simply nt put title property json vue displayed component parent title instead anyway got around sanitizing data component create function ctitle undefined amp amp ctitle thanks", "d": "10/2014"}, {"body": "likely separate build since csp compliant interpreter add bulky code needed situations yeah definitely roadmap waiting finish refactor first", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "coming really love see officially comes updated website good stuff", "d": "10/2014"}, {"body": "triplekdev hopefully week working documentation", "d": "10/2014"}]