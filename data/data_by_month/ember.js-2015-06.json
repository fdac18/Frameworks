[{"title": "deprecatedlinkviewextend needs return", "body": "", "num": "11602", "d": "6/2015"}, {"title": "documentation easy understand", "body": "hardly find proper documentation online compared angular proper structure ember provided", "num": "11601", "d": "6/2015"}, {"title": "problem classnames given component template duplicates dom", "body": "see expected dom generated dom", "num": "11600", "d": "6/2015"}, {"title": "queryparams declared route nt always sticky url", "body": "jsbin access click page two get taken however access click page two get taken location always acts like first case transitions lose query params declared", "num": "11597", "d": "6/2015"}, {"title": "clear information happens jquerybootstrapdom manipulation glimmer", "body": "really crucial everyone real life prod app yet though asked many times nt heard clear statement whether rewrite bits rely directly touching dom every jquery plugin bootstrap javascript widgets etc dom events please release information people know decisions make", "num": "11596", "d": "6/2015"}, {"title": "linkto url serializes inaccurately nested routes param name", "body": "expected go subroute link actual link shows transitions manually specifying values url seems work expected", "num": "11595", "d": "6/2015"}, {"title": "bug additional attributebindings linkview work", "body": "developers wish add attributes anchor tags beyond standard set supported ember box advised approach something like approach works ember due replacement proposed fix something like seems work happy work pr get go ahead approach", "num": "11593", "d": "6/2015"}, {"title": "", "body": "updated app try latest canary appears break query params us seeing backtrace see reproduce smaller app asap", "num": "11592", "d": "6/2015"}, {"title": "delete stale branches", "body": "stale branches although major nuisance would cleaner removed easier browse list branches better cli autocompletion remote branches etc also guess nowadays people commit bit mostly work branches forks instead directly origin feel free close issue", "num": "11590", "d": "6/2015"}, {"title": "test suite ignores jshint jscs errors files", "body": "introduce jshint jscs failure files see console test suite still pass noticed jshint failure", "num": "11574", "d": "6/2015"}, {"title": "way render component instance", "body": "possible achieve something like ca nt find documentation used possible using views", "num": "11573", "d": "6/2015"}, {"title": "component attributes shadow properties", "body": "jsbin summary component takes property changes say component template see original value", "num": "11571", "d": "6/2015"}, {"title": "docsguides component", "body": "ran case using really useful recently however nt know existed implemented quite bit code bundling logic multiple component one great feature really part guide either component section rendering helpers article think feature available since ember since emberview friends deprecated component even useful important example plans writing guide core team make something", "num": "11568", "d": "6/2015"}, {"title": "arrangedcontent readd item even item removed source array", "body": "make change sortproperty arraycontroller block remove modified item source array calling item reappear arraycontroller even though longer source array link jsbin following example songs emberobjectcreate tracknumber title obladi oblada emberobjectcreate tracknumber title back ussr emberobjectcreate tracknumber title glass onion songscontroller emberarraycontrollercreate model songs sortproperties tracknumber sortascending true emberbeginpropertychanges var backinussr songs set something fire tracknumber change event backinussrset remove item collection songsremoveat cool array controller heard change correctly removed item consolelog removing back ussr controller songscontrollerget length items expected going fire pending changes emberendpropertychanges consolelog calling endpropertychanges woah item reappeared arrangedcontent array nt happened consolelog songscontroller length songscontrollerget length consolelog songs length songslength ussr appeared array controller even though original array consolelog last item songscontroller songscontrollerget lastobjecttitle back ussr happening two reasons firstly property gets changed change event fired queued currently deferring property change events due call item removed source list code runs however removing observer remove queued event array still going hear property change call code runs contentitemsortpropertydidchange item var arrangedcontent get arrangedcontent var oldindex arrangedcontentindexof item var leftitem arrangedcontentobjectat oldindex var rightitem arrangedcontentobjectat oldindex var leftresult leftitem amp amp thisorderby item leftitem var rightresult rightitem amp amp thisorderby item rightitem means item nt even arrangedcontent anymore code continues anyway see item moved item found sorted element list actually gets inserted thus reappearing arrangedcontent array proposed fixes make calls remove even calls currently queued believe would safest change object nt expect hear changes stopped listening object particular case simply early function adding following line", "num": "11567", "d": "6/2015"}, {"title": "deprecate immediateobserver", "body": "nothing switch observer", "num": "11566", "d": "6/2015"}, {"title": "ensure beforeobserver deprecated", "body": "internals refer beforeobserver entirely removed", "num": "11565", "d": "6/2015"}, {"title": "chains uncaught typeerror read property willchange undefined", "body": "seeing error added debugger statement catch error happens problem new logic try debug stefanpenner", "num": "11564", "d": "6/2015"}, {"title": "qp transition beforemodel application route throws error", "body": "reproduction app checking data see location user operating know query param provided call order force user location logic added promise chain part noticing error shown jsbin interesting thing trying recreate promise chain qp set second transition fire correct query param user wo nt notice failure", "num": "11563", "d": "6/2015"}, {"title": "acceptance testing fillin helper support modals", "body": "seems fillin input possible opened modal test allow add project project system function assert assertexpect authenticatesession visit projects testhelperhandlefindall workspace testhelperhandlefindall project andthen function assertequal find addprojectbutton length page contains add project button var modalclick find addprojectbutton click addprojectbutton waitformodalopen modalclick andthen function assertequal find modalfade length opened modal modalfade focus function consolelog see focus event triggered fillin projectsystemselect project system click buttonprimary fillin projectinput new project andthen function assertequal find modalfade length error", "num": "11562", "d": "6/2015"}, {"title": "regression ember initial literal values component attributes updated", "body": "see jsbin pass literal attribute value component update mycomponent first work updated component template second works expected migrating jsbin", "num": "11559", "d": "6/2015"}, {"title": "test component yield block", "body": "currently tried ember get compiled html inputted component via yield block expression see test import moduleforcomponent test emberqunit moduleforcomponent protablink unit component pro tab link specify units required test needs component foo helper bar unit true test renders function assert assertexpect creates component instance var component thissubject template emberhandlebarscompile hello world consolelog component assertequal componentstate prerender var component thisappend emberrun function componentset isopen true consolelog component consolelog componenthtml assertequal componentstate indom assertok componentisopen template reason tag passed yield component get working also missing docs present", "num": "11557", "d": "6/2015"}, {"title": "view path tagname nt update classnamebindings initial load", "body": "view defined like toggle class element appears set instantiated updated fact subsequent changes bound property wondering missing something js import ember ember export default emberviewextend tagname path classnamebindings active active embercomputedalias controlleractive toggleactive function var ctrl thisget controller didinsertelement see example repo", "num": "11556", "d": "6/2015"}, {"title": "linkto cause infinite rendering loop", "body": "nt really stand going working krisselden today listview glimmer ran issue helper causing infinite render loop noticed periodically see errors removing list resolved issue kris saw stack trace noted something setstate willrender sorry vague report nt quite get best recreate jsbin issue may also related", "num": "11555", "d": "6/2015"}, {"title": "regression rerender newlyadded subviews nondirty parent components wrong parentview", "body": "appears bug relative newlyadded items loop get set template view rather component appear template js bin demonstrating issue essentially code like child components parentview rerender new appears parent view whatever view houses template parentcomponent", "num": "11554", "d": "6/2015"}, {"title": "input type returns error", "body": "using emberjs using shows command supported error guess result type set input element rendered possible", "num": "11553", "d": "6/2015"}, {"title": "regression itemcontroller taken account anymore", "body": "emberjs itemcontroller taken account anymore occurs whether itemcontroller set template loop see js bins bellow arraycontroller like js bins emberjs emberjs", "num": "11552", "d": "6/2015"}, {"title": "use multiple action input helper", "body": "input name nm action oknm focusout also want define action focusin", "num": "11551", "d": "6/2015"}, {"title": "regression fails duplicate values", "body": "might duplicate landed yet", "num": "11549", "d": "6/2015"}, {"title": "missing emberdata url conventions hyphenated model names", "body": "documentation emberdata url conventions examples singleworded model names example multiworded hyphenated names like adminuserprofile afaik url camelcased eg", "num": "11548", "d": "6/2015"}, {"title": "documentation", "body": "ember guides include", "num": "11546", "d": "6/2015"}, {"title": "component computed properties get clobbered", "body": "sure exactly going called look template logs jsbin property array array value string clobbering ideas stefanpenner reporting behavior seeing addon running canary", "num": "11542", "d": "6/2015"}, {"title": "emberset chaining removal needs blog posted", "body": "cc mixonic cover", "num": "11541", "d": "6/2015"}, {"title": "firing run loop mousemove unnecessary", "body": "looks like new run loop kicked every time mouse moves really necessary stefanpenner suggested might instead components optin needing instead assuming need run loop mouse movement", "num": "11540", "d": "6/2015"}, {"title": "ember willdestroyelement never called", "body": "know view deprecated shouldnt still work anyway jsbin showing issue change see work", "num": "11539", "d": "6/2015"}, {"title": "possible glimmer regression accessing component array attribute", "body": "summary array passed parameter component wrapped object seems behave differently beta canary explanation given following handlebars html model item item additem itemsmodel button action additem gt add item behavior following green added list js appapplicationroute emberrouteextend model function return red yellow blue appadditemcomponent embercomponentextend actions additem function thisitemsaddobject green example beta canary behavior changing action function following shows array wrapped presumably glimmer example", "num": "11538", "d": "6/2015"}, {"title": "setproperties pass attrs expected", "body": "wrapping component yields component think form control group table cell component make flexible possible pass property component set works fine strings objects mywrapper component correct value see template passed property set transformed see consolelog transformation happens expected behavior approach considered antipattern workaround mean", "num": "11537", "d": "6/2015"}, {"title": "currentview containerview set properly", "body": "applicationis utilizing emberanimation addon upgrade ember break library reason animateout never triggered reason seems come following code snippet emberanimation observe changes property keep tracking newold view swap user step routes meantime limited emberanimation containerview whole since hook well works ember containerview never set issue seems coming specific commit feb commit removed changed emberjspackagesemberroutinghtmlbarslibhelpersoutletjs later view class got created method find streambindings attr outlet view seems reason currentview never set properly wonder bug reason also looked documentation containerview still talks attribute make believe silently deprecated hope chased right path attribute observe instead may separate question noticed file got removed came ember deprecating view general however heavy relied original routecontrollerview structure may still need rely emberview addon completely switch routable components could one provide best practice move forward thanks", "num": "11534", "d": "6/2015"}, {"title": "queryparams linktos update anymore routeurl change", "body": "please consider see change route nomodel model queryparams route refresh show new route still href nomodel previous version ember would update based current pageurl", "num": "11533", "d": "6/2015"}, {"title": "willrender called correctly", "body": "nested components demo jsbin output init viewport render viewport init panel render panel insert panel insert viewport container rendering fired early nt know intentional expecting init viewport init panel render viewport render panel insert panel insert viewport basically correct willrender fired right rendering component", "num": "11532", "d": "6/2015"}, {"title": "unable define service function without warningserrors thrown", "body": "want expose global variable service like angular exposes window improve testability code setting middle test obvious disastrous impacts since ember services required extensions ie set true like register window variable service without worrying potential deprecations recommendations", "num": "11531", "d": "6/2015"}, {"title": "something cause view destroyedrecreated instead updated", "body": "trying migrate seems like using deprecated helper inside component block leads view controller property set component instead right controller seems like underlying cause instance view first time property changes view view simply updated destroyed recreated top component ancestor controller see jsbin illustrate fact view destroyedrecreated instead updated", "num": "11530", "d": "6/2015"}, {"title": "passed actions component override methods", "body": "recently upgraded ember created component component looks something like use component like passing action name method component overwrites component method method component never called desired behavior seems like bad idea consumers component modify behavior component without component knowing", "num": "11527", "d": "6/2015"}, {"title": "bug dupe items arrays nt render properly helper", "body": "chatting krisselden slack array dupe primitive values helper render numbers key identity item item letters key identity item item dedupe arrays works failing jsbin get null reference following error obvious use case comes mind spread sheet type app columns number arrays want use helper template render data obvious workaround select different key type numbers key index item item letters key index item item given default behavior believe nuance behavior might lost users serious dupe primitive value shows somewhere deep array problems much likely scenario think known issue posting case others stumble across obvious bug looking explanation see creating failing test case soon figure write ember identity helper implemented like function identity item let key let type typeof item type string type number key item else key guidfor item return key", "num": "11524", "d": "6/2015"}, {"title": "able create block helper emberjs", "body": "want create linkto dynamic route dynamic segments dont see way achieve", "num": "11520", "d": "6/2015"}, {"title": "passing block param component modified twice single render", "body": "sure related experiencing similar issue able reproduce issue jsbin first two uses editablething work fine last pass param via yield starts unending warning loop fair warning open chrome task manager kill runaway process click third edit button bug misusemisunderstanding block params either way would love understand better", "num": "11519", "d": "6/2015"}, {"title": "cleanup tag missing contributing guide", "body": "", "num": "11518", "d": "6/2015"}, {"title": "calling rerender views call render", "body": "view implements custom rendering specifying function called failing jsbin demo", "num": "11515", "d": "6/2015"}, {"title": "array observer triggering change", "body": "created jsbin demonstrate case link trying modify array triggers set whole new array whilst modifying existing array trigger anything wrong thanks edit updated ember version saw version", "num": "11514", "d": "6/2015"}, {"title": "components nt see updates external bound properties", "body": "given following template gets correct value correctly setup change behaves properly changes without changing instances nt get update case working looks like sure matters prevent attaching using custom", "num": "11508", "d": "6/2015"}, {"title": "add measure hook", "body": "add measure hook corresponds didrender silences deprecation notice scheduling revalidation render currently cause revalidation render render get deprecation rendering implying support eventually go away still exists use case need render something different based measurements rendered far example would increase height wanted add additional subtree like listview", "num": "11506", "d": "6/2015"}, {"title": "wrong view hook deprecation render revalidation render", "body": "change state render deprecation message output tells wrong view triggered hook hard coded didinsertelement", "num": "11505", "d": "6/2015"}, {"title": "regression typeerror read property key null advancetokey", "body": "yesterday upgraded w issue today upgraded get error occurs transition detail route parent simple loop like special sort mixin rolls sorts special attr realize full jsbin useful see reproduce clarity meantime wanted get quick others might issue", "num": "11504", "d": "6/2015"}, {"title": "uncaught error route named", "body": "repo functions properly found changing version breaks app error get tests run app load unsure go debugging issue", "num": "11503", "d": "6/2015"}, {"title": "component creation performance slower", "body": "performance initial component render times seems significantly slower ember ember ember ember ember ember", "num": "11502", "d": "6/2015"}, {"title": "possible memory leak", "body": "think found memory leak navigate taking heap profile time memory usage steadily climbs seems getting pretty high retained size", "num": "11501", "d": "6/2015"}, {"title": "arrayunshift throwing error init uncaught typeerror read property key null", "body": "hello simply formatting array rendered helper getting error add element array using ember embercli template controller stack trace uncaught typeerror read property key null advancetokey anonymous function anonymous function foreach eachhelper enifedcompute streamvalue invokehelper anonymous function renderandcleanup hostblock continueblock block alwaysdirtyvisitorblock renderresultpopulatenodes renderresultrender render currentmorph anonymous function anonymous function foreach eachhelper enifedcompute streamvalue invokehelper anonymous function renderandcleanup hostblock continueblock block alwaysdirtyvisitorblock renderresultpopulatenodes renderresultrender render anonymous function renderandcleanup block keywordsyield handlekeyword handleredirect inline alwaysdirtyvisitorcontent renderresultpopulatenodes renderresultrender render anonymous function renderandcleanup block anonymous function instrument viewnodemanagerrender exportsdefaultrender handlekeyword keyword exportsdefault handlekeyword handleredirect inline alwaysdirtyvisitorcontent renderresultpopulatenodes renderresultrender render anonymous function renderandcleanup block anonymous function instrument viewnodemanagerrender exportsdefaultrender handlekeyword keyword exportsdefault handlekeyword handleredirect inline alwaysdirtyvisitorcontent anonymous function dirtycheck exportsdefaultcontent renderresultpopulatenodes renderresultrevalidatewith validatechildmorphs dirtycheck exportsdefaultcontent renderresultpopulatenodes renderresultrevalidatewith validatechildmorphs handlekeyword keyword exportsdefault handlekeyword handleredirect inline alwaysdirtyvisitorcontent anonymous function dirtycheck exportsdefaultcontent renderresultpopulatenodes renderresultrevalidatewith renderresultrevalidate rendererrevalidatetoplevelview emberviewsviewscoreviewdefaultextendrevalidate queueinvoke queueflush deferredactionqueuesflush backburnerend backburnerrun run ember data lib system adapter adapterextendajaxemberrsvppromisehashsuccess jquerycallbacksfire jquerycallbacksselffirewith done jqueryajaxtransportsendcallback", "num": "11500", "d": "6/2015"}, {"title": "viewrerender nt work", "body": "updating new version changing templates views nt seem work anymore still works", "num": "11499", "d": "6/2015"}, {"title": "called model id serializing url", "body": "model id includes slash character ember still serialize asis dynamic route url resulting broken url example jsbin tested ember canary example router approutermap function thisroute user path users userid template linkto user abcdef user nonstandard id linkto following link changes url usersabcdef user reloads page results error seems like id serialized url changes usersabc", "num": "11497", "d": "6/2015"}, {"title": "size increase built emberjs file size jun", "body": "created chart currently tracks size built file shows june got merged file size increased kb kb similar bump happened also file size would good check way avoid undo rwjblue mixonic", "num": "11494", "d": "6/2015"}, {"title": "property modified inside didinsertelement hook deprecation warnings", "body": "upgrading ember data seeing lot warnings however hooks read properties set jquery stuff see message even none called else might cause also nt deprecation guide", "num": "11493", "d": "6/2015"}, {"title": "framework deprecations userland deprecations", "body": "really strive make distinction deprecations caused code written user app vs code exists framework addon external library ember data otherwise lot noise clear call action user example take ember data deprecation deprecation default behavior shouldbackgroundreloadall change ember data always return false least one productrelation record store would like preserve current behavior please override shouldreloadall adapter application return true good know something directly act upon unless want monkey patch ember data also user experience around deprecation notices website quite confusing page prominent reference like one open secrets insiders know hostile new comers second useful page totally divorced guides separate deprecations page yet none guides obvious deprecations navigation", "num": "11492", "d": "6/2015"}, {"title": "updating bound property component triggers observers bound properties component", "body": "component several bound properties controller also observers properties inside component properties updated controller observers bound properties fired component twice example b bound properties controller c internal property component", "num": "11491", "d": "6/2015"}, {"title": "error read property match null inside fetchsourcemap", "body": "tried upgrading ember errors thrown outside expected deprecation warnings particular following occurring stepping debugger ends null fetchsourcemap function stackstr var self thisget embercliconfig amp amp thisget embercliconfigenvironment development return thisget sourcemap map stackstr function mapped mapped amp amp mappedlength gt var source mappedfind function item itemsource null return itemsourcematch new regexp selfget embercliconfigmoduleprefix source sourcefound true else source mappedget firstobject sourcefound false return source else return rsvpresolve null emberinspector versions using someone point right direction happy debug able figure part application code could causing issue thank", "num": "11490", "d": "6/2015"}, {"title": "containerview children fire observers creation", "body": "containerview child views firing observers parentview property upon creation working observers nt fire observer triggers alert upon startup", "num": "11489", "d": "6/2015"}, {"title": "isany companions addons", "body": "deprecated favor works expected prototype extensions turned however addons seems way access missing something additionally nt references methods docs", "num": "11488", "d": "6/2015"}, {"title": "ca nt use underscore route name", "body": "ember nt render template route underscore name replacing hyphen makes work ember inspector shows proper current route nt get rendered using emberjs stable", "num": "11487", "d": "6/2015"}, {"title": "ember add classes root view", "body": "following way style root emberview app ember views deprecated tried follow deprecation guide migrate using applicationview using component new way equivalent old one extra view element added expected structure first jsbin actual structure second jsbin migrate case ember", "num": "11486", "d": "6/2015"}, {"title": "remove bound attribute setting null firefox", "body": "regression appeared ember prevents remove bound attribute element setting property back bound attribute element using input helper initial value expected element attribute setting property another value correctly adds attribute element correct value however setting property back remove attribute expected instead set value bug appeared ember still present today affects firefox tested version chromium affected tested version ember setting property null correctly removes attribute js bin testcase", "num": "11485", "d": "6/2015"}, {"title": "action helper nt allow dynamic actions name ember", "body": "update ember problem dynamic action name component template error console specified quoteless path action helper resolve action name string", "num": "11483", "d": "6/2015"}, {"title": "error installing emberjs", "body": "interested ember trying install get following error every time using mac osx npm install g embercli npm err darwin npm err argv node usrlocalbinnpm install g embercli npm err node npm err npm npm err code npm err found expresss npm err npm err expresss npm registry npm err bug author publish use name npm err specified dependency embercli npm err npm err note also install npm err tarball folder http url git url tried many different things none worked including downgrading node version way nt express instead expresss", "num": "11482", "d": "6/2015"}, {"title": "ember test suites spew warnings", "body": "warning using without specifying key lead unusual behavior please specify identifies unique value item iterated eg ensure test exists tests warning occurs ensure occurrences fixed tested", "num": "11481", "d": "6/2015"}, {"title": "regression views nt use attributebindings", "body": "hello using attributebindings id order assign id route view way namespace css route stopped working since components understand reasons valid routes view since written templates folliwing right way really regression please feel free replace title thanks", "num": "11480", "d": "6/2015"}, {"title": "enrich controllers actions", "body": "app use crud heavily want save delete actions controllers crudcontroller initializer works fine feels wrong abuse private property actions reason private better way", "num": "11477", "d": "6/2015"}, {"title": "context within", "body": "problems following fetch data store add variable controller whilst template component passing context name player rendered template following card component template looks like short example btw get rendered list yes apparently know many elements without name filled could emberdata issue ed uptodateready", "num": "11475", "d": "6/2015"}, {"title": "inconsistent behaviour helper", "body": "ember component inside helper component rerendered condition change colors color mycomponent datacolor example entire block rerendered seems becomes synonim expected behavior", "num": "11473", "d": "6/2015"}, {"title": "beta channel compatible ember data beta channel", "body": "stefanpenner went tear last night removing stuff beta still relied upon ember data nt time dig specifics try circle back around", "num": "11472", "d": "6/2015"}, {"title": "href property linkcomponentlinkview recomputed promise resolves linkto", "body": "run issue using emberdata association receives promise resolves model ordinarily link able render successfully unresolved object already property fetched id however implemented return property href computes model resolved ca nt find property looking seems link recomputed model resolving really using proxy output changing bin illustrates issue ember also present ember", "num": "11471", "d": "6/2015"}, {"title": "allowing rejected promises tests", "body": "writing tests ember simple auth want test case authenticator rejects authentication therefor stub method return rejected promise problem ist immediately causes run fails test nt see clean way disable behavior allows specific promise rejection working solution came js var originalpromiseerror beforeeach function originalpromiseerror emberrsvppromiseprototypeonerror emberrsvppromiseprototypeonerror emberk sinonstub authenticator authenticate returns emberrsvpreject error aftereach function emberrsvppromiseprototypeonerror originalpromiseerror obviously sth want uses private api think would great way using unhandled promise rejections tests would likely use applications assume addons esa might need sth like", "num": "11469", "d": "6/2015"}, {"title": "rip dom related hacks", "body": "", "num": "11467", "d": "6/2015"}, {"title": "deprecate arrayproxy", "body": "", "num": "11457", "d": "6/2015"}, {"title": "need deprecated immediateobserver", "body": "", "num": "11453", "d": "6/2015"}, {"title": "need deprecated freezable", "body": "", "num": "11452", "d": "6/2015"}, {"title": "need deprecate enumerable", "body": "many methods appear documented deprecated mixinsenumerablejs", "num": "11451", "d": "6/2015"}, {"title": "need deprecate arraycontroller", "body": "cc mixonic", "num": "11450", "d": "6/2015"}, {"title": "instance initializers container lookup yield undefined beta", "body": "appinstanceinitalizersessionjs var container instancecontainer registry instanceregistry consolelog service containerlookup service store consolelog container containerlookup controller sessions currently displays application main undefined designed lookup controllers anymore designed lookup controllers initializers", "num": "11444", "d": "6/2015"}, {"title": "setupcontroller nt fire model refresh", "body": "ember updating route model route example via queries setupcontroller nt call coffeescript model return ember getjson json gt obj name val json storepushmany namecamelize val obj namecamelize storeall namecamelize set dict obj return storeall project setupcontroller controller model", "num": "11442", "d": "6/2015"}, {"title": "newly generated embercli app issuing reduce computed depreciation warning", "body": "created demo repo issue went updated ember ember data nothing else got following deprecation warning cc rwjblue", "num": "11435", "d": "6/2015"}, {"title": "collectionview fails init", "body": "error says check points following lines code childviewsupportmixin init function thissuperapply arguments know deprecated least work correctly", "num": "11434", "d": "6/2015"}, {"title": "deprecate renderbuffer", "body": "renderbuffer deprecated", "num": "11431", "d": "6/2015"}, {"title": "broken", "body": "looks like nt work ember looks like fixed definitely broken jsbin broken behavior jsbin behavior working", "num": "11430", "d": "6/2015"}, {"title": "emberobjectcontroller deprecation error trace useful", "body": "process upgrading removed object controllers know warning still happen using modelproperty however combed code ca nt figure happening trace seems point internal ember code know one errors application controller nt anything application template besides outlet get deprecation warning even remove outlet however leave outlet index route seems weird ember pro yet line trace exportsdefaultobjectproxydefaultextendinit superwrapper init new class functionclassmixinpropscreate instantiate lookup objectcontainerlookup emberobjectdefaultextendcontrollerfor emberobjectdefaultextendsetup", "num": "11429", "d": "6/2015"}, {"title": "transitioning error page yields unuseddummyerrorpath url", "body": "application catch errors subroute parent route transitioning error subroute get weird structured url coming changeleave handling transition wrong way could find documentation", "num": "11427", "d": "6/2015"}, {"title": "ember freezes transitioning amp amp func accesses collection model", "body": "believe found bug canary introduced replacing model transitioning amp amp canary freeze route accesses collection jsbin wcanary jsbin jsbin freeze occur subroutes access parent model children ember jsbin jsbin deprecation thrown leads believe something causing infinite loop continuously invalidating revalidating view rendering intentional fact regression interested writing failing test amp trying fix already taken cursory look objects methods hinted nothing jumped would really appreciate someone point right direction reason", "num": "11424", "d": "6/2015"}, {"title": "use action helper grab route action", "body": "working new helper toplevel template seems nt possible grab bind action route given controllers sticking around would make sense implement action lookup would first look controller route mirror behavior old string style example issue cc mixonic", "num": "11420", "d": "6/2015"}, {"title": "blank render ie using attributebindings", "body": "report found solution problem stumbled ie fails offending line removing last fixes issue browser breaks code report maybe fix nt crash ie thanks hard work", "num": "11417", "d": "6/2015"}, {"title": "select view work properly initialisation", "body": "select view show prompte message value null instead last value content shown", "num": "11404", "d": "6/2015"}, {"title": "inside collectionview returns ember", "body": "upgrading ember noticed nt working digging code noticed returns even though component call tried using seem return", "num": "11402", "d": "6/2015"}, {"title": "emberlookuplocationorigin undefined old ie versions", "body": "tested minimal example steps reproduce open minimal example chrome firefox safari observe origin displayed open minimal example older observe origin blank problem despite bunch polyfills old browsersie defined location object used ember nt polyfilled directly solution propose object placed polyfills like getorigin run access directly", "num": "11398", "d": "6/2015"}, {"title": "binding style attributes warning", "body": "unfortunately nt seem way disable warning link given code escapecss given use need calculated rgb value return htmlsafe thanks", "num": "11395", "d": "6/2015"}, {"title": "linkto datasomeattr value longer works", "body": "guides allow data attributes added linkto helper suggests reopening emberview functionality longer works likely related jsbins ps thanks jmurphyau used jsbins", "num": "11391", "d": "6/2015"}, {"title": "linkto class updating", "body": "contents linkto updated class passed nt built jsbin demonstrates issue fails works", "num": "11390", "d": "6/2015"}, {"title": "explicitly setting component property via attribute including causes immutable", "body": "affects steps reproduce included example data reference parentheses create component attribute rely attribute way contents component template eg use swap content depending value output content set explicitly via attribute including component try mutate property via action expected results property would mutated component visible ember inspector dom would update accordingly actual results property mutates component visible ember inspector well dom nt reflect new property made jsbin demonstrating behaviour functions fine remove explicit declaration property including component remove template html could easily something added missing however", "num": "11388", "d": "6/2015"}, {"title": "send event destroy emberobject destroyed", "body": "already allow use case nt like call mixin", "num": "11385", "d": "6/2015"}, {"title": "array booleans nt work input type checkbox binding", "body": "possibly cantwontfix unsure full reproduction", "num": "11382", "d": "6/2015"}, {"title": "beta canary computed array", "body": "please see use pattern wrap proxy items array works great beta fails jsbin fails means eachelse showing removal item weird error within ember happens line", "num": "11380", "d": "6/2015"}, {"title": "test runner working phantomjs", "body": "could something specific machine tried run ember tests via command line getting error message emberjs git master npm test ember pretest userstomdalecodeemberjs ember build version building babel note code generator deoptimised styling embertestsroutingbasictestjs exceeds max built project successfully stored dist ember test userstomdalecodeemberjs binruntestsjs running phantomjs bowercomponentsqunitphantomrunnerrunnerjs disttestsindexhtml packagecontainer unable access network fail downgraded phantomjs everything worked expected may fixed upgrading dependency nt investigated", "num": "11378", "d": "6/2015"}, {"title": "deprecate views addonize remove core", "body": "quest issue tracking process removing views ember x ember following apis deprecated x x x using view x using except internals ember using warn become component x ember following apis removed ember x x x using view x ember become component instead view x addon released called latest x provides x toggles private flag enables x provides toggles private flag x provides documentation updates need happen deprecation guide views deprecation guide select since select removed alternative existing addons suggested review guides remove view documentation select documentation", "num": "11377", "d": "6/2015"}, {"title": "error currentstate property component", "body": "ember component property method call property causes following error see extract documentation specified private property appears used internally code ref", "num": "11374", "d": "6/2015"}, {"title": "update eachin", "body": "use shoulddisplay helper function use use instead prevent deopt", "num": "11370", "d": "6/2015"}, {"title": "input helper nt let set list attribute", "body": "tested log code edit forgot tell breaks page loaded", "num": "11364", "d": "6/2015"}, {"title": "ember rendering polymer elements", "body": "ember works polymer polymer elements render placed inside indexhtml inside route like applicationhbs render well big problem tags image explain whats happening inside indexhtml element rendered content going right place inside topbar div content go applicationhbs content doenst go right place somehow related ember rendering templates use console insert element jquery works saw article ember web components uses tag insertion point work would good ember working polymer way works", "num": "11361", "d": "6/2015"}, {"title": "linkto support custom data attributes", "body": "would like able add whatever attributes want links like expected output cc nathanhammond", "num": "11358", "d": "6/2015"}, {"title": "component instances isolating model correctly", "body": "use case follows allow users select number widgets added workflow may add multiple widgets kind would different content associated technical standpoint created collectionview also tried viewcontainer keep widgets together give simple way quickly addremove widgets screen user selects widget create model widget associated new instance widget component also tried using views add newly created component collectionview renders screen expectation instance component create copy model manipulate independently however create widget twice assigning two different instances model end showing data code example click button type something input box shows click button text first input box shows second one typing either box update text tested ember jsfiddle bug implementing something incorrectly thanks roy hello lt button type button id btncreateivr action createivraction gt create lt button gt lt hr gt view appcontainerview lt div gt ivrsay component lt div gt log model input type text placeholder enter text valuetext", "num": "11356", "d": "6/2015"}, {"title": "inherit view action helper custom component", "body": "like create button component make easy manage button loading states however use component view actions trigger expected need enable actions component ones view without nest template div angular replace true works charm", "num": "11355", "d": "6/2015"}, {"title": "components nt isolate properties", "body": "hi developing addon faced problem two components one used container one item item component hook pushes kinda decorated item container component items property container component also initialize jquery logic received items item components problem put container components page second container component placed get items property contains items first container component tried run master result created jsbin illustrate see", "num": "11354", "d": "6/2015"}, {"title": "extending view component breaks template lookup", "body": "idea correct title basically broken beta canary realize nt greatest practice probably pretty common nt break reproduction", "num": "11351", "d": "6/2015"}, {"title": "shadowing inherited properties nt work", "body": "js var parent emberobjectextend age var child parentextend age undefined childcreate get age demo believe solution simple accurately since typically fast could use sentinel value cc jiahanwang", "num": "11350", "d": "6/2015"}, {"title": "glimmer binding issue", "body": "sure issue difference behaviour nt aware sorry bad title preglimmer binding works glimmer binding nt work", "num": "11345", "d": "6/2015"}, {"title": "yielded component action used component block", "body": "using ember beta trying yield action closure call inside component block causes compile error hbs apptemplatescomponentsuipopoverhbs yield action toggleisopen apptemplatesanythinghbs uipopover toggleisopen uipopover", "num": "11344", "d": "6/2015"}, {"title": "key allow integers", "body": "work returns integer", "num": "11343", "d": "6/2015"}, {"title": "componentnodemanagerrerender nt use renderenvchildwithview", "body": "causes issues later steps something calls longer exists", "num": "11340", "d": "6/2015"}, {"title": "deprecate without key specified", "body": "default key confusing deprecate usage keyless", "num": "11337", "d": "6/2015"}, {"title": "error provided unique", "body": "using value error warn given following demo", "num": "11336", "d": "6/2015"}, {"title": "emberjscom search feature broken context guides", "body": "reproduce navigate type test text field enter url updates reflect query nothing happens page following error displays developer console search still appears working least areas emberjscom great able search within guides", "num": "11335", "d": "6/2015"}, {"title": "embercomputed cached accessed nested set", "body": "see believe property cached called instance appfoo created", "num": "11334", "d": "6/2015"}, {"title": "embercomponent destroy nt tear properties", "body": "property maintained component destroyed currently clearing think torn destroy", "num": "11332", "d": "6/2015"}, {"title": "application template wo nt render using pods structure", "body": "moved application template route env config following something wrong application route firing tried console logging beforemodel hook template nt render therefore app nt render help would appreciated thanks", "num": "11331", "d": "6/2015"}, {"title": "ember chai expect unusable", "body": "simple unit tests timing little investigation found ember bad interactions chai javascript consoletime expect var lt expect model tobeok consoletimeend expect expect consoletime assert var lt assertok model consoletimeend assert assert anyone else experienced something like", "num": "11327", "d": "6/2015"}, {"title": "textfieldcomponent resolver issue", "body": "use default globals resolver app issue trying use helper app upgraded apparently default component name resolves defined app spoke rwjblue slack agreed bug looked", "num": "11326", "d": "6/2015"}, {"title": "glimmer view lifecycle hooks incorrectly invoked server rendering", "body": "crossreferencing since would fixed ember since glimmer hooks invoked fastboot visiting url", "num": "11325", "d": "6/2015"}, {"title": "uncaught error assertion failed expected component chosenselect resolve embercomponent instead subclass emberselect", "body": "getting error extending default emberview big deal made embercomponent updated lines code want extend emberselect built components ie embertextarea right technique thanks help", "num": "11324", "d": "6/2015"}, {"title": "unable override model hook error substate route", "body": "minimal example using also tested unable override hook model reference also null understand design perspective maybe ember nt allow hook overridden substate case assertion point devs right direction took figure hook nt respected", "num": "11321", "d": "6/2015"}, {"title": "ca nt look template named main", "body": "process upgrading ran trouble toplevel route called main use wrap everything except user onboarding different look nt want share layoutlevel template rest application ember main template skipped see console message standalone tests renaming template associated route etc maim solved issue jsbins illustrating problem template called template called", "num": "11319", "d": "6/2015"}, {"title": "odd behavior historyback ember app using replacewith running iframe ff", "body": "ember app running iframe page link page b page b link page c implemented using route replacewith b remain history stack page c link invokes return page return page firefox reloading page iframe reason reloading page behavior observed chrome behavior also occur unless app running iframe app routerjs var router emberrouterextend location hash routermap function abcsplit foreach x gt thisroute x export default router aroutejs export default emberrouteextend actions b function thistransitionto b atemplatejs broutejs import ember ember export default emberrouteextend actions link function thisreplacewith c btemplatejs b croutejs export default emberrouteextend actions back function historyback ctemplatehbs c change b c everything works fine reload occurs viable solution since browser back button must also take user back c using change easily problem occur reason think firefox might reloading page trying return due aggressive cache management fact problem wonder way tell firefox relax take pages back history cache instead going back server fyi fresh little ember app running latest versions everything stack reproduce clone repo ideas appreciated", "num": "11318", "d": "6/2015"}, {"title": "ember packages include dir", "body": "disclaimer use package found automated npm packages downloading npm packages commonly include directories directories sizes mib mib per package include duplicate copies scripts suspect actually needed distribution suspect directories grow time release release seems common problem packages hence reporting list packages may incomplete directory size bytes found dir packages dir packages could", "num": "11316", "d": "6/2015"}, {"body": "xtian behavior emergent really intended api would like introduce something called kabob event listeners near term would look like needs rfc implementation though immediate case suggest using combination element space action helper closure action example alternatively behavior slightly different similar keep using element actions", "d": "6/2015"}, {"body": "ok good know", "d": "6/2015"}, {"body": "confirm canary also fails", "d": "6/2015"}, {"body": "embercanary get seems ember trying set observer see", "d": "6/2015"}, {"body": "please release information people know decisions make nt documented nothing changed maybe talking two different things could enumerate specific concerns would gladly respond note discourse may also better venue use description", "d": "6/2015"}, {"body": "specific concerns manipulate real dom bootstrap many jquery plugins use direct dom manipulation keep using introduction virtual dom analogous react example people say react broadly speaking nt manipulate hand dom react created kosher create empty react populate hand even okay modify properties reactrendered element long nt later try change properties react causing react perform dom updates move element react may look get confused ca nt find means cantshould nt dom manipulation never seen statement dom events firing dom events ember still virtual dom going get way many people going wonder thing", "d": "6/2015"}, {"body": "nt documented nothing changed agreed used manipulating dom triggeringhandling events via jquery plugin bootstrap js via native js methods components absolutely still work prior versions specific example please share general ember differ capability", "d": "6/2015"}, {"body": "manipulate real dom yes prior ember versions manipulate dom components view hook dom events firing dom events ember still yes virtual dom going get way virtual dom smilecat", "d": "6/2015"}, {"body": "used manipulating dom triggeringhandling events via jquery plugin bootstrap js via native js methods components absolutely still work prior versions great know thank run problems real examples introducing glimmer share", "d": "6/2015"}, {"body": "keep using introduction virtual dom yup reasonable worked continue work let share additional information may help fill missing pieces reason many incorrectly refer glimmer virtualdom implementation believe confusion arises somewhat popular incorrect description concept glimmer react share virtualdom rather diffing detect work needs keep dom presentation insync glimmer react implementing diffing turns diffing two different things glimmer diffs data powers templates given following template hbs title static text glimmer template rerendered diff input data template uses case compares data title last known data data nt change nothing happens change glimmer performs lowest cost transform possible case something like react similar component entire component component tree would rerendered produces new tree virtual dom nodes tree virtualdom nodes diffed last tree virtualdom nodes changes detected react decides operations need applied real dom bring back sync tl dr react diffs virtualdom nodes glimmer diffs data ultimately though ember react provide correct lifecycle hooks didrender inform manipulateaugmentdecorate dom infact true start addingremoving nodes managed either framework strange things start happen example given following template hbs books book bookname using jquery begin add remove ember react wont past get along well summary reasonable jqueryraw dom manipulation already works continue work", "d": "6/2015"}, {"body": "stefanpenner thanks best explanation heard far", "d": "6/2015"}, {"body": "seems like acceptable way provide backward compatibility looks little wat since accessing linkview already deprecated ok", "d": "6/2015"}, {"body": "see reproduce smaller app asap definitely would helpful", "d": "6/2015"}, {"body": "managed reproduce jsbin looks query param computed property", "d": "6/2015"}, {"body": "delete ones created double check authors deleting branches although suspect fine delete", "d": "6/2015"}, {"body": "yes packagelibmainjs files hinted console fail build due globs used emberjsbuild test file inclusion match thingjs main files end thingjs", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "ok possible reading correct way achieving something like", "d": "6/2015"}, {"body": "quantumking might looking", "d": "6/2015"}, {"body": "component helper requires components looked container allow locally defined components accessed take look proposes solution similar example code", "d": "6/2015"}, {"body": "jamesarosen samesimilar issue", "d": "6/2015"}, {"body": "orkon yes seem related", "d": "6/2015"}, {"body": "submitted address", "d": "6/2015"}, {"body": "guides work happening feel free make pr", "d": "6/2015"}, {"body": "closing joeruello mentions guides repo issue", "d": "6/2015"}, {"body": "already fixed pending tests time add test get", "d": "6/2015"}, {"body": "checked issues prs bad think familiar enough yet ember unit tests chaining implementation add test right unfortunately", "d": "6/2015"}, {"body": "still seeing latest canary see reduce something reproducible looks like guarded didchange nt touch willchange check need done similar stack trace original report", "d": "6/2015"}, {"body": "yes seems reasonable guard didchange also guard willchange stefanpenner objections", "d": "6/2015"}, {"body": "also appears reasonable feel free add todo pr", "d": "6/2015"}, {"body": "stefanpenner pr closed merged acrc pr since commit branch", "d": "6/2015"}, {"body": "rwjblue deleted stefanpenner onlyinvokestillpresentchainentries branch day ago", "d": "6/2015"}, {"body": "yes closed duplicate pr already master", "d": "6/2015"}, {"body": "similar issue running tests chrome run headless phantomjs well nt know result modal adding debugger statement fills text perfectly guess something run loops rendering note use pausetest see cursor jumping around nothing filled worked previous ember version pre", "d": "6/2015"}, {"body": "rwjblue suspect also something todo textfield textarea implemented problem replace statements fine would somehow related well", "d": "6/2015"}, {"body": "would assume would way deal defaults", "d": "6/2015"}, {"body": "stefanpenner problem one override defaults", "d": "6/2015"}, {"body": "submitted address", "d": "6/2015"}, {"body": "rwjblue thanks lot fix appear release may expect", "d": "6/2015"}, {"body": "yes day two", "d": "6/2015"}, {"body": "dug things little realized docs tried test resulted", "d": "6/2015"}, {"body": "unit true", "d": "6/2015"}, {"body": "stefanpenner get error guess rule thumb use integration tests use unit tests", "d": "6/2015"}, {"body": "using component use integration test", "d": "6/2015"}, {"body": "resolve error", "d": "6/2015"}, {"body": "used component integration tests see example newer component integration test syntax", "d": "6/2015"}, {"body": "rwjblue thanks getting back quickly reference found great blog anyone else stumbles upon still confusion excuse ignorance ember still learning decide unit test vs integration test specifically component think general rule thumb uses yield integration choose let alone thanks", "d": "6/2015"}, {"body": "paste template produces error jsbin", "d": "6/2015"}, {"body": "jmurphyau yup brain dumping long pairing session today try gather details reproduction asap", "d": "6/2015"}, {"body": "triggered set called like guess edge case relationship said relationship loaded data route side loaded", "d": "6/2015"}, {"body": "discussed raytiley slack think duplicate template snippet comes block param", "d": "6/2015"}, {"body": "raytiley confirm dupe comment issue", "d": "6/2015"}, {"body": "behavior", "d": "6/2015"}, {"body": "using works edit second value bindings nt work point", "d": "6/2015"}, {"body": "lt case consider using action notified dom change", "d": "6/2015"}, {"body": "temporary solution would rwjblue said look", "d": "6/2015"}, {"body": "temporary solution would actually likely best solution moving forward although original also continue work", "d": "6/2015"}, {"body": "idea would land week", "d": "6/2015"}, {"body": "michaelvdheeren week nt fixed issue yet", "d": "6/2015"}, {"body": "open new issue something similar kind thing array controllers arraycontroller actual array controllers action target controller context outside block previously would current controller iterated assuming legacyeachview controller would assigned view case jsbin jsbin", "d": "6/2015"}, {"body": "using block params deprecated syntax context therefore action context absolutely outside lower exhibit bug fixed even though different behavior prior versions much line intent keywordblock param concepts think regression", "d": "6/2015"}, {"body": "action targeting behavior existed versions prior emergent behavior line intent noncontext shifting versions absolutely understand uncommon pattern fix massive change reintroduce amounts bug going close issue point truly hope decision makes sense happy reevaluate additional information", "d": "6/2015"}, {"body": "correct pattern send action parent controller together contextual data like item", "d": "6/2015"}, {"body": "nt want fixed putting something noticed broken upgrade friday june robert jackson notifications githubcom wrote action targeting behavior existed versions prior emergent behavior line intent noncontext shifting versions absolutely understand uncommon pattern fix massive change reintroduce amounts bug going close issue point truly hope decision makes sense happy reevaluate additional information reply email directly view github", "d": "6/2015"}, {"body": "jaswilli totally understand greatly appreciated", "d": "6/2015"}, {"body": "ok good know refactor something similar mmun described thanks", "d": "6/2015"}, {"body": "use native input element rather htmlbars helper following need define action handlers applicable component controller route depending implemented field actions focusin function focusout function", "d": "6/2015"}, {"body": "related pr present future stackoverflow probably better location howto qa", "d": "6/2015"}, {"body": "trek nt believe works component said better asked stackoverflow much better venue qa bug arise feel free open issue", "d": "6/2015"}, {"body": "ping rwjblue cibernox toranb", "d": "6/2015"}, {"body": "seems like duplicate", "d": "6/2015"}, {"body": "added useful error error previously super obtuse take look jsbin fix issue duplicates general theory could continue add prefixes like index andor guid key get unique value therefore avoiding collision feels like kludge could easily submit pr others think would useful proper path forward understood krisselden wycats completely clear", "d": "6/2015"}, {"body": "duplicate values list common enough require fix nt", "d": "6/2015"}, {"body": "seanpdoyle unsure first issue smileycat also fix mostly hack continue fiddling unique real fix upstream almost certainly involved require many changes us comfortable landing", "d": "6/2015"}, {"body": "rwjblue tried get failing test submitting issue could nt test would good copy alter looked module title", "d": "6/2015"}, {"body": "failing tests tests changed asserting proper output", "d": "6/2015"}, {"body": "encountering well migration sure using good workarounds also seems like embersource gem date useful warning", "d": "6/2015"}, {"body": "guides repo issues related guides reopen thanks", "d": "6/2015"}, {"body": "raytiley believe related", "d": "6/2015"}, {"body": "mixonic possibly although myjsbin computed consumed layout component internal correct sure relates", "d": "6/2015"}, {"body": "cc tomdale wycats", "d": "6/2015"}, {"body": "stefanpenner pending issue website repo", "d": "6/2015"}, {"body": "maybe need open usual locked issue tracking contents upcoming release blog post", "d": "6/2015"}, {"body": "rwjblue c", "d": "6/2015"}, {"body": "happening incase someone mouse related handler one rendered components instead components informed event dispatcher events need render longer need un render could remove instead listening exactly required mousetouch events introduce unfortunate cost especially frequently used", "d": "6/2015"}, {"body": "way infer component would component need manually declare needs latter need choose set events listened default set events need manually opt", "d": "6/2015"}, {"body": "way infer component yes one declares interest event component", "d": "6/2015"}, {"body": "could ref count component creation decrement destruction add remove listener needed", "d": "6/2015"}, {"body": "think gets tricky improved actions declare event handlers template completely loose ability introspect class", "d": "6/2015"}, {"body": "chadhietala scenario actually using ember event bubbling registering custom handler", "d": "6/2015"}, {"body": "rwjblue nt cause runloop old syntax well", "d": "6/2015"}, {"body": "chadhietala would definitely go would issue cautioning nt take account", "d": "6/2015"}, {"body": "yup causes run loop one want since absolutely invoking ember code much better preemptive handlers run mouse events regardless handler present interim step actually skip run loop events nt find handler", "d": "6/2015"}, {"body": "could likely detect given view handler invoke runloop enter user code handle bubbling correctly may need slightly creative approach believe easiest ref counting needed sure sill need attach event listeners everything bother invoking runloop truely invoke code requires suspect cure original concern prompted issue", "d": "6/2015"}, {"body": "make sure understand idea check immediate view see actually handler given event handler present proceed repeat parent parent noop sounds like address issue however expensive traversing view hierarchy looking handlers executing noop run loop", "d": "6/2015"}, {"body": "traverse anyways", "d": "6/2015"}, {"body": "mousetouch events introduce unfortunate cost especially frequently used jquery fast paths event handling many events think ember likely look addition inquiry using events therese huge perf win able delegate directly instead bubbling current implementation needs bubble needs run multiple checks viewcomponent layer handlers put overall cost extra touchmove mousemove event used manipulate position screen much depends many layers needs bubble etc horrendous definitely expensive lots events involved edit cost peg rough eyeball difference using touchmove ember using direct handler component", "d": "6/2015"}, {"body": "believe limited support true bubbling phase maybe would love someone dive area propose improvements enumerating costbenefit would also handy", "d": "6/2015"}, {"body": "allows support nt", "d": "6/2015"}, {"body": "also got resourcesknowledge decent costbenefit run see whip", "d": "6/2015"}, {"body": "good thing dropped", "d": "6/2015"}, {"body": "yep", "d": "6/2015"}, {"body": "ember bumped issue", "d": "6/2015"}, {"body": "issue anybody luck", "d": "6/2015"}, {"body": "updated jsbin nt seem like route backing views actually destroyed", "d": "6/2015"}, {"body": "also running blocking upgrade", "d": "6/2015"}, {"body": "workaround hotfixes", "d": "6/2015"}, {"body": "wrapped mutable object discovered bindings twoway default components invoked curly brackets future enabled angle bracket invocation components bindings oneway default standard value mutable object wrapper must use access attributes passed components updating example jsbin use works expected unfortunately accessing directly without worked older versions always documented folks use access properties component sorry nt think going consider regression", "d": "6/2015"}, {"body": "rwjblue thank originally using using problem however nt clear could access attributes directly ever since separated component properties", "d": "6/2015"}, {"body": "using recommended oneway bindings default work nt really great always due mutable object default kinda sucks main reason advertised heavily use things passed yet", "d": "6/2015"}, {"body": "makes sense thanks", "d": "6/2015"}, {"body": "views definitely deprecated nt use official library animations", "d": "6/2015"}, {"body": "emberanimation overriding private methods containerview without reworking going work heavy relied original routecontrollerview structure may still need rely emberview addon completely switch routable components could one provide best practice move forward thanks still shipping view support addon ember exactly reason describe", "d": "6/2015"}, {"body": "thanks btecu providing official information moment seems maintainer repo actively pursuing toward ember standard go checkout repo see possibly switch existing staff liquid fire however understand overhead concern reopen view class animation method mandatorily stefanpenner pointed however liked emberanimation right box directly plugged code without modificationi wonder liquidfire plan provide outofbox feature like emberanimation future take", "d": "6/2015"}, {"body": "actually main maintainer indeed easy use outofbox", "d": "6/2015"}, {"body": "however liked emberanimation right box directly plugged code without modification need update code take advantage either library either deriving new base class adding animation methods updating template include animationaware helper liquidfire generally requires single line change template design whatever animation wish without impacting existing code templates realize experienced ember people heavily micromanaging code long time become used way thinking done lot good reasons moving ember away model toward component composition time split behavior separate components compose template win clarity performance", "d": "6/2015"}, {"body": "looked liquidfire repo looks awsome decide switch application got one specific question implementation hope may give clue may tackle applicationhbs like case user authenticated content take whole page user authenticated take width original logic works controller runs view render tried switch liquidfire since hook route actually first time sidebar got rendered aware sidebar possible somehow defer animation controller compute put sidebar run animation", "d": "6/2015"}, {"body": "view deprecated ember problem closing issue since seems containerview deprecated together view opened issue iquidfire conversation hope may help great thanks advance", "d": "6/2015"}, {"body": "provide jsbin older version demonstrate working see query param set applicationcontroller always active seems like normal behaviour something route", "d": "6/2015"}, {"body": "version see first link params href update move route route clicking bottom links case version using ember", "d": "6/2015"}, {"body": "update bins canary pr compare working version thanks", "d": "6/2015"}, {"body": "jmurphyau familiar code behind would try fix know start", "d": "6/2015"}, {"body": "nt getting updated changes logic runs every time url changes gets run run wondering meant triggered solution call solution fix tracked correctly route changes feels like component rerendered called looks like would solve problem", "d": "6/2015"}, {"body": "believe ordering correct", "d": "6/2015"}, {"body": "predict child views parent rendering", "d": "6/2015"}, {"body": "need layout calculation right injecting dom seems haselement state proper point doesnt hook willrender parent nt know child components point right direction handle layout calculation", "d": "6/2015"}, {"body": "relevant", "d": "6/2015"}, {"body": "something support hence warning see", "d": "6/2015"}, {"body": "way get around use hooks ember object", "d": "6/2015"}, {"body": "mmun stefanpenner ping would consider regression maybe close", "d": "6/2015"}, {"body": "would consider regression sounds like regression", "d": "6/2015"}, {"body": "behavior long time well prior definitely good actively moving away towards setting attributes passed attrs hash instead root object using angle bracket component invocation opt new semantics avoid breaking change take look pending rfc discussing angle bracket unification", "d": "6/2015"}, {"body": "wow right using ember since apparently first time run name collision like least first time remember running one confused thanks clarifying rename methods angle bracket components land", "d": "6/2015"}, {"body": "provides useful error case fix upstream htmlbars", "d": "6/2015"}, {"body": "awesome save lot tears unsuspecting thanks quick turn around", "d": "6/2015"}, {"body": "bpcrao seems vague normally would recommend component cases might desire block form helper already helper nt think looking going close please let know missed something", "d": "6/2015"}, {"body": "mixonic blocklinkto routename model linktitle blocklinkto blocklinkto template linkto routename model yield want possible currently routename want pass linkto dynamic segments passed also dynamic", "d": "6/2015"}, {"body": "looks like seeing stefanpenner rwjblue ideas", "d": "6/2015"}, {"body": "seeing less identical issue app", "d": "6/2015"}, {"body": "problem", "d": "6/2015"}, {"body": "looks like seeing stefanpenner rwjblue ideas need ping review every notifcation", "d": "6/2015"}, {"body": "sorry nt sure seemed sneak even though reported days ago", "d": "6/2015"}, {"body": "samsinite positive limited hands review fix bugs guess core team prioritizes fixes guessing means issues get fixed release cycle could make suggestion notice issue perhaps harder verify bc clone whole repo run project locally test maybe slowed review process", "d": "6/2015"}, {"body": "possibly thanks duplicating issue jsbin guessing core team little swamped right looking number open issues github nt mean sound ungrateful ember core team awesome work wanted aware issue", "d": "6/2015"}, {"body": "samsinite worries want close issue roll one jsbin", "d": "6/2015"}, {"body": "sounds good one newer likely visibility", "d": "6/2015"}, {"body": "issue", "d": "6/2015"}, {"body": "tldr using variable yielded component template causes loop using manually calling works around issue time looked could find might help someone experience solve problem first render constructs block blockargument blockargument subsequent renders value changes constructs block blockargument blockargument calls blockargument step rerender issue starts call triggers component rerender causes call start step looks like component subscribed particular stream subscribed stream used template body component changing variable used component tempalte body nt cause issue nt update template commenting line fixes issue sure side effect would someone knowledge htmlbars would able best come solution think jsbin bare minimum needed get issue occur jsbin uses nt issue manually calling nt ideal might get people time work around", "d": "6/2015"}, {"body": "better workaround create computed property used yielding produces value eg text line inside component danger danger update danger value yield dangeryield jsbin", "d": "6/2015"}, {"body": "looking", "d": "6/2015"}, {"body": "issue glimmer reusing yielded stream shadow scope instead creating proxy stream revalidates light scope template triggers change notification block param stream unfortunately stream shadow scope yielded example causes infinite loop shadow scope light scope continuously invalidating one another", "d": "6/2015"}, {"body": "believe line culprit reading code may assume value always wrapped believe original author intended unfortunately true value stream returns identity true", "d": "6/2015"}, {"body": "think call unnecessary well jmurphyau pointed theory need invalidate stream source changes indeed calling stream automatically question whether need create new block param theory could reuse value passed stream get notified changes primitive wrap update whenever new primitive comes ca nt come reason force revalidation block param stream rerenders maybe forgetting something seems like performance win avoid", "d": "6/2015"}, {"body": "rad thanks guys go release right", "d": "6/2015"}, {"body": "samsinite yes absolutely", "d": "6/2015"}, {"body": "confirm solved issue thanks jmurphyau tomdale boat", "d": "6/2015"}, {"body": "thank opening issue reproduction", "d": "6/2015"}, {"body": "update array rather voila works", "d": "6/2015"}, {"body": "aight indeed works thanks however tell push nt work need search butt eventually find nothing interwebs thanks", "d": "6/2015"}, {"body": "documented source information instead interwebs", "d": "6/2015"}, {"body": "hi btecu last time checked ember documentation interwebs suppose answer lies kvocompliant part", "d": "6/2015"}, {"body": "jsbin suggests wrong something else happening", "d": "6/2015"}, {"body": "wrote tests showed current behavior correct", "d": "6/2015"}, {"body": "yay thorough tests", "d": "6/2015"}, {"body": "krisselden schedule measure actions new hook causes performance penalty current usage seems fairly arbitrary least kicking actions means hopefully get single rerender even many components measure", "d": "6/2015"}, {"body": "krisselden schedule measure actions didrender didrender hooks including one may actually schedule stuff actions mix result interleavings aim avoid bucketed runloop approach", "d": "6/2015"}, {"body": "time measure cause schedule revalidate stefanpenner think means schedule thing would cause invalidation think would work try need list view case run reuseable bins need add size estimate correct", "d": "6/2015"}, {"body": "think would work try would result interleaving non rendertemplate related work believe actually want avoid consider nested component case", "d": "6/2015"}, {"body": "stefanpenner unpack didrender hooks including one may actually schedule stuff actions suggesting schedule automatically important difference timing difference timing suggest difference warning poor performance logged", "d": "6/2015"}, {"body": "cost minimal js function invokedidrender thismeasure thismeasure warnagainstrevalidation thisdidrender", "d": "6/2015"}, {"body": "alternatively poweruser helper could exist", "d": "6/2015"}, {"body": "foreseeing warning like point devs dump logic blindly guess saying like idea somehow informing people done something might bad second junk drawer silence message seem great", "d": "6/2015"}, {"body": "guess saying like idea somehow informing people done something might bad second junk drawer silence message seem great poweruser helper reality multipass layouts norm ui development somehow expose something allow throwing something onto another queue nt seem correct either", "d": "6/2015"}, {"body": "necessarily prefer approach eccegordo advocating us handle logging level instead log warning silencing system idea would persist though", "d": "6/2015"}, {"body": "mixonic end day care mostly whatever messages warning deprecations etc emitted system reasonably actionable silencing message one potentially valid course action course different ways tackle problem generally thinking case help relatively inexperienced devs effectively divide conquer problem faced flood warnings go update project", "d": "6/2015"}, {"body": "eccegordo nt need address every deprecation right away deprecations breaking flagging things go away eventually", "d": "6/2015"}, {"body": "krisselden understood actually trying clear everything could immediately try unfortunately inspector iswas broken could nt use interface review deprecations wade lot noise spewed console prompted desire selectively silence warnings plus bad ocd smile", "d": "6/2015"}, {"body": "confirm deprecation behavior caused confusion trying fix deprecation notices upgrade adding deprecation notice case people searching deprecation property emberoutletview modified inside didinsertelement hook never change properties components services models didinsertelement causes significant performance degradation", "d": "6/2015"}, {"body": "believe related cibernox issue mentioned", "d": "6/2015"}, {"body": "rwjblue ah yes seek issue seeing thanks dude", "d": "6/2015"}, {"body": "rwjblue let decide close use track regression", "d": "6/2015"}, {"body": "leave open track think need reproduction properly track get whatever going wrong test", "d": "6/2015"}, {"body": "keep open issue scenario complex easy reproduce try anyway", "d": "6/2015"}, {"body": "seems issue", "d": "6/2015"}, {"body": "btecu yep agreed still need help reproducing fix", "d": "6/2015"}, {"body": "jsbin reproducing error remove line work", "d": "6/2015"}, {"body": "nt jsbin run working addon pull click pagination ellipses click get error see also", "d": "6/2015"}, {"body": "provides useful error case fix upstream htmlbars", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "rwjblue sure worthy separate issue situation log menu item real route action empty string argument always worked previous versions however moving ceased work gave error able track issue made sense however error message help without context knowing issue jsbin shows issue", "d": "6/2015"}, {"body": "possibly dupe come across", "d": "6/2015"}, {"body": "would like see numbers without ember inspector open inspector negatively affect performance instrumentation overhead nt nontrivial possible merely instrumentation changed favor former even noninspector would provide accurate perspective", "d": "6/2015"}, {"body": "quick stab removing need measuring inspector also please note production builds still included deprecations issue build pipeline fixed", "d": "6/2015"}, {"body": "drops may also slightly different babel transpiled output although hope lesser degree", "d": "6/2015"}, {"body": "see builtin helper streams among leaks would leak morphs leaking", "d": "6/2015"}, {"body": "mixonic going looking would love help learn little bit debug issues", "d": "6/2015"}, {"body": "quick guess familiar code nt see corresponding unsubscribe", "d": "6/2015"}, {"body": "actually look attrmorph retained", "d": "6/2015"}, {"body": "probably still work however use new syntax issue probably related try explicitly setting one", "d": "6/2015"}, {"body": "yes error coming glimmer optimizations advancing next key whip jsbin demoing issue difficult track fix without one", "d": "6/2015"}, {"body": "nt jsbin run working addon pull click pagination ellipses click get error see also", "d": "6/2015"}, {"body": "provides useful error case fix upstream htmlbars", "d": "6/2015"}, {"body": "issue custom render hook called", "d": "6/2015"}, {"body": "kanongil seem related issue would mind opening new one", "d": "6/2015"}, {"body": "moveniumville yes specifying template layout dynamically initial render work couple open issues related clear path forward making work", "d": "6/2015"}, {"body": "rwjblue ok issue created", "d": "6/2015"}, {"body": "believe emberdata something similar buildurl posting api seems like good change possible rely current behavior need make two step change deprecate detect may issue fix subsequent release use one new emberhelperhelper urlencode argument hopefully unblock", "d": "6/2015"}, {"body": "ok great take look submitting fix using hooks route also seems work fine workaround", "d": "6/2015"}, {"body": "created pr routerecognizer correctly handles decoding uri segments recognizing urls encoding segments generating urls merged create pr ember point new versions fix issue little research discovered rails router decoding encoding well rails app route users id route url usersabc route likewise rails id abcdef go url usersabc", "d": "6/2015"}, {"body": "thanks spotting reporting try dig see going", "d": "6/2015"}, {"body": "prodjs merge kb prodjs merge kb", "d": "6/2015"}, {"body": "ilkkao reopened make sure well confirm fixed close", "d": "6/2015"}, {"body": "ilkkao nice chart", "d": "6/2015"}, {"body": "thanks davidpett release channels tracked verify canary release back kb fix rwjblue issue solved", "d": "6/2015"}, {"body": "looks like caused component based alexspellerembercliactivelinkwrapper since activelinkcomponent sets cc rwjblue", "d": "6/2015"}, {"body": "essentially code queued setting childviews afterrender hook technically probably causing two renders easiest approach get rid deprecations js import ember ember function filterattrmorphs node return nodeattrname undefined export default embercomponentextend tagname li classnamebindings active active function return thisget childviews anyby active property childviews eachactive didrender function emberrunscheduleonce afterrender calcchildviews calcchildviews function var childnodes thisrendernodechildnodesfilter filterattrmorphs childnodes childnodes amp amp emberisarray childnodes var childviews childnodesmap function node return nodeemberview thisset childviews embera childviews problem seems like screaming new ui looking internally find active chidren seems like mega hack would really make better could easily get state router component know tomdale pr rfc make router service place helper could easily written could used wycats count addon relying private api needs made public", "d": "6/2015"}, {"body": "think updated schedule setting actions queue use instead property nt get passed route want check activity routing service wo nt help raytiley crazy wording messaging deprecation sure basically think need set value render schedule set actions yes means second render exactly deprecation message telling however thing multiple places least triggers one rerender think scheduling solution reasonable one times need rerender something like wants read children state case design decision one cause perf hit requiring path passed twice link active checker obviously clumsy would need rerender maybe could yield passed path block param nt need typed twice forcing layout calculations use positioning strongly suggest couple dom even example alexspeller addon could simply check dom avoid coupling internals complex fragile internals probably slower work dom query anyway well maybe lastly yeah love see router api gotten look rfc though also nt deprecation guide possible good excuse skipping guide entry simply written obviously written", "d": "6/2015"}, {"body": "mixonic gone road using jquery look class nt work correct initial render route changes nothing trigger wrapping component reexecute dom query", "d": "6/2015"}, {"body": "raytiley ah right need hook routing trigger dom check let us push rfc forward", "d": "6/2015"}, {"body": "sure rfc yet tomdale pr", "d": "6/2015"}, {"body": "also user experience around deprecation notices website quite confusing page prominent reference like one open secrets insiders know hostile new comers page heavily referenced many deprecations link directly suggest resolution url ember inspector links links deprecations tab release blog posts link page appropriate deprecations second useful page totally divorced guides separate deprecations page yet none guides obvious deprecations navigation legacy guide page old website trek idea adding disclaimer top linking active url", "d": "6/2015"}, {"body": "yeah currently ember inspector broken might something app use console log output see deprecations find link seems show boot ember cli nt see deprecation notices either like also would expect see note deprecations guides link side bar routes back main deprecations page would helpful anyway upgrade going relatively smoothly good work around", "d": "6/2015"}, {"body": "another obvious deprecation notice link console output", "d": "6/2015"}, {"body": "problem ember inspector go file issue believe problem exceptions thrown bugs project perhaps would useful ember inspector mode would temporarily swallow exceptions get around particular corner case review deprecations", "d": "6/2015"}, {"body": "last error almost certainly thing thanks reporting inspector repo", "d": "6/2015"}, {"body": "clarify ember data deprecation reading closely obvious fix override method adapter silences warning console wondering makes sense even really sure behavior would ultimately want current default new ember data behavior understand warning nt want catch people guard ed changes particular case seems pretty esoteric desire acknowledge change hide deprecation without actually add code userland inside adapter would personally see framework level change kind lot like saying hey changed something deep framework code nt directly violating deprecation going keep warning upgrade framework call action ambiguous wondering future makes sense concept log level deprecations categories etc way could selectively enable disable certain deprecation notices deal highly mechanical deprecations first deal subtle framework level changes secondly could also dovetail well lts release plans could start classify deprecations according urgency severity perhaps something like", "d": "6/2015"}, {"body": "eccegordo thanks much detailed descriptions thoughts encounter errors definitely help us improve process reporting errors errors next time around", "d": "6/2015"}, {"body": "wycats problem overall upgrade process going relatively smoothly like deeply understand reasons behind change make sure performing cargo cult code overall though deeply impressed glimmer updates lot refinements lot things much faster great job everybody keeping announced schedule bright days ahead sure", "d": "6/2015"}, {"body": "exactly issue observers bound properties fired twice", "d": "6/2015"}, {"body": "seems error within emberinspector teddyzeenny agree", "d": "6/2015"}, {"body": "thanks quick response disabled error went away seem culprit submit new issue", "d": "6/2015"}, {"body": "confirmed inspector code", "d": "6/2015"}, {"body": "getting error", "d": "6/2015"}, {"body": "disable since part prototype extensions disabled addons ensure addons written way shared sorts apps even prototype extensions disabled", "d": "6/2015"}, {"body": "ensure addons written way shared sorts apps even prototype extensions disabled agreed although viewing api docs isany explicitly recommended although nt docs enumerableutils deprecated would expect find function respective docs nt docs back recommendation perhaps remove altogether fyi use lodash array manipulation hence reason closed issue", "d": "6/2015"}, {"body": "think functionality lost assume able create component routable components implemented workaround implemented may put element desired classes indexhtml change root element", "d": "6/2015"}, {"body": "confused previously lt ember using views add class view root dom element something like import ember ember export default emberviewextend classnames accountview views deprecated removed view classes wrapped view handlebars template div added class existing template code removing views getting rid deprecations even deleted views folder project noticed top level app still wrapped class gone views deprecated least class renamed safe apply style emberview assumption one application assuming got rid views thanks", "d": "6/2015"}, {"body": "answering question style class assumption exists top level div wrapping application shows components well", "d": "6/2015"}, {"body": "could nt one specific selectors styling work styling root ember view application edit said could require updating existing css update", "d": "6/2015"}, {"body": "expresss seems many name", "d": "6/2015"}, {"body": "complete uninstall npm node ember reinstall appear solved issue", "d": "6/2015"}, {"body": "silly npm", "d": "6/2015"}, {"body": "pr exists remove warning", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "closed", "d": "6/2015"}, {"body": "confirmed working jsbin demo", "d": "6/2015"}, {"body": "rwjblue jsbin demo", "d": "6/2015"}, {"body": "suggest using binding like seems like regression", "d": "6/2015"}, {"body": "use inheritance export controller ember type automagically generated controllers also use class", "d": "6/2015"}, {"body": "joeruello thought know export basic controller ember type automagically generated controllers also use class sounds like real magic ember know automagically generated controllers inherit class name basis trick would like control enrichment one place import inherit controller file fine reopening embercontroller easier still nt get private cause problem use beside ugly underscore", "d": "6/2015"}, {"body": "exactly ember first looks falls back embercontroller using private apis risky nt covered semver removedchangedbroken time probably close stackoverflow question issue feel free open question email want talk", "d": "6/2015"}, {"body": "try logging see data", "d": "6/2015"}, {"body": "michaelvdheeren provide jsbin repo embercli demonstrating issue", "d": "6/2015"}, {"body": "thejameskyle get using", "d": "6/2015"}, {"body": "michaelvdheeren nt seeing internal models get", "d": "6/2015"}, {"body": "pangratz using controller", "d": "6/2015"}, {"body": "hmm nt look like valid since model called change check everything works expected", "d": "6/2015"}, {"body": "pangratz sorry typo use player query changed", "d": "6/2015"}, {"body": "code use use implement sort infinite scrolling loading", "d": "6/2015"}, {"body": "pangratz replace get correct class internalmodel everything works however documentation says arraypromise resolved result", "d": "6/2015"}, {"body": "ed version", "d": "6/2015"}, {"body": "pangratz canary", "d": "6/2015"}, {"body": "see tried passed needed access", "d": "6/2015"}, {"body": "pangratz works perfectly thx", "d": "6/2015"}, {"body": "ok great wondering found documentation since nt documented way point open issue", "d": "6/2015"}, {"body": "pangratz voila", "d": "6/2015"}, {"body": "michaelvdheeren wonderful thank sir", "d": "6/2015"}, {"body": "expected new glimmer rendering engine optimized update changed areas dom rather fully renderer everything glimmer works templates added dom nodes using another method jquery knowledge wo nt touch usecase could implement using templates", "d": "6/2015"}, {"body": "thank answer joeruello yes usecase within block render table jquery datatables rendering done datatables pass data render manner avoids rendering table twice well perhaps one half first time template second time datatables need parse dom make pagination add classes another usecase charts entire chart must rerendered model change perhaps understand done glimmer", "d": "6/2015"}, {"body": "look blog post specifically part component life cycle hooks nt tested seems move manually clear dom time get effect looking although probably nt best practice gives tools update charts rather rendering also allows cool animationstransitions modelsdata changes table front looked ember table probably close issue feel free email want talk", "d": "6/2015"}, {"body": "hi joeruello usecase reproducing issue yes saw blogpost thought workaround problem use hooks clear rerender data agree cool staff transition animations sometimes need rerender entire area current data chart nothing new arrived data let say chart potatos cosommation per capita last years monthly user wants fuel consommation family since yearly try give yet another example number charts vary let say represent electric energy production evolution year country want chart energy type imagine country x produces nuclear energy petrol energy render charts nuclear petrol user chooses another country produces solar energy scincefiction anyway render one chart solar something like jsbin usecase table component chart type letters let say ab replace cd nothing happens another case type ab replace cde cd effect tables ab stay displayed table e added imho helper place otherwise coding overheads components observe data completly changed clear stale data render new one", "d": "6/2015"}, {"body": "tested workaround suggested move table creation didinsertelement didrender check datatable exists destroy recreate new one", "d": "6/2015"}, {"body": "stefanpenner went tear last night removing stuff beta still relied upon ember data nt time dig specifics try circle back around sounds like ed bug got stuff take care today conf tomorrow im done ember go pass emberdata", "d": "6/2015"}, {"body": "may culprit", "d": "6/2015"}, {"body": "may culprit yeah sorry wrong repo move issue seeing morning nt found thought saw commit last night removed", "d": "6/2015"}, {"body": "thought saw commit last night removed yup longer present deprecated easy move emberdata use builtin helpers", "d": "6/2015"}, {"body": "started going ed making good progress inprogress pr land shortly", "d": "6/2015"}, {"body": "started work finish tonight", "d": "6/2015"}, {"body": "branch emberdata green tests ember canary", "d": "6/2015"}, {"body": "happens stubbing using mocha assume works rejection handled inside", "d": "6/2015"}, {"body": "seems dubious allow rejections tests", "d": "6/2015"}, {"body": "yeah understand nt use case actually valid", "d": "6/2015"}, {"body": "think discussed could wrong costs maintaining", "d": "6/2015"}, {"body": "think discussed could wrong costs maintaining much think actually many extra bytes suspect ed relies cc igort", "d": "6/2015"}, {"body": "evaluating move iterable iterable like", "d": "6/2015"}, {"body": "think lots apps rely moving away us would nt hard started implementing emberarray instead extending arrayproxy", "d": "6/2015"}, {"body": "think lots apps rely moving away us would nt hard think rewrite arrayproxy iterable still exposing existing api bonus iterate structures like map stuff like transducers sounds like fun monday morning hack", "d": "6/2015"}, {"body": "exactly needs deprecated enumerable mixin seems heavily used rest ember added deprecation warning edit running emberruntime tests tests failed public usage already marked private", "d": "6/2015"}, {"body": "reminder please add deprecations guide", "d": "6/2015"}, {"body": "reopened issue pending addition deprecations guide", "d": "6/2015"}, {"body": "nt seem like embercli issue", "d": "6/2015"}, {"body": "ember ember looks like typo", "d": "6/2015"}, {"body": "stefanpenner fixed", "d": "6/2015"}, {"body": "bug emberdata opened issue", "d": "6/2015"}, {"body": "awesome fast p", "d": "6/2015"}, {"body": "ghostavio remove ember data packagejson test app stop restart server see clears deprecation issue closed favor ed one", "d": "6/2015"}, {"body": "ghostavio remove ember data packagejson test app stop restart server see clears deprecation issue closed favor ed one rwjblue totally emberdata confirmed would like closed instead ameta tracking close", "d": "6/2015"}, {"body": "ghostavio fix app", "d": "6/2015"}, {"body": "yonida need update least", "d": "6/2015"}, {"body": "pangratz using ember ember data emberdata", "d": "6/2015"}, {"body": "emberdata released days ago blog post coming announces officially guess deprecation warnings reported issue fixed since available since", "d": "6/2015"}, {"body": "great thanks", "d": "6/2015"}, {"body": "michaelvdheeren trying observe childviews", "d": "6/2015"}, {"body": "yes never problems know docs say ca nt manipulate childviews property directly nothing observing", "d": "6/2015"}, {"body": "krisselden removing observes fixes indeed question going trigger masonry rerender childview added", "d": "6/2015"}, {"body": "michaelvdheeren didrender event hook", "d": "6/2015"}, {"body": "didrender trigger childview added", "d": "6/2015"}, {"body": "nt believe hasblock feature", "d": "6/2015"}, {"body": "really docs", "d": "6/2015"}, {"body": "alexlafroscia docs incorrect feature still behind feature flag unsure howwhy listed docs", "d": "6/2015"}, {"body": "oh okay see would sworn tried adding feature flag maybe need restart server adding edit enabled feature flag still nt seem working canary release use feature flags available releases", "d": "6/2015"}, {"body": "alexlafroscia disabled features stripped beta release builds opt feature flag unless use canary", "d": "6/2015"}, {"body": "gotcha thanks help smile go ahead fix docs", "d": "6/2015"}, {"body": "fyi docs api doc generation nt remove feature flagged docs never definitely something intend fix upcoming versions", "d": "6/2015"}, {"body": "nt issue post please let know still learning right way bring kinds things", "d": "6/2015"}, {"body": "good chance coming generated controller either silence warning creating using emberdisableproxycontrollers warning latter turns arraycontrollers normal controllers well", "d": "6/2015"}, {"body": "probably coming least one case application controller generated automatically application fact warning still shows nothing application template even outlets blank file make declare application controller plain embercontroller makes think either warning error case perhaps package case way knowing package since trace nt tell", "d": "6/2015"}, {"body": "aaahhhh never mind missed loading templates fact declared objectcontrollers nt ever done find objectcontroller project reason sure edge case deprecation warnings knowing substates newbie mistake part", "d": "6/2015"}, {"body": "believe", "d": "6/2015"}, {"body": "update regression occurs yielding resource via block params using component vs works fine even use parent template jsbin running canary", "d": "6/2015"}, {"body": "update checked fixed canary yet landed", "d": "6/2015"}, {"body": "closing issue resolved", "d": "6/2015"}, {"body": "awesome thank confirming", "d": "6/2015"}, {"body": "mitchlloyd stumbled failing current setup old helpers fire sendaction new helpers create closure correct inconsistent immediate suggestion always use nested helper invocation would like replace early series deprecate old style planning implement action bubbling routable components instead route would pass actions routable component manner component passes actions ticket identified awkwardness stick around land routable components", "d": "6/2015"}, {"body": "thanks response good know plan think might talking something slightly different seeing connection nested action invocation behavior hoping way close route action like could pass component stands jsbin get error thinking maybe would nt hard look route actions well controller event probably falls worth implementing let get routable components already smile", "d": "6/2015"}, {"body": "exactly must define controller call goal better way post routable components", "d": "6/2015"}, {"body": "going close please reopen appropriate", "d": "6/2015"}, {"body": "fyi emberselect deprecated moved core addon", "d": "6/2015"}, {"body": "rwjblue replacement emberselect recommended way implement select ember order bind options selected values properties thanks", "d": "6/2015"}, {"body": "ok blog example select impletmentaion references addons thnak info", "d": "6/2015"}, {"body": "ember version also gone generally use must", "d": "6/2015"}, {"body": "output", "d": "6/2015"}, {"body": "believe would prefer move away extending native objects prototypes instead doubling fwiw app code sure accessing instead best really internal allows us retarget global scope imo ideal solution addon js lib exposes bunch crossbrowser utilities reading writing location fact something similar stub writes location object testing going close issue nt think polyfilling native location object please reopen missed something", "d": "6/2015"}, {"body": "oh yeah use mocked location history assertions testing", "d": "6/2015"}, {"body": "please provide demo jsbin help bit better", "d": "6/2015"}, {"body": "demo jsbin showing behavior using computed property inside string generates warning even value cp safe string emberset color emberstringhtmlsafe blue generates console warning emberset mystyle emberstringhtmlsafe color blue console warning show console warning", "d": "6/2015"}, {"body": "yes bantic correct return cp use unquoted template avoid warning quote property trigger warning would like avoid warning concatenating safe strings occur future version", "d": "6/2015"}, {"body": "think discovered issue experimenting new computed property getter setters appears happen passedin property literal value ie passedin property another property name proper behavior exists although property twoway bound outside component scope example changing jsbin pass property rather literal allows action update value expected pretty involved jsbin showing issue using computed property gettersetters broken behavior passing string literals breaks expected behavior passing bound properties instead restores expected behavior", "d": "6/2015"}, {"body": "use super less caveats much performant", "d": "6/2015"}, {"body": "think currently agree stefanpenner", "d": "6/2015"}, {"body": "destroy enable", "d": "6/2015"}, {"body": "nt believe correct thing add destroyinit ordering often important unfortunately events concise ordering possible especially inheritance various user provided mixins provided luckily super chain concise predictable", "d": "6/2015"}, {"body": "added init crutch people relying property change events work ordering initialization property change events fire init event addon developers framework developers use init initialize object good initial state without relying property change events", "d": "6/2015"}, {"body": "ok agree standing point measurable performance hit using init event vs overriding init krisselden mean init method different mechanics init event", "d": "6/2015"}, {"body": "fixed latest canary", "d": "6/2015"}, {"body": "thank reporting", "d": "6/2015"}, {"body": "strange ci runs tests phantomjs appears green confident phantomjs works comment wrong repo assumed embercli", "d": "6/2015"}, {"body": "believe seen issue past file permission issues", "d": "6/2015"}, {"body": "appears runner tries run query param appears confuse removing prevents network fail clearly goal appears query params problem reading disk rather server move part emberjsbuild emberjs use already built functionality provided embercli server apps addons already use would mean could drop bower qunit runner", "d": "6/2015"}, {"body": "viewname", "d": "6/2015"}, {"body": "emberselect converted component also like embercheckbox packaged separate addon seems html select element something pretty much projects use", "d": "6/2015"}, {"body": "would prefer addon things also wonder make emberselect component well addon", "d": "6/2015"}, {"body": "would like keep ticket fairly tactical would happily discuss detail discussemberjscom take discussion know items may controversial select view terrible performance robert showing one versions day easily order magnitude faster pathological able improve within semver constraints constraints also limit us making component select view also relies heavily two way binding idiomatic development style ember select view would quickly become exception entire programming model datadown actionsup excited even could make component would unlike expect components two reasons needs go viable component version uses modern idiomatic style instead pushing select implementation back addonland iterated upon already decent options sure arise using new apis angle components land time perhaps one could become official select view part emberlegacyviews addon supported ember provide plenty time well performing modern option mature", "d": "6/2015"}, {"body": "upgrade path scenario going away useful pattern granular control component rendered specific example component loads async content renders separate related component different part dom components initialised arbitrary hash possible would result specific example modal dialogs nt accept attrs signature edit reference people issue", "d": "6/2015"}, {"body": "might related", "d": "6/2015"}, {"body": "fixed next update htmlbars dependency likely helpers rfc", "d": "6/2015"}, {"body": "fixed master working update jsbin demo", "d": "6/2015"}, {"body": "hitting problem working fine update could fix backported please js bin testcase", "d": "6/2015"}, {"body": "tried ember", "d": "6/2015"}, {"body": "surprised see everything works fine ie firefox chrome", "d": "6/2015"}, {"body": "believe browsers may fall back polyfils things chrome already implements", "d": "6/2015"}, {"body": "yes im currently using polymer dom shadow instead shady almost worked except elements", "d": "6/2015"}, {"body": "best chance someone tackling provide example demonstrates issue", "d": "6/2015"}, {"body": "forget last comment config actually makes things buggy another guy problems", "d": "6/2015"}, {"body": "hey stefanpenner uploaded demo testing github ghpages repository ghpages see elements indexhtml render expected inside applicationhbs content goes right insertion point", "d": "6/2015"}, {"body": "issue repository two routes papertoolbar component one wrapped version demo visible first time click papertoolbar version title rendered outside toolbar go polytoolbar works back papertoolbar work", "d": "6/2015"}, {"body": "problems ref works firefox chrome edit tried test ember versions none works polymer also try import eg paperheaderpanel polymer component like eg applicationhbs rendered result html polymer however result really like works put polymer component inside indexhtml file eg contentfor html polymer one see first sample vs correct one nt move respective components recursively idtopbar element conclusion nt move dom elements correct position render components via hbs files", "d": "6/2015"}, {"body": "apparently insane design decision rescinded", "d": "6/2015"}, {"body": "yknow going reopen discussion would love hear would make useful thing supported natively difficult implement", "d": "6/2015"}, {"body": "would love hear would make useful thing supported natively difficult implement made difficult definitely nt try make anything particular difficult ember currently uses whitelist decide bound components element optionally reopen add however nt think anyone finds ideal solution exploring idea attribute string value set attribute", "d": "6/2015"}, {"body": "agree would useful good reason missing whitelisting", "d": "6/2015"}, {"body": "nt understand solution listed documentation nt default", "d": "6/2015"}, {"body": "rwjblue said issue nt set javascript objects arrays objects properties", "d": "6/2015"}, {"body": "thanks solved problem", "d": "6/2015"}, {"body": "hi followed direction issue made corrections component however still broken iooking prototype chains see dsmodel create components share prototype since creating new instance dsmodel every one components data enter one shows others test created instance model time explicitly set objects bound input box attributes object model creation everything worked expected model data shared across components said lead believe issue things handled models type created jsbin shows issue jsbin use click button next hello type something box click button create another instance modelcomponent show text previous input box expect share data thanks roy", "d": "6/2015"}, {"body": "thanks bmac answer", "d": "6/2015"}, {"body": "define nonprimitive value objects prototype shared across instances object nt really ember issue normal javascript behavior consider following function thing thingprototypeitems var new thing var new thing item item point exact array instance contents gt item item want need instance create array shared prototype would like like following plain js working jsbin", "d": "6/2015"}, {"body": "exactly thanks lot", "d": "6/2015"}, {"body": "hi opened similar issue around time closed fairly quickly pointed issue however solution still broken iook prototype chains see dsmodel create components share prototype since creating new instance dsmodel every one components data enter one shows others nt know resolve issue jsbin use click button next hello type something box click button create another instance modelcomponent show text previous input box expect share data thanks roy", "d": "6/2015"}, {"body": "provide pr solves", "d": "6/2015"}, {"body": "explanation used able mutate foo ca nt init time mutable broken could use instead however hook happen initially many times subsequently useful need happen could set flag seems silly", "d": "6/2015"}, {"body": "didinitattrs hook want fires attrs initialized first time", "d": "6/2015"}, {"body": "thankyou nt mentioned", "d": "6/2015"}, {"body": "rwjblue said fix smile", "d": "6/2015"}, {"body": "false alarm typo", "d": "6/2015"}, {"body": "see", "d": "6/2015"}, {"body": "good number various apps worked stable unique prop key quite pain decorate item key helped way autogenerating per item perhaps stored realize brittle userprovided string relies objects references maybe time case thoughts testing canary one apps noticed incorrect domreuse array changed info discover cause create ticket", "d": "6/2015"}, {"body": "index guid use index using default", "d": "6/2015"}, {"body": "testing canary one apps noticed incorrect domreuse array changed generally default usage item array index key", "d": "6/2015"}, {"body": "defaulting guid", "d": "6/2015"}, {"body": "done", "d": "6/2015"}, {"body": "whoops sorry thought meant adding option nt default actually mutates object call add guid long term could use map nt good polyfill know nt mutate object", "d": "6/2015"}, {"body": "maybe instead deprecating spit warning whenever without key", "d": "6/2015"}, {"body": "knownasilya much different people supplying key deprecation vs warning nt seem make much difference", "d": "6/2015"}, {"body": "deprecation means eventual removal jayphelps case case stable id guess small use case really use guid otherwise use key guess convinced smilecat", "d": "6/2015"}, {"body": "jayphelps case case stable id either case always used case would use key like deprecation means eventual removal completely agreed review rest team deprecation intend allow keyless usage long term like native map nt need mutate object deprecate", "d": "6/2015"}, {"body": "implemented warning closing", "d": "6/2015"}, {"body": "feel like syntax looking bit unfriendly complicating simple looping construct opinion also nt know index coming difference guid", "d": "6/2015"}, {"body": "simpleinefficient sure keyoption unfriendly guid generated guid probably based item index index item hence efficient since sort array loose key", "d": "6/2015"}, {"body": "guid new default required specify", "d": "6/2015"}, {"body": "christophermlne default previously index nt performant must specify key see warning", "d": "6/2015"}, {"body": "must specify one key another recommended fast option guid make default", "d": "6/2015"}, {"body": "great point submitted pr exactly", "d": "6/2015"}, {"body": "helper documentation implies key purely help renderer nt care convention configuration etc", "d": "6/2015"}, {"body": "rwjblue fixing code even someone realize problem since xx", "d": "6/2015"}, {"body": "fyi warning removed favor default key nt amp also according", "d": "6/2015"}, {"body": "correct missed commit released shipping within day two", "d": "6/2015"}, {"body": "thanks rwjblue wanted make sure anyone came across thread knew plan", "d": "6/2015"}, {"body": "documentation added", "d": "6/2015"}, {"body": "ps tested chrome version mac yosemite", "d": "6/2015"}, {"body": "jdbo probably want file emberjsguides", "d": "6/2015"}, {"body": "yes please file guides", "d": "6/2015"}, {"body": "cleanup needs done component destroyed exactly please share jsbin showing right solution case", "d": "6/2015"}, {"body": "ah impression cleaned", "d": "6/2015"}, {"body": "necessarily wrong solution something assumed nt appear working", "d": "6/2015"}, {"body": "nt really know kind cleanup talking demoexample would helpful", "d": "6/2015"}, {"body": "created jsbin appears working outside app basically experiencing maintained go back index route back address route must something wrong else thanks help going ahead closing", "d": "6/2015"}, {"body": "seems like issue chai reason assert model slow could see deepequal slow due complex structures", "d": "6/2015"}, {"body": "react uses chai nt seem problems", "d": "6/2015"}, {"body": "different object structures clearly something wrong chai ca nt functionality quickly mentioned something renders diff enumerates full object would likely slow example nt appear likely due meta enumerable browsers fail make quick let grab laptop confirm", "d": "6/2015"}, {"body": "interestingly attempt reproduce successful iterations ok chai test chai spewing deopts suspect addressed numbers would closer provide reproduction example would interested inspecting", "d": "6/2015"}, {"body": "run get big warning console click chai run button get error click ok button", "d": "6/2015"}, {"body": "yup get well simply add top results end view profiler indicates chai deopting provide example demonstrates mentioned suspect timeouts due deepequals sort something generates diff appear snippet displays please provide working example demonstrates issue otherwise nt terribly actionable", "d": "6/2015"}, {"body": "adding top makes ember inside chai order magnitude slower ok ok chai", "d": "6/2015"}, {"body": "bjornstar yes chai legitimately slower regardless ember replace times stay exactly still nowhere near bad numbers provided although iteration count several orders magnitude greater", "d": "6/2015"}, {"body": "mentioned suspect timeouts due deepequals sort something generates diff appear snippet displays please provide working example demonstrates issue otherwise nt terribly actionable", "d": "6/2015"}, {"body": "thanks reporting try look tonight", "d": "6/2015"}, {"body": "global resolver resolve case conflicting another component demo jsbin", "d": "6/2015"}, {"body": "right remedy could perhaps make default component name something specific reduce likelihood people run", "d": "6/2015"}, {"body": "globals resolver looking would conflict explaining happening saying yall something wrong definitely bug need fix", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "luck like try update still ca nt none input work", "d": "6/2015"}, {"body": "nt going fixed please let know move change code work broken resolver", "d": "6/2015"}, {"body": "thanks opening", "d": "6/2015"}, {"body": "assertion changed deprecation updated soonish use latest beta channel", "d": "6/2015"}, {"body": "since deprecation new method extending existing components", "d": "6/2015"}, {"body": "extending something totally fine nt issue extending though component triggers deprecation", "d": "6/2015"}, {"body": "see wanted extend controls still able could wrap inside component necessary work wrapped elements nt going something access", "d": "6/2015"}, {"body": "change made tweaked need var customselect emberselectextend customselectreopenclass iscomponentfactory true export default customselect get rid deprecation", "d": "6/2015"}, {"body": "good go always seriously appreciate beers", "d": "6/2015"}, {"body": "potentially adding sentence guides clarifying ca nt override model hook substates would also beneficial", "d": "6/2015"}, {"body": "fix mind know happening ember resolver uses main indicator lookup base class something resolverresolve controller main lookup appcontroller templates nt use classes could probably fixed template case however sure working route sure actually loading route base route class thinking probably ca nt main anything looks like behavior added commit", "d": "6/2015"}, {"body": "ideas", "d": "6/2015"}, {"body": "ember bug rather firefox bug see", "d": "6/2015"}, {"body": "reported three packages already want fix perpackage could file appropriate issues", "d": "6/2015"}, {"body": "migrated irc discussion", "d": "6/2015"}, {"body": "fixed included versions since embercli packages update gt unless opt upgrade properly ignore dist", "d": "6/2015"}, {"body": "issue seems resolved", "d": "6/2015"}, {"body": "submitted allow usage determine block provided failing test rerendering changes", "d": "6/2015"}, {"body": "actual implementation removed docs still property definition gone find see gone", "d": "6/2015"}, {"body": "sirzach implemented template see emberhtmlbarslibhooksgetroot never implemented component class", "d": "6/2015"}, {"body": "mmun implemented class nice find thanks newer implementation approach way get hold component js code", "d": "6/2015"}, {"body": "sirzach oops right nt way get right fairly convinced nt need though use case accomplished within template explain would helpful", "d": "6/2015"}, {"body": "use case backwards compatibility pre could check know component used block form later use hasblock order components could work block form glimmer nonglimmer apps going computed property component would check two properties", "d": "6/2015"}, {"body": "sirzach yeah planning making boolean mostly backwards compatible people using fire deprecation warnings consumption definitely semver violation broken terms adding new api component js convinced need", "d": "6/2015"}, {"body": "makes boolean pending review", "d": "6/2015"}, {"body": "thanks rwjblue sorry realize talking thread thanks mmun quick replies", "d": "6/2015"}, {"body": "explanation working redirects basically need wait instance boot call wait settle observe final url final url different initial url want issue also need add way signal different story currently initial url redirects different url via promise reject also means never get reference application instance check url etc explanation solved wrapping inside handle rejection call different method router good first step relatively cleareasy define real use case test think long run better providing finegrained api bootstrap instance see also", "d": "6/2015"}, {"body": "discussion may helpful edit yes know another root causeissue error thought may help understanding may causing problem also suggestion keep issue succinct updateedit instead posting stream consciousness comments", "d": "6/2015"}, {"body": "sandstrom really completely different issue modification going edit looks like issue goes away pass pojo instead null number", "d": "6/2015"}, {"body": "closing favor attached jsbin well", "d": "6/2015"}, {"body": "dpwrussell bug", "d": "6/2015"}, {"body": "confirm alco", "d": "6/2015"}, {"body": "locks confirm removing emberdisableproxycontrollers packagejson fix issue", "d": "6/2015"}, {"body": "seems work error goes away case get action triggered expected editing nt work could nt supposed work point guide longer remember", "d": "6/2015"}, {"body": "locks confirm also solved issue running tutorial ryan labouve youtube got stuck bug thanks alco posting absolute beginner ember js matter quickly got lost learning components pick better understanding ember fundamentals", "d": "6/2015"}, {"body": "issue closed", "d": "6/2015"}, {"body": "anyone else confirm bug created jsbin problem", "d": "6/2015"}, {"body": "used preload data initializer pushed store storepushpayload since possible access store initializer containerlookup forbidden anymore ca nt deferreadiness instanceinitializer preloading data seems pretty hard job typically implemented", "d": "6/2015"}, {"body": "fixed issue pulling data beforemodel hook application route", "d": "6/2015"}, {"body": "intuitivepixel refactor like would probably work requires moving setup logic setup controller initializer big thanks jakesjews moved code initializer application route worked nt even need rwjblue might worth adding something using application route deprecations used", "d": "6/2015"}, {"body": "example docs release uses plan support instance initializers docs wrong", "d": "6/2015"}, {"body": "intuitivepixel solve problem personally nt need use get access ember data store initializer lookup longer available", "d": "6/2015"}, {"body": "making initializers promiseaware would solve issues promise returned ember would wait resolve running next initializer line according dag would even improvement upon even possible async things initializers retaining dag invokation order edit using hook application route works well", "d": "6/2015"}, {"body": "custom piece code provides promiseaware initializers would cool functionality supported ember", "d": "6/2015"}, {"body": "updated blog post three spots initial render sequence discussed specific role application initializers responsible loading app code setting dependency injection load code require ability defer app boot instance initializers specifically intended run entire app present set initial configuration values prep app handle first request fastboot phase run request async hooks application route always run anything else absolutely putting things require async boot phase display loading state errors occur result error handler invoked strongly suspect things want async instance initializers moved async hooks application route route turn access services parts framework appropriate going close issue fairly sure consider bug missed significant usecase handled described please reopen reach thanks", "d": "6/2015"}, {"body": "thanks mixonic got addon related use case nt feel quite solved thread got spree ember lib collection ember cli addons work together provide fully functional ember storefront spree package called provides service needs async load application ready moving code hook host application would mean package parent addon checkouts package would generate application route developer host application application route would look something like import ember ember export default emberrouteextend beforemodel returns promise return thisspreesetupcurrentorder nt feel great muddys concerns packages storefront nt really need worry initialization nested package nt believe developer conscious code addon developer harder provide consistent experience harder maintain project general developers code handled background addon moved host application thoughts thanks much hard work", "d": "6/2015"}, {"body": "would excellent addition engines rfc discussion cc tomdale fact upon reading think usecase already discussed", "d": "6/2015"}, {"body": "thanks mixonic tomdale meaning dig engines rfc spree ember lib close could get building fullblown ember engine ember current iteration right saying generating application route host application way move forward supporting ember", "d": "6/2015"}, {"body": "hhff would suggest making mixin added application controller two thoughts add autorun blueprint tries generate application view upon would make things easy devs without existing view alternatively instanceinitialization could lookup factory application route reopen add mixin would automatically add custom functionality presuming use correctly would work", "d": "6/2015"}, {"body": "yup already got autorun blueprint happening trying minimize surface exposed host application mainly ahh ok applying mixin application route sounds like way go package parent addon none wiser go report back tried something similar without much luck", "d": "6/2015"}, {"body": "problem topaxi", "d": "6/2015"}, {"body": "timohofmeijer solved using following imho weird solution js const computed ember emberlinkviewreopen activelink computed set key value valueset linkview export default embercomponentextend tagname li classnames activelink classnamebindings active active computedalias linkviewactive linkview null use like sure acceptable solution though", "d": "6/2015"}, {"body": "looks pretty good topaxi thanks sharing thing need wrapper get active state nested helpers becomes active moved back computed property observing quite painless since template question already controlled applicationcontroller", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "stefanpenner think attributeproperty handled also like", "d": "6/2015"}, {"body": "afarkas fixed", "d": "6/2015"}, {"body": "removing milestone anglebracket components punted", "d": "6/2015"}, {"body": "got exact issue app ember ember data jquery model fragments", "d": "6/2015"}, {"body": "also seeing issue mobile safari ember ember data jquery model fragments", "d": "6/2015"}, {"body": "narrow version mobile safari troublesome", "d": "6/2015"}, {"body": "mixonic mobile safari", "d": "6/2015"}, {"body": "ios happens different pages app know vague seems always one component stack trace might hint stack trace sentry generated sourcemap support probably wo nt help much anyways", "d": "6/2015"}, {"body": "mixonic seeing well", "d": "6/2015"}, {"body": "might redundant information seeing similar problems", "d": "6/2015"}, {"body": "sirzach error one issue dealing later versions emberqunit fix particular error likely trigger one issue intended trackfix", "d": "6/2015"}, {"body": "rwjblue indeed getting different error upgrading", "d": "6/2015"}, {"body": "also facing issue updates", "d": "6/2015"}, {"body": "try find time next days update api docs well", "d": "6/2015"}, {"body": "implemented basic api docs guide pr pending", "d": "6/2015"}, {"body": "wycats angular react nt mean best agree conceptual mapping argument important aesthetic consideration html angle brackets ugly like xml ugly little bit react code seen makes shudder maybe one bikeshed questions worth fighting sure ever use angle brackets syntax though would see action feel comfortable would hope plan deprecate mustache curly braces day forced use angle brackets syntax day quit ember confirm whether long term plan actually remove mustache curlies handlebars long term time frame would prefer use handlebars stuff indefinitely even though means opting one way binding fact like distinction would assume angle brackets mustache templates supported long time reason ca nt", "d": "6/2015"}, {"body": "eccegordo confirm whether long term plan actually remove mustache curlies clear talking removing curlies invoking components nobody proposed removing curlies entirely things like data binding invoking helpers yes intend eventually drop curly components presumably ember may optional builds sooner svelte builds remove people already fully migrated would assume angle brackets mustache templates supported long time reason ca nt one problem syntax change also tied behavior change implement components maintaining old behaviors performance cost make ember faster smaller soon drop would hope plan deprecate mustache curly braces day forced use angle brackets syntax day quit ember would far easier implement whatever template transpiler want continue benefit rest ember community actual amount code involved supporting mode want tiny reasons officially supporting technical social need balance needs learners existing large codebases alike without leaving anyone behind app owner less constrained feel free experiment whatever syntax like long compile standard ember htmlbars templates", "d": "6/2015"}, {"body": "thanks clarifications feel free experiment whatever syntax like long compile standard ember htmlbars templates looking coming ruby world great options templates slim haml erb etc long ember remain faithful satisfied fact stuff like emblem still possible gives hope seems like worlds angular react java php monolithic corporate cultures behind imposing hideous code aesthetics god help us jsp tag libraries still way things ugly ugly ugly angular suffers lack soul ember certain cool hope remains trying keep social trends popularity becomes fools errand least leads blandness anyway thinking biases showing shut respect performance argument long reasonable transpile path think sufficient read far code write humans make code humans code thoughts expressed terms computer understand let transpilers compilers make code optimal machines", "d": "6/2015"}, {"body": "hit helping update app error message pretty unhelpful wonder could warn time observer created instead exploding view teardown", "d": "6/2015"}, {"body": "use createchildview helper allows use bootstrap popover current context see sources idea port ember nt find way continue use component", "d": "6/2015"}, {"body": "closing initial issue addressed via emberjsrfcs emberjsrfcs pierrickrouxel nt seem directly related seems like something suited needhelp community slack stackoverflow", "d": "6/2015"}, {"body": "rwjblue might fixed recent work", "d": "6/2015"}, {"body": "certainly possible would mind confirming updated jsfiddlejsbin", "d": "6/2015"}, {"body": "swapped urls canary fiddles yes issue gone", "d": "6/2015"}, {"body": "awesome thank", "d": "6/2015"}, {"body": "updated jsbin", "d": "6/2015"}, {"body": "also found wrap nt happen rather using option", "d": "6/2015"}, {"body": "inconsistent works sometimes seen bin however comment todos user model goes fine", "d": "6/2015"}, {"body": "updates found happens routes ember form element application eg seems nt get torn correctly wrap entire template get error", "d": "6/2015"}, {"body": "using helper inside component need access user data normally inject routes controllers accessible inside helper passing every component seems efficient would need make example username every component components would need pass value components access helper inside component way resolve", "d": "6/2015"}, {"body": "addressed emberjs closure actions please see", "d": "6/2015"}, {"body": "bit unlike original fiddle specifying option selected last option works fine chrome broken ie firefox anyone workaround", "d": "6/2015"}, {"body": "yeah major bummer use ember selects bling app placeholderprompt nt work firefox one case add icons autocomplete functionality users use component straight away adding select dom via vanilla ember select mention first scenario nt run problem traditional cases set using code hope helps coffeescript emberselectextend onchange undefined classnames change e gt super e onchange get controller send onchange get selection valueobserver gt changingfrom isnt get value emrunscheduleonce afterrender notifyvaluechange changingfrom get value observesbefore value afterrenderevent gt notifyvaluechange gt val get value trigger change", "d": "6/2015"}, {"body": "cc krisselden well", "d": "6/2015"}, {"body": "thanks sukima added edits suggestion also deprecation fixed current implementation nt require predefine queryparams use ember current implementation queryparams route controller need change route import ember ember export default embermixincreate setupcontroller function controller model thissuperapply arguments controllerset queryparamsready true actions issuequerychanged function changedparam thisqueryparams amp amp thisqueryparams changedparam amp amp thisqueryparams changedparam refresh thisrefresh controller import ember ember export default embermixincreate needs application queryparams queryparamsready false init function var thisget queryparams foreach function param thataddobserver param thatissuequerychanged willdestroy function var thisget queryparams foreach function param thatremoveobserver param thatissuequerychanged issuequerychanged function sender key value rev currentpath null application loading first time forcing reload loading state would needless since already going load model var hascurrentpath thisget controllersapplicationcurrentpath hascurrentpath amp amp thisget queryparamsready usage eg search query parameter route import ember ember import route route export default embermixincreate route queryparams query refresh true controller import ember ember import controller controller export default embermixincreate controller init function thisqueryparamspush query thissuperapply arguments query searchquery issearch function thisset searchquery thisget query return thisget query length gt property query actions search function thistransitiontoroute queryparams query thisget searchquery trim", "d": "6/2015"}, {"body": "rwjblue jayphelps tested ember beta seems issue sure ember release working fine", "d": "6/2015"}, {"body": "davidpett provide steps reproduce", "d": "6/2015"}, {"body": "work demo repo link done first sorry thu jun pm robert jackson notifications githubcom wrote davidpett provide steps reproduce reply email directly view github", "d": "6/2015"}, {"body": "done first sorry worries really want make sure page talking took bit time replicate issue embercli originally use nt occur due browser default behavior tag", "d": "6/2015"}, {"body": "happy investigate reproduction steps take look diff see see anything suspicious", "d": "6/2015"}, {"body": "rwjblue jayphelps removed base tag get issue beta fixed", "d": "6/2015"}, {"body": "davidpett rwjblue figured beta yet gotten fix basically concrete location class nt getting beta excluded route recognizer thanks demo app would taken lot longer find without ember beta ember canary app runs fine ember canary", "d": "6/2015"}, {"body": "awesome little harder embercli issues ca nt simply jsbin anymore thanks", "d": "6/2015"}, {"body": "rwjblue chance getting pr merged beta branch release tomorrow", "d": "6/2015"}, {"body": "davidpett embercli jsbin workinprogress might helpful", "d": "6/2015"}, {"body": "yeah acorncom yet good start faster run cli create demo app", "d": "6/2015"}, {"body": "davidpett sounds good good know", "d": "6/2015"}, {"body": "great catch sorry extra work tracking mistake cherrypicked beta", "d": "6/2015"}, {"body": "confirm works thanks jayphelps finding rwjblue pushing", "d": "6/2015"}, {"body": "case nt believe issue ember rather cost inserting massive amounts svg suspect glimmer work prevent unexpected redraws cases going close feel free convince actually ember issue reopen", "d": "6/2015"}, {"body": "fastboot back good thanks rwjblue working making work today hopefully time look week", "d": "6/2015"}, {"body": "fixed master working update jsbin demo", "d": "6/2015"}, {"body": "news worked around interested know bug", "d": "6/2015"}, {"body": "unfortunately chance investigate", "d": "6/2015"}, {"body": "mmun pinging see premise sounds correct might try hand patching seems handlebarsy chose sorry direct ping", "d": "6/2015"}, {"body": "slexaxton think essentially issue confirm", "d": "6/2015"}, {"body": "yea look like thing though spose issue could saved first half sleuthing issue smile maybe brave subscribe agree whitelist approach think actually crazy find list attributes attributes throw", "d": "6/2015"}, {"body": "async test helpers nt available unit tests intended way unit test promisey behavior", "d": "6/2015"}, {"body": "banged submitter rafalp posted quick workaround", "d": "6/2015"}, {"body": "pr change", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "rwjblue plan fix issue", "d": "6/2015"}, {"body": "trying understand report minutes trouble understanding saying provide structure around descriptions seeing expect see steps reproduce limit code portions required illustrate issue think describing intended behavior", "d": "6/2015"}, {"body": "following correctly think duplicate along lines", "d": "6/2015"}, {"body": "rlivsey would underlying cause problem really implementation detail amurchick uncovered still trying figure public api bug based report", "d": "6/2015"}, {"body": "trek accurate describe problem ok try bug occurs use query parameters nested routes produce navigate see elements developer console see routes value try change example see elements whats wrong every values query parameter equals happens please see first comment expect expect value query parameter changed routes every query parameter must value described case exists worked described yes use nested routes navigate see correct since query parameter defined level click link url changed simply add url reload page write end url press enter see eg every route query parameter value", "d": "6/2015"}, {"body": "basically bug query params sticky nested routes cachekey calculated correctly since nested routes dot name nt work keys dot trek got pr failing test fix query params controllers query params routes feature nt enabled yet though spent time trying figure could nt manage ca nt spend time push within next hr", "d": "6/2015"}, {"body": "nt get chance push pr may got route defined query params push tomorrow", "d": "6/2015"}, {"body": "closed posted work around uses fix want style textstyle anotherstyle style textstyle nt seem supported add extra function simply bolt onto result textstyle far elegant", "d": "6/2015"}, {"body": "documentation would helpful noticed helper pointing instance populated headed stability issue", "d": "6/2015"}, {"body": "upgrading ember fixed issue per previous comment upgrading closing issue smile", "d": "6/2015"}, {"body": "also seeing issue would useful could fixed failing workaround would cool", "d": "6/2015"}, {"body": "wonder ultimately related issue well", "d": "6/2015"}, {"body": "seems related line transitionqueryparamsonly appears set false refreshing model replaceurl variable read declaration edit updated link reference original code", "d": "6/2015"}, {"body": "machty tomdale created rfc", "d": "6/2015"}, {"body": "still seeing nt think fixed post jsbin issue reason jsbin works versions ember due another issue unfortunately ca nt upgrade much deprecated", "d": "6/2015"}, {"body": "sure else could post getting error even remove outlet application template created application controller could addon package causing deprecation warning", "d": "6/2015"}, {"body": "feature enabled removed milestone", "d": "6/2015"}, {"body": "seems like aurelia making use features wycats mentioned using decorators dependency injection also support dropped seems like could movement happening direction", "d": "6/2015"}, {"body": "also support dropped seems like could movement happening direction yes iswas largest barrier next largest actually copious amount refactoring incompatibility classes specifically lack desugaring super", "d": "6/2015"}, {"body": "would great use powered methods instead magical guess possible ember switch classes base classes support understand ember drop problem", "d": "6/2015"}, {"body": "much work done pending pr stefenpenner makes required changes still needs changesfixed iirc", "d": "6/2015"}, {"body": "guess possible ember switch classes base classes classes works correctly superwrappering makes work today mostly waiting things decorator spec finalized ca nt start relying onfinalized spec dropped extraction mixin helper without serves little value core although may provided addon", "d": "6/2015"}, {"body": "updated checkboxes edited words loose mode proto fivetanley im sure means suspect nt matter ember drops", "d": "6/2015"}, {"body": "kagemusha kind tests failing application fix first test working looks like setup nt creating new ember app", "d": "6/2015"}, {"body": "alvinvogelzang get error without reregister already resolved", "d": "6/2015"}, {"body": "input valuefirstname action didtype input working ember", "d": "6/2015"}, {"body": "stefanpenner sorry prod feel free ignore wondering thoughts component performance process migrating leaning heavier components moving away controllers views vast majority changes certainly better awesome ember year far componentheavy parts gotten quite bit slower together generic example got time look would much appreciated", "d": "6/2015"}, {"body": "sandstrom nt chance work yet many ideas soon dedicate time instead embercli absolutely said able spend time removing related cruft deprecated code helping reduce complexity offending code goal work make easier implement perf ideas also know rest team also shares goals anyways thanks demo app use dedicate time", "d": "6/2015"}, {"body": "stefanpenner sounds great feel bad asking ideally dig try improve performance unfortunately wellversed perf optimizations working awake hours small startup happy dropped looking forward see perf magic conjure honeypot fireworks", "d": "6/2015"}, {"body": "vicentereig communicating state query params parent controller coupling two controllers together", "d": "6/2015"}, {"body": "got equivalent take keys seems strange helpers work way nt", "d": "6/2015"}, {"body": "afaik nothing like need normal built", "d": "6/2015"}, {"body": "edit able get changed params syntax experiencing well use case kamalaknn find solution", "d": "6/2015"}, {"body": "meggers yup first argument changed params caveat dealing removed params use couple hacks get current state clean solution would neat actually returned current state machty best practice would suggest reloading model route changes without want child routes rerender path follow new component hooks rewrite", "d": "6/2015"}, {"body": "curiosity get current state", "d": "6/2015"}, {"body": "meggers basically wrapped couple hacks may best solution use make", "d": "6/2015"}, {"body": "glimmer api removed seanpdoyle thank effort research pushing forward", "d": "6/2015"}, {"body": "dropped believe solution wip hopefully get completion test weekend", "d": "6/2015"}, {"body": "forgot smile", "d": "6/2015"}, {"body": "issue never called aborts", "d": "6/2015"}, {"body": "skoryky workaround works fine", "d": "6/2015"}, {"body": "bump makes sense empty object nt empty", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "yay future generations ember noobs know struggle", "d": "6/2015"}, {"body": "thanks last comment hit wall found post google search", "d": "6/2015"}, {"body": "run problem see make change actions action", "d": "6/2015"}, {"body": "long ember supports perhaps issue closed ember wo nt support browser nanoscopic market share days", "d": "6/2015"}, {"body": "think useful explicitly point document deconstruction pattern useful able quickly refactor use native promises smaller bits ember future eg import ember ember const rsvp ember const promise rsvp var apromise new promise globals either case use native implementation necessary drop globals definition top file use mentioned wanting blog architecting way", "d": "6/2015"}, {"body": "think one best strategies ember community futureproofing aligning future specs would definitely useful document advantages patterns enable", "d": "6/2015"}, {"body": "pretty annoying behaviour particular manual transition route explicitly specifying new query params object expect controller set given query params reset old remembered ones preferably oneway binding query params properties way around", "d": "6/2015"}, {"body": "ran issue today running unit test component used fade text getting error worst part error causes test fail related test actually causing problem making bit tricky figure using stefanpenner suggested fix inside emberrunlater function worked fix problem testing edit see stefanpenners post makes good point cleaning timer component destroyed nt run yet prevent issue testing", "d": "6/2015"}, {"body": "therefore willdestroy guarantee run outstanding debounced functions calling super nice way part framework nope general destructors extra sideaffects seen antipatterns", "d": "6/2015"}, {"body": "using stefanpenner suggested fix selfisdestroyed return inside emberrunlater function worked fix problem testing idiomatic oo created something must clean gc language often happens nt true timers object spawns also sure cancel although verbose following would correct solution js export default emberobjectextend startpolling thispoller throw new error concurrent pollers thispoller emberrunlater stoppolling emberruncancel thispoller willdestroy thissuper arguments thisstoppolling possible add sugar believe left addon ecosystem flesh", "d": "6/2015"}, {"body": "stefanpenner thanks seems like better way clean gets rid testing issue", "d": "6/2015"}, {"body": "thanks seems like better way clean gets rid testing issue also important nontesting scenarios imaging leaving lingering pollers user navigates app", "d": "6/2015"}, {"body": "compatible way unregister items container well", "d": "6/2015"}, {"body": "unregister", "d": "6/2015"}, {"body": "react folk boasting hot reloading modules js", "d": "6/2015"}, {"body": "emberjsdata better solution use instead", "d": "6/2015"}]