[{"title": "better documentation around array nested object reactivity", "body": "problem feature solve common occurrence within vue getting fresh array hot api replace existing array fresh array question reactivity implications replacing array deep object vue thisitems remain reactive thisitems diff take advantage performance optimizations answers questions yes setters used object swap wipe watchers anyone clarify expected outcomeoffer guidance approach common problem best way proposed api look like reobservation deeply nested objects", "num": "8111", "d": "4/2018"}, {"title": "weird behavior browser back button", "body": "version reproduction link steps reproduce click page click back button browser expected checkbox check like redirect actually happening checkbox show wrong checked chrome step repeat steps checks disappear", "num": "8110", "d": "4/2018"}, {"title": "\u5728ios\u7684safari\u4e0abfcache\u5931\u6548", "body": "version reproduction link steps reproduce clone install start expected actually happening", "num": "8109", "d": "4/2018"}, {"title": "async component loading show", "body": "const asynccomponent gt \u9700\u8981\u52a0\u8f7d\u7684\u7ec4\u4ef6 \u5e94\u8be5\u662f\u4e00\u4e2a \u5bf9\u8c61 component import mycomponentvue \u5f02\u6b65\u7ec4\u4ef6\u52a0\u8f7d\u65f6\u4f7f\u7528\u7684\u7ec4\u4ef6 loading loadingcomponent \u52a0\u8f7d\u5931\u8d25\u65f6\u4f7f\u7528\u7684\u7ec4\u4ef6 error errorcomponent \u6beb\u79d2 delay timeout write component loadingcomponent show \u6211\u5199\u4e86\u4e00\u4e2a\u52a0\u8f7d\u52a8\u753b\u7ec4\u4ef6 \u4f46\u662f\u6ca1\u6709\u663e\u793a \u6211\u7406\u89e3\u8fd9\u4e2a\u5f02\u6b65\u7ec4\u4ef6 \u5f53\u53bb\u52a0\u8f7d\u7684\u65f6\u5019 loadingcomponent\u5e94\u8be5\u662f\u4e00\u4e2a\u52a0\u8f7d\u7684\u52a8\u753b \u6709\u5565\u53c2\u8003\u7684\u5199\u6cd5\u6ca1", "num": "8108", "d": "4/2018"}, {"title": "mixin mixin see properties first entity", "body": "", "num": "8107", "d": "4/2018"}, {"title": "lazy load components", "body": "problem feature solve problem architecture apps want load components application asynchronally vue declare async component must define constructor function one thus need list every component name exists app even nt loaded first app works see file array called want function dynamic component factory receives name component encountered template render function tries load component dynamically mostly useful async components tries load component definition network resolve component constructor already modified version vue changes successfully use technique build ship three different web apps currently dynamic component factory injected mixin options object want define lowestlevel interface possible designed implemented plugin customized options provide highlevel interface proposed api look like javascript myplugininstall function vue options vueprototypedynamiccomponent function id id matches expected pattern return component constructor probably async constructor otherwise return nothing normal process continues vueuse myplugin someoption true", "num": "8106", "d": "4/2018"}, {"title": "vue rendering options array", "body": "version reproduction link steps reproduce pull repo npm install npm run dev go app created method supposed render option list select element load backend sends vue payload node express server parses large json sends payload frontend pull full stack expected render citynames array options dropdown list coming state actually happening state populated correctly yet rendering options vfor error either want reproduce backend please pull node repo", "num": "8105", "d": "4/2018"}, {"title": "vue rendering state array options", "body": "hi trying render options select table even though state rendering maybe weird thing yet reason nt rendered array brought via node backend heavy parsing vue side see options set store state via vuex console errors displayed options empty rendering state citynames array exporting store components import vue vue import vuex vuex import axios axios vueuse vuex export default new vuexstore state istrue true citynames component script component template", "num": "8104", "d": "4/2018"}, {"title": "vuejs mustach correctly rendered indenting root element", "body": "version reproduction link steps reproduce issue happens root element indented mustache split several lines html myvar root element indented mustache gets rendered correctly also works mustache put single line root element indented html myvar expected mustache bind data actually happening mustache gets rendered plain text wanted prettify code split mustache several lines removed indent root element", "num": "8103", "d": "4/2018"}, {"title": "broken reactivity class instance array property", "body": "version reproduction link steps reproduce wait seconds first array one replaced redrawn mutated array redrawn expected arrays redrawn seconds actually happening mutated array redrawn sure really bug something wrong clearly something", "num": "8102", "d": "4/2018"}, {"title": "functional component fails depending siblings around", "body": "version reproduction link steps reproduce create functional component returns several root nodes use binding like siblings around render template expected renders correctly actually happening renders string undefined console errors interesting may render successfully depending siblings around several examples link", "num": "8101", "d": "4/2018"}, {"title": "gc vfor elements", "body": "version reproduction link steps reproduce open open devtools watch dom nodes click add button click clear follow go back link collect garbage expected dom nodes gc ed actually happening nothing", "num": "8100", "d": "4/2018"}, {"title": "make possible set static classes within attrs hash data object", "body": "problem feature solve doc data objects kind misleading since staticclass nt listed wondering nt added element find odd simplified example nt translate problems comes merging arrays objects strings proposed api look like chrisvfritz said doc issue static class think might make sense alias", "num": "8098", "d": "4/2018"}, {"title": "feature request vswitch directive", "body": "problem feature solve syntax sugar several vif velseif velseif etc example syntax could current setup would see switch statement would make html markup much cleaner proposed api look like", "num": "8097", "d": "4/2018"}, {"title": "render singlefile components without wrapper boilerplate", "body": "problem feature solve singlefile vue component treat entry point rendering dom requires boilerplate script bootstrap js import vue vue import app appvue export const view new vue el app render h gt h app seems unnecessary nt currently seem way compile component selfrendering entry point proposed api look like vue export default el app adding would indicate component meant include precompiled template dom initialize soon generated script loads currently singlefile component support attribute", "num": "8094", "d": "4/2018"}, {"title": "use tostring object interpolation defined", "body": "version reproduction link steps reproduce interpoling object uses method instead normally proper method set way convert object string could try see method present calling one expected fiddle string test actually happening fiddle string json jsonval thanks", "num": "8093", "d": "4/2018"}, {"title": "upgrade version dependency seleniumserver", "body": "problem feature solve currently version dependency seleniumserver defined packagejson could upgrade asking dependency causes version conflict application breaks tests proposed api look like api vue would stay", "num": "8092", "d": "4/2018"}, {"title": "vue route object gets freeze vue core", "body": "version reproduction link steps reproduce using plugin problem getting route params using breadcrumb problem see open issue vuerouter freeze object impossibile manage params easy reproduce install plugin create two route dynamic params links nt replace found something keeps string literally find example link expected get route params chain actually happening explain steps reproduce", "num": "8091", "d": "4/2018"}, {"title": "defining variables containing data seem proxy original", "body": "version reproduction link steps reproduce go link put html file load browser look content currently true false correct click save see true false switch respectively even though directly setting expected update data variable affect somedata update data actually happening seems proxying somedata data variable therefore unable take variables vue data object change new variable proxy back original place could wrong could expected behaviour eyes seems wrong nt make sense happens tested well happens expected fixed happen expected create separate variable containing contents variable vue data object noticed using issue within something building company making extensive use vue many reasons lot data preparing setting correct values database sending using vueresource try prepare data update breaking page problem looking see assigning data like means variable assign data becomes observer way", "num": "8090", "d": "4/2018"}, {"title": "vue breaks styling using comments inline style attribute", "body": "version reproduction link steps reproduce add comment inside style attribute element within vue app instance example style color blue comment backgroundcolor yellow expected element blue text yellow background actually happening comment breaks attribute style properties comment ignored coming effect reproduction example text blue background yellow jsbin contains slightly different example hope live", "num": "8089", "d": "4/2018"}, {"title": "listening blur events keyup enter events input trigger keyup enter events blur events also triggered", "body": "version reproduction link steps reproduce click new tag button input something press return open chrome devtools see output times number expected press return execute kekup enter function focus lost execute loses focus function actually happening press return execute keyup enter function loses focus function focus lost execute loses focus function", "num": "8088", "d": "4/2018"}, {"title": "camel case property names inline template", "body": "version reproduction link steps reproduce component requried prop function named onselectionchange use component xtemplate use vbind onselectionchange myfunc works want use inline template use vbind onselectionchange myfunc correct expected expecting use prop name either xtemplate inlinetemplate actually happening change prop name use component inlinecomponent added codepen repo working put code describe problem", "num": "8086", "d": "4/2018"}, {"title": "keepalive components based runtime conditions", "body": "problem feature solve usecase condition keep component alive based user input supports props check component way components based conditions runtime proposed api look like looking something like following could anything computed vuex state expression", "num": "8085", "d": "4/2018"}, {"title": "error vue execute chromeruntimesendmessage", "body": "hi chrome console error typeerror read property sendmessage undefined objectsendmessage vuecomponentcreatcode productqrcodevue click eval nodemodulesvueloaderlibtemplatecompilerindexjs id hasscoped true transformtorequire video src source src img src image xlink href buble transforms nodemodulesvueloaderlibselectorjs typetemplate amp srcpageoperatorproductvue vuecomponentinvoker vueesmjs vuecomponentvue emit vueesmjs vuecomponente function emit chromeextension vuecomponenthandleclick elementuicommonjs invoker vueesmjs htmlbuttonelementfnwithtaskfnwithtask vueesmjs chrome means redefining design thanks", "num": "8084", "d": "4/2018"}, {"title": "properties used nested component omitted", "body": "version reproduction link steps reproduce open attached link check generated html find something similar default component value note following markup custom component expected grid custom cell component rendered without html attribute actually happening redundant property rendered working vue grid want provide users great customization capabilities run problem bloated markup creating high order components extend default components", "num": "8083", "d": "4/2018"}, {"title": "utilize vue reactivity mobx like data store", "body": "problem feature solve possible simply use unmounted vue instance reactive store however inherits view related functionality make way create nonui vue instance personally nt able understand vue reactivity makes much sense view layer mobx reactivity makes much sense store layer yet mobx typically used react reactive vuex reactive vastly different design mobx similar vue used vue mismatch creates loss symmetry seems clear path towards unified reactive view store system unified use framework unified matching concepts matching apis use mobx vue dealing two different reactive apis kills symmetry consistency get store layer scope vue meant view layer however possible create clean nonui vue instance creates base object expanded separate project proposed api look like javascript new vue ui false data optionally create lower level object used vue instances internally store new vdata data", "num": "8082", "d": "4/2018"}, {"title": "route switching increases memory consume", "body": "version reproduction link steps reproduce yarn install yarn serve select main route switch multiple times child routes check memory consume expected increasing memory switching routes actually happening switching child routes multiple times memory consume increases lot company app basic setup loading cards kanban placed child routes switching one kanban another memory increases take long decrease apparently route components keeps cache way destroy theese components", "num": "8081", "d": "4/2018"}, {"title": "different behavior key data key vmodel", "body": "version reproduction link steps reproduce type something third input whose vmodel test find test updated expected behavior second input whose vmodel data test users type something data propertytest updated actually happening data propertytest updated", "num": "8080", "d": "4/2018"}, {"title": "getting ald vmodel object value change event", "body": "problem event change launch code use vmodel select value used old get new value come accross old link another post speaks issue", "num": "8078", "d": "4/2018"}, {"title": "component calls update hook destroyed", "body": "version reproduction link steps reproduce home link test link expected home component destroyed updated hook called actually happening home component destroyed updated hook called log information home beforecreate home created home beforemount home mounted test beforecreate test created test beforemount home beforedestroy home destroyed test mounted home updated home component call updated hook destroyed vue designed", "num": "8076", "d": "4/2018"}, {"title": "native app call vue method invalid", "body": "version reproduction link steps reproduce ios app call js method ca nt work expected answer asap actually happening ios app call js method ca nt work", "num": "8075", "d": "4/2018"}, {"title": "instance method work functional component ie ca nt use inside", "body": "problem feature solve currently ca nt use functional components html proposed api look like api work outofthebox", "num": "8074", "d": "4/2018"}, {"title": "el vue components always reference dom element", "body": "version reproduction link steps reproduce step click button twice left top add two dom element \u8bf7\u8f93\u5165\u6587\u5b57 drag blank place step double click erery dom element flag one step right click second dom element insert step click \u5220\u9664 remove step find remove first dom element expected expect remove dom element exactly click actually happening always remove first one within component bind \u5220\u9664 event like deletefun elremove", "num": "8073", "d": "4/2018"}, {"title": "el vue components always reference dom element", "body": "version reproduction link steps reproduce step click button twice left top add two dom element \u8bf7\u8f93\u5165\u6587\u5b57 step double click erery dom element tag flag one step right click second dom element step click \u5220\u9664 remove step find remove first dom element expected expect remove dom element exactly click actually happening always remove first one within component bind \u5220\u9664 event like deletefun elremove", "num": "8072", "d": "4/2018"}, {"title": "el vue components always reference dom element", "body": "version reproduction link steps reproduce step click button twice left top add two dom element \u8bf7\u8f93\u5165\u6587\u5b57 step double click erery dom element tag flag one step right click second dom element step click \u5220\u9664 remove step find remove first dom element expected expect remove dom element exactly click actually happening always remove first one", "num": "8071", "d": "4/2018"}, {"title": "vhtml wo nt work", "body": "version reproduction link steps reproduce use expected replaced value evaluated actually happening nothing replaced sure intentional", "num": "8070", "d": "4/2018"}, {"title": "access template child level", "body": "version reproduction link steps reproduce want two show custom template listvue layer triple layout user something listview list expected way two show third html tag actually happening nothing showing", "num": "8069", "d": "4/2018"}, {"title": "input vmodel computed property getter setter", "body": "version reproduction link steps reproduce using jsfiddle link type text inputs expected vue instance data text property updated inputs actually happening first input working using datatext inside setter using thistext data updated", "num": "8068", "d": "4/2018"}, {"title": "allow template element tag name binding", "body": "problem feature solve vue docs give following example case render function might convenient however seems addition single syntax keyword perhaps tag templates could provide functionality render function first tag string return value proposed api look like javascript variable eg maybe something like maybe would nt surprised idea already considered discarded good reasons figured throw feature request anyway discussion future reference", "num": "8067", "d": "4/2018"}, {"title": "vue warning vue directive expression", "body": "define directive use projectbut throw warning indexbottomswipe defined instance referenced render make sure property reactive either data option classbased components initializing property see directive defined vuedirective test acceptstatement false bind el binding vnode logistic code update el binding vnode directive use demo like", "num": "8064", "d": "4/2018"}, {"title": "multidimensional model working", "body": "multidimensional model working well model change press enter", "num": "8063", "d": "4/2018"}, {"title": "property updates slow significantly lifetime application", "body": "version reproduction link steps reproduce yarn yarn run dev ctrl select import observe imports ok first time select file import times observe application performance significantly degrades unacceptable level expected vue application stays responsive launch actually happening vue application slows significantly unacceptable levels variant demo already lot workarounds get vue even update counter realtime without workarounds profilescount simply frozen end stream", "num": "8062", "d": "4/2018"}, {"title": "properties updating realtime", "body": "version reproduction link steps reproduce unpack repotartz yarn yarn run dev ctrl import either tarballs expected profiles counter updated realtime files processed actually happening profiles counter updates files processed smaller tarball given updates seem work realtime ok", "num": "8061", "d": "4/2018"}, {"title": "summernote nt work created event vuejs", "body": "version reproduction link steps reproduce instantiate summernote element inside event vuejs write text inside summernote see issue summernote nt work area instantiate summernote element console watch new summernote created expected create summernote instance without issues actually happening summernote nt work area created created method instantiate summernote element console watch new summernote element created thinking summernote nt work virtual dom wrong", "num": "8060", "d": "4/2018"}, {"title": "refs correct changed list order", "body": "version reproduction link steps reproduce click button three times click click button expected show first actually happening show first", "num": "8059", "d": "4/2018"}, {"title": "", "body": "version reproduction link steps reproduce props datainput type array required true \u62a5vueesmjs vue warn invalid prop type check failed prop value expected string number got array expected \u683c\u5f0f\u4f20\u9012\u4e0d\u6b63\u786e actually happening \u683c\u5f0f\u4f20\u8f93\u9519\u8bef", "num": "8058", "d": "4/2018"}, {"title": "", "body": "props datainput type array required true", "num": "8057", "d": "4/2018"}, {"title": "returns vnode directly array vnodes depending content", "body": "version reproduction link steps reproduce create component uses render function return parent element children create instance component passes multiple elements scoped slot see return array create instance component passes single element scoped slot see return vnode array single vnode expected always return array vnodes even one vnode array behaves actually happening returns mixed types array multiple elements slot direct vnode instance single child inconsistent regular slots behave render functions means render function component rendering scoped slots children needs type check result invoking slot decide needs wrapped array contrast regular slots always safe pass slot child always array bummer although pretty easy classify bug would breaking change lot people using scoped slots write components use default scoped slot root element bug fixed anyone component like would need rewrite like nt bug design love better understand reasoning", "num": "8056", "d": "4/2018"}, {"title": "memory leak vuecomponents", "body": "version reproduction link steps reproduce please check steps provided expected memory leak page navigation actually happening vuecomponents gc also detached dom fragments retain possible leak problem caused vue library", "num": "8055", "d": "4/2018"}, {"title": "getting error mixin css module mode vue components", "body": "version reproduction link steps reproduce mixin vue component turned css module mode mycomponentvue import mymixin mymixin export default name mycomponent mixins mymixin created consolelog style yellow color yellow mymixinvue iam mymixin export default name mymixin red color red expected merge style object output consolelog style expected actually happening throw error", "num": "8054", "d": "4/2018"}, {"title": "\u52a8\u6001\u5220\u9664\u8def\u7531\u89c4\u5219", "body": "problem feature solve \u5728\u505a\u767b\u5f55\u9a8c\u8bc1\u65f6 \u7ed9\u7528\u6237\u52a8\u6001\u6dfb\u52a0\u8def\u7531\u89c4\u5219 \u7136\u540e\u6ce8\u9500\u7528\u6237\u91cd\u65b0\u767b\u5f55\u65f6 \u53c8\u6dfb\u52a0\u4e00\u6b21\u8def\u7531 \u4f1a\u8b66\u544a\u8def\u7531\u89c4\u5219\u91cd\u590d proposed api look like routerdelroutes routes", "num": "8053", "d": "4/2018"}, {"title": "issue getting values without ajax", "body": "way get vselect multiple values without using ajax found link searched lot found help", "num": "8052", "d": "4/2018"}, {"title": "nexttick use microtask macrotask one loop cause task use microtask", "body": "version reproduction link steps reproduce open console expected \u5728nexttick\u4e2d\u5982\u679c\u6709dom\u64cd\u4f5c\u5219\u4f7f\u7528macrotask\u6267\u884c actually happening \u5728\u5b9e\u9a8c\u4e2d\u6211\u5e76\u6ca1\u6709\u8bd5\u51fa", "num": "8050", "d": "4/2018"}, {"title": "prop sanitization", "body": "problem feature solve would extensions props api would allow us sanitize given value property passing onto component instance right real way value set component proposed api look like whould work similarly validators props work passing sanitizer function prop definition", "num": "8049", "d": "4/2018"}, {"title": "console error", "body": "use vue init webpack demo install dependencies cd demo file npm run dev open browser developer tools console error know nt affect work nt want see error", "num": "8046", "d": "4/2018"}, {"title": "binding arg get correct instruction parameters", "body": "version reproduction link steps reproduce results printed expected gonext actually happening gonext", "num": "8045", "d": "4/2018"}, {"title": "vif fires load event removal", "body": "version reproduction link steps reproduce create picture element multiple working source childelements attach load event handler img tag within picture element toggle wrapper element elements vif check many times load event fires expected removing picture elements vif cause additional firing load event image actually happening removing picture elements vif causing additional firing load event image im working project modal loads elements using vfor modal triggered via vif picture elements handler load event specific use case important accurate firing load event problem close modal picture elements firing load callback happen doensnt happen regular elements remove elements problem stops looks like something sources triggering load event", "num": "8044", "d": "4/2018"}, {"title": "vif fires load event removal old issue", "body": "im working project modal loads elements using vfor modal triggered via vif picture elements handler load event specific use case important accurate firing load event problem close modal picture elements firing load callback happen doensnt happen regular elements reproduction remove elements problem stops looks like something sources triggering load event", "num": "8043", "d": "4/2018"}, {"title": "ios safari\u6d4f\u89c8\u5668\u4e0b\u70b9\u51fb\u8def\u7531\u8df3\u8f6c\u540e\u51fa\u73b0\u7a7a\u767d", "body": "ios safari\u6d4f\u89c8\u5668\u4e0b\u70b9\u51fb\u8def\u7531\u8df3\u8f6c\u540e\u51fa\u73b0\u7a7a\u767d \u6570\u636e\u5df2\u7ecf\u8bf7\u6c42\u8fc7\u4e86 \u540c\u6837\u7684\u624b\u673a\u7248\u672c\u4e0a\u6ca1\u6709\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898 \u8bf7\u95ee\u600e\u4e48\u89e3\u51b3\u8c22\u8c22", "num": "8042", "d": "4/2018"}, {"title": "vpre work template tags", "body": "version reproduction link steps reproduce using laraveladminorg incorporated vuejs system problem functionalities use tag template duplicate using jquery vuejs rendering tags even add vpre directive breaking functionality expected directive vpre prevent render tag template actually happening tag template rendered disappears preventing later use js script breaking functionality", "num": "8041", "d": "4/2018"}, {"title": "clipping info given tab", "body": "version reproduction link steps reproduce compute chrome ubuntu chrome throw question use vue error show channel error handleresponse errormessage clipping info given tab log expected show errormessage clipping info given tab channel error handleresponse errormessage clipping info given tab log loggersforeachn invokeloggers error handleresponsepromise handledispatchresponse handlemessage listener eventimpldispatchtolistener extensions publicclassprototype anonymous function extensions eventimpldispatch extensions eventimpldispatch extensions publicclassprototype anonymous function extensions messagelistener extensions eventimpldispatchtolistener extensions publicclassprototype anonymous function extensions eventimpldispatch extensions eventimpldispatch extensions publicclassprototype anonymous function extensions dispatchonmessage extensions channel error handleresponse errormessage clipping info given tab log loggersforeachn invokeloggers error handleresponsepromise handledispatchresponse handlemessage listener eventimpldispatchtolistener extensions publicclassprototype anonymous function extensions eventimpldispatch extensions eventimpldispatch extensions publicclassprototype anonymous function extensions messagelistener extensions eventimpldispatchtolistener extensions publicclassprototype anonymous function extensions eventimpldispatch extensions eventimpldispatch extensions publicclassprototype anonymous function extensions dispatchonmessage extensions uncaught promise error clipping info given tab ehandleresponsepromise ehandledispatchresponse ehandlemessage listener eventimpldispatchtolistener extensions eventpublicclassprototype anonymous function dispatchtolistener extensions eventimpldispatch extensions eventimpldispatch extensions eventpublicclassprototype anonymous function dispatch extensions messagelistener extensions actually happening prevent error", "num": "8040", "d": "4/2018"}, {"title": "template compiler add source metadata html tags", "body": "problem feature solve developing allinone editor webdevs runs inside chrome devtools replacing users fully featured text editor right inside chrome devtools shell automatically pointing project directory comes dom inspector pick element literally take element defined nt look files figure button header coming useful new dev joins project revisiting work long time watch sec demo w react project course also works vue projects awesome watch sec demo w vue project demos shot using locally tinkered compilers clean enough pr goal deliver ultimate developer experience ever features development speak like css quickediting builtin image editor svg editor devs nt fire illustrator photoshop make minor tweaks stuff hurdle releasing app getting external players participate revolutionizing write web wrap two requests please template compilers add metadata tag either data attribute property dom node contains path file relative project root offset tag opens last offset tag closes please star issue proposed api look like something like", "num": "8034", "d": "4/2018"}, {"title": "bound event gets reused vifelse condition", "body": "version reproduction link steps reproduce enter input field click link test btn expected trigger click event configured test btn actually happening triggers function binded test btn trigger test btn happens use vif parent element link use vshow nt issue", "num": "8032", "d": "4/2018"}, {"title": "\u5efa\u8bae\u4e3a\u6570\u7ec4\u6dfb\u52a0\u4e00\u4e2a apply \u65b9\u6cd5", "body": "problem feature solve set \u6240\u4ee5\u6211\u60f3\u5728\u6570\u7ec4\u4e0b\u6dfb\u52a0\u4e00\u4e2a\u53ef\u4ee5\u89e6\u53d1\u66f4\u65b0\u7684\u65b9\u6cd5 \u6240\u4ee5\u5728 \u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b9\u6cd5 \u5177\u4f53\u7684\u4ee3\u7801 \u6d4b\u8bd5\u4ee3\u7801\u5728\u540c\u76ee\u5f55\u7684 testmjs \u8fd9\u6837\u505a\u4f1a\u91cd\u65b0 observe proposed api look like thisarray apply", "num": "8031", "d": "4/2018"}, {"title": "add nexttick option watch api", "body": "problem feature solve situations watch callbacks fired next event loop example create component select value watcher triggered selectitems created proposed api look like", "num": "8030", "d": "4/2018"}, {"title": "losing data load new page", "body": "hello studen know java php start laravel vue make update project al ready change page lose data example url part create app listing gen movies db ok list movies gen url change gennameofgen check soucer ul get new vue work main page gt home one time page change generonameofgen get problem include blade sidebar content app basic say page display sidebar include vue app", "num": "8029", "d": "4/2018"}, {"title": "keepalive includeexclude components component key attribute", "body": "problem feature solve include exclude props allow components conditionally cached component name want reuse components force replacement using attribute control components want keepalive matching components name proposed api look like", "num": "8028", "d": "4/2018"}, {"title": "put agenda", "body": "", "num": "8027", "d": "4/2018"}, {"title": "vmodel bug", "body": "version reproduction link steps reproduce run bug ca nt show correctly expected add tips warn add trim actually happening text space browser correct think bug", "num": "8026", "d": "4/2018"}, {"title": "creating component named map warn user button", "body": "version reproduction link steps reproduce create component includes word map case insensitive example map mapview mapper expected expect work least give sort error message actually happening nothing happens components render error message", "num": "8025", "d": "4/2018"}, {"title": "need number filter", "body": "using angularjs yearrecently found methods transform decimals fixed number html deom add jsplease add number filter vue thanks", "num": "8024", "d": "4/2018"}, {"title": "need numbr filter", "body": "using angularjs yearit convinient transform decimals fixed numbr vuecan add number filter html thank", "num": "8023", "d": "4/2018"}, {"title": "vonce component tag nt work vfor", "body": "version reproduction link steps reproduce run code watch expected yay yay values change hell naw seconds actually happening yay yay values changing hell naw seconds wait seconds behavior consistent component tag vfor change comp comp var z new vue el app data comp items components template yay yay template hell naw settimeout function zcomp", "num": "8021", "d": "4/2018"}, {"title": "wrong style element", "body": "version reproduction link steps reproduce add element style example width inspect element chrome print value comma dot warning see reproduction expected expected value dot comma actually happening dot transformed comma", "num": "8020", "d": "4/2018"}, {"title": "vfor directive inconsistency local production environment using chrome", "body": "version reproduction link steps reproduce create simple table create http request retrieve collection data used utilise directive loop data table row see data rendered request chrome tools gt network expected render collection data actually happening ca nt seem render collection data using directive collection data coming http request works completely fine local machine production environment ran bug deploying application production environment seems happening chrome currently latest", "num": "8018", "d": "4/2018"}, {"title": "introduces typeerror bind function", "body": "version reproduction link steps reproduce provide non function utility method expected lt rendered failed silently sure want keep expectation existing projects fail render completely devmode warning least helpful identifying issue actually happening uncaught typeerror refactoring method use native bind exposes coding error upgrading fairly large codebase one developers mistakenly added object component method eg global vue events instance made way production worked fine upgrading took find clear indication error happening devs experienced well", "num": "8017", "d": "4/2018"}, {"title": "vue selected bind work option tags", "body": "version reproduction link steps reproduce instantiate vue instance property named array consisting iterate locations tag like expected attribute set element actually happening attribute set also tried following attempting debug avail", "num": "8016", "d": "4/2018"}, {"title": "merge common class names component root element component", "body": "problem feature solve looks little awkward duplicate class names dom element proposed api look like look fiddle element component two classes looks like html two classes would merged one html would worked behaved exactly way code look lot cleaner", "num": "8015", "d": "4/2018"}, {"title": "bug report bug animation", "body": "version reproduction link steps reproduce create items expected top element appears animation actually happening top element appears without animation instead bottom element reappears animation", "num": "8014", "d": "4/2018"}, {"title": "unable use directives render function typescript", "body": "version reproduction link steps reproduce paste run expected errors actually happening property oldvalue missing type name string value string", "num": "8013", "d": "4/2018"}, {"title": "component property must function restriction", "body": "problem feature solve take restriction would increase consistency understand every component needs copy object ca nt copy object hood benefits using function instead proposed api look like", "num": "8012", "d": "4/2018"}, {"title": "deletion elements using custom directives causes elements display properly", "body": "version reproduction link steps reproduce html \u4fee\u6539 \u65b0\u589e \u8fd4\u56de js directives inserted el binding bindingvalue elparentnoderemovechild el mounted settimeout gt thisisedit thisisedit expected normal display status changes actually happening display normally status changes cancel comment modify button displayed normally", "num": "8011", "d": "4/2018"}, {"title": "importing css always yields file found", "body": "trying import component inside sections matter path provide double checked correct app fails build due able find file assuming added folder folder results following path import file following code always fails due able find file error happens pointing folder well done need scope components reuse", "num": "8010", "d": "4/2018"}, {"title": "using vifvelse two vmodeled select elements mixing value value option sets produces incorrect option values", "body": "version reproduction link steps reproduce click button twice expected first element show left value selected also current value remain actually happening first element shows selected item value changed empty value one looks values set selecting new value two three option values incorrectly taken select bug seems happen one sets values using attribute another select sets values using value binding also happens elements set", "num": "8009", "d": "4/2018"}, {"title": "page showing ipad specifically", "body": "version reproduction link steps reproduce open link ipad see show personname persontitle expected persons show like opened browser actually happening showing right content showing personname persontitle", "num": "8008", "d": "4/2018"}, {"title": "vuejs android keyboard last typed word missing model", "body": "version reproduction link steps reproduce tried android keyboard autosuggest enabled js event nt fired typing fired space blur click suggested word expected model inputvalue actually happening updated workaround", "num": "8007", "d": "4/2018"}, {"title": "transition filckering", "body": "version reproduction link steps reproduce create transition effect page expected fluid transition without flickering actually happening transition step original dom element removed replacement injected filler space occuped orignal become empty generate flickering every dom element next original fill empty space moment replacement injected next dom element pushed original place", "num": "8005", "d": "4/2018"}, {"title": "sync nt work kebab case update events", "body": "version reproduction link steps reproduce run attached fiddle click change bar button expected prop root component updated via sync actually happening prop nt get updated currently migrating vue vue need stick using kebab case naming component event names sync seems useful less boilerplate think work casing camelkebab also found following docs sync modifier instead recommend emitting events pattern update mypropname kebab case nt work sync", "num": "8004", "d": "4/2018"}, {"title": "touchstart event executed twice use breakpoint debugger chrome devlop", "body": "version reproduction link steps reproduce open chrome develop useing mobile mode click touchstart notice console expected touchstart printed whether useing breakpoint debugger actually happening use breakpoints debugg print touchstart twice program stop second log stop first time print use breakpoint debugging used", "num": "8001", "d": "4/2018"}, {"title": "touchstart event executed twice use breakpoint debugger chrome devlop", "body": "version reproduction link steps reproduce npm install npm run dev open chrome develop switch singer page click letter right side page notice console expected touchstart printed whether useing breakpoint debugger actually happening use breakpoints debugg print touchstart twice program stop second log stop first time print use breakpoint debugging used comes line code srcbasebaselistviewbaselistviewvue", "num": "7999", "d": "4/2018"}, {"title": "labeling root instance", "body": "problem feature solve app nt use vue base project backbone project backbone view create instances vue views inside handles lifecycle vue instance means lot instances makes debugging challenge want way make something like identify proposed api look like js new vue name rootbar label instancename etc", "num": "7998", "d": "4/2018"}, {"title": "vue trouble index event", "body": "trying display list images users change clicking uploading new image first image going default add image issues sending index event method display index photo html correct send index method parameter always words use index produces correct index use consolelog index produces looking advice thanks html index method previewimage function event index thistoggle false var input eventtarget inputfiles amp amp inputfiles var reader new filereader readeronload e gt consolelog index index thisimagedatapush etargetresult else thisimagedata index etargetresult readerreadasdataurl inputfiles", "num": "7997", "d": "4/2018"}, {"title": "access context", "body": "problem feature solve currently afaik way access context sfc templates using functional components proposed api look like nt good idea simplest one think guess would require internal redesign sort", "num": "7995", "d": "4/2018"}, {"title": "var decodingmap function decodeattr properly decode html entities template", "body": "version reproduction link steps reproduce template html attribute use html entity included decodingmap variable expected html entities present html template decoded properly vue prior set dom actually happening vue decoding entities specified var decodingmap ignoring others really includes full unicode charset var decodingmap decodes lt gt quot amp sometimes newline tab proper way decode attribute values html entity used attribute value", "num": "7994", "d": "4/2018"}, {"title": "code wrong nt browser display page cry help", "body": "version reproduction link steps reproduce goods comment merchants content import header componentsheaderheadervue export default components vheader header app tab display flex width height lineheight tabitem flex textalign center expected page shows goodscom merchants actually happening page shows goodscom merchants", "num": "7993", "d": "4/2018"}, {"title": "vif sets data using instead", "body": "version reproduction link steps reproduce open console click select dropdown expected block render actually happening see fire twice initial data expected reset data whatever started case aware using bad practice also think odd statement set data within template \u30c4", "num": "7992", "d": "4/2018"}, {"title": "methods cant access data using cdn", "body": "version reproduction link steps reproduce create simple html page import vue create vuejs file import html create span tag html add methodx vuejs file create message variable add text vuejs file create method named methodx using syntax example expected text message variable must shown actually happening method return undefined instead using thismessage use string shown use function notation shows variable", "num": "7991", "d": "4/2018"}, {"title": "values attributes replaced attribute name breaks mathml", "body": "version reproduction link steps reproduce open html browser internet connection required fetch libraries expected displayed actually happening open displayed comes line code list rewritten attributes general problem including block xml html", "num": "7990", "d": "4/2018"}, {"title": "compilation mustaches mustaches expression nt work", "body": "version reproduction link steps reproduce use string literal containing data binding expected actually happening expected result svelte svelte example", "num": "7989", "d": "4/2018"}, {"title": "class style attributes effect functional sfc components", "body": "version reproduction link steps reproduce clone repository open expected functional component painted greenred applying css class style actually happening css class applied mostly using added class components bemstyle annotations component time element point view container block personal point view thus allowing delegate certain properties container like positioning example like use principle functional components example option specify attribute works statefull components functional components fail pass properties rendering please note functional components declared example repository contain attributes root node described documentation", "num": "7985", "d": "4/2018"}, {"title": "add property render context functional component", "body": "problem feature solve custom properties options functional component ca nt accessed easily proposed api look like render function functional component options accessed like related issue", "num": "7984", "d": "4/2018"}, {"title": "create discordgitter chat bridge", "body": "used matterbridge great success someone fork run easily heroku gitter perk community activity visible one click signup uses identity providers github twitter someone feels like chatting one click def lowest barrier chat room bridge would still keep community toolset obviously ppl could upgrade discord come across needs value adds presumably exist tada", "num": "7983", "d": "4/2018"}, {"title": "compilation mustaches mustaches expression nt work", "body": "version reproduction link steps reproduce use data binding expected actually happening", "num": "7982", "d": "4/2018"}, {"title": "ordinary form post method working laravel vuejs last version", "body": "hello simple raw codes vue instance testing looking browser like token value true sending post data action url refreshing page im writing wrong data token sending post method form idea fix problem interesting really ordinary easy web form thank much", "num": "7978", "d": "4/2018"}, {"title": "content contenteditable dobeling without variable change", "body": "vuejs hello really weird bug contenteditable copy variable write gt change disfucus gt change variable stay error occurs content editable changed name function updatehtml interact site effekt invested hours track wieder behavior nt found similar problems net hopefully help pcpath updatehtml function e var foo etargetgetattribute name complete code backend code module chrome performance profile pictures weird stuff wierdbugzip", "num": "7977", "d": "4/2018"}, {"title": "memory node count increase showing hiding vif", "body": "version reproduction link steps reproduce link codepen simple vue app simply contains button showshides basic component based boolean data property open chrome dev tools go performance tab tick memory checkbox click record toggle button number times stop recording expected would expect nodes count rise component shown fall hidden potentially rise first time shown stay actually happening nodes listeners js heap counts rise time component shown nt go perhaps nt expect browsers clear nodesheap objectslisteners straight away prevent much gc churn production app form gets shownhidden like seems increase node count little every time opened nt yet seen go hopefully misinterpreting looking case would glad reassurance", "num": "7976", "d": "4/2018"}, {"title": "prop component conditionally rendered slot stops reactive", "body": "version reproduction link steps reproduce clicking update message button adds dots message alter button clicked message longer updated expected updating message continues working even slot altered actually happening prop value stops reactive without error warning behavior takes place including version lower works expected unit test found github understanding edge case refactoring structure avoid placing identical slot conditional positions resolves problem however behavior occurring older versions suddenly changed without error warning considering bug reporting let know", "num": "7975", "d": "4/2018"}, {"title": "compilation fails empty values vbind", "body": "version reproduction link steps reproduce referencing closed issue feel like something done issue left white pages along way without clear error message pass null value prop entire compilation breaks evaluated html simply dumped console really better way handle obviously user could check values actually showing component large application piece data sometimes null either accident oversight nothing done could someone least please explain happens eyes component getting prop justify entire compilation failing expected application fail compilation actually happening fails compilation", "num": "7973", "d": "4/2018"}, {"title": "event modifiers support async", "body": "problem feature solve issue want discuss think said right logic implement different componenthowever parent component need consider details child component think create componenti would like encapsulate logic related component inside componentbecause logic belong componentnext time use component new component need think logic new component besides applications require asynchronous requestsgetting status parent component commonso time use ugly way make work component export default name componenta methods ajax return component b loading componentb export default name componentb props loading go methods emit thisloading true thisgo gt thisloading false think nt good way efficient found way custom event modifiers want write demo show efficient proposed api look like add async modifier component export default name componenta methods ajax return loading componentb export default name componentb props loading methods emit thisloading true emit go gt thisloading false", "num": "7972", "d": "4/2018"}, {"title": "event modifiers support async", "body": "problem feature solve issue want discuss think said right logic implement different componenthowever parent component need consider details child component think create componenti would like encapsulate logic related component inside componentbecause logic belong componentnext time use component new component need think logic new component besides applications require asynchronous requestsgetting status parent component commonso time use ugly way make work component export default name componenta methods ajax return component b loading componentb export default name componentb props loading go methods emit thisloading true thisgo gt thisloading false think nt good way efficient found way custom event modifiers want write demo show efficient proposed api look like think maybe vue modifiers like async supportit write like component export default name componenta methods ajax return loading componentb export default name componentb props loading methods emit thisloading true emit go gt thisloading false", "num": "7971", "d": "4/2018"}, {"title": "codebased html entity improperly reescaped vue html attribute", "body": "version reproduction link steps reproduce use unicodebased html entities html attribute eg title template vue expected ampersand character leading character entity reescaped inserted dom actually happening leading ampersand character codebased html entity reescaped put dom issue reported got closed", "num": "7970", "d": "4/2018"}, {"title": "html entity template gets reescaped incorrectly vuejs", "body": "version reproduction link steps reproduce html template provide html title attribute contains html entity using ascii codes expected vue mess reescapeentify literal ampersand character html template actually happening vue sees ampersand character html attribute changes html amp entity resulting rendered ampersand character trying put newline character title attribute within template file seems like vue recognized entities named ones perhaps leaves alone entities using ascii codes get corrupted entities using ascii codes seem behave fine placed content inside tag placed html attribute", "num": "7969", "d": "4/2018"}, {"title": "register service worker correct mimetype", "body": "problem feature solve trying register service able send push notifications using firebase cloud messaging put file called firebasemessagingswjs static folder access file browser firebase needs mimetype applicationjavascript texthtml change proposed api look like", "num": "7968", "d": "4/2018"}, {"title": "uncaught promise syntaxerror unexpected end input eval", "body": "version reproduction link steps reproduce using fetch post get data expected get json fetch actually happening", "num": "7967", "d": "4/2018"}, {"title": "better lifecycle events", "body": "problem feature solve hello came little specific think useful ideas vue undocumented lifecycle events nested highordered components custom input\u043f search component custom input wanted add autofocus search input solution nice problems also adds event causes mounted events call demo would better component instance passed event proposed api look like add flag another name lifecycle events compare component instances like compares targets native events add component instance events allow us use use cases like one", "num": "7966", "d": "4/2018"}, {"title": "bubble event modifier pass along events especially args", "body": "problem feature solve bubbling event deep child really cumbersome without event bus emit event every parent tree reaches target event modifier like would really nice proposed api look like instead repeating vue even", "num": "7965", "d": "4/2018"}, {"title": "transition overflowed elements prevents scroll", "body": "version reproduction link steps reproduce click button open menu element transitioning begin scroll try move mouse scrolling expected scrollable area continues scroll actually happening scrolling area get stuck scrolling event still fired actually scrolling content move mouse start scroll works expected wait transition finish scrolling bug present report component scrolling confirmed happening chrome extends back even framework vuetify created attached codepen determine framework specific generally reproducible may css properties trigger issue success opacity happens specifically declaration remove entry animation occur removed entry animation", "num": "7964", "d": "4/2018"}, {"title": "input file change events fired microsoft edge", "body": "version reproduction link steps reproduce outlined jsfiddle expected change event fired file selected edge browser actually happening change event fired input triggered within vue might bug edge behave correctly outside vue leads believe issue two somewhere", "num": "7963", "d": "4/2018"}, {"title": "develop multi page app vuejs", "body": "develop multi page app vuejs go nuxtjs multi page app ssr mandatory develop multi page app someone shed light question", "num": "7962", "d": "4/2018"}, {"title": "page two new vue first vhtml appear hidden immediately", "body": "page two new vue first vhtml appear hidden immediately", "num": "7961", "d": "4/2018"}, {"title": "array changes always trigger computed property updates", "body": "version reproduction link steps reproduce create computed property maps array values vuex store expected computed property update dependent array changed actually happening computed property updates first time dependent array changed later changes array trigger update worked expected seems broken know beta changelog mentions known breaking changes could culprit", "num": "7960", "d": "4/2018"}, {"title": "nt create refs link without modifier", "body": "version reproduction link steps reproduce add modifier prevent stop etc error gone expected need work without modifiers actually happening javascript error occurs", "num": "7959", "d": "4/2018"}, {"title": "regression slots functional components", "body": "version reproduction link steps reproduce create nested set functional components change slot definition child component slots correctly rendered happening slot names persisted correctly passed chain common pattern creating reusable ahoc components dropdown predefined content using lower level component structural component version version expected slots render correct position actually happening slots correctly assigned correct possition introduced ticket", "num": "7958", "d": "4/2018"}, {"title": "slotscope destructuring alias seem work", "body": "version reproduction link steps reproduce tried vbind slot object consuming slot used slotscope deconstructed aliased variable says typeerror read property title undefined expected deconstruct object correctly okay without alias actually happening alias seems working returning undefined value", "num": "7956", "d": "4/2018"}, {"title": "get list mixins component", "body": "problem feature solve way get component mixins list example would useful collect merge default options mixin every mixin must extend functionality options realize functionality dependence existing mixins proposed api look like vuemixin", "num": "7955", "d": "4/2018"}, {"title": "support exporting function functional component", "body": "problem feature solve read support hoc component composition proposed api look like instead exporting object like could also export directly render function since component function compose much easier", "num": "7954", "d": "4/2018"}, {"title": "dynamically created input associated", "body": "version reproduction link steps reproduce create radio click add click third radio changed third fourth radio want change third expected click third change third click fourth change fourth actually happening click third changed third foutth first second working well new radio created add work bad", "num": "7952", "d": "4/2018"}, {"title": "ios wechat web page video click play", "body": "version link minimal reproduction steps reproduce system real machine open web link wechat click video play button problem code expected system normal video playback actually happening system click video loaded play ios versions android click video wechat play normally additional comments optional previously upgrading encountered problem execution timing nexttick downgraded using settimeout function delay time settimeout function repair wechat web pages play problem suspected timing issue vue settimeout function ios systems", "num": "7951", "d": "4/2018"}, {"title": "vbind obj seems create new object rather passing reference", "body": "version reproduction link steps reproduce create singlefile component slot vbind object attribute consume component via another template set slotscope attribute within rendering call getter function object return undefined function exist expected template code consumes slot use slotscope attribute get plain object however need class structure invoke functions access getters etc actually happening ca nt access class structure object bind getting new object instance rather reference related lets slot bind object thing would like invoke functions object class passed current situation doable creating new object instance instead referencing object bind slot", "num": "7947", "d": "4/2018"}, {"title": "error using vfor", "body": "version reproduction link steps reproduce running code result following error html page title value var apptest new vue el apptest data l error message invalid expression syntax error raw expression vfor value l invalid vfor alias expression vfor value l expected generated actually happening generated error persuaded senior long time introduce vuejs problem solved plan reorganize site vuejs please solve problem", "num": "7946", "d": "4/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u5199\u7684\u4e00\u4e2a\u7ec4\u4ef6 \u4e24\u4e2ai\u6807\u7b7e\u4e00\u4e2a\u662f\u52a8\u6001\u751f\u6210\u7684\u4e00\u4e2a \u76f4\u63a5\u5199\u7684dom \u52a8\u6001\u6e32\u67d3\u7684css\u6700\u540e\u6ca1\u751f\u6548 \u6253\u5305\u51fa\u73b0\u95ee\u9898 expected \u4e24\u4e2a\u6807\u7b7e\u7684css\u540c\u65f6\u751f\u6548 actually happening \u53ea\u6709\u4e00\u4e2a\u751f\u6548 \u6211\u6709\u4e24\u4e2ai\u6807\u7b7e \u5e76\u4e14 \u4e0d\u540c\u7684\u662f \u4e00\u4e2a\u662f\u7528js vhtml\u52a8\u6001\u6e32\u67d3\u7684 \u4e00\u4e2a\u662f\u5199\u7684dom \u52a8\u6001\u751f\u6210\u7684 \u6211\u6700\u540e\u628a\u8fd9\u4e2a\u653e\u5728commoncss\u89e3\u51b3\u7684", "num": "7945", "d": "4/2018"}, {"title": "use instance instead new object call class methods", "body": "", "num": "7944", "d": "4/2018"}, {"title": "provide way define different name prop attribute", "body": "problem feature solve cases really comfortable use prop name example inside component takes passed prop transforms code looks bloated reminds workaround good solution ability change attribute name prop would great something like proposed api look like thus using proposed solutions inside component would return transformed value example believe feature would awesome help us write cleaner code", "num": "7943", "d": "4/2018"}, {"title": "\u0628\u06cc\u0645\u0647", "body": "", "num": "7942", "d": "4/2018"}, {"body": "setting new array like fine think actually docs closing question know rules", "d": "4/2018"}, {"body": "totally fine absolutely sure mentioned docs", "d": "4/2018"}, {"body": "quite interesting problem nt notice translation bug report vue included webpage backforward cache longer works ios safari means navigating back url event prop always equals scroll position get preserved investigation found caused line instance created vue initialization process prevents safari caching page understand correctly uses microtask default used deferring dom event callbacks maybe consider alternative", "d": "4/2018"}, {"body": "long delay quite indeterministic likely revert always using microtasks using fixed edge cases caused problems end", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "pretty sure missed async components work vue", "d": "4/2018"}, {"body": "looking array perfectly create function loads array components names decided runtime using webpack probably others vue handle promises return component descriptors per prefer factory api feel free create plugin leverages vue async api release plugin closing question btw use official forum discord server questions", "d": "4/2018"}, {"body": "thank attention time excellent work however question sincerely understand frame want use webpack already custom workflow much light easier debug fundamental issue posting feature request current async component api demands component name list want component name list absolutely need function vue receives name components needed runtime dinamically load component name rules please see file current approach", "d": "4/2018"}, {"body": "sorry important question even necessary nt explain simply said absolutely necessary obviously necessary others first time get anyone asking anything like unless strong reason could potentially useful others well nt see convincing reason consider", "d": "4/2018"}, {"body": "misnamed getter please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "4/2018"}, {"body": "posva thanks reply made many changes debug missed typo anycase changed yet options still rendering please reopen", "d": "4/2018"}, {"body": "sorry besides repro contain full server create simple codesandbox maybe fetch data server extra setup needed take quick look", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "issue automatically closed", "d": "4/2018"}, {"body": "property name used component template issue closed nt meet requirements new issues please use issue helper create new issue", "d": "4/2018"}, {"body": "please read bot message explains exactly closed issue", "d": "4/2018"}, {"body": "expected getusers keeps original value return function replaces db users array", "d": "4/2018"}, {"body": "woops figured wrong exactly thanks answer future reference interested gon na explain little problem misconception regarding arguments passed functions js forgot mutable objects arrays plain objects opposed primitives passed reference callbyreference copy referenced object callbysharing meaning mutate referenced object reassign local scope original object wo nt updated bad", "d": "4/2018"}, {"body": "works using instead though", "d": "4/2018"}, {"body": "tested captured allocation timeline dom nodes retained pressing go back means correctly gced pressing collect garbage wo nt effect something already gced", "d": "4/2018"}, {"body": "oh sorry blindly trusted performance monitor tab added click dummy component dom nodes js event listeners successfuly gced visible taking snapshot memory", "d": "4/2018"}, {"body": "hmm reproduce issue opened page pressed add button couple times sure nt pages renderer process", "d": "4/2018"}, {"body": "use something like getclass return staticclass whatever want return", "d": "4/2018"}, {"body": "armandomendivil feature request data objects specifically often used functional components question issue", "d": "4/2018"}, {"body": "functional component nt need merge outer classes", "d": "4/2018"}, {"body": "guess assumed option accept objects actually accepts string literals need proposed alias", "d": "4/2018"}, {"body": "guess assumed option accept objects actually accepts string literals think assumption fault nt make clear current docs fixing also honestly forgot accepts interface class binding including arrays well", "d": "4/2018"}, {"body": "chrisvfritz fault know vue demonstrating old story happened documentation happen others fnlctrl object string array know works thing different case result lot vue plugins libraries use little frustrating documented alias would great way make accessible seems obvious doc", "d": "4/2018"}, {"body": "staticclass different class little frustrating documented nt understand undocumented behaving different could reason include another alias intentionally left undocumented reduce api surface avoid questions people may though fact stable enough use production would never removed vue enforces strict compatibility different versions runtimecompiled code seen libs use want use cool intended part public api would remain undocumented", "d": "4/2018"}, {"body": "maybe warning would better nothing alias chrisvfritz idea better nothing intentionally left undocumented reduce api surface hurting helps", "d": "4/2018"}, {"body": "templates makes possible use counter intuitive nt work could left undocumented least work", "d": "4/2018"}, {"body": "made work introduce complexities work arrayobjects like merged take precedence override nt see value adding another way exactly thing potentially lead confusions already good enough solve original use case already one single way bind classes throughout documentation see need introducing another alias breaks consistency", "d": "4/2018"}, {"body": "could work element already within templates another alias breaks consistency consistency already broken since nt included normal html attributes", "d": "4/2018"}, {"body": "could work class static element already within templates made work string literals make note documentation nt work arrayobjects merges normal instead overriding people would recall look docs touching code uses imo unnecessary mental burden consistency already broken since class nt included normal html attributes meant using exact one way achieve exact one goal documentation beginning stated clearly vue use field manipulate classes technically special html attribute native dom api use manipulate classes styles unlike attrs use nt see sane tutorial would tell people manipulate classesstyles something potentially confusing probably better introduce first place", "d": "4/2018"}, {"body": "lot vue plugin libraries use little frustrating documented emileber understand frustration tricky situation still think end result documenting would confusion people misuse nt fully understand subtle behavior attrs alias would great way make accessible seems obvious doc fnlctrl still agree would useful html attributes intuitive users allowed thinking though emileber think nt easily feasible way handle internally may something fix without breaking changes give little background find way currently treat problematic html attributes nt ca nt included nt included nt respect long story short agree obviously great work inside may something wait vue general overhaul", "d": "4/2018"}, {"body": "understand discussion documented issues better nothing thanks guys", "d": "4/2018"}, {"body": "pretty sure feature request already could nt find since api freeze nt think add nt feel readable explicit vifvelse inconveniences switch statement one code smell adding many ifelse harder adding many switch cases instead could probably refactor code multiple functions templates time nt many vifvelse sometimes easier write render function", "d": "4/2018"}, {"body": "agree lot logic inlined templates like generally code smell awkward test maybe computed property method used instead said feature would probably difficult implement brief look around nt see anything npm looking small side project interest iwe could work", "d": "4/2018"}, {"body": "really nt much free time skills nt think interested see done lol think would valuable lot people", "d": "4/2018"}, {"body": "benefits quite debatable add things mainjs file case something implemented loader plugin feel free create feel useful people", "d": "4/2018"}, {"body": "debatable debate thanks", "d": "4/2018"}, {"body": "said something implemented loader plugin added vue core also prefer keeping things explicit vue please next time keep negativity away opening commenting appreciated", "d": "4/2018"}, {"body": "selenium devdependency version affect", "d": "4/2018"}, {"body": "party plugin issue even related vue reported vuerouter repo route object immutable mapping current url design never attempt mutate route object instead trigger navigation", "d": "4/2018"}, {"body": "feature javascript related vue variables reference object look deep clone solve problem", "d": "4/2018"}, {"body": "setting method pandemm said references javascript", "d": "4/2018"}, {"body": "regex second rule starts comment first rule reason issue comment breaks attribute style properties comment ignored coming effect true breaks second property properties preserved working improving update pr ready", "d": "4/2018"}, {"body": "honestly though ca nt think good reason use support need comments inline styles probably use object computed property adding extra logic handle incurring perfcode sizemaintenance cost", "d": "4/2018"}, {"body": "maybe case use developmentscaffolding temporarily disable properties technique chrome uses unchecking single property web tools opinion vue strive far possible change behavior templates understand nt prioritize", "d": "4/2018"}, {"body": "existing regex changed top head leave posva take call whether would like pr imo would like vue allow", "d": "4/2018"}, {"body": "blur event triggered input removed condition becomes false normal browser behaviour vue nothing", "d": "4/2018"}, {"body": "unfortunately html limitation tag names converted lower case limited using vue files please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "4/2018"}, {"body": "using work fine said cases trying control behaviour precisely harder creating necessary methods restore state need", "d": "4/2018"}, {"body": "posva actually written earlier use case big template inside using named use would mean maintain two templates exactly except keep alive wrapper hence looking boolean turn functionality onoff something like following would much better", "d": "4/2018"}, {"body": "see concern one cases wher jsx easier templates nt need write chunk code twice since using exact component thought using hooks related", "d": "4/2018"}, {"body": "sure easytough would add jsx typescript vueclasscomponents easy would translate code jsx event hinting manually destroy component true think would code smell case actually code interface developers open component dialog extra options like following ts import tiles componentstilesvue import ceiling componentsceilingvue import sdialog servicessdialog imports component export default class settings extends vue someopendialogmethod sdialogopen component tiles keepalive true options like anotheropendialogmethod sdialogopen component ceiling keepalive false may boolean dynamic options like", "d": "4/2018"}, {"body": "small generic functional component easily achieve conditional wrapper element javascript conditionalwrapperjs export default functional true props tag type string default div show boolean render h ctx return thisshow h ctxpropstag ctxdata ctxchildren thisslots default html headerpropstitle fullscreenexit fullscreen dialogoptionsfullscreen fullscreen fullscreen close close", "d": "4/2018"}, {"body": "linusborg thanks man cool solution", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "expected nonprops bound attributes actually feature scenario use computed property return object adapted component solve problem", "d": "4/2018"}, {"body": "afraid answer completely clear ca nt omit property custom component passed component used within look mycell component implementation maybe nt understand idea correctly", "d": "4/2018"}, {"body": "ah ok forget computed property thing need prevent attribute added root element component nt declared prop either declare prop yeah sounds dumb use functional component props option everything prop easily set false nt automatically set nonexistent props attributes hope helps", "d": "4/2018"}, {"body": "nt understand issue vue able mobx use vue hidden ui control subcomponents think work like description", "d": "4/2018"}, {"body": "yeah testing evaluating bunch different frameworks store combinations clear someone would really even need mobx vue since could set store vue instance dataprop would become reactive existence vuemobx repo made bit confusing closing however one thing note maybe eventually providing demo vue vs react mobx would help clarify far scope vue really", "d": "4/2018"}, {"body": "use vue nonui instance actually whole idea behind global bus pattern antipattern way vuex store actually wrapped vue instance see details wrapper providing extra features", "d": "4/2018"}, {"body": "nt post vuerouter repository", "d": "4/2018"}, {"body": "please nt create duplicate issues leave open", "d": "4/2018"}, {"body": "use templates nt refer vue instance", "d": "4/2018"}, {"body": "posva get correct initial value", "d": "4/2018"}, {"body": "sure nt use templates access data", "d": "4/2018"}, {"body": "change compiled template depending function scope", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "reproduction link defined components component", "d": "4/2018"}, {"body": "badnow corrected mistake changed repo link problem still remains", "d": "4/2018"}, {"body": "always better use computed property watcher see api docs", "d": "4/2018"}, {"body": "thank reply nt perform domdependent operations updated hook calledand according vue lifecycle one component destroyed updated hook nt calledbut repo condition happensi ca nt figure happens", "d": "4/2018"}, {"body": "please provide valid repro", "d": "4/2018"}, {"body": "use parent", "d": "4/2018"}, {"body": "thanks somewhere docs use case mean would really helpful others", "d": "4/2018"}, {"body": "fact yes would helpful docs nt know nt open pr docs", "d": "4/2018"}, {"body": "darkylmnx sorry poor documentation add later", "d": "4/2018"}, {"body": "kazupon prob thanks", "d": "4/2018"}, {"body": "sure open another issue asking since functional components instance possibile use local components absolutely defined components globally nt said docs either update seems discussed", "d": "4/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow nt manually remove vue relies element normal removed", "d": "4/2018"}, {"body": "works setting element therefore work nt produce element", "d": "4/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow need correctly pass slots", "d": "4/2018"}, {"body": "oops thanks listview global nt want set name listview need set name uservue", "d": "4/2018"}, {"body": "expected please see", "d": "4/2018"}, {"body": "thanks properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty", "d": "4/2018"}, {"body": "actually use want dynamic elementcomponent template render functions allow dynamically build dom tree end different trees", "d": "4/2018"}, {"body": "oh idea accepts actual components plain element tags thanks feature nt seem documented least clearly room improvement believe working fiddle demo case anyone else stumbles question", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "still much please take time boil strict minimum electron extra file download leak best simple html file think use forum discord server stackoverflow first could find answer", "d": "4/2018"}, {"body": "already people discord look issue seemed quite competent nobody see issue code small case already leading actually interested looking problem happier close issues resolve sat apr eduardo san martin morote lt notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread", "d": "4/2018"}, {"body": "nt interested looking problem would nt asked smaller repro asked smaller repros repros way smaller repro contains electron components router store one module top ask us download extra file huge even leakspeed issue looking someone else fix problem free people want help open source project spend time boil issue see difference clearly every week top attitude clearly showing willing help personally attacking something tolerate", "d": "4/2018"}, {"body": "please also remember current version using beta clearly explained release notes could cause issues supply performance profile information much simplier situation reproduce could dealt likely even vue issue forsee going garbage collection issue update cycle blocked gc", "d": "4/2018"}, {"body": "please provide repro using jsfiddle github repository make sure provide boiled reproduction download file like security reasons closing valid repro provided", "d": "4/2018"}, {"body": "okay boiled reproduction github repository requested", "d": "4/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "4/2018"}, {"body": "duplicated", "d": "4/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "thinking today think makes sense make consistent always return array", "d": "4/2018"}, {"body": "cool would great possible without breaking existing code way think allow return either single node array contains single node would still work feasible sound like horrible idea something simple seems work testing diff else vnode vmvnode arrayisarray vnode amp amp vnodelength vnode vnode return empty vnode case render function errored vnode instanceof vnode processenvnodeenv production amp amp arrayisarray vnode warn multiple root nodes returned render function render function return single root node", "d": "4/2018"}, {"body": "please make sure nt come first come back vueonly repro also impossible us look amount code please boil strict minimum", "d": "4/2018"}, {"body": "indeed sorry false alarm", "d": "4/2018"}, {"body": "mixin nt bring style actually meant pure js objects vue components template meant mix logic want share style components much easier natural create separate file import one said something would need fixed vueloader injected mixins meant used", "d": "4/2018"}, {"body": "posva thanks reply think right mixin pure objects logic try use instead still get error", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "programmatically invoke event scenario event dispatching possible bubbling happen synchronously think current nexttick implementation right", "d": "4/2018"}, {"body": "jake archibald loop jsconfasia", "d": "4/2018"}, {"body": "yaodingyd sodatea see thank guys", "d": "4/2018"}, {"body": "purposely removed coerce achieved computed property sanitizer thing actually created plugin may find fr help", "d": "4/2018"}, {"body": "leveraged behaviour small package case interested", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "html limitation always use kebabcase attribute names make sure code works dom templates vue sfc", "d": "4/2018"}, {"body": "looks like bug chrome", "d": "4/2018"}, {"body": "hauntedsmores could report chromium", "d": "4/2018"}, {"body": "javoski posva thanks guys ill put chrome bug", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "works fine fiddle posted revisit add correct steps reproduce fix repro thanks", "d": "4/2018"}, {"body": "working fine template tag missing source need template tag remain source code use jquery later laraveladmin works", "d": "4/2018"}, {"body": "even put template tag inside div vpre tag rendered missing", "d": "4/2018"}, {"body": "ah nt get said first place sure good idea template special meaning html moment use completely escape html indeed leave compilation phase", "d": "4/2018"}, {"body": "hi use giving template tag one outside vuejs exactly problem using vhtml works complicate works would nice easier vpre works template tag thanks", "d": "4/2018"}, {"body": "familiar laraveladmin solve problem", "d": "4/2018"}, {"body": "maybe work template tag inside blade file put script inside root vue element get another warning think moment vhtml best way thanks", "d": "4/2018"}, {"body": "please follow issue reporting guidelines ask questions forum discord server gitter stackoverflow", "d": "4/2018"}, {"body": "gentle ping thanks", "d": "4/2018"}, {"body": "think need change vue core doable vueloader plus necessary vue plugins btw editor looks pretty cool", "d": "4/2018"}, {"body": "definitely understand fact something anyone would want course need core primary concern get vue squad board maybe get help guys implementing changes also trying reach react angular teams parallel speak familiar vue codebase time one trying tie loose ends together help would appreciated", "d": "4/2018"}, {"body": "add source info start amp end index add template compiler module pr get merged", "d": "4/2018"}, {"body": "gzzhanghao looks great thanks feature separate pr instead making big pr even bigger", "d": "4/2018"}, {"body": "note use von onclick vue detect later workaround adding one elements", "d": "4/2018"}, {"body": "noted onclick attribute test issue use case link von clickonce supposed call server one supposed redirect another page js involved issue click link redirect actually call server thanks help works adding key attribute", "d": "4/2018"}, {"body": "want prevent default action event please use modifier", "d": "4/2018"}, {"body": "seems properly destroyed", "d": "4/2018"}, {"body": "\u4e0e\u5176\u6bcf\u6b21\u4fee\u6539\u5b8c\u90fd\u8981\u8bb0\u5f97 \u4e0d\u5141\u8bb8\u76f4\u63a5\u7528\u7d22\u5f15\u64cd\u4f5c\u6570\u7ec4 \u6bcf\u6b21\u64cd\u4f5c\u5b8c\u4e0d\u8981\u5fd8\u8bb0 \u5c31\u4f1a\u9020\u6210\u5927\u91cf\u7684\u4f7f\u7528 set \u6216\u662f\u6570\u7ec4\u4e0b\u53d8\u5f02\u7684\u65b9\u6cd5", "d": "4/2018"}, {"body": "\u548c class gt \u800c\u4e14\u5982\u679c\u7528 set set \u8fd8\u6709\u5c31\u662f\u65b9\u6cd5\u7684\u8c03\u7528\u60c5\u51b5 \u4f46\u662f\u5982\u679c\u662f\u7528 apply apply", "d": "4/2018"}, {"body": "\u89c6\u56fe\u66f4\u65b0\u662f\u5f02\u6b65\u7684 \u591a\u6b21\u8c03\u7528 set", "d": "4/2018"}, {"body": "set \u4f1a\u8c03\u7528\u591a\u6b21 dep notify \u800c\u4e14\u4e0d\u662f\u8ba8\u8bba set apply", "d": "4/2018"}, {"body": "vue notify", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "\u73b0\u9636\u6bb5 vue \u7684\u4e00\u4e2a\u539f\u5219\u662f\u9664\u975e\u6709\u91cd\u5927\u610f\u4e49\u5426\u5219\u4e0d\u6dfb\u52a0\u65b0\u7684", "d": "4/2018"}, {"body": "\u55ef \u53ea\u662f\u4e2a\u5efa\u8bae", "d": "4/2018"}, {"body": "since api freeze already feasible pretty much extra code still edge case probably happen move inside handler create watcher hook sure one enough nt know code", "d": "4/2018"}, {"body": "luoxlgh also write wrapper function", "d": "4/2018"}, {"body": "posva thanks luoxlgh team want call watch handler first time second advice hook helps us solve problem better calling watch handler nexttick time maybe learn lifecycle hooks called", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "repro nt run ie function shorthand objects fixed runs properly ie", "d": "4/2018"}, {"body": "confirm whitespace options return whereas works fine chrome instance littlegrayss asked considered bug handled vue thank", "d": "4/2018"}, {"body": "white space tag removed used option value would return undefined ca nt say desirable vue enforce trimming white space tag better include first place", "d": "4/2018"}, {"body": "using inbrowser templates selfclosing tags working expected anything containing map nt working things passed vue expect element indeed warn existing element warning button changing title issue reflect", "d": "4/2018"}, {"body": "ah forgot valid html element even nt use selfclosing tags component named nt work", "d": "4/2018"}, {"body": "work need use beacuse browser use uppercase element names", "d": "4/2018"}, {"body": "hmm ok well seems uppercase works first character foobar gt works foobar gt nt work", "d": "4/2018"}, {"body": "checkout style guide section docs help", "d": "4/2018"}, {"body": "ok thanks case warnings would useful wasted quite hours trying figure wrong", "d": "4/2018"}, {"body": "posva comparison reserved vue html tags vs specs already vue html mdn whatwg abbr abbr abbr acronym address address address applet area area area article article article aside aside aside audio audio audio b b b base base base basefont bdi bdi bdi bdo bdo bdo bgsound big blink blockquote blockquote blockquote body body body br br br button button button canvas canvas canvas caption caption caption center cite cite cite code code code col col col colgroup colgroup colgroup command content content data data data datalist datalist datalist dd dd dd del del del details details details dfn dfn dfn dialog dialog dialog dir div div div dl dl dl dt dt dt element element em em em embed embed embed fieldset fieldset fieldset figcaption figcaption figcaption figure figure figure font footer footer footer form form form frame frameset head head head header header header hgroup hgroup hgroup hr hr hr html html html iframe iframe iframe image img img img input input input ins ins ins isindex kbd kbd kbd keygen label label label legend legend legend li li li link link link listing main main main map map map mark mark mark marquee menu menu menu menuitem menuitem meta meta meta meter meter meter multicol nav nav nav nextid nobr noembed noframes noscript noscript noscript object object object ol ol ol optgroup optgroup optgroup option option option output output output p p p param param param picture picture picture plaintext pre pre pre progress progress progress q q q rp rp rp rt rt rt rtc rtc ruby ruby ruby samp samp samp script script script section section section select select select shadow shadow slot slot small small small source source source spacer span span span strike strong strong strong style style style sub sub sub summary summary summary sup sup sup table table table tbody tbody tbody td td td template template template textarea textarea textarea tfoot tfoot tfoot th th th thead thead thead time time time title title title tr tr tr track track track tt u u u ul ul ul var var var video video video wbr wbr wbr xmp edited posva collapsed table took much space", "d": "4/2018"}, {"body": "warnings work components registered globally eg imported registered locally warnings triggered eg html import map jscomponentsmap export default components map", "d": "4/2018"}, {"body": "case warnings would useful wasted quite hours trying figure wrong pqvst use indom template vue warn use something like parsed browser first vue got element tagname", "d": "4/2018"}, {"body": "thinking working upload pr", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "children", "d": "4/2018"}, {"body": "vonce vfor iteration rendered ex children originally child added later child rendered scenario key provided vfor idea patch element inplace ex item example existing children rerendered hence binding persists jsfiddle example comp behaving expected vfor vonce placed vfor child text change jsfiddle example component behaving expected vfor vonce placed vfor child yay yay text change hell naw bug given expected behavior vfor still bound data render children array count changes child render scenario vonce behavior required children parent short behavior currently consistent except component element js line working fine line", "d": "4/2018"}, {"body": "may chromium bug preact similar issue", "d": "4/2018"}, {"body": "works fine end closing looks similar yaodingyd shared", "d": "4/2018"}, {"body": "get following errors try jsfiddle would nice would fix", "d": "4/2018"}, {"body": "also line refers current current vue instance instead write", "d": "4/2018"}, {"body": "timotheejeannin said need use arrow function valid", "d": "4/2018"}, {"body": "apologies timotheejeannin posva fairly new vuejs still learning curve problem actually arrow function actually directive rendering data function utilising module make http request curious know works local production environment something wrong would love insights", "d": "4/2018"}, {"body": "warning dev mode would fine", "d": "4/2018"}, {"body": "set element prop attribute attribute taken account upon page loading setting attribute would worthless", "d": "4/2018"}, {"body": "humbly ask reconsider issue correct taken account upon page load using prerendering serverside rendering property present upon page load also using standard clientside rendering implementation call template render browser honor property regardless thank hard work excellent product", "d": "4/2018"}, {"body": "indeed useful ssr nt checked added yet", "d": "4/2018"}, {"body": "see", "d": "4/2018"}, {"body": "working update created pr", "d": "4/2018"}, {"body": "nt bug using index key", "d": "4/2018"}, {"body": "kaelwd hahaha hours life lost trifle thanks", "d": "4/2018"}, {"body": "technical restriction due javascript", "d": "4/2018"}, {"body": "posva tell exactly technical restriction", "d": "4/2018"}, {"body": "js objects references please ask questions forums discord server", "d": "4/2018"}, {"body": "ca nt copy data object hood benefits using function instead deep cloning objects copy data object hood causes heavy performance overhead bloated code deep clone implementation better use function create fresh object every time", "d": "4/2018"}, {"body": "posva thanks yes mean ca nt use clone data object", "d": "4/2018"}, {"body": "deep", "d": "4/2018"}, {"body": "probably reason vnode update mechanism since deleted element parentnode null could successfully insert made following changes code shows normally", "d": "4/2018"}, {"body": "generally bad idea remove elements directive vue also control specific example basically", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "adding select elements one fixes issue", "d": "4/2018"}, {"body": "use keys", "d": "4/2018"}, {"body": "see code wrong error console check make sure using nonminified version vue test please check opening issue open issue please boil make sure actually bug always ask questions often get faster answers forum discord server stackoverflow", "d": "4/2018"}, {"body": "problem coming keyboard emitting events although think intented imagine implement workaround vue core would terrible impact need still workaround bigger delay specific input", "d": "4/2018"}, {"body": "reproduce maybe happening specific browser case please specify issue closing details provided", "d": "4/2018"}, {"body": "os uname linux dontshootme smp wed mar utc gnulinux browser mozilla firefox bits also tested os android browser firefox mobile os android browser firefox mobile behaviour present", "d": "4/2018"}, {"body": "tested latest firefox everything worked fine", "d": "4/2018"}, {"body": "reproduce windows firefox happening chrome edit also works fine ie edge", "d": "4/2018"}, {"body": "yes test done latest firefox browser mozilla firefox bits click try mutliple click fiddle unstable sometimes behavior appears sometimes", "d": "4/2018"}, {"body": "oh yeah updated docs good chance make contribution", "d": "4/2018"}, {"body": "posva mean intentional probably leaving item open either sync supports kebab docs updated would nice", "d": "4/2018"}, {"body": "related vue happens without vue well probably chrome bug report", "d": "4/2018"}, {"body": "please reduce reproduction whole projects valid repros", "d": "4/2018"}, {"body": "feature request devtools core", "d": "4/2018"}, {"body": "logs also shows user instantiated views name like component", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "already access every property", "d": "4/2018"}, {"body": "yeah know access template talking", "d": "4/2018"}, {"body": "access context render function case write template", "d": "4/2018"}, {"body": "yeah knew well thinking might useful access context script tag example access vuex store using ssr anyway get closer coverage render function sfcs nt deem useful enough worth issue close conversation otherwise try pr get bit spare time", "d": "4/2018"}, {"body": "need full javascript access better use render function", "d": "4/2018"}, {"body": "see thank", "d": "4/2018"}, {"body": "wontfix reasoning necessary encode html entities inside attribute values decoding map html parser handling browsers autoencoding behavior example extract element browsers return instead decoding vue performs meant type edge cases simply put encoding anything inside attributes want vue handle case showed repro need convincing reason first place", "d": "4/2018"}, {"body": "use case include newline char aka code html entity inside html title attribute think legit reason use encoded char template", "d": "4/2018"}, {"body": "also template source come anywhere necessarily existing part dom extract outerhtml case pulling html standalone html template file seems intuitive valid html html file interpreted properly vue used template", "d": "4/2018"}, {"body": "thanks least understanding issue giving meaninful response posva grasping previous issues", "d": "4/2018"}, {"body": "similar usecase kidplug like newlines inside title attributes vue wo nt allow though could considered edgecase fairly common requirement", "d": "4/2018"}, {"body": "workaround", "d": "4/2018"}, {"body": "thank much arrived close using title data computed properties closer native shame ca nt intuitive approach perhaps directive passthrough vanilla html attributes", "d": "4/2018"}, {"body": "new vue el app template components app something changed version", "d": "4/2018"}, {"body": "tried fiddle could nt repro please next time provide actual repro fiddle similar edit actually using instead inside normal variable gets set exactly using", "d": "4/2018"}, {"body": "sorry referring", "d": "4/2018"}, {"body": "typo exactly try inside javascript linter able catch", "d": "4/2018"}, {"body": "arrow function work change context value use regular functions please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "4/2018"}, {"body": "please nt open duplicate issues obligation framework x support behavior framework", "d": "4/2018"}, {"body": "also use escape codes", "d": "4/2018"}, {"body": "posva thank disappointed", "d": "4/2018"}, {"body": "think tradeoff maintainability supporting mustaches inside mustaches would increase complexity code parser means possible bugs uncommon use plain strings mustaches inside mustaches easy workaround use variable computed property probably common use case js escape character using computed property make code maintainable situations faster", "d": "4/2018"}, {"body": "use", "d": "4/2018"}, {"body": "think following example workaround would work myulfuncjs import myulfunccss export default functional true render h context const data contextdata props contextprops tag ul name slide return h transitiongroup data contextchildren myulfunccss slidemove transition transform cubicbezier render everything need regardless think workaround exists still would great able sfc", "d": "4/2018"}, {"body": "would also work sfc ugly", "d": "4/2018"}, {"body": "hi thanks filling issue functional components nt share behavior automatically applying attributesclassesstyles stateful components documented normal components attributes defined props automatically added root element component replacing intelligently merging existing attributes name functional components however require explicitly define behavior skipping auto binding behavior would remove performance overhead always merging classesstylesattirbutes normal components functional components made fast design using last comment actually correct way workaround", "d": "4/2018"}, {"body": "ugly", "d": "4/2018"}, {"body": "btw nothing passing class style functional component even annoying work regular functional component written javascript depicted previous example ca nt least make functional components behave without additional plumbing", "d": "4/2018"}, {"body": "may possible future change behaviour flexibility past templates functional components nt possible made sense pass js also easier", "d": "4/2018"}, {"body": "thinking would possible use vue file render function one mentioned looking single file containing everything like sfc fail see point separate css file describe animation keyframes", "d": "4/2018"}, {"body": "think sfc seem powerful like much export default functional true render h data children gt children slidemove transition transform cubicbezier elegant", "d": "4/2018"}, {"body": "would also use feature pretty extensively writing powerful mixins work functional components becomes much difficult nt access options object rendering context", "d": "4/2018"}, {"body": "forgot ask could please share specific scenarios would useful also keep mind already possible putting object variable exporting", "d": "4/2018"}, {"body": "use case writing mixin handle reading checking type list custom property vue components checks attributes applies specific css attribute name matches given types specified vue instance type property works fine full nonfunctional components functional components ca nt access custom properties render function ca nt access type properties set nt exist object actually composing styles component fine export option seems odd nt present object given vue instance attributes", "d": "4/2018"}, {"body": "one scenario project want make vue route components responsive javascript const baseresponsive functional true render h context options extended component ca nt accessed base render workaround using injections looks weird let component contextinjectionscomponents getdevicetype return h component contextdata const routes path foo component extends baseresponsive inject components default desktop mobile path bar component extends baseresponsive inject components default desktop mobile", "d": "4/2018"}, {"body": "caikan quite different need import vue files see", "d": "4/2018"}, {"body": "would write mixin functional components apart", "d": "4/2018"}, {"body": "initial idea let functional components extended dynamically extended components render logic different options think found another workaround using factory function", "d": "4/2018"}, {"body": "posva custom options great options writing mixins encapsulate reusable behavior nt rely reactive data would nice able use custom properties mixins forced pollute prop list things nt going change publicly exposed component api properties accessible mixin", "d": "4/2018"}, {"body": "still nt get trying share piece code please", "d": "4/2018"}, {"body": "sure disclaimer though fairly new vue pretty extensive experience front end frameworks new adopting vue real chance something ridiculous unintuitive use case nt strike way personally suppose mixin takes custom property types component definition assuming present checks matching attributes component host element concatenates string styles derived attributes specified component element match type specified component definition might using styled components hopefully familiar library suppose component define base styles fontsize typographysizemedium color colorsblack add styles based types provided attributes context optionstypedstyles set mixin return context slotsdefault types bright dark bold light mixin import keys intersection values lodash export default beforemount function let styles looks intersection components attribute specified types intersection keys optionstypes values attrs foreach gt styles stylesconcat thistypes concatenates styles attaches custom options component optionstypedstyles styles unfortunately work object provided render function", "d": "4/2018"}, {"body": "lifecycle functional components call render thing put mixin functional components props edit oh inject may missing think instead set functions return object options directly use object render function also looks straightforward imo", "d": "4/2018"}, {"body": "ah nt realize lifecycle methods nt exist functional components like said vue newb yes actually ended suggested end probably cleaner figured give original use case case gave additional perspective original request", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "supposed work use computed property instead", "d": "4/2018"}, {"body": "write code error amp see really expected return value expected result svelte svelte example", "d": "4/2018"}, {"body": "also escape", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "unfortunately something vue anything garbage collection fully automatic nonaccessible js land except debug builds forcing garbage collection devtools everything looks fine", "d": "4/2018"}, {"body": "tried find difference finally find commits may cause bug", "d": "4/2018"}, {"body": "think problem slot twice template modified jsfiddle show conditional rendering slots works expected note last slot working version works described", "d": "4/2018"}, {"body": "passing null value content passing nothing properly pass js null content null remember bound attribute text inside quotes used literally used js expression evaluated datascope vue instance", "d": "4/2018"}, {"body": "maybe warning added dev mode", "d": "4/2018"}, {"body": "kidplug example given correct pass along null value something like php though still fails acts given anything entire compilation breaks bothersome part right actually supplying value", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "note supposed fail definition using means content treated javascript expression equivalent writing following javascript giving proper compilation warning instead runtime error good first contribution", "d": "4/2018"}, {"body": "like try", "d": "4/2018"}, {"body": "related", "d": "4/2018"}, {"body": "evan said said nt something done modifier kind event pingpong typically leads brittle code long run components relying implementation details way proposed length explicit better keep way button needs promise makes sense pass component pass factory function returns promises component control execution promise", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "example uses script texttemplate html source puts dom using nonvue direct insert also using vue title resulting element dom vue corrupted fine plain insert", "d": "4/2018"}, {"body": "said vue nt set html like using set using setting vanilla js yields result", "d": "4/2018"}, {"body": "posva explain ampersand character working properly example making sense afraid", "d": "4/2018"}, {"body": "posva example comparable vue see", "d": "4/2018"}, {"body": "posva need seek second opinion one", "d": "4/2018"}, {"body": "posva also maybe looking problem wrong level wrong step perhaps problem vue interpreting characters template set dom", "d": "4/2018"}, {"body": "posva look example see entities lt gt quot amp rendered properly vue apos codebased entities think parsing template perhaps vue looking named html entities inside attributes", "d": "4/2018"}, {"body": "posva aha look vue source line function decodeattr var decodingmap includes four named entities plus ironically newline tab var shoulddecodenewlines logic passing false parsing attribute value whole approach using decodingmap limited naive html entity valid inside html attribute maybe submit new bug decodeattr function", "d": "4/2018"}, {"body": "workaround stumbled trying set newlines title attribute component template", "d": "4/2018"}, {"body": "guess accurate say unicode vs ascii codes", "d": "4/2018"}, {"body": "html escapes different js escapes using escape js nt work", "d": "4/2018"}, {"body": "sorry wrong response example calling setattribute like example require html escaped values way equivalent entity template string look example good span title vs bad span title vue consistent named html entity works properly codebased html entity vue reescaping value expect html template inserted dom directly without modification vue", "d": "4/2018"}, {"body": "check example template declared string js raw chars pulled script tag template note inconsistency vue handling good vs bad span title", "d": "4/2018"}, {"body": "posva seeing comments", "d": "4/2018"}, {"body": "wrong place questions like", "d": "4/2018"}, {"body": "probably related webpack settings broken cache caused cacheloader etc try clearing cache files link provided nt valid reproduction since run please provide github repo error persists", "d": "4/2018"}, {"body": "could add reproduction examples make easier understand point view", "d": "4/2018"}, {"body": "minimal example click ps sorry inline templates lazy create files", "d": "4/2018"}, {"body": "okay reproduction confusing follow please next time spend time organising spent minutes trying work ambitions still nt understand proposed feature bug fix please define requirements output clearly triage issue", "d": "4/2018"}, {"body": "nt understand would able perhaps describe problem instead via discord sure describing bug feature request likely usage question", "d": "4/2018"}, {"body": "closing feature requests thoroughly carefully elaborated technical usage examples use case motivations ideas quite fully formulated please discuss discord first opening issue", "d": "4/2018"}, {"body": "general adding syntax sugar particular use case imo common enough warrant new addition also simplify bit userland", "d": "4/2018"}, {"body": "unable reproduce osx sure nt browser bug could try adding classes manually without vue", "d": "4/2018"}, {"body": "example without transition system far chrome bug idea edit windows confirm osx users reproduce either", "d": "4/2018"}, {"body": "fyi linux chrome working", "d": "4/2018"}, {"body": "johnleider assuming commit fixes issue thus close ticket feel free reopen issue persists issue", "d": "4/2018"}, {"body": "commit fix issue discovered issue debugging chrome related bug contain css property vuetify", "d": "4/2018"}, {"body": "problem seems popup window select file happen change event registered internet explorer reason nt work first time real problem register new change event time upload method called notice alert popup many time keep selecting files solution declare change event outside everything works fixed fiddle", "d": "4/2018"}, {"body": "closing based gudradain solution user land", "d": "4/2018"}, {"body": "triggering click event adding change event also gudradain said", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "ca nt reproduce chrome browser upd sorry reproduced", "d": "4/2018"}, {"body": "problem seems vueset called inside computed property also able reproduce bug without vuex", "d": "4/2018"}, {"body": "seems caused take issue", "d": "4/2018"}, {"body": "sodatea yes please", "d": "4/2018"}, {"body": "issue initial render nt populated overall though say code probably good nt used inside templates escape hatch used code avoid bug adding method component calls linked component like", "d": "4/2018"}, {"body": "use method inline function instead closing already", "d": "4/2018"}, {"body": "mixed order working fiddle", "d": "4/2018"}, {"body": "bad thanks", "d": "4/2018"}, {"body": "work please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "4/2018"}, {"body": "thank much posva sorry", "d": "4/2018"}, {"body": "well component nt function technical sense still use options object internally describe one reasons ca nt simply use function would collide way async components work javascript vuecomponent myasnccomponent gt import somecomponentvue locally component components myasnccomponent gt import somecomponentvue javascript vuecomponent functionalcomponet function h context return h div hello world code break since vue nt expect render function clean way tell render function loader function async component really possible implement current api", "d": "4/2018"}, {"body": "thanks answering understand possible current api something vue would like implement", "d": "4/2018"}, {"body": "surely think make functional components easier work towarda vue still log time road", "d": "4/2018"}, {"body": "pushing refernece object array multiple times create new distinct objetcs make example work eg", "d": "4/2018"}, {"body": "thanks peculiarity object", "d": "4/2018"}, {"body": "reproduction nt seem related problem describing passing original object expected behavior use alongside individual bindings cases final scope object needs merged anyway current behavior consistent easily work around using instead pass individual prop use destructuring", "d": "4/2018"}, {"body": "hi evan actually thought destructuring trying renaming variables like newvariable oldvariable stated mdn nt work thought posting issue reproduction create new issue needed thanks", "d": "4/2018"}, {"body": "destructuring alias works intended nt work need open bug report proper reproduction", "d": "4/2018"}, {"body": "confused reproduction earlier post updated try create another reproduction issue facing thanks", "d": "4/2018"}, {"body": "confirm insert line generated render function chrome example ie ps vue problem", "d": "4/2018"}, {"body": "vue revert commit problem disappears", "d": "4/2018"}, {"body": "also problem", "d": "4/2018"}, {"body": "probably changes regex dont work", "d": "4/2018"}, {"body": "yes output chrome output", "d": "4/2018"}, {"body": "may replace ss", "d": "4/2018"}, {"body": "hallo yeah fix problem lt nt include white spaces nonbreaking space thin space included planning run", "d": "4/2018"}, {"body": "vue nt support", "d": "4/2018"}, {"body": "updates", "d": "4/2018"}, {"body": "update vue version error reporting nt know resolved thanks", "d": "4/2018"}, {"body": "link repo", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "justineo said please provide repro instructions please open new issue reproduction", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "interested feature feature confirmed implemented willing work edit currently working please feel free jump", "d": "4/2018"}, {"body": "utatti also ready help needed", "d": "4/2018"}, {"body": "besides also another enhancement simple code parent component know wrong usage think provided field call change type seeing issue think maybe choice default function function", "d": "4/2018"}, {"body": "regarding transform basically vue removed feature request different name locally prop transform feature asked many times already achievable userland", "d": "4/2018"}, {"body": "posva updated fr description", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "posva would mind taking look", "d": "4/2018"}, {"body": "posva thanks answer apidoc vm event callback listen custom event listener removed triggers first time want know removed mean code like beforemount register events via let l l var name eventoncel name gt thisevents func func mounted emit let l l var name eventoncel emit name name done thisevents empty object demo codepen", "d": "4/2018"}, {"body": "means removed listener native events", "d": "4/2018"}, {"body": "well zero listener events remove event array make confused least get confirmed official thanks lot posva", "d": "4/2018"}, {"body": "posva actually able reproduce skipped events even chrome turn slowdown cpu throttling practically though mainly problem falling back introduces minimum delay also case scroll events triggering many layoutspaints prop updated vue resulting huge lag app think correct defer application updates settimeout happy submit pr idea want solve actually wonder paving fundamental problem", "d": "4/2018"}, {"body": "posva thoughts want approach eager start working pr severely impacting application", "d": "4/2018"}, {"body": "sorry something know help", "d": "4/2018"}, {"body": "posva needs done order move forward", "d": "4/2018"}, {"body": "needs done happy contribute", "d": "4/2018"}, {"body": "similar case chrome loading images dont remember browsers month ago vue images loader read file images would loaded long youre scrolling page keep scrolling without stop loaders would never disappear sadly didnt much time dig deeper thought one thoses javascript situations image loading initiated within settimeout guessing part reason could try reproducing maybe", "d": "4/2018"}, {"body": "check modified codepen changed component logic match default native multi checkbox behavior", "d": "4/2018"}, {"body": "emanuelmutschlechner nt think codepen relevant though appreciate working toward solution adding explicit prop original pen putting prop field works around bug seen modified pen point nt need done passing already original pen nt way picking", "d": "4/2018"}, {"body": "pearofducks want pick defined component explicitly bind custom component", "d": "4/2018"}, {"body": "emanuelmutschlechner please read previous response nt necessary pretty confident valid bug appreciate trying help", "d": "4/2018"}, {"body": "get point sure bug need feedback core team solution partly based example code bound explicit used disabled attribute inheritance source", "d": "4/2018"}, {"body": "maybe issue somewhat related", "d": "4/2018"}, {"body": "looks like slot inside scoped slot rendered", "d": "4/2018"}, {"body": "justineo rerendered changes nt cause problems think thinking", "d": "4/2018"}, {"body": "cents another reproduction issue notice warning raised modal shown hand jsx version component raising warning", "d": "4/2018"}, {"body": "idea wrap every event treat equally like reemit wrapper component", "d": "4/2018"}, {"body": "nt think causes issues render correct nt rendering mentioned add improvement label something fixed destructive bug", "d": "4/2018"}, {"body": "linusborg causing issues use case similar portal basically slotscopes preserve reactivity moving slot another location see comment well nt making slotsdefault getter essentially saying making slots reactive slots refs reactive always struck strange since nt really much overhead presumably already logic vue causes change slotsdefault trigger render would happen naturally slots reactive agree general idea future nt distinction scopedunscoped slots unscoped slot really scoped slot invoked passed data yes would breaking change could possibly option component like name pending would let us make change opt way consensus linusborg general direction willing work pr", "d": "4/2018"}, {"body": "likely confirm", "d": "4/2018"}, {"body": "flagging important due downstream issues libararies", "d": "4/2018"}, {"body": "removing regression tag behavior along", "d": "4/2018"}, {"body": "case failed error exists computed array reactive components set watcher deep true computed", "d": "4/2018"}, {"body": "issue grab seems like since progress made", "d": "4/2018"}, {"body": "kotapi created pr issue days ago closed yet think waiting decisions vue team", "d": "4/2018"}, {"body": "alright yuriyalekseyev", "d": "4/2018"}, {"body": "folks update pr would love merged", "d": "4/2018"}, {"body": "leebenson want say thanks revelation consistently experienced issues webpack typescript resolving imports properly turns using works actually returns null", "d": "4/2018"}, {"body": "feature would great add another example currently works workaround catch error try catch block could nt find way trigger error vue instance possible thought maybe convention emitting event might work think something similar could helpful", "d": "4/2018"}, {"body": "posva linusborg hi tried found leave transition missing enter transition work appear attribute help please", "d": "4/2018"}, {"body": "need reproduction understand problem ca nt help ca nt provide", "d": "4/2018"}, {"body": "ywwhack workaround great made improvements use injections instead props props polluted code looks little prettier vue import somechildren somechildrenvue export default inject components default somechildren", "d": "4/2018"}, {"body": "update implementing components option functional components workarounds good seems pretty hacky imo especially mentioning must fore dynamic components known components", "d": "4/2018"}, {"body": "jkzing unfortunately comes another problem solution works adding text textarea press backspace omit text till text textarea throws error says something like arguments invalid gone vue code pass thisvalue createelement wo nt cause error pass thisvalue createelement would go settextcontent method nodewholetext error solutions suggestions ps reproduction", "d": "4/2018"}, {"body": "hey vsevolodtrofimov solution suggested using really working latest vue getting error looks like vue actually trying fire handler instead unbinding event", "d": "4/2018"}, {"body": "dawidmyslak change work handler called", "d": "4/2018"}, {"body": "nice one pbastowski", "d": "4/2018"}, {"body": "thank guys", "d": "4/2018"}, {"body": "deylak property data object processing function property trying set value property later defined function executed new value observedhowever observed new value never relied upon think modify method shown following code add judgment conditions existence ensures property accessor propertyif accessor property method return directly", "d": "4/2018"}, {"body": "hcysunyang feel free submit pr", "d": "4/2018"}, {"body": "ok submit pr", "d": "4/2018"}, {"body": "ps", "d": "4/2018"}, {"body": "hackish workaround worth js created function thiswaitdata asynccall mounted function thiswaitdatathen function data", "d": "4/2018"}, {"body": "possible flat solution", "d": "4/2018"}, {"body": "consistent solution create empty functional stateless better performance component element completely layoutless element using tag introduce useragent margin html export default name vempty usage seem natural recently upgraded ended", "d": "4/2018"}, {"body": "completely layoutless even empty dom elements match css selectors like etc bare element performant functional component imo element always valid child given parent element eg etc", "d": "4/2018"}, {"body": "bare element consistent encapsulated solution better imo creates problem use valid pretty much everywhere componentbased development suggest refraining pseudo selectorselements implicitness con older days used save markup longer issue since components reduce average amount code write anyway instead pseudo selectors use classes explicit give better control", "d": "4/2018"}, {"body": "basically special semantics shares categories neither used inside lot elements instead pseudo selectors use classes explicit give better control yes remind old days support want clean solution prevent developers leveraging modern technologies pseudo classes", "d": "4/2018"}, {"body": "well opinionated year developing library nt find much use sense absence using tags nt sound probable see", "d": "4/2018"}, {"body": "seems pretty important future vue chance added somewhere official roadmap even backlog consider also react angular already example take look list react custom renderers", "d": "4/2018"}, {"body": "status", "d": "4/2018"}, {"body": "run situation useful instance currently writing component enable layout list items nonconstant order columns different layout modes different purposes ca nt use flexbox purpose due browser compatibility cases like knowledge vue way within get children rendered order without explicitly letting component know items like parent component able act without knowledge yes bit edge case found people problems google searching led thread", "d": "4/2018"}, {"body": "create event emitter components question tackle problem", "d": "4/2018"}, {"body": "nblackburn well content passed via slot therefore listen events emitted instances via slot within component guess fine nt solve problem source items array displaying corresponding set fields sidebar allow deletion addition reordering said items add item reorder ordering lost know fix means passing original array items may maintain internal map items child components correct order little cleaner children maintains correct order plus want component work places content dynamic array items make prop optional increases chances developer forget pass array items use case used document template editing system way component used many times single template would forgotten introduce bug may easily escape testing ca nt help feel like nt make sense children array would reflect actual order components kind feels like something old version internet explorer would childnodes property element", "d": "4/2018"}, {"body": "plus comment says example provided op thread components coupled design suggests emitting events parent via parent advocate use parent advise using children feels little inconsistent add understand development nt straightforward change may incur fair deal work wanted add two cents name consistency sake consistency", "d": "4/2018"}, {"body": "caelanstewart nt mean allow demonstate create file house event bus javascript import vue vue let eventbus new vue export default eventbus import eventbus components want communicate across emit event comonent createdmounted destroyed javascript created eventbus emit columnadd beforedestroy eventbus emit columnremove simply handle event parent component like give instance independent components allows track order mounted works added", "d": "4/2018"}, {"body": "nblackburn doest allow track items reordered though mounted destroyed hooks items called second time move element array one index another take look jsfiddle demonstration see initial array items root vue component root vue components mounted hook simulate user reordering items components already mounted take look console mounted hooks fire initial instantiation components two seconds items reordered see updated hooks fired components problem idea new index items inside updated hook information passed argument plus response suggestion event bus use event bus use multiple instances going work compare parent component check indeed child parent child another instance would better use child component done js fiddle", "d": "4/2018"}, {"body": "anyway regardless fix said previous comment already solution ideal point introduce faff able track reordering components get array components correct order wanted add cents problem introduces inconsistency one seems vue like least knows enough people end agreeing maybe happen", "d": "4/2018"}, {"body": "caelanstewart never suggested direct answer decoupled way parentchild communication could applied get closer something works become hurdle try think issue different way nt think problem vue solve", "d": "4/2018"}, {"body": "nblackburn okay fair enough bit confused suggesting something nt fit case", "d": "4/2018"}, {"body": "amongst huff adding two retrospectively cents neglected properly read responses thread see miljanaleksic used slots solution indeed work access child components correct order", "d": "4/2018"}, {"body": "\u662f\u7531\u4e8e\u5728\u5f00\u53d1\u6a21\u5f0f\u4e0bvueloader hrm\u63d2\u5165\u4e86require vue \u5bfc\u81f4vue\u6a21\u5757\u4f7f\u7528\u7684vue\u4e0e\u5168\u5c40vue\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 hxfdarling", "d": "4/2018"}, {"body": "closing feature request causes breaking change nt breaking changes supposed go major versions feature merges props actually super nice something manually every time common scenario creating complex components get breaking change add feature roadmap something besides point closed ticket could suggest elegant reusable way achieve kind behavior could maybe write plugin thanks time", "d": "4/2018"}, {"body": "complex syntax already syntax add nt break vue js please kiss guys smart see would want", "d": "4/2018"}, {"body": "find concatenating handlers dots ampersand everywhere pretty hard parse reading template", "d": "4/2018"}, {"body": "adding new type syntax necessary cover probsbly use cases anyway mon apr alexandre notifications githubcom wrote find concatenating handlers dots ampersand everywhere pretty hard parse reading template receiving commented reply email directly view github mute thread", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "\u9047\u5230\u540c\u6837\u95ee\u9898", "d": "4/2018"}, {"body": "\u725b\u903c\u6bc5\u54e5", "d": "4/2018"}, {"body": "agree mrcsmcln avoiding unexpected results good rationale behavior excluding certain arbitrary attributes less transparentconsistent simply causes unexpected results different way though clear documentation appreciated case argue consistency clarity important additionally appears currently way apply bindings child element instead root without using custom props existing behavior would still achievable two attributes excluded op suggests binding selectively would verbose also explicittransparent compounded inability one root element forces us use wrapper elements eg hocs may want apply bindings side note documentation seems imply included", "d": "4/2018"}, {"body": "ran trying text input component needed div making input font awesome span textbox time styling applied input div would nice could get inheritstyle option would also include class say even kind nicer way merge classstyle data deal adding specific property passing styling input annoying non intutitve generally agree exposing styling inner components like sometimes simple ones makes sense even complex ones may default item apply style times jcupps mentioned vue forces us abuse div tags thinks might root element even though know never cant use template tags get around contrived simple example cant node types different vue nt like else different node type class gets applied div regardless inheritattrs even though vue anything gets way html thats different topic", "d": "4/2018"}, {"body": "causing grief use props unobvious names pass class attributes reusable components stated authoring components nt think good idea encourage user directly style component via classes inline styles mind whole point making reusable components flexible styled container thus making easy use without refactoring every time want change say background colour text size name property inheritattrs imply exactly maybe renamed inheritmostattrs way new users would get clue write computed properties components deal applying classes styles inner elements quite frankly annoying wastes time forget personally think default behaviour changed exclude attributes flag false however would breaking change related property inheritstylinginattrs would default false include setting true would force behaviour looking would expected first place", "d": "4/2018"}, {"body": "think encountered case would nice context filter creating app core module projection real coordinate space screen objects space represented vue components though filters would trick props given real unit like meter compute filtered value need values viewport dimensions previously generated scale value understand use methods actually using em wondering options case", "d": "4/2018"}, {"body": "believe use cases need access filter example ssr project implementing filter need create different translate instances every request different languages access different instance via server workaround change people prefer filter also implement hacky way overwrite method however something slower filter related source codes", "d": "4/2018"}, {"body": "absolutely convinced filters must way access context question core team going", "d": "4/2018"}, {"body": "yuxingfafu window functionname thisfunctionname", "d": "4/2018"}, {"body": "gnumarcelo code worked put plugin file axioplugints file typescript import vue vue import axios axios export function axiosplugin vue typeof vue options axiospluginoptions void stuff options vueprototype http axios export class axiospluginoptions add stuff import axiosstatic axios declare module vuetypesvue interface vue axiosstatic", "d": "4/2018"}, {"body": "must put data inside bracket return", "d": "4/2018"}, {"body": "like data return names ali ahmad raza", "d": "4/2018"}, {"body": "nt know exactly issue problem sounds pretty close solution install future people googling issue might option helps", "d": "4/2018"}, {"body": "give routerview unique key like", "d": "4/2018"}, {"body": "onlyurei hello met issue baidu mapand may ask resolve mean make warning", "d": "4/2018"}, {"body": "would breaking change emit callback alternative would use common pattern web apis provide method emitted event called something like takes promise example js function callback evt evtwaituntil new promise function resolve reject settimeout gt resolve resolved component methods handleclick evt var promise promiseresolve evtwaituntil p gt promise p emit click evt consolelog promise promise promise desired could get robust throw error called", "d": "4/2018"}, {"body": "nice vision dlongley see beyond edge", "d": "4/2018"}, {"body": "could also pass parameter directly like js methods handleclick evt var result new promise resolve gt emit click evt resolve way mutating object nt create receiver would consume second argument", "d": "4/2018"}, {"body": "sirlancelot forces receiver call order achieve proper operation eliminates ability reject sane automatic error propagation approach allows receiver take asynchronous action necessary provides proper error propagation nt think good reason break abstraction considerable thought put design pattern various web apis eg serviceworkers would recommend approach course patterns work", "d": "4/2018"}, {"body": "dlongley awesome approach thought yet would possible use technique something like wrap around function want retried token needed refreshed problem need value returned promise second try first try value returned properly ca nt find return promise attaching tokenrefreshed event export function callafterloggedin fn storegettersloggedin return calltrytokenrefresh fn else storestatebus loggedin fn export function callaftertokenrefreshed fn storestatebus tokenrefreshed fn export function calltrytokenrefresh fn let possiblepromise fn let promise possiblepromise instanceof promise promise return possiblepromisethen null gt return callaftertokenrefreshed fn return possiblepromise", "d": "4/2018"}, {"body": "\u597d\u5427 \u6211\u4e5f\u89c9\u5f97\u8fd9\u70b9\u5e94\u8be5\u63d0\u4e00\u4e0b \u4e0d\u7136\u6709\u70b9\u5751", "d": "4/2018"}, {"body": "html datalist feature supported vuejs architectiure", "d": "4/2018"}, {"body": "anyone come solution think clean yet currently really hard answer questions like bounding box element item x array rendered since refs array order synchronized data source order best come assigning different unique ref name item list like really gross especially considering access ref element array one item since ref vfor solution adding attribute find ref want traversing looking match man ever feel antivue storing data dom like", "d": "4/2018"}, {"body": "portal component may need vue official support keep components tree showed vuedevtools codes event bubbling portals relies vue tree", "d": "4/2018"}, {"body": "works fine assigning new variable names seems work slotscope newvariable destructuredvariable anyone check thanks", "d": "4/2018"}, {"body": "wo nt like please open bug report reproduction", "d": "4/2018"}, {"body": "somebody reference new issue one need create rehusable declarative tree components alternative view configuration composition global confs", "d": "4/2018"}, {"body": "nickfederighi thanks suggestion experiencing similar issue form multiple buttons osx catching keydown event instead good workaround", "d": "4/2018"}, {"body": "array object instances specific class class public functions need invoke functions template seems vbind converts passed value standard object way invoke class functions cheers", "d": "4/2018"}, {"body": "google brought thread searching better understand propsemitter pattern particularly unsure emitting event using deeply nested component top think might cleanest solution found used parent follows could also computed property defined manner within component setter getter operations use computed property instead prop makes updating emitting change parent easy object might worthwhile creating computed properties well example represented person properties allows used changes propagate way eg still experimenting seems consistent approach could find codepen", "d": "4/2018"}, {"body": "try close divs properly", "d": "4/2018"}, {"body": "hey tzurbaev looking solution achieve", "d": "4/2018"}, {"body": "bug fixed need update vue still old version", "d": "4/2018"}, {"body": "man thanks spent days answer saved lt", "d": "4/2018"}, {"body": "specific reason vue renders adding vpre everywhere may best solution serverside rendered templates hard ensure complete coverage", "d": "4/2018"}, {"body": "may interest finding thread future serverside rendering laravel vuejs", "d": "4/2018"}, {"body": "sevenecks legendary tada thank", "d": "4/2018"}, {"body": "fnlctrl would number props", "d": "4/2018"}, {"body": "like use rendered function functional component js componentbjs import componenta componentavue export default functional true components componenta render createelement context return createelement componenta props hello new default even define language pr default values contextprops pass remaining props contextlisteners", "d": "4/2018"}, {"body": "bugs production builds produces extra spaces text makes extra line buttons text templates like html long text close nt bug exists production nt see development", "d": "4/2018"}, {"body": "vmodel nt work workaround ended upgrading vue solved issue", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "given fnlctrl said could click handler input element spare add label", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "build helpers like usecases imo", "d": "4/2018"}, {"body": "good answer", "d": "4/2018"}, {"body": "trying migrate legacy jquery plugins bootstrap plugins knockoutjs code vuejs removal original event handlers mount huge pain absolutely single problem plugins events set knockoutjs supports mix manual event dom changes viewmodel dom event changes perfectly vuejs decision strange would correct case everyone lived ideal world projects created scratch depend external libs never refactored otherwise user unfriendly approach", "d": "4/2018"}, {"body": "possible virtual dom include save restore original event handlers well least optionally also existing dom recompiling mount probably unnecessary step", "d": "4/2018"}, {"body": "stevenwung dmitrisintsov met problem migrating jquery undestand pain temporary solution may mount vuejs small containers page rewritten vue try mount vue instance js scipts", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "fergaldoyle almost years later one greatest wtf ie moments dev path", "d": "4/2018"}, {"body": "vs use", "d": "4/2018"}, {"body": "also issue displays unknown custom element lt randomquote gt register component correctly recursive components make sure provide name option library use code appjs var vue require vue vueconfigdebug true comment line production new vue el app created function thislaravueinitcall home data laravue require laravuecoffee components require componentscoffee moduleexports custom elements titles require componentstitlecoffee randomquote require componentsrandomquotecoffee randomquotecoffee moduleexports template require randomquotetemplatehtml created gt random mathfloor mathrandom quote quotes random data gt ret quote quotes notice small things rewards inversely proportional even largest avalanche triggered small things great things done series small things brought together great things done impulse series small things brought together coming together beginning keeping together progress working together success small beginnings come great things randomquotetemplatehtml quote", "d": "4/2018"}, {"body": "drasnop wrong guarantee", "d": "4/2018"}, {"body": "need computed method seems work way op posted except debounced method lacks cancel method", "d": "4/2018"}, {"body": "im sure figured moved know longer issue", "d": "4/2018"}, {"body": "oh nt actually talking problem spent almost hours figuring debounced function lacks cancel method debounce works otherwise fine need use computed trick want use cancel method debounced function know fix still idea needs done way bit obvious imo example codepen", "d": "4/2018"}, {"body": "vue wraps functions bound function defined properly wrapped function nt contain method even likely going work properly component used multiple times page using computed property ensures debounced method created component instance", "d": "4/2018"}, {"body": "makes sense thanks", "d": "4/2018"}, {"body": "shuaibird plasmatium", "d": "4/2018"}, {"body": "bolelee", "d": "4/2018"}, {"body": "hmm interesting read limitation class custom getters equivalent computed properties vue difference handle computed properties somewhere else agree increase side effects add complex edge cases could left user vue supposed unopinionated making somewhat artificial limitation fact imposing opinion cases trivial work around", "d": "4/2018"}, {"body": "works fine ca nt root data object plus want store original reference class instance object vue call getters setters every time", "d": "4/2018"}, {"body": "yeah reactivity tricky probably better limitation complex codebase despite inconveniences always workarounds take back previous comment", "d": "4/2018"}, {"body": "\u53ef\u4ee5\u4e86 slot\u53ef\u4ee5\u5728vfor \u4e0b\u76f4\u63a5\u4f7f\u7528\u4e86", "d": "4/2018"}, {"body": "could well inline handler", "d": "4/2018"}, {"body": "article details upcoming support nothing official roadmap see current latest core next minor release support native esm import improved async error handling iterator vfor directive sure got information", "d": "4/2018"}, {"body": "thank dynalz unclegena", "d": "4/2018"}, {"body": "watched promo live webinar nativescriptvue looks amazingly promising let keep rolling", "d": "4/2018"}, {"body": "jasonlfunk using issues ie missing ie package something happening browser seems odd get browser specific vue error like update false alarm found bind declaration php file vuejs file built go different less clean way", "d": "4/2018"}, {"body": "example worked around problem edit note component example boolean property controls visibility modal essence example call fetches component array", "d": "4/2018"}, {"body": "would really like explicit place nt manually done store nonreactive data use time things like dictionaries used rendered templates never need trigger rerender considering component definitions", "d": "4/2018"}, {"body": "case someone else stumbles across addressed per morgul suggestion documented form input bindingsmodifiersnumber hoping save next person step go find docs", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "variable changes use update changed", "d": "4/2018"}, {"body": "trusktr please use forums discord questions variable changes need reassign even set created hook wo nt observed ps answer back please", "d": "4/2018"}, {"body": "case acebalajadia solution nt work listing come alternative way", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "hasikii \u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u8ba1\u7b97\u5c5e\u6027\u6765\u5b9e\u73b0\u53d6\u53cd", "d": "4/2018"}, {"body": "gloomyline computed\u600e\u4e48\u7528set\u8ba1\u7b97\u6570\u7ec4\u67d0\u9879\u7684\u6539\u53d8\u5462", "d": "4/2018"}, {"body": "hasikii vmodel\u662f value value \u548c change event target valuevalue", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "looks like vue uses following hood js let decoder export default decode html string string decoder decoder documentcreateelement div decoderinnerhtml html return decodertextcontent", "d": "4/2018"}, {"body": "hcysunyang works looks counterintuitive", "d": "4/2018"}, {"body": "like inline expressions vuejs automatically collects dependencies computed properties refreshesrecomputes dependencies change may need reference dependencies need recomputation check following example", "d": "4/2018"}]