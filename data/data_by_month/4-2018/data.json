[{"title": "consuming context hoc root component provider rendered multiple times identify correct context consume child component level", "body": "planning use react context api library exposes root component rcontextjs getrcontextjs hoc import rcontext rcontext export function getrcontext comp gt class render contextvalue gt rjs import rcontext rcontext export default class r render cjs problem single app multiple root components rendered since single context used consume value appjs create multiple contexts like requires passing identifier root component children corresponding identifier used consume correct context rcontextjs getrcontextjs import context rcontext export function getrcontext comp gt class render const rcontext context thispropsid contextvalue gt questions way pass certain props assume props wo nt effect life cycle case id example children immediate create idcontext hoc wrap components consume id consume rcontext based id please suggest better approaches possible thanks advance", "num": "12720", "d": "4/2018"}, {"title": "syntaxerror expected svgname prop string", "body": "assign string svgname ok assign variable svgname bad", "num": "12719", "d": "4/2018"}, {"title": "onclick android mobile working", "body": "hello using reactjs version mobile samsung galaxy mobile browser chrome firefox small app sign button works perfectly windows desktop using chrome browser however working mobile device button simply fire click", "num": "12718", "d": "4/2018"}, {"title": "onmousedown causes splash real ios browsers", "body": "want request feature report bug bug current behavior unexpected grey splash caused real ios device browsers safari chrome please checkout grey splash issue first trial later find vanilla html nt cause grey splash react jsx noticeable grey splash expected behavior wants splash versions react browser os affected issue work previous versions react react", "num": "12717", "d": "4/2018"}, {"title": "reconciliation behaves differently childrenasfunction consumer function", "body": "react developer tools highlight updates expected behavior two divs reconcile way childrenasfunction variant update dom setstate would ideal behavior since return value change consumer variant changes dom every setstate note difference occur empty first child provider case childrenasfunction consumer variants refresh setstate function returns single text node case none two versions refreshes setstate unless text changes", "num": "12715", "d": "4/2018"}, {"title": "update breaks web application", "body": "current behavior none indexjs rendered use reactscripts build web application get rproptypes undefined error visit localhost address presume proptypes deprecated onwards removed ca nt life figure calling weird part main js createreactapp builds tried updating dependencies dice update react application works fine using npm packagejson name nodewf version private true dependencies createreactapp halogen proptypes react reactbootstrap reactbootstraptoggle reactcontenteditable reactdom reactsplitpane reacttextareaautosize devdependencies reactscripts scripts start reactscripts start build reactscripts build test reactscripts test envjsdom eject reactscripts eject proxy also using cdn scripts jquery bootstrap bootstrap toggle plotly sure compatibility issue", "num": "12714", "d": "4/2018"}, {"title": "reconciliation bug occured client starts hydration", "body": "want request feature report bug bug current behavior jsx staticjs import react react function static return export default static jsx dynamicjs import react react function dynamic return export default dynamic jsx appjs import react react import static static import dynamic dynamic class app extends reactcomponent constructor props super props componentdidmount thismounted true render return thisstateloaded null export default app first server sends react app without asynchronous component loading second client starts hydration loading component asynchronously real production used code splitting webpack loaded example controlled state making app simple loaded app renders instead finally let see result component changed blue took dinner afaik react nt touch result client rendering different server html moved another page clientside routes find situation guess occurs client hydrates result serverside rendering current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example check easily clone run open expected behavior versions react browser os affected issue work previous versions react react browser chrome safari os macos windows linux react works well without bug check branch", "num": "12713", "d": "4/2018"}, {"title": "encoded character table td tags showing string incorrectly", "body": "encoded characters example show adding characters fine put tag example long outside table", "num": "12712", "d": "4/2018"}, {"title": "setstate callback fired wrong state context using reactdomunstabledeferredupdate", "body": "want request feature report bug bug current behavior callback functioning expected using directly wrapped time current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open console click button sometimes may see state callback smaller called definitely expect would bigger expected behavior said versions react browser os affected issue work previous versions react", "num": "12711", "d": "4/2018"}, {"title": "input dx improvement opportunity", "body": "want request feature report bug feature current behavior warning raised following snipped jsx import react react export default class textfields extends reactcomponent state name timeout componentdidmount emulate loading data ajax settimeout gt consolelog updating name timeout thissetstate name timeout render return expected behavior believe opportunity raise warning development would inform users ca nt update property problem raised attention versions react browser os affected issue work previous versions react react", "num": "12710", "d": "4/2018"}, {"title": "point wrong dom node", "body": "eg statea set false access thismyrefcurrent point div classname b", "num": "12709", "d": "4/2018"}, {"title": "initial css breaking react app", "body": "hey guys one problem working even simple app react link jsfield anywhere use output error", "num": "12706", "d": "4/2018"}, {"title": "coverage support jsxcontrolstatements", "body": "conditional rendering components jsxcontrolstatement produces incorrect coverage else branches using project want official facebook opinion whether updated babel ast future support please warn developers get incorrect branch coverage see reported issue facebook support approach similar jsxcontrolstatements future facebook support approach like facebook warn developers using library due incorrect coverages issue consistent jest nyc since use babel ast want request feature report bug feature current behavior incorrect coverage expected behavior correct coverage report custom conditional rendered components", "num": "12705", "d": "4/2018"}, {"title": "onclick event firing enabling button via ref", "body": "want request feature report bug possible bug needs investigation current behavior button initially rendered disabled event connected enable button via ref event get fired click current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example codesandbox component ref implementation hello component based state working used behalf question hashnode regarding behavior expected behavior onclick event fires enabling button versions react browser os affected issue work previous versions react react version sandbox know version questioner share issue also work refs created callback string", "num": "12704", "d": "4/2018"}, {"title": "type invalid likely forgot export component file defined", "body": "posted question created issue voyager project thought also document using components voyager uses react following error warning reactcreateelement type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined check render method dataselectorbase uncaught error element type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined check render method dataselectorbase know cases error implies problems nt think anything wrong loaddata dataselector exported voyager also believe imported right weird thing version voyager locally nt get error use released version error shows", "num": "12703", "d": "4/2018"}, {"title": "feature request get ref memory dom element mount", "body": "want request feature report bug feature current behavior currently nt great way react build ui components due needing refs check props dom element wait component mount repaint want make changes ui based information received ref current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior create dom nodes memory appending dom expect react create elements necessary memory appending mount point reactdomrender versions react browser os affected issue work previous versions react", "num": "12701", "d": "4/2018"}, {"title": "calling reactdomrender many many times slow", "body": "want request feature report bug bug current behavior calling many many times seems meaningfully worse performance rendering many elements within single react root current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example edited add devproduction builds react development react production react development examples obviously pretty contrived expected behavior perfect world would nt large performance discrepancy two approaches context working frontend plugin framework trying expose react ideally implementation detail part plugin interface interface like requires host plugin implemented react share instance react fast convenient interface like treats react implementation detail less convenient importantly incurs performance problem imagine use case nt high priority reactreactdom love understand bit better really causes performance difference whether likely ever change versions react browser os affected issue work previous versions react seems impact react amp similarly nt think browser dependent", "num": "12700", "d": "4/2018"}, {"title": "styles via classname reflected print", "body": "want request feature report bug sure might bug something right everything seems indicate work thinking potential bug possibly trying get assistance stack overflow getting anywhere current behavior trying print content modal external styles via passed print dialog preview however done line eg styles reflected current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example repo use case directions work migrating jsfiddle codesandbox better expected behavior still see styles applied using external css via going print versions react browser os affected issue work previous versions react react using chrome windows wsl sure worked previous versions started feature web app", "num": "12699", "d": "4/2018"}, {"title": "conditional rendering jsxcontrolstatements", "body": "want request feature report bug neither conditional rendering components like jsxcontrolstatement recently ran coverage report issues documented want hear official recommendation facebook reactjs team conditional rendering like according documentation approach recommended want confirm thanks", "num": "12698", "d": "4/2018"}, {"title": "ref callback called componentdidmount", "body": "want request feature report bug bug current behavior ref callback executed current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example react react expected behavior ref callback executed versions react browser os affected issue work previous versions react react chrome macos high sierra", "num": "12697", "d": "4/2018"}, {"title": "allow specify displayname createcontext providers consumers", "body": "want request feature report bug bug current behavior react tree name context must like name code current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example let look react tree chrome extention page context mycontext expected behavior expexted see mycontext versions react browser os affected issue work previous versions react", "num": "12695", "d": "4/2018"}, {"title": "size prop attached dom", "body": "want request feature report bug bug current behavior size prop number think true inputs selects necessarily true rest html tags web components current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example sorry codepen example uses framework called onsenui internally uses web components onsenui framework icon web component transforms every size prop value string attached dom know example dependencies react also simple div simple also affected issue expected behavior size prop added dom number html tags nt inputs selects versions react browser os affected issue work previous versions react affected versions gt works ok versions lt browsers", "num": "12694", "d": "4/2018"}, {"title": "reacttestrenderercreate work properly forwardref components", "body": "want request feature report bug bug current behavior try access component tree component created get error current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example minimal example simply component created js import react react export default reactforwardref gt hello try use access get unexpected object passed reacttestinstance constructor tag probably bug react js import react react import create reacttestrenderer import hello hello test forwardref component gt const tree create expect treeroot expected behavior able create components created forwardref test renderer versions react browser os affected issue work previous versions react using jest forwardref exist previously", "num": "12693", "d": "4/2018"}, {"title": "seems leak dom nodes", "body": "want request feature report bug report bug current behavior react components seem leak dom nodes unmounted retaining entire dom tree current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example js fiddle test open chrome performance monitor check uncheck show stuff check box number dom nodes climb clicking garbage collect seem reclaim click run jsfiddle release old nodes uncheck enable autofocus box repeat experiment click show stuff lot time dom nodes seem get reclaimed heap snapshot shows detached dom trees referenced react dom internals expected behavior dom nodes nt retained unmounted versions react browser os affected issue work previous versions react react google chrome windows nt know issue new application may always affected", "num": "12692", "d": "4/2018"}, {"title": "possible unlimited recursive rendering hoc", "body": "want request feature report bug would consider feature current behavior react put limits recursive rendering using higherorder components however calling reproduces pretty easy pair container hoc would nt try codesandbox jsfiddle code javascript import react react import reactdom reactdom accepts component prop renders passing props real life scenario usually something const container props gt const component component props return hocversion container const withcontainer wrappedcomponent gt props gt though looks bit artificially pretty common use something like thing looks innocent const bomb withcontainer withcontainer gt null class detonator extends reactcomponent state wentoff false gooff gt thissetstate wentoff true render gt thisstatewentoff oooppps text probably wont rendered reactdomrender documentgetelementbyid root expected behavior would expect limit kind recursion blazing fast like react supposed eating lots ram short time bit difficult annoying stop versions react browser os affected issue work previous versions react reproduces chrome done react", "num": "12691", "d": "4/2018"}, {"title": "cloning child context consumer produces confusing warning error", "body": "want request feature report bug bug least request precise warnings error messages current behavior cloning children add properties overlooked context consumer subtree cloned import react react import render reactdom const provider consumer reactcreatecontext const comp children gt clonekids children const clonekids children gt reactchildrenmap children child gt reactcloneelement child childprops childpropschildren amp amp clonekids childpropschildren render consolelog documentgetelementbyid root code produces warning error introduced warning context consumer rendered multiple children child nt function context consumer expects single child function pass function make sure trailing leading whitespace around even confusing typeerror render function expected behavior maybe reactcloneelement attempt clone functions whatever result function warning part child nt function separated warnings ca nt multiple children one child function time precise warning issued versions react browser os affected issue work previous versions react tested react stackblitzchrome react chrome firefox", "num": "12689", "d": "4/2018"}, {"title": "unexpected behavior use reactforwardref reactcreatecontext", "body": "want request feature report bug bug current behavior example child used children updating even wrapped component never updates still triggered callback updates expected behavior nt update root component updated whether used children versions react browser os affected issue work previous versions react used react", "num": "12688", "d": "4/2018"}, {"title": "show culprit", "body": "want request feature report bug feature current behavior probably familiar following message warning update existing state transition within another component constructor render methods pure function props state constructor sideeffects antipattern moved never came across message created simply mounting following component js class updateduringrender extends component constructor props super props thisstate text initial updatestate text thissetstate text render thisupdatestate updated expected behavior specific component triggers warning think could even treated optional error suddenly appears app sometimes tough find culprit stack trace least offending component would helpful warning message sure solved internally yeah would nice hint help remove antipatterns versions react browser os affected issue work previous versions react", "num": "12687", "d": "4/2018"}, {"title": "strange beahvior react new context api", "body": "think bug git example npm npm start go dependencies react chrome components context orderdetailscontext root component ordersview simple component ordersviewrow subscribed component orderdetailsview problem application one dynamic context orderdetailscontext components one root component ordersview children components ordersviewrow orderdetailsview one component orderdetailsview subscribed dynamic context refreshed context data changed problem context changed subscribed component refreshed old version context data actual orderdetailsview update context updated expected orderdetailsview update context updated first solution go ordersview move orderdetailsview top render function subscribed component updated context changed second strange solution go separeted component ordersviewrow remove subscribed component updated context changed video reproduce clone npm npm start open chrome open dev tools chrome click view button expected loading text visibled hidden text updated new number displayed console log actual loading text visibled text changed console log", "num": "12686", "d": "4/2018"}, {"title": "documentation request", "body": "please document use forwardref preferred way retrieve list array items example javascript const foo reactforwardref props ref gt propssuperherosmap hero index gt", "num": "12685", "d": "4/2018"}, {"title": "unmounting fragment node children removed dom one time instead", "body": "want request feature report bug bug maybe perhaps limitation fragments let know current behavior unmounting fragment children removed dom one time top bottom means unmounting step quickly calculating dom position change save data also imagine less performant look console outputs using fragment element found using fragment element ca nt found using div element found expected behaviour fragment using div element ca nt found switching parent children parent children expected behavior fragments children would removed dom time instead one children div would removed dom time essentially removing children look like part problem versions react browser os affected issue work previous versions react unsure worked previous versions let know help anything cheers", "num": "12683", "d": "4/2018"}, {"title": "build failing error find module reactsrcreactcurrentowner", "body": "want request feature report bug report bug current behavior cloned repo onto desktop run produces following output error find module reactsrcreactcurrentowner functionmoduleresolvefilename functionresolve objectkeysforeachsrcmodule arrayforeach useforks getplugins createbundle buildeverything definitely issue environment builds fine laptop running system current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example na expected behavior code build successfully versions react browser os affected issue work previous versions react version react os ubuntu works laptop also runs", "num": "12681", "d": "4/2018"}, {"title": "undefined variable performance reactdom opera mini browsers", "body": "want request feature report bug bug current behavior loading site breaks following error proxy mobile browser opera mini extreme turbo mode catch loaded page loads browsers js switched expected behaviour browser problem issue access error logs production via beacon nt able view console logs running browser directly nt able replicate web editors since sites completely nt work opera mini believe error referencing code sorry posted wrong place sure report since relating proxy browser nt run js client expected behavior loading site render would browser js switched versions react browser os affected issue work previous versions react seeing behaviour opera mini android ios extreme turbo mode", "num": "12679", "d": "4/2018"}, {"title": "passing props parent children looks screwed", "body": "want request feature report bug guess bug current behavior want wrap children pass props children inside import react react div passes props direct children const div props gt return reactchildrenmap propschildren child gt reactcloneelement child props const app gt export default app codesandbox expected behavior output actual output reason every child contains three extra children versions react browser os affected issue work previous versions react react macos", "num": "12678", "d": "4/2018"}, {"title": "could hydrate stop modify content component binding events", "body": "since web application run php server backend use reactdomserver lots restrictions conventions translate jsx template language javascript class ssrcom extends reactcomponent constructor props super props reactdomhydrate documentqueryselector mount html hello ssr count change state sounds crazy server render template expected however react hydrate modify component content could hydrate stop modify content component binding events ways like modify react render method quit check mechanism", "num": "12677", "d": "4/2018"}, {"title": "amp amp", "body": "amp amp report bug current behavior safari browser ca nt run app chrome browser amp firefox browser ok expected behavior running main modern browsers", "num": "12675", "d": "4/2018"}, {"title": "validatedomnesting incorrectly validates table children", "body": "want request feature report bug bug current behavior shows warning element element direct child current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example please find example copied mdn first html example open browser console run console see warning expected behavior according mdn could child examples pages expect warning appear versions react browser os affected issue work previous versions react issue found chrome ff may affect browsers prior versions", "num": "12674", "d": "4/2018"}, {"title": "duplicated key list strange behavior", "body": "list duplicated items document key must unique sure react concatenates string example expected key duplicated cheers", "num": "12673", "d": "4/2018"}, {"title": "improve warning message failure initialize using", "body": "want request feature report bug bug current behavior warning failure initialize state using clear could component produces warning mycomponent properly initialize state construction expected state object undefined warning resolved adding either class definition constructor using see detail warning message counterintuitive since warning specific use triggered state lifecycle methods state initialization nt required state methods like would make sense mention explicitly warning proposal new warning message mycomponent component state must initialized using getderivedstatefromprops expected state object undefined versions react browser os affected issue work previous versions react react gt", "num": "12670", "d": "4/2018"}, {"title": "detect clicks elements inside google map infowindow react", "body": "created div element inside google map infowindow using reactdomserverrendertostring trying register click div however seem register click elements inside infowindow tried divinnerhtml infowindowcontent f content wrapped backticks tag works seem use custom component tag carousel inside wrong divs clickable created reactdomserverrendertostring issue simplified code const map new googlemapsmap thisrefsmap zoom initialzoom center lat thispropsinitialpositionlat lng thispropsinitialpositionlng const marker new googlemapsmarker key fid label position lat flat lng flng map function infowindowcontent flat const content function infowindowclickhandler flat consolelog google map infowindow clicked f f", "num": "12668", "d": "4/2018"}, {"title": "get state parent child without passing state props", "body": "true get state methods parent component child using keyword class app extends component constructor props super props thisstate value render child component class child extends component constructor props super props render alert thispropsthatstatevalue return null", "num": "12667", "d": "4/2018"}, {"title": "react background image overlay opacity", "body": "find way set background image overlay opacity reactjs trying something like style url background jsx portfolio", "num": "12666", "d": "4/2018"}, {"title": "embed update rerender src property changes", "body": "want request feature report bug bug current behavior component renders child property retrieved endpoint depends props passed component property changes existing contents embed change fix component entirely replace something else instance loading state put new updated reproduced jsfiddle two trivia jsfiddles referred embed transitioning clicking button update embed despite property visibly updated devtools expected behavior changes content change versions react browser os affected issue work previous versions react reproduced unclear version jsfiddle using version macos beta", "num": "12665", "d": "4/2018"}, {"title": "question deal renderprops components callback hell", "body": "issue somewhat long eager goto deal renderprops components callback hell yes package awesome problems let show jsx import value reactpowerplug import adopt reactadopt aandb adopt mapper b b gt b want dynamic jsx import adopt reactadopt aandb adopt mapper b b gt b gt b fact bug least nt cache component returned react always treat like different component rebuild dom well bug example really dynamic want really dynamic assume fixed bug dom rebuild even fixed expand influence vdom structure vdom structure changed dom rebuild way deal renderprops components callback hell thought came jsx import react purecomponent component react class result extends component render return thispropschildren export class compose extends component constructor props super props thisskipforce true componentwillupdate thisskipforce true render const mapper children thisprops const mapperisarray objectprototypetostringcall mapper object array const arg mapperisarray return objectkeys mapper map key gt const value mapper key const withkey mapperisarray null key return typeof value function reactcreateelement reactcloneelement value withkey args gt arg key args maybe use args rather args thisskipforce thisforceupdate return null gt thisskipforce false return children arg works relies fact last child render last fact defined react spec relies deprecated better methods", "num": "12664", "d": "4/2018"}, {"title": "skip second argument reactcreateelement", "body": "want request feature report bug feature current behavior nt needed still pass second argument proposal allowed omit second argument allowing import react react import foo foo import bar bar const reactcreateelement const app gt div hello foo ok p foo bar key hi span heya demo code currently naively use", "num": "12663", "d": "4/2018"}, {"title": "bug keyed fragments traversed reactchildrenmap function", "body": "want request feature report bug bug current behavior keyed fragments traversed reactchildrenmap current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open console provided example see array traversed keyed fragment expected behavior per documentation keyed fragments traversed reactchildrenmap function array versions react browser os affected issue work previous versions react react tested latest chrome browser codesandbox example universal react project node", "num": "12662", "d": "4/2018"}, {"title": "returning fragment undefined children render causes invariant violation", "body": "want request feature report bug reporting bug current behavior react reports invariant violation method class component returns children current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example example codesandbox jsx import react react import render reactdom class app extends reactcomponent render return undefined render documentgetelementbyid root expected behavior would expect program render nothing contexts children react allowed renders fine children returned method class component versions react browser os affected issue work previous versions react tested version", "num": "12661", "d": "4/2018"}, {"title": "question integrate react library react", "body": "requirement integrate one app created using react existing app still react need help understanding points risk integration probable solution issue due incompatibility used rollup create cjs library react app thanks", "num": "12660", "d": "4/2018"}, {"title": "bug clicked button error", "body": "want request feature report bug bug current behavior button click current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example clicked button occur error remove components onclick event js closetutorial e gt estoppropagation epreventdefault expected behavior versions react browser os affected issue work previous versions react react react browser chrome os", "num": "12659", "d": "4/2018"}, {"title": "question best way get element dom reference", "body": "preface writing popup component whose task positioned content next call b relative target next call b arrow optional next call arrow popup component like core positioning used create dropdown list tooltip something else resolve task need get dom reference b dom reference dom reference arrow go use realisation example sandbox source take props b arrow popup calculated put b dom note positioning use popperjs library problem flexibility want transfer popup component render function like useful smooth transitions one next animating parent component store custom inner structure nt know right way get reference b arrow maybe get b popup arrow thanks thanks", "num": "12657", "d": "4/2018"}, {"title": "createportal fails silently used outside render method", "body": "updated package work react used replaced nothing happened errors displayed wasted several hours understand could used anywhere example case used would great warning used outside render let people know wrong maybe consider adding note docs thanks", "num": "12653", "d": "4/2018"}, {"title": "mute componentdidcatch allow developers log", "body": "want request feature report bug feature current behavior child throws error inside error boundary hits error still logged console regardless handling inside expected behavior would nt make sense give fine grated control errors get logged bubble way error boundary motivation using error logging service rollbar sentry etc normally nt really needwant error bubble console production testing error boundary component feels bit funky right test runners like jest mock jsdom virtual console suppress error showing test results severity error caught specific error boundary might warning thus would throw consolewarn along already thrown error trycatch outside react would also handle logging catch rethrowing specific exception wonder opinion", "num": "12652", "d": "4/2018"}, {"title": "context provider root element causes omit output", "body": "want request feature report bug bug current behavior missing generated string causing existing valid dom cleared current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior markup root element missing versions react browser os affected issue work previous versions react sure", "num": "12651", "d": "4/2018"}, {"title": "question marking html elements testing", "body": "hi part component renders like jsx return yesterday tomorrow today iv using prop find elements testing enzyme like nt like much option comes mind clickable div make custom class name search class name search text function name div position makes tests fragile would like avoid mark html elements easy searching", "num": "12650", "d": "4/2018"}, {"title": "", "body": "want request feature report bug neither question current behavior currently seems unknown dom attributes boolean values passed exception data attributes aria attributes based docs looking code nt clear whether intentional bug came across currently server rendering pages attributes react using make work expected deleting would work however since lot attributes nt actual value set unknown passed happy open pr either update docs fix actually bug wanted verify first repro versions react browser os affected issue work previous versions react react", "num": "12649", "d": "4/2018"}, {"title": "render props amp getderivedstatefromprops issue", "body": "hi guys want request feature report bug possibly bug current behavior issue hoc update props pass child components example hoc component query data server data fetched passes use updated new props contrary happens called first time example code class extends reactcomponent render return class b extends reactcomponent static getderivedstatefromprops nextprops prevstate consolelog nextprops return null data obj empty filled response versions react browser os affected issue work previous versions react react thank", "num": "12646", "d": "4/2018"}, {"title": "read property changedbits undefined", "body": "want request feature report bug bug current behavior using new context api react native app ends exception unfortunately unable provide viable reproduction environment tried codesandbox snack expo working fine happening react native app running android phone thing got screenshot debugger strangely enough code line would read would working correctly chance typo tsx export const rootcontext reactcreatecontext export const rootprovider rootcontextprovider export const app gt ok versions react browser os affected issue work previous versions react react reactnative windows", "num": "12645", "d": "4/2018"}, {"title": "onchange nt fire capturephase document listener underlying native event calls setstate", "body": "want request feature report bug bug current behavior checkbox fires onchange controlled component somehow related global event listeners setstate see sandbox example expected behavior checkbox fire onchange handler broken example react working example react version", "num": "12643", "d": "4/2018"}, {"title": "render errors overwrite previous html", "body": "want request feature report bug bug current behavior react render errors killed execution app would leave existing html page react existing html gets wiped white screen death expected behavior would much better user experience could configure existing html remained render failed app functionality would fail page would still users could use standard html links etc continue navigating cases may even notice app broke aware error boundaries proposed solution react however seem like great solution us two reasons need pepper lot across entire codebase get reasonable granularity restrict impact errors example whatever major code change app might hundreds components even get segment app may significant replaced error message unexpected error entire purpose page replaced error message far better us stop js execution leave user static html obviously bugs app fault fix always predictable example today tracked bug throwing exception safari private browsing mode tough issue anticipate difficult ensure app bugfree miss something outcome react catastrophic instead merely reduction user experience demo react code react", "num": "12642", "d": "4/2018"}, {"title": "react ssr image onload hydrate work chrome", "body": "want request feature report bug bug current behavior chrome seem fire image initial server side html fires safari firefox current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example example seen pull repo go console log image loaded occur chrome see log safari firefox changing file causes img onload trigger properly expected behavior expected behavior onload fire images initial server side html versions react browser os affected issue work previous versions react browsers chrome os x el capitan react versions react react", "num": "12641", "d": "4/2018"}, {"title": "traverse react tree", "body": "would like propose add method react today lot libraries relies walking react tree ssr used preload data styles whatever asking found bug loadable components fixed bug also react apollo probably libraries use strategy several questions good strategy tell good strategy could maintain expose react another package", "num": "12640", "d": "4/2018"}, {"title": "remote form submission via dispatchevent broken firefox", "body": "want request feature report bug bug current behavior following result called firefox click external submit via button one things love react smooths browser idiosyncrasies plagued web development many years rare find edge case like however pretty weird way submit form originally expected behavior seems like called maybe bug firefox react maybe better way compatible across browsers versions react browser os affected issue react firefox mac work previous versions react idea", "num": "12639", "d": "4/2018"}, {"title": "first pass context lost call return", "body": "really enjoying explorations building better compound components using experimental issue intended start discussion shortcomings current api ran experiments used leaf node yields data successful since solved run issues stability feature however compound component usage implement features layout often yields element render prop cases elements rendered parent context created first pass lost reproduction case found enduser components unaware use callreturn internally would expect see greetings instead default nt consider bug rather sideeffect using api however believe usecase valid one providing api supports would beneficial library authors share thoughts api discussion initially api called coroutine yield suggested subtree would yield later resume presumably api renamed suggestion would implement coroutineyield functionality continues rendering continuation children yield fiber course aware choices led current api input welcomed would function similarly current handler return children render instead returns aggregated value value passed second argument together yield element props index within coroutine element returned continuation reconciled yield fiber children preserving position tree thus also context accumulated coroutine yield note new api would strict superset current implementation imagine callreturn could written coroutine yield follows javascript const createcall children handler props gt createcoroutine createyield null props values index gt handler valuesprops valuesyields props reactchildrentoarray children props yields gt props yields props const createreturn value gt createyield value gt null dived reconciler implementation call return implementing api like seems feasible definitely willing give shot approach clear however aware decisions led current implementation exact impact performance increased tree traversals etc ccing sebmarkbage gaearon edit prototyped api codesandbox causes multiple renders using uses nasty traversals highly unstable illustrates idea outlined", "num": "12638", "d": "4/2018"}, {"title": "three functions", "body": "reactminjs version", "num": "12637", "d": "4/2018"}, {"title": "ca nt validate value prop context provider using proptypes", "body": "want request feature report bug sure bug feature request current behavior ca nt validate value prop context provider using proptypes see codesandbox example expected behavior expected proptypes violation warning console versions react browser os affected issue work previous versions react happy implement others also wish possible validate value context provider using proptypes would help someone pointed right direction though nt dug react internals much yet", "num": "12636", "d": "4/2018"}, {"title": "support performance measures production", "body": "want request feature report bug request feature like access api production build react collect timing measurements real users field suspect performance timing get expensive open suggestions make nicerpossible", "num": "12634", "d": "4/2018"}, {"title": "add react lifecycle diagram documentation", "body": "want request feature report bug feature sorta love see something similar included documentation page component lifecycles remember gaearon sharing found invaluable quick reference", "num": "12633", "d": "4/2018"}, {"title": "update component without rerender", "body": "reactjs doc says knowledge far way update ui create new element pass reactdomrender consider canvas component could update without rerendering example componentwillreceiveprops create new line canvas even shouldcomponentupdate retrun false canvas updated wrong", "num": "12632", "d": "4/2018"}, {"title": "gas", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12631", "d": "4/2018"}, {"title": "css transition dropin substitute", "body": "want request feature report bug report bug current behavior react app crashes current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example transition component replaced csstransition getting delay enter animation understand swap easily expected behavior used transition component versions react browser os affected issue work previous versions react chrome mac os x high sierra", "num": "12627", "d": "4/2018"}, {"title": "breaking change using getting lot ref string errors", "body": "want request feature report bug bug current behavior use new version getting lot error concerning set ref name component nt owner works fine sure code got stringent bug detecting things nt changed code work either way many third party libraries breaking change current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior work identical new thing maybe even larger rolling code back works normally versions react browser os affected issue work previous versions react", "num": "12626", "d": "4/2018"}, {"title": "nt call getderivedstatefromprops purecomponent props", "body": "want request feature report bug feature current behavior called purecomponent even props nt changed current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react hoping would nt called purecomponent props nt changed reason shouldntcould nt case", "num": "12619", "d": "4/2018"}, {"title": "support partial hydration static content", "body": "want request feature report bug feature current behavior hydrating serverrendered content difficult inefficient impossible example process rendering server significant work additional data may required data processing conversion custom templating localization content large product information news article resulting content highly dynamic changes state choice recreate within react paradigm recreate client however complicated servergenerated content often typically static delivering redundant copy static content client compare ignore hydration seems waste resources prohibitively expensive current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior instead additional complications recreating client hydration much easier accept content server asis tell hydrate leave alone may options nonhydrating ssr add new callback disable hydration component content javascript export default class nohydrate extends component return false avoid rerendering component hydrate shouldcomponenthydrate return false render server simply render content client never called server content accepted asis return thispropschildren access ssr content dom probably worst option though one definitely works currently use empty content actually works documented supposed considering way make work documenting may needs happen however could added behavior would look cleaner versions react browser os affected issue work previous versions react version sure working option worked supposed work future versions", "num": "12617", "d": "4/2018"}, {"title": "uncaught typeerror super expression must either null function undefined importing react reactdom", "body": "dependencies version helps simplest code hello world using react component import react react import reactdom reactdom class hello extends reactcomponent render return hello world reactdomrender documentgetelementbyid root using bundlejs html script bundle everything getting error thanks advance", "num": "12616", "d": "4/2018"}, {"title": "unexpected warning hydrating portal ssr", "body": "want request feature report bug bug current behavior given following simplified snippet jsx class hovermenu extends reactcomponent render typeof document undefined return null const root documentgetelementbyid root return reactdomcreateportal hello world root class para extends reactcomponent render return text valid exists following error shown hydrating ssr warning goes away update definition prefer double rendering caused nt quite understand error telling rendered serverside either case error particularly confusing dom even rendered inside dom wonder happening nested inside react expected behavior error thrown least error message clearer versions react browser os affected issue work previous versions react chrome react ssr next", "num": "12615", "d": "4/2018"}, {"title": "invalid value data prop expected behavior", "body": "per blog post react allows passing data attributes freely react macos chrome freely seems stop short functions replication steps behavior expected linksrecommendations silence disable welcome console errors stack traces printed three messages scroll whole page console every reload love find way around nt involve hacking app code react disable warning following closed thread console warn vs error led currently open thread warning output hooks currently trying negative lookaround regex filters chrome dev tools locking dev console process edit dev tools filter solved issue well enough leaving post case bug", "num": "12614", "d": "4/2018"}, {"title": "context null", "body": "want request feature report bug bug current behavior called context executed making impossible access statically defined class methods jsfiddle expected behavior would expect provided context class method defined example simple class static methods accessed", "num": "12612", "d": "4/2018"}, {"title": "react setstate callback called external npm packaged component", "body": "creating one npm package react setstate callback working npm package build used react tried react everything working fine help resolve issue appreciated", "num": "12611", "d": "4/2018"}, {"title": "", "body": "want request feature report bug neither question current behavior unable locate reacttestrenderer source tree created tree created contain generated html optional component property omitted confusing since react omit entirely generated html jsx element attributes whose value wanted confirm expected behavior assume understand case eg explicit test property expected behavior na versions react browser os affected issue work previous versions react react react test renderer browseros na worked previously na", "num": "12608", "d": "4/2018"}, {"title": "ismounted deprecated", "body": "get ismounted deprecated plain javascript react classes error dependencies wan na know problem reactnavigation", "num": "12605", "d": "4/2018"}, {"title": "nested context update longer", "body": "want request feature report bug bug current behavior nested context consumers seem update leaving higher updates stale expected behavior critical piece code composes multiple consumers one dynamic array context providers creates nested blob consumers receiver sitting end example first consumer fires get value returns subtree contains second consumer contains nt actually render looks like something contextconsumer prevents react alphas believe would render regardless wonder would possible forward changed values actual receiver ca nt call setstate versions react browser os affected issue work previous versions react react", "num": "12604", "d": "4/2018"}, {"title": "react migration issue", "body": "reactlib reactdomlib anymore getting error module found error resolve module reactdomlibreactinjection parts code used import domproperty reactdomlibreactinjection dompropertyinjectdompropertyconfig config please give alternative solution", "num": "12603", "d": "4/2018"}, {"title": "reactdom use coffeescript", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12602", "d": "4/2018"}, {"title": "put two root subroot items reactdomrender like case creating canvas", "body": "files rendered working fine canvas printed product page next files like fronted page product canvasas mentioned render pages time designing pages second canvas element printed way create canvas print files please suggest current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12597", "d": "4/2018"}, {"title": "question context provider state initialisation", "body": "consider component wrapping context provider js class valuewrapper extends reactcomponent constructor props super props thisstate value null setvalue thissetvalue setvalue value gt thissetstate value render gt consumer might want set default value first mounted way see using new api check existing value first render js class valueupdater extends reactcomponent state inputvalue handleinputchange e gt thissetstate inputvalue etargetvalue render gt value setvalue gt value setvalue thisstateinputvalue seems break golden rule updating state render method would immediately cause rerender ideally would able call context method component context render prop possible far tell docs suggest passing props another component tried initialisation component method would called every render surely would rerendered time better pattern trying use context inappropriately", "num": "12596", "d": "4/2018"}, {"title": "ca nt use asyncstorage fetch inside getderivedstatefromprops", "body": "trying migrate using using tab navigation adding property state screen file tab detect correct index load value storage fetch data api currently inside tab screen using new static function nt seem able update state within asyncstorage fetch imported service wrapper function fetch call api tried using fires first time tab loaded need storage api call every time user changes tab", "num": "12595", "d": "4/2018"}, {"title": "getting warning switching development production", "body": "scripts include html get thoughts thanks", "num": "12593", "d": "4/2018"}, {"title": "add unicitykey save react rendering subpart dom nt changed", "body": "gt new feature proposal today want save react rendering sub part parent choice create nested implement shouldcomponentupdate useful case apps little likely written multiple nested components since every dom part unique splitting app components would verbose main component page inline dom render function time depending app state big dom nodes could save rerendering idea able use kind unicitykey would tell react okay unicitykey changed need go deeper node unchanged example would inline version", "num": "12592", "d": "4/2018"}, {"title": "multiple renderers allow context", "body": "currently nt allow multiple renderers share context however relax constraint allowed long rendering nt interleaved pop provider also pop sigil need run fabric rn time", "num": "12589", "d": "4/2018"}, {"title": "property", "body": "puzzled using property access dom component property access object purpose property", "num": "12588", "d": "4/2018"}, {"title": "controlled nt update firefox also setting state another event", "body": "reporting bug current behavior selecting value react controlled select box firefox selection nt change occurs mousedown handler also generates state change seems occur mousedown handler sets state rerenders dropdown onchange event handler fires onchange triggered old select value react provided old state rerender codepen modified example docs steps reproduce run example firefox open dropdown select different value eg grapefruit observe new value selected expected behavior select dropdown updated value available react versions react browser os affected issue work previous versions react tested firefox development edition normal osx using react also encountered windows sure exact versions tested chrome everything works intended osx windows", "num": "12584", "d": "4/2018"}, {"title": "anchor keepdefault", "body": "way keep anchor default click handling along using onclick trying make controlled link open new tab", "num": "12583", "d": "4/2018"}, {"title": "check", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12582", "d": "4/2018"}, {"title": "question react components", "body": "click react component twice new requisition made observed opening chrome networking tab clicking twice element example happens react version", "num": "12581", "d": "4/2018"}, {"title": "question getderivedstatefromprops previous props", "body": "read article update async rendering little doubt ie doest receive prevprops one arguments situations useful compare prevprops nextprops article suggests ie may notice example propscurrentrow mirrored state imho wrong couple reasons first one breaks single source truth rule also inconvenience keeping propscurrentrow statelastrow sync second one think summarized ie key dry repeat figure absolute minimal representation state application needs compute everything else need ondemand suggestion basically seen since dawn react copying prop state around need looks bit wrong suggestion would add argument", "num": "12577", "d": "4/2018"}, {"title": "", "body": "", "num": "12576", "d": "4/2018"}, {"title": "feature request umd version reacttestrenderer", "body": "react reactdom cjs umd versions available possible create umd version reacttestrenderer well", "num": "12572", "d": "4/2018"}, {"title": "reactjs logo license", "body": "unable find license react logo anyone know license", "num": "12570", "d": "4/2018"}, {"title": "silence noisy missingkey warning nt apply", "body": "like request feature would enable us silence missingkey warning since nt apply serverside applications example library using react serverside templating using demo app ideally able set property silence quite noisy crowds dev logs listening lt get gt get lt get users warning child array iterator unique key prop check toplevel render call using see information userrow userslist div body html master warning child array iterator unique key prop check toplevel render call using see information li paginate userslist div body html master span li ul nav paginate userslist div body html master gt get users lt get users gt get users lt get users gt get users lt get userstesting warning child array iterator unique key prop check toplevel render call using see information usersshow div body html master gt get userstesting lt get users gt get users lt get userstestingedit gt get userstestingedit lt get warning child array iterator unique key prop check toplevel render call using see information p homepage div body html master button div div form newmessagepanel div div homepage div body html master warning child array iterator unique key prop check toplevel render call using see information messagepanel div div homepage div body html master gt get lt get gt get lt post gt delete lt get gt get", "num": "12567", "d": "4/2018"}, {"title": "add isstatelessfunctioncomponent reactis package", "body": "want request feature report bug want request feature current behavior api expected behavior writing hoc could forward ref wrapped component according react specification ref allowed given stateless function component need api tells whether component sfc course add forwarded ref component without check whether sfc leave runtime error typescript language prevent static analysis warnings wish util api solve problem contribute component type narrowing new apis suggestion reactisisstatelessfunctioncomponent reactisisclasscomponent versions react browser os affected issue work previous versions react react amp reactis", "num": "12566", "d": "4/2018"}, {"title": "warning getderivedstatefromprops valid state object null must returned returned undefined", "body": "want request feature report bug depends look sure looks like bug current behavior nt explicitly return anything warning output console warning getderivedstatefromprops valid state object null must returned returned undefined expected behavior treat really inconvenient add extra unneeded statement end unnecessary complication code adding noop line making everybody code less clean reason treat versions react browser os affected issue work previous versions react", "num": "12562", "d": "4/2018"}, {"title": "reactdomrender calls rerender context consumers unnecessarily", "body": "want request feature report bug bug current behavior subsequent calls tree causing consumers rerender even provided value static amp reference static primitive type whereas normal rerender caused ie nt cause situation occurs update blocker provider amp consumer thysultan provided excellent demo expected behavior calls behave rerenders caused tree correctly reconciled recreated scratch logical nested rerenders avoided versions react browser os affected issue work previous versions react react", "num": "12561", "d": "4/2018"}, {"title": "react onclick event firing samsung native browser", "body": "click firing samsung native browser", "num": "12560", "d": "4/2018"}, {"title": "unexpected warning use getderivedstatefromprops", "body": "want request feature report bug bug current behavior v use method controlled component value input field get warningerror says switching controlled uncontrolled vice versa remove error goes away current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example import react component react class usersettings extends component constructor props super props handlechange e thissetstate etargetname etargetvalue handleupdateuser e epreventdefault const updateuser uid thisprops updateuser uid thisstate static getderivedstatefromprops nextprops return firstname nextpropsuserfirstname lastname nextpropsuserlastname email nextpropsuseremail render const firstname lastname email thisstate return settings thispropsuserauthstatus first name last name email export default usersettings expected behavior nt expect get warning versions react browser os affected issue work previous versions react react os mac ossierra browser chrome", "num": "12558", "d": "4/2018"}, {"title": "webpack package react development mode popprovider error", "body": "want request feature report bug bug current behavior hi used webpack package react reactdom problem compiling reactdomdevelopmentjs problem browser opened reactdomdevelopmentjs file problem sentence reactfiberscheduler function discovered problem occurs development mode problem production mode current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example tried pack react reactdom webpack webpack devserver problem webpackconfigjs javascript const webpack require webpack path require path extracttextplugin require extracttextwebpackplugin htmlwebpackplugin require htmlwebpackplugin uglifyjsplugin require uglifyjswebpackplugin const publicdir dlldir pathresolve dirname dll appdir pathresolve dirname scripts rootdir pathresolve dirname builddir pathresolve dirname build styledir pathresolve dirname stylesheets manifestdir require pathresolve dirname const port const webpackdevconfig mode development devtool sourcemap entry index output publicpath publicdir filename name hash js path builddir optimization minimize true minimizer new uglifyjsplugin sourcemap true uglifyoptions compress unused false deadcode false warnings true output comments true resolve modules nodemodules appdir dlldir externals jquery jquery module rules test js x include appdir dlldir styledir use loader babelloader test css use extracttextpluginextract fallback styleloader use loader cssloader options importloaders loader postcssloader publicpath styledir test pngjpgjpegbmpgif use loader urlloader options limit loader imagewebpackloader plugins new webpacknoemitonerrorsplugin new webpackdllreferenceplugin manifest manifestdir context rootdir new extracttextplugin name hash css new htmlwebpackplugin publicpath publicdir filename indexhtml template chunks index inject body devserver host port port proxy historyapifallback true moduleexports webpackdevconfig expected behavior normal operation versions react browser os affected issue work previous versions react", "num": "12555", "d": "4/2018"}, {"title": "setstate always triggers componentwillreceiveprops", "body": "hi since react every triggers behavior breaking change project causes lot problems normal behavior bug also triggers new method", "num": "12554", "d": "4/2018"}, {"title": "meta bringing flow types line apis", "body": "hi realize react team nt work flow directly react typings live however currently large gaps flow support new apis thought might good raisetrack benefit people searching react tracker filed issues flow repo missing typings nt outstanding prs x prefixed lifecycles commit x commit x commits x pr pr pr pr pr feel free close issue nt think useful maybe react team knows someone flow team help give priority libdef updates especially prs", "num": "12553", "d": "4/2018"}, {"title": "react context api typeerror set property currentvalue undefined", "body": "want request feature report bug bug current behavior using new context api getting error versions react browser os affected issue work previous versions react mycontext provider consumer consumer context gt contextdata return thispropschildren return null render return context gt thisconsumer context sure bug react something correctly", "num": "12552", "d": "4/2018"}, {"title": "new context provider may block old context propagation children constant", "body": "want request feature report bug bug current behavior seems children newstyle context constant block updates oldstyle context providers propagating consumers sandbox demonstrates issue clicking button number correctly increment update propagated button colors button clicked causes update newstyle copy source code sandbox jsx import proptypes proptypes import react react import reactdom reactdom class root extends reactcomponent constructor props super props thisstate count thiscountup thiscountupbind getchildcontext return thiscontext count thisstatecount countup thiscountup render return thispropschildren countup thissetstate count gt count count rootchildcontexttypes count proptypesnumberisrequired countup proptypesfuncisrequired const ctx reactcreatecontext class extends reactcomponent constructor props onclick void super props thisstate color randomhexcolor newcolor thisnewcolorbind render return newcolor const color randomhexcolor thissetstate gt color function randomhexcolor const colorstr mathfloor mathrandom mathpow tostring return slice colorstrlength colorstr class extends reactcomponent render return ctx gt class extends reactcomponent render return count proptypesnumberisrequired countup proptypesfuncisrequired reactdomrender documentgetelementbyid root expected behavior oldstyle newstyle context updates coexist versions react browser os affected issue work previous versions react also broken seems happen constant happens children provided first call updated directly use instead problem happen also problem using production optimization hoists constant elements outside component specified children constant would even defeat fixworkaround example", "num": "12551", "d": "4/2018"}, {"title": "feature portals virtual dom", "body": "like idea portals proposal extend idea short special element react allow connect portal element without real id dom element something like jsx const app gt lt gt const somewidget gt reactdomcreateregion somewidget guid idea portal region anywhere virtual dom rendered asynchronously needed currently working project uses custommade library rxjs based frintjs make something like works libraries look connect widgets react application dynamically props needed", "num": "12550", "d": "4/2018"}, {"title": "upgrade babel", "body": "babel still beta presumably released soon get head start upgrading perhaps stable enough us upgrade even final release one benefit could use jsx fragment syntax tests yay reznord volunteered pick", "num": "12548", "d": "4/2018"}, {"title": "broken link react jsx tag descriptions", "body": "current behavior link address linked page regarding reactspecific tag leads page link following paragraph also reactspecific attribute dangerouslysetinnerhtml used directly inserting html strings component", "num": "12547", "d": "4/2018"}, {"title": "reactdom development bundle uses arrayfrom", "body": "want request feature report bug bug current behavior currently versions ship reactdomdevelopmentjs containing usage available certain reactsupported browsers like causes breakage particular code paths taken browser ran using current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example reproduction see hello world crash show nothing expected behavior would use document polyfill required versions react browser os affected issue work previous versions react internet explorer", "num": "12540", "d": "4/2018"}, {"title": "support hydration html minification", "body": "want request feature report bug report bug current behavior replaces dom ssr page served two sibling links page attributes wrongly set little repl replicate behaviour server responds html correct right hydration first changed whitespace artifacts added expected behavior first changed versions react browser os affected issue work previous versions react react chrome macos", "num": "12536", "d": "4/2018"}, {"title": "build reactjs working", "body": "react js project working run npm start command create build upload server working also set path homepage packagejson file buildzip build folder srczip src folder project unable find issue think happen router homepage name myapp version private true dependencies datatablesnet datatablesnetdt react reactbootstraptable reactdom reactrouterdom reactscripts reactable scripts start reactscripts start build reactscripts build test reactscripts test envjsdom eject reactscripts eject", "num": "12535", "d": "4/2018"}, {"title": "improve reactdom uppercase html warning", "body": "want request feature report bug improvement requestdiscussion current behavior rendering reactdom foobar using uppercase html always use lowercase html tags react expected behavior warning message improved make obvious fix issue different use cases example obvious message custom components add dashes first letter capitalized actually react component idea open suggestions warning versions react browser os affected issue work previous versions react master", "num": "12527", "d": "4/2018"}, {"title": "provide way detect infinite component rendering recursion development", "body": "want request feature report bug feature possibly bug current behavior trying new context api project awesome however haste start using managed stumble situation every time would try render certain component making use different contexts app would completely freeze thing would let get error state forcefully kill process via chrome task manager nothing would logged console app would completely freeze opened task manager saw cpu spiked every time would go component way could stop crash tab finally threw statements saw entered infinite loop providers managed get app stop crashing still unsure exactly happening sure using api incorrectly somehow confusing problem diagnose error checking would incredibly useful expected behavior would beneficial sort checks place similar happens many calls happening closely call example way instead freezing everything permanently app could least crash report sort information help realize gone wrong versions react browser os affected issue work previous versions react react chrome", "num": "12525", "d": "4/2018"}, {"title": "unmountmount console warning changed behaviour react", "body": "want request feature report bug bug current behavior migrating large codebase react following messages started showing console warning unmountcomponentatnode node attempting unmount rendered react toplevel container instead parent component update state rerender order remove component printwarning warning unmountcomponentatnode handleclick inline babel callcallback invokeguardedcallbackdev invokeguardedcallback invokeguardedcallbackandcatchfirsterror executedispatch executedispatchesinorder executedispatchesandrelease executedispatchesandreleasetoplevel foreachaccumulated runeventsinbatch runextractedeventsinbatch handletoplevel batchedupdates batchedupdates dispatchevent interactiveupdates interactiveupdates dispatchinteractiveevent warning render replacing reactrendered children new root component intended update children node instead existing children update state render new components instead calling reactdomrender fully understand tracked unmountingmounting components event click see order reproduce click header trigger warnings example running react warningsissues present seems like function unmounts component asynchronously event debugging executing method root still populated html internal react properties still present probably makes following call problematic current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example see order reproduce click header trigger warnings expected behavior warnings present console like react versions react browser os affected issue work previous versions react osbrowsers bug present react works expected react", "num": "12524", "d": "4/2018"}, {"title": "getderivedstatefromprops suppress state initialized warning", "body": "want request feature report bug either bug feature depending team sees current behavior presence suppress warning initialized even always called even first render jsx class foo extends reactcomponent static getderivedstatefromprops props return propsa uncommenting constructor silences warning redundant work constructor props super props thisstate propsa render slightly silly example return thisstatea expected behavior always called even initial render maybe considered initialized state means second argument allowed undefined would first call state initialized user change would breaking change depends user breaking pattern initializing state constructor although brings memories alternatively called initial render class implementer would call getderivedstatefromprops spread result initial state definition clearly possible anymore versions react browser os affected issue work previous versions react", "num": "12523", "d": "4/2018"}, {"title": "react constructor trigger twice strict mode", "body": "want request feature report bug bug current behavior constructor trigger twice strict mode current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior behavior like normal mode versions react browser os affected issue work previous versions react react chrome latest macos", "num": "12522", "d": "4/2018"}, {"title": "whitelist unknown tag warning", "body": "want request feature report bug feature current behavior warning expected behavior show warning versions react browser os affected issue work previous versions react react sure whitelisted used stuff maybe like workaround mind something related", "num": "12520", "d": "4/2018"}, {"title": "react property createref exist type typeof react", "body": "according new docs creating refs upgraded get errors reactcreateref property createref exist type typeof react", "num": "12519", "d": "4/2018"}, {"title": "event listener attached still called calling", "body": "want request feature report bug bug current behavior event listener attached still called calling target example codesandbox link js class app extends reactcomponent componentdidmount documentaddeventlistener click thishandleclickondocument windowaddeventlistener click thishandleclickonwindow componentwillunmount documentremoveeventlistener click thishandleclickondocument windowremoveeventlistener click thishandleclickonwindow handleclickondocument e gt consolelog handling event document handleclickonwindow e gt consolelog handling event window render return console log expected behavior wo nt called log console versions react browser os affected issue work previous versions react react browser chrome", "num": "12518", "d": "4/2018"}, {"title": "userlist component show browser ul children element thing components folder", "body": "want request feature report bug bug current behavior import sc soundcloud import react react import reactdom reactdom import provider reactredux import createstore applymiddleware redux import synchistorywithstore reactrouterredux import combineforms createforms reactreduxform import browserrouter router route browserhistory reactrouterdom import thunk reduxthunk import promise reduxpromise import createlogger reduxlogger import allreducers reducers import app componentsapp import clientid redirecturi constantsauth furthermore inside appjs following written produces browser console world causing browser npm start display expected behavior designed many components expecting blank page versions react browser os affected issue work previous versions react another comprehensive representation problem", "num": "12517", "d": "4/2018"}, {"title": "warning keeps appearing", "body": "want request feature report bug might bug current behavior replaced componentwillreceiveprops newly added getderivedstatefromprops warning keeps appearing console doubted higher order component first sight removed coupling component higher order wrapper also removed render effort remove side effects apparently componentwillreceiveprops component get rid warning thing could explicitly assign null warning gone missing something bug also wish warning could optionally turned development environment considering legacy react libraries still use injected eg hoc javascript class rootcontainer extends reactcomponent constructor super thisstate thiscomponentwillreceiveprops null way turn warning static getderivedstatefromprops nextprops prevstate return prevstate render return thispropshistory thispropschildren null export default rootcontainer export default withrouter connect makemapstatetoprops rootcontainer current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior warning least turn option even environment versions react browser os affected issue work previous versions react react reactdom reactredux reactrouterdom update apr reacthotloader cause warning", "num": "12516", "d": "4/2018"}, {"title": "provide better error circular context consumer", "body": "want request feature report bug requesting feature current behavior named consumer child component name parent component go infinite loop change name child component render without problems current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior showing error message warning console", "num": "12515", "d": "4/2018"}, {"title": "get width amp height", "body": "need get width amp height image tried way need get dimentions mount browser resizing", "num": "12514", "d": "4/2018"}, {"title": "setstate method clarification", "body": "render method called every number properties set using setstate ca nt get parameter pass setstate saying nt rerender component setstate method call callback function setstate setting state render called twice found calling twice optimized", "num": "12513", "d": "4/2018"}, {"title": "createref missing flow typings", "body": "want request feature report bug bug current behavior using flow complains missing react expected behavior flow complain versions react browser os affected issue work previous versions react react", "num": "12512", "d": "4/2018"}, {"title": "running npm start run react app browser shows page unresponsive", "body": "want request feature report bug yes current behavior start createreactapp running npm start browser gives aw snap something went wrong although get error running chrome slowly show anything expected behavior see main page versions react browser os affected issue work previous versions react using react reactdom react something want say yarnlock packagelockjson using bpm yarn interchangeably", "num": "12511", "d": "4/2018"}, {"title": "react umbrella", "body": "x fragment false positive warning fix fixed x big dev mode performance regression fixed x error handling bugs related replaying fixed", "num": "12509", "d": "4/2018"}, {"body": "measuring production version development known issue although clear leak per seems like takes browser collects listeners", "d": "4/2018"}, {"body": "gaearon measuring development version yes listeners take windows tests tomorrow well production build mac thanks details", "d": "4/2018"}, {"body": "problem single app multiple root components rjs rendered since single context used consume value nt true multiple instances context supported react tree use value provided closest parent putting example jsfiddle fact work text values displayed correctly", "d": "4/2018"}, {"body": "passed object root components testing led believe silly apologies bothering write fiddle test thanks time", "d": "4/2018"}, {"body": "sure error coming coming react maybe opinionated linter overzealous enforcing prop types close hope get reopened likely able help", "d": "4/2018"}, {"body": "clarify think specific react buildtime error react library runs runtime sorry tautology failed build looks like either linter custom loader", "d": "4/2018"}, {"body": "also wonder developers expect functionaschild always rerendered dom like functional components rerendered depdending content returns", "d": "4/2018"}, {"body": "hey use issue tracker bug reports feature requests support question please check community support resources", "d": "4/2018"}, {"body": "help", "d": "4/2018"}, {"body": "gaearon okay helps partly one question want say problem intended expected otherwise hold performance user experience issues case make client different server want make client server space client performance issue generic case server client case server client different methods implement", "d": "4/2018"}, {"body": "provide fiddle please", "d": "4/2018"}, {"body": "see generally bug case however defaultvalue updated effect since value used fallback situations like form reset", "d": "4/2018"}, {"body": "jquense alright mean dx improvement opportunity close issue", "d": "4/2018"}, {"body": "yeah think warn without legit false positives", "d": "4/2018"}, {"body": "create reproducing case please links fiddles issue template example giving see would two nodes react would reuse dom node code", "d": "4/2018"}, {"body": "nothing react specific easily reproduced css inspector chrome firefox sites including nt use react among things makes content tags visible seeing nt know bug browsers react", "d": "4/2018"}, {"body": "nmain prevent", "d": "4/2018"}, {"body": "nt use nt familiar syntax looked mdn straightforward writeup certainly want anywhere ever use must supply everything would normally ua styles better working one standard css resets find various websites", "d": "4/2018"}, {"body": "facebook support approach similar jsxcontrolstatements future likely nt recommend approach might add support doexpressions jsx future give something similar spirit though facebook support approach like facebook warn developers using library due incorrect coverages thousands react libraries strange things ca nt warn every single one whenever asked always recommended trying recreate control flow react components issue consistent jest nyc since use babel ast clear issue exactly something related react repository close", "d": "4/2018"}, {"body": "questioner react version", "d": "4/2018"}, {"body": "something may wrong way resolving modules bundler config error getting straightforward something tried create element undefined maybe npm version broken local install wrong well would add render betting see also undefined well", "d": "4/2018"}, {"body": "close error pretty clear assuming element errors set debugger without sourcemaps enabled see something help react", "d": "4/2018"}, {"body": "explain measurements calling sufficient updates processed react exits top call stack frame browser paint final state even update", "d": "4/2018"}, {"body": "nt looked yet first question whether difference significant production mode fiddles showing running development mode", "d": "4/2018"}, {"body": "seen difference similar production mode start really see higher element counts played around little trying understand different usage patters impact frequency updates require dom change example updates vs lots mounting amp unmounting components far nt really isolated anything particularly useful", "d": "4/2018"}, {"body": "calling reactdomrender many many times seems meaningfully worse performance rendering many elements within single react root sure understand react hood correctly let think call need destroyreplace contents target node meanwhile use single root virtual dom take care dom operations know dom mutations pretty expensive would nt surprised", "d": "4/2018"}, {"body": "call reactdomrender need destroyreplace contents target node actually true understanding actually case repro examples actually rendered either case way number dom mutations nt wildly different said understand overhead root many roots might make batching scheduling worse nt know enough guts react implementation fully explain", "d": "4/2018"}, {"body": "nt difference dom mutations", "d": "4/2018"}, {"body": "generally recommended adds unnecessary level indirection using javascript ternary statements directly ya free whatever works team", "d": "4/2018"}, {"body": "thanks response jason complex issue coverage tool able cover branches correctly please take look report link istanbuljs officially recommend jsxcontrolstatement react bug lot future developers might run issue fully migrate jsxcontrolstatements jquense thanks", "d": "4/2018"}, {"body": "edited answer explain", "d": "4/2018"}, {"body": "react ca nt guess name declaring code probably make possible specify manually react devtools", "d": "4/2018"}, {"body": "thanks smiley", "d": "4/2018"}, {"body": "size prop number think true inputs selects necessarily true rest html tags web components html tags attribute except inputs selects web components seeing issue", "d": "4/2018"}, {"body": "airamrguez attribute html attribute something react provides according html spec allowed elements", "d": "4/2018"}, {"body": "gaearon nt know wrote rest html tags bad example provided works ok add something nt seems like valid size nt work example value works yes yes something changed version version aweary suppose fine filter props passing appropriate values using html tags suppose web components size attribute anything wrong think", "d": "4/2018"}, {"body": "web component code path nt reject attributes bug", "d": "4/2018"}, {"body": "bug add something like please send pr", "d": "4/2018"}, {"body": "ok work tomorrow heading bed quick response", "d": "4/2018"}, {"body": "could nt wait", "d": "4/2018"}, {"body": "running similar problem testing components render nodes using feature forward refs hocs usecase working library exports components returned hoc using consumers import components use codebase unfortunately consumer writes test uses tries nothing found created codesandbox example illustrate problem librarytheme librarybutton consumerjs js import button librarybutton const app gt click consumertestjs js import button librarybutton import app consumer render button says click gt const root testrenderercreate find anything const button rootfindbytype button expect buttonpropschildren toequal click look returned entry example means consumers write tests find assert things components without using test works expected familiar package feeling treat components created similar way functionalclass components let know help fix", "d": "4/2018"}, {"body": "much different jsx function bomb return reactdomrender documentgetelementbyid root get render prop guess need careful", "d": "4/2018"}, {"body": "xizario thanks nice example though less realistic imo unless nt want behave like purpose", "d": "4/2018"}, {"body": "closing duplicate thanks", "d": "4/2018"}, {"body": "issue nt special logic context passing function case nt expect functions works regular react nodes perhaps could show warning encounters something nt react node either case deeply cloning react trees like sounds like trying something react nt designed need", "d": "4/2018"}, {"body": "thanks delaying evaluation child properties parent ready provide context evaluation example expression language javascript evaluated remotely control child number children child becomes internally something like accomplish parent visits children transforms prefixprop property containing expression prop property contains expression value cloning approach found alter component properties course context consumers cloned properties alter know use functionaschild render functions similar delay evaluation designing prototyping library users come html jsp often novices beyond html expression language probably appreciate notation besides forget space function confused quickly comprehend form either context consumers also use functionaschild problem early work still considering options somehow want arrive clean parentchild notation like first quote probably write babel plugin transforms clean notation functional one maybe missing something appreciate input would really like users leave jsp adopt react notation cryptical happen", "d": "4/2018"}, {"body": "another idea toying functional parent probably returning component kind hoc child contain contextparent calls course parent could use context consumer render component returns context prop dropped problem parent component access react context evaluate knowledge access react context unless returns component possible actually trying set property therefore believe accessing react context outside components would ideal something like remember right struggling tried invoke consumerrender manually using test framework nt get anything meaningful ps first notation may seem cryptical actually quite familiar current jsp form think sell users", "d": "4/2018"}, {"body": "think might bug", "d": "4/2018"}, {"body": "agree something like would nice", "d": "4/2018"}, {"body": "gaearon think using either directly avoids need call equivalent example would nt throw warnings find easier reason called single method sure nt antipattern though case component get unmounted function runs case would throw error believe", "d": "4/2018"}, {"body": "thanks chance could condense findings small isolated example brief description lot sift", "d": "4/2018"}, {"body": "gaearon description issue video updated example simple small app present", "d": "4/2018"}, {"body": "bug", "d": "4/2018"}, {"body": "fix", "d": "4/2018"}, {"body": "axules thanks great reproducing case extremely helpful", "d": "4/2018"}, {"body": "perhaps key question suppose elements returned embedded component code portable code slower created please document", "d": "4/2018"}, {"body": "could please file documentation repo", "d": "4/2018"}, {"body": "done", "d": "4/2018"}, {"body": "clarify time means imagine happening dom apis react side", "d": "4/2018"}, {"body": "hey dan yeah suppose way would set inner html title instead removing fragment node children dom node removal steps called unexpected order may work better examples assumption series events children parent fragment removed would componentwillunmount componentwillunmount child node removed child node removed reality componentwillunmount child node removed componentwillunmount child node removed let know think michael thu apr dan abramov notifications githubcom wrote clarify time means imagine happening dom apis react side receiving authored thread reply email directly view github mute thread", "d": "4/2018"}, {"body": "run version using", "d": "4/2018"}, {"body": "run run version", "d": "4/2018"}, {"body": "depend yarn please update", "d": "4/2018"}, {"body": "looks like issue opera mini specifically rightly noted place use lines specifically check object thus definitely undefined could theory null seeing either inclined think opera mini specific transformation issue nt think something could fix let know suggestions", "d": "4/2018"}, {"body": "thanks gaearon find bizarre order loading way would impact must transform code proxy client", "d": "4/2018"}, {"body": "yeah looks like bug", "d": "4/2018"}, {"body": "clones child gives include children end giving three children child probably want something like equivalent without restread syntax", "d": "4/2018"}, {"body": "ca nt guess want default literally clones element including keeping reference children typically people want tends used tweaking prop otherwise keeping content default default produce equivalent element", "d": "4/2018"}, {"body": "oh got pass parent child course contain property well bring parent children every child spasibo stopping clarifying gaearon", "d": "4/2018"}, {"body": "test seems way describe question work expected extra work keep consistency write template client parse get initial state set work", "d": "4/2018"}, {"body": "os windows chrome ok safari error like questions", "d": "4/2018"}, {"body": "polyfill babel amp polyfill", "d": "4/2018"}, {"body": "reactrouter bug", "d": "4/2018"}, {"body": "version test browser really old polyfill upgrade safari newest version", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "thejian sorry nt mac think bug modify source code amp recompile", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "asked one colleagues still ca nt run app", "d": "4/2018"}, {"body": "xgqfrmsgildata bug react need support old browsers use polyfill", "d": "4/2018"}, {"body": "used still work", "d": "4/2018"}, {"body": "react contain code probably coming another library fbjs dependency react particular module appear used", "d": "4/2018"}, {"body": "far know problem nt ca nt html plenty things html browsers insert dom node fact example mdn shows look code tbody html simple table header first name last name john doe jane doe look dom structure browser creates node automatically parsing html past used issue react used initial markup insertion setting react would set html browser would insert node middle confusing breaking react currently react nt use initial rendering specific problem gone would however still problem use server rendering hydrate html react needs move using future reason warning valid hopefully following present difficulties", "d": "4/2018"}, {"body": "expected duplicate keys check console see warning exact behavior keys unique components maintain identity across updates nonunique keys may cause children duplicated andor omitted behavior unsupported could change future version", "d": "4/2018"}, {"body": "subsequently read reactdomserverrendertostring activate handlers abandoned route however correct please let know make work thanks", "d": "4/2018"}, {"body": "rendertostring handle event handlers intended produce markup rehydrated react wires event handlers produce plain html inso also nt handle events since need javascript counterpart", "d": "4/2018"}, {"body": "would nt recommend component needs data pass explicitly", "d": "4/2018"}, {"body": "thanks", "d": "4/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "4/2018"}, {"body": "verified problem exists react dom issue", "d": "4/2018"}, {"body": "able change src already rendered embed element plaing js code change content embed object think solution fully recreate embed object new src", "d": "4/2018"}, {"body": "think solution fully recreate embed object new src workaround accomplishes without loading states would set embed source", "d": "4/2018"}, {"body": "closing dom works force react recreate element using keys", "d": "4/2018"}, {"body": "nt recommend use kind metaprogramming obscure render prop composition tucking away making even harder debug see issues like indeed order matters reconciliation longer term ideas reduce need nesting common cases ready share yet likely something within year announce rfc repository ready feel free watch cheers", "d": "4/2018"}, {"body": "like make proposal breaking api change please open rfc", "d": "4/2018"}, {"body": "far understand intentional", "d": "4/2018"}, {"body": "yup render nothing need intentionally return reason error suggests reduce possible bugs someone forgetting render explicit clearer signal want render nothing vs forgot return something", "d": "4/2018"}, {"body": "please note example gave minimal test case reproduces issue actual program exposed issue fragment created constant computed value ends cases consider following almost identical program jsx import react react import render reactdom class app extends reactcomponent render return null render documentgetelementbyid root program cause invariant violation yet return render nothing nt case also cause invariant violation following example also renders nothing without error jsx import react react import render reactdom render undefined documentgetelementbyid root treated differently returned method seems counter intuitive rate thanks responding bug quickly comment issue", "d": "4/2018"}, {"body": "hard say advance definitely might issues example events bump issues consider putting inner app iframe isolate fully", "d": "4/2018"}, {"body": "provide information creating reduced test case ca nt reproduce", "d": "4/2018"}, {"body": "take one", "d": "4/2018"}, {"body": "eduardobudant nothing take koansang nt provided enough information issue follow going close", "d": "4/2018"}, {"body": "issues board mostly used reporting bugs issues try taking look support board seek help sources hand tried using using work tooltips fit use cases", "d": "4/2018"}, {"body": "sorry saw labels thought right place question ok go forum question solve tooltip tasks clear react way think thanks", "d": "4/2018"}, {"body": "nt know right way get reference b arrow reason ca nt provide refs part render callback", "d": "4/2018"}, {"body": "reason knew dan would come open eyes yeah absolutely solves problem thanks", "d": "4/2018"}, {"body": "used outside render rare legitimate cases right wo nt anything unless eventually produced value part result different jsx works sense nt warning like jsx rare legitimate reasons nt think special casing portals makes sense", "d": "4/2018"}, {"body": "docs nt clear please raise issue send pr improve thank", "d": "4/2018"}, {"body": "believe duplicate", "d": "4/2018"}, {"body": "technically bug using hydrate markup deprecated wo nt work react instead use explicitly tell react hydrate existing html wo nt depend whether exists", "d": "4/2018"}, {"body": "working example", "d": "4/2018"}, {"body": "nt think neat way fixing something like put reach know nt done single root effectively ca nt emit markup know whether root ca nt know subsequent child produces root rendered deeply maybe heuristic could use think would equally confusing produce edge cases close suggested migration path use completely sidesteps problem nt rely attribute", "d": "4/2018"}, {"body": "mark special attribute eg", "d": "4/2018"}, {"body": "thanks quick response seems like special attribute", "d": "4/2018"}, {"body": "blog post details mentions unknown booleans intentionally passed nt know handle cases people want leave dom cases want remove attribute want unknown attribute appear value dom specify string example", "d": "4/2018"}, {"body": "use componentwillreceiveprops nextprops updated new props contrary happens getderivedstatefromprops called first time nt understand means called initial render updates provide complete example", "d": "4/2018"}, {"body": "sorry dan issue fix upcoming release manshrugging thank response", "d": "4/2018"}, {"body": "thanks report fredyc renamed familiar rn sync acdlite change need propagated somewhere fredyc possible still older version react dependencies know common issue reactdom sure common rn", "d": "4/2018"}, {"body": "sure renaming actual issue look closely seeking checked react installed whole tree version try updating reactnative tomorrow however version released react unlikely relevance", "d": "4/2018"}, {"body": "sorry misread part see screenshot tries read also wrong type issue though renamed", "d": "4/2018"}, {"body": "would nt expect work specifies peer dependency", "d": "4/2018"}, {"body": "funny thing actually working even though peer dependency apparently always reliable anyone stumbling error update", "d": "4/2018"}, {"body": "expected internal naming changed versions rn work earlier versions work later versions use peer dependency guidance", "d": "4/2018"}, {"body": "actually html elements structured wrong way based elements like demo even supported react sure good idea add flexibility react would maybe beneficial add migration notes least would enforce people write better html", "d": "4/2018"}, {"body": "interesting bug adding global listener nt fire listener nt wrapper steps makes working changing global listener global listener everything works fine listener used checkbox controlled component adding global listener works fine third paramter document addeventlistener basically set everything works fine commented callback global event listener works fine", "d": "4/2018"}, {"body": "stmoreau thank dont nested example totally valid might read section mdn link left also suspect fixes checkbox due nesting second checkbox example nested worked fine guess messing things yes thank workarounds sad part sometimes cant control like party ui lib assume wide issue global event listener capture phase used almost everywhere capture clicks outside elements popovers datepickers selects etc", "d": "4/2018"}, {"body": "seems like bug think fix", "d": "4/2018"}, {"body": "duplicate please check discussion thanks", "d": "4/2018"}, {"body": "would like look happens", "d": "4/2018"}, {"body": "sure dig deeper time", "d": "4/2018"}, {"body": "took look related something working right without diving internals react reactdom much problem seems reasonably straightforward since serverside rendered html passed web browser part static html file loads img tags rendered valid src attribute serverside immediately start loading content content finishes loading reactdom hydrates native onload event fires react connected listeners element example following modification cause onload message never display browser assuming image fetched within seconds reproducing example puts client side javascript script tag bottom body means browser seen image tag possibly started loading executing javascript reason expect work got flaky behavior trying chrome firefox windows makes sense web browser could image loaded rest page finished loading since image load would need beat javascript file load example works replaced tears content existed inside destination element fire new img created", "d": "4/2018"}, {"body": "right makes sense browser load event fire react missing since hydrate tear content rerender example img portion content also unchanged state updated later either makes sense onload would nt fire think differences browsers onload may mostly timing react onload fire hydrate due image already loaded keep standard expectations onload works normally looks like use another approach images using hydrate instead", "d": "4/2018"}, {"body": "closing onload behaving expected timing issues causing different behavior times", "d": "4/2018"}, {"body": "think suspensecapable server renderer proper solution need walk tree data fetching use case please describe detail bit hard understand prs libraries without knowing context exactly trying", "d": "4/2018"}, {"body": "ok let take apollo lot hoc application serverside know data needed starting rendering procede difficulty several levels needs data display needs data display actual solution walk react tree order get promises resolve using strategy render application prefetched data transfer state clientside", "d": "4/2018"}, {"body": "also suspensecapable server renderer", "d": "4/2018"}, {"body": "know data needed starting rendering procede server renderer could suspend rendering waiting data seen talk hard discuss familiar suspense suspense lets components wait data rendering demo client plans implement server need traverse tree rendering happens single pass", "d": "4/2018"}, {"body": "ok understand solved suspense compatible rendertonodestream mean try implement suspense loadable components work serverside box", "d": "4/2018"}, {"body": "would recommendation strategy relies serverside prefetching data rendering initial client view without rendering server", "d": "4/2018"}, {"body": "compatible rendertonodestream would need whole new server renderer different api would recommendation strategy relies serverside prefetching data rendering initial client view could still rendering gather data discard result send cache serialized form think nt want render could system eg like redux users something already today nt involve walking tree either", "d": "4/2018"}, {"body": "similarly react loadable use case referring supported box suspense talk includes demo code splitting libraries", "d": "4/2018"}, {"body": "complexity code splitting serverside clientside provide api support suspense serverside problem solved still walk react tree apollo think create package order share hard piece code projects hope deprecated soon", "d": "4/2018"}, {"body": "makes sense", "d": "4/2018"}, {"body": "thanks answers", "d": "4/2018"}, {"body": "please reduce reactdomonly example thirdparty libs extra code also verify nt problem without react", "d": "4/2018"}, {"body": "party libs fails firefox react works firefox man coding nonreact sucks", "d": "4/2018"}, {"body": "erikras confused clarify specific issue reporting first example handler called using async function sleeping seconds remove call alert shows expected sure spec behavior async functions native events example without party libs longer using async function appears working firefox issue see call nt actually preventing default reason separate issue example without react also using async function fork example using async function sleep see nt work either reporting async event handlers nt work nt work something else", "d": "4/2018"}, {"body": "asyncawait stuff ignore issue see call nt actually preventing default reason separate issue main issue reporting async event handlers nt work nt work yes nt work", "d": "4/2018"}, {"body": "whether sacred dom api demands crossbrowser respect guys seems work others nt tested ie gross fails provide requisite functionality firefox reason guys important nt care strongly throwing inconsistency might previously gone unnoticed", "d": "4/2018"}, {"body": "thanks clarifying react example provided nt looks represent scenario want test running works submit events fork uses dispatchevent see also nt prevent default event reason need set creating event dispatching manually want call working example react surprised chrome browsers allow noncancellable event case nt look react issue hope helps", "d": "4/2018"}, {"body": "thanks brandon clears turnaround spectacular wish way let boss know awesomely handled flarnie know fb org chart heard manager", "d": "4/2018"}, {"body": "sophiebits manages react team aweary actually work full time react", "d": "4/2018"}, {"body": "get back work seattle business aweary sophiebits dudes awesome knew already", "d": "4/2018"}, {"body": "noted anyway make sure aweary work gets noticed next reviews", "d": "4/2018"}, {"body": "grrr sophiebits literally writing tweet tweet anyway", "d": "4/2018"}, {"body": "one removed", "d": "4/2018"}, {"body": "pr", "d": "4/2018"}, {"body": "fixed nicolevy", "d": "4/2018"}, {"body": "technically already way mind mucking build system specifically look exposes internal builds maybe could add official profiling build", "d": "4/2018"}, {"body": "please file instead thanks", "d": "4/2018"}, {"body": "nt clear repo site thanks gaearon", "d": "4/2018"}, {"body": "nt understand exactly asking doc saying knowledge far page know next doc pages demonstrated use components rerender answer question", "d": "4/2018"}, {"body": "richtera please provide example reproduces issue tried reproducing nt see behavior verify react reactdom updated", "d": "4/2018"}, {"body": "work example every single reference caused exception whereas worked fine seems kind scheduling difference validating field invariant validator fails every component put together example next week locking code", "d": "4/2018"}, {"body": "richtera please share full error message stack trace getting", "d": "4/2018"}, {"body": "trying reproduce sample application far luck changing completely breaks app break small sample app yet failed render happens within mobx update error element ref specified string overlay owner set could happen one following reasons may adding ref functional component may adding ref component created inside component render method multiple copies react loaded see information invariant coerceref createchild reconcilechildrenarray reconcilechildfibers reconcilechildrenatexpirationtime reconcilechildren updatehostcomponent beginwork performunitofwork workloop renderroot performworkonroot performwork performsyncwork requestwork scheduleworkimpl schedulework schedulerootupdate updatecontaineratexpirationtime updatecontainer pushnodemodulesreactdomcjsreactdomdevelopmentjsreactrootrender anonymous unbatchedupdates legacyrendersubtreeintocontainer render anonymous promisethen async bootup srclearnindextsx webpackrequire fn webpackrequire checkdeferredmodules anonymous anonymous render caused mobx change even tried use mobx sample quite setting stores way cause problem since code works fine quite sure specifically setup another example fail way code looked far look fine seeing weird race conditions", "d": "4/2018"}, {"body": "considered possibility outlined message follow link includes diagnostic instructions help determine multiple copies react happen updating react use buggy version package manager build set incorrectly thirdparty library bundled published incorrectly specifically try running check one copy shows", "d": "4/2018"}, {"body": "multiple copies react lock version using packagejson using resolutions use yarn seems crashing section code", "d": "4/2018"}, {"body": "possible another project folder example parent project even accidentally installed home directory", "d": "4/2018"}, {"body": "checked parent folder reinstalled nodemodules change resolutions react reactdom make work make fail switch back forth figured basic sample project nt fail way", "d": "4/2018"}, {"body": "also fails right", "d": "4/2018"}, {"body": "yes anything pulls fail reason difficult debug using gitlabci custom build vm fetch mode also keep cached even resolutions says ie yarn seems look resolutions initial installs downgrade existing modules nodemodules change resolutions rerun yarn install", "d": "4/2018"}, {"body": "understanding change anything string ref ownership mechanism releases code runs fine facebook thousands string refs one else reported yet best guess something wrong environment dunno maybe yarn bug somehow update makes existing issue visible want debug search strings starting bundle normally show one match react define two matches minification dev prod one never hit breakpoint matches pulling duplicate react somehow hard say without seeing bundle reproducing example", "d": "4/2018"}, {"body": "ok check check failing owner null fiber another version seems way application boots conflicts whatever happening calling reactdomrender promise firebase validate current login token since nt see problem within little sample application realize looking needle haystack", "d": "4/2018"}, {"body": "let explain works reactdom starts rendering class component sets class component calls string ref reads owner property issue experiencing occurs reactdom finds different react one used component reactdom sets owner field react finds react used component field set thus sees null owner help explain debug assignments reads see plays", "d": "4/2018"}, {"body": "gaearon place watch find wrong version react put breakpoint makes sense unable detect second version webpack", "d": "4/2018"}, {"body": "ah debugged assignments retrievals reactcurrentownercurrent seems changing componentwillmount componentdidmount resolve problem seems bit sensitive least seeing could another part puzzle course thanks help gaearon", "d": "4/2018"}, {"body": "hmm would nt expect lifecycle hooks make difference unless using string refs way nt supported first place code looking like supported place string ref render method method called something like lifecycle hook may explain issues seeing never supported string refs", "d": "4/2018"}, {"body": "think false alarm although version stringent componentwillmount resulting completion could possibly cause update", "d": "4/2018"}, {"body": "think understand saying", "d": "4/2018"}, {"body": "basically running code works nt work changing componentwillmount calls initiate promises cause property state changes componentdidmount make work little sensitive invalid state changes previously docs talking issues become much important definitely something cause code", "d": "4/2018"}, {"body": "known changes lifecycle order two releases moreover react come cryptic bugs accidentally something wrong lifecycle still appreciate could isolate moving something lifecycles fixes sounds like react bug", "d": "4/2018"}, {"body": "sorry spam new react found", "d": "4/2018"}, {"body": "think probably go", "d": "4/2018"}, {"body": "please provide complete example something probably broken build set", "d": "4/2018"}, {"body": "complete script specify need", "d": "4/2018"}, {"body": "please upload complete project code fine build setup probably broken sure configure recommend using officially supported method like described pages issues like upload project take look wrong", "d": "4/2018"}, {"body": "ok let create project git add link comment", "d": "4/2018"}, {"body": "link project", "d": "4/2018"}, {"body": "anikethsaha code extending end component", "d": "4/2018"}, {"body": "changed still hope", "d": "4/2018"}, {"body": "code provided thing probably meant error says super expression extended undefined undefined typo", "d": "4/2018"}, {"body": "gaearon changed earlier still getting", "d": "4/2018"}, {"body": "changed help recompile code use webpack directly need recompile code changing encourage try tool specifically designed people new react posted link automatically recompile code work hard learn react use build tooling time think might help use webpack directly comfortable higher level tool like create react app", "d": "4/2018"}, {"body": "recompile webpack changing using react using browserjs cdn link react reactdom link script past days working fine may nt using facing problem styling etc shifted method look link mention", "d": "4/2018"}, {"body": "still problem suggested changes please push changes github look hard help without seeing exactly changed issue seeing", "d": "4/2018"}, {"body": "saw commit include compiled bundle since checked claim recompiled need see commit confirms", "d": "4/2018"}, {"body": "commit git recompiled pc thats mean comment change compiled bundlejs", "d": "4/2018"}, {"body": "still issue please post screenshot commitpush changes", "d": "4/2018"}, {"body": "changed bundlejs repo check error mentioned", "d": "4/2018"}, {"body": "still typo bundle recompiled", "d": "4/2018"}, {"body": "thanks guess error recompiled bundlejs times changing changing bundle may error config check", "d": "4/2018"}, {"body": "similar issue also solved rerendering client via setstate case try render modal inside portal component returns rendered server creates portal client however dom gets messed hydration eg use like inside main component test instead getting hydration test get test warning use react custom ssr method sure intended behavior", "d": "4/2018"}, {"body": "trying understand react passes string attributes others meaning attached passing function data attribute would get stringified even react allowed explain purpose code practice", "d": "4/2018"}, {"body": "hi dan brief backstory jumping inpractice examples exploring patterns react apps insufficient benefits justify maintainability costs vs patterns one pattern stateless functional components vs class components sfcs reduced surface area creates fewer opportunities rigid couplings dependency graphs generally easier read eventually started questioning sfcs sfcs adds interfaces app interface learned interface creates opportunities couple elements lt handlers lt function scopes lt data structures eventually concluded almost cases benefits percomponent interfaces outweigh costs string components fewer tradeoffs string like div adds abstractions learn coupling surface vectors unnecessary dependency graphs grow base components write string components wrapped composition function eg custom hocs make working efficient resulting components often look like gets props state data pipe access hoc wrapper around maps arguments children hocs added props hit string component usually nt problem mostly pass string id component get data directly state problem arises certain handler hocs take example recompose withstate instead toggling elements throws error naming prop renaming prop gets handler working said function gets stringified hits element props nt matter case react internal representation props holds function hocs access react throws warning function hits element working first publicfacing app using structure extensively let know like link working code app bunch invalid data prop errors handler hoc cases like withstate nt affect functionality awkward development hence posting issue", "d": "4/2018"}, {"body": "first thought see us changing useful warnings potentially could mean forgot call method pass function mistake accommodate use case seems like essentially reimplementing react components much roundabout way creates difficulties", "d": "4/2018"}, {"body": "interesting take nt think reimplementing components much providing shorthand creating string components explicit concerns separation creating string components primary responsibility component yes reimplements responsibility components separating concerns like handler coupling attribute mapping roundabout part makes wonder misunderstand saying though since seems direct regardless agree passing string components directly nt folks use react case worth supporting summarize learnings attributes ability passed freely means get stringified added dom omitted dom hoc author way define prop like actually omitted dom hoc users define property name like ignore allows hocs work together without modifying component adding third hoc filter prop couple relevant links", "d": "4/2018"}, {"body": "see comment pr cant access static methods class via anyway since defined constructor instance want access static methods gdsfp like", "d": "4/2018"}, {"body": "hey jquense thanks reply sure however aligned issue intention nt pass instance context gdsfp actual constructor one able access static methods static method see usual context within static class methods thus constructor indeed instance however gdsfp context explicitly set associated pr context constructor thus instance methodsproperties still unavailable", "d": "4/2018"}, {"body": "oops sorry timdegroote reviewed quickly still sure whether considered bug guess team explicitly chose context lead weird questions speculation open back", "d": "4/2018"}, {"body": "guess team explicitly chose null context lead weird questions speculation yeah least point view intention highlight instance discourage people writing code uses static lifecycle method way easy get confused already allowing compounds problem future readers understand might seem bit overprotective see practical upsides allowing see downsides point different thing confuse anyone know js deeply example expect people declare class properties try access crashes would give undefined change convention even good shorthand convenience want make shorter hoist constant module level variable function easier reference explicit also better encapsulated modules access", "d": "4/2018"}, {"body": "way ran following use case gdsfp wanted try reading documentation realised would need methods initially instance ran certain props started converting static methods agree nt best solution far test anyway ran issue could nt access static methods gdsfp method initially thought understanding static methods incorrect confirming nt case thought maybe something wrong babelwebpack setup spent time making sure proper plugins etc installed configured nt finally look gdsfp method called react understood issue adding conversation point users might expect context consistent language spec also confusing nt get actual cause problem might suspect something wrong setup get wrong idea static methods work end agree opinion thought process definitely see coming understand decision thank clarification", "d": "4/2018"}, {"body": "js context determined callsite say inconsistent spec agree confusing already familiar pattern read searching solution anecdotal experience people coming js languages tend first try call static method would work way think concern would prevail case think common rather sacrifice confusion elsewhere confusion explicit know work researched problem got answer filed issue somebody else find later post stackoverflow eventually become common knowledge important part knew problem far unpleasant case know problem quietly undefined fields identify problem easier identify null harder say exactly wrong code already successfully uses use reason occur many people may exist point something instance think overall even though approaches problems prefer problem fails fast one subtly hide misunderstanding even second one might conventional js coding styles", "d": "4/2018"}, {"body": "create working example instance reproduces problem", "d": "4/2018"}, {"body": "found cause problem version compatibility issues used component custom build npm package made worked well", "d": "4/2018"}, {"body": "need fix component bundle react react component dependency otherwise keep getting similar issues new release", "d": "4/2018"}, {"body": "thanks gaearon", "d": "4/2018"}, {"body": "hey use issue tracking react bug reports question specific library try asking repo use one many support avenues thanks", "d": "4/2018"}, {"body": "provide reproduction uses context elements directly illustrates bug clear problem react codesandbox", "d": "4/2018"}, {"body": "jquense tried replicate faithfully could see state updated rerenders first provider statevalue change consumer receives value children returns nt updated value never reaches receiving component", "d": "4/2018"}, {"body": "pretty hard read abstraction unroll hocs reduces", "d": "4/2018"}, {"body": "saying problem looks shady render method including context consumer render prop supposed pure using closure like lead weird bugs", "d": "4/2018"}, {"body": "thing without hoc works everything tree something prevents second consumer updating separate condition provokes bug affects libraries allow listening multiple providers using constructs like render method including context consumer render prop supposed pure using closure like lead weird bugs transport values wrapped component somehow needs receive values ones change perhaps better way causing issue", "d": "4/2018"}, {"body": "ps react works something must changed", "d": "4/2018"}, {"body": "nt look alpha please broken myriad ways nt useful", "d": "4/2018"}, {"body": "aspect works expected though problem current react contextconsumer nt update like reactcomponent would breaks dynamic context subscribers", "d": "4/2018"}, {"body": "love help need reduced example nt mutate anything closures nt hocs nt agree without hoc works everything tree hoc nothing abstraction generates component unrolling hoc manually code could produce code would change semantics react nt care use hocs", "d": "4/2018"}, {"body": "guess accumulator becoming stale works moment dynamically critical suddenly nt work first consumer triggers return accumulated result second consumer contains view becomes stale works reactbroadcast createreactcontext previous react alphas know else create dynamic listener listen multiple context providers maybe would help", "d": "4/2018"}, {"body": "nt think logic pushing something closure work obvious nt need spend time looking supported impure render like", "d": "4/2018"}, {"body": "understand wonder one would solve given list providers say view say would create contextconsumer construct dynamically view deepest element receiving values outcome pure even possible given consumer values obtained callback", "d": "4/2018"}, {"body": "know stack contexts init time render time", "d": "4/2018"}, {"body": "possible hoc known statically also dynamic", "d": "4/2018"}, {"body": "tried several utilities exist compose nested render props even nt end using check implemented disclaimer first realized solving problem seem recall used reduceright", "d": "4/2018"}, {"body": "believe would fail react probably way", "d": "4/2018"}, {"body": "believe none mutations process seem need know least mine mutation used initial implementation purely pure pun intended", "d": "4/2018"}, {"body": "interesting thanks lot see works", "d": "4/2018"}, {"body": "looks like version without mutation works", "d": "4/2018"}, {"body": "given example curious unrolled rather rolled note nt recommend anyone write code like applications really hard read might handy specialized libraries", "d": "4/2018"}, {"body": "incredible thanks much need study functional programming could nt done hundred years", "d": "4/2018"}, {"body": "easier loop use loop think necessary use reduce every case list context separate statement like become visible loop body like reduce vs loop choice form", "d": "4/2018"}, {"body": "hi late discussion think figured totally nerdsniped mutation render cause saying safe either real cause react elements reused recreated works added another lambda calls expected behavior update consumer element even though closed value may change edit reordered reducer make sure render created related render props minimal example edit last stale consumers updated alpha stable elements need new updated versions", "d": "4/2018"}, {"body": "redwormik thanks suspected accumulator getting updated mind stuck contextconsumer last example isolates nicely gaearon knownexpected behaviour", "d": "4/2018"}, {"body": "apis purposefully made private likely nt solution", "d": "4/2018"}, {"body": "way fix error complete migration react", "d": "4/2018"}, {"body": "using api migration path using files lib use anymore since nt part public api", "d": "4/2018"}, {"body": "import domproperty reactdomlibreactinjection const config iscustomattribute boolean dompropertyinjectdompropertyconfig config", "d": "4/2018"}, {"body": "adding custom attributes ca nt anymore react also nt care anymore attributes add nodes nt need special logic use add em element", "d": "4/2018"}, {"body": "nt", "d": "4/2018"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "4/2018"}, {"body": "sorry wrong place way tried make examples generic possible also seen anything docs regarding sort pattern happy draft documentation anything needs added", "d": "4/2018"}, {"body": "edit answering dan questions probably land better architecture approach solves problem might right problem solve depending actual use case encountered problem components reasonable alternative found add third component", "d": "4/2018"}, {"body": "provide details specific scenario trying implement concretely hoist state component knows initial state better context provider happens render two components attempt set value one win", "d": "4/2018"}, {"body": "great questions thank responding component trying trying implement tabbed ui component image google images illustration tried implement api like content rendered component child related idea default tab would able communicate default parent context suppose alternative api sidesteps problem could like existing api enforces content tab design avoids potential issues corresponding corresponding perhaps attempting coerce components api caused problem change course possible without calling render method using old context api slightly irksome ca nt seem achieve new context api answer second question guess question specific scenario happen specify multiple props nt think would unreasonable say undefined behaviour vein html spec seem define behaviour case multiple radio buttons attribute attribute html option option option although browsers seem simply check last one nt think behaviour guaranteed personally nt see issue implementation creates race condition scenario always resolve sort usable state", "d": "4/2018"}, {"body": "need attributes could nt model like", "d": "4/2018"}, {"body": "couple issues know index know active assuming looping determine index loop determine index want wrap elements", "d": "4/2018"}, {"body": "leonaves might want check implemented thing reactbootstrap using new context branch specifically tabcontainer nav navlink tabpane components", "d": "4/2018"}, {"body": "ok read original api wonder get content active tab given time available render way think right also store children active tab context also tab know setup active given time", "d": "4/2018"}, {"body": "yep js class tablist extends reactcomponent constructor props super props thisstate content null setcontent thissetcontent setcontent content gt thissetstate content render gt const tab label defaulttab children gt content setcontent gt children amp amp content amp amp defaulttab setcontent children const tabcontent gt value gt valuecontent little unconventional given state serialisable seen recommended put functions original example state already serialisable check also bit whiffy theory solid simply object references risk false positive main part happy equivalent call initial example feels wrong calling something essentially recall render method right render method ca nt think way unless completely going wrong", "d": "4/2018"}, {"body": "jquense taken brief look implementation obviously lot moving parts may mistaken gather really possible separate tabs tab content rendered markup due section method component js validcomponentchildrenmap children thisrendertab validcomponentchildrenmap children child gt const childprops childprops delete childpropstitle delete childpropsdisabled delete childpropstabclassname though nt fully conceptualised things going gather possible substitute certain components custom components may make possible", "d": "4/2018"}, {"body": "leonaves tabs component shortcut tabcontainer tabpane nav used independently create whatever want like example", "d": "4/2018"}, {"body": "ah okay essentially got like second example comment components wrap create api similar original api however scenarios tabs must assigned explicit id container must told define default think core comes previous comment like existing api enforces content tab design avoids potential issues corresponding corresponding perhaps attempting coerce components api caused problem change course possible without calling setvalue render method using old context api slightly irksome ca nt seem achieve new context api change assigning tabs explicit ids needs done say slightly frustrating previously possible api changed longer possible without antipattern updating state render method", "d": "4/2018"}, {"body": "also sorry late reply holiday", "d": "4/2018"}, {"body": "meant cases synchronously calculate state props meant async requests please move data fetching code andor", "d": "4/2018"}, {"body": "probably incorrect attribute somewhere question browsers work really related react closing", "d": "4/2018"}, {"body": "actually happened renamed react files development production gaearon", "d": "4/2018"}, {"body": "please submit api change proposals rfc repository thanks", "d": "4/2018"}, {"body": "lirilnet", "d": "4/2018"}, {"body": "trysound benefit performance concern", "d": "4/2018"}, {"body": "lirilnet pass ref component component need update ref case possible createref object mutable field updated component", "d": "4/2018"}, {"body": "thanks reply", "d": "4/2018"}, {"body": "clear react set property component", "d": "4/2018"}, {"body": "thanks report repro benclive looks like bug try investigate soon like try find root cause send fix greatly appreciate", "d": "4/2018"}, {"body": "believe following issue occurs onmousedown event div remove events div code work fine browsers", "d": "4/2018"}, {"body": "faefelipe workaround rather solution benclive believe issue lies fact firefox triggers events onmousedown onmousedown onchange instead onmousedown onchange like chrome nuragic noticed well example following line handlemousedown rerender component firefox since additional event triggered seems like value getting updated comment line works expected browsers", "d": "4/2018"}, {"body": "little poke believe skiritsis right track two mousedown events getting fired first mousedown fires initially interacted browser shows list values second mousedown fires specific value chosen modal list throw consolelog handlemousedown function output value select list show correct value prior setstate call argue bug firefox giving nuanced view state changes page chrome wanted leverage additional information could change code however result wrong thing written state submit clicked faefelipe points attaching onmousedown parent form general mousedown events great way approach touch screen devices nt mice simulated mouse events really nt think anything within react needs change error report application specific behaviour based fairly nuanced browserdependent behaviour could pin one vendor force behave way complexity cost time", "d": "4/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "requisition see anything network tab", "d": "4/2018"}, {"body": "meant network requests like image", "d": "4/2018"}, {"body": "coming jsfiddle react react make network requests", "d": "4/2018"}, {"body": "sorry gaearon could see request made one extension browser", "d": "4/2018"}, {"body": "cvlmtg dry nt mean write less code", "d": "4/2018"}, {"body": "trysound talking writing code talking duplicating data", "d": "4/2018"}, {"body": "lot discussion already choice made want weigh changing please read rfcs add thanks", "d": "4/2018"}, {"body": "cvlmtg also data actually duplicated pass state references reuse later according logic problem", "d": "4/2018"}, {"body": "find ongoing discussion linked issues", "d": "4/2018"}, {"body": "thanks linking reactjsrfcs folks first one breaks single source truth rule wanted point nt actually break single source truth rule props key example could also state key intentionally named never doubt current source truth", "d": "4/2018"}, {"body": "thanks gon na reply topic something new add seems already pretty long", "d": "4/2018"}, {"body": "nt care", "d": "4/2018"}, {"body": "internals exposed follow semantic versioning public api use", "d": "4/2018"}, {"body": "curious would used react reactdom umd versions enables run browser without transformbundling step test renderer nt really useful without test runner capable consuming cjs build", "d": "4/2018"}, {"body": "thanks response working environment npm nt allowed among things use jasmine standalone specrunner browser js unit testing planning create wrappers around reactdomtestutils reacttestrenderer reacttestrenderershallow make testing slightly less painful", "d": "4/2018"}, {"body": "gotcha using npm install would willing create umd test renderer bundle would pretty simple git clone repo apply following patch diff diff git ascriptsrollupbundlesjs bscriptsrollupbundlesjs index ascriptsrollupbundlesjs bscriptsrollupbundlesjs const bundles react test renderer label test bundletypes fbdev nodedev nodeprod bundletypes umddev umdprod moduletype renderer entry reacttestrenderer global reacttestrenderer run build renderer give bundle exports global variable", "d": "4/2018"}, {"body": "guess nt hurt us add umd", "d": "4/2018"}, {"body": "sure toss pr consideration", "d": "4/2018"}, {"body": "ok next release test renderer umd build meanwhile go reacttestrendererproductionminjs reacttestrendererdevelopmentjs", "d": "4/2018"}, {"body": "believe also license react related", "d": "4/2018"}, {"body": "cc sophiebits", "d": "4/2018"}, {"body": "generally add configuration like creates problems people turning without understanding warning means third party component turning whole application etc much burden specify keys lists override filter warning sure hacky intentionally trying work around existing system try keep easy switch clientonly serveronly mixed modes flag like would encourage people write server first write code would eventually work client", "d": "4/2018"}, {"body": "fair enough thanks", "d": "4/2018"}, {"body": "brand checking generally bad practice going mess wrapping useful property tell one since allows wrapping first place instead use new forwardref api nice part consumer hoc use ca nt put ref functional component class component like normal", "d": "4/2018"}, {"body": "bug", "d": "4/2018"}, {"body": "sebmarkbage typescript language hoc receive reactcomponenttype union latter type nt accept ref prop reactforwardref nt contribute problemsolving present workaround using ducktype checking", "d": "4/2018"}, {"body": "hey intent far understand explicit ones intent mean forgot anything eg whereas returning explicit action dev opt making changes also consistent function version setstate works", "d": "4/2018"}, {"body": "yes general prefer explicit apis react intentional decision nt agree writing four characters makes code less clean", "d": "4/2018"}, {"body": "gaearon nt agree writing four characters makes code less clean four like fifteen", "d": "4/2018"}, {"body": "right see point still disagree want cases nt want update state response props explicit explicit", "d": "4/2018"}, {"body": "ok", "d": "4/2018"}, {"body": "also follows precedent set react warns undefined return value warn potential mistakes someone perhaps writes ifelse statement incorrectly forgets handle case", "d": "4/2018"}, {"body": "please build master check fixed recently made related bug fix might also fixed", "d": "4/2018"}, {"body": "hmm never mind mine different code path", "d": "4/2018"}, {"body": "please build master check fixed recently made related bug fix might also fixed good know though im facing issue track yet ive double checked everything imho rerendering shouldnt happen cant locate yet reproduce outside project gon na test latest fix later see helps although issue happens also legacy context", "d": "4/2018"}, {"body": "nt understand consider bug change return nt see rerender expected returns update follows normal flow passing different children every time rerenders every time nt context providerconsumer tree would work way think bit misleading say tree technically pass different elements even though tree looks way missing", "d": "4/2018"}, {"body": "change indirection return false shouldcomponentupdate nt see rerender expected returns true update follows normal flow figured might case raises question context provider bail propagating updates consumers changed", "d": "4/2018"}, {"body": "seeing rerender provider propagates context seeing rerender tree renders normally encounter something would prevent rendering middle gets leaves providerconsumer supposed make rendering restrictive regular divs", "d": "4/2018"}, {"body": "omg situation occurs update blocker provider amp consumer assumed head sandbox render flow nt surprise would expecting sorry reporting nonissue", "d": "4/2018"}, {"body": "problem thanks taking time anyway", "d": "4/2018"}, {"body": "nithishreddy please provide information device using specific app using called samsung native browser version app using also code provided nt valid assume trying include example simple click handler would helpful could share exact code trouble", "d": "4/2018"}, {"body": "yes although information sufficient reference bind call ay onclick event need bind class modifying example class clicked extends reactcomponent using fat arrow function mark gt consolelog clicked render return hopefully might solve problem still data needed", "d": "4/2018"}, {"body": "hi aweary samsung grand mobile samsung native browser click event fired devices working fine including samsung grand chrome browser also", "d": "4/2018"}, {"body": "nithishreddy u catch error windowonerror catch throw e", "d": "4/2018"}, {"body": "facing problem mobile samsung browser chrome firefox onclick fire", "d": "4/2018"}, {"body": "provide complete example could run please codesandbox jsfiddle issue template includes links services", "d": "4/2018"}, {"body": "nextprops contain values like firstname lastname email component act uncontrolled input switch controlled input uncontrolled input throw warning", "d": "4/2018"}, {"body": "demiand related accept string nt pass component", "d": "4/2018"}, {"body": "trysound assumed example sets values object state render value one solution", "d": "4/2018"}, {"body": "demiand yep", "d": "4/2018"}, {"body": "thanks trysound demiand", "d": "4/2018"}, {"body": "please provide full isolated example reproducing guess mix perhaps dll config try deleting caches rebuilding", "d": "4/2018"}, {"body": "tried way said nt work example command git clone b npm npm run dll npm start run local development environment port", "d": "4/2018"}, {"body": "looks like uglify bug remove uglify config works original code development version reactdom use js var renderersigil void use detect multiple renderers using context renderersigil skipped return pushprovider pushprovider popprovider popprovider clear using development version bundle comment nt exist production version however see comment actually inserted wrong place newline breaks return statement function return object becomes later try read something object throws encourage file issue uglify", "d": "4/2018"}, {"body": "ca nt reproduce please create reproducing example", "d": "4/2018"}, {"body": "nt exactly find problem understand concerned reactcssmodules remove decorator problem disappears sorry trouble", "d": "4/2018"}, {"body": "curious see howif flow deal currently possible safely type typescript definition methods allowed reference instance generic parameters", "d": "4/2018"}, {"body": "flow defined", "d": "4/2018"}, {"body": "could please provide full reproducing example", "d": "4/2018"}, {"body": "also please make sure", "d": "4/2018"}, {"body": "using provider consumer think problem seeing bundling together react using webpack library app consuming library using seeing problems describing possible guess would probably webpack question react question", "d": "4/2018"}, {"body": "general libraries nt include copies react happens probably bug hard say without seeing example", "d": "4/2018"}, {"body": "ok probably close sounds like need update app use context api", "d": "4/2018"}, {"body": "getting issue code testing working fine breaking code example import react purecomponent react const gmapcontext reactcreatecontext googlemap class base extends purecomponent constructor props super props thisstate map null render const map thisstate export default class gmap extends purecomponent constructor props super props thisstate loaded false componentdidmount thisscriptloaded scriptloaded thissetstate loaded true render const loaded thisstate jest test import react react import renderer reacttestrenderer import gmap gmap describe gmap gt uses default applies props object gt const snap renderer create tojson expect snap tomatchsnapshot gmap uses default applies props object using update well dunno seems working previously nt working triple checked versions even fresh install packages everything seemed match", "d": "4/2018"}, {"body": "going assume running mix different react versions try deleting triplechecking right version versions nt lockfile somehow overrides still please create publish reproducing project fiddle", "d": "4/2018"}, {"body": "weakness old context api seeing problem manifest combined new context api specific general distant children updates using old context api blocked immediate children decline rerender issue old context api docs usual way solve implement registrationobservation system send context context would contain callback consumers could use register parent wanted push new update would send signal registered consumers could force rerendering children popular libraries like implemented hocs see example simply returning different values always unreliable worked components already rerendering reason", "d": "4/2018"}, {"body": "actually encountered using reactrouter updating anymore updated one custom context providers sit app core new api", "d": "4/2018"}, {"body": "tag bug although sure create test case guess maybe condition like also needed bailouts sure acdlite", "d": "4/2018"}, {"body": "guessing assume using similar bailout logic also bails constant maybe actually right thing old context api gone", "d": "4/2018"}, {"body": "suggested fix comment probably wo nt priority us send pr tests take", "d": "4/2018"}, {"body": "repo used proposals", "d": "4/2018"}, {"body": "close favour", "d": "4/2018"}, {"body": "babeljest latest version still nt support babel tests might face issue update probably beta release support babeljest", "d": "4/2018"}, {"body": "try instructions use jest babel note using babel version need install babeljest following command", "d": "4/2018"}, {"body": "babel jest definitely supports babel using together cra", "d": "4/2018"}, {"body": "sure special version cases", "d": "4/2018"}, {"body": "nt manage fork old docs somebody else maintains unfortunately pretty broken react docs mentioned react github page", "d": "4/2018"}, {"body": "know maintains fork pretty date may show search results find page", "d": "4/2018"}, {"body": "first result google search similar one trying find information accepted component tags usable jsx reason trouble finding information official react website", "d": "4/2018"}, {"body": "actually original google search find page search history", "d": "4/2018"}, {"body": "feared first two results outdated chinese translations gaearon anything relevant page official react docs would dom elements answer question use valid html element svg element custom element check tutorial want good foundations basics questions please check community support resources", "d": "4/2018"}, {"body": "nt know wondered times months ago", "d": "4/2018"}, {"body": "thanks report sorry unexpected breakage gaearon want stop using ask users polyfill currently used convert places like case would easy enough refactor without", "d": "4/2018"}, {"body": "definitely using", "d": "4/2018"}, {"body": "sorry bout folks", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "nt using arrayfrom", "d": "4/2018"}, {"body": "ie support", "d": "4/2018"}, {"body": "used run mapsetraf polyfills imo adding dependencies builtins breaking change nt ask people polyfill whole environment three things", "d": "4/2018"}, {"body": "ok maybe future nt get habit inlining implementations builtins avoid bloats bundle size also less maintainable", "d": "4/2018"}, {"body": "agree one devonly maybe require full env", "d": "4/2018"}, {"body": "sounds good", "d": "4/2018"}, {"body": "gaearon mean new implementations accepting", "d": "4/2018"}, {"body": "saying react bump runtime requirement assume environment", "d": "4/2018"}, {"body": "uhm gotcha concerned many applications dod using react still runs nt compatible many functions", "d": "4/2018"}, {"body": "bump minimal requirement require polyfilling functions nt necessarily mean dropping ie support", "d": "4/2018"}, {"body": "thanks", "d": "4/2018"}, {"body": "probably something similar even serverclient mismatch wanted remember sebmarkbage talking whitespaces problem issue find anywhere", "d": "4/2018"}, {"body": "turn failing test case one suites", "d": "4/2018"}, {"body": "issue arises minification process specifically use htmlminifier extra white spaces comments removed html source able remove react specific comments eg weaker option", "d": "4/2018"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "4/2018"}, {"body": "sure send pr", "d": "4/2018"}, {"body": "jumped one since quick pr", "d": "4/2018"}, {"body": "nicolevy fixed", "d": "4/2018"}, {"body": "something specific context guess similar problem rendered component recursively renders", "d": "4/2018"}, {"body": "gaearon issue post two days", "d": "4/2018"}, {"body": "yeah basically going recursive call end condition nt realize writing probably using hoc functions functions recursively calling without realizing set different functions like combine common contexts jsx const appcontexttypecontext reactcreatecontext none const appcontextidcontext reactcreatecontext function appcontextprovider contexttype contextid props return jsx const withappcontext wrappedcomponent gt function withappcontext props return contexttype gt contextid gt combining multiple ways multiple spots guess ended wrong combination functions led issue short yeah probably specific contexts could see many others easily running issue like", "d": "4/2018"}, {"body": "seem duplicate though helpful discussion far", "d": "4/2018"}, {"body": "struggling see different js function return function b return", "d": "4/2018"}, {"body": "honestly think really effictively roundabout form second example easy see like gets difficult diagnose used hocs top otherwise unrelated components happen call guess requesting really sort measure detect throw error break loop somehow recursive issues diagnosed easier much like handle many calls occurring close together", "d": "4/2018"}, {"body": "think issue technically unrelated context though seems easier run new context api built safeguard prevent much recursion would check easy add least debugging purposes", "d": "4/2018"}, {"body": "would desired solution keep track deep components nested rendering abort message deep", "d": "4/2018"}, {"body": "originally thinking warning component child renders another instance could confusing false positives guess setting max depth good compromise warns dev", "d": "4/2018"}, {"body": "ask like vs rendering conditionally returning elements want mounted unmounted render looks like misuse top level render react correctly warning", "d": "4/2018"}, {"body": "sure build view modules rendering framework agnostic api functions turn call react enables us build applications modules using many different frameworks backbone legacy modulesapps example applications want reload views certain events results views getting unmountedmounted click event understand natural way using react think great advantage react enforce one way things enabling us conform special needs", "d": "4/2018"}, {"body": "thanks explaining asking jsfiddle example demonstrates pattern nt think really supported hard see example necessitates approach since could rewrite without using render little code changes guessing tho looks like nt demonstrating rendering agnostic bits way components wrapped abstraction also act like normal react components context react tree pushing bit example really breaks react rendering model basically negates optimizations value using react components lot say nt seem like interop strategy ideal components probably isolated render trees rendered react normal react components said really want keep model right api rendering new trees context react hierarchy", "d": "4/2018"}, {"body": "thanks explaining asking jsfiddle example demonstrates pattern nt think really supported hard see example necessitates approach since could rewrite without using render little code changes guessing tho looks like nt demonstrating rendering agnostic bits correct wanted provide minimal example like could provide fleshed example way components wrapped abstraction also act like normal react components context react tree pushing bit example really breaks react rendering model basically negates optimizations value using react components lot say nt seem like interop strategy ideal components probably isolated render trees rendered react normal react components think understand happily sacrifice performance reduce complexity apps big modular largest threat system complexity framework entanglement said really want keep model createportal right api rendering new trees context react hierarchy okay thank try new api however afraid run issue since still need perform unmountmount inside click event", "d": "4/2018"}, {"body": "happily sacrifice performance reduce complexity performance getting little benefit using react way fact actively thwarting react declarative component model using grain seems like built n imperative component system top react really nt intent api provides works ok boundaries react framework much less sides react totally get interop problem hard seems like benefit tho complexity reduction bugs something worked bit differently cases rendering react components react components nt trying fight uphill battle maybe robust example would help ca nt really see way forward click event case intent always use imperative api components", "d": "4/2018"}, {"body": "still need perform unmountmount inside click event reactfriendly way pass different key want force remounting js state mykey handleclick gt thissetstate state gt mykey statemykey render return react unmount mount anything whenever key changes", "d": "4/2018"}, {"body": "gaearon thank input forcing remount changing key solves issue us", "d": "4/2018"}, {"body": "kovensky yep case idea second argument always available possible passing previous props always initialize state passed gdsfp could add necessary check without checking existence also gdsfp return state uninitialized case", "d": "4/2018"}, {"body": "unfortunate using types especially initialization logic end execute twice initial mount first time initial value state given logically fine supposed pure method least", "d": "4/2018"}, {"body": "kovensky quite initial state usually contain empty values filled gdsfp js class foo extends reactcomponent state prevmylist list static getderivedstatefromprops props state propsmylist stateprevmylist return prevmylist propsmylist list propsmylistmap gt dname return null render return thisstatelist", "d": "4/2018"}, {"body": "yep recommend", "d": "4/2018"}, {"body": "however code first call gdsfp state initialised like example yet", "d": "4/2018"}, {"body": "pke provide reproducing case please", "d": "4/2018"}, {"body": "ca nt provide case closed source observations code first slightly correct initial state handed gdsfp empty object ctor defined class gdsfp function called empty add ctor called gdsfp twice reactstrict wrapping correctly initialised", "d": "4/2018"}, {"body": "would really help could reduce minimal example file new issue thanks", "d": "4/2018"}, {"body": "set repo reproduce could nt need figure main project", "d": "4/2018"}, {"body": "found problem react told time console reactrouter styledcomponents nt use new api yet screws everything guess wait catch might good time get rid reactrouter replace something simpler sane repace calling problem goes away everything works", "d": "4/2018"}, {"body": "hmm think issue screw rather might copying onto wrapper components static causes weird behavior similar issue react redux fix packages update dependency equivalent code version aware special method nt copied encourage file issue projects describe problem", "d": "4/2018"}, {"body": "morlay expected behavior", "d": "4/2018"}, {"body": "got thanks", "d": "4/2018"}, {"body": "please see reply", "d": "4/2018"}, {"body": "cool missed issue thanks fast reply", "d": "4/2018"}, {"body": "typescript error react error nt maintain react ts definitions need reach maintainers ts definitions react wait release updated typings react", "d": "4/2018"}, {"body": "inside handler react synthetic event example stopping propagation react hierarchy performance reasons technically implemented event listener document calling nt affect browser event nt prevent reaching document need forbid reaching document could put ref use add dom event listener directly expect hope helps", "d": "4/2018"}, {"body": "thanks reply know inside react synthetic event still somehow weird react ca nt stop propagate event far see attaching event still commonly used like reactclickoutside way issue get resolved gets addressed", "d": "4/2018"}, {"body": "vincentbel react listener registered document well element event originated example explains happening", "d": "4/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "4/2018"}, {"body": "eldeni please share example reproducing issue able reproduce problem example suspect another hoccomponent app causing problem", "d": "4/2018"}, {"body": "use library monkeypatches maybe logging something see need see reproducing example turn warning intentionally tell something wrong need figure wrong otherwise code behave weird way", "d": "4/2018"}, {"body": "eldeni using reacthotloader", "d": "4/2018"}, {"body": "gaearon use never realized manipulates lifecycle methods runtime matter fact internally wraps lifecycle method cause warning removing experiment could get rid warning may problem side would selfclose issue days nobody thanks tyscorp also aweary consolelog thiscomponentwillreceiveprops prints \u0192 wrappedmethod proxiedupdatecall sideeffect", "d": "4/2018"}, {"body": "problem disabled reacthotloader nt help project uses reduxsaga connect gt linkactions saction export default class extends component static proptypes data proptypesarray static defaultprops data null state data thispropsdata static getderivedstatefromprops nextprops prevstate prevstatedata nextpropsdata return null", "d": "4/2018"}, {"body": "oleksandrbudik make sure use latest updates available branches likely using older version copies static methods including new lifecycle wrapping component causing warning newer version skips lifecycle", "d": "4/2018"}, {"body": "since nt appear issue react go ahead close someone provide example reproducing issue without thirdparty libraries monkeypatching lifecycle methods happy reopen", "d": "4/2018"}, {"body": "gaearon upgraded reactredux nt help obvious party lib causing issue need check", "d": "4/2018"}, {"body": "since already discussion going close favor", "d": "4/2018"}, {"body": "js class image extends reactcomponent mapimage reactcreateref onimageload gt consolelog thismapimagenaturalwidth thismapimagenaturalheight componentdidmount thismapimageaddeventlistener thisonimageload componentwillunmount thismapimageremoveeventlistener thisonimageload render return", "d": "4/2018"}, {"body": "kumarranjansingh use want something contradict set state set state show part code", "d": "4/2018"}, {"body": "nt want call render setting state handledropdownchange method", "d": "4/2018"}, {"body": "wrap code", "d": "4/2018"}, {"body": "reconsider structure code js handledropdownchange e gt const centerid etargetvalue thissetstate state gt const activefilter objectassign stateactivefilter centerid centerid return activefilter filteredlist thisfilterdata list statelist activefilter filterdata list activefilter gt let filtereddata list let centerid activefiltercenterid let depid activefilterdepid centerid filtereddata filtereddatafilter info gt thischeckcenter infocenters centerid depid filtereddata filtereddatafilter info gt infodeptid depid return filtereddata", "d": "4/2018"}, {"body": "unnecessary split setting state two operations like use functional form", "d": "4/2018"}, {"body": "react flow typings live flow repo rather react", "d": "4/2018"}, {"body": "builder using webpack gulp grunt share configuration data", "d": "4/2018"}, {"body": "could share minimal code example reproduces reproduce newly created app", "d": "4/2018"}, {"body": "tested old version react reactdom error read link", "d": "4/2018"}, {"body": "close lack information", "d": "4/2018"}, {"body": "close released", "d": "4/2018"}, {"body": "hello issue react work correctly several libraries reactautosuggest reactinputmask try use eventtargetvalue inside onchange handler get undefined nt check value type string methods break eventtarget window", "d": "4/2018"}, {"body": "reproduce jsbin opens", "d": "4/2018"}, {"body": "thanks helpful secondary confirmation take time dig might happening event system however probably wo nt able get later week anyone wants research well", "d": "4/2018"}, {"body": "stripe also seeing bug upgrading elements codebase react two small notes learned debugging jsbin check matched problem issue also occurs document mode slightly reduces set possible causes jsbin bug html panel nt load saved content test open jsbin another browser copypaste html content debugging bit found event handler called expect input element adding event handler node raw dom api browsernative event expected value", "d": "4/2018"}, {"body": "gaearon js true amp amp replayfailedunitofworkwithinvokeguardedcallback allocstashed copywip function allocstashed stashedworkinprogressproperties function copywip objectassign stashedworkinprogressproperties workinprogress", "d": "4/2018"}, {"body": "seems like still quite lot bet need preserve hidden class explicitly write assignments", "d": "4/2018"}, {"body": "hm maybe possible write generic function based type annotations", "d": "4/2018"}, {"body": "gaearon ad hoc confirmation hidden class issue", "d": "4/2018"}, {"body": "forgot actually copy still slow faster", "d": "4/2018"}, {"body": "tried locally handwritten version seems pretty fast", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "tested original example much better thanks", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "decide case case basis case mapset happy feature set afaik keep forgetting", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "acdlite main reason stateful", "d": "4/2018"}, {"body": "tried make reproducible case worked close issue managed create reproducible snippet fort case share would good hear new contexts providers safely used without hidden state attached current fiber container thanks great library", "d": "4/2018"}, {"body": "closing favor helpful thanks", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "still working good story serverside data fetching dubbed suspense going away still wo nt going anywhere also constructor equally bad", "d": "4/2018"}, {"body": "lifecycle method one use server fetch data say redux action xhr given componentwillmount going away componentdidmount nt execute server extra clear never helpful server data fetching since executes synchronously render two passes start fetch another time resolved optimal architecture depend keep using purpose constructor guess suspense api ready preferred solution let wait data client server without rendering twice", "d": "4/2018"}, {"body": "gaearon problem new lifecycle hoc addremove stylesheets components module using cssmodules useable mode js function withstyles styles return function basecomponent class componentwithstyles extends reactcomponent count number move code componentwillmount constructor iv got strange bug styles nt work correctly different styles page layout component different routes move code new lifecycle styles removed return route previous js function withstyles styles return function basecomponent class componentwithstyles extends reactcomponent count number", "d": "4/2018"}, {"body": "keep counter like intended migration strategy nowhere blog post probably recommended way move code side effects like example problems please share reproducing case", "d": "4/2018"}, {"body": "call instead happens call times long lifecycle like constructor possible", "d": "4/2018"}, {"body": "bvaughn stylesuse add styles head", "d": "4/2018"}, {"body": "course move code componentdidmount appears blinking effect hm sounds unexpected talking clientside rendered react adding style really different adding assuming sync rendering since called tick talking server rendering would make sense since nt invoked server guess would mean initially rendered payload would nt include styles get added hydration sorry overlooking something silly nt much experience server rendering", "d": "4/2018"}, {"body": "course move code componentdidmount appears blinking effect please share reproducing example", "d": "4/2018"}, {"body": "gaearon sorry moving code componentwillmount componentdidmount cause blinking effect debugging logging code brings delay problem remains server rendering", "d": "4/2018"}, {"body": "budarin clarify using constructor server rendering mentioned work", "d": "4/2018"}, {"body": "bvaughn understood temporary solution dirty hack removed future", "d": "4/2018"}, {"body": "exactly need server attach stylesheet dom provide complete example discuss", "d": "4/2018"}, {"body": "gaearon server side use calls dispatch behind scene puts styles store collect form critical css moving code constructor cause problems server side problem client side possibly inconsistent count calls use unuse moving code constructor nt know need situation pointed existing problem ask help resolve", "d": "4/2018"}, {"body": "different things client server side helps thanks think best solution would call unconditionally call constructor behind serveronly check longer term may provide separate serveronly hook replace constructor", "d": "4/2018"}, {"body": "gaearon thanks solved problem", "d": "4/2018"}, {"body": "gaearon may ask thread create another one new lifecycle move code componentwillreceiveprops need access instance call method computing next state form state based instance props example js componentwillreceiveprops nextprops nextcontext const computedmatch location path strict exact sensitive nextprops getderivedstatefrompropsis impossible due presence mandatory context property instance declaration moving code generates infinite loop js componentdidupdate prevprops prevstate snapshot const computedmatch location path strict exact sensitive thisprops", "d": "4/2018"}, {"body": "fix infinite loop comparing first argument calling particular props interested changed alternatively move context reading code component one pass context prop would able access static lifecycle", "d": "4/2018"}, {"body": "gaearon unfortunately prop interested check take needed effect suited way move context thanks idea", "d": "4/2018"}, {"body": "gaearon one thing transition new lifecycle moving due need access instance fields methods double render cycle changing props rendering force component render needed mentioned transition guide project lot places call instance methods access instance fields transition degrade performance app rendering", "d": "4/2018"}, {"body": "hard discuss without specific examples primary transition path need change state response new props use cause double rendering reason need access instance variables likely way restructure code need say sure without seeing finally side effects happen sometimes split existing code two methods example seems impossible without making performance slower please share take look", "d": "4/2018"}, {"body": "thanks explanation", "d": "4/2018"}, {"body": "understood temporary solution dirty hack removed future clarify incorrect release blog post states explicitly continue supported version", "d": "4/2018"}, {"body": "seems work fine react ends dom prints warnings nt think react issue encourage see skips attribute somewhere", "d": "4/2018"}, {"body": "ca nt call intentional check cloning like safe said probably throw better error", "d": "4/2018"}, {"body": "pr really needed", "d": "4/2018"}, {"body": "fixed nicolevy", "d": "4/2018"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "4/2018"}, {"body": "seems like duplicate", "d": "4/2018"}, {"body": "similar attributes think likely add oneoff exceptions like", "d": "4/2018"}, {"body": "hey started work input appreciated", "d": "4/2018"}, {"body": "onchange passed undefined null considered acknowledgement silence warning case split render method component use preview component interactive use component preview pass undefined change handler warning shown tell forgot intended way nt quite agree see saying also legitimate case write get made typo notice mine field suddenly readonly really confusing think case typo common intentional use case explaining case could explicitly pass noop function nt anything silence warning", "d": "4/2018"}, {"body": "passed instead linter would catch question warning intended catch typos provide onchange imo specify onchange variable undefined typo acknowledgement alternative could allow keen creating nop every case importing dependency one", "d": "4/2018"}, {"body": "nt know see value null undefined sigil always", "d": "4/2018"}, {"body": "warning functions readonly warning warning intended let know need onchange handler w value passing undefined acknowledging imo property set significant enough vs specifying likewise treated specified warning emitted either case whereas currently cases looking value rather prop passed vs falsy checks imprecise", "d": "4/2018"}, {"body": "linter would catch good linter aware builtin eslint rules catch mistake like also try make assumptions user toolset try warn typos even linter capable catching keen creating nop every case importing dependency one seems like philosophical stance see practical argument dependency literally bytes also low effort type even shorter gives opportunity note reason comment passing falsy value checked attribute trigger warning truthy value look like bug", "d": "4/2018"}, {"body": "maybe would help specific code example render function looks like supervising purecomponent passes without component use render function readonly previews case get warning falsy encounter warning got complicated case default value truthy radio group gotten warning falsy value would alerted issue sooner could something like fix would easy wait nt supposed inline functions case causes rerender even though nothing really changed would need cache first ts const nop gt undefined export function render label placeholder value maxlength error handlechange nop textfieldprops amp partial know bit nitpicky would rather allow use nop blank method someone else team came across would done initially without knowing cause rendering issue", "d": "4/2018"}, {"body": "repro case", "d": "4/2018"}, {"body": "btw another potentially related bug happens remove feature flag override manifests warning maybe change test suite use feature flag people use real bundles nt leave confident", "d": "4/2018"}, {"body": "added failing tests", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "cheers pr saved us would confusing day", "d": "4/2018"}, {"body": "upgraded react seeing similar error referencing similar area react codebase without null check", "d": "4/2018"}, {"body": "please file new issue reproducing case thanks", "d": "4/2018"}, {"body": "issue hard debug figure error happens production build development build works fine also link says go object generic error decoder link nt offer useful info", "d": "4/2018"}, {"body": "fact link looks weird bug nt offer info something react broken see point way reproduce even production website would helpful", "d": "4/2018"}, {"body": "one possible reason could happen using broken version uglify breaks react bundle example issue try downgrading upgrading uglify going close nt get details far reproduce take another look", "d": "4/2018"}, {"body": "understanding maintain reference detached tree one update removed next update old node get cleared help", "d": "4/2018"}, {"body": "thanks gaearon dcodus verify seeing detached nodes expected gc verify whether actually memory leak profiling memory time performance tab", "d": "4/2018"}, {"body": "detached nodes expected gc quite accurate saying nodes unmounted previous update wo nt gc next update user interacts app eventually detached nodes get gc happens next update rather update caused unmount", "d": "4/2018"}, {"body": "right saying clearer gc eventually assuming update processed meaning nt memory leak since constant number detached nodes get gc application updates", "d": "4/2018"}, {"body": "although nt proof google reading site added month ago google seems ignore mixed case please reconsider", "d": "4/2018"}, {"body": "please file new issue specific information attributes google requires casing thanks", "d": "4/2018"}, {"body": "ran issue trying see achieve thing gather possible component makes use access api outside child render function come something may work make little easier though would really appreciate feedback good practice whatever reason helper component export interface ipropsrunonlifecycle runonmount gt void runonupdate prevprops object gt void runonunmount gt void children jsxelement reactnode export class runonlifecycle extends reactcomponent componentdidupdate prevprops prevstate snapshot thispropsrunonupdate null thispropsrunonupdate prevprops componentdidmount thispropsrunonmount null thispropsrunonmount componentwillunmount thispropsrunonunmount null thispropsrunonunmount render return thispropschildren null wondering going cause headaches line still feels like pretty standard react somewhat hack", "d": "4/2018"}, {"body": "subtle differences might make approach bad idea example class component used refs refs would yet set callback run would suggest using hoc approach instead real downside using hoc sort thing mitigated api", "d": "4/2018"}, {"body": "took approach like react docs people said working well us far", "d": "4/2018"}, {"body": "subtle differences might make approach bad idea example mapelement class component used refs refs would yet set runonmount callback run thanks feedback bvaughn moment using purely kind state proxy component adds removes things ui depending mounted within context tree kind like portals within react component tree actually rendering children dealing refs keep mind need anything interacts refs", "d": "4/2018"}, {"body": "fixed closurecompiler release", "d": "4/2018"}, {"body": "sounds like rather onblur bubbling want support via onfocusout since browsers nt bubble native events react could cause bugs breaking expectations supported yet though various reasons today learned react actually already bubbles blur events unlike browsers makes sad understand issue created", "d": "4/2018"}, {"body": "noticed similar behaviour event sure merits separate issue posting response first happy move comment new issue need reduced test case open console click around bit scenario check one boxes place virtual dom changes consequence event gets lost event bubbles understood aweary correctly currently intended behaviour point view react yes", "d": "4/2018"}, {"body": "sorry following quickly vacation try get soon", "d": "4/2018"}, {"body": "eunikitin happening get bottom", "d": "4/2018"}, {"body": "aguynamedben wrote", "d": "4/2018"}, {"body": "try like ok dont know please whoever explains flow import react react import type node react type props children node", "d": "4/2018"}, {"body": "finally caught long vacation sounds really interesting little surprised gcc nt inlining least functions tried minimal example looks like gcc never inlines methods passed via config object like react despite attempts indicate object never change familiar prepack sounds exciting get get around whatever stopping react", "d": "4/2018"}, {"body": "frehner still experiencing issue latest release", "d": "4/2018"}, {"body": "aweary yup appears still jsfiddle updated use still see behavior previous screenshots", "d": "4/2018"}, {"body": "also hit issue extracted reproduction case larger project put isolated createreactapp demo available trigger event listener creation mousing blue ui square mouse trigger rerender allocate new eventlisteners additionally mouseup mousedown events trigger render additional eventlistener allocations macos", "d": "4/2018"}, {"body": "kevzettler thanks repro sure see leak screenshot nt always seem go back baseline", "d": "4/2018"}, {"body": "gaearon yes baselines garbage collector kicks memory leak critical failure definition memory leak leak allocating additional event listeners expected appears indicated charts frehner themcmurder shared well", "d": "4/2018"}, {"body": "mentioned expected react allocate listener every component render development mode use fake events isolate component code throws browser displays uncaught error message even code call stack accidentally catches similarly makes break exceptions work even though react wrapping components trycatch overhead nt exist production versions", "d": "4/2018"}, {"body": "hey anyone know one contribute wiki", "d": "4/2018"}, {"body": "somebody working pr quiet want take aweary spirosikmd", "d": "4/2018"}, {"body": "hi diegoborda still waiting answer aweary ready merge", "d": "4/2018"}, {"body": "done", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "blog link", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "closing since api exists", "d": "4/2018"}, {"body": "gaearon bug months old still reproduces suggest create another one stackoverflow chances fix", "d": "4/2018"}, {"body": "stackoverflow post mention anything nested call obvious issue however edit answer better clarify closing particular issue expected react inside lifecycle children attached current tree rendered fix use portals instead nested calls another issue refs attaching time nested calls please file new bug reproducing case take look", "d": "4/2018"}, {"body": "essentially htmlreactparser accomplishes however purposes behind intentionally uglyrepetitive dangerouslysetinnerhtml html html procedure actually serve reminder dangeroushacky thing nothing hacky injecting html generated markdown example always wonky name false danger alarms hurt security well second gaearon proposition adding tag would even say long overdue nt mind original proposition extending either", "d": "4/2018"}, {"body": "thanks making react", "d": "4/2018"}, {"body": "thank guys making happen please keep amazing things going guys incredible awesome", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "thank much", "d": "4/2018"}, {"body": "bvaughn mentioned fix picked soon someone publishes new patch version", "d": "4/2018"}, {"body": "published", "d": "4/2018"}, {"body": "guess semver work probably close issue used packagejson pick latest", "d": "4/2018"}, {"body": "great thank", "d": "4/2018"}, {"body": "got issue update fix", "d": "4/2018"}, {"body": "hello erez checkmarx get lot requests customers detect issue part static code analysis tool please correct wrong understand thread solution issue related vulnerability expected near future headsup add detection one coming releases totally agree april clear warning documentation beneficial users", "d": "4/2018"}, {"body": "changing potentially breaking clear better somebody sends pr think take next minor release", "d": "4/2018"}, {"body": "moving towards graduated manner example update documentation make clear dangerous warn console unless whatever enabled future release disable unless set future release disable unless set warn unless csp disables inline styles major release disable set csp disables inline styles something along lines could take fast slow possible might steps necessary given many sites seen github pattern seems reasonable likely break things like tools check password complexity etc", "d": "4/2018"}, {"body": "generally nt use global runtime feature flags like break component ecosystem", "d": "4/2018"}, {"body": "send pr midday monday mechanically pretty simple", "d": "4/2018"}, {"body": "missed deadline give update working clientside complex part actually turns handle serverside rendering trying figure best place put password exception make sure nt impact hydration diffing", "d": "4/2018"}, {"body": "gaearon problem approach nt work input element visible mount ran issue using bootstrap modal want focus first child element attribute modal gets displayed created generic component wraps bootstrap modal export default class modal extends reactcomponent componentdidmount thisdialog shownbsmodal function find autofocus focus thisdialog hiddenbsmodal thispropsoncancelclick thisdialog modal show render const title confirmtext onconfirmclick children thisprops return removed header markup clarity children removed buttons markup clarity email address removed rest markup clarity see ended using dom attribute input field rather nt work problem getting warning invalid dom property mean warning annoying would nice could least disable warning somehow tried searching way disable nt find anything might also better way solve aware", "d": "4/2018"}, {"body": "nt mean delaying page becomes interactive ideally fold critical content become interactive sooner lazy loaded typically fold less important stuff download rehydrate whole point lazy loading make critical stuff interactive sooner", "d": "4/2018"}, {"body": "dalimian possible nt put perf markers app wont able comment try though", "d": "4/2018"}, {"body": "seems closed per", "d": "4/2018"}, {"body": "example mock logic jsx describe popover gt beforeall gt reactdomcreateportal jestfn element node gt return element aftereach gt reactdomcreateportalmockclear render correctly node function gt const component renderercreate button gt popover snaptests looks like jsx jest snapshot exports button popover thoughts", "d": "4/2018"}, {"body": "run issue well really hard figure clue strings sentry reports nonenglish causing problems across major websites using react extension modifying dom lot translators password managers etc totally break react website workaround found right recommended", "d": "4/2018"}, {"body": "workaround solved facebookcom chrome translate works react", "d": "4/2018"}, {"body": "ok works means ca nt use google translate time realize repair errors still without implements key properties everywhere still react complaint keys absents another things another things nt remember well render google translate lost keys", "d": "4/2018"}, {"body": "want help fix please create small reproducing case nt involve extensions manually reproduces might dom take look", "d": "4/2018"}, {"body": "gaearon fritzc original snippet nt involve extensions full page", "d": "4/2018"}, {"body": "involves using google translate asking create reproduction case google translate would dom api calls see exactly causing issue", "d": "4/2018"}, {"body": "nt think anyone answer except google chrome team even sure translate part open source chromium project", "d": "4/2018"}, {"body": "nt think need know internals google translate look dom single word set dom breakpoints tell manipulations necessary reproduce mutation observer help", "d": "4/2018"}, {"body": "ok simply looking dom obvious get changed significantly original \u7121\u9078\u629e translated choice interesting works well react", "d": "4/2018"}, {"body": "right encourage write minimal case codesandbox similar mutations try reproduce problem", "d": "4/2018"}, {"body": "mutation observers nt able replicate way would nt break react well pass experienced person", "d": "4/2018"}, {"body": "used chrome dom breakpoints see google translate hood created minimal reproduction closely emulates replaces text demo source crossbrowser compatibility breaks safari firefox chrome key lines bottom js get text node checked const myel documentqueryselector div gt div gt div childnodes create arbitrary font element replace const fontel documentcreateelement font myelparentelementinsertbefore fontel myel myelparentelementremovechild myel puts dom node state cause next update react throw error ran mutation code demo react changing select checked text instead comment errors thrown declare close get reproduction google translate behavior", "d": "4/2018"}, {"body": "thanks idea inserts tags instead modifying text node probably good reason obvious", "d": "4/2018"}, {"body": "idea venture guess say related incrementally translate large blocks text screen inconsistency browsers bare text nodes handled", "d": "4/2018"}, {"body": "issue react native forced reuse new state variable like const newstate new thissetstate value newstate gt consolelog newstate new nt would const newstate new thissetstate value newstate gt consolelog thisstate old", "d": "4/2018"}, {"body": "event type work applications whosesmile suggested found works better", "d": "4/2018"}, {"body": "problem happens often using situation described issue title change initial values either making uncontrolled empty string even situations nt strings works beginning input everything string counterintuitive like much able use initial values good able distinguish something really defined value like javascript const someobject null someobjecta existent property defined null someobjectb inexistent property returns undefined versus const someobject undefined someobjecta existent property defined undefined someobjectb inexistent property returns undefined", "d": "4/2018"}, {"body": "idhard looked discussion needed clarification regard exactly caught error boundary since documentation nt seem explicitly say errors event handlers nt caught think explanation makes sense feasible track component owns code blew option isolate component triggered error sure would helpful guess would feasible implement key takeaway discussion worthwhile trying move much code event handlers lifecycle methods components possible possible reduce risk triggering error wo nt caught another thing would nice explicitly write documentation errors event handlers dealt error boundaries nt mind adding documentation creating pr gaearon", "d": "4/2018"}, {"body": "since documentation nt seem explicitly say errors event handlers nt caught mzedeler documentation mention explicitly pointed early discussion", "d": "4/2018"}, {"body": "wonderful thanks gnapse", "d": "4/2018"}, {"body": "want events captured errorboundaries always force lifecycle handle class myinput extends component pendingevents new reacteventtolifecycle handleonchange event const onchange thisprops onchange event shouldcomponentupdate return thispendingeventshandleevents render const value onchange otherprops thisprops return note solution needs bit research edge cases eg text inputtextareas current value value write character cursor goes end text time setselectionrange solve case course might issues missed", "d": "4/2018"}, {"body": "use case think ca nt solved well slots createportal gif similar slightly different setup using createportal responsive site move form field app toolbar much higher tree case well really nt want events bubbling back page content definitely want form context go implementation btw slotesque thing using context", "d": "4/2018"}, {"body": "got error react reactdom reacttestrenderer version", "d": "4/2018"}, {"body": "please file new issue reproducing example locking one replies help anyone fix problem bug fix without reproducing example", "d": "4/2018"}, {"body": "update one possible case could get thanks tip", "d": "4/2018"}, {"body": "really hacky thing still solution", "d": "4/2018"}, {"body": "work test repo wanted provide quick update first changed repo name lives also added tests plan adding many come using circleci zapier integrated react prs run tests pr code print report pr temporary issues page stores links pr report circleci job check right tests running firefox chrome circleci box love get integrated browserstack sauce labs nt account feedback suggested direction would much appreciated hoping help provide good proofofconcept even real value automated browser testing works", "d": "4/2018"}, {"body": "component would redownload user data every single reconciliation component tree would stuck waiting component finish downloading every time kovensky necessarily development choice could instance cache request nt need redownload", "d": "4/2018"}, {"body": "exactly suspense please see second part talk", "d": "4/2018"}, {"body": "hello issue trying scrape page using splash forced click event know way bypass without modifying code mentioned", "d": "4/2018"}, {"body": "wuweiweiwu hey sorry catching issues would wonderful", "d": "4/2018"}, {"body": "awesome get started asap definitely reach questions", "d": "4/2018"}, {"body": "case use component using rendertostaticmarkup server render component", "d": "4/2018"}, {"body": "rendering react attributes markup wo nt resolved clientside anyway solved already inheriting implementing error catching implementation calling saferender wrapped implemented components derived", "d": "4/2018"}, {"body": "workaround trycatching render method help error throw render method error occurs deep react tree method react render one special attribute", "d": "4/2018"}, {"body": "true creation components also root cause problem streaming used well moment error happened part component sent already", "d": "4/2018"}, {"body": "aweary question need muted attribute passed video tag allow autoplaying mobile devices progress direction thank", "d": "4/2018"}, {"body": "folks progress issue generally visible takes form pr nt see linked pr updates issue assume progress unclear path forward nt really way saying sync attribute use property nt know adding said logic even good idea", "d": "4/2018"}, {"body": "unclear path forward nt really way saying sync attribute use property nt know adding said logic even good idea jquense think understand point inputs exactly thing probably live value needs specialcased way otherwise prop sets attribute means users need manually access property want control precisely like inputs also fine personally set attribute leaving everything else user perfectly fine imho input implemented", "d": "4/2018"}, {"body": "hesitant change act like want get away specialcased behavior since caused number problems course would likely much less problematic since boolean value nt really way saying sync attribute use property nt know adding said logic even good idea spec solution sets initial muted value reflecting attribute controlled using property nt support many attributes nt actually dom attributes think good argument mirroring api", "d": "4/2018"}, {"body": "want get away specialcased behavior since caused number problems yeah controlling behavior ends causing many headaches would nt want though agree right behavior generally nt support many attributes nt actually dom attributes defaultvalue think good argument mirroring api like idea tho always slippery slope would ssr behavior someone specifies suppose already handle value checked", "d": "4/2018"}, {"body": "like idea tho always slippery slope would ssr behavior someone specifies defaultmuted muted suppose already handle value checked yeah imagine would behavior like defaultvalue ssr rendering attribute provided value", "d": "4/2018"}, {"body": "ya concern valuedefaultvalue special cased codebase sort assuming pattern used inputs probably go see works tho worrying", "d": "4/2018"}, {"body": "assumption one use case handle situation attribute present video first rendered since dynamic behavior per spec think defining boolean attribute must set property easy would good enough hope least", "d": "4/2018"}, {"body": "could easy adding list", "d": "4/2018"}, {"body": "gaearon please look benchmark difference code mostly callable function increased performance", "d": "4/2018"}, {"body": "tiny benchmarks like representative real code performance example prepare reproducing case involves real even small react app also demonstrates stark difference would interesting", "d": "4/2018"}, {"body": "gaearon legitimate reason still keeping around could deprecated least warn using currently warnings imho inherent inconsistency two apis causes certain amount disorientation whole portals api since unstable method used yet used method", "d": "4/2018"}, {"body": "time deprecate want send pr", "d": "4/2018"}, {"body": "nice leave related solved moment real good option cases event behavior workable eg modals", "d": "4/2018"}, {"body": "sure start working", "d": "4/2018"}, {"body": "nt seem like moving forward think makes sense deprecate anyway maybe create pressure solve", "d": "4/2018"}, {"body": "sense gaearon needed move forward sense sebmarkbage proposed additional api solution staled happy throw usecases attempts workaround behavior together help getting push back reactbootstrap afaict ca nt effectively solve issue without ugly whitelist event preventdefault blocker", "d": "4/2018"}, {"body": "record assume currently talking completely killing api since topic name previous discussion suggest kick things actually deprecating via warnings yet keeping api intact later release", "d": "4/2018"}, {"body": "documentation updated use style example still uses take tools libraries updated use correct form would make sense teach users soon possible", "d": "4/2018"}, {"body": "opened add ability least serverrender nonstandard components nonstandard attributes like amp", "d": "4/2018"}, {"body": "running issue app created createreactapp pulling library uses react also using storybook tests eliminated react one copy indicated way figure react thinks second copy loaded", "d": "4/2018"}, {"body": "well full day trialanderror figured second copy coming storybook moment removed everything started working wish react told second copy coming", "d": "4/2018"}, {"body": "resolve issue tried restructure repo move storybook dev dependency hoping prevent second copy loaded unfortunately solve issue created reproducible example contains library one package app another package created createreactapp would really appreciate someone could explain going second copy loaded", "d": "4/2018"}, {"body": "came conclusion wasted hour time working demo demonstrate events work react wanted use property log phase mine mission critical scenario would nice fixed people nt spin wheels debugging future", "d": "4/2018"}, {"body": "use callback instead example js class foo extends reactcomponent componentdidmount thispropsonref render return export default foo js import foo foo class app extends reactcomponent render", "d": "4/2018"}, {"body": "one find documentation methods one available react versions added", "d": "4/2018"}, {"body": "answering turns dom element methods case elements builtin dom element methods used", "d": "4/2018"}, {"body": "feature needed encapsulated html code script separate pure react environment normally needed large enterprise setting nt always control remote content want use jquery easily ca nt believe people nt complain", "d": "4/2018"}, {"body": "nt already happening least running thissetstate componentdidcatch good", "d": "4/2018"}, {"body": "think commented wrong thread delete x upper right comment", "d": "4/2018"}, {"body": "gaearon acdlite seen repro irrelevant thread needs new issue get right one", "d": "4/2018"}, {"body": "also found browser behaves differently sequence emitting composition events oninput events different ime may also behave differently events example native apple keyboard ios emit composition event input event use google keyboard composition event never emitted important implement standard basic thing", "d": "4/2018"}, {"body": "bsonntag thanks making label input siblings worked", "d": "4/2018"}, {"body": "still issue ie edge works nt work nt work nt work order test effectively follow steps using edge go settings gt gt view advanced settings privacy services make sure offer save passwords enabled make sure nt passwords saved codesandboxio domain steps reproduce works go sandbox type username password hit submit see confirmation panel saving passwords refresh page type another username password hit submit see another confirmation panel saving passwords refresh page click first input see list previously used usernames steps reproduce nt work remove previously saved passwords codesandboxio domain go nonworking sandboxes type username password hit submit password confirmation panel refresh page click first input list previously used usernames", "d": "4/2018"}, {"body": "react starts starts listening events top level using single event listener specific reason root listener sit app root node rather document would imo make react selfcontained easier embeddable contexts already document listeners setup time react app initializes", "d": "4/2018"}, {"body": "another application would element serialization say json way without transpilers serialize closures functionprototypebind variables case object function could keep functions prototypes data requires object number prototypes usually finite would work many applications well still possible function get data element though complicated", "d": "4/2018"}, {"body": "welcome open rfc think plausible want support point", "d": "4/2018"}, {"body": "kind news expecting browsers consistent firing events deleted elements think something fix react happy hear suggestions close see issue actionable us want avoid problems removereplace hovered elements hover", "d": "4/2018"}, {"body": "reopening per conversation sophiebits pointed might able fix relying bubbling", "d": "4/2018"}, {"body": "gaearon think throwing warning appropriate since really amounts false alert setting default prop would mask real problem seems like downstream solution upstream problem original elementcomponent gets created garbage immediately get thrown waste resources creating first place never used", "d": "4/2018"}, {"body": "zpao could let know related driving bonkers broken renders note behavior happens windows originally thought electron bug starting think something react parser windows help greatly appreciated note workaround load image tag loads url cdu make gaearon angry", "d": "4/2018"}, {"body": "react nt parser literally passing string gave browser encourage create reproduction case without react ie dom api ask electron support forums", "d": "4/2018"}, {"body": "thanks gaearon continue path", "d": "4/2018"}, {"body": "one compare children enough check", "d": "4/2018"}, {"body": "mind sharing solution seem victim silly stuff", "d": "4/2018"}, {"body": "need react scope use jsx example", "d": "4/2018"}, {"body": "thanks hint works addition still wondering many working boilerplate examples work without import react even though use jsx syntax well something else impacting react needs imported context reactredux", "d": "4/2018"}, {"body": "maybe inject import automatically recommend lead surprises", "d": "4/2018"}, {"body": "well worked surprised thanks help gaeron", "d": "4/2018"}, {"body": "second part talk suspense relevant", "d": "4/2018"}, {"body": "gaearon think proper setup integration tests nonminified nt testing environment close production one possible one side note condition passed function seems true nonminified missing something", "d": "4/2018"}, {"body": "came see vuejs handling quite like approach list modifiers stop prevent capture self passive compose events way like maybe help inspiration issue", "d": "4/2018"}, {"body": "using defaultvalue attribute worked case onblur", "d": "4/2018"}, {"body": "elimisteve could block specific cssonly keylogger example strict imgsrc policy", "d": "4/2018"}, {"body": "redux store could function import generateuid uid const generatestore preloadedstate gt const getuid new generateuid return createstore appreducers preloadedstate compose applymiddleware middlewares middleware unique id store gt next gt action gt actiontype actiontypesgetuniqueid return getuid actionpayload else return next action clientjs const store generatestore serverjs function req res next const store generatestore uidactionjs somewhere component connect hello world every request outcome called using redux access action everywhere", "d": "4/2018"}, {"body": "mentioned future might way optin pure functional components issue follow see progress found issue closed guess point follow along btw option would implemented think would nice could applied global level rather set every function", "d": "4/2018"}, {"body": "simply wrapper around react wondering benefit using vs extending avoid packing extra pounds", "d": "4/2018"}, {"body": "zpao wrong new context api caused object also maybe react component", "d": "4/2018"}, {"body": "using defaultvalue attribute worked case onblur", "d": "4/2018"}, {"body": "agnihotriketan defaultvalue work fine intended uncontrolled inputs using controlled inputs workaround best imo", "d": "4/2018"}, {"body": "per stack overflow comments worked us add elements", "d": "4/2018"}, {"body": "need stateless components react prepared minimal external package reactinstantiablestateless handles", "d": "4/2018"}, {"body": "able reproduce vanilla javascript able throw quick fix wonder similar fix transferred react codebase thrilled attempt guidance possible hoping mentorship tag", "d": "4/2018"}, {"body": "hey well done like humanjs import react component react class human extends component class thirdperson extends component render return third person export default human personjs import react react import human human class person extends human render return person name thisstatename export default person please let know misunderstood concept thanks ps please ignore way naming", "d": "4/2018"}, {"body": "recommendation use inheritance react components many pitfalls disagree recommendation mostly", "d": "4/2018"}, {"body": "henlz issue created somewhere ran well", "d": "4/2018"}, {"body": "hey guys news issue", "d": "4/2018"}, {"body": "sophiebits thank suggestion use issue similar one marcysutton asked using lot vanilla js traversal methods returned null values used test lights green", "d": "4/2018"}, {"body": "related onfocusinonfocusout events contrary tvararu experience using nt call handler neither warning react uses onfocus onblur instead onfocusin onfocusout react events normalized bubble onfocusin onfocusout neededsupported react ended adding event listener manually via ref", "d": "4/2018"}, {"body": "gaearon get perf results latest version react", "d": "4/2018"}, {"body": "fiber react", "d": "4/2018"}, {"body": "alamothe looking shouldcomponentupdate return false particular cases fall back onto reactcomponent purecomponent know way refactor app better way easier mean time optimise known conditions spam updates", "d": "4/2018"}, {"body": "requiring value null must specifically provided absolutely allowed via proptypes use case running callbacks required selectors nt need specific use cases new developers constantly forgetting provide usual callbacks want force uses components make conscious decision include specific callbacks rather someone forgetting props yes hack specific checks via flow splits props validation two places rather unintuitive someone glancing proptypes definitions", "d": "4/2018"}, {"body": "hi landed looking way extend use css js emotion think elegant way defining default styling let say want extend style depending props either drop elegant emotion api define classic react component rendering emotion component mess props use workaround parent emotion component cents idea pass current props function props example idea would pass current component props last argument function prop define alternatively could send current props using spread operator like think would make elegant way transfering props without go whole definition component nt think way maybe smart people tell idea good bad", "d": "4/2018"}, {"body": "fyi effort may get new life due ca nt push along try encourage others thanks", "d": "4/2018"}, {"body": "already newest chrome still facing issue angular", "d": "4/2018"}, {"body": "chrome react", "d": "4/2018"}, {"body": "shame mahmadi said going march comment mahmadi chromiumorg mar fix nt chrome bad chrome rolled starting march tested native events demo website works chrome appreciate following try going phone checking", "d": "4/2018"}, {"body": "really strange working natively even though getting input even received react need investigation exactly sure react attaching handler document element like click handler example natively see input event happening somehow react nt receiving events", "d": "4/2018"}, {"body": "add onblur thishandlechange input", "d": "4/2018"}, {"body": "dahlke solve raised similar question stackoverflow", "d": "4/2018"}, {"body": "prefer using hocs needed order easily manipulate nested components javascript import react react let idx const uuid gt idx export default wrapped gt props gt const id rest props const uniqueid id id return", "d": "4/2018"}, {"body": "sgrove see posted years ago also built player react year issue worked adding lifecycle method componentwillreceiveprops solved issue immediately componentwillreceiveprops thisrefsaudiopause thisrefsaudioload thisrefsaudioplay thissetstate state gt showsoundwave soundwave", "d": "4/2018"}, {"body": "using random prop eg pitfalls performance drain noticeable large form", "d": "4/2018"}, {"body": "kkdatkiran worked thanks", "d": "4/2018"}, {"body": "solution storing seems work js import polyfill reactlifecyclescompat reactlifecyclescompat reactlifecyclescompat class input extends reactpurecomponent static getderivedstatefromprops value return value state onchange event gt const onchange thisprops const value eventtargetvalue thissetstate value gt onchange value render const value thisstate return", "d": "4/2018"}, {"title": "author style guide needs cleanup better navigation", "body": "submitting current behavior authors style guide easy find navigation aio docs despite guide located near contributor information despite contributors find via google search aio search might want rename andor rename angular coding style guide easier distinguish search results perhaps angular documentation style guide alignment title master google dev doc style guide opens image error confusing without anchor modifier page opens end live example section displays image error places conflicts google developer documentation style guide told follow google style conflict reconfirm differences update doc appropriate expected behavior votes contributor information keep simple remove guide put documentationmd documentationstylemd reference think doc contributor parallel developmd code contributors alternative want move contributor info guide new navigation section would work might github contributors expect find also bit work angular documentation style guide preference rename angular coding style guide something like page title keeping style guide nav title shorthand fix open top page happens automatically removed aio guides put docs update match refer gddsg minimal reproduction problem instructions motivation use case changing behavior make easier find need make accurate use environment", "num": "23626", "d": "4/2018"}, {"title": "services folders", "body": "submitting expected behavior hope format feature request correct really new angular apologize obviously useful would like know possible seperate services folder separate app component bits pieces something like motivation use case changing behavior problem lot services becomes difficult find want immediately environment", "num": "23622", "d": "4/2018"}, {"title": "add information use treeshakable injector format", "body": "submitting x documentation issue request current behavior expected behavior need find way help people know ca nt use new format overriding token must use syntax tree shakable", "num": "23621", "d": "4/2018"}, {"title": "stackblitz issue absolute paths", "body": "submitting current behavior issue stackblitz integration examples angulario examples use absolute paths specifically lazy loading modules router examples broken error occurs use absolute paths begin app examples router guide see email brandonroberts also adding issue appear searches potential outstanding work expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23620", "d": "4/2018"}, {"title": "angular rc versions", "body": "milestone completed new angular version release schedule table informative provide information updates", "num": "23619", "d": "4/2018"}, {"title": "stray change log file aio guide directory navigation", "body": "submitting current behavior following change log part stable release docs nt navigationtoc nt seem link hit google search angular change log also pretty outofdate recent entry march looks like intent docsspecific change log expected behavior either delete remove file guides consider replacing redirect anyone bookmarked old change log appropriated directed new change log include code doc changes single change log make current useful keep file make current include link code change log put masterchangelogdocsmd add navigation keeping uptodate recent documentation changes might also consider putting code change log navigation location minimal reproduction problem instructions ways find file google angular change log see entry within aio search change log update current go directly motivation use case changing behavior knowing new changed docs useful something like could good file outofdate doc changes showing prominently search making harder users find right docs angular updates changes environment", "num": "23615", "d": "4/2018"}, {"title": "angular responsive", "body": "angular responsive please check video", "num": "23614", "d": "4/2018"}, {"title": "service worker hash mismatch", "body": "like use start discussion based upon topic talked gkalpak ngconf mentioned service worker implementation checkes hashes cached files nt match serves data network like service worker problem every proxy web manipulate files downloaded especially case mobile providers minifying inlining lot stuff fly save bandwith also tools like liveserver change indexhtml used reproduce issue one big use cases pwas areas low bandwith somehow conflicting perhaps one way solve provide exchangeable hashcheckstrategy cases programmer wants take responsiblity checking hashes order bypass issue could write sth like", "num": "23613", "d": "4/2018"}, {"title": "angular compiler nt return type error", "body": "submitting accessing undeclared member nt return type error angular doc wrong section template syntax type cast function current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23612", "d": "4/2018"}, {"title": "tree shakable providers injectiontoken inject work abstract classes", "body": "submitting current behavior use new inject abstract classes expects injectiontoken type defined newable expected behavior possible use inject abstract classes sidenote inject angularcoretesting uses instead includes abstract classes minimal reproduction problem instructions please see comments motivation use case changing behavior api symmetrie going principle least surprise current behavior could show stopper situations environment", "num": "23611", "d": "4/2018"}, {"title": "formsmodule cause edge browser error page problem loading crash", "body": "submitting current behavior formsmodule cause edge browser display message page problem loading tried load page times still problem site know better things watch page reload try coming back page later devtools also close without revealing useful message page reloaded several times occasionally also cause edge actually crash leaving error windows event log eg faulting application name microsoftedgecpexe version time stamp faulting module name kernelbasedll version time stamp expected behavior work works chrome opera etc minimal reproduction problem instructions create new angular app browse edge confirm works ok edit tsconfigts change edit appmodulets include formsmodule import adding following lines browse edge page load instead showing message noted motivation use case changing behavior wanted target environment windows", "num": "23610", "d": "4/2018"}, {"title": "function calls supported decorators fulltemplatetypecheck specified dynamic effect", "body": "submitting current behavior building library specifying try call method inside decorate example cause compilation error adding error emitted also seems effect particular case expected behavior error emitted least suppressed also expect setting nt effect flag relates binding templates minimal reproduction problem instructions create file example ts import ngmodule angularcore import routermodule angularrouter ngmodule imports routermoduleforchild export class libmodule tsconfig set following options transpiling emit error note adding error emitted though kinda weird nt think nt effect reproduction repo motivation use case changing behavior error emitted ng environment related issues cc chuckjaz dherges alexeagle", "num": "23609", "d": "4/2018"}, {"title": "\u7ffb\u8bd1\u95ee\u9898", "body": "services dependency injection \u670d\u52a1\u4e8e\u4f9d\u8d56\u6ce8\u5165", "num": "23608", "d": "4/2018"}, {"title": "include cldr time units data locales", "body": "submitting x feature request current behavior nowadays app largely uses minute ago seconds developer easily create directive pipe cover instead using party lib like momentjs datefns problem resides locales would need handle indeed see angular extracting durations units cldr ca nt use extraction tool already downloading data last url discard nt hard make part locales expected behavior add duration units locale extra data motivation currently dependuse party libs non friendly treeshakable cover common used feature others pr welcome", "num": "23607", "d": "4/2018"}, {"title": "service worker forces status using httpauthentication", "body": "submitting current behavior using service worker web apps using http authentication case windows authentication ngswjson ngswcachebust runs status expected behavior status happen minimal reproduction problem instructions create angular service worker project like described enable kind authentication eg windows authentication motivation use case changing behavior motivation service workers work authentication possible solution ngswworkerjs file change implementation newrequest method adapter class following environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "23605", "d": "4/2018"}, {"title": "upload file local system without using form", "body": "developing app angular want upload file path c usersuserdownloaduntitledindd server without using form click given button upload file server", "num": "23604", "d": "4/2018"}, {"title": "select output triggered text input selected", "body": "submitting current behavior dumb component output export class hellocomponent output select new eventemitter subscribe select output component select output triggered upon two actions clicking button highlighting text input field screencast behaviour expected behavior might expected looks weird caused hard debug issue application minimal reproduction problem instructions created reproduction stackblitz motivation use case changing behavior environment tested chrome firebox probably bug every browser browser x chrome desktop version chrome android version xx chrome ios version xx x firefox version safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform macos others", "num": "23603", "d": "4/2018"}, {"title": "changelog missing", "body": "submitting current behavior changelog nt updated release candidate expected behavior documented changes angular environment", "num": "23602", "d": "4/2018"}, {"title": "number input fire event valuechanges", "body": "submitting current behavior click arrow input number valuechanges fire events expected behavior fire event click arrow input number minimal reproduction problem instructions environment", "num": "23601", "d": "4/2018"}, {"title": "httpclient put generic return type nt take", "body": "submitting current behavior consider ts reportprogress true observe events reportprogress true basically top call nt compile ts nonmatching override function definition bottom according way specify using generic type specify return type configuration exist compare definition returning generic type part expected behavior supposedly add override definition definitely make quick pr case minimal reproduction problem instructions shows ts compile error motivation use case changing behavior well type correctness nt think type put request nt supported assume like every methods small wrappers create handles types requests environment considering code still assuming versions angular date versions typescript", "num": "23600", "d": "4/2018"}, {"title": "code description mismatched", "body": "component code description mismatched look highlighted text attached screen shot", "num": "23599", "d": "4/2018"}, {"title": "aio resources eggheadio url found", "body": "documentation resources eggheadio url work changed eggheadiobrowseframeworksangular", "num": "23597", "d": "4/2018"}, {"title": "error due reference inexistant sourcemap ngswworkerjs", "body": "versions repro steps observed behavior contains reference sourcemap sourcemap file nt exist distribution files file prod cli copy produces message browser console desired behavior reference sourcemap", "num": "23596", "d": "4/2018"}, {"title": "feature request export noopngzone angularcore top level", "body": "submitting current behavior need create tests pushpipe run environment want disable zone particular test suite found noopngzone class exported top level try import noopngzone test fail error expected behavior noopngzone provided top level import like minimal reproduction problem instructions motivation use case changing behavior disable zone particular test suite really helpful user nt optout zone global test environment environment", "num": "23594", "d": "4/2018"}, {"title": "ng test fails read property options undefined error", "body": "current behavior running get read property options undefined error expected behavior want able run minimal reproduction problem instructions packagejson karmaconfjs javascript karma configuration file see link information moduleexports function config configset basepath frameworks jasmine angulardevkitbuildwebpack plugins require karmajasmine require karmachromelauncher require karmajasminehtmlreporter require karmacoverageistanbulreporter require angulardevkitbuildwebpackpluginskarma client clearcontext false leave jasmine spec runner output visible browser coverageistanbulreporter reports html lcovonly fixwebpacksourcepaths true angularcli environment dev reporters progress kjhtml port colors true loglevel configloginfo autowatch true browsers chrome customlaunchers chromenosandbox base chrome flags nosandbox singlerun false output running ng test environment followed instructions", "num": "23593", "d": "4/2018"}, {"title": "treeshakable provider missing docs create factories inject dependencies", "body": "submitting current behavior treeshakable providers using nt work without array example expected behavior treeshakable provider using work without array minimal reproduction problem instructions open see works open file heroservicets comment depsarray see nt work anymore motivation use case changing behavior meeting expected behavior environment", "num": "23592", "d": "4/2018"}, {"title": "reactive forms validator order matters", "body": "error expected validator return promise observable submitting current behavior expected behavior able reorder composable validators minimal reproduction problem instructions fails works motivation use case changing behavior environment", "num": "23591", "d": "4/2018"}, {"title": "tour heroes tutorial issue", "body": "submitting current behavior live example tutorial remove heroes try add new one hero name number empty also message heroservice deleted hero action adding expected behavior try add hero name input see new hero card name id minimal reproduction problem instructions motivation use case changing behavior base tutorial shouldt issues environment", "num": "23590", "d": "4/2018"}, {"title": "angular universal switches client side rendered page full rendered using webpack import", "body": "submitting current behavior using webpack dynamic imports client side page rendered code depends import executed causes page flicker gives bad user experience expected behavior would like able tell angular done rendering page yet minimal reproduction problem instructions sample code produces issue code placed solution work const zonecurrentschedulemacrotask reference gt gt gt import webpackchunkname dynamicimportedmodule mydataclass function mydataclass code execute client side page rendered visible done rendering page tinvoke motivation use case changing behavior using dynamic imports reduce overall code downloaded environment", "num": "23588", "d": "4/2018"}, {"title": "angular nt work ie works ie", "body": "submitting current behavior client reporting angular web application workdoes load ie expected behavior angular web application work ie minimal reproduction problem instructions deploy angular app use ie see issue motivation use case changing behavior client using ie ca nt ask upgrade machines latest version use app currently tested ourselve works ie environment possibly relevant polyfillsts file requires following polyfills import import import import import import import import import import import import import import requires following ngclass support svg elements import classlistjs run requires following reflect api import evergreen browsers require used reflectmetadata jit use aot angular decorators remove import required support web animations needed chrome firefox opera import webanimationsjs run default zonejs patch possible macrotask domevents user disable parts macrotaskdomevents patch setting following flags window zonedisablerequestanimationframe true disable patch requestanimationframe window zonedisableonproperty true disable patch onproperty onclick window zonesymbolblacklistedevents scroll mousemove disable patch specified eventnames ieedge developer tools addeventlistener also wrapped zonejs following flag bypass patch ieedge window zoneenablecrosscontextcheck true zone js required default angular import zonejsdistzone included angular cli application imports", "num": "23587", "d": "4/2018"}, {"title": "material menu accessibility narrator list menu position", "body": "submitting current behavior using matmenu narrator list matmenuitem position within menu ie menu item expected behavior narrator list menu item minimal reproduction problem instructions motivation use case changing behavior greatly helps visually impaired user experience navigating throughout product environment", "num": "23583", "d": "4/2018"}, {"title": "request yarn docswatch see changes navigationjson", "body": "submitting current behavior make change navigationjson locally stop start yarn docswatch refresh browser see change expected behavior would nice yarn docswatch could see changes navigationjson reload navigation onthefly way handles changes md files minimal reproduction problem instructions yarn start yarn docswatch look docs browser change navigationjson look docs browser navigation changed motivation use case changing behavior improve work efficiency reduce wait time making navigation changes make onthefly collaboration testing efficient environment", "num": "23582", "d": "4/2018"}, {"title": "aio add search terms analytics", "body": "submitting current behavior terms entered search bar tracked expected behavior track debounced searches analytics improve quality search results fulfill unmet needs time", "num": "23581", "d": "4/2018"}, {"title": "toh tutorial broken places", "body": "submitting current behavior toh tutorial broken following sections services observable heroservice following import statements throws error import observable rxjsobservable import rxjsobservableof simulate data server note instructs user use angularinmemorywebapi fails new angular cli following import staments herosearchcomponentts throws error import observable rxjsobservable import subject rxjssubject import rxjsobservableof expected behavior service replace imports staments rxjsobservable following import statements import observable rxjs import rxjs instruct user use npm install angularinmemorywebapi save without specifying version number replace import statements herosearchcomponentts import observable rxjs import rxjs import subject rxjs minimal reproduction problem instructions motivation use case changing behavior updating environment", "num": "23580", "d": "4/2018"}, {"title": "bazel failed publish build artifacts wrong bazelbin dir", "body": "ran got info found target target packagesupgrade npmpackagepublish uptodate info elapsed time critical path info build completed successfully total action info running command line access public tag next npm err path npm err code enopackagejson npm err errno npm err syscall open npm err packagejson enoent file directory open npm err packagejson npm ca nt find packagejson file current directory npm err complete log run found npm err error nonzero return code command process exited status issue seems path hardcoded incorrectly somewhere", "num": "23579", "d": "4/2018"}, {"title": "change detection propagated one direction", "body": "submitting current behavior currently use change detection strategy onpush change detection triggered user action say component template inside template use value user action trigger change detection value would updated use template templateref put somewhere keeps track original context change detection original component also update value template however propagates one direction action inside template value gets updated change detection triggered line used nested component works thrown used change detection work original template location makes change detection difficult popupalert type functionality expected behavior change detection work directions templateref keep track context also changedetector trigger check user action triggered changes happen fairly easy understand stackblitz much easier words minimal reproduction problem instructions motivation use case changing behavior developing popupalerthintdropdown portal functionality template defined one place used portal host tree requires us able tell change happened template original location template know environment", "num": "23578", "d": "4/2018"}, {"title": "trying find docs edit", "body": "looks difference operator usage rxjs docs tour heroes latest iterations directly take observable library also might add line say actually import rxjs stuff trying find update send pr somebody point get started edit docs really confused multiple repos", "num": "23577", "d": "4/2018"}, {"title": "canactivate custom environment guards", "body": "submitting current behavior im try collect different guards different build project expected behavior guards work enviromentts minimal reproduction problem instructions path id component projectoutletcomponent canactivate environmentguardsproject motivation use case changing behavior environment", "num": "23575", "d": "4/2018"}, {"title": "dynamic styling tag", "body": "hey guys problem getting bunch fontawesome icon class names api loop html trying apply somebody help", "num": "23574", "d": "4/2018"}, {"title": "links angularjs angular hybrid app working pushstate", "body": "submitting current behavior hybrid app angular ngupgrade angularjs angularroute click link inside angularjs component angular router triggered refresh browser profileedit angular route triggered renders editprofilecomponent fine pushstate behavior angularjs pathlocationstrategy angular enabled press browser back button url changes profileedit angular router triggered renders component properly tried minimizing angularjs code single route matter angular router nt trigger links inside angularjs templates know angular router nt triggered enabled tracing forroot call suspect work ok change everything use hashes nt want messes testing one expected behavior expect link inside angularjs component trigger angular router minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23573", "d": "4/2018"}, {"title": "safari errors files rxjs folder", "body": "submitting note originally posted question rxjs github instructed come code reproduce open apple simulator using ios simply open safari browser version ng new projectname cd projectname ng serve appcomponentts import component oninit angularcore import observable rxjsobservable import rxjsaddobservabletimer component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title app works constructor observabletimer subscribe x gt consolelog never log expected behavior statement logged actual behavior statement never logged errors rxjs observables additional information current project working getting errors nearly files nodemodules gt rxjs folder occurs safari version adding import statement path missing files suggested readme seem help also errors would ideal add import statement missing file every component idea resolve motivation use case changing behavior able use application safari environment browser x safari desktop version", "num": "23572", "d": "4/2018"}, {"title": "new feature allow injectable subscriptionstrategies asyncpipe", "body": "submitting current behavior currently supports two types asynchronous objects impossible add additional expected behavior implementations asynchronous delivery values mobx comes mind team working extensively state management library developed inhouse called sherlock sure libraries others coming along future well propose adding multi provider using factory pattern respective strategies created factories could hold internal reference cleaning code default provided consumers would able provide strategy factories provider able determine whether supports passed asynchronous object create new type proposed implementation proposal requires quite changes order let strategies keep internal state subscription factory pattern needed unlike differ factories factories declare support different flavours asynchronous value sources create strategy needed interface would look something like interface would look like method would refactored implementation instance would look something like typescript export class observablestrategyfactory implements subscriptionstrategyfactory gt supports async observable return \u0275isobservable async create return new observablestrategy export class observablestrategy implements subscriptionstrategy gt private subscription subscription createsubscription async observable updatelatestvalue thissubscription asyncsubscribe next updatelatestvalue error e gt throw e dispose thissubscription amp amp thissubscriptionunsubscribe ondestroy thissubscription amp amp thissubscriptionunsubscribe implementing new would look something like case implementing strategy sherlock typescript export class derivablestrategyfactory implements subscriptionstrategyfactory gt supports async derivable return isderivable async create return new derivablestrategy export class derivablestrategy implements subscriptionstrategy gt private readonly stopreaction atom false createsubscription async derivable updatelatestvalue asyncreact v gt updatelatestvalue v thisstopreaction dispose thisstopreaction set true ondestroy thisstopreaction set true ngmodule ngmodule providers provide subscriptionstrategyfactories useclass derivablestrategyfactory multi true export class mymodule familiar mobx handles reactions presume reactions could easily implemented pattern minimal reproduction problem instructions na motivation use case changing behavior benefits making generic link asynchronous emitter allowing pluggability futureproof implementation internalising logic subscriptionunsupscription inside strategies letting handle change detection working implementing couple days got bit larger expected working quite nicely touches upon core architecture principles like test waters see people think proposal clean pr write extensive tests environment applicable", "num": "23571", "d": "4/2018"}, {"title": "high cpu usage ngc watch mode", "body": "submitting issue high cpu usage ngc watch mode using angularcli version also problem tsconfigaotdistjson tsconfigjson project structure angularclijson editorconfig gitignore npmignore npmrc vscode components dist gulpfilejs indexdts indexjs indexjsmap karmaconfjs ngpackagejson packagejson protractorconfjs readmemd src tmp tsconfigaotbundlejson tsconfigaotdistjson tsconfigjson tslintjson directory file symboliclink environment tooling issues node version platform mac osx sierra high", "num": "23570", "d": "4/2018"}, {"title": "tests fail phantomjs", "body": "submitting current behavior run component test phantomjs test result executed failed error attribute binding component allthough tests successful expected behavior test run correctly result executed success minimal reproduction problem instructions component import component angularcore component selector testcomponent template export class testcomponent file component import testbed componentfixture async angularcoretesting import debugelement angularcore import testcomponent testcomponent describe testcomponent gt let fixture componentfixture let debugelement debugelement let element htmlelement karma configuration file see link information moduleexports function config configset basepath frameworks jasmine angularcli plugins require karmajasmine require karmachromelauncher require karmaphantomjslauncher require karmajasminehtmlreporter require karmacoverageistanbulreporter require angularclipluginskarma client clearcontext false leave jasmine spec runner output visible browser coverageistanbulreporter reports html lcovonly fixwebpacksourcepaths true angularcli environment dev reporters progress kjhtml port colors true loglevel configloginfo autowatch true browsers chrome phantomjs singlerun false start test result test looks like remove code test successful motivation use case changing behavior think testing work simple attribute binding environment", "num": "23568", "d": "4/2018"}, {"title": "goes offline ngswjson failed load", "body": "current behavior issue service worker goes offline worker process failed fetch ngswjson ngswcachebust however working fine online state expected behavior load ngswjson file offline mode minimal reproduction problem instructions include service worker existing project using angulario guide added service worker module packagejson downloaded added import serviceworkermodule angularserviceworker app module added serviceworkermoduleregister ngswworkerjs enabled environmentproduction imports section module created ngswconfigjson file index indexhtml assetgroups name app installmode prefetch resources files faviconico indexhtml versionedfiles bundlecss bundlejs chunkjs name assets installmode lazy updatemode prefetch resources files assets motivation use case changing behavior working functionality says environment production angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "23566", "d": "4/2018"}, {"title": "ivy support events", "body": "supports events see template parser spec details updates required x runtime compiler", "num": "23561", "d": "4/2018"}, {"title": "ivy event bindings trigger directives", "body": "behavior render ts directive selector mydir class mydir html directive would instantiated see template parser spec details updates required x runtime done compiler", "num": "23560", "d": "4/2018"}, {"title": "angular elements keep html attribute value sync property value", "body": "submitting current behavior encountered bugmissing feature angular elements synchronizing property html attribute reference variable words html attribute changed using setattribute method change property value however changing property value affect html attribute value please see example component declaration component selector testcomponent templateurl testcomponentcomponenthtml styleurls testcomponentcomponentscss export class testcomponent implements oninit input customname public customname string test string ngoninit changing attribute value affects corresponding property documentqueryselector testcomponent setattribute customname attribute consolelog documentqueryselector testcomponent customname attribute changing property value dose affect corresponding attribute documentqueryselector testcomponent customname property consolelog documentqueryselector testcomponent getattribute customname attribute expected behavior properties html attributes still sync regardless changed eg changing attribute value gt affects corresponding property documentqueryselector testcomponent setattribute customname attribute consolelog documentqueryselector testcomponent customname attribute changing property value gt affects corresponding attribute documentqueryselector testcomponent customname property consolelog documentqueryselector testcomponent getattribute customname property another subject related context polymer creates automatically property event name propertynamechanged triggered property changed planning angular elements", "num": "23557", "d": "4/2018"}, {"title": "staticinjectorerror arises using translate pipe component", "body": "submitting current behavior use shared components seed project contains translation pipe html part component use component main project get following error issue using deployment application expected behavior expected behavior pipe component without error translate given caption minimal reproduction problem instructions clone repo download seed project execute app folder execute projects linked run navigate page see error motivation use case changing behavior able use translate pipe seed app projects environment", "num": "23556", "d": "4/2018"}, {"title": "developed angular app version using bootstrap main issue loading time browsers chrome browser takes seconds takes much time approx seconds version supported", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23554", "d": "4/2018"}, {"title": "language service using require load templates displays component must template templateurl", "body": "submitting simple component uses webpack load templates current behavior error displayed component appsidebarheadercomponent must template templateurl expected behavior expect see error message template actually exists loaded webpack method resolves lot issues loading templates unit tests essential workflow angular version", "num": "23553", "d": "4/2018"}, {"title": "ng server angular template picture issue", "body": "angular template component templateurl styleurls stylesindexcss picture ca nt found", "num": "23552", "d": "4/2018"}, {"title": "update instructions could clear environment vs project update steps", "body": "submitting current behavior continue fan interactive guide found one scenario using nt want update apps right want start new app steps need places guide could little clear steps environmentupdate steps affect new projects affect existing projects projectspecific need done project chembu working wants leave existing apps wants tutorial toh new user users probably wo nt starting tutorial might starting another new app later come back update apps wants time controlled way nt want delay starting new app think needs steps ensure environment meets required prereqs update node update typescript update cli gobally npm install g angularcli next nt need steps projectspecific npm install angularcli next ng update angularcli migrateonly expected behavior words might help clarify updating first time similar scenario nt want update projects right something like update environment update node typescript update environment use cli new projects npm install g angularcli next project updating npm install angularcli next ng update angularcli migrateonly project uses rxjs update rxjs minimal reproduction problem instructions see motivation use case changing behavior want update environment new projects without updating existing projects right environment", "num": "23547", "d": "4/2018"}, {"title": "export list human readable http status codes", "body": "submitting expected behavior module export list http status codes motivation use case changing behavior exposing status code would help readability http responses handling typescript import httpclient notfound angularcommon injectable constructor private hc httpclient fetch return thishcget catch err gt errstatus notfound consoleerror oops would similar ruby rails framework provides rack similar initiative exists library around key codes already started implement go feature scope want provide package", "num": "23543", "d": "4/2018"}, {"title": "angular animations work materialbootstrap buttons", "body": "hey tried apply normal button angular material ripple affect work also tried use bootstrap animations like reach end state immediately something fade bootstrap button possible relates somehow says closed ive got ts import import import zonejsdistzone import hammerjs import webanimationsjs import matcheckboxmodule angularmaterial import browseranimationsmodule angularplatformbrowseranimations import matbuttonmodule angularmaterialbutton imports matbuttonmodule matcheckboxmodule browseranimationsmodule providers weatherservice bootstrap appcomponent weathercomponentcomponent global stylescss file import angularmaterialprebuiltthemesdeeppurpleambercss dependancies dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter corejs hammerjs rxjs tshelpers webanimationsjs zonejs devdependencies angularcli angularcompilercli typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmajasmine karmaremapistanbul protractor tsnode tslint typescript html button also tried link stylesheet global html nt work still current behavior animation nt play expected behavior animation plays click minimal reproduction problem instructions load versions implement button material motivation use case changing behavior environment browser x chrome desktop version tooling issues node version xx platform", "num": "23542", "d": "4/2018"}, {"title": "setvalue function reactive forms working trying setvalue select element multiple mode", "body": "submitting current behavior setvalue function reactive forms working trying setvalue select element multiple mode thiszoneformcontrolscontrolnamesetvalue valueasarry expected behavior update checked menu select dropdown list minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23541", "d": "4/2018"}, {"title": "npm error notarget angular", "body": "submitting x bug report current behavior per release schedule angular released stable version however using get error expected behavior package latest version installed running cmd minimal reproduction problem instructions run motivation use case changing behavior upgrade angular version released stable environment angular version upgrade browser x chrome desktop version tooling issues node version platform windows", "num": "23540", "d": "4/2018"}, {"title": "onsubmit ngsubmit onclick click", "body": "want assign onsubmit event handler use ngsubmit like onclick handler click ngclick like inconsistency intentional", "num": "23537", "d": "4/2018"}, {"title": "tutorial section services could benefit smaller milestones break points", "body": "submitting current behavior reported comments referring primarily services section tutorial hand tutorial could benefit global description need works introduction diagram could help words vs image split parts end part application still work document rather long mean files listed final code review mention syntax errors ide auto completion sneaky attack light change hero application tired nt know goal achieve means approximatively half document wondering ends nt think opening another issue relevant category fit end may help authors make tutorial evolve expected behavior see minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23536", "d": "4/2018"}, {"title": "animation callbacks fire even animation performed", "body": "submitting current behavior use angular animations parent item animation child items animations blocked intended child items animations callbacks executed expected behavior animation skipped callbacks also skipped minimal reproduction problem instructions controller fragment template fragment motivation use case changing behavior want animate new items list purpose block existing items animation first load adding empty animation parent element list also need use child items animation callbacks logic animation actually happens environment", "num": "23535", "d": "4/2018"}, {"title": "ca nt add header get api calls ios desktop works", "body": "x bug hi think found bug im something stupid steps login post returns user object token add token session service token intercepter adds authorization header request problem api calls authenticate fine desktop ios chrome safari android chrome application headers sent reproduce create simple service api call adds custom header call component export class ridesservice local develop computer run app check network request authorzation header added get connect iphone mac usb go safari enable debugging open console monitor network request iphone go local server set access local server via wifi eg iphone log network request api header authorization added version angular version", "num": "23532", "d": "4/2018"}, {"title": "docs upgrade testing universal examples angular cli structure", "body": "submitting current behavior examples associated docs need updated latest cli structure expected behavior minimal reproduction problem instructions motivation use case changing behavior environment cc gkalpak", "num": "23529", "d": "4/2018"}, {"title": "injection inject abstract class types", "body": "syntax used alongside factory function functions unable inject abstract classes due typings mismatch ts abstract class myprovidertype class foo static nginjectabledef defineinjectable providedin root factory function applicationreffactory return new foo inject myprovidertype constructor inject myprovidertype val myprovidertype", "num": "23528", "d": "4/2018"}, {"title": "service worker updates work latest chrome chrome", "body": "generated empty angular application via ng new appname serviceworker implemented swupdate service worker detects new version reload page via confim ok see exception console chrome displayes page ca nt reached works refresh via refresh via work clearing data via dev tools application tab worked fine older chrome stopped working imediately updated chrome tested independent computers current behavior sites application displays page ca nt reached chrome update latest version service worker detects new version expected behavior application load latest version refresh page minimal reproduction problem instructions create new angular app service worker via cli implement swupdate test chrome browser chrome desktop version", "num": "23526", "d": "4/2018"}, {"title": "feature intentionally nt encapsulate specified style", "body": "submitting current behavior styles encapsulated use expected behavior specified styles intentionally encapsulated component intentionally affect style components loaded allows better reuse generic components generic components overridden children siblings wrappers without modifying global style without need modify original component allows developers keep style logically attributable single component child style file specifically associated component rather adding global style file reduces code needed developer nt need use conditions statements may relevant style rule global file extraneous certain component utilized uses css correctly instead causing js workarounds like importing document child order manipulate contexts propose implementation options global pseudoclass like host styleurls takes object object property like global true even closest cssselector would find nearest element matching css selector treat matched element host contained style rule inspired jquery minimal reproduction problem instructions code proprietary pseudocode included use case motivation use case changing behavior create overlaycomponent closed button topright overlaycomponent template includes pass arbitrary components display within component certain child component logical condition hide closed button topright environment", "num": "23525", "d": "4/2018"}, {"title": "nodemodules angularcommon exported member httpparamsoptions", "body": "submitting current behavior build error title working angular npm double check online paramsts one node modules different could someone help find little strange version install different official github version expected behavior version machine github motivation use case changing behavior need make querystring request object seems way environment", "num": "23523", "d": "4/2018"}, {"title": "behaviorsubject produces expressionchangedafterithasbeencheckederror", "body": "submitting current behavior following error produced modifying value behaviorsubject side effect observable pipe also use changedetectionstrategyonpush update behavior subject pipe never detected expected behavior would like see javascript errors would like change detection figure behavior subject value changed using minimal reproduction problem instructions code import changedetectionstrategy component oninit angularcore import tap rxjsoperators import behaviorsubject observable rxjsindex component selector somethingorother template loading response async changedetection changedetectionstrategyonpush export class somethingorothercomponent implements oninit response observable loading behaviorsubject ngoninit thisloading new behaviorsubject true also get behavior without using import changedetectionstrategy component angularcore import tap rxjsoperators import behaviorsubject rxjsindex component selector somethingorother template loading response async changedetection changedetectionstrategyonpush export class somethingorothercomponent loading new behaviorsubject true response response pipe tap gt thisloading next false motivation use case changing behavior scenario intended simplified version displaying loading message retrieving data server environment", "num": "23522", "d": "4/2018"}, {"title": "bazel relocate sourcemaps", "body": "submitting current behavior moment sourcemaps paths correct point build directory example take look ideally build time relocated order consumer angular able debug easier moment someone tries use sourcemaps bit difficult consumers find looking especially considering type nothing comes current result browser look sourcemaps eventually emitted correct path flatten module id consumers find easier example expected behavior sourcemaps relocated better debugging experience environment", "num": "23520", "d": "4/2018"}, {"title": "application large html components crashes chrome", "body": "submitting current behavior following github repo setup latest version loading application chrome chrome crashes aw snap error expected behavior load application without crashing browser minimal reproduction problem instructions use github repo run application goto url browser motivation use case changing behavior migrating applicaiton environment", "num": "23513", "d": "4/2018"}, {"title": "angular nt work urls search hashes", "body": "submitting current behavior pass url form angular loads site nt route anywhere expected behavior route someroute handle search hash parts url properly minimal reproduction problem instructions see removing part makes url route properly environment browser x chrome desktop version xx chrome android version xx chrome ios version xx x firefox version xx safari desktop version xx safari ios version xx ie version xx x edge version xx", "num": "23508", "d": "4/2018"}, {"title": "read header post request interface", "body": "submitting current behavior using angular nodejs activate cors using npm cors library able send request get response ca nt get header response able see debug chrome service consume output expected behavior think able see output xauth key help fixing missing something minimal reproduction problem instructions motivation use case changing behavior environment windows", "num": "23507", "d": "4/2018"}, {"title": "function trows property defined", "body": "submitting current behavior checktime consolelog thishour thishour gt consolelog working return thistime past else thishour gt consolelog display travel info return thistime true else thishour lt openwindow var x consolelog thisdata var arrayofurls var url documentqueryselectorall span urls let lt urllength arrayofurlspush url innerhtml test array urls arrayofurls function go var mywindow windowopen arrayofurls x x arrayofurlslength consolelog called last mywindowclose thischecktime else x lt arrayofurlslength settimeout gt mywindowclose consolelog x go change number change time switches websites min website means checks time every min thischecktime trows err error typeerror read property checktime undefined expected behavior checktime gets called minimal reproduction problem instructions environment dev prod browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "23506", "d": "4/2018"}, {"title": "update releaseschedulemd angular", "body": "would great plannings get latest information progress major release please update thanks", "num": "23505", "d": "4/2018"}, {"title": "able route child component named routeroutlet", "body": "routing module const approutes routes path main component mainpagecomponent pathmatch full path main component mainpagecomponent children path two component pathmatch full path two component children path chartbrowse outlet component pathmatch full path chartbrowse outlet component children path verticalbar component verticalbarchartcomponent pathmatch full need route verticalbarchartcomponent use thisrouternavigate maintwochartbrowseverticalbar got error solve problem type manually url works possible navigate url sugggetion", "num": "23504", "d": "4/2018"}, {"title": "small typo srcapphighlightdirectivets embedded code snippet", "body": "submitting current behavior small typo srcapphighlightdirectivets embedded code snippet expected behavior expected last line srcapphighlightdirectivets embedded code snippet minimal reproduction problem instructions navigate srcapphighlightdirectivets embedded code snippet motivation use case changing behavior fix could improve readability code environment", "num": "23503", "d": "4/2018"}, {"title": "service worker cached empty chunkjs files", "body": "submitting current behavior service worker cached couple empty chunk js files seems happen intermittently mobile device galaxy chrome app lazyloaded modules pretty standard service worker config may something window reload occurring update ca nt confirm error thrown application navigating one affected lazy loaded modules case x network tab shows request chunk handled service worker response empty stranger cache storage shows cached chunks proper content length viewed empty view contents chunks without issue update activated fine desktop version chrome also noticed cache storage two entries pattern one items failing chunks empty assets expect including failing chunks empty files correct content ultimately manually removed empty cache entries reloaded application worked expected expected behavior like sure application update correctly files defined asset group cached accurately minimal reproduction problem instructions unable provide seems happen intermittently motivation use case changing behavior application ends state end user way manage app would likely remain broken state next update activated environment browser chrome desktop version xx x chrome android version chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "23502", "d": "4/2018"}, {"title": "assets folder serving", "body": "submitting current behavior attempting reference image logosvg within assets folder using src assetsimageslogosvg results following error expected behavior expected logo serve assets directory minimal reproduction problem instructions na motivation use case changing behavior images broken webpages environment windows linux subsystem ubuntu installed", "num": "23501", "d": "4/2018"}, {"title": "documentation clear dynamic component loading", "body": "submitting current behavior current documentation dynamic component loading partially quite ambiguous thus hard get beginning nt clearly differentiate custom library directives ad example description nt match actual example nt get clear whether dynamic component loading means loading components dynamically fixed precompiled set components loading components dynamically web service unknown compile time expected behavior tried amend documentation regard nt clue requirement adding components supposed loaded dynamically configuration member ngmodule makes believe rather motivation use case changing behavior clearly understand topic right beginning without additionally consulting search engines", "num": "23498", "d": "4/2018"}, {"title": "angular golang", "body": "submitting current behavior hi would great angular golang team could join forces create nice development experiences using google inhouse developed languagesframeworks", "num": "23497", "d": "4/2018"}, {"title": "fileupload primeng upload files post without httpinterceptor", "body": "submitting current behavior use fileupload primeng click upload button find nt work nodejs serve receive data worked states expected behavior http request nt cross token ca nt add minimal reproduction problem instructions choose file upload nodejs serve receive data without motivation use case changing behavior environment content angular version browser x chrome desktop version xx x chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform others", "num": "23493", "d": "4/2018"}, {"title": "httpclientmodule xsfr token support get requests", "body": "submitting current behavior currently httpclient support xsfr tokens get requests expected behavior httpclient support xsfr tokens get requests motivation use case changing behavior security issue enterprise api frameworks secure http requests irrespective method eg get vs post done security reasons eg inexperienced developer creates backend get request mutates data fact httpclient nt support option box makes communication server apis insecure previous version httpmodule server api remove xsrf token verification get requests opening possible vulnerability server side previous httpmodule supported get requests environment", "num": "23491", "d": "4/2018"}, {"title": "issue observables guide examples work", "body": "submitting current behavior hi documents observables issue examples url take look examples try run wo nt run please fix expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23490", "d": "4/2018"}, {"title": "one way databinding bleeds back parent", "body": "current behavior passing array parent child splicing array modifies parents array expected behavior one way allow data flow parent child minimal reproduction problem instructions environment tooling issues node version platform windows", "num": "23489", "d": "4/2018"}, {"title": "ng build aot", "body": "current behavior project folder ng build aot nodemodules appears empty may need run next user run npm install result file created packagelockjson garbage expected behavior ng build aot eg nodemodules found need create project may need run project already exists etc nodemodules found motivation use case changing behavior avoid confusion run unnecessary command npm install case environment tooling issues node version platform linux others npm debian", "num": "23487", "d": "4/2018"}, {"title": "angular build routes api data startup", "body": "environment need create routes angular application startup based data received api site map appmodulets settingsservicets receive error console make appmodulets receive look like routes happened appinitializer", "num": "23486", "d": "4/2018"}, {"title": "allow css function style sanitizer", "body": "submitting check one x current behavior style binding css variable get stripped style sanitizer example try use bootstrap provided variables render result browser expected behavior since likely use css variables dynamic way think stripped ps correct place modify could belongs candidate recommendation", "num": "23485", "d": "4/2018"}, {"title": "allow validateon invalidateon addition updateon abstractcontrol", "body": "submitting current behavior currently set control update validation status either expected behavior addition useful ability independently set maintain backwards compatibility setting equivalent setting value setting takes precedence motivation use case changing behavior validation helpful without intrusive noisy ideally nt want invalidate control soon user starts typing obvious user email invalid entered one character therefore desire invalidate control blur indication user finished entering field however field invalid user goes back correct like immediately inform soon valid eg password field requires characters user entered went changed like immediately validate maintaining error message situation confusing aware another way implementing without creating directive track focus state control proposed solution intuitive straightforward user pov", "num": "23484", "d": "4/2018"}, {"title": "allow validateon invalidateon addition updateon abstractcontrol", "body": "submitting current behavior currently set control update validation status either expected behavior addition useful ability independently set maintain backwards compatibility setting equivalent setting value setting takes precedence motivation use case changing behavior validation helpful without intrusive noisy ideally nt want invalidate control soon user starts typing obvious user email invalid entered one character therefore desire invalidate control blur indication user finished entering field however field invalid user goes back correct like immediately inform soon valid eg password field requires characters user entered went changed like immediately validate maintaining error message situation confusing aware another way implementing without creating directive track focus state control proposed solution intuitive straightforward user pov", "num": "23483", "d": "4/2018"}, {"title": "remove stray file docs", "body": "submitting current behavior displays placeholder page link google doc expected behavior remove incomplete work aside comes back recommend complete title differentiate general testing angular apps guidepage minimal reproduction problem instructions file nav shows search results searched component dom testing first results actual testing doc motivation use case changing behavior environment", "num": "23481", "d": "4/2018"}, {"title": "commit message check strict", "body": "current patterns fails validation", "num": "23479", "d": "4/2018"}, {"title": "guidance request regarding enabling angular jupyterlab extension", "body": "submitting current behavior angularlanguageservice nt pick custom import method required creating jupyterlab extension angular details making jupyterlab extension possible customise webpackconfjs make angular templates able used within jupyterlab extension loader inlined within import typescript import htmltemplate htmlloader variabletablecomponenthtml see possible long following type definition created typescript declare module htmlloader componenthtml const content string export content see however understandably breaks logic angularlanguageservice desire able create pull request make use case able detected angularlanguageservice need pointer right direction expected behavior able angularlanguageservice pick imports form shown motivation use case changing behavior able create jupyterlab extensions angular angular templates still able properly use angularlanguageservice environment", "num": "23478", "d": "4/2018"}, {"title": "aot possible import library directive without declaring module", "body": "submitting current behavior importing directive library validators library building aot getting error main library indexts file looks exporting validatorfn reactive forms validator directive wrapper use template driven forms client consuming library import looks like client using library looks expected behavior possible import component npm library without need create module minimal reproduction problem instructions clone yarn install yarn build yarn link cd integration yarn install yarn link ngvalidatorsngvalidators integration folder build app motivation use case changing behavior creating validators library reactive template driven forms nt want force user import whole module decided best user import needs create validators module", "num": "23475", "d": "4/2018"}, {"title": "add option change default view model value input empty", "body": "submitting current behavior input becomes empty writes empty string instance bound property expected behavior ability change default empty string behavior however want example etc motivation use case changing behavior solution provided pkozlowskiopensource solution ie using custom value accessor based selector nonstandard really good option bunch directives instance angular material party library beyond control need keep proper ca nt see stackblitz breaks view model value propagation selector expression standard used switch different order maintain value propagation means would work inputs standard html types environment", "num": "23474", "d": "4/2018"}, {"title": "formcontrols nt fully unbind dom swapped", "body": "submitting current behavior formcontrol boundregistered form element continues update form element even formcontrol swapped another longer bound expected behavior formcontrol swapped form element longer update element value minimal reproduction problem instructions motivation use case changing behavior creating complex form may need user input value show converted value exampled reproduction tip trainer note simplified version asked created ux team product owner intitially tried entire field resulted flashing effect old element destroyed new element created instead changing formcontrol attached able update displayed value without flashing noticed supposedly unbound formcontrol updating dom updated believe may root cause issues environment stackblitz default others spoke kara ngconf", "num": "23473", "d": "4/2018"}, {"title": "generics formbuilder formgroup formcontrol", "body": "submitting current behavior classes formcontrol formgroup formbuilder etc generic expected behavior add generics like class formbuilder group controls controls extra return new formgroup controls extra control state formcontrolstate extra return new formcontrol state extra type controls k keyof e formcontrol value e controls controls constructor controls controls args type extendedstate value e disabled boolean type formcontrolstate extendedstatee class formcontrol value e constructor state formcontrolstate args const builder new formbuilder const form buildergroup buildercontrol str b buildercontrol c buildercontrol const formvaluea const formvalued error property exist type string b c number motivation use case changing behavior type validation ide autocomplete formgroupvalue formcontrolvalue environment typescript version gt others ide webstorm", "num": "23472", "d": "4/2018"}, {"title": "misleading typo benchpress readme", "body": "submitting current behavior measuring browser names used indicate loop iterates times actually iterates times minor issue sake clarity worth correcting expected behavior iterate times minimal reproduction problem instructions motivation use case changing behavior increase clarity example environment", "num": "23471", "d": "4/2018"}, {"title": "support elvis operator brackets notation", "body": "submitting current behavior currently template parser nt support elvis operator bracket notation expected behavior elvis operator supported bracket notation way dot notation motivation use case changing behavior supporting elvis bracket notation would prevent us expanding expressions manually cases ca nt use dot notation elvis environment", "num": "23469", "d": "4/2018"}, {"title": "angularjs application running issues", "body": "using angularjs project runs perfectly chrome desktop version tried use version nothings shows console shows following error platform windows node version anyone knows solve problem", "num": "23467", "d": "4/2018"}, {"title": "error expected one matching request criteria match url xyz found requests", "body": "submitting bug report x feature request documentation issue request spec file service file commentsjson file current behavior error getting error expected one matching request criteria match url assetsjsoncommentsjson found requests expected behavior test passed minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23466", "d": "4/2018"}, {"title": "localized urls", "body": "submitting current behavior spa application using localized urls site multilingual url subpaths languages motivation use case changing behavior would like set localized urls like without page reloading environment tooling issues node version platform mac", "num": "23465", "d": "4/2018"}, {"title": "response header null", "body": "trying get response header sent backend getting different behavior wether use debug mode use chrome debugger visualstudiocode get totalcount sent backend use browser directly totalcount null checked debugging mode params found parameter making code works expected parameter tried angular mac windows linux chrome safari firefox backend expressjs app", "num": "23464", "d": "4/2018"}, {"title": "semantics arguments passed constructor component", "body": "submitting current behavior url place class herolistcomponent defined explanation semantics passing argument private service heroservice constructor method missing someone coming oop background think formal parameter expects initialized instance object created new operator expected behavior looks like angular virtue specifying formal parameter constructor method automatically following private service heroservice constructor service new heroservice case case parameters passed constructing heroservice done done constructor syntax minimal reproduction problem instructions none motivation use case changing behavior applicable environment browser applicable chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues applicable node version xx platform others applicable", "num": "23463", "d": "4/2018"}, {"title": "angular component updating properties view function called jquery", "body": "hi added issue stackoverflow please follow link", "num": "23462", "d": "4/2018"}, {"title": "error could handle request angualr universal using firebase functions", "body": "angualr universal apps serve request using firebase function website url test apps using firebase command firebase serve functions hosting works fine deploying apps get strange error message angular application figure happening browser says error could handle request firebase log typeerror factory function callfactory usercodenodemodules createproviderinstance usercodenodemodules resolvengmoduledep usercodenodemodules ngmodulerefget usercodenodemodules resolvedep usercodenodemodules createclass usercodenodemodules createdirectiveinstance usercodenodemodules createviewnodes usercodenodemodules callviewaction usercodenodemodules execcomponentviewsaction usercodenodemodules", "num": "23461", "d": "4/2018"}, {"title": "ngc watch flag nt produce metadatajson", "body": "submitting current behavior compiler produces metadatajson expected use new watch flag w metadatajson produced expected behavior watch flag make difference build output minimal reproduction problem instructions example tsconfig motivation use case changing behavior environment using following compiler package versions", "num": "23457", "d": "4/2018"}, {"title": "changing value controlvalueaccessor programmatically raise change event", "body": "submitting current behavior ca nt change value programmatically expected behavior like minimal reproduction problem instructions stackblitz showing problem open console see event logging change textbox change event fired however clicking button update value motivation use case changing behavior development custom controls reuse", "num": "23454", "d": "4/2018"}, {"title": "docs aio wrong documentation guidehttp", "body": "submitting current behavior documentation text says example code calls expected behavior error kinds documented one error response like another like networking error response testing use networking error testing use environment version", "num": "23453", "d": "4/2018"}, {"title": "nested routes breaks fontawesome icons", "body": "submitting current behavior upgrading angular font awesome icons nt working using nested routes example page got fa icons working fine open page fa icons nt working behavior occurs firefox chrome works fine please note angular nt problem icons expected behavior using fa icons nested routes firefox without problems minimal reproduction problem instructions create fresh angular app npm install fontawesome save create two components one nested route second flat route put font awesome icons check routes firefox environment routes configuration note problem exists dev production serve ng serve prod works fine link reproduction repository npm install ng serve", "num": "23451", "d": "4/2018"}, {"title": "", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23450", "d": "4/2018"}, {"title": "accelerate deployment", "body": "submitting regression behavior used work stopped working new release bug report performance issue x feature request documentation issue request support request gt please submit support request instead see x please describe build improvements current behavior total run first application usual demo need spend minutes installs packages sometimes annoying use vue simply add script write start application usage vue init best start config cli expected behavior ng new project default install dependencies yn n install angularrouter yn n use tslint lint code yn n set unit tests karma yn n setup tests protractor yn n project initialization finished get started ng serve documentation found make customizable way install application could create simple applications faster", "num": "23449", "d": "4/2018"}, {"title": "routing issue queryparams", "body": "route url getting param value thisroutesnapshotparams id giving tabprofile problem angular", "num": "23448", "d": "4/2018"}, {"title": "video play safari ios ngsw", "body": "submitting current behavior add simple video tag like safari ios sw activate video playing seconds frozen expected behavior video playing minimal reproduction problem instructions create new projet insert video tag like use repository run following command root deploy try play video safari ios bug deactive sw removing ngsw files server create new project without ngsw whatever try play video safari ios ok environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx x safari ios ie version xx edge version xx tooling issues platform ios devices iphone ipad mini", "num": "23447", "d": "4/2018"}, {"title": "fails memory issues chromesafari", "body": "submitting current behavior running existing hybrid app version fails chrome browser aw snap error rolling back version works fine firefox seems work gracefully handling memory issue", "num": "23445", "d": "4/2018"}, {"title": "angular typescript run time issues barrels", "body": "submitting current behavior everything compiling nicely dev mode production using angularcli however run code getting issues classes barrels example giving taking campaign barrel importing independently fixes issue working fine angular typescript interesting reverting typescript still get issue probably something angular compiler webpack stripping stuff expected behavior errors minimal reproduction problem instructions use barrels classes static functions motivation use case changing behavior environment browser x chrome desktop version xx tooling issues node version platform linux", "num": "23444", "d": "4/2018"}, {"title": "migrating angularclijson file angularjson angular old format parsed", "body": "submitting current behavior following styles scripts angularclijson file expected behavior styles scripts parsed ngserve angular angularjson file minimal reproduction problem instructions ng serve excecuted get following j ng serve angular live development server listening localhost open browser additional asset processing error enoent file directory open j wait bundle finished wait bundle finished motivation use case changing behavior appears format script able read environment", "num": "23443", "d": "4/2018"}, {"title": "compiler relatively expensive jsonstringify call", "body": "request revert submitting current behavior compiler called many times angular recently changed use jsonstringify app log call count app setup caused chrome crash due lack memory minimal reproduction problem instructions angular material demo app crashing app started pull extra components examples docs app run demo app pr see crash occur environment", "num": "23440", "d": "4/2018"}, {"title": "httpheaders class setappenddelete returns httpheaders", "body": "submitting current behavior class httpheaders append name string value string string httpheaders set name string value string string httpheaders delete name string value string string httpheaders set append delete methods returns new instance httpheaders expected behavior methods returns nothing update current httpheaders instance minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23438", "d": "4/2018"}, {"title": "build aio ensure stackblitz examples look like cli", "body": "although examples switched angular cli stackblitz projects still contain cli stuff eg live examples look like cli projects", "num": "23437", "d": "4/2018"}, {"title": "expose observable output parameter future safe way", "body": "submitting current behavior docs say output property observable property annotated output decorator property almost always returns angular eventemitter nt mention valid exception viewing source code see eventemitter extends subject experience know use observable instead using observable instead eventemitter seems fragile future angular team could change underlying function eventemitter existing observable stream want expose output property subscribe observable forward emissions eventemitter import component output eventemitter oninit ondestroy angularcore import subscription rxjssubscription component selector testcomponent template export class testcomponent implements oninit ondestroy private subscription subscription output public readonly isprocessing new eventemitter constructor public testservice testservice thissubscription thistestserviceisprocessingsubscribe x gt thisisprocessingemit x ngoninit void thistestservicedowork ngondestroy void thissubscription thissubscriptionunsubscribe expected behavior ability reuse existing observable output property future safe way understand angular team would want wrap observable maybe function exposed wraps observable returning something implements eventemitter interface nt make hot import component output eventemitter oninit ondestroy angularcore import subscription rxjssubscription component selector testcomponent template export class testcomponent implements oninit private subscription subscription output public readonly isprocessing eventemitter constructor public testservice testservice thisisprocessing createeventemitter thistestserviceisprocessing ngoninit void thistestservicedowork minimal reproduction problem instructions na motivation use case changing behavior subscribing existing observable order forward emissions eventemitter undesirable sideeffects manage subscription observable unsubscribing make stream hot subscribing even though another component may subscribed output property environment", "num": "23435", "d": "4/2018"}, {"title": "safari production nt print results http get via ngfor", "body": "submitting current behavior safari production nt print results http get via ngfor development fine browsers production safari doesnt print results via ngfor calls one html display results two places works nt work futurewhour futurewweather weatherobj received subscribe constructor subject receives next weatherobj service subscribe function makes constructior thisweathersubscription thiswserviceweatherobs subscribe gt thisshowicon showicon weather thisdrawcanvas gt thisweatherobj weather drawcanvas return new promise resolve gt thiscanvas thisrdremovechild thisiconcanvasnativeelement thiscanvas thiscanvas thisrdcreateelement canvas thisrdsetstyle thiscanvas width thisrdsetstyle thiscanvas height thisctx thiscanvasgetcontext thisctxtextbaseline top resolve safari shows errors console project github environment angularcore safari desktop version node version", "num": "23434", "d": "4/2018"}, {"title": "buffered render option ngfor", "body": "submitting current behavior currently directives perform unbuffered dom insertions page way batch operations order improve render times inserting full batch elements instead onebyone behavior expected behavior like able control dom nodes inserted page perform rendering offpage minimal reproduction problem instructions created stackblitz demo easy comparison creates two columns x rows tables first button spawn table normally second one uses directive detaches rendered dom init reinserts back observable emits motivation use case changing behavior improving render performance helping ie especially environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx", "num": "23433", "d": "4/2018"}, {"title": "httpparamstostring multiplication parameter deletion", "body": "submitting current behavior using httpparams deleting particular parameter tostring returns unexpected result using angular version nt checked whether later versions similar results expected behavior nt last output minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23432", "d": "4/2018"}, {"title": "documentation code samples nt visible printed", "body": "reading documentation printed version versatile fuzz tablet particularly bed outdoors today noticed printed firefox latest windows code samples nt visible would mind fixing documentation stylesheets ps like give kudos guys set documentation styles easy printing great job like take opportunity suggest add additional documentation page page containing documentation whole printed one big brochure instead dozens small brochures loads empty trailing pages", "num": "23431", "d": "4/2018"}, {"title": "app component svg object html element rendering issue edge", "body": "submitting current behavior loading svg using object html element fails render edge main app component svg render components inside router outlet though expected behavior correct svg rendering app component using object html element minimal reproduction problem instructions example issue motivation use case changing behavior want svg render correctly consistently html template environment", "num": "23430", "d": "4/2018"}, {"title": "valueprovider wrong behavior aot", "body": "submitting current behavior created following component added parent component html multiple times provider instantiated multiple times used without aot think correct use aot get one shared instance among instances component dont think correct change behaves correctly without aot expected behavior behave exactly application running without aot minimal reproduction problem instructions see sample works cant perform aot compilation using ngtoolswebpack locally compile jit see logs correct output console locally using aot get following console output see previous value constructor thank motivation use case changing behavior consistent correct behavior aot jit compilation environment", "num": "23429", "d": "4/2018"}, {"title": "noopzone throws errors zonejs included", "body": "submitting x regression behavior used work stopped working new release bug report performance issue feature request documentation issue request support request gt please submit support request instead see please describe current behavior ngzone throws error used bootstrap module expected behavior using ngzone require zonejs loaded believe regression introduced probably kind integration test", "num": "23428", "d": "4/2018"}, {"title": "angular transferstate page loading twice flickering", "body": "submitting current behavior entering page first time clear cache everything looks good cached site inside browser page flickering look screen assets loaded page second load assets load nearly blink uncheck disable cache chrome dev tools website timeline looks like thought could universal issue used solutions like http calls bug still exist think service worker issue loading page first cache normal site expected behavior page load like minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23427", "d": "4/2018"}, {"title": "warningsystemimport deprecated use import instead", "body": "hi trying migrate demos angular webpack webpack everything works fine devprod build getting two warnings link says disable warning use ruleparsersystem true able think use syntax webpackwebpack webpack feedback please help", "num": "23426", "d": "4/2018"}, {"title": "service worker forces status using httpauthentication", "body": "submitting current behavior using service worker web apps using http authentication case windows authentication ngswjson ngswcachebust runs status expected behavior status happen minimal reproduction problem instructions create angular service worker project like described enable kind authentication eg windows authentication motivation use case changing behavior motivation service workers work authentication possible solution ngswworkerjs file change implementation newrequest method adapter class following environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "23425", "d": "4/2018"}, {"title": "query parameters removed upon application load", "body": "x bug report x feature request x documentation issue request current behavior opening page url query parameters automatically removed opening url changes part angular initialization aware read url query parameters docs preserve url query parameters routing different component within app docs nt clear angular router keep url query parameter around linked angular application external site since initial link nt within angular application specify preserve url query parameters since url query parameters appear removed routed component method called way find incoming url parameters even passed expected behavior seems like reasonable scenario would expect work assume something missing nt able find documentation calling specifically supposed work way configure nt strip url query parameters default eg ultimately like links like work able get url query parameter instead time component loads url changed", "num": "23423", "d": "4/2018"}, {"title": "generated output ngswjson wrong", "body": "submitting current behavior run build script inline argument file use absolute path files produces path built using relative path help expected behavior either using relative path generating output due value environment", "num": "23422", "d": "4/2018"}, {"title": "angular interceptor using cached catch", "body": "implementation httpinterceptor latest version however nt seem work error cachedresult exist observableof cachedresult returns observable nothing leads subscribe nothing subscription wonder right thing using observableof inside catch", "num": "23421", "d": "4/2018"}, {"title": "activatedroute returns wrong values", "body": "submitting current behavior following service subscribes observable puzzlingly responding call value value values obtained correct injectable export class sagasservice constructor private httpclient private route activatedroute private router router routerevents filter e gt e instanceof navigationend subscribe e gt consolelog e consolelog routerurl consolelog routerrouterstate consolelog routerrouterstateroot expected behavior accessing activatedroute provide correct values", "num": "23420", "d": "4/2018"}, {"title": "currency pipe use getlocalecurrencysymbol instead getcurrencysymbol", "body": "submitting current behavior interpolation returns expected behavior return well one reference provided locale angularcommonlocalesespejs index aka currency symbol index counting source displayed secondly force value returns correct symbol whereas returning pen probably nonexistant minimal reproduction problem instructions made two p one cheating currency pipe using symbol currency code another using currencypipe supposed motivation use case changing behavior could adhere locale form instead depend currenciests currencypipes extend currencypipe provided currencypip environment", "num": "23419", "d": "4/2018"}, {"title": "package still existing", "body": "submitting current behavior expected behavior intended old http package still present became deprecated minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23418", "d": "4/2018"}, {"title": "populate multiple router outlets single route", "body": "submitting current behavior route configured load single component single router outlet load component auxiliary outlet needs go url separately expected behavior single route able populate multiple router outlets motivation use case changing behavior code demonstrates use case navigate want load component main content area companion component sidebar area without needing weird url environment angular cli node os linux angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicspackageupdate typescript webpack", "num": "23416", "d": "4/2018"}, {"title": "routing breaking app cordova android ios", "body": "submitting current behavior routing one component another returning previous route component using angular location strategy back button physical android ios device cause router stop working expected behavior routing work even going back previous route minimal reproduction problem instructions clone repo run following commands install apk device route forwards backwards change route apk also provided repo stackblitz ref environment browser x android webview x ios webview chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx workaround downgrading", "num": "23415", "d": "4/2018"}, {"title": "add abstractcontrolsetenabled enabled boolean", "body": "submitting current behavior currently two methods enabledisable want enabledisable according another field need write expected behavior add write minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23414", "d": "4/2018"}, {"title": "routerlink ca nt url encode", "body": "use routerlink url include amp ca nt encode", "num": "23413", "d": "4/2018"}, {"title": "lazyload problem undefined function", "body": "update angular version form tell error error error uncaught promise typeerror undefined function typeerror undefined function arraymap webpackasynccontext eval src lazyrouteresource lazy recursive mainbundlejs systemjsngmoduleloaderloadandcompile systemjsngmoduleloaderload routerconfigloaderloadmodulefactory routerconfigloaderload mergemapsubscribereval project mergemapsubscribertrynext mergemapsubscribernext mergemapsubscribersubscribernext arraymap webpackasynccontext eval src lazyrouteresource lazy recursive mainbundlejs systemjsngmoduleloaderloadandcompile systemjsngmoduleloaderload routerconfigloaderloadmodulefactory routerconfigloaderload mergemapsubscribereval project mergemapsubscribertrynext mergemapsubscribernext mergemapsubscribersubscribernext resolvepromise resolvepromise eval zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue code import modulewithproviders angularcore import routes routermodule angularrouter import rbacservice rbacrbacservice const routes routes path redirectto pageindexmain pathmatch full path page component mitlayoutcomponent canactivate rbacservice children path index loadchildren appmodulesindexindexmodule indexmodule canactivate rbacservice export const approutes modulewithproviders routermoduleforroot routes usehash true angular cli node os angular animations common compiler compilercli core forms platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicspackageupdate typescript webpack", "num": "23412", "d": "4/2018"}, {"title": "bug angular compiler ng build using npm link", "body": "submitting x bug report current behavior ng build gives incorrect error scenario detailed ng serve open also fails compile initially remove bracket save undo save appmodulets example compile pass app runs normally seems glitch ng build first time runs second time works correctly although contents identical expected behavior ng build pass default new app generated using cli ng serve work start without workaround described minimal reproduction problem instructions environment vars set make npm packages installed specific global location using link setting reuse packages avoid mb downloaded installed separate app way default cli new app use kb disk space instead mb example set cli install would equivalent command reproduce run following commands inside empty dir case angularcli windows using cmd set npmconfiglinktrue set npmconfigprefixd angularclialternateglobalnpmrepo set path path npmconfigprefix npm install g angularcli ng new mynewapp cd mynewapp ng build ng serve open give error error ngmodule metadata found appmodule change something appmodulets save change back save compiles successfully refreshing browser show app motivation use case changing behavior npm link basically creates os symbolic links nodemodules folder towards global npm folder nt know ng build fails first time please fix nt download store mb multiple times nt need environment", "num": "23411", "d": "4/2018"}, {"title": "upgradecomponent trying get angularjs injector set", "body": "submitting current behavior possible use angular service inside angular service getting following error trying get angularjs injector set however works use angular service inside angular component instead service expected behavior able use anuglar service inside angular service minimal reproduction problem instructions check code motivation use case changing behavior environment", "num": "23410", "d": "4/2018"}, {"title": "svg hover ngfor", "body": "ts readonly shapes type string html string type rect html type circle html type ellipse html type triangle html html css svg stroke grey svg rect hover circle hover ellipse hover polygon hover stroke fff run code hover nt work fix", "num": "23409", "d": "4/2018"}, {"title": "problem transpiling routermodule imported ngmodule decorator", "body": "submitting current behavior unable transpile project build error get run ngc command happens import routermodule inside imports section ngmodule decorator also set skiptemplatecodegen like typescript ngmodule declarations appcomponent imports commonmodule routermoduleforchild routes providers provide routes usevalue routes multi true provide analyzeforentrycomponents usevalue routes provide multi true export class appmodule tsconfigjson angularcompileroptions strictmetadataemit true skiptemplatecodegen true error get error template compile appmodule function calls supported decorators routermodule called however add providers section commented error package successfully created expected behavior transpile adding routermoduleforchild imports section skiptemplatecodegen true minimal reproduction problem instructions created repository containing full app download npm install run npm run packagr order reproduce issue link repo environment", "num": "23408", "d": "4/2018"}, {"title": "ngfor trackbyfunction support ngtemplate ngtemplateoutlet", "body": "submitting current behavior expected behavior code every time set sourcelist template generate even set trackby also tried sample support ngtemplateoutlet need ngtemplateoutlet get templte outside component minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23406", "d": "4/2018"}, {"title": "typo errors docs", "body": "submitting current behavior section observables compared arrays observables compared techniques errors table content cell row find column array arrfind v gt v content cell row foreach column observable obsforeach v gt consolelog v content cell row foreach column array arrforeach v gt consolelog v expected behavior content cell row find column array arrfind v gt v content cell row foreach column observable obsforeach v gt consolelog v content cell row foreach column array arrforeach v gt consolelog v minimal reproduction problem instructions motivation use case changing behavior correct typo errors documentation environment", "num": "23405", "d": "4/2018"}, {"title": "animations freeze safari using", "body": "submitting current behavior safari freezes performing animation app built expected behavior nt freeze minimal reproduction problem instructions repo run red div clicked animation plays change green safari freezes browser environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx x safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "23401", "d": "4/2018"}, {"title": "cli build optimization cuts dynamic enums", "body": "submitting current behavior reason enum const enum also publicly exported apart public api used one file build optimization turn empty object expected behavior even const enum stick around compiled js build optimized minimal reproduction problem instructions clone run contains build optimizer default open safari watch world burn also tested via looking file see enum example wiped away look somewhere around area called motivation use case changing behavior might areas angular experiencing issue environment", "num": "23400", "d": "4/2018"}, {"title": "error ca nt resolve crypto", "body": "using angular version compile code import injectable angularcore import injectable export class constructor consolelog got error angular version everything works fine package json dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularserviceworker nguniversalexpressengine nguniversalmodulemapngfactoryloader compression corejs ethereumjstx materialdesignicons rxjs spdy tinymce tsloader webanimationsjs webpack webpackcli zonejs devdependencies angulardevkitbuildangular angularcli angularcompilercli angularlanguageservice typesnode express nodesass reflectmetadata typescript", "num": "23398", "d": "4/2018"}, {"title": "ngc error generic type", "body": "submitting current behavior inject token generic type compiling causes following error metadata collected contains error reported runtime could resolve type xxx using first thought related typescript builtin types created still got error expected behavior error minimal reproduction problem instructions ts export interface setting string export const setting new injectiontoken gt export class foo constructor inject setting setting partial motivation use case changing behavior building lib user inject settings optional missing ones filled default values environment", "num": "23395", "d": "4/2018"}, {"title": "search engine visibility", "body": "yes yes keep close trigger finger calm moment thinking playing around fusebox thanks uri shaked video fusebox ssr personal page dilemma ssr search engine visibility general angular pages able indexed partially see webmaster tools try anything needs http request done order receive data nt considered least google dominant western search engine prerendering everything andor serving via low performance nodejsnet ca nt solution problem nt rendering html problem data indexed counter go serving static files alternative nodenet meh better nothing would accomplished relaying problem still need jumping hoops b render snapshot every interval minutes esp useful service worker nt take dist dir copy prod copy whole thing cronjob whatever condition triggers prod build needs done import json web service endpoints via webpack rest fusebox ask nice fast something like import customerdata servicescustomer include css via import would nt able include json new idea dawned c httpclient promise fulfilled rendering prod build observable actually grabbing data initially ever case experts framework web service data needs indexed search engines essential know scenarios search engine visibility nt issue mean come vue even angularjs able indexed angular nt marketing everything search engine visibility free marketing actually start bugging search engine team include angular remote data index tell submitting", "num": "23394", "d": "4/2018"}, {"title": "exported member", "body": "hero tutorial error occurred heroservicets file method rxjs file", "num": "23392", "d": "4/2018"}, {"title": "serviceworker typeerror set property next undefined lrulistremove", "body": "submitting current behavior building pwa angularserviceworker app backed restapi resource apistate called via get put verb shall cached sw indeed would need getrequests cached could specifiy start freshly cleared cache following behaviour observed first get request cached throw error put requests throw following error uncaught promise typeerror set property next undefined lrulistremove datagrouphandlefetch next getrequest throws uncaught promise typeerror set property next undefined lrulistremove lrulistaccessed datagroupcacheresponse datagrouphandlefetchwithfreshness expected behavior errors thrown minimal reproduction problem instructions provide motivation use case changing behavior environment", "num": "23388", "d": "4/2018"}, {"title": "async value resolved ngifelse", "body": "", "num": "23387", "d": "4/2018"}, {"title": "feature request compile time expressions template", "body": "submitting current behavior see angular template syntax providing way declare constant compile time expressions template invoked runtime order tracked changing might useful declare expression wo nt changed still referenc component class motivation use case changing behavior let show example use case export globalconstmessages utilsmessages component selector app template text may syntax something like text export class mycomponent public readonly text string globalconstmessagessometext lt hello world example way transform template compiletime case able avoid unnessesary change detections runtime usefull cases need reuse text messages across application much easier maintain messages one file reference constant compiletime expression templates also nice feature able declare input variable component constant compiletime expressions think much harder implement example transformed compiletime", "num": "23382", "d": "4/2018"}, {"title": "link wrong url angular cli page", "body": "site bottom learn angular link linking one many w", "num": "23381", "d": "4/2018"}, {"title": "angularbazel package failed publish bazel due caching", "body": "release observed bazel package failed rebuild publish publishing packagesbazel npmpackage info analysed target packagesbazel npmpackagepublish packages loaded info found target target packagesbazel npmpackagepublish uptodate info elapsed time critical path info build completed successfully total action info running command line access public tag next npm err publish failed put npm err code npm err publish previously published versions angularbazel npm err complete log run found npm err error nonzero return code command process exited status seems packages built scratch new tag bazel package bazel tried publish old artifact course rejected npm since already published recover rebuild published expected", "num": "23380", "d": "4/2018"}, {"title": "reenable size tracking integration tests", "body": "commented", "num": "23376", "d": "4/2018"}, {"title": "update service worker doc getting started pre cli", "body": "submitting current behavior expected behavior comment pr looks really good want raise awareness need updated angularangularcli gets merged also updating indexhtml file project reflected well need change service worker getting started list ng add command minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23373", "d": "4/2018"}, {"title": "explain newevent helper function used live example testing docs", "body": "submitting current behavior testing section typo example change input value dispatchevent section test showing nameinputdispatchevent newevent input expected behavior nameinputdispatchevent new event input minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23370", "d": "4/2018"}, {"title": "angular relative navigation default route work", "body": "submitting current behavior precondition following set nested routes redirection default child child default route route param relative navigation sibling route work instead navigation made route parameter value equal child path behavior navigation navigation using api expected behavior navigation made minimal reproduction problem instructions motivation use case changing behavior navigation case requires workarounds replacing url desired way using angular api environment", "num": "23364", "d": "4/2018"}, {"title": "animation working", "body": "submitting current behavior animation working components wait delay given animation also see stackoverflow question expected behavior well animates minimal reproduction problem instructions made stackblitz motivation use case changing behavior well want animate switch components environment", "num": "23362", "d": "4/2018"}, {"title": "inconsistent behavior output name matches dom event", "body": "submitting current behavior run plunker click test chrome called custom ie called twice first time second time custom expected behavior dom events overwritten custom outputs emitted minimal reproduction problem instructions motivation use case changing behavior consistent behavior across browsers environment", "num": "23361", "d": "4/2018"}, {"title": "angular aot compilation failed multiple lazy routing", "body": "submitting current behavior tried migrate project angular strange error aot compiler typeerror converting circular structure json using webpack ngtools compile bug nt occurring compiling project jit compiler compiling one lazy module aot compiler add second third lazy module aot compiler nt working anymore even tried add simple module component dependencies expected behavior bug least error message showing fix minimal reproduction problem instructions main router code motivation use case changing behavior want able compile application angular aot mode environment", "num": "23360", "d": "4/2018"}, {"title": "angular compilation fails trying lazy load module package nodemodules", "body": "submitting current behavior package nodemodules folder created using ngpackagr custom package called mycomponentlibrary try lazy load module package like const routes routes path sayheader loadchildren mycomponentlibrary appmodule however ngserve prod get following compiler errors error src lazyrouteresource lazy namespace object module found error ca nt resolve experimentslazyloadingtestnodemodulesmycomponentlibrarymycomponentlibraryngfactoryjs experimentslazyloadingtestsrc lazyrouteresource ngserve jit also fails following error module build failed error experimentslazyloadingtestnodemodulesmycomponentlibrarymycomponentlibrarydts missing typescript compilation please make sure tsconfig via files include property however change routing config like const routes routes path sayheader loadchildren gt new promise resolve gt require ensure require gt resolve require mycomponentlibrary appmodule use jit works module lazy loaded note angular compilation lazy loading used work jit aot expected behavior configuration needs work const routes routes path sayheader loadchildren mycomponentlibrary appmodule ngserve prod need working aot deployment minimal reproduction problem instructions see motivation use case changing behavior see environment browser x chrome desktop version xx tooling issues node version platform windows others", "num": "23358", "d": "4/2018"}, {"title": "angular io fetching document error", "body": "submitting current behavior expected behavior minimal reproduction problem instructions example others kazakhstan almaty", "num": "23357", "d": "4/2018"}, {"title": "doc error", "body": "constructor private backend backendservice private logger logger place may problem", "num": "23356", "d": "4/2018"}, {"title": "allow optionally giving example interpolation", "body": "submitting current behavior possible specify example interpolation text expected behavior able specify example sometimes renaming variable make sense fine adding context minimal reproduction problem instructions motivation use case changing behavior translators sometimes raise questions cause translations delayed could avoided example placeholder", "num": "23355", "d": "4/2018"}, {"title": "heroservice getheroes failed undefined", "body": "submitting current behavior going tutorials code copied exactly tutorial compiled perfectly tutorial worked perfectly http part http last step get error browser heroservice getheroes failed undefined since learning idea fix problem expected behavior display heroes nothing displayed looks like inmomoryserver working minimal reproduction problem instructions copy pasted code server ubuntu linux following environment motivation use case changing behavior learning angular first time environment good learning opportunity expert point wrong tested set mac linux issue error message back end browser front end saw error message hero list empty", "num": "23353", "d": "4/2018"}, {"title": "onsameurlnavigation config value set routertestingmodule", "body": "submitting current behavior setting onsameurlnavigation reload config routertestingmodule unit test update config value router expected behavior update value minimal reproduction problem instructions motivation use case changing behavior unit test environment number", "num": "23347", "d": "4/2018"}, {"title": "routerlink href sometimes incorrect used within component activated using emptypath", "body": "submitting current behavior specified using matrix url notation sometimes broken example using reproduction computed url sometimes becomes points url outside website origin clicking link logs something like browser console nt always broken sure broken case found reproduced using instructions expected behavior value always correctly computed minimal reproduction problem instructions visit reproduction go bar link seems correct foo page click go bar link go back foo page notice go bar link href incorrect click go bar link console error logged similar one mentioned motivation use case changing behavior using routerlink matrix url notation within emptypath component root example environment", "num": "23346", "d": "4/2018"}, {"title": "problem bundles angular", "body": "submitting current behavior unable load application still problem compiler bundle still problem tslib correctly exported bundles expected behavior bundles work expected minimal reproduction problem instructions angular ok factory globalng globalng globalngcompiler angular ko factory globalnpmpackage globaltslib globalrxjs globalrxjsoperators motivation use case changing behavior bundles work expected environment", "num": "23343", "d": "4/2018"}, {"title": "ivy support injection flags optional self etc", "body": "need support injection flags x optional x self x skipself x host eg", "num": "23342", "d": "4/2018"}, {"title": "angular tutorial ca nt pass first step change title", "body": "submitting current behavior changed value title attribute appcomponentts tour heroes changed value appcomponenthtml title files folder srcapp run example browse shows indexhtml root folder project html filie changed try request browser appcomponenthtml value changed word error assumed tutorial must followed described really tried expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23341", "d": "4/2018"}, {"title": "edge web extensions cause symboliterator errors ngfor", "body": "submitting current behavior building web extension using angular browseraction popup window calls background page fetching array objects causes errors iterating objects angular app popup iterating objects following errors thrown repeatedly console array still draws screen sure errors thrown errors manifest whenever iterating objects created popup window popup angular app href item itemname export class appcomponent implements oninit items href string background const myitems name abg name b name c window myitems myitems guess serialization processes popup background page causing sort loss object data angular trying utilize occurs edge browser also tested safari chrome firefox others manifest problem turning prod mode causes errors go away console popup app workaround seen stop errors clone object arrays fetched background page recreates popup window context since sure angular problem edge problem maybe also submitted problem edge issue tracker expected behavior able iterate arrays background page without error minimal reproduction problem instructions repo load extension edge settings extension load extension open popup view console beware edge dev tools extensions pretty bad glitchy often require browser restart function care real app also manifests problem found motivation use case changing behavior using angular web extension edge browser environment", "num": "23340", "d": "4/2018"}, {"title": "inline styles like styleanystylename notice try apply invalid value", "body": "submitting current behavior templates conditions identical html toggle div div minimal reproduction problem instructions motivation use case changing behavior really important", "num": "23338", "d": "4/2018"}, {"title": "angular overcomplicated", "body": "submitting current behavior working angular since started angularjs also write articles habrahabrru mediumcom angular collecting lot statistics feedback people years find years working angular angularjs considered highlevel language therefore everyone already experience jquery things work simple javascript could quickly understand angular become lowlevel longer resembles java feels like working c everything hands keep track everything grasp time things seem occasionally drift away angular also understood immediately forgot make unsubscribe components destroyed get memory leak work large data streams application find optimize application andor change components onpush get severe performance drop customer changed business requirement wants dynamic components small bandle say goodbye technological stack angular unreal hand even experience especially time running even original ngcomponentoutlet work write solution must skills senior level least hope angular elements save day us junior developer included setinterval component wrap start outside zone performance decline angularjs property directive setvalidate something kind actively used everything cool creating custom validator need ensure overwrite existing ones create one validator simply add validator already required example firstly specify required validator still keep mind whether active maybe already field filled currently thing create custom validator whole separate class accessories even sure fine create custom ngmodel rewrite ton code whole class controlvalueaccesor stock full methods even use bananabox attribute component forgot make emit component event even warned angular cli since strange bugs began appear something fails time making necessary restart devserver project written pure webpack angular experienced problems want use webworker platform eject whole internet couple articles run webriches declarative reactive forms working one enormous entity lot work map fields class template moreover use declarative forms lose advantage future jet forms could better tests painful angular framework dependency injection builtin brings lot pain well mandatory dependencies di component let live happily writing tests writing tests angular tedious nowhere else component designer requires include everything even going test routing completely untyped switch module directories even webstorm idea vsc help putting paths correctly angular overcomplicated first sight many cases justified enough convenient things well take router directive adding active class directive checking current route url route made uirouter check individually segments template level simple thing needed projects first second angular without exception one page show one top hat top hat one thing background pictures general range tasks thing diverse huge day yesterday make something let take person wants study angular tries find frequently asked interview study way beginning developers find onestep solution start making solution see overcomplicated switch vue simpler total number complications lack detail angular seems framework robots first seemed angular poorly designed fact notyou get tired quickly using however alternatives yet neither vue react seem suit want write jquery angular make simpler developer single moment first line doomed seek solutions something redefine make comfortable bare hands cool opportunity forced work process modern frontend developers solve problems engage academic research framework better faster scaled first place necessary easy reliable react easy reliable angular reliable easy many people see balance vue balanced see hellish mixture react angularjs reliability mean first probability code getting smelly know mean jsx shitty code fair regarding react statistics confirm amount poorquality code offscale continuous complaints companies seek seniors fix poorwritten code state application redux also good implementation getting convinced opinion actually tends ideology angular describe elementary things like kind multivolume advanced research study protect unforeseen changes plus forces architecture upon appeared mobx dan abramov speaks dan opinion influences experienced programmers big group among react developers expected behavior want know plans reduce complexity simplify framework make easier start developing projects angular level preparation project easily increased based technological stack angular something simple stenciljs box could easily scale full components modules think many would happy would like angular popular inquired markets popular better angularjs like angular want everything fine pin medium publish", "num": "23337", "d": "4/2018"}, {"title": "prevent formarray push emit event", "body": "submitting behavior pushing formgroup inside formarray possible prevent push emit event setvalue motivation use case changing behavior using formarray redux store using valuechanges observable dispatch changed values store push new formgroup trigger endless loop", "num": "23336", "d": "4/2018"}, {"title": "sanitizing unsafe url value", "body": "hello table imageurl column stores path images trying display screen get method specific path using web api successfully retriving data displaying image screen encountered error warning sanitizing unsafe url value see unsafe get unsafe net errunknownurlscheme", "num": "23335", "d": "4/2018"}, {"title": "httperrorresponse statustext always default ok regardless statuscode", "body": "submitting current behavior server response contain statustext httperrorresponsestatustext automatically set ok regardless status code thus end error response instance believe weird previous documentation clearly stated default value sure understand reason behind empty string would less confusing think expected behavior either statusstring left empty even better check status code either use proper http status show success status code something done others minimal reproduction problem instructions motivation use case changing behavior debugging errors website looked httperrorresponse object ok status made think something going wrong server andor error handling actually error know documentation states still misleading see logs imo environment", "num": "23334", "d": "4/2018"}, {"title": "directive input disabled swallow disabled property button", "body": "submitting bug report current behavior created directive also button use binding use directive button swallow disabled property button render enabled even though disabled expected behavior button disabled regardless directives using minimal reproduction problem instructions following plunker remove directive button become disabled environment angular version", "num": "23332", "d": "4/2018"}, {"title": "need bridging used", "body": "currently generate works fine since declared part need see anything element injector tree however work case used case see element injector tree possible fixes mark services using thumbsdown nonstarter breaks locality one thumbsdown would require merging pros easy implement cons know breaks tree shaking since pulling least code would patch act like used thumbsup pros tree shaking works expected need know needs hook see cons cons hook external connect order redirect since private hook small cost syntax inejctable class someservice constructor dep somedep static nginjectabledef defineinjectable factory gt new someservice inject somedep component provides someservice class mycomponent static ngcomponentdef definecompoent provides someservice features componetprovidersfeature would use private api patch go cases factory called consequence", "num": "23330", "d": "4/2018"}, {"title": "elements adds ngversion attribute every angular element page", "body": "currently every toplevel custom element tag gets ngversion attribute ex server side rendered custom elements adds extra bytes every custom element page", "num": "23329", "d": "4/2018"}, {"title": "ng documentation missing command option descriptions", "body": "throughout documentation commands options missing description arguments understand example ng generate service module module aliases specifies service provided word module name added option example whatsoever believe information added", "num": "23326", "d": "4/2018"}, {"title": "tutorial application shell missing part", "body": "tutorial page application shell missing information fact user needs manually download corresponding packages angular web application created many questions eg stackoverflow concerned programmers wondering command except issue fails like suggest amend tutorial include command markdown serve application go project directory launch application cd angulartourofheroes ng serve open markdown serve application go project directory install angular npm packages launch application cd angulartourofheroes npm install ng serve open", "num": "23325", "d": "4/2018"}, {"title": "reactive forms radio name formcontrolname must match child formgroup", "body": "submitting current behavior using reactive form contains radio control inside form group error thrown setting attributes occurs following naming convention works controls input element radio control formarray value get included formdata created htmlformelement expected behavior radio form controls attributes work inside formgroup formarray reactive form without throwing error significantly value radio form controls inside formarray b attribute set element included formdata submitting form minimal reproduction problem instructions minimal demo steps reproduce create reactive form formgroup andor formarray add elements form control within formgroup andor formarray set attributes radio inputs bug error logged console radio input submit form using formdata created htmlformelement bug values radio inputs inside formarray included formdata minimal demo following name formcontrolname values must match rule added steps reproduce create reactive form formgroup andor formarray add elements form control within formgroup andor formarray set attributes radio inputs match rather following pattern form controls use bug radio controls every item formarray treated single radio input group submit form using formdata created htmlformelement bug values radio inputs null formdata despite selections made radio form controls motivation use case changing behavior radio form controls attributes work inside formgroup formarray reactive form without throwing error significantly value radio form controls inside formarray included formdata submitting form formdata used forms also include file inputs workaround nt set attribute radio form controls submit get values radio form controls formarray using abstractcontrolvalue add formdata using formdataappend environment issue changelog fixed original plunk added second plunk demonstrate behavior using radio controls matching values", "num": "23319", "d": "4/2018"}, {"title": "add function get locale currency code", "body": "submitting current behavior function get currency code locale functions get currency symbol name expected behavior function get currency code locale well see issue", "num": "23317", "d": "4/2018"}, {"title": "ivy fix remove workaround local refs", "body": "let consider following contrived example example variable type case yet supported ngivy compiler runtime issue opened discuss possible solutions current workarround existing tests using following workaround obviously want use longterm follows set proposals indication favourite one proposals dedicated load instruction simples naive approach create dedicated instruction ex pros trivial implement cons compiler needs work harder figure pointing consistent existing local ref resolution load code dedicated local ref resolution strategy ca nt simply add another else existing local ref resolution strategy would well easy add piece logic would kill treeshaking would bring related code every element container instruction instead could introduce strategy default without value local ref resolution ex pros pulled instruction consistent usage instruction cons new argument generated code related code pulled jsbased blocks even needed dedicated instruction instead introducing new argument existing instruction could create separate functions creating js blocks pros smallest clearest generated code clear separation containers created js blocks vs best treeshaking templaterefload idx instruction cons biggest impact existing code test compiler recommendation proposal would go option dedicated instruction although laborious one also one best properties", "num": "23316", "d": "4/2018"}, {"title": "get error expression changed checked use pristine flag", "body": "submitting current behavior component two options one use ngmodel directive option use binding control pristine change value option get error expressionchangedafterithasbeencheckederror expression changed checked previous value someinput true value expose asynchronously perhaps due implementation controlvalueaccessor interface expected behavior changing value must done without error minimal reproduction problem instructions see example open console motivation use case changing behavior environment", "num": "23314", "d": "4/2018"}, {"title": "custom implements ngmodel work custom angular components", "body": "submitting current behavior fact leverage bidirectional binding custom components nt need use ngmodel define input output parameters field able use syntax inputtext using component current behavior working expected behavior model changes values root component must also change minimal reproduction problem instructions repro", "num": "23311", "d": "4/2018"}, {"title": "ngc fails using classes tnscoremodules injection tokens", "body": "submitting current behavior using two classes page frame nativescript core tnscoremodules node package injection tokens providers nativescriptangular package switching ngc started failing following error error thrown difference generated javascript code vs tslib spread function throws type simplified version class removing provider causes array populated correctly compilation succeeds ngc also succeeds build package ngc generates use package dependency minimal reproduction problem instructions problem reproduced project single ngmodule one providers cause problems environment", "num": "23310", "d": "4/2018"}, {"title": "child form control disabled entire form group dirty status change", "body": "submitting current behavior child form control disabled entire form group dirty changed expected behavior even child form control disabled enter form group dirty status changed minimal reproduction problem instructions environment", "num": "23309", "d": "4/2018"}, {"title": "formgroup touched remains false checkbox value change", "body": "submitting current behavior formgroup remains untouched click event fired elsewhere page expected behavior formgroup set touched soon value checkbox control changed minimal reproduction problem instructions change value either checkbox observe dirty set true formgroup touched unchanged demo motivation use case changing behavior seems like incorrect behaviour workaround use dirty however checkbox values set programatically load dirty would set true user interacted form group could result user displayed error message early environment browser x chrome desktop version chrome android version xx chrome ios version xx x firefox version safari desktop version xx safari ios version xx x ie version edge version xx others also observe demo using material behaviour similar click control twice order touched set true", "num": "23308", "d": "4/2018"}, {"title": "forcing change detection working ngzone enable changedetectionstategydefault", "body": "submitting current behavior specifically designed visual component tree shows angular often finds changes tree generated dynamically usage changedetectiondefault async pipe ngzone startup application check tree three times usage changedetectiononpush async pipe without ngzone startup application check tree one times usage changedetectiondefault async pipe timer ngzone template component tree constantly causing applicationtick every thing intervalcomponentts turns asynchronous channels frequent updates throttle entire component tree expected behavior usage changedetectiondefault async pipe ngzone much case second example happen often also start calculating factorial component entire application starts hang think bad mobile devices environment", "num": "23307", "d": "4/2018"}, {"title": "polyfillsbundlejs line maximum call stack size exceeded", "body": "cause problem browser small number mobile phones appear", "num": "23305", "d": "4/2018"}, {"title": "parent ngif respecting child animation finish parent removed dom", "body": "submitting current behavior parent ngif wait child animation finish killing apparently child animation use leave issue thing user dharders said specified animatechild needed leave animations child component parent removed dom would like usage method custom states expected behavior parent ngif waits child animation finish removing form dom minimal reproduction problem instructions child component animations trigger slideupdown state hide style transform translatey state show style transform translatey transition hide lt gt show animate easeinout state showhide hide toggleview thisstate thisstate show hide show click viewchild childcomponent childcomponent childcomponent toggle thischildcomponenttogglestate motivation use case changing behavior child animations respected parent hidden environment", "num": "23302", "d": "4/2018"}, {"title": "fr get componentref using component instance", "body": "submitting expected behavior var ref someangularbuiltinservicegetcomponentref componentinstance code use angular services refinjectorget also work lazy loaded modules motivation use case changing behavior possible write specialized decorators require access angular built services example export class taskscomponent implements oninit fromroute id taskscomponent gt oloadtasks projectid string skipped concise export class taskscomponent implements oninit projectid constructor private route activatedroute ngoninit currently patch component factories router config loader order achieve", "num": "23301", "d": "4/2018"}, {"title": "httpclient progress event httpresponse include response headers", "body": "application uploads file post request httpclient reportprogress true option headers http response status created accesscontrolallowcredentials true accesscontrolalloworigin cachecontrol nocache nostore mustrevalidate contentlength date tue apr gmt expires location pragma nocache server envoy vary origin xcontenttypeoptions nosniff xenvoydecoratoroperation defaultroute xenvoyupstreamservicetime xframeoptions deny xxssprotection modeblock however last httpresult event headers map headers location missing pragma cachecontrol expires", "num": "23299", "d": "4/2018"}, {"title": "angular service worker updating version correctly chrome official build", "body": "update correctly client login gmail account update current behavior release new version app update version pop displayed user willingly press update version app loading correctly throws type error saying read id undefined happens client browser user mode guest mode guest mode goes fine fulfill purpose using service worker guest mode every time app loaded first access furthermore app goes expire browser loads serviceworkerjs nothing else expected behavior release new version app update version pop displayed user willingly press update service worker update version correctly minimal reproduction problem instructions install latest chrome browser user mode deploy changes everyday staging site reload days see update popup minute two press update check guys could see updated fe assets environment production angular version angular packages router core service worker compilercli forms etc browser chrome desktop version official build dev tooling issues typescript angularcli node platform centos windows let know guys need info debugging purpose consider hotfix app production right", "num": "23296", "d": "4/2018"}, {"title": "anchor href attribute throws typeerror read property length null", "body": "submitting current behavior creating anchor tag download http link variable get weird error first click anchor tag works fine sure error console please see image error stack expected behavior throw error click minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23295", "d": "4/2018"}, {"title": "dynamically associate component route based route parameter", "body": "submitting current behavior hi everyone present way dynamically associate component route using router parameter would like write route definition follows instead writing route definition route associated component expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23294", "d": "4/2018"}, {"title": "reactive form validator ca nt work static input", "body": "submitting current behavior reactive forms use angular built validators write custom validator based input like based max length value input changed nt affect validation status control split issues ca nt get input changed creating control set validation function function type must custom input must declared inside closure ca nt changed like maxlength maxlength maxlength number validatorfn maxlength maxlength length number validatorfn registeronvalidatorchangecontrolupdatevalueandvalidity input changed expected behavior want able change validator input affect validation result supported model driven form implemented closure directive inputs minimal reproduction problem instructions example length initialized change another number number nt affect validator keep using origin value motivation use case changing behavior input validator changed first initialization backend service user input", "num": "23293", "d": "4/2018"}, {"title": "angular package format correct", "body": "submitting current behavior expected behavior flat esm minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23291", "d": "4/2018"}, {"title": "ivy task update view compiler rely global knowledge", "body": "current view compiler based templateast embed global information program want move away architecture use template generate output without global knowledge chuck made spike architecture task replacing templateast ast information required compile update view compiler", "num": "23289", "d": "4/2018"}, {"title": "angulario working", "body": "submitting current behavior angulario working error console expected behavior errors minimal reproduction problem instructions angulario motivation use case changing behavior environment", "num": "23286", "d": "4/2018"}, {"title": "dynamic component loading lazy support", "body": "submitting current behavior dynamic component loading using requires specify components expected behavior expectation load component dynamically like lazy load would thousands components added growing specify get loaded client side render load component want load component dynamically serverside like ajax call", "num": "23284", "d": "4/2018"}, {"title": "error error uncaught promise nomatch", "body": "submitting current behavior approutingts ts export const routes routes path canactivatechild authguardservice children path loadchildren appviewdashboarddashboardmodule dashboardmodule pathmatch full path login component logincomponent path redirectto dashboardroutingts ts const commonroutes routes path component processqueuecomponent path process processid component processcomponent export const routes routes path component dashboardcomponent children path redirectto taskqueue path taskqueue children commonroutes path reportqueue children commonroutes path processstart component processstartcomponent repro", "num": "23282", "d": "4/2018"}, {"title": "bazel test packagescoretest test errors windows", "body": "submitting current behavior throw error sh bazel test packagescoretest test info analysed target packagescoretest test packages loaded info found test target error c compiling angular templates ngc packagesupgradestatic static failed exit packagesupgradestaticpublicapits error find module packagesupgradestaticpublicapits error find module srccommondowngradecomponent packagesupgradestaticpublicapits error find module srccommondowngradeinjectable packagesupgradestaticpublicapits error find module srccommonversion packagesupgradestaticpublicapits error find module srcstaticdowngrademodule packagesupgradestaticpublicapits error find module srcstaticupgradecomponent packagesupgradestaticpublicapits error find module srcstaticupgrademodule target packagescoretest test failed build use verbosefailures see command lines failed build steps info elapsed time critical path failed build complete successfully executed test fails build looks like ignored fixing error copying files get another error expected behavior works tooling issues node version platform windows cc alexeagle know interested", "num": "23281", "d": "4/2018"}, {"title": "throw node defined serverside rendering", "body": "submitting current behavior serverside rendering progress wants insert piece html text like template innerhtml without sanitizer terminal throws error message like browser rendering works normally expected behavior serverside rendering progress render safe html text directly case website always need output information format minimal reproduction problem instructions motivation use case changing behavior template html data fetched server like btw tried import node modules exported domino mainjs server used render webpage everything works well environment", "num": "23280", "d": "4/2018"}, {"title": "asynchronous providers", "body": "submitting current behavior angular nt seem support providers asynchronously create object service want load config server dynamically seem encouraged use kludge comprised creating using delay bootstrapping long enough make async call inject results hack buggy race conditions may potentially injected services used read bootstrapping happens causing bugs object gets used ready plunk demonstrates problem notice problem another service read truly finished constructed imo since need construct object finish initializing state step think reading config constructor pretty common programming practice expected behavior think would great able something like export function asyncconfigservicefactory api apiservice return new promise resolve reject gt apiget myconfigjson response gt resolve new configservice response ngmodule providers apiservice provide configservice useasyncfactory asyncconfigservicefactory deps apiservice useasyncfactory idea tell ng wait promise use value produces service think pretty straight forward way whatever think best way address motivation use case changing behavior use case fetch config server stick service inject services want inject stuff fully constructed ready used words asynchronous request server completed values populated seen quite users trying accomplish thing stackoverflow kludge becoming defacto way answers getting highly upvoted multiple articles published websites recommending bugprone method good framework reputation long term easy right way whatever environment issues would well served async providers", "num": "23279", "d": "4/2018"}, {"title": "rxjs\u91cc\u9762\u6ca1\u6709throwerror\u6a21\u5757", "body": "man newbee problem import observable throwerror rxjs word rxjs export throwerror please answer import observable throwerror rxjs rxjs \u91cc\u9762\u6ca1\u6709\u4efb\u4f55\u7684export throwerror \u6a21\u5757 c usershuajiedesktop\u65b0\u5efa\u6587\u4ef6\u5939myappnodemodulesrxjsrx \u6ca1\u6709\u5bfc\u51fa\u7684\u6210\u5458 throwerror", "num": "23278", "d": "4/2018"}, {"title": "unable get upcoming absolute url routerstatesnapshotactivatedroutesnapshot", "body": "submitting current behavior unable get upcoming absolute url routerstatesnapshotactivatedroutesnapshot way achieve angular router expected behavior gives relative url currently getting relative url like product minimal reproduction problem instructions motivation use case changing behavior ca nt use thisrouternavigatebyurl product need send absolute path nonangular codeif map angularjs uirouter something like var absoluteurl statehref tostate toparams absolute true environment", "num": "23277", "d": "4/2018"}, {"title": "angulario routerlink dynamic parameters", "body": "trying build navigation links dynamically also optional paramteers route path build router dynamically pass empty place edit navigate detail componenet give errors achieve angular router", "num": "23273", "d": "4/2018"}, {"title": "add ability use templates routing", "body": "submitting want something simple wrappers decorator properties \u0441omponent could directly used options would great current behavior ts component select rootchild template export class rootchildcomponent export const routes routes path component appcomponent path children component rootchildcomponent chidlren path abc component abccomponent path def component defcomponent expected behavior example example", "num": "23269", "d": "4/2018"}, {"title": "transclude available hybrid angularangularjs apps", "body": "submitting current behavior using angularjs component hybrid angularangularjs application injectable available angularjs component controller angularjs component controller asks error thrown browser console expected behavior servicelocal injected angularjs component controller would running inside pure angularjs app minimal reproduction problem instructions minimal demo open browser console see error thrown motivation use case changing behavior angularjs components use able used angular app nt supported use case note added documentation angularjs feature nt supported hybrid apps environment", "num": "23268", "d": "4/2018"}, {"title": "titlecasepipe working latin characters", "body": "submitting current behavior words like turned expected behavior words like turned minimal reproduction problem instructions motivation use case changing behavior title case language environment", "num": "23267", "d": "4/2018"}, {"title": "httpclient post type inference error", "body": "submitting current behavior issuing httpclientpost request observeresponse responsetypetext resolved return type rather expected expected behavior correct return type inference minimal reproduction problem instructions create new angular app ng new angulartypeinferenceerror copy srcappappcomponentts build code error changing post get leads proper type inference code compiles without error function prototypes look similar could nt make error within time available environment ng version angular cli node os linux angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicspackageupdate typescript webpack", "num": "23266", "d": "4/2018"}, {"title": "proposal userdefined deffeatures extend component capability", "body": "submitting goal allow users install capabilities components directives using ngivy system mainly become apis thirdparty library authors motivation example want implement observable lifecycle like component userdefined deffeature solve currently needs handwritten code ts component class somecomponent implements ondestroy ondestroy new eventemitter ngondestroy thisondestroy emit proposal able write like ts userdefined feature emit event destroy automatically const ondestroy feature def directivedef gt const proto deftypeprototype ondestroy const emitter protoondestroy emitter null return const existinghook defondestroy existinghook defondestroy gt emitternext existinghook else defondestroy gt emitternext interface ondestroy ondestroy subject ngmodule install feature compiler features ondestroy feature declarations somecomponent class appmodule component class somecomponent implements ondestroy detected feature ondestroy new eventemitter handwritten definition ts class somecomponent ondestroy new eventemitter static ngcomponentdef definecomponent type somecomponent factory function somecomponentfactory return new somecomponent features ondestroy feature outline expose type public api allow take", "num": "23264", "d": "4/2018"}, {"title": "ngtemplateoutlet ngcontent structural directive false result", "body": "submitting current behavior trying put inside component enables via might get overridden contents latter contains structural directive plunker etc mandatory without works expected expected behavior rendered independently minimal reproduction problem instructions see minimal example mycomponent template motivation use case changing behavior typically would use together context necessary reproducing issue though environment", "num": "23263", "d": "4/2018"}, {"title": "angularcommonlocaleses well formatted", "body": "submitting current behavior even translations correct months days missing capital letter beginning annoying expected behavior correct format like one attached eszip would awesome fixed main angular version thanks motivation use case changing behavior weird capitalization months days language environment angular version latest version available browser browsers", "num": "23262", "d": "4/2018"}, {"title": "add language service vim", "body": "disclaimer opened issue could nt find anywhere else someone point would appreciated submitting current behavior open vim ca nt awesome things language service provides lay cry panic expected behavior google vim angular language service install favorite bundler vundle use live happily minimal reproduction problem instructions google vim angular language service stare lack useful responses motivation use case changing behavior really want use vim angular environment vim", "num": "23261", "d": "4/2018"}, {"title": "viewcontainerrefclear give destroyed components leave animation time", "body": "submitting current behavior destroying dynamically created component enter leave animations leave time executed expected behavior viewcontainerrefclear give back observable completes everything run correctly minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23256", "d": "4/2018"}, {"title": "examples really outdated", "body": "submitting current behavior lot demoexamples code really outdated search ex expected behavior demosexamples date minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23254", "d": "4/2018"}, {"title": "referenceerror defined eval webpackinternal", "body": "trying consume restful webservice via angular component parameters getting packaged request due getting null response service getting error debugging referenceerror syntaxerror referenceerror referenceerror defined eval eval webpackinternal srcappappgitservicets safesubscribereval next webpackinternal safesubscribertryorunsub webpackinternal safesubscribernext webpackinternal subscribernext webpackinternal subscribernext webpackinternal xmlhttprequestonload webpackinternal nodemodules angular zonedelegateinvoketask webpackinternal objectoninvoketask webpackinternal nodemodules zonedelegateinvoketask webpackinternal syntaxerror syntaxerror unexpected end appgitservicepostgituser webpackinternal appcomponent webpackinternal objecteval handleevent ng handleevent webpackinternal nodemodules callwithdebugcontext webpackinternal nodemodules objectdebughandleevent handleevent webpackinternal nodemodules dispatchevent webpackinternal nodemodules eval webpackinternal nodemodules htmlbuttonelementeval webpackinternal nodemodules zonedelegateinvoketask webpackinternal service call angular import injectable inject viewencapsulation angularcore import http headers angular import httpparams httpheaders angularcommon import httpclient seleniumwebdriver injectable export class appgitservice constructor inject http private proxy http", "num": "23251", "d": "4/2018"}, {"title": "invalid search results google request", "body": "submitting current behavior expected behavior would like exclude requests angularjs", "num": "23248", "d": "4/2018"}, {"title": "forcing change detection working ngzone", "body": "submitting current behavior usage changedetectiondefault async pipe ngzone startup application check tree three times usage changedetectiononpush async pipe without ngzone startup application check tree one times happening component tree checked often environment", "num": "23247", "d": "4/2018"}, {"title": "generation guides project development angularcli", "body": "submitting current behavior matter fact commands generated launch expected behavior react cli generates whole documentation extremely convenient even videos animations although react framework library guys tried make easier run projects project huge always possible understand structure generated write tests immediately pitfalls develop project avoided least minimal development guide would smart update", "num": "23246", "d": "4/2018"}, {"title": "angular animation ngfor", "body": "hi list displayed help nfor animation added list item start animation list item added markup want animate appearance list item", "num": "23245", "d": "4/2018"}, {"title": "ios new service worker safari hangs image upload", "body": "build angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router serviceworker angularcdk angularcli angularflexlayout angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicspackageupdate typescript webpack new safari experimental service worker default works fine long upload image pwa appears hang getting sort firebase storage issue turn safari service worker app works expected using latest firebase storage task show preloader using based david east blog see pwa worked fine ios update service worker default fail uploading image prior ios release bug using camera pwa added home screen camera disabled apple fixed camera bug ios david east blog upload image using angular getting firebase error safari desktop macos high sierra version apr update code storageunknown message firebase storage unknown error occurred please check error payload server response name firebaseerror serverresponse client uploaded wrong offset instead sure new angular polyfill needed enable service workers thanks found issues safari service workers enabled hangs angular pwa using upload chrome android version xx chrome ios version xx firefox version xx x safari desktop version xx x safari ios version xx ie version xx edge version xx", "num": "23244", "d": "4/2018"}, {"title": "serviceworker localhost took long respond http error", "body": "submitting sure regression assume since closed advised open new issue current behavior offline mode nt work using serviceworker expected behavior offline mode work using serviceworker minimal reproduction problem instructions clone access app mentioned terminal stop refresh page steps simply replaced ng new skipinstall cd replace angular version packagejson add angularserviceworker packagejson npm ng g serviceworker project angular cli version gt installed globally environment browser x chrome desktop latest nt tested browsers tooling issues node version platform mac amp win", "num": "23240", "d": "4/2018"}, {"title": "problem bundles since angular", "body": "submitting current behavior unable load application ng packages created ngcore ngcommon expected behavior bundles export right packages ps still problem tslib correctly exported bundles minimal reproduction problem instructions angular ok factory globalng globalng globalngcore globalrxjs globalrxjsoperators angular ko factory globalnpmpackage globaltslib globalrxjs globalrxjsoperators problems bundles motivation use case changing behavior bundles export right packages environment", "num": "23238", "d": "4/2018"}, {"title": "calling addcontrol disabled formgroup enable form", "body": "submitting current behavior add control disabled form using formgroup addcontrol method form becomes enabled call expected behavior form retains disabled status minimal reproduction problem instructions steps reproduce create empty formgroup disable form form disabled add control using addcontrol form enabled motivation use case changing behavior creating large reactive form build form sections needed readonly state previously saved forms upon opening saved form know must entirely disabled set top level user browses sections form ui add parent form needed becoming reenabled environment", "num": "23236", "d": "4/2018"}, {"title": "support oninit services", "body": "submitting current behavior services ondestroy lifecycle hook oninit available directives expected behavior oninit available services well motivation use case changing behavior oninit safe zone safe assume services instantiated including instance module see current state injection order determines ability inject services service service b cross reference need external event aware scenario service requires module instance module instance also requires service svc eager di loop use case service examines interface module stuff based make happen need module manually call method service transparent process module independent yes know use providers case approach fit best cc mhevery", "num": "23235", "d": "4/2018"}, {"title": "multi slot content projection child component", "body": "submitting current behavior like able use multislot content projection content child component currently ngcontent without select pulls content catch expected behavior attached stackblitz bottom nested example would look top direct example minimal reproduction problem instructions motivation use case changing behavior developing library component wrap various custom components cards collapsed maximized custom controls title bar etc reason nt work project content parent template environment browser x chrome desktop version xx", "num": "23233", "d": "4/2018"}, {"title": "upgrade documentation conflicting framework bootstrapped first", "body": "submitting current behavior documentation mental model section page states angularjs always bootstrapped first owns root component however example section follows code comments seem suggest opposite note comment angular bootstrap complete bootstrap angularjs module general upgrading angularjs documentation page also seems suggest angular bootstrapped first followed angularjs bootstrapping hybrid applications bootstrap hybrid application must bootstrap angular angularjs parts application must bootstrap angular bits first ask bootstrap angularjs bits next expected behavior documentation consistent framework bootstrapped first environment", "num": "23225", "d": "4/2018"}, {"title": "falsy routes considered active", "body": "submitting current behavior route defined considered active html route one active route two active expected behavior route undefined marked active nt minimal reproduction problem instructions stackblitz minimal code try nt access stackblitz module typescript const routes path routeone component hellocomponent path routetwo component hellocomponent path redirectto routeone pathmatch full ngmodule imports browsermodule formsmodule routermoduleforroot routes declarations appcomponent hellocomponent bootstrap appcomponent export class appmodule html route one active route two active css css proof display inlineblock margin padding background teal color white borderradius active border solid red motivation use case changing behavior developer want make conditional routing would like define empty routes disabled routing nt considered active avoid ui confusion environment", "num": "23224", "d": "4/2018"}, {"title": "regression fakeasync breaks date", "body": "submitting current behavior execute following test suite import fakeasync testbed angularcoretesting describe dates gt beforeeach gt testbedconfiguretestingmodule deal dates correctly fakeasync fakeasync gt const jsdate new date jsdatesetfullyear deal dates correctly fakeasync gt const jsdate new date jsdatesetfullyear second test passes first one fails expected behavior test pass environment", "num": "23223", "d": "4/2018"}, {"title": "update deprecated shadowroot creation", "body": "submitting current behavior calls deprecated feature longer supported polyfills browsers expected behavior calls per custom elements specification minimal reproduction problem instructions create new project angularcli native view encapsulation include polyfills file open application firefox safari edge motivation use case changing behavior browsers never got custom elements support means functions deprecated custom elements never get implemented browsers environment", "num": "23222", "d": "4/2018"}, {"title": "regression locales seem incorrect ng serve fails compile", "body": "submitting current behavior adding lines appmodulets import registerlocaledata angularcommon import localefr angularcommonlocalesfr registerlocaledata localefr brand new project using angular angular cli makes build fail following error note although looks like warning attempt using localerelated pipe like date example leads runtime error expected behavior compile run fine minimal reproduction problem instructions edit packagejson file use angular zonejs rxjs edit appmodulets add three lines edit appcomponenthtml add even simpler edit packagejson file use angular zonejs rxjs edit appcomponenthtml add motivation use case changing behavior environment", "num": "23217", "d": "4/2018"}, {"title": "platformserver injection regression", "body": "reproduction clone error notes branch changes angular working fine error error appears happen platformserver afaict looks right source token error uses traditional provider api", "num": "23211", "d": "4/2018"}, {"title": "ngc watch nt work extends relative paths tsconfig", "body": "submitting current behavior tsconfig extends another ngc compile watcher listen changes file changed ngc react change quick example tsconfig tsconfigdevjson rootconfig directory tsconfigjson root directory tsconfigdevjson root directory nt contain relative paths works watcher expected behavior watcher listens changes files relative paths used config minimal reproduction problem instructions repo reproduce issue steps reproduce readme motivation use case changing behavior ngc allow engineers organize config desired still use watcher environment", "num": "23208", "d": "4/2018"}, {"title": "documentation fix", "body": "submitting current behavior looks like issue address secretlairs expected behavior minimal reproduction problem instructions motivation use case changing behavior avoid confusion code along environment", "num": "23207", "d": "4/2018"}, {"title": "tour heroes tutorial incompatible version angularinmemorywebapi installed", "body": "following tour heroes tutorial http section part followed instructions install angularinmemorywebapi npm install angularinmemorywebapi save installed version appears incompatible angular rxjs caused tutorial application stop working took track problem fix going version angularinmemorywebapi people experiencing may make http section tutorial confusing", "num": "23205", "d": "4/2018"}, {"title": "get error module found error ca nt resolve", "body": "submitting current behavior use custom type ts files compiling components get js files require dts file try run application get error error srcappappcomponentts module found error ca nt resolve srcapp happened started using angular expected behavior compiled js files without require dts file minimal reproduction problem instructions clone repo run npm gulp buildngc check appcomponentjs file see line var require angular everything works correctly motivation use case changing behavior environment", "num": "23203", "d": "4/2018"}, {"title": "doc error angular example failing", "body": "clicking live example hyperlink angular tutorial get following error message", "num": "23202", "d": "4/2018"}, {"title": "cors issue angular", "body": "submitting", "num": "23200", "d": "4/2018"}, {"title": "support ide autocompelte ngpreservewhitespaces", "body": "submitting current behavior ide autocomplete suggest attribute typing template expected behavior ide suggests completes typing angular template triggering particular ide helper command achieved adding directive empty nothing minimal reproduction problem instructions demo plunkr na webstorm go angular template tag type ctrl space autocomplete come motivation use case changing behavior faster placing without copypasting creating snippet custom directive environment", "num": "23198", "d": "4/2018"}, {"title": "serviceworker missing badge notificationoptionnames", "body": "submitting current behavior displaying notification mobile using serviceworker payload seems ignored default notification bell icon displayed expected behavior display notification badge sent payload use default icons minimal reproduction problem instructions default serviceworker setup send notification payload containing url badge displayed default notification bell icon used instead looking generated noticed appears listing option used service worker display notifications adding array display expected badge option simply missing notification options motivation use case changing behavior environment", "num": "23196", "d": "4/2018"}, {"title": "animations nt crash unrecognized css properties ignore", "body": "submitting current behavior currently angular animations crash unrecognized css property encountered expected behavior angular nt crash unrecognized css properties animations ignore minimal reproduction problem instructions reproduce create animation using unrecognized property app using broke microsoft edge open test case edge motivation use case changing behavior current animations behavior goes nice css feature unrecognized css declarations simply ignored also hard animate new properties implemented everywhere yet may also introduce random breakages older browsers would otherwise work fine environment", "num": "23195", "d": "4/2018"}, {"title": "shared modules share components lazyloaded modules failing strange errors", "body": "submitting current behavior application parent module menu two child modules come share components use menu switch modules break annoying bug happens declare components two different modules expected behavior moving components declaration shared module removing child lazyloaded modules expected app work many guides posts stackoverflow page suggest app crash random errors like find stackoverflow question minimal reproduction problem instructions pastebin current status ngmodules routes work perfectly component error modules declaration ca nt spot motivation use case changing behavior business app work hereby admit knowledge ngmodules work extensive find normal since design followed poor buggy far experienced fact use shared module bad design decission end incredibly hard escalate since components either separate modules imported modules require even components module nt needed importer really annoys even approach seems work probably skipping something important somebody point obvious error fix capable seeing far environment browser chrome desktop version xx chrome android version xx chrome ios version xx x firefox quantum safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows help highly appreciated", "num": "23192", "d": "4/2018"}, {"title": "issue compiling", "body": "hi new angular need help small concern ever running angular project want perform another task like create component anything else use press ctrlc exit execution ask cterminate batch job yn ever task performed accidentally type n n still terminating issue angular setup every one facing anyone please help fix thanks advance", "num": "23191", "d": "4/2018"}, {"title": "duplicate license headers present fesm files", "body": "submitting current behavior following conversation filipesilva license headers packages noticed moment license headers removed cause bundles bigger expected behavior license headers avilable minified umd bundle minimal reproduction problem instructions", "num": "23190", "d": "4/2018"}, {"title": "upgraded components angulardynamicloader", "body": "hello nt know issue fall bug report feature request describe submitting current behavior hybrid application use upgradecomponent updrade components described want render dynamically based trying use got error component factory found component add ngmoduleentrycomponents ok added component entrycomponents got component used entry component use upgrade components dynamic loader works components perfectly expected behavior use upgraded components dynamic loader motivation use case changing behavior need render type components dynamically upgraded environment", "num": "23183", "d": "4/2018"}, {"title": "doc validating form control based value another form control explained docs", "body": "answering lot angular questions stackoverflow lately one question comes validate one form control based value another form control think would nice example official docs kind validator maybe could another item section chapter receives positive feedback love first contribution angular docs submitting current behavior currently docs example validating one form control based value another form control expected behavior docs example validating one form control based value another form control motivation use case changing behavior lot users ask kind validator stackoverflow would nice could point official documentation", "num": "23182", "d": "4/2018"}, {"title": "enable aspnet web api session working localhost", "body": "production mode angular client web api site problem session development mode angular hosted reset session call service host angular web api host development mode means ng build time big overhead ideas use session better way", "num": "23180", "d": "4/2018"}, {"title": "aio uris return firebase instead angular one", "body": "submitting current behavior visit see firebase error expected behavior see angular error", "num": "23179", "d": "4/2018"}, {"title": "validation issue reactive form input type file angular google chrome browser", "body": "submitting x regression behavior used work stopped working new release bug report x feature request x documentation issue request x support request gt please submit support request instead see current behavior reactive form input type file file added input valid one firefox ie working fine chrome browser even file added input still invalid expected behavior google chrome browser input file status valid one file already added minimal reproduction problem instructions stackblitz implementation open developer tools opening mozilla firefox focus browse inspector input class many values could seen nguntouched ngpristine nginvalid add file image pdf etc browse option focus browse inspector input class many values could seen ngdirty ngvalid ngtouched means adding file input status valid process done google chrome browser step could see input class still nginvalid means apply validators wo nt work correctly keep submit button expects input file valid submit button never enabled always disabled condition formcontrol set validatorsrequired motivation use case changing behavior validation works perfectly input type text etc nt work input file type chrome browser works fine chrome would good developers stackblitz link expected behavior opened firefox adding file submit button enabled chrome submit button enabled even file added environment angular version detailed version could seen stackblitz demo provided browser chrome desktop version official build firefox version bit ie version tooling issues node version platform windows others na", "num": "23172", "d": "4/2018"}, {"title": "locale inconsistency upperlower case", "body": "submitting current behavior currently using dates locale months weekdays starts uppercase character locale starts lowercase characters expected behavior imo must character case avoid differences languages minimal reproduction problem instructions necessary see motivation use case changing behavior apply environment apply unnecessary", "num": "23171", "d": "4/2018"}, {"title": "provide symbol value", "body": "submitting current behavior injectiontoken providing symbol value throws error chrome create property anonymoustype symbol symbol mysymbol edge assignment readonly properties allowed strict mode expected behavior provides symbol token minimal reproduction problem instructions motivation use case changing behavior providing unique symbol environment error providing symbol injectiontoken using symbol token", "num": "23170", "d": "4/2018"}, {"title": "ca nt get custom error message server response status", "body": "submitting current behavior currently service call returns status ca nt get custom error message json reponse display ui message display fault error message post exact problem expected behavior ideally error able get custom error message json response display ui currently way sure bug angular feature request needs occur minimal reproduction problem instructions post code steps motivation use case changing behavior reason want custom error messages status server different reasons want identify user error server could locate transaction permission issue need ask admin permission show different custom messages environment angular cli node os angular browser x chrome desktop version version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "23166", "d": "4/2018"}, {"title": "parammap returns number number used navigate", "body": "submitting current behavior optional route params given numbers navigate remain numbers page refreshed expected behavior would expect always string parammapget claims minimal reproduction problem instructions values change every seconds page load numval string updating number strval except tostring called motivation use case changing behavior actual types matching types declared api environment see stackblitz", "num": "23165", "d": "4/2018"}, {"title": "lazyloading working angular stackblitz", "body": "submitting current behavior minimal reproduction problem instructions", "num": "23163", "d": "4/2018"}, {"title": "unnecessary calls retrieve shouldattach routereusestrategy", "body": "submitting current behavior first route rendered unnecessary calls even returns true expected behavior nt run apart sequence running function also wrong run first understanding course minimal reproduction problem instructions open stackblitz example check console logs calls retrieve shouldattach nt motivation use case changing behavior environment using customstrategy routereusestrategy exactly defaultroutereusestrategy", "num": "23162", "d": "4/2018"}, {"title": "error could resolve module angularcore", "body": "submitting current behavior migrated also getting error error stack trace also created question environment tooling issues node version platform mac angularcli", "num": "23160", "d": "4/2018"}, {"title": "use input example", "body": "possible use input variable anothe input variable input field field input form formgroup new formgroup amount new formcontrol value null disabled thisdisabled validatorsrequired currency new formcontrol value thisfieldcurrencies value disabled thisdisabled validatorsrequired angular version", "num": "23159", "d": "4/2018"}, {"title": "improve injectable app configuration angularclicompatible", "body": "submitting current behavior angular cli able define preconfigured perenvironment configuration included build artifact great want hardcode settings like api endpoints consume settings need import environmentts file use class typical architecture setup ui automation acceptance tests run website service calls stubbed fake data performance issues nt want call real services testing ui frontend unit implemented injecting perenvironment services real stubbed one extending abstract class acting provider interface environment file declare type injected like typescript dev export const environment userservicetype userapiservice test export const environment userservicetype userstubservice app module select user service type far good let introduce dependency cycle say want read configuration property environment file typescript import environment environmentsenvironment class userapiservice extends userservice private endpoint string constructor thisendpoint environmentuserserviceendpoint simple scenario introduced dependency cycle userapiservice environment userapiservice use case solved wrapping environment injecting wrapper consumer class example let put peace code app module typescript class environmentcontainer public environment object ngmodule providers provide environmentcontainer usevalue environment environmentcontainer provide userservice useclass environmentuserservicetype class appmodule user service rewritten dependency cycle removed also removed hardcoded dependency import unit tests far easier need stub injectable configuration expected behavior could really improve angular app configuration experience creating set classes environment file decouple us reading lowlevel config file manually importing wrapping injectable java spring configuration solved years ago creating environment class gets injected configuration classes get properties config currently implemented project works really well instance configuration class using hold google analytics settings typescript injectable export class googleanalyticsconfiguration properties wraps access object immutable order make config immutable able use getin function unknown property acces never throw error return null basically layer control access private properties properties public constructor environment environmentservice thisproperties environmentgetproperty googleanalytics public get userid string return thispropertiesget userid consumer class would excellent mimic java spring configuration module also add decorators reduce boilerplate", "num": "23158", "d": "4/2018"}, {"title": "ionicangular html selected option change even chosen", "body": "short page js google map control select dropdown let say page page users would get following application flow selecting option dropdown value ex abc would navigated pages going back root page hitting back button swipe back directly last page complete cycle everything works well cycle try go another cycle got problem select dropdown page value select dropdown stick last one abc chosen cycle wont agree change matter option switch dont really know missed something done fix help really appreciated thank html code select component function triggered onchange event basically output selected value xvalue console testing last page navigate back rootpage user completed whole process tried push poptoroot setroot ended result", "num": "23156", "d": "4/2018"}, {"title": "hostbinding work within tests", "body": "created accidentally", "num": "23146", "d": "4/2018"}, {"title": "doc outdated ngvalue still used documentation selectcontrolvalueaccessor", "body": "submitting current behavior documentation selectcontrolvalueaccessor uses code snippets expected behavior replaced minimal reproduction problem instructions na motivation use case changing behavior outdated documentation find correct version stack overflow environment", "num": "23145", "d": "4/2018"}, {"title": "outer element animates different timing curve child", "body": "submitting current behavior animating height element inside container outer element lags visibly behind child element expected behavior given animation frame containing element height determined height child minimal reproduction problem instructions stackblitz exaggerated timing emphasize effect environment", "num": "23144", "d": "4/2018"}, {"title": "angular router problem", "body": "two buttons one buttons dropdown menu works fine buttons clicked pages created url changing say dropdown menu react click popup menu button url changing could figure dropdown buttons work page schema approutingts child componentts understand wrong", "num": "23143", "d": "4/2018"}, {"title": "missing arrayfind arrayfrom polyfills used animation", "body": "submitting current behavior arrayprototypefind arrayfrom function defined polyfill used animation module noticed issue compiled angularcli application running android emulator compiled javascript thrown error functions expected behavior polyfill loaded environment angularanimations browser x native browser android version lt", "num": "23142", "d": "4/2018"}, {"title": "error importing angularjs component angular app trying get angularjs injector set", "body": "submitting current behavior embedding upgraded angularjs component angular application results error message expected behavior upgraded angularjs component able used angular application errors minimal reproduction problem instructions ran problem following instructions using angularjs components angular application created repository demonstrates issue instructions build application included repository readme high level steps took generated new angular app using angular cli generated new angularjs module using custom yeoman generator built module ed angular app generated previous step followed instructions import angularjs component angular app upgrade created new angular directive wrap angularjs component typescript import directive elementref injector simplechanges angularcore import examplecomponent angularjsmodule import upgradecomponent angularupgradestatic directive selector upgradedexamplecomponent export class exampledirective extends upgradecomponent constructor elementref elementref injector injector super examplecomponentinjectionname elementref injector imported directive bootstrapped angularjs hook typescript import browsermodule angularplatformbrowser import ngmodule angularcore import appcomponent appcomponent import exampledirective examplecomponentexamplecomponent import upgrademodule angularupgradestatic import angularjsmodule angularjsmodule ngmodule declarations appcomponent exampledirective imports browsermodule upgrademodule providers bootstrap appcomponent export class appmodule constructor private upgrade upgrademodule ngdobootstrap thisupgradebootstrap documentbody angularjsmodule strcitdi true added reference new upgraded directive built ran application caused following error thrown console sure real bug issue upgrade documentation environment", "num": "23141", "d": "4/2018"}, {"title": "angularcommonlocals shipped angular", "body": "submitting current behavior since angular rc shipped see expected behavior locales shipped environment", "num": "23140", "d": "4/2018"}, {"title": "new feature baseurl support httpclient", "body": "currently write interceptors changing baseurl httpclient requests could please provide us base url setters default environment level configuration eg properties file", "num": "23139", "d": "4/2018"}, {"title": "angular service worker stop working going offline", "body": "submitting current behavior offline new lazy assets datagroup calls cached come back online expected behavior new lazy assets datagroup calls cached come back online minimal reproduction problem instructions suitetable reproduction cause need angular production build create new angular project service worker ng new ngswtest serviceworker add asset project cd ngswtest echo asset gt srcassetstesttxt build production ng build prod serve production build dist visit application chrome request test asset check asset cached fine work clear site data visit applictaion new tabwindow go ngsw debug info driver state normal nominal latest manifest hash last update check version clients idle task queue last update tick last update run never task queue debug log typeerror failed execute fetch serviceworkerglobalscope onlyifcached set sameorigin mode typeerror failed execute fetch serviceworkerglobalscope onlyifcached set sameorigin mode driversafefetch driverhandlefetch driverfetch driver state normal typeerror log go offline visit application ngsw debug info driver state existingclientsonly degraded due failed initialization manifest fetch failed error manifest fetch failed driverfetchlatestmanifest latest manifest hash last update check version clients idle task queue last update tick last update run task queue debug log typeerror failed execute fetch serviceworkerglobalscope onlyifcached set sameorigin mode typeerror failed execute fetch serviceworkerglobalscope onlyifcached set sameorigin mode driversafefetch driverhandlefetch driverfetch typeerror failed fetch typeerror failed fetch driverfetch error manifest fetch failed error manifest fetch failed driverfetchlatestmanifest error occurred updating manifest unknown request manifest failed offline leads degraded state existingclientsonly go online visit application manifest request successful driver state still degraded ngsw debug info driver state existingclientsonly degraded due failed initialization manifest fetch failed error manifest fetch failed driverfetchlatestmanifest latest manifest hash last update check request test asset asset cached thoughts debugging found method checkforupdate file driverts error occurred updating manifest hash degraded due failed initialization errortostring err return false call fetchlatestmanifest throws error offline case came catch block sets degraded state never come back normal state correct behaviour really want switch state way offline answer yes come back normal state cache begin work motivation use case changing behavior environment application stable network changes online offline state normal nevertheless need consistent application environment", "num": "23135", "d": "4/2018"}, {"title": "reuse rollupbundle umd change rulesnodejs", "body": "reminder landed think intended push logic upstream mean reduce logic repo", "num": "23134", "d": "4/2018"}, {"title": "platformserver add dom types global context domino", "body": "currently injecting dom type angular code document window htmlelement etc generating output decorators downleveled dom types required runtime code load fix would add dom types dominoimpl global context bootstrap", "num": "23133", "d": "4/2018"}, {"title": "enhance testing component fixtures enable input updates using aliased names", "body": "submitting current behavior input output property annotation accepts string value acts external naming alias enables easy internal refactoring components without breaking external contract ideally alias names would used unit integration tests input values need changed ensuring external contact remains intact seem means update properties way difficult find documentation expected behavior instance componentfixture allow rw access inputs way alias something similar minimal reproduction problem instructions na motivation use case changing behavior allows authoring tests verify external component contract broken part refactor environment", "num": "23128", "d": "4/2018"}, {"title": "specify parent child route", "body": "submitting current behavior currently way parent child route relationship define parent route means parent routes config needs modified new child let say app two types pages clean page b page header footer sidebar ideal solution base layout component b pages want header footer sidebar constructed layout module need means need modify file new module uses layout violate openclosed prinicple expected behavior add ability specify parent child relationship child route ui router angularjs way prefixing child route name parent route name parentchildroute minimal reproduction problem instructions check full example motivation use case changing behavior way adding new module thing needed would write module would nt need modify layout module routes environment browser", "num": "23127", "d": "4/2018"}, {"title": "forms generics controlvalueaccessorvalidator", "body": "submitting proposal could find existing issuerfc would nt good idea generics typescript export interface controlvalueaccessor writevalue value void registeronchange fn value gt void void registerontouched fn gt void void setdisabledstate isdisabled boolean void export interface validator validate c abstractcontrol validationerrorsnull registeronvalidatorchange fn gt void void export abstract class abstractcontrol public readonly value motivation use case changing behavior addition optional generics make easier implement typescript class colorpickercomponent implements controlvalueaccessor color color writevalue color color void thiscolor color", "num": "23126", "d": "4/2018"}, {"title": "remove adbanner class adbannercomponentts dynamic component loader stackblitz example", "body": "example dynamic component loader nt display remove class adbanner adbannercomponentts template display ad", "num": "23125", "d": "4/2018"}, {"title": "feature request router supports optional parameters using redirects", "body": "submitting current behavior currently based official doc router supports query parameters fragment expected behavior router also supports optional parameters minimal reproduction problem instructions motivation use case changing behavior currently live example two parts selected effect back detail list crisis center heroes first one crisis center use optional parameter works one heroes still use optional parameter nt work due redirect query parameters work motivation use method without consideration maybe flag like environment", "num": "23124", "d": "4/2018"}, {"title": "large json file size around takes time searching", "body": "large json file angular project like mb may bigger loading file local assets folder takes around sec searching would takes alot time memory sometimes browser window become unresponsive crashed representing data front end side using module anyone suggest increase searching performance use database searching displaying searching json file instead object", "num": "23122", "d": "4/2018"}, {"title": "host angular universal project iis web server", "body": "build site universal support working good local referred url normal angular project move files folder server mysitefolderall files universal two folders browser server moved files server browser server mysitefolderall files site working universal working view source used build please let know host angular universal iis web serever dynamic sites thank", "num": "23120", "d": "4/2018"}, {"title": "dynamic component compiler ng build prod giving error", "body": "issue want develop application requirement need create component dynamically used componentfactoryresolver compiler ngmodulefactoryloader compiler method compilemoduleandallcomponentsasync creating dynamic component followed instruction article ng build issue building application ng build prod giving error first giving error like run time compiler found searched found solution like provide compiler app module provider giving another error resolving syntax used provide compiler like import compiler compilerfactory ngmodule angularcore export function createcompiler compilerfactory compilerfactory return compilerfactorycreatecompiler providers provide compiler usefactory createcompiler deps compilerfactory versions angular cli node os linux angular common compiler compilercli core forms http platformbrowser platformbrowserdynamic router angularanimations angularcdk angularcli angularflexlayout angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack repro steps function written creating component dynamically like use function viewchild dynamiccomponentcontainer read viewcontainerref container thisserviceloadcomponentwithlazyloading thismoduledatamodulepath thismoduledatacomponentname thiscontainer observed behavior ng build component creating dynamically running issue ng build prod issue like desired behavior create build production application run ng build", "num": "23119", "d": "4/2018"}, {"title": "dispatchevent change validation state form input", "body": "submitting current behavior change validation state ngmodel element expected behavior programatic changes input value change validation state example false like enter manually input motivation use case changing behavior testing environment browser chrome desktop version official build", "num": "23118", "d": "4/2018"}, {"title": "jasmine testcases ngform", "body": "form ngform consists email username etc u please provide example unit test cases", "num": "23116", "d": "4/2018"}, {"title": "dynamic component issue", "body": "hi dears im currently dynamic website created one component render different different layout eg single double triple parallel etc like show gridform problem time used call component ui well model popup also time im getting expressionchangedafterithasbeencheckederror issue take eg brower called component rendered single layout button click need call component open model popup reference open im getting issue expressionchanged error resolve please help im added component entry component stuff private clearandaddpagecomponent thisaddpagecontrolcontainerclear thisaddpagecontrolcontainerdetach var comp thiscfrresolvecomponentfactory renderpagecomponent var expcomponent thisaddpagecontrolcontainercreatecomponent comp expcomponentinstancepagelayoutdata thispagelayoutdata expcomponentinstanceref expcomponent code wrote add component click menu add brower ui im using object like render component pagesection single layout pagesection amp section double layout pagesection amp section amp section triple layout pagesection amp section parallel layout bower used use pagesection single layout model popup use component pagesection amp section amp section triple layout", "num": "23115", "d": "4/2018"}, {"title": "q", "body": "q", "num": "23114", "d": "4/2018"}, {"title": "doc inconsistent capitalization css hex color", "body": "", "num": "23113", "d": "4/2018"}, {"title": "using angularcompilercli throws compiletime error missing declaration", "body": "submitting current behavior currently using ngast dependency couple projects try compile get saw marked currently deprecated probably updated use expected behavior compiletime error environment", "num": "23112", "d": "4/2018"}, {"body": "docareacontributorsupport", "d": "4/2018"}, {"body": "first question makes think possible atm", "d": "4/2018"}, {"body": "question generate files cli use", "d": "4/2018"}, {"body": "yes possible blush", "d": "4/2018"}, {"body": "stephenfluin fyi tracking thanks looking", "d": "4/2018"}, {"body": "looks like compat issue end new angularjson deployed fix prod lmk looks well end", "d": "4/2018"}, {"body": "jenniferfell nt see paths beginning verify fixed", "d": "4/2018"}, {"body": "stephenfluin looks like file starting line", "d": "4/2018"}, {"body": "stephenfluin jenniferfell verified examples working correctly thanks ericsimons help", "d": "4/2018"}, {"body": "dup", "d": "4/2018"}, {"body": "ship happy users great experience wo nt long", "d": "4/2018"}, {"body": "igorminar stephenfluin love talk one think either fold doc changes changelogmd something parallel across two either must md guides available nav keeping uptodate", "d": "4/2018"}, {"body": "closing ignored issue template attached reproduction likely unrelated angular core see", "d": "4/2018"}, {"body": "point ignore undeclared members works intended", "d": "4/2018"}, {"body": "yes without work fine doc say without error nt error showinviato dal mio dispositivo huawei messaggio originale oggetto angularangular angular compiler nt return type error da rob wormald angularangular cc shockolino liberoit author point ignore undeclared members works intended receiving authored threadreply email directly view github mute thread apiversion publisher apikey name github entity externalkey githubangularangular title angularangular subtitle github repository mainimageurl github url point ignore undeclared members works intended action name view issue url", "d": "4/2018"}, {"body": "relates way typecheck abstract class", "d": "4/2018"}, {"body": "yes could go know pretty solution fits angular bc token technically type also see", "d": "4/2018"}, {"body": "added small repo reproducing quick debug looks like resolving properly instance member", "d": "4/2018"}, {"body": "wrong repo", "d": "4/2018"}, {"body": "see context cc alxhub", "d": "4/2018"}, {"body": "gkalpak yeah well let developers decide want httpauthentication implement flag set enable", "d": "4/2018"}, {"body": "enabling behind flag unless alxhub convinces otherwise grin referenced previous issue related discussion people might aware", "d": "4/2018"}, {"body": "none us understand", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "samverschueren applied event expect", "d": "4/2018"}, {"body": "duplicate listen dom events named along whatever registered support please use property whose name conflicts dom events intended emulate", "d": "4/2018"}, {"body": "know dom event quite annoying lead unexpected behaviour thanks linking duplicate issue trotyl mgechev might nice codelyzer could catch throw failure detected", "d": "4/2018"}, {"body": "weee nt realize new version thanks", "d": "4/2018"}, {"body": "duplicate", "d": "4/2018"}, {"body": "due bazel build copying dev generated file", "d": "4/2018"}, {"body": "try use may want", "d": "4/2018"}, {"body": "lacolaco wow really help japan really want join team awesome thank much issue closed", "d": "4/2018"}, {"body": "hi lacolaco found test angular source code config componentfixturenongzone configuretestingmodule configurecompiler review", "d": "4/2018"}, {"body": "sandangel add providers testbed injector configuretestingmodule config configurecompiler compiler injector", "d": "4/2018"}, {"body": "lacolaco thanks clarifying really appreciate looking forward hearing speech ngjapan", "d": "4/2018"}, {"body": "belong angularangularcli repost", "d": "4/2018"}, {"body": "please change single parameter array single value rest parameters", "d": "4/2018"}, {"body": "whoops bad thanks", "d": "4/2018"}, {"body": "occurred new generation empty collection produce new id without id factory might define strategy example import inmemorydbservice angularinmemorywebapi export class inmemorydataservice implements inmemorydbservice private lastid number createdb const heroes id name mr nice id name narco id name bombasto id name celeritas id name magneta id name rubberman id name dynama id name dr iq id name magma id name tornado thislastid return heroes responseinterceptor res reqinfo switch reqinfomethod case post const body res thislastid body id break return res genid collection collectionname return thislastid", "d": "4/2018"}, {"body": "duplicate", "d": "4/2018"}, {"body": "owlstack lol several hours work minimum result would still problematic really necessary add concrete debug information simplest case possible online working simple reproduction demo deploy angular app use ie see issue", "d": "4/2018"}, {"body": "ca nt share current client project asking test hello world angular app version also could find version install hard come unfortunately access remote client provide hello world angular app nt one already set polyfills mean idk helps assume already access basic hello world angular app thanks help advance", "d": "4/2018"}, {"body": "error message causing failure would help lot", "d": "4/2018"}, {"body": "sorry trouble seems issue related compatibility mode ie option checked angular app nt work unchecked works sure close bug open sense angular web app still work compatibility mode", "d": "4/2018"}, {"body": "owlstack exactly supposed met cases understand simplest online reproduction problem important", "d": "4/2018"}, {"body": "owlstack wikipedia compatibility view compatibility mode feature web browser internet explorer version later active compatibility view forces ie display webpage quirks mode page viewed angular compatible explorer fails compatibility mode", "d": "4/2018"}, {"body": "opened following repository issue submission guidelines", "d": "4/2018"}, {"body": "jbogarthyde chembu brandonroberts dennispbrown fyi", "d": "4/2018"}, {"body": "closing already fixed chembu rechecked tutorial instructions nt work already updated resolve issues seems work", "d": "4/2018"}, {"body": "root cause", "d": "4/2018"}, {"body": "workaround diff git atoolsbazelrc btoolsbazelrc index atoolsbazelrc btoolsbazelrc test debug testarg nodeoptions inspectbrk testoutputstreamed test eventually surprising failure autodiscovery c toolchain macos high sierra see build symlinkprefix build symlinkprefix performance avoid stating input files build watchfs", "d": "4/2018"}, {"body": "waterplea using means nothing could invoke cd console printing hook added seen running", "d": "4/2018"}, {"body": "mlcmlapis response correct thanks mlcmlapis", "d": "4/2018"}, {"body": "see though change detection onpush travel onpush components action performed nested one thought something special template usage means templateref keeping reference original nativeelement location difficult use templateref place nested component way tell run change detection template action might missing something need read onpush edit formulated question stackoverflow case somebody stumbles upon issue thought share", "d": "4/2018"}, {"body": "waterplea think basic idea still origins fact cd runs top bottom extra combinations controlled code probably using hook shared state", "d": "4/2018"}, {"body": "mlcmlapis well since template keeps track context would also nice keept track context change detector also otherwise context realistically used viewing", "d": "4/2018"}, {"body": "please read doc carefully mentioning existing code also please try switch right version using eg", "d": "4/2018"}, {"body": "thanks mistake poor part cheers", "d": "4/2018"}, {"body": "guard accepts array nesting array guards inside another array", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "thanks man", "d": "4/2018"}, {"body": "debugging quite deep angular amp angularjs source code see location calls calling nt trigger event window popstate event triggered using back button see mdn explains back button angular component gets rendered surely missing something obvious nt see mention anywhere use hashlocationstrategy running hybrid app", "d": "4/2018"}, {"body": "pfff please improve documentation angulario setuplocationsync mentioned people encountering import setuplocationsync angularrouterupgrade platformbrowserdynamic bootstrapmodule studentmodule platformref gt const upgrade platformrefinjectorget upgrademodule upgrademodule upgradebootstrap documentdocumentelement ajsmodulename strictdi true setuplocationsync upgrade catch err gt consolelog err", "d": "4/2018"}, {"body": "trotyl something improve question", "d": "4/2018"}, {"body": "errors seem source maps right would explain coming one browser odd browser seems pulling individual source maps files even though seem using cli bundles everything provide us better reproduction problem see problem freshly created cli project", "d": "4/2018"}, {"body": "suggestion please ask support question gitter stack overflow please post angular cli issue angular issue please provide online stackblitzplunker repro github project reproduced purely command aotspecific error", "d": "4/2018"}, {"body": "would nt better provide service converts object instead example simpler could reused purposes async pipe", "d": "4/2018"}, {"body": "rxjs panacea asynchrony observables solve lot problems catchall asynchronous operations argue asyncpipe ought support every type asynchrony working asynchronous proxies example would work example think asyncpipe powerful tool currently hindered implementation like free code", "d": "4/2018"}, {"body": "agree proposal observable rxjs indeed universal asynchronous pattern little problem javascript could fundamental arguments eventually types providing asynchronouscompatible functionality implement rather waiting every tool treat separately", "d": "4/2018"}, {"body": "trotyl one would reasonably straightforward ship pipes mobx whatever without adding complexitycodesize core likely roll async pipe facility core templating language near future rather introduce api wo nt able support future better live thirdparty oss library think", "d": "4/2018"}, {"body": "moved", "d": "4/2018"}, {"body": "igorminar looks like ngc issue running ngc directly according screenshot angular cli rationale moving keep issue opened", "d": "4/2018"}, {"body": "ok found got linked external npm project called tnp inside nodemodules folder problem high cpu usage ngc watch mode removing link nodemodulestnp problem nt exist tnp project structure folder projects inlcudes project ngc watch problem ignored anyway tsconfigjson tnp project sure ngc much operations tnp project folder thats constant high cpu", "d": "4/2018"}, {"body": "bendee aware fact phantomjs longer supported", "d": "4/2018"}, {"body": "ah see thanks information read pages possibility using works", "d": "4/2018"}, {"body": "functionality working expected console still showing error closing", "d": "4/2018"}, {"body": "nt javascript works", "d": "4/2018"}, {"body": "conscious decision easily using behavior consistent across native dom elements often nt make sense rich properties basically end attribute future look providing integrated solution wanted narrow scope api mark stable", "d": "4/2018"}, {"body": "robwormald thanks tip exactly need use logic primitive types objects complex types planning use properties without html attributes way define web component property corresponding attribute live without feature meanwhile however improve coherence component interfaces built using angular elements", "d": "4/2018"}, {"body": "attached two snaps one chrome second files", "d": "4/2018"}, {"body": "actionable please fill issue template", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information type issues please go stackoverflow seems like core issue may logical one", "d": "4/2018"}, {"body": "chembu get chance please review content updateangulario add details experience might helpful seemed work nt work thanks", "d": "4/2018"}, {"body": "stephenfluin starting update scenarios stuff manu suggested open issues suggestions lets try spiffy new comp devrel label took first pass triage obviously feel free relabel cheers", "d": "4/2018"}, {"body": "otoh could think new instance angular rather updating environment new instance getting started meet prereqs install latest cli make new project", "d": "4/2018"}, {"body": "think okay current behavior developers able find need new user experience find help need update guide able ignore things nt apply", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "quentinfchx means also increasing size module question worth everybody load probably almost app", "d": "4/2018"}, {"body": "exists still added package say reasoning behind ease application development providing basic blocks box without rely hundreds dependencies mlcmlapis tree shaking", "d": "4/2018"}, {"body": "quentinfchx depends others would fact tree shaking", "d": "4/2018"}, {"body": "mlcmlapis understand initial concerns honestly took time check links added description would seen issue technology", "d": "4/2018"}, {"body": "better use compile value directly means totally size runtime cost", "d": "4/2018"}, {"body": "interesting idea would zerocost suggests quentinfchx reckon probably accept pr spoke alxhub couple changes const enum vs floating variables see example makes much cleaner manage well removed runtime code consistent enum uses angular pascal case", "d": "4/2018"}, {"body": "nestjs httpstatus similar implementation", "d": "4/2018"}, {"body": "using node projects simple implementation exporting constants enum better idea good covers also text representation code nice comment rfc link codes see indexdts", "d": "4/2018"}, {"body": "able find happens due html name find weather forecastslist dt specifically weathersmaintemp within othercontent matter variable within content seems cause animations stop functioning correctly", "d": "4/2018"}, {"body": "working fine maybe help", "d": "4/2018"}, {"body": "still working set value like thismyformcontrolsbusinesstypesetvalue", "d": "4/2018"}, {"body": "binding selected value guys anyone clue", "d": "4/2018"}, {"body": "pull value myformcontrolsbusinesstypevalue update showing ui", "d": "4/2018"}, {"body": "dzmitryshylovich please advice", "d": "4/2018"}, {"body": "closing issue nt enough actionable info please file new issue follows template importantly minimal repro section gives team information needed investigate", "d": "4/2018"}, {"body": "hi bro angular still release stable version", "d": "4/2018"}, {"body": "angular stable release yet check version recent released npm checking versions tab", "d": "4/2018"}, {"body": "oh sorry guys new maybe update release schedule right saw saying released thought maybe something wrong major release ngconf", "d": "4/2018"}, {"body": "find date stable release angular release schedule accurate generally safe use beta version thank", "d": "4/2018"}, {"body": "dystocia", "d": "4/2018"}, {"body": "aelkoussy check packagejson current dev version latest published release ps probably close issue minimize noise", "d": "4/2018"}, {"body": "alright closing issue recommendation update released schedule page thanks guys", "d": "4/2018"}, {"body": "aelkoussy release schedule docs estimated release dates wo nt always date two ways recommend checking latest releases npm repo changelog personally prefer latter since see list actual changes", "d": "4/2018"}, {"body": "danwulff thanks lot advice bro", "d": "4/2018"}, {"body": "use want understanding ngsubmit comes angularforms module bit behind scenes nt think falls inconsistency", "d": "4/2018"}, {"body": "quantumdream correct captures original submit event smoothes inconsistencies see works intended", "d": "4/2018"}, {"body": "comment embedded conversation another issue original issue closed opened issue retain larger commentrecommendation", "d": "4/2018"}, {"body": "docareatutorial filename", "d": "4/2018"}, {"body": "tests pure angular environments want elaborate issue bug still present without ionic two cases animation callbacks fired skipped animation case animation skipped due item state appcomponentts import component angularcore import trigger state style animate transition query angularanimations component selector approot templateurl appcomponenthtml styleurls appcomponentcss animations trigger fadein state void style opacity state animate style opacity transition void gt animate animate export class appcomponent title app items text itemone animationstate animate text itemtwo animationstate done animationstart event item consolelog animation start itemtext itemanimationstate consolelog event animationend event item consolelog animation ends itemtext itemanimationstate appcomponenthtml welcome title items itemtext case itemone animated due state itemtwo animated cause state pairs callbacks fired difference events equals skipped animation case animation suppressed empty parent animation appcomponentts import component angularcore import trigger state style animate transition query angularanimations component selector approot templateurl appcomponenthtml styleurls appcomponentcss animations trigger fadein state void style opacity state animate done style opacity transition void gt animate trigger blockinitialrenderanimation transition enter export class appcomponent title app items text itemone animationstate animate text itemtwo animationstate done animationstart event item consolelog animation start itemtext itemanimationstate consolelog event animationend event item consolelog animation ends itemtext itemanimationstate welcome title items itemtext case pairs callbacks fired showing transition", "d": "4/2018"}, {"body": "please add repro using stackblitz", "d": "4/2018"}, {"body": "fyi seems like could issue cors doublecheck server setting right cors headers", "d": "4/2018"}, {"body": "created stackblitz uses api also created minimal repo local machine uses python django api local frontend runs using proxyconfig found far stackblitz add headers desktop chrome amp safari stackblitz add headers mobile safari local repo add header authorization desktop chrome local repo add header authorization desktop safari local repo add header authorization mobile safari local repo add header foo desktop chrome local repo add header foo desktop safari local repo add header foo mobile safari questions moment nt know could related cors mean add preflight like option credentials could related backend api using angular browser thing seems like key name authorization plus variable dont know yet fyi production env domain problem also exists", "d": "4/2018"}, {"body": "would mean inject abstract class", "d": "4/2018"}, {"body": "duplicate sounds like chrome bug see could related also chance fixed try latest version currently", "d": "4/2018"}, {"body": "tried latest version seems like issue still present", "d": "4/2018"}, {"body": "wait saying gmail login status makes difference serviceworker works angular app", "d": "4/2018"}, {"body": "sorry mistake testing matter gmail status", "d": "4/2018"}, {"body": "ok try investigate week see reliably work around issue assuming indeed chrome issue", "d": "4/2018"}, {"body": "got problem chrome says empty string check passed thisscopeclientsget clientid got simple workaround check falsy value", "d": "4/2018"}, {"body": "getting issue stopping site accessible problem clientid following area issue happens live site updating", "d": "4/2018"}, {"body": "different using", "d": "4/2018"}, {"body": "think close show mistaken think viewencapsulationnone applies style whether added styleurl contrast global would allow rulebyrule specification styleurl option objects would allow scriptbyscript config also jqueryinspired nearest encapsulation different turning encapsulation", "d": "4/2018"}, {"body": "able use polyfillunscopedrule works probably add docs", "d": "4/2018"}, {"body": "vicb confirmed default viewencapsulation following rule resolved use case feel free close leave open case want track docs change issue", "d": "4/2018"}, {"body": "vicb withdrawal statement polyfillunscopedrule fixes scenarios fix several one problem left open developer still bring document change classes parent scenario", "d": "4/2018"}, {"body": "import css component typescript import mycomponentglobalcss component styleurls mycomponentcss export class mycomponent", "d": "4/2018"}, {"body": "dawidgarus nt see core contributor want check whether recommendation corerecommended idea seem nice trick benefit selectively encapsulate scriptbyscript basis may substitute stylurl options idea nt solve problem identified generically ability nest css also nt include feature able solve use case following work around suboptimal nt solve closely related use cases use nonencapsulated style hide close button parent context create close icon child context duplicating style rules html needed absolutely position child close icon achieve location parent icon dynamically change child close background submit needed child context strategy work components positioned absolutely consider instead simple close button scenario related complex component involved maintaining state hidden instance child instance might two different states introducing issues addition significant duplicate code still think proposed feature would cool close nt get community feedback summarize features thinking approach would work like real pseudoclass means would support nesting css features would also allow encapsulated nonencapsulated rule declarations single file options approach would script level would allow encapsulation would finely control encapsulation rather allowing local global reflection combined get benefits without forcing inferior scriptlevel resolution could use different pseudoclass takes css selector within say would allow multiple encapsulation contexts single file would also effectively implement sought parent selector missing css", "d": "4/2018"}, {"body": "workaround described notice following issue successfully hides parent close icon using implements childcloseicon described nt implement childcloseicon parent icon still hidden notice components open simultaneously close persists open later creates issue need specially handle closing ngif wrapper removed dom remember using may related pr would solve known scenarios remains favorite", "d": "4/2018"}, {"body": "steps reproduce please", "d": "4/2018"}, {"body": "cant import path use instead", "d": "4/2018"}, {"body": "toxicable answer correct", "d": "4/2018"}, {"body": "closed commented received solution answer correct", "d": "4/2018"}, {"body": "step reproduce npm install package", "d": "4/2018"}, {"body": "wow thumbs comment solution much thx lot nothing", "d": "4/2018"}, {"body": "rule number stupid programmers works machine must correct look solution programmers bit less unhelpful", "d": "4/2018"}, {"body": "afaict problem part public api although used part public api pr supposed fix meantime use plain object unfortunately get typing support", "d": "4/2018"}, {"body": "please include simple repro stackblitz", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "issue fully synchronous upon subscription pipe happens angular performs change detection evaluates pipe subscribes observable immediately cause sideeffect run causing subject receive new value subscription chain also fully synchronous value immediately consumed pipe binding value binding ends changed change detection run workaround could make one subscription chains asynchronous eg inserting operator phase actually executed given actual run view flag cleared change detection run subsequent change detection cycles thus also circumventing run sure expected behavior sounds like bug vicb think information mind make sense using fails detect changes binding exactly reason important", "d": "4/2018"}, {"body": "thank taking look issue slightlysmilingface using delay mentioned circumvent problem placed tap call pipe operations might end synchronous implementation think two observables always appear asynchronous relation way angular detecting changes case appears run counter model presented rxjs also behavior result delay placed tap operator seems like would still place response loading different change detection runs note work onpush reason even though error produced without", "d": "4/2018"}, {"body": "behaviors explained follows rxjs operator acts middle man subscribes source observable emits onto destination subscribe observable fact subscribe last operator chain turn subscribes source originating observable reached example would synchronous immediately values subscriber would operator hence operator executes sideeffects synchronously emits value source destination would point subscription chain become asynchronous given schedules emitting received value onto destination specified delay regarding seemingly correct functioning using nt actually work correctly reason outlined previous comment component unmark change detection runs phase phase executed shortly find component marked change detection actually run component let issue appear remarking component change detection unmarked run implementing remarking component js constructor public ref changedetectorref cause phase consider component see", "d": "4/2018"}, {"body": "cool thanks detailed explanations joostk", "d": "4/2018"}, {"body": "ca nt reproduce compilation errors", "d": "4/2018"}, {"body": "post error", "d": "4/2018"}, {"body": "u pull latest try fixed build errors looks like incorrect local changes got moved initial commit npm install npm run", "d": "4/2018"}, {"body": "mlakmal build succeeded", "d": "4/2018"}, {"body": "mlakmal nt see large number components code code structure nt well organized general js errors check firefox", "d": "4/2018"}, {"body": "seems like another issue template removed original template component references cant share sourcecode loading dummy html route component crashes chrome fixed html bindings pull latest try", "d": "4/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "4/2018"}, {"body": "vicb provide full repo used reproduce problem chrome let know else required", "d": "4/2018"}, {"body": "able reproduce please share code github plunkr", "d": "4/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "4/2018"}, {"body": "see controlled server headers unrelated angular documented library documentation", "d": "4/2018"}, {"body": "thanks man sorry disturbing", "d": "4/2018"}, {"body": "calling checktime init works expected btw", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "angular postponed indefinitely", "d": "4/2018"}, {"body": "patient bit nt crucial thing press anybody week two especially combination ngconf concrete information certainly publish final version angular exact day", "d": "4/2018"}, {"body": "update schedule shortly", "d": "4/2018"}, {"body": "keep track needs done", "d": "4/2018"}, {"body": "news", "d": "4/2018"}, {"body": "explained angular docs need specify outlet route belongs routes primary routes aka arguments passing incorrect", "d": "4/2018"}, {"body": "dont understand wrong code routing module navigation refer change need update", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "please take howto questions gitter channel gitterimangularangular", "d": "4/2018"}, {"body": "oneof thing able reproduce several times eg many attempts sure anything without way reproduce somehow", "d": "4/2018"}, {"body": "seen issue already process pushing another update landed updated without issue nt found way reproduce reliably pushed several updates since failure without incident", "d": "4/2018"}, {"body": "hm unfortunately ca nt think way investigate could even browser server proxy issue", "d": "4/2018"}, {"body": "appears problem file paths dropping back windows root windows linux subsystem ubuntu installation working solved problem obviously issue angular needs fixed", "d": "4/2018"}, {"body": "please see assets config validate setting correctly note likely nt need path actual issue please reopen repo provide reproduction per instructions", "d": "4/2018"}, {"body": "setup correct fixed moving full containing folder directory tree windows root stated issue angular particularly want issue cli library moved either way problem angular setup skills exactly additional reproduction steps would need everything plausible include even helped including hypothesis source issue perhaps would specific logging tool require information order help isolate bug software", "d": "4/2018"}, {"body": "exactly additional reproduction steps would need everything plausible include even helped including hypothesis source issue maybe reproduction missing show example app nt work", "d": "4/2018"}, {"body": "clearly nt read wrote get outlook android vincent lycoops notifications githubcom sent tuesday april pm angularangular cc peter david carter author subject angularangular assets folder serving exactly additional reproduction steps would need everything plausible include even helped including hypothesis source issue maybe reproduction missing show example app nt work receiving authored thread reply email directly view github mute thread", "d": "4/2018"}, {"body": "please provide example app nt work could create repository put link without examples ca nt exactly sure problem", "d": "4/2018"}, {"body": "repo wo nt help problem solved moving exact repo directory tree get outlook android sarun intaralawan notifications githubcom sent wednesday april pm angularangular cc peter david carter author subject angularangular assets folder serving please provide example app nt work could create repository put link without examples ca nt exactly sure problem receiving authored thread reply email directly view github mute thread", "d": "4/2018"}, {"body": "angular golang work great together teams plans create anything like maybe could create thing opensource case nt actionable issue closing thanks", "d": "4/2018"}, {"body": "wszgrcy primeng third party lib report issues repository angular btw use native xhr interface things involved cases", "d": "4/2018"}, {"body": "please file issues primeng repo", "d": "4/2018"}, {"body": "default configuration set per owasp best practices namely get requests never mutate server data appreciate frameworks may ca nt cover use cases default provide implementation http interceptor adds xsrf tokens get requests see use interceptors default interceptor use base", "d": "4/2018"}, {"body": "avrim concrete vague maybe totally unusable always online simple demo reproduction requested best", "d": "4/2018"}, {"body": "please provide reproduction", "d": "4/2018"}, {"body": "krodyrobi array passed parent child reference logical mutate inside child change affects also parent expect name expect child create immutable version necessary ask default behavior potential performance effects code responsibility whether parent child", "d": "4/2018"}, {"body": "mlcmlapis thank fast response defence got using angular noticed read one way data binding data flows parent child assumed somehow guaranteed framework indeed case excessive clones could lead performance issues see would desirable default behaviour maybe docs could touch subject detail one way databinding still affected data passed reference value like normal js two way would allow child change reference point something else completely changes reflected parent well say outloud makes sense plus people needed modify referenced objects without sideeffects visible upstream could selectively choose clone thanks help think closed appart docs part bug wrong usage", "d": "4/2018"}, {"body": "krodyrobi summarized maybe good mention databinding really rare angular cases simply good pattern frequently leads violation unidirectional principle general rule angular change detection cd runs always top bottom tree opposite data flow often leads problems known error angular development mode checks conditions cd also detects places components change direct inputs cd means potential unstable state", "d": "4/2018"}, {"body": "krodyrobi ah also close issue thanks", "d": "4/2018"}, {"body": "routes needs specified application nt see mechanism working aot support either need specify routes part application use dynamic component creation runtime", "d": "4/2018"}, {"body": "also need something like also facing situation found way deal dynamic routing configurations route export const routing modulewithproviders routermoduleforroot routes want generate path names dynamically question inject xyzservice achieve", "d": "4/2018"}, {"body": "found different approach works think use analyseforentrycomopnents trigger instead write entrycomponents maunally ca nt figure yet", "d": "4/2018"}, {"body": "related", "d": "4/2018"}, {"body": "little bit hacky using formcontrol private variable works described", "d": "4/2018"}, {"body": "docareaobservables filenameguidetestingobservablesmd url", "d": "4/2018"}, {"body": "build app aot used directives included thanks tree shaking need cherry pick directives manually also module smallest compilation unit angular want directives part module defined user let import typescript files directly compile part module", "d": "4/2018"}, {"body": "true create module validators included final bundle even one used way tree shake referencing class ngmodule declarations array", "d": "4/2018"}, {"body": "introduced tree shakeable providers weeks ago might help important focus next iteration angular actively working", "d": "4/2018"}, {"body": "vicb hi issue closed also working allowing create library without ngmodule nt see would tree shake unused directives", "d": "4/2018"}, {"body": "anjmao directives already treeshakeable importing ngmodule support question please made stackoverflow", "d": "4/2018"}, {"body": "ok got working least see stackblitz understand correctly two directives absolutely selectors get instantiated applied right seem good also nt understand working together affect value one another one former combined chain process value order determined latter one wins comments highly appreciated", "d": "4/2018"}, {"body": "duplicate", "d": "4/2018"}, {"body": "closing dupe", "d": "4/2018"}, {"body": "paultfreedman would like send pr", "d": "4/2018"}, {"body": "duplicate", "d": "4/2018"}, {"body": "closing duplicate", "d": "4/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "please include small useable repro demonstrates suspected bug open new issue available thanks", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "sorry post stackoverflow", "d": "4/2018"}, {"body": "normal typescript semantics angular involved", "d": "4/2018"}, {"body": "someone coming oop background think formal parameter expects initialized instance object created new operator im pretty sure devs recognize component using constructor injection looks like angular virtue specifying formal parameter constructor method automatically following private service heroservice constructor service new heroservice sure got idea incorrect trotyl already pointed parameter properties work", "d": "4/2018"}, {"body": "hi trotyljose thanks clarifications still learning typescript realize need catch typescript even deeper regards sreenivasulu saya fri apr pm jos\u00e9 toledo navarro lt notifications githubcom wrote someone coming oop background think formal parameter expects initialized instance object created new operator im pretty sure devs recognize component using constructor injection looks like angular virtue specifying formal parameter constructor method automatically following private service heroservice constructor service new heroservice sure got idea incorrect trotyl already pointed parameter properties work receiving authored thread reply email directly view github mute thread", "d": "4/2018"}, {"body": "thank original comment clarifications typescript experience given architecture doc part introductory material look making clear learning typescript angular together", "d": "4/2018"}, {"body": "docareaarchitecture filenameguidearchitecturecomponentsmd", "d": "4/2018"}, {"body": "hi jennifer thanks accepting feedback including introductory material would good idea definitely documenting missing pieces documentation hep understand angular better hence embraced comfort development community regards sreeni saya regards sreenivasulu saya sat apr jennifer fell notifications githubcom wrote thank original comment clarifications typescript experience given architecture doc part introductory material look making clear learning typescript angular together receiving authored thread reply email directly view github mute thread", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "hi checked whether function firing correctly fire console serve locally properly changed functions url code base sorry simple went errors", "d": "4/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "4/2018"}, {"body": "nothing unless directive uses component like ngmodel formcontrol need read works", "d": "4/2018"}, {"body": "think confused two things change handler getting change events bubbling textbox emitted control implementing controlvalueaccessor obvious missing feature formcontrol hooked app took stackblitz subscribe valuechanges get need thanks looking", "d": "4/2018"}, {"body": "docarea filenameguide", "d": "4/2018"}, {"body": "issue create new ticket saw message sure trotyl ericmartinezr downvoting since seems like issue angular working fine previous version", "d": "4/2018"}, {"body": "would nice imo could add github repo reproduction issue", "d": "4/2018"}, {"body": "jotatoledo added reproduction repository", "d": "4/2018"}, {"body": "forget push commits", "d": "4/2018"}, {"body": "trotyl download pushed new packagejson latest angular", "d": "4/2018"}, {"body": "duplicate angular issue", "d": "4/2018"}, {"body": "already replace q interface cli flags", "d": "4/2018"}, {"body": "toxicable aware examples official quickstart documentation", "d": "4/2018"}, {"body": "already use whatever schematics command", "d": "4/2018"}, {"body": "trotyl documentation examples ngcli ngcli", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "feature added cli seems doc indeed outdated pr found", "d": "4/2018"}, {"body": "exactly would like default talking schemes", "d": "4/2018"}, {"body": "default schematics used obviously follow best practices current behavior", "d": "4/2018"}, {"body": "handled cli", "d": "4/2018"}, {"body": "please create examples stackblitz edit correct issue template", "d": "4/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "4/2018"}, {"body": "vicb support request notify bug angular routing problem queryparams", "d": "4/2018"}, {"body": "pramodrwt please create new issue examples stackblitz edit correct issue template", "d": "4/2018"}, {"body": "please attach demo repository launch edit correct issue template", "d": "4/2018"}, {"body": "splincode link tests video playing seconds frozen best case sometimes ca nt play run following command test", "d": "4/2018"}, {"body": "please attach simple repro instructions reproduction", "d": "4/2018"}, {"body": "vicb need url see app repository nt enough see instructions need try play video safari ios", "d": "4/2018"}, {"body": "please attach demo repository launch", "d": "4/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "4/2018"}, {"body": "nt issue angular likely cyclic dependency another class exported barrel therefore resulting undefined import", "d": "4/2018"}, {"body": "yeah thanks found going post still nt quite resolved guess gotcha biting us previous versions", "d": "4/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "4/2018"}, {"body": "reason question quite clear", "d": "4/2018"}, {"body": "angular file angularclijson file renamed angular angularjson question convert attributes angular version angularclijson file script style values angular version angularjson configuration hope clearer", "d": "4/2018"}, {"body": "stclairclarke angular version repo angular cli uses file angular cli uses file project structure including configuration files automatically updated run command please see angular cli release log information", "d": "4/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "4/2018"}, {"body": "immutable meaning updates return new object something like want use working expected", "d": "4/2018"}, {"body": "cddelta states working intended", "d": "4/2018"}, {"body": "imported createeventemitter", "d": "4/2018"}, {"body": "splincode proposing would created angular team something like least would wrap observable whatever magic angular requires future outputs", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "dawidgarus goal putting publish operator end", "d": "4/2018"}, {"body": "forgot way subscribe output multiple times example directly original observable subscribed", "d": "4/2018"}, {"body": "dawidgarus thanks similar inside services feature request future proofing tell docs random commentsblogs online expected use eventemitter output properties though eventemitter rxjs observable nature subject guaranteed always eventemitter nt much subject today changes would significant refactor larger apps made assumptions could use observables place though know expose observables output properties today would like way future proof method", "d": "4/2018"}, {"body": "please attach simple repro reproduces problem", "d": "4/2018"}, {"body": "oh issue safari uses date format service things like replaced seems fine", "d": "4/2018"}, {"body": "added timer example nt get real difference also due poordesigned demo whatever triggered latter faster also operation buffer operation redesign applied insert append move swap whatever partial update scenario nt see anyone wants detach table first adding new row", "d": "4/2018"}, {"body": "trotyl demo simple example true real world scenarios dom elements nested eg cell contains etc dom tree gets really large tried test demo toxik posted one production tables reduced rendering time table rows internet explorer know speed differences minor browsers like chrome fact matter speed increase affects browsers engineering standpoint generating elements memory attaching dom efficient sad truth applications like internet explorer users many important inserting row matter think issue refers rendering page", "d": "4/2018"}, {"body": "think really want virtualized rendering render whats viewport since demo estimate content viewport time", "d": "4/2018"}, {"body": "think interest keeping keeping relatively compact simple wo nt add option cdk team working virtualized repeater moment track progress", "d": "4/2018"}, {"body": "duplicate", "d": "4/2018"}, {"body": "closing duplicate", "d": "4/2018"}, {"body": "use specific setting printing pdf see correctly ff full image tried ff chrome printed pdf correctly issues difference chrome created larger file ff", "d": "4/2018"}, {"body": "nt change settings interesting though screenshot nt show color whatsoever whereas mine kind printer use using color laser printer oki selected windows default printer printer settings ff default settings screenshot german dialog ought english", "d": "4/2018"}, {"body": "setting default unchecked checking indeed effect describe glad see printfriendly styles courtesy sjtrimble smiley useful people obviously missed black background need fix anyone wants help file need change", "d": "4/2018"}, {"body": "firefox says reads styles printing would change would nt dare fiddling around scss files without knowing author design rules", "d": "4/2018"}, {"body": "amended corresponding file hopefully meeting original author intention linter fails commit comments already tried amend meet requirements created second pull request updated comment avail yet would nt want spend much time digging project checkin policies please revise changes merge like", "d": "4/2018"}, {"body": "expected result changes", "d": "4/2018"}, {"body": "fails render edge could please try create svg element programmatically see works edge might problem please attach repro code svg render components inside router outlet though probably different issue please create one", "d": "4/2018"}, {"body": "wrong behavior jit tracked", "d": "4/2018"}, {"body": "well completely sure wrong behavior jit value provider work different providers types every component use try obtain get instance aka singleton multiple instances one component every one create instance exactly works jit also works every use aot get one instance multiple different sibling weird result shared among sibling using aot dont see correct behavior would mean always singleton correct behavior conflict written treated differently", "d": "4/2018"}, {"body": "javascript semantics equals typescript var somevar fn provide testprovider usevalue somevar expression executed", "d": "4/2018"}, {"body": "ah sorry see single value really singleton ok thx explaination", "d": "4/2018"}, {"body": "robwormald would like fix one add integration test created new project remove zonejs bootstrap everything work file could provide reproduce repo thank", "d": "4/2018"}, {"body": "jialipassion see think surface", "d": "4/2018"}, {"body": "robwormald yes right thank reproduce link", "d": "4/2018"}, {"body": "robwormald created pr fix one please review thank", "d": "4/2018"}, {"body": "jialipassion workaround error wait pr merged", "d": "4/2018"}, {"body": "oliverdavidt believe define line avoid error", "d": "4/2018"}, {"body": "jialipassion worked thank", "d": "4/2018"}, {"body": "sounds like universal issue possibly combination serviceworkers really hatd tell without way reproduce could please provide minimal reproduction eg sample repo check run", "d": "4/2018"}, {"body": "check", "d": "4/2018"}, {"body": "gkalpak right universal issue page blink inserting state node document tree one marked mainappstate seems like problem transferstatemodule", "d": "4/2018"}, {"body": "anyone find solution annoying new users completely destroy ux edit checked almost everything could make page blink turned service worker deleted styles check style issue maybe bad transition deleted browsertransferstate transferstate replace transferhttpcachemodule diffrent order also deleted lazyloading strategy mapmoduleloader deleted external scripts project like owl jquery google analytics google maps flickering still remains dev version browser load timeline production version browser load timeline issue increases first interaction long much long", "d": "4/2018"}, {"body": "hello problem using angular universal refreshes first loading check link could find resolution", "d": "4/2018"}, {"body": "duplicate", "d": "4/2018"}, {"body": "gone posts still able figure solution warnings need help", "d": "4/2018"}, {"body": "apply syntax webpackexclude supported magic comment import allow filter files using dynamic expression new using systemimport emits warning disable warning ruleparsersystem true disable systemimport ruleparsersystem false", "d": "4/2018"}, {"body": "please ignore warning", "d": "4/2018"}, {"body": "okay thank help one question demonstrate client say warnings fixed future", "d": "4/2018"}, {"body": "closing duplicate", "d": "4/2018"}, {"body": "issue thought browser limitation fixed yes please", "d": "4/2018"}, {"body": "service workers lot issues http authentication well supported general ngsw", "d": "4/2018"}, {"body": "alxhub simply decide close bug instead testing solution provide issue nt even think option give developers chance decide themselve implementing setting switch onoff feature poor", "d": "4/2018"}, {"body": "perhaps design underlying feature request dupe", "d": "4/2018"}, {"body": "similar problem turned coding error specifically race condition async authentication authentication guard router guard redirecting route authentication complete try setting route tracing see something similar happening solution ensure initial auth complete getting close protected routes", "d": "4/2018"}, {"body": "fergusg thanks suggestion see behavior guarded unguarded routes setting flag loading query parameter dropped first routing event look docscode see turns something", "d": "4/2018"}, {"body": "chrsmith see different behaviour primary usecase pretty much linking external locations case password reset emails like config completely vanilla except crazy depth childroutes using lazyloading one thing though using even dev running real webserver apache easy enough eliminate confirm devserver culprit case using apache similar make sure url rewriting rules stripping query string half guessing getting load", "d": "4/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "4/2018"}, {"body": "yeah thinking one understand correctly saying would expect would prepended relative paths absolute paths eg expected actual cc alxhub", "d": "4/2018"}, {"body": "oh wait actually file paths urls ca nt really know whether urls relative absolute assetgroup treated correctly prepending relative urls might useful feature though able indicate whether file requires prepended", "d": "4/2018"}, {"body": "config absolute paths work whern use relative path output breaks structure", "d": "4/2018"}, {"body": "incorrectly described issues online example keep issue template", "d": "4/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "4/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked looks like might explanation behavior ca nt tell reproduction attached want file new issue repro please feel free looked", "d": "4/2018"}, {"body": "hello already fixed angular see example latest version angular", "d": "4/2018"}, {"body": "ocombe im ashamed nt read changelog posting thanks pointing", "d": "4/2018"}, {"body": "worries wondering nt also ported actually guess considered breaking change", "d": "4/2018"}, {"body": "continue support existing usage stable api ie code keep working deprecation period always months two major releases update promised preserved least two major version", "d": "4/2018"}, {"body": "trotyl thanks explanation", "d": "4/2018"}, {"body": "implementation alternative possible use behind scene keep backwards support", "d": "4/2018"}, {"body": "sorry follow rules writing issue bug feature regression necessary write normal description", "d": "4/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "duplicate angularangularcli", "d": "4/2018"}, {"body": "problem angular compiler instead refer angular cli repo also please look preservesymlinks option", "d": "4/2018"}, {"body": "costescuandrei please move another tracker", "d": "4/2018"}, {"body": "change preservesymlinks ok ng build bugs use angular cli create issue link one", "d": "4/2018"}, {"body": "created", "d": "4/2018"}, {"body": "closing bug addressed cli project", "d": "4/2018"}, {"body": "address still see problem angular error ngmodule metadata found appmodule", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation still feel issue please create isolated reproduction usecase stackblitz create new issue", "d": "4/2018"}, {"body": "incorrectly described task online example keep issue template", "d": "4/2018"}, {"body": "guess using default therefore compiled css selector attribute generated angular possible ways fix using global style root angular cli project using", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "get", "d": "4/2018"}, {"body": "face issue use ngpackgr angular", "d": "4/2018"}, {"body": "fyi error typically occurs multiple versions angular dependencies", "d": "4/2018"}, {"body": "also happens creating fresh new library updated applibmodulets typescript import ngmodule angularcore import applibcomponent applibcomponent import routermodule angularrouter ngmodule imports routermoduleforchild declarations applibcomponent exports applibcomponent export class applibmodule perl ng build applib building angular package building entry point applib cleaning build directory rendering stylesheets rendering templates compiling typescript sources ngc build error error template compile applibmodule function calls supported decorators routermodule called error error template compile applibmodule function calls supported decorators routermodule called", "d": "4/2018"}, {"body": "alxhub error occurring angular versions also seems awkward behaviour created new issue details together reproduction", "d": "4/2018"}, {"body": "hi think expected behaviour ref sourcelist change nt want using push splice modify array use changedetectionstrategydefault imo bad practice though", "d": "4/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "4/2018"}, {"body": "sandangel yes try like sad complex vicb sorry maybe poor english nt explain clearly sample nt support ngtemplateoutlet need ref outside component like listview set itemtemplate", "d": "4/2018"}, {"body": "also post stackoverflow", "d": "4/2018"}, {"body": "issue combination edge development build nt freeze browsers", "d": "4/2018"}, {"body": "looked bit today think know happening difference ts latter nt actually around transpiled js wholly replaced values everywhere declaration removed js output test declaring ts file transpiling far build optimizer concerned never sees alters build optimizer operates js files nt exist js files back normal declare normal enums transform build optimizer go declaration assigned function call directly function call marked pure way usage variable elsewhere dropped least happen right gets transformed instead declaration followed pure function assignment means function always dropped variable empty seems happen explicitly look enums start number zero enum starts number one instead trips enum detection causes enum detected processed another optimization ends broken", "d": "4/2018"}, {"body": "fix particular case", "d": "4/2018"}, {"body": "angular problem another package either make repository github error", "d": "4/2018"}, {"body": "appears problem dependencies trying import please file issue project", "d": "4/2018"}, {"body": "duplicate", "d": "4/2018"}, {"body": "maybe nt get ambient means like said original post even created mapped type nt work anyway could easily workaround really worried feel free close reports nt help", "d": "4/2018"}, {"body": "issue used workaround typescript export interface setting string export type partialsetting partial export const setting new injectiontoken export class foo constructor inject setting setting partialsetting", "d": "4/2018"}, {"body": "hi good timing actually giving talk angular seo ngconf two days nt problem fetching remote data angulario angular app fetches content json files fully index google seen evidence even crawlers get content coverage great many reasons app could fail render indexed google recommend check errors throw crawler rendering app ensure robotstxt blocking scripts needed app well urls fetch data watch rest recommendations wednesday mdt via", "d": "4/2018"}, {"body": "please follow rules writing issue template", "d": "4/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "4/2018"}, {"body": "fixed fix included latext releases included next patch release", "d": "4/2018"}, {"body": "please add working reproduction issue", "d": "4/2018"}, {"body": "use template literal ts export globalconstmessages utilsmessages component selector app template export class mycomponent aware wo nt use string reference runtime put content directly template build time large string may undesirable last part one time sound like attribute", "d": "4/2018"}, {"body": "ghetolay work templateurl feature kinda useless btw thank attribute decorator might possible never heard", "d": "4/2018"}, {"body": "looks two separate features inlining components usage really limited components without dependencies lifecycle hooks makes rarely useful onetime bindings", "d": "4/2018"}, {"body": "bvdmitri na wo nt work templateurl", "d": "4/2018"}, {"body": "dawidgarus agree first point second one compiletime binding even one time", "d": "4/2018"}, {"body": "bvdmitri onetime bindings would much easier implement performance overhead really minimal mention remove public field component class really bad idea need analyze entire project case field used somewhere else still produce errors would hard track", "d": "4/2018"}, {"body": "dawidgarus need analyze entire project case special syntax template maybe kind decorator tell field invoked compile time removed used somewhere else angular problem", "d": "4/2018"}, {"body": "bvdmitri nt sure anymore name indicates html attributes anything set stick final dom element attribute", "d": "4/2018"}, {"body": "bvdmitri yes need field referenced many ways template component defined example literally thousands way could go wrong", "d": "4/2018"}, {"body": "dawidgarus course mentioned marked using special decorator see example reference variable somewhere else wrong marked compiletime expression course reference elsewhere outside template wo nt compile think case special decorator need analyze entire project", "d": "4/2018"}, {"body": "bvdmitri still need scan entire project usage field whether marked nt seem like worth effort", "d": "4/2018"}, {"body": "dawidgarus nt need scan project example ca nt access private properties component somewhere need scan anything ca nt marked private able reference property elsewhere outside template wo nt compile", "d": "4/2018"}, {"body": "bvdmitri private properties nt disappear code still exist access remove property class asking trouble properties used template must public order aot work", "d": "4/2018"}, {"body": "dawidgarus know compiletime means compiletime exist runtime marked property private referenced elsewhere outside class marked property compile time means know referenced elsewhere outside template read template compilation safely remove property understand safe removal wont argue anymore", "d": "4/2018"}, {"body": "bvdmitri simple question without aot compiler would like implement", "d": "4/2018"}, {"body": "trotyl think aot feature jit precompilation stage angular team said aot preferable way build angular applications need jit specific task feature unavailable", "d": "4/2018"}, {"body": "bvdmitri suggesting angular break language semantics inventing new language", "d": "4/2018"}, {"body": "trotyl sorry nt understand break something additional decorator tell expression invoked compiletime removed even breaking change property marked explicitly", "d": "4/2018"}, {"body": "bvdmitri aot compilation change execution timing execution result suggesting something done without aot new programming language feature", "d": "4/2018"}, {"body": "trotyl thank answer mean compiletime expression typescript feature like constexpr c order able implement angular template engine", "d": "4/2018"}, {"body": "bvdmitri typescript really something like feature provides typechecking javascript use consistent fully erasable structural type system aggressively optimize runtime performance programs add rely runtime type information programs emit different code based results type system", "d": "4/2018"}, {"body": "feature still fully feasible jit without needing aot compiler proposal inventing readonly decorator force readonly behavior make angular recognize decorator generate optimize code without checking parts actually decoratordriven onetime binding rather templatedriven onetime binding goal almost likely one considered also macro deoptimization html foo foo gt", "d": "4/2018"}, {"body": "trotyl last example misleading true compile time expression inlining macro substitution yes feature request second point generate optimized code evaluate const expression compile time template", "d": "4/2018"}, {"body": "bvdmitri true scripting language using minifier constants extracted variable end burning cpu", "d": "4/2018"}, {"body": "trotyl talking angular template engine scripting language example template transformed foo foo gt compilation stage need extract foo variable every time mechanism decorator something else tell angular expression evaluated inlined template compilation stage", "d": "4/2018"}, {"body": "bvdmitri angular template compiler provide constant folding", "d": "4/2018"}, {"body": "trotyl yea feature request let angular template compiler intelligent provide constant folding let optimize constant expression inline course help user decorators etc", "d": "4/2018"}, {"body": "bvdmitri development constant folding much slower passing javascript vm production minifier already feature meaningless", "d": "4/2018"}, {"body": "guess mean onetimebinding aka angularjs got feature dirty checking became problem big apps apps one big blob everything could write directions one change detection cycle always ran least twice check change caused another change hand detection insanely fast thanks data flowing one direction detection runs exactly side effects detecting changes treated error compiler generated methods browsers jit optimize sht sure sounds wasteful still check variables might never change hart even see performance impact profiler tasks usually weight dirty checking keep mind onetimebinding cause unintended behavior bugs used wrong places app becomes harder understand developer imo setting single mildly complex component onpush checks inputs grants performance decide every variable want check least issue angularjs profile app found bottleneck onetimebinding would fix", "d": "4/2018"}, {"body": "besides runtime optimization sometimes react inputs changes assume onetime binding moment convention component author user things would throw error input change framework handling one time binding could get error thrown maybe even linting expose inputs supposed change time", "d": "4/2018"}, {"body": "profile app found bottleneck onetimebinding would fix sod trotyl angular performance great feature request onetime binding compiletime binding inlining prefer main idea feature comes practice imagine contentmaker guy team responsible almost every text content site tooltips popups button names errorsuccess notifications text difficult explain edit popup something else text hundreds templates especially content used different templates one file content xml json whatever could reference content inline compilation stage know achieved custom webpack loaders angularcli provide us possibility change default loaders btw usefull cases thats proposed feature main issuetracker angular", "d": "4/2018"}, {"body": "know achieved custom webpack loaders angularcli provide us possibility change default loaders true configure webpack however want", "d": "4/2018"}, {"body": "bvdmitri mentioned constant folding template compiler macro become deoptimization reused also even trust javascript vm provides great string intern implementation minifier wo nt believe could extract variable mainly size consideration might little performance benefit could allow access global context without component instance like minifier would decide whether inlined minifieroptimizer could inline vice versa extract whatever thought better approach translation already achieve xmlbased content replacement via angular variable usage since normal variable javascript would prefer javascript fn void fn rather avoid variable reference really think using variables like would make faster", "d": "4/2018"}, {"body": "also usage idea proposed feasible even aot code typescript export globalconstmessages utilsmessages component selector app template text export class mycomponent public readonly text string globalconstmessagessometext could powered typescript code require actual raw source code way resolve actual value", "d": "4/2018"}, {"body": "aot compiler limited amount folding see much beyond extremely difficult general trying remove complexity specialcasing compiler unlikely anything limited subset already least near future", "d": "4/2018"}, {"body": "robwormald constant folding aot happens metadata collector template compiler different cases", "d": "4/2018"}, {"body": "details haha nice one", "d": "4/2018"}, {"body": "duplicate actually wrong repo", "d": "4/2018"}, {"body": "oops fix", "d": "4/2018"}, {"body": "pull request merged yet", "d": "4/2018"}, {"body": "igorminar confirm designlove fixed please help pr mentioned thanks", "d": "4/2018"}, {"body": "notes trying potential labels search keywords docareaother prexiststrue", "d": "4/2018"}, {"body": "okay got stuck inability get equivalent circleci devkit using pr number ask github api maybe everything uses commit range could move precisecommits andor ngbot since really job analysis based specifically changed", "d": "4/2018"}, {"body": "also possible git fastforward postcheckout step circleci changes history way makes much difficult", "d": "4/2018"}, {"body": "docareaserviceworker filenameguideserviceworkergettingstartedmd", "d": "4/2018"}, {"body": "brocco hi quick question angularangularcli right dependency seems like older unrelated issue searching cli prs right one nt obvious another link thanks", "d": "4/2018"}, {"body": "brocco hansl alxhub hi one spare moment would us favor review section high confidence developers need correct like recheck ng add angularpwa project projectname project thanks", "d": "4/2018"}, {"body": "apologize right reference pr angulardevkit since merged jenniferfell docs look great couple things command captured updates indexhtml include link add manifestjson meta tags installs icon files support installed pwa", "d": "4/2018"}, {"body": "brocco thanks chembu one ready start work info thanks", "d": "4/2018"}, {"body": "issue open contribution", "d": "4/2018"}, {"body": "docsareatesting filenameguidetestingmd url brandonroberts get chance would look question example code thanks", "d": "4/2018"}, {"body": "hi keilla code used typo helper function live example explained documentation think would valuable show though avoid confusion", "d": "4/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue look router config see nt want config written would need order get siblings could either change router link change config nt default emptypath default instead put component", "d": "4/2018"}, {"body": "see", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "going close duplicate raised question original issue internally see get eyes subscribe issue updates", "d": "4/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "4/2018"}, {"body": "also create new issue repro please let include issue specific angular would know works fine breaks", "d": "4/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "4/2018"}, {"body": "looks like interesting issue common use case angular would suggest sending question stackoverflow probably support help case please create actual reproduction problem create new issue", "d": "4/2018"}, {"body": "jasonaden never supported angular cli requested caused angular", "d": "4/2018"}, {"body": "works", "d": "4/2018"}, {"body": "try cleaning browser cache happened time ago lot people error message though", "d": "4/2018"}, {"body": "looks similar case turned proxy problem see discussion starting relevant best guess issue caused proxy redirection sw expect since either issue proxy sw fixed upgrading latest tracked nt think much canshould", "d": "4/2018"}, {"body": "yeaa ericmartinezr gkalpak probably problem proxy something happen internet city maybe", "d": "4/2018"}, {"body": "thx following going close since nt something afaict", "d": "4/2018"}, {"body": "fault sorryit misunderstanding", "d": "4/2018"}, {"body": "current syntax attribute whatever description needed", "d": "4/2018"}, {"body": "talking undocumented placeholder expressions interpolation placeholder renaming normally interpolations become interpolation change name", "d": "4/2018"}, {"body": "ocombe could please take look one also need make sure add documentation", "d": "4/2018"}, {"body": "well undocumented nt even aware possible vicb need make sure feature ported ivy well", "d": "4/2018"}, {"body": "version run npm install angularinmemorywebapi save root folder match version package used tutorial everything run", "d": "4/2018"}, {"body": "thx reporting fixed merged yet deployed meantime either use correct install command also mentioned quizlibet use corresponds latest version master currently uses recent versions", "d": "4/2018"}, {"body": "issue passed quickeasy fix get", "d": "4/2018"}, {"body": "problem many times older versions nt possible simple web page loading bundles make sure everything ok releasing version", "d": "4/2018"}, {"body": "uparlange yes integration tests nt ported run bazelproduced packages clearly pushing releases without proper testing working fix thanks human quality control gap", "d": "4/2018"}, {"body": "question formerly decorated constructor parameter solved injector parent inject always ivy solve injector rendered parent inject dir rendered parent inject assigned", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "thanks thorough reproduction repro locally appears edge bug vs anything angular specific fairly often sort weirdness attributed transpilation issues one appears unrelated created simple test script run extension testjs var browserextensiongetbackgroundpage myitems var name abg name b name c let item consolelog item let item consolelog item explodes exactly way reason pops dev mode angular comparison check violating one way data flow comparison involves using iterator protocols walk array closing please update get response edge team", "d": "4/2018"}, {"body": "thanks followed edge issue tracker findings", "d": "4/2018"}, {"body": "sorry invalid value maybe need warning console log cases dev mode course", "d": "4/2018"}, {"body": "nt think want go path validating possible value element properties impossible properly custom elements ca nt knowledge upfront also trying match browsers behaviour framework would significantly size complexity simply nt think good value complexity ratio going close issue", "d": "4/2018"}, {"body": "read software engineer senior level guy speak cried angular pains past currently crying ngcontent multiple projections cant wont argue individual points come bring success table proven well worth pains extra setup extra jumping hoops depending look many ways change approach past knowledge may work thankful angular took giant leaps make sense would nt react things else angular trained two people angular knew nothing angular also junior developers sooooooooooooooo easy stick angular projects concern limited scope small components touch angular makes life easier work people sorry nt small debate points nt blame point view however see much evidence trying crash head first angular see feel work way want also want angular elements make things easier want angular easier maybe figure less opinion called computer science job takes great amounts attention details great amounts learning lot reading lot separating symptoms causes cant stay junior either consume wingin fighting current things actually work versus want work said written angular suck entries since edit every comment hold back saying much love angular think someone head lent great deal free knowledge humble made feel thats feel angular done right us big choices made us good luck farewell", "d": "4/2018"}, {"body": "feel points burn us guess angular team occupied big topics elements ivy bazel documentation ngconf ivy renderer particular targets pain points mentioned two projects running parallel one angularjs one nobody likes touch angularjs codebase ecosystem around wonderful full template typecheck linting clean component interface typescript default template syntax one way data flow admire work team framework also always upgrade path hard cut like angularjs gt hope team gets back productive boosting features soon dirty plumbing done need another major rewrite", "d": "4/2018"}, {"body": "ackerapple like angular quite easy understand moving project project number people new would like learn reason decreasing popularize angular russia becomes difficult every day frameworks number functional functions number libraries increasing every day russia wanted work large company yandex write react wanted work vkontakte react large companies opposed use angular friends midlevel companies mostly one fullstack developers say quicker sketch layouts start using vue without going diving especially many frontend developers russia understand benefits rxjs allegedly want use promise example company component library already tied primeng badly written open source people even write tests half time kill cutting styles longer possible cut styles strongly tied component even difficult somehow without crutches redefine internal logic thirdparty component overall like angular really grew programmer however still feel like weak expert since angular huge", "d": "4/2018"}, {"body": "necessary say whole web environment easy world harder easier year two look js code written years back hard believe today angular today simplest tool standalone beginner abstractions new concepts especially edge means analyze design best think async real world fact easy super efficient tool beginners good teacher", "d": "4/2018"}, {"body": "ackerapple software engineer like angular wants become robot framework good use academic purposes like barbell helps build muscle production difficult react vue help solve problems simply really hope future framework engineer tool production bar gym", "d": "4/2018"}, {"body": "splincode last comment mostly speaks popularity sure agree always popular packages npm best ones hear ya man choose angular sanity others deal less jobs packages", "d": "4/2018"}, {"body": "alexdasoul nt think angular production got golf cart joker poker pinball machine wizard pinball machine baby pac man pinball machine way alll paid angular production code produced following companies", "d": "4/2018"}, {"body": "ackerapple writing production angular angular allows write bad code almost always forces write lot lowlevel code takes away monstrous amount time", "d": "4/2018"}, {"body": "well said agreed banging park south florida healthcare app industry rocking cordova back life pwas cause webapps got bad taste got ta call right pwa", "d": "4/2018"}, {"body": "ackerapple yes angular team makes tool developers would like pay attention little things sometimes hurts", "d": "4/2018"}, {"body": "awwwwwwwwwwwwwwwww alright often full sassy comments nt troubles cause mastering shit try code demos docs love angular sorry tough time making cash rain angular milking sucker ova", "d": "4/2018"}, {"body": "title issue grammatically incorrect evidence sheer agitation angular body comments well typed thought angular makes feel high like beck wow song", "d": "4/2018"}, {"body": "splincode thanks much creating issue nt concrete reactions yet lot unpack already working want know listening thinking problems deeply care lot spend lot time reflecting issues like shared several times goals making angular simpler still helping developers build state art applications scalable teams code etc correct understand going hood learning journey adds complexity right times etc thanks sharing hopes around things", "d": "4/2018"}, {"body": "stephenfluin thank stephen hope future angular become even better easier understand however first grateful angular making grow developer", "d": "4/2018"}, {"body": "stephenfluin often collect feedback community developers", "d": "4/2018"}, {"body": "splincode talk developers angular every day maybe misunderstanding question", "d": "4/2018"}, {"body": "stephenfluin splincode says daily work angular solve problems time time almost always enough definition url rout name level directive type routerlinkactive often lack setvalidator removalvalidator much hampered need di everything tests enough opportunity redefine enough opportunity override concrete method without defining whole class general needed daily work production cool opportunity redefine adjust everything needs forced almost every new task", "d": "4/2018"}, {"body": "splincode small notice mean inject pipe two different modules", "d": "4/2018"}, {"body": "splincode ah thanks explanation say factor modules architecture absolutely fine nt feel limitation point view maybe personal feeling maybe affected professional historical background points see always one shared module least usually natural thing place thing correct module simple app one module usually something extra part custom eager lazy loaded module exact rules think simple fact modules architecture structured never understand reasons developers nt understand usually similar discussion topic one component one module fact simple module one component simple lines code possible place one ts file", "d": "4/2018"}, {"body": "mlcmlapis want say seen lot projects people come react understand modular architecture end components pipes services shoved module shared module way huge bundle example feature lazy components maybe angular elements", "d": "4/2018"}, {"body": "complex yeah impossible learn nope beginner friendly invest time readingdoing tutorials", "d": "4/2018"}, {"body": "lazy loading angular super dope component entire routes splincode using angular crack dealer sold reading enough several things mention ease bother ask cause feel chat compacted complaining newbies need read learn things outside react", "d": "4/2018"}, {"body": "learning takes time lots time bye", "d": "4/2018"}, {"body": "team learned ng well problem two things router lazy loading nt work relative path problem leaves since angular wtf unstable angularcli every time something nt work since ps documentation covers lot say want learn angular read material code convenient angular documentation feel angular team nt care users feedback", "d": "4/2018"}, {"body": "djleonskennedy graduate high school class take extra classes summer even graduated making feel like scientist though learned angular teacher suck learning angular team put politely nah smarted student make money money angular taking places daily", "d": "4/2018"}, {"body": "ackerapple think wanted say project got control", "d": "4/2018"}, {"body": "noooooo lazy loading works cli works great know work everyday know angular team talks allllllllllll time scheduled gon na argue flat earthers gon na debate make money write complaints", "d": "4/2018"}, {"body": "ackerapple argue fine wanted note observed phenomena", "d": "4/2018"}, {"body": "electromagnetism phenomena put complainers category complaining cause angular works way say", "d": "4/2018"}, {"body": "ackerapple want say reproduce nt say works man", "d": "4/2018"}, {"body": "soooooooooooo setting angular fire saying bold shit bold like angular team care cause found relative pathing issue odd area ionic get right going create plunked split hairs felt angular angular stuck ace hole butttttttttttttt alas past bitching better try call split cee u next tuesday hairs topic bunch bitching found success cli lazy loading see u next tuesday", "d": "4/2018"}, {"body": "ackerapple please lower tone think angular community spirit refer concernsinquiries ppl way matter frustrating could furthermore id like point despite fact angular whole lot room improvement thats issues tracker current features framework outweight far existing issues imho least recurrent source sw architecture guidelinespatterns", "d": "4/2018"}, {"body": "understood agreed step away unfollow understanding mouth often gets trouble farewell good luck", "d": "4/2018"}, {"body": "agree points software hard expensive creating app want easy would seen smaller salary rates software developers angular improving taking toooooo long integrating great features must time like web workers taking years still available box team fault believe spend money platform improve faster", "d": "4/2018"}, {"body": "small notice also standardization process takes years true cases web components service workers shadow dom others general using means also waiting implementation browsers leader platforms least", "d": "4/2018"}, {"body": "locking thread please keep contributions comments positive technology", "d": "4/2018"}, {"body": "guess similar", "d": "4/2018"}, {"body": "pretty close need use formgroup inside formarray case preventing using add set control methods", "d": "4/2018"}, {"body": "pr made one", "d": "4/2018"}, {"body": "see try read warning message hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "caused angular xhr spec defined behavior would still even removing code angular", "d": "4/2018"}, {"body": "oh nt though could something xhr spec thanks trotyl letting know slightly modified doc add default value original documentation actually case someone else encounters issue", "d": "4/2018"}, {"body": "closing trotyl correct specified behavior", "d": "4/2018"}, {"body": "nt think good idea nt override standard html attributes custom directives input best practice may get unexpected results disabled ootb available standard html attribute", "d": "4/2018"}, {"body": "suggesting new feature seems like bug angular nt want bind standard html attributes appropriate warning", "d": "4/2018"}, {"body": "design directives inputs shadow native properties still reflect set unset underlying dom node directive", "d": "4/2018"}, {"body": "reason shadow native properties please understand current behavior quite confusing", "d": "4/2018"}, {"body": "reason shadow native properties see reasoning discussion original pr", "d": "4/2018"}, {"body": "thanks pawel clarification", "d": "4/2018"}, {"body": "closing clarified", "d": "4/2018"}, {"body": "cc stephenfluin", "d": "4/2018"}, {"body": "please close one create issue think angularcli docs specific improvement thanks", "d": "4/2018"}, {"body": "absolutely sorry posting wrong group", "d": "4/2018"}, {"body": "create new application section say run command runs extra suggesting redundant wo nt help scenario", "d": "4/2018"}, {"body": "strange apparently nt always", "d": "4/2018"}, {"body": "chances option like influence initial creation packages documentation nt clear repercussions options angularangularcli", "d": "4/2018"}, {"body": "npm install wo nt invoked", "d": "4/2018"}, {"body": "ah see thanks enlightening close issue though feel documentation enhanced options new occasional programmers quickly grasp implications cli options", "d": "4/2018"}, {"body": "maybe remove annotaion", "d": "4/2018"}, {"body": "discussed person decided go approach", "d": "4/2018"}, {"body": "allowed trigger violating oneway data flow", "d": "4/2018"}, {"body": "trotyl quite understood explain problem", "d": "4/2018"}, {"body": "trigger example", "d": "4/2018"}, {"body": "trotyl help solve problem", "d": "4/2018"}, {"body": "dxvladislavvolkov first nt mix template based form reactive based one recommendation use reactive based avoid lot problems violating oneway data flow", "d": "4/2018"}, {"body": "mlcmlapis mean use form flags eg dirty pristine etc custom components", "d": "4/2018"}, {"body": "dxvladislavvolkov also reactive based forms", "d": "4/2018"}, {"body": "mlcmlapis wrong example", "d": "4/2018"}, {"body": "dxvladislavvolkov already said mixing template based form reactive based one email ngmodel directive", "d": "4/2018"}, {"body": "mlcmlapis okay understood thank solve problem error", "d": "4/2018"}, {"body": "dxvladislavvolkov hmm start correct code best reactive principle see way solve lot problems violating oneway data flow notice unclear case need find exactly place stands behind message use read carefully post", "d": "4/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue", "d": "4/2018"}, {"body": "nt understand trying expect think parent component know anything child viceversa share properties binding child wo nt change property parent communicate somehow read learn tricks think misunderstood comment referenced simple example", "d": "4/2018"}, {"body": "fact leverage bidirectional binding custom components nt need use ngmodel define input output parameters field certainly allow twoway binding way shorthand want allow ngmodel usage need define implement api allows component work ngmodel template forms well reactive forms see works intended far tell", "d": "4/2018"}, {"body": "robwormald hard usage think need simple api", "d": "4/2018"}, {"body": "robwormald create custom ngmodel need recreate bunch code whole class controlvalueaccesor bunch methods even use bananabox attribute component forgot make emit component event even warned hard", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "expected behavior property reflects whether form control blurred changed see docs worth noting seeing weirdness material controls issue opened repo", "d": "4/2018"}, {"body": "please add repro repository stackblitz see issue template", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "sorry due cors response missing accesscontrolexposeheaders", "d": "4/2018"}, {"body": "sorry ca nt reproduce problem following instructions provided starters ca nt login install app suggested also fails chrome currently dev build alas stable might chrome issue maybe posting nonmonified stack trace error would give hints might problem anyway going close since actionable current state feel free continue discussion", "d": "4/2018"}, {"body": "hey gkalpak thank much directions might right chrome bug yet stable want request client found service worker case properly handle rejection rather throwing type error saying read id undefined future node exit process status code unhandled promise rejection hope better idea way handle rejection code service worker configuration please let know", "d": "4/2018"}, {"body": "properly handle rejection rather throwing type error saying read id undefined indication error caused sw rather code unfortunately way tell without reproduction future node exit process status code unhandled promise rejection irrelevant since sw run browser node", "d": "4/2018"}, {"body": "thanks gkalpak quick response got better understanding service worker confirmations well great day", "d": "4/2018"}, {"body": "hello gkalpak please check screenshot give feedback", "d": "4/2018"}, {"body": "code looks something like weird thing according mdn readonly property returns id current service worker controlling returning undefined indeed sound like chrome issue would report tracker already reported", "d": "4/2018"}, {"body": "great explanation least able explain clients weird thing happening thanks yeah nt report chrome issues tracker please report mention happening logged google account browser running without login client id remains update goes fine thanks gkalpak", "d": "4/2018"}, {"body": "apparently acceptable behavior empty client id need fix let track", "d": "4/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information", "d": "4/2018"}, {"body": "ericmartinezr", "d": "4/2018"}, {"body": "binarydigits right master component subscribe dynamically creates another component required logic dictates", "d": "4/2018"}, {"body": "mlcmlapis yeah kinda overkill define component encapsulate factory logic imo service would better suited implements interface similar", "d": "4/2018"}, {"body": "jotatoledo yep agree comment primarily focused fact requested feature available today nt meant best way", "d": "4/2018"}, {"body": "hi brachiwernick nt think angular needs changed behaves like expected maxlength validator takes static value length wrong sound like need implement custom validator maxlength outside custom validation creator function work ts component export class validationexamplecomponent implements oninit maxlength number formgroup formgroup", "d": "4/2018"}, {"body": "rkaczmarek suggested wo nt work want validator separate class outside component reused components also issue nt validator validator interface ca nt get input rather control problem reusable custom validator need inputs", "d": "4/2018"}, {"body": "brachiwernick function whether pure stateful totally decided", "d": "4/2018"}, {"body": "brachiwernick decision put logic outside component class inside nt matter simple example ts export class myvariablevalidator maxlength number component export class validationexamplecomponent implements oninit", "d": "4/2018"}, {"body": "rkaczmarek thank example still seems like workaround expect framework give better solution also nt help second problem wrote validation nt invoked change input validation touch form control supported template driven form", "d": "4/2018"}, {"body": "good catch fix thanks", "d": "4/2018"}, {"body": "fixed thanks", "d": "4/2018"}, {"body": "ca nt reproduce problem still persists please file new issue provide details problem including file fails parse errors network tab devtools browserversion use geographical location seen problems like related regional edge cache corruption past thanks", "d": "4/2018"}, {"body": "failing error one posted job tested edge chrome android worked weir thanks", "d": "4/2018"}, {"body": "santhoshktec sure exactly want type registry list components used neither tags templates routes angular compiler could think use application able analyze custom code discover loading components dynamically treeshakeable process knows certainly want keep component final version optimized application btw programmatically load lazy loaded module contains one components moment want ondemand exactly call", "d": "4/2018"}, {"body": "btw programmatically load lazy loaded module contains one components moment want ondemand exactly ajax call true nt work outside angular router question lazy load dynamic components routes also dynamic least predefined mlcmlapis code snippet documentation reference welcome highly interested", "d": "4/2018"}, {"body": "mboughaba works outside angular router compiler compile module nt matter lazy loaded one programmatically load true nt work outside angular router thing related angular cli current version cli creates lazy loaded modules bundles base defined routes cases define dummy routes allow cli understand correctly create lazy loaded bundles load via angular router directly using routes programmatically ignoring routes thoughts nt include cases think really dynamic creation modules runtime inside browser totally different scenario need use jitcompiler loaded browser combination aot base app jit dynamic new modules components runtime together recommended general security performance point views also new view engine ivy included flag angular still completely prepared suitable production available later maybe angular allows new ways generate really new dynamic modules components still without using jitcompiler browser fully aot app", "d": "4/2018"}, {"body": "splincode provide stackblitz repro please", "d": "4/2018"}, {"body": "igorminar yes sorry reason forgot attach link repro", "d": "4/2018"}, {"body": "appears redirect parsed correctly see redirect changed add beginning still issue error message probably clear", "d": "4/2018"}, {"body": "never tried running angular bazel tests windows isnt regression starting pick windows development ill get one due time mon apr pm alan agius notifications githubcom wrote submitting regression behavior used work stopped working new release bug report feature request documentation issue request support request gt please submit support request instead see current behavior bazel test packagescoretest test throw error bazel test packagescoretest test info analysed target packagescoretest test packages loaded info found test target error c compiling angular templates ngc packagesupgradestatic static failed exit packagesupgradestaticpublicapits error find module packagesupgradestaticpublicapits error find module srccommondowngradecomponent packagesupgradestaticpublicapits error find module srccommondowngradeinjectable packagesupgradestaticpublicapits error find module srccommonversion packagesupgradestaticpublicapits error find module srcstaticdowngrademodule packagesupgradestaticpublicapits error find module srcstaticupgradecomponent packagesupgradestaticpublicapits error find module srcstaticupgrademodule target packagescoretest test failed build use verbosefailures see command lines failed build steps info elapsed time critical path failed build complete successfully executed test fails build looks like ignored fixing error copying files get another error \u03bb bazel test packagescoretest test info analysed target packagescoretest test packages loaded info found test target fail packagescoretest test see c info testing packagescoretest test test output packagescoretest test failed findpath c bootstrap failure error file rxjsexternalrxjsindex found module root rxjsindexexternalrxjsindex functionmoduleconstructorresolvefilename c functionmoduleload modulerequire require c objectdefinepropertyvalue c object c modulecompile objectmoduleextensionsjs moduleload expected behavior works tooling issues node version platform windows cc alexeagle know interested receiving mentioned reply email directly view github mute thread", "d": "4/2018"}, {"body": "exactly problem currently configservice initialized appinitializer late services bootstrapped beforehand", "d": "4/2018"}, {"body": "mischkl nt different organizational point view put code one configservice would work appinitializer multi provider services declaration order section main app module decides initialized first", "d": "4/2018"}, {"body": "problem services defined modules imported app module case initialized first", "d": "4/2018"}, {"body": "mischkl hmmm nt think tokens providers dependencies initialized first rest waiting problem plunker fact also dependency", "d": "4/2018"}, {"body": "fyi indeed asynchronous di support alpha already dropped years", "d": "4/2018"}, {"body": "mlcmlapis nt problem project afaik case using ngrx effects nonlazyloaded feature module depend services turn try retrieve backend url configservice constructors hand inject service component classic angular opposed redux would nt problem components initialized appinitializer experience particularly problem using ngrx effects plunkr demonstrates may ways reproduce problem least using effects nt found way solve problem via structural changes workarounds course one dynamically grab values every service method call another expose promise configservice let api services use constructor main complaint simply appinitializer partial solution since holds component initialization nt know anything service side things obvious solution would introduce async provider initialization", "d": "4/2018"}, {"body": "import throw rxjsobservablethrow", "d": "4/2018"}, {"body": "thank help dereklin throwerror change throw \u5bf9\u5417", "d": "4/2018"}, {"body": "correct rxjs nt writing using rxjs problem please report maintained repo", "d": "4/2018"}, {"body": "thank much trotyl forgive thing maybe blow github ask question sorry", "d": "4/2018"}, {"body": "even problem code default version used indeed confusing since consistent behavior report bug right repo", "d": "4/2018"}, {"body": "thank learn u teach second trotyl", "d": "4/2018"}, {"body": "closing resolved", "d": "4/2018"}, {"body": "fyi", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation also bug report needs stackblitz repro issue", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "start stop devs putting even larger chunks html templates routes definition styles providers etc potentially adds unnecessary complexity routing", "d": "4/2018"}, {"body": "opportunities declare components simple function future guess something similar could get go", "d": "4/2018"}, {"body": "issue mentioned side note aside appears local available either thus injected appears addressed part fix", "d": "4/2018"}, {"body": "duplicate see discussion", "d": "4/2018"}, {"body": "nfriend could tell bit use case compiling template dynamically changing contextscope etc simply possible difficult worth effort make work hand checking used slots simply transcluding content pr referenced could finished support", "d": "4/2018"}, {"body": "fdim thanks following case using local test transclusion slot filled ie", "d": "4/2018"}, {"body": "nfriend okay similar use case support actually possible done pr gkalpak decide pr go course make fixes based comments nt mind much blocked issue using local copy library anyway", "d": "4/2018"}, {"body": "still valid smiley something support providing behavior angularjs app would meantime ways work around limitations", "d": "4/2018"}, {"body": "fixed landed", "d": "4/2018"}, {"body": "confirmed works angular receive patchs release", "d": "4/2018"}, {"body": "technically breaking change even people favor new behavior might user depends existing behavior guess nt merge", "d": "4/2018"}, {"body": "sad hear", "d": "4/2018"}, {"body": "allow ngmodule take componentdeffeature technically componentlevel stuff imaging component want implement would nt mean rest module also every components module needs got special treatment", "d": "4/2018"}, {"body": "think important thing users install thirdparty deffeature via librarie ngmodule simplicity componentlevel feature definition good still edit components use ondestroy well builtin lifecycle hooks may better allow userdefined features installed ngmodule compiler level", "d": "4/2018"}, {"body": "thought one ivy goal make everything treeshakable pure sideeffect wo nt optimized even declared accident forget remove also could produce bad performance impact startup time memory autoinstalled bunch components", "d": "4/2018"}, {"body": "structural directive always creates template use template reference variable query specific template", "d": "4/2018"}, {"body": "expected behavior using compiler generate since using contentchild get first one", "d": "4/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "4/2018"}, {"body": "thanks guys got app mycomponent contentchild myref templatechild templateref official guide would helpful topic highly confusing offputting confronted first sorry otherwise unnecessary issue", "d": "4/2018"}, {"body": "hello angular uses cldr data values believe mistake data please open issue cldr repository thanks", "d": "4/2018"}, {"body": "language service implemented virtual interface design editoragnostic guess requesting answer make vim plugin based language service", "d": "4/2018"}, {"body": "trotyl thought angular might want official plugin like vscode example correct", "d": "4/2018"}, {"body": "nt think possible dozens different editors example intellij idea maintains angular plugin provide integration language service", "d": "4/2018"}, {"body": "company behind trying sell product vim users rely open source community pretty much everything wo nt time write implementation time soon guess isnt place request either someone team interested maybe pick although guess urgent april trotyl yu notifications githubcom wrote nt think possible dozens different editors example intellij idea maintains angular plugin provide integration language service receiving authored thread reply email directly view github mute thread", "d": "4/2018"}, {"body": "love angular community create maintain integration like angular team matsko uses vim building angular apps really wrong people since wo nt using understand community members use vim ask enthusiastic angular language service support vim build share rest community", "d": "4/2018"}, {"body": "please provide repro", "d": "4/2018"}, {"body": "feel import browseranimationsmodule appmodule componet deffered old component destoryed new component loaded case data old component repeated loading feel like issue environment angular cli node os angular animations common compiler compilercli core forms platformbrowser platformbrowserdynamic router tscwrapped angularcdk angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicspackageupdate typescript webpack", "d": "4/2018"}, {"body": "duplicate", "d": "4/2018"}, {"body": "oops thank searched plnkr found issue found searched plunker", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "thanks help", "d": "4/2018"}, {"body": "srsly apply filters google search", "d": "4/2018"}, {"body": "inheritance issue app tree node hunch though", "d": "4/2018"}, {"body": "mattijarvinenba would like clearly understand trigger zone likely problem related bad changedetectiondefault zonejs", "d": "4/2018"}, {"body": "course iterating ideas narrow problem area reasons bug problem lies changedetection amp zone inheritance decorators cause lifecycle events trigger multiple times", "d": "4/2018"}, {"body": "inheritance decorators describe life cycle components works highlight components runtime", "d": "4/2018"}, {"body": "repro looks nice nt know look please include minimal repro observed vs expected behavior", "d": "4/2018"}, {"body": "nothing repo angular cli", "d": "4/2018"}, {"body": "trotyl ok closed", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "matteony consider opening issue repo issue experiencing far takes enable service workers good documentation", "d": "4/2018"}, {"body": "mark markgoho thanks suggestion review angulario docs subscribe askfirebase youtubecom video pwas mentioned serviceworkers need ignore firebase dynamic data advanced offline features ahha moment reading serviceworkers exactly clear put ngswconfigjson file ignore dynamic firebase nt want also ignore static assets following pwa since last ngconf taken course udemy instructor got writing serviceworker preference use one angular cli experiment ngswconfigjson file rather spend time exploring angular elements suggestions guide angulario exclude dynamic data service firebase needed per video example visit chrome network tab view dynamicstatic data add node example datagroups add name firebasedynamic firebase ngswconfigjson file making would nice know add new feature chrome lighthouse use magic inform since using firebase add ngswconfigjson file ignore dynamic firebase data needed static data persist possibly url tutorial suggestion optimize serviceworker using firebase mentioned prior post disable serviceworker via maints navigatorserviceworkerregister ngswworkerjs app works expected safari mac iphone well browsers appears serviceworker bug configuration serviceworker hope helps many thanks matt", "d": "4/2018"}, {"body": "actually issue generating files properly picked resulting empty assetdatagroups let track angularangularcli", "d": "4/2018"}, {"body": "coz correct exist packages", "d": "4/2018"}, {"body": "anokori correct rxjs changed umd global name error caused", "d": "4/2018"}, {"body": "still error released emergency release fix ng packages maybe fixed issue", "d": "4/2018"}, {"body": "ocombe definitely still problem see latest bundle", "d": "4/2018"}, {"body": "fyi longer used part legacy build removed final sorry confusing transition", "d": "4/2018"}, {"body": "thanks reporting uparlange", "d": "4/2018"}, {"body": "work around wrapping function checking disabled status add redisabling needed", "d": "4/2018"}, {"body": "content projection works project direct child content nested tile content", "d": "4/2018"}, {"body": "thanks vicb nt quite follow could elaborate little stackblitz tilenested nested foo nested bar projecting ngcontent tile showing red border get project multi slot select filter", "d": "4/2018"}, {"body": "willlh able directly process select content template component probably would like neither nt effect applied leads project content finally rendered template component component instantiated content div", "d": "4/2018"}, {"body": "mlcmlapis vicb get working way want nt valid use case feature request developer wants use tile library component custom component certain features areas wants use component directly others wants project component tile could work could apply ngcontent selectors instead use singleslot ngcontent", "d": "4/2018"}, {"body": "willlh would like notice angular compiler creates code js functions ahead time runtime thing imagine would work nested level would combined many combination would cross whole principle duplicity know plans extend possibility scenarios current status scheduled planned ivy new view engine many things easy implement", "d": "4/2018"}, {"body": "nt really address single slot works scenario multislot", "d": "4/2018"}, {"body": "willlh lol describe simple case would like work multislot understand", "d": "4/2018"}, {"body": "ooops good catch wording wrong angular indeed bootstrapped first angularjs root hybrid app would submitting pr fixing docs", "d": "4/2018"}, {"body": "sure put together pr", "d": "4/2018"}, {"body": "duplicate", "d": "4/2018"}, {"body": "also add change value timeout route still considered active change nt reflectedto template", "d": "4/2018"}, {"body": "closing duplicate", "d": "4/2018"}, {"body": "jnizet please report fixed", "d": "4/2018"}, {"body": "jialipassion done thank leave one open people finding bug aware reported already angular team members know release candidate bug", "d": "4/2018"}, {"body": "please update zonejs", "d": "4/2018"}, {"body": "duplicate", "d": "4/2018"}, {"body": "closing duplicate thanks trotyl", "d": "4/2018"}, {"body": "issue", "d": "4/2018"}, {"body": "confirm issue working fine nt work anymore generation locales changed checked rc locale files package appear generated code different locale frjs locale frjs believe alexeagle changed script generate locales recently investigate", "d": "4/2018"}, {"body": "apparently correct files available also change code ts import registerlocaledata angularcommon import localefr registerlocaledata localefr work without error fix build documentation amp cli edit wrong", "d": "4/2018"}, {"body": "seem locales present directories angularcommon tested windows platform", "d": "4/2018"}, {"body": "bad still happens test lot different versions right nt good version files", "d": "4/2018"}, {"body": "alxhub could caused di related change", "d": "4/2018"}, {"body": "tried local angular build reverted still happens", "d": "4/2018"}, {"body": "nt see supposed one", "d": "4/2018"}, {"body": "confirmed local build angular reverted works", "d": "4/2018"}, {"body": "alxhub idea broken commit ship without break users", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "erop good catch", "d": "4/2018"}, {"body": "docsareaforms filenameguidereactiveformsmd url", "d": "4/2018"}, {"body": "already fixed master need backport fix", "d": "4/2018"}, {"body": "nt think backporting fix trivial might wrong alternatively could explicit installing angular docs current stable discussed", "d": "4/2018"}, {"body": "closed", "d": "4/2018"}, {"body": "working fine please specify browser version checked chrome", "d": "4/2018"}, {"body": "sure information firefox browser informationen zur fehlerbehebungzip german afraid hope get important parts", "d": "4/2018"}, {"body": "settrend seems error caused disabled according issues apparently stackblitz requires indexeddb order work correctly closing since nothing end afaict", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "updated subject reflect problem solution", "d": "4/2018"}, {"body": "also seems like ngpreservewhitespaces documented", "d": "4/2018"}, {"body": "also seems like ngpreservewhitespaces documented mattijarvinenba find documentation", "d": "4/2018"}, {"body": "pkozlowskiopensource ah", "d": "4/2018"}, {"body": "noticed nt running newest version angular serviceworker quick update problem still exists bit closer look source seems problem like guessing earlier missing option adding badge compiling seems make work fine", "d": "4/2018"}, {"body": "sounds reasonable smiley thx investigating hivesolution would submitting pr fix going serviceworkerregistration shownotification docs mdn also seem ignoring property since experimental technology expect options properties likely change future pass datanotification object alxhub", "d": "4/2018"}, {"body": "gkalpak yeah made pr honest tiny bit overwhelmed amount stuff fill add single string array something wrong admit first time commiting something project size got solution issue hope least bit help", "d": "4/2018"}, {"body": "thx hivesolution know overwhelming first couple times grin wait also run tests bazel windows grin working smoothing things meantime great thx investigation fix left couple minor comments pr", "d": "4/2018"}, {"body": "cc matsko", "d": "4/2018"}, {"body": "honestly nt get downvotes mixed lack help far seen one concerned design angular lazyloading modules case followed info could find web topic posted bug report tho probably trouble code still looking help", "d": "4/2018"}, {"body": "good news could finally fix issue get working problem componentspecific imports needed shared module honestly still happy design bit weird think angular team think reworking least works", "d": "4/2018"}, {"body": "zerokk thanks posting resolution agree lazyloading story working error prone awkward certain situations ivy going simplify whole thing significantly stay tuned angular ca nt wait", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "issue duplicate license headers bundle expected bundle contain one license header cause size regressions angular cliwebpack users though cli nt use umd bundles nonumd bundles webpack plugin dedupes license headers", "d": "4/2018"}, {"body": "fixed problem following code component selector mycomponent template export class mycomponent extends upgradecomponent constructor elementref elementref injector injector super component elementref injector changed added empty template added mycomponent entrycomponents expected known behavior", "d": "4/2018"}, {"body": "upgraded components indeed designed used dynamically loaded easier dynamically load angularjs components directly emptytemplate component trick works feel free use closing since usecase intend support", "d": "4/2018"}, {"body": "cross validation demo great idea use lot front end dev jobs position docs makes sense jenniferfell chembu brandonroberts could one take look zetsnotdead idea", "d": "4/2018"}, {"body": "write proxy angular service eg like share sessions work", "d": "4/2018"}, {"body": "mean proxy angular run localhost dev mode call startupcs file sure helps", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "happens rewrite urls nt contains file extension would nt rewrite urls would make look like responses could add aiothemed page", "d": "4/2018"}, {"body": "hm although would straightforward keep consistent looks behavior", "d": "4/2018"}, {"body": "dup", "d": "4/2018"}, {"body": "file inputs nt actively supported yet track progress", "d": "4/2018"}, {"body": "data comes cldr cldr wrong could certainly patch need explain cldr wrong", "d": "4/2018"}, {"body": "agree problem actually try raise issue cldr first working around", "d": "4/2018"}, {"body": "imo first step check whats default lower camel case think normalized really nt understand cldr pt es fr lower case uses camel case", "d": "4/2018"}, {"body": "angular uses cldr data values believe mistake data open issue cldr repository", "d": "4/2018"}, {"body": "closing format comes cldr cldr wrong please file defect normalize bug fixed", "d": "4/2018"}, {"body": "reported bug", "d": "4/2018"}, {"body": "sure bug feature request needs fixed added currently way get custom error message server unless know way digitalplayersteemit", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "start type object output shows declared line nothing like string per question fine checked output test cases ngoninit setinterval gt thisrouternavigate numval mathfloor mathrandom tostring strval mathfloor mathrandom tostring relativeto thisroute output numval string strval string numval string strval string conclusion something goes wrong actual implementation parammapget method return type string fixed get implementation code get method solution need put implementation side typeof parammapget string return parammapget tostring", "d": "4/2018"}, {"body": "ca nt tell trying say edit decoded think issue put number url using router navigate type number breaks promise api paramget return string solution right implementation tostring router input confusing refresh test example value becomes string naturally tue apr notifications githubcom wrote start type object output shows declared line nothing like string per question fine checked output test cases ngoninit setinterval gt thisrouternavigate numval mathfloor mathrandom tostring strval mathfloor mathrandom tostring relativeto thisroute thisrouteparammapsubscribe parammap parammap gt thisnumval parammapget numval thisstrval parammapget strval thisnumvaltype typeof thisnumval thisstrvaltype typeof thisstrval output numval string strval string numval string strval string receiving authored thread reply email directly view github mute thread", "d": "4/2018"}, {"body": "try request stackblitz provide tslint integration", "d": "4/2018"}, {"body": "think need online tslint stackblitz thank", "d": "4/2018"}, {"body": "hour could understand going", "d": "4/2018"}, {"body": "digging around lot code lately nt ask found thing calls nt expect called code partially explain seeing expect falsy first route would explain called", "d": "4/2018"}, {"body": "fact installing module solved problem", "d": "4/2018"}, {"body": "nt make sense assigning value class definition code nt value members set assigning template declaration generally question angular usage ask stackoverflow similar issue tracker bugs feature requests", "d": "4/2018"}, {"body": "arangates nt logic use situation nt use angular issues channel support questions use gitter", "d": "4/2018"}, {"body": "semantics given angular cli involved", "d": "4/2018"}, {"body": "noop warning message maybe according answer decorators would need get injected environment service aot possible verified another approach possible inject services decorators typescript export class injectorcontainermodule static injector injector constructor injector injector injectorcontainermoduleinjector injector inside value decorator const environment injectorcontainermoduleinjectorget environmentservice environmentgetproperty maybe feature go userland ideas", "d": "4/2018"}, {"body": "feature improved adding support property source environment file could go something like typescript http file json format may format propertysource class would need handle services user api baseurl port security websocket configuration source properties must specified builtin one environmentsource source httpfilesource properties safenotfound true nulled found properties true call propertysource load boot appinitializer guess possible due inejcted dependencies use ngmodule instead init true class userserviceconfiguration call httpfilesource getproperties safe way services field found return null due safenotfound option also instantiate userapiconfiguration class fill properties class based property name class type value servicesuserapi api userapiconfiguration mark class configuration make injectable able add configuration related property decorators configuration class userapiconfiguration baseurl string port number alternatively may specify prefix option get rid value configuration source httpfilesource properties safenotfound true nulled found properties init true prefix servicesuser class userservicewithprefixconfiguration api userapiconfiguration security usersecurityconfiguration interface propertysource load promise getproperties properties class httpfilesource implements propertysource private properties new properties options read configuration properties metadata load promise http get request also point validate schema schemavalidator like hapi joi thisproperties thispropertiesmerge await thisfetchfile getproperties properties return thisproperties remaining things initialization order think tree maybe variable expansion declarative approach simply declare configuration classes inject servicescomponents spring configuration docs", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "sorry opened bug forgot import formsmodule ngvalue could work", "d": "4/2018"}, {"body": "bit digging think causing problem apparently timing curve applies differently vs nt understand probably nt angular problem since think pure css animation fixed heights nt production would suffer issues still maybe something angular fix", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "eric stackoverflow good platform behave badly english perfect level arrogant instead answering trying find alternative places", "d": "4/2018"}, {"body": "vcodepp angular issues channel right place really recommend following prepare simplest demonstration version problem would runable anyone ask channel", "d": "4/2018"}, {"body": "ericmartinezr nt like commentary change truth mlcmlapis thx dude try", "d": "4/2018"}, {"body": "solution add custom javascript arrayprototypefind objectdefineproperty arrayprototype find value function predicate use strict null throw new typeerror arrayprototypefind called null undefined typeof predicate function throw new typeerror predicate must function var list object var length listlength gt gt gt var thisarg arguments production steps edition arrayfrom arrayfrom function var tostr objectprototypetostring var iscallable function fn return typeof fn function tostrcall fn object function var tointeger function value var number number value isnan number return number isfinite number return number return number gt mathfloor mathabs number var maxsafeinteger mathpow var tolength function value var len tointeger value return mathmin mathmax len maxsafeinteger", "d": "4/2018"}, {"body": "feel enough information", "d": "4/2018"}, {"body": "two features thus available browser supports include polyfills cli generated application using cli manually install", "d": "4/2018"}, {"body": "declaring components called quoting guide note add declaration decorator since angularjs root template application alternatively wantneed specify component move call module method bootstrap component lifecycle hook closing since everything works expected", "d": "4/2018"}, {"body": "error move upgradebootstrap ngoninit gkalpak even removing bootstrap ngmodule dont solve problem petebacondarwin igorminar", "d": "4/2018"}, {"body": "aminrahimi directly bootstrap angular component contains upgraded components bootstrapping angularjs instead downgrade let bootstrapped part angularjs part app demo", "d": "4/2018"}, {"body": "dup", "d": "4/2018"}, {"body": "yep previously reported closing duplicate", "d": "4/2018"}, {"body": "thx detailed report fixed fix merged included", "d": "4/2018"}, {"body": "may related", "d": "4/2018"}, {"body": "duplicate covered", "d": "4/2018"}, {"body": "thanks trotyl", "d": "4/2018"}, {"body": "probably caused ad blocker installed feel free submit pull request removing class helps people example incorrectly blocked ad blockers", "d": "4/2018"}, {"body": "gkalpak correct adblocker would suggest change class name people adblocker nt get confuse", "d": "4/2018"}, {"body": "hi nt think issue angular eg bug rather general constraint memory processing browser please see contribution guidelines asking questions repository spirit helpful even though repository reserved issues angular could look reducing overall file size maybe data needed storing file browser eg indexeddb paginating storing data service like firebase using angularfire access paginated using server side solution eg nodejs express app split json serve data app needs paginated option pick largely depends exact use case lot resources googlestackoverflow eg search pagination regards frederik", "d": "4/2018"}, {"body": "addition frederik said issue might case try opening issue repo", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "nt use cli alternate way compile build possible", "d": "4/2018"}, {"body": "sorry ca nt tell actually bug angular looks like support request actually bug please give repro looks like dupe issue mlcmlapis pointed", "d": "4/2018"}, {"body": "maximedupre test code looks synchronous initial value set asynchronously needs values set test eg ts change value fakeasync gt const fixture testbedcreatecomponent appcomponent see examples similar tests still think something broken please provide full test test component code difficult tell trying lines", "d": "4/2018"}, {"body": "kara thanks response failing test pass see model never updated even", "d": "4/2018"}, {"body": "maximedupre needs occur along initial change detection run test nt occur element value set move calling tests work expected also noticed dispatching input event expecting email control remain pristine dispatch event field become dirty real situations fired user changed value value dirty invalid pass required check expected class present fix test either need remove initial event dispatch value setting would make field dirty remove assertion see tests fixed", "d": "4/2018"}, {"body": "kara ah got thanks help test code looks synchronous ngmodel initial value set asynchronously needs tick values set test definitely understood wrong instead ticking initial value set ticking subsequent values think understand well removed spec left everything still working", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "ericmartinezr also appropriate stack overflow question posted", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "sorry wanted help misread", "d": "4/2018"}, {"body": "close issue please thank", "d": "4/2018"}, {"body": "inconsistent capitalization af", "d": "4/2018"}, {"body": "alexeagle right either choose uppercase lowercase keeping consistency would better might seem trivial still something improved", "d": "4/2018"}, {"body": "could nt find recommendation google dev doc style guide android dev doc uses lowercase easier type good default strong preference kmsheng jelbourn", "d": "4/2018"}, {"body": "jenniferfell personally following one", "d": "4/2018"}, {"body": "internal google style use lowercase worth", "d": "4/2018"}, {"body": "idea regression introduced", "d": "4/2018"}, {"body": "api nonpublic internalonly superexperimental never intended used externally guess technically regression since nt need deprecate left backward compatibility cli use new shiny nonpublic internalonly superexperimental api discussing alxhub one probably removed ivy good news rewriting nonpublic internalonly superexperimental apis getting closer something actually make public", "d": "4/2018"}, {"body": "documentation link suggests suggests prefixing documentation angularjs angular use recommended prefix quick test indicates get stripped parsing json", "d": "4/2018"}, {"body": "illustrative explanation example also nt make less valid google google correct behavior would probably strip anything angularjs doc way counter see posts use google apparently use prepend string json output standard things common saying google change way output json", "d": "4/2018"}, {"body": "ideally make configurable", "d": "4/2018"}, {"body": "textbook already stated seems handled already concrete prefix though apparently standard agree somehow configurable", "d": "4/2018"}, {"body": "making configurable update issue title", "d": "4/2018"}, {"body": "jotatoledo use webworker platform understand stackblitz allow configure webpack create bundle webworkerbundle webworker necessary ng eject created github repository", "d": "4/2018"}, {"body": "could issue", "d": "4/2018"}, {"body": "closing duplicate locale name undefined localedata passed", "d": "4/2018"}, {"body": "sure since nt issue using recreate consistently seen issue nt think related", "d": "4/2018"}, {"body": "please explain inconsistent sure understand issue", "d": "4/2018"}, {"body": "igorminar sure saying mean either choose style spaces inside interpolation binding syntax without spaces example", "d": "4/2018"}, {"body": "igorminar preferred style use spaces examples shows nt specify explicitly make note docs creating examples least internal consistency make changes examples thanks", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "mikeandersun might also want look still experimental getting close stable", "d": "4/2018"}, {"body": "nt think action needed angular team issue resolve please comment reopen", "d": "4/2018"}, {"body": "issue someone found solution", "d": "4/2018"}, {"body": "error trying create simple mattable googling days ca nt find solution", "d": "4/2018"}, {"body": "think want right igorminar", "d": "4/2018"}, {"body": "please really really want conditional type", "d": "4/2018"}, {"body": "alexeagle nt think high risk change wait due may", "d": "4/2018"}, {"body": "love able use unionize ngrx needs typescript support", "d": "4/2018"}, {"body": "closing dup", "d": "4/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "4/2018"}, {"body": "seems working fine however updates prior pr left issues inconsistent state looks like bot crawling full set issues clean based changes made", "d": "4/2018"}, {"body": "also type rfc handled correctly type rfc need fields get milestone backlog", "d": "4/2018"}, {"body": "manughub examples issues inconsistent state", "d": "4/2018"}, {"body": "tried local found following things jasminemarble entry missing packagejson testts file missing src folder maybe typo see testssbts src actual file anyway work latest jasminemarble package see", "d": "4/2018"}, {"body": "alexzuza di issues complex always carful making statement twice complex di scenario agree valid point constructor module request service constructor request module instance true actually hidden hard see bad dev experience happens actually asking di module instance asking moduleref instance within access instance would expect request injection module class token moduleref make thing clear mhevery sure bug peculiar situation situation obscured hidden plain sight least update design clear gives access instance module otherwise injector would needed missing oninit event services like ondestory allow oninit call services constructor module finished", "d": "4/2018"}, {"body": "tried repro ca nt reproduce either", "d": "4/2018"}, {"body": "tried repro locally following instructions chrome safari ca nt repro still repro problem please open new issue provide detailed repro instructions", "d": "4/2018"}, {"body": "would awesome implemented think generic way ability listen lifecycle events things like decorators would even better improvement example similar syntax router uses filtering techniques would allow developers listen events component lifecycle thus making decorators like mentioned possible nice would ability get target without inject realize suggestion would modifying target properties component decorator could considered bad typescript might able infer correctly suggestion get us thinking might accomplish flip side could black list compilation methods like aot reference material subject cc robwormald", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "row inside function next condition falsy return data server sent", "d": "4/2018"}, {"body": "btw believe last comment related fact nt get notification desktop mobile device debugging difficult try update", "d": "4/2018"}, {"body": "mobile devices code nt hit return", "d": "4/2018"}, {"body": "solved issue wrapping json object posted object like also added field witch mandatory adding changes statement nt hit return desktop witch stroke weird behavior guess close issue thank", "d": "4/2018"}, {"body": "looking code seems parsed pushmessagedata contain property turn property notification displayed seems arbitrary common convention thing alxhub document use push notifications anyway tracked closing issue since able get notifications work ranbuch", "d": "4/2018"}, {"body": "go along boriskhapilin information basic cli repo issue reproduced run issue seems occur spaces removing single element works note issue occurs aot mode ts hostcontext parent child wo nt work thiscomponent background red note would work running prod aot compilation seems whitespace hostcontext culprit hostcontext parent thiscomponent background red", "d": "4/2018"}, {"body": "great work", "d": "4/2018"}, {"body": "gkalpak ignoredurlpatterns work http response give eg ignore http response way ignore http api response", "d": "4/2018"}, {"body": "akilmakda fixed previous comment meant fix usecase mentioned one fixworkaround think would handle mixed content service worker change needs made sw something", "d": "4/2018"}, {"body": "future reference discussed alxhub decided implement handle mixed content sw submit pr next days unless someone beats wink", "d": "4/2018"}, {"body": "fixed already", "d": "4/2018"}, {"body": "duplicate issue plunkr needs change include tslib page angular bundles dropped umd format", "d": "4/2018"}, {"body": "think documentation issue cc manughub visibility", "d": "4/2018"}, {"body": "might also find ngatlanta talk helpful contribute docs gives general overview feel free reach questions talk slides", "d": "4/2018"}, {"body": "kapunahelewong story told starting talk p nice talk really helped thanks sharing", "d": "4/2018"}, {"body": "thanks kind", "d": "4/2018"}, {"body": "gkalpak means fixed official documentation least mentioned install", "d": "4/2018"}, {"body": "fait enough changing sounds reasonable would submitting pr fix", "d": "4/2018"}, {"body": "official repo tourofheroes tutorial nt found", "d": "4/2018"}, {"body": "sebastianmarinescu looking grin think looking file", "d": "4/2018"}, {"body": "cc filipesilva think correct resolution angular cli include tslib inputs bundle sure changed", "d": "4/2018"}, {"body": "nt say version angular cli changing quickly rc need repro versions indicated still problem cli please file issue angularangularcli", "d": "4/2018"}, {"body": "downside starting builds via bot builds would need run twice right due triggered github change bot use artifacts feature circleci store built items every pr leave external service triggered circleci making request webhook make decision whether pull artifacts b expose via preview server", "d": "4/2018"}, {"body": "bot could stopped running build however like solution see artifacts downloaded build maintained circleci without code pr also safe solution", "d": "4/2018"}, {"body": "progress", "d": "4/2018"}, {"body": "issue well preventing aot us large application appear happen ultra basic hello world apps specific", "d": "4/2018"}, {"body": "dottodot get solve problem", "d": "4/2018"}, {"body": "believe done closed please reopen", "d": "4/2018"}, {"body": "trying select direct children element query throws works course limited browsers support would fall issue file new ticket", "d": "4/2018"}, {"body": "thanks explanation makes lot sense appreciate feedback", "d": "4/2018"}, {"body": "looks duplicate", "d": "4/2018"}, {"body": "closed", "d": "4/2018"}, {"body": "feel like awful behavior contrast sharply reasonable developer expectation even though apparently bug per se", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "actually seems extend beyond environment files precompiled code extending example provided environmentts appmodulets gets built using precompiled appmodule code loses entire value resulting passed following object instead desired effect nonprod builds assume precompile appmodule", "d": "4/2018"}, {"body": "leblancdavid could help", "d": "4/2018"}, {"body": "believe two problems one confusion class interface versions rx typings incorrect bug fixed upstream", "d": "4/2018"}, {"body": "sure error code duplicate maybe loading root though get circular json serialization issue sure coming nt maybe could fix problem first also take look issue see makes sense duplicate", "d": "4/2018"}, {"body": "actually bug code partly expected behavior overlaps thanks", "d": "4/2018"}, {"body": "use", "d": "4/2018"}, {"body": "sounds good except selectors especially forms quite complex might hard convey clearly without actually showing raw selector work around nt need show otherwise show selector", "d": "4/2018"}, {"body": "see works mockups", "d": "4/2018"}, {"body": "btw believe compute whether directive structural looking classes injected constructor", "d": "4/2018"}, {"body": "possible issues ngcomponentoutlet ngtemplateoutlet nt known structural directive ngswitch ngplural content children companions routeroutlet technically structural directive providing like attribute directive nt perform sideeffects using element selector making weird", "d": "4/2018"}, {"body": "could relax test whether injects would pick agree possible automatically identify via approach", "d": "4/2018"}, {"body": "actually thinking sure much benefiting actually labelling directive structural something explained docs tag able filter structural type nt seem much use imo", "d": "4/2018"}, {"body": "issue need relatively route route current nt find workaround yet except fiddling raw url", "d": "4/2018"}, {"body": "ya current workaround fiddle raw url", "d": "4/2018"}, {"body": "wrote small utility function use guard ts private parseurl url string redirectto string const urltokens urlsplit const redirecttotokens redirecttosplit call following ways ts parseurl foobarbaz qux gt foobarbazqux parseurl foobarbaz qux gt foobarqux parseurl foobarbaz qux gt fooqux parseurl foobarbaz gt foobar first argument pass route want go returned url used might missing edge cases works thought could share", "d": "4/2018"}, {"body": "appreciate updates issue reported", "d": "4/2018"}, {"body": "hi shahulbasha please provide full reproduction cloneable repository certificate setup etc problem visible likely bug cordova angular without proper setup impossible test scenario", "d": "4/2018"}, {"body": "jasonaden getting error different case scenario nt know related angular webpack cli issue seems related using object initializer route object example code using test key inside app routes seems like working using stackblitz using webpack compile working calling collectloadchildren providerusevalue undefined case switch data property string works another strange thing happens compiles first time save live reloading compiled successfully think could related", "d": "4/2018"}, {"body": "jasonaden sure strangely works okay stackblitz nt let mislead download code computer run manually return error console", "d": "4/2018"}, {"body": "usefull feature request addition would nice could pass data redirecting something like path parent children path component parentcomponent path id redirectto parent id id redirectto parent id id pathmatch full know case usefull directly use parentcomponent imagine cases would useful", "d": "4/2018"}, {"body": "looks like server occasionally serves error page agree standalone reproduction needed", "d": "4/2018"}, {"body": "alexbyk think two projects one runs aws cloudfront cdn works perfectly service worker one similar implementation runs server aws instance randomly throws http error gateway timeout works perfect unpredictable instances throws errors ruining user experience web app disable service worker figure issue", "d": "4/2018"}, {"body": "case anyone sees importing serviceworkermodule test module solved thanks", "d": "4/2018"}, {"body": "still working check value model line contain gg kara think ticket reopened", "d": "4/2018"}, {"body": "might duplicate", "d": "4/2018"}, {"body": "maximedupre provide code difficult tell going wrong lines", "d": "4/2018"}, {"body": "facing issue project struggling find reason cd problem great managed find great job would glad see fix soon possible btw setting downgraded components nt actually solve problem case manual setting thing", "d": "4/2018"}, {"body": "naooki pass true first argument case work", "d": "4/2018"}, {"body": "fdim yeah sorry delayed answer tired passing first argument call nt actually fixes issue case make work done said removed true short research found probable reason wrap entire app dummy downgraded component bootstrap module get rid error appears got injector contains reference componentwrapper mentioned therefore prevents setting", "d": "4/2018"}, {"body": "clear case bootstrap module allow usage services also tested simple case everything works fine problem like seems like whenever got component structure like get defined therefore nt set", "d": "4/2018"}, {"body": "think bug feature please see referenced ticket", "d": "4/2018"}, {"body": "thank appears resolved moved examples plnkr stackblitz link live example works correctly still experiencing problems please let us know thanks", "d": "4/2018"}, {"body": "correct know design decision future may expand support interacting sw designed caching solution", "d": "4/2018"}, {"body": "problem using typescript webpack angular ngtoolswebpack compilercli interestingly problem seemed start converting webpack config typescript reverting back javascript resolves problem", "d": "4/2018"}, {"body": "kspearrin issue least case duplicate typings uglifyjs included webpack config js wo nt use typings hence error good know though super important us config ts", "d": "4/2018"}, {"body": "yes think something typings added conversion see commit broke things", "d": "4/2018"}, {"body": "changing webpack configs js sufficient case soon removed typeswebpack typeswebpackmerge packages project bug disappeared finally current ts version projects", "d": "4/2018"}, {"body": "able solve issue disabling aot ngtoolswebpack setting skipcodegeneration option true", "d": "4/2018"}, {"body": "hi samelliottdlt et confused ngtoolswebpack version said wrong version wondering either way keep getting error none workaroundsfixes helped node version amp amp npm version packagejson scripts start rimraf dist amp amp webpackdevserver progress info config configwebpacklocalhostts hot watchfalse hotonly bail profile open keywords author license mit dependencies angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter ngbootstrapngbootstrap typesangular typeslodash typessocketioclient angularconfirmationpopover animatecss bootstrap corejs fontawesome glyphiconshalflings hammerjs lodash moment nodesass ravenjs reflectmetadata rxjs socketioclient typescript typings zonejs devdependencies angularcompilercli ngtoolswebpack typesangular typeschai typescorejs typeshammerjs typesnode typesrx typessocketioclient typeswebpack awesometypescriptloader copywebpackplugin cssloader extracttextwebpackplugin fileloader htmlloader htmlwebpackplugin jasminecore jasminespecreporter karma karmachromelauncher karmajasmine karmaphantomjslauncher karmasourcemaploader karmaverbosereporter karmawebpack liveserver lodash moment ngcwebpack nodesass nullloader phantomjsprebuilt protractor rawloader request rimraf sassloader styleloader supertest tostringloader tsloader tsnode tslint tslintloader typescript typings urlloader webpack webpackbundleanalyzer webpackcli webpackdevserver webpackmerge writefilewebpackplugin repository webpackcommonts used environment webpack configs const webpack require webpack const ngcwebpack require ngcwebpack const htmlwebpackplugin require htmlwebpackplugin const pathpublicfolder assets const extracttextplugin require extracttextwebpackplugin const path require path const copywebpackplugin require copywebpackplugin const regeximagetest pngjpe ggifico const regexfonttest consolelog webpackcommonjs export const commonconfig entry app srcmaints polyfills srcpolyfillsts vendor srcvendorts target web optimization splitchunks cachegroups vendor test nodemodules name vendor chunks initial enforce true resolve extensions js ts html module rules test ngfactoryjsngstylejsts use ngtoolswebpack test js parser system true typescript test ts exclude nodemodules include pathresolve dirname src use ngtoolswebpack templates test html exclude indexhtml use loader rawloader test regeximagetest use loader fileloader options name pathpublicfolder name hash ext test css use styleloader cssloader test scss use extracttextpluginextract fallback styleloader use loader cssloader options trouble urls resolving add setting see url false minimize true sourcemap true loader sassloader options sourcemap true test regexfonttest use fileloader turned linting test ts enforce pre loader tslintloader options loader options go plugins new extracttextplugin name css huh webpacklocalhostts npm start serving local webpack dev server root dir webpackconfigjs consolelog webpacklocalhostts webpack nodeenv processenvnodeenv import commonconfig webpackcommon const webpack require webpack const webpackmerge require webpackmerge const writefileplugin require writefilewebpackplugin var moment require moment note keep var errors const const apihost const socketiohost const sentryioconfig const friendlydate moment format dddd mmmm yyyy h mm ss const path require path const bundleanalyzerplugin require webpackbundleanalyzer bundleanalyzerplugin const angularcompilerplugin require ngtoolswebpack angularcompilerplugin helper function strictly necessary nt like repeating pathjoin dozen times function srcpath subdir return pathjoin dirname subdir moduleexports webpackmerge commonconfig mode development devtool processenvnodeenv production false sourcemap devserver hot true historyapifallback true stats minimal port host localhost false output path pathresolve dirname dist publicpath filename name hash js polyfill vendor appjs chunkfilename id hash chunkjs plugins localhost new webpackdefineplugin processenv env jsonstringify processenvnodeenv api apihost appversion jsonstringify friendlydate socketio socketiohost sentryioconfig sentryioconfig new writefileplugin new bundleanalyzerplugin note needed error thx record fix used hours posted new angularcompilerplugin works diff plugins tsconfigpath tsconfigjson mainpath srcmaints tsconfigjson thanks much", "d": "4/2018"}, {"body": "charlieargue try installing rather rc version set skipcodegeneration true maybe solve issue note great solution least allows us keep development rolling fix shipped run command install latest ngtoolswebpack", "d": "4/2018"}, {"body": "thx samelliottdlt quick response switch using switched last approach compiles modules successfully site never loads angular application sits loading adding following nt help either nothing trying worked without helpluck might go back approach atleast site loads neanderthal web development kill wds making changes vscode lol thanks assistance much appreciated", "d": "4/2018"}, {"body": "hi checking wanted see missed something information could provide help thanks", "d": "4/2018"}, {"body": "boat update fix", "d": "4/2018"}, {"body": "hi guys found solution monkeypatching import see also blog monkeypatching code looks like html windowaddeventlistener function eventtargetprototypeaddeventlistenerapply arguments windowremoveeventlistener function eventtargetprototyperemoveeventlistenerapply arguments documentaddeventlistener function eventtargetprototypeaddeventlistenerapply arguments documentremoveeventlistener function eventtargetprototyperemoveeventlistenerapply arguments", "d": "4/2018"}, {"body": "billskate works thanks", "d": "4/2018"}, {"body": "high sierra updated local cli case issue nt solve", "d": "4/2018"}, {"body": "ronaldmansveld answer correct would write expectation like", "d": "4/2018"}, {"body": "hey vikerman hope well nt time check watch videos ngconf new features progress general case short timeother tasks higher priority possibility assign feature another angular core dev", "d": "4/2018"}, {"body": "dulcetti suppose could try changing pathname tsconfigappjson app definition angularclijson root folder project", "d": "4/2018"}, {"body": "quetzalcoatl yeah needed things looking links sended saw implement thanks", "d": "4/2018"}, {"body": "obsolete since", "d": "4/2018"}, {"body": "anthonybreneliere manage find solution stuck problem custom select component", "d": "4/2018"}, {"body": "fixed see comments info fix", "d": "4/2018"}, {"body": "issue makes crazy ca nt bear angular router many issue around one", "d": "4/2018"}, {"body": "trying higher order component app component router outlet loads child component serves layout named router outlet load named router outlet components gives match routes error trying avoid reload layout every time change url", "d": "4/2018"}, {"body": "look debugging stackblitz viable service worker messes way network error flows", "d": "4/2018"}, {"body": "closed", "d": "4/2018"}, {"body": "collapsed without ngif dealing similar issue never fired even dropped file loaded tab instead staying page", "d": "4/2018"}, {"body": "problem helps angular rxjs", "d": "4/2018"}, {"body": "bumped one today well see issue action cloning edit flip flag run gulp build see evidence workaround applied across community ex", "d": "4/2018"}, {"body": "run problem absolutely another case component addeventlistener elementrefnativeelement scroll event trigger event triggereventhandler de empty hojou yep solution works", "d": "4/2018"}, {"body": "seems fixed", "d": "4/2018"}, {"body": "docareatutorial", "d": "4/2018"}, {"body": "gon na close one fixed", "d": "4/2018"}, {"body": "found workaround issue using decorator method want publish sure solution side effect seems work fine", "d": "4/2018"}, {"body": "hit dev machine hell time figuring happened unregistering service worker nt enough unregister clear cache chrome ever affect end user would nt stand chance", "d": "4/2018"}, {"body": "done", "d": "4/2018"}, {"body": "hey issue list number complains change causes problems", "d": "4/2018"}, {"body": "reached stackshare court", "d": "4/2018"}, {"body": "jasonaden related perhaps", "d": "4/2018"}, {"body": "docareapipes fileguidepipesmd", "d": "4/2018"}, {"body": "closed", "d": "4/2018"}, {"body": "ran issue well today tyholby solution upgrade typescript fixed", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "closed", "d": "4/2018"}, {"body": "nt error anymore angularcli", "d": "4/2018"}, {"body": "know probably get ignored chance registerlocaledata api disappear seriously everyone makes mistakes think big one first english registered default kind message framework conveying default setting english somehow important klingon maybe still think wrong also klingon maybe got wrong load language code want surely seems case languages framework provide accepted nt know anything cldr etc seems absolutely wrong need accept exhaustive list languages somewhere choose want load blarg culture blorg blblo nt tell language exist would even need know even care simple convenient use load map keystranslations come revert stupid", "d": "4/2018"}, {"body": "super happy current api nt good alternative right find one try make work english default commonly used language world also google american needed one language default make simpler use pipes nt care want work use code want added extra parameter lets replace code local want still need register something make work create locale file klingon want use one locale files provide also nt say stupid nt provide alternative constructive would prefer work", "d": "4/2018"}, {"body": "ocombe apologize last statement using angular ngxtranslate long time always productive frustrated see need dedicate time register languages dynamically runtime users able register language need app nt see much value something perfectly correct maintainable previously opinion english commonly used language picky actually wrong mandarin would winner google american users wo nt even need english french spanish actually need remove english alternative think pretty simple nt anything allow people load keystranslations like propose files opt nt even like taxonomy languages done language culture think great people want use forced users especially started app long time ago want upgrade better performance even complaining issue happened aot change also needed make changes using cli started app angular beta long time ago anyway done would go complaint ask break things especially since pleased great work done framework", "d": "4/2018"}, {"body": "hey taking localeid account default value still default en overwritten application value load en", "d": "4/2018"}, {"body": "build cli register language works one locale thinking config cli would load array locales priority since nt see people complaining said still use old pipes prefer rokerkony difficult english loaded build time localeid provider registered runtime one thing thinking would never load english unless pipes used localeid registered possible find typescript transformers build cli", "d": "4/2018"}, {"body": "ocombe thanks pointer register languages need explicitly explained docs make something register additional lang needed application init", "d": "4/2018"}, {"body": "possible get weird behaviors like value input property setted oninit reflected view model start afterviewinit", "d": "4/2018"}, {"body": "upgrade fixes", "d": "4/2018"}, {"body": "working intended", "d": "4/2018"}, {"body": "docsareatesting fileguidetestingmd", "d": "4/2018"}, {"body": "riginoommen hi thank submitting issue apologize taking long reply happen remember area docs using found incomplete incorrect looks like might thank", "d": "4/2018"}, {"body": "hello jenniferfell thanks considering issue place comes multilevel data binding things wo nt work expected something like todo remove modelpropertiesname", "d": "4/2018"}, {"body": "tested ivy rendering feature angular error still appeared", "d": "4/2018"}, {"body": "migrated years old project angular angular trying enabling aot got errors project template access private variables personally justify behavior essential component template single unit thus share variablesstate thread says fixed ivy compiler clearly stated whenif supported question anyone angular ivy team confirm refute private variables templates ever supported new compiler important project decide weather need fix everything wait angular released ok wait month", "d": "4/2018"}, {"body": "elepner fix sure mean single unit share variablesstate aspect exactly properties template interfaces nt bug would nt see would change ivy", "d": "4/2018"}, {"body": "emiliomartinez single unit means self contained uibehavior component exposing little api hiding internal state eg typeahead component many fields binded template like etc would want make public want expose fieldmethods like wpf achieved via class hope angular come conclusion trotyl mentioned thread exactly available ivy accessing private component property template available without losing typechecking checked angular ivy quick view typescript private property ecmascript private fields lexical scoped observed easily quick look position generated code want get official confirmation", "d": "4/2018"}, {"body": "notice possibility use private properties angular made possible bug eliminated later never designed feature", "d": "4/2018"}, {"body": "unfortunately mlcmlapis said works expected imho templatecomponentbinding work private instead public fields otherwise distinguish fieldsmethods templatebinding api componenttocomponent communication maybe discuss new ticket directly related ivy", "d": "4/2018"}, {"body": "makes sense private properties nt available template take advantage feature apps using publicprivate properties differentiate fields used template internal component state used template", "d": "4/2018"}, {"body": "pros cons allowing properties one possible problem usage html hello thisname item quite convincing say another class also mentioned already open issues offtopic", "d": "4/2018"}, {"body": "theodorejb agreed flip side exposes properties broader scope template nt always desired prefer use", "d": "4/2018"}, {"body": "understand conversation became offtopic however good documentation article upcoming ivy specifications rumors like mentioned problem private variables really important team define way work midterm perspective weather use angular upcoming projects ask feature come true ivy nt gave promises personally like leave public api narrow possible declare something public publish hardly change nt want turn conversation feature discussionrequest want get official answer yesno", "d": "4/2018"}, {"body": "reasonable promise anything design ivy could change also could postivy view engine change design", "d": "4/2018"}, {"body": "yes indeed change smallmedium aspects asking conceptual design decision taken single ivy line code written defining developers would write code future something could easily changed someday see answers way try even", "d": "4/2018"}, {"body": "try even interpolation hello world implemented ivy quite long time making promise", "d": "4/2018"}, {"body": "elepner others said use private variables templates nt allowed since really really must keep public api minimum components implement interface apis want exposed use interface whenever reference component elsewhere", "d": "4/2018"}, {"body": "conceptual design decision taken single ivy line code written defining developers would write code future seems philosophical difference opinion ivy currently experimental angular team nt telling anybody start writing production code could change though doubtful sounds like want definitive answer something officially decided yet disagree team whether officially decided point fine think answer even though one want", "d": "4/2018"}, {"body": "answer change decided way angular stick rule ivy fine nt see ivy currently experimental yes claim become default standard mid term perspective angular team nt telling anybody start writing production code could change though doubtful one write even prototype without clear answer question life waste time anyway nt want flood topic anymore hand give false hopes others", "d": "4/2018"}, {"body": "requirement properties accessed template needing nonprivate change see already ivy specs conscious decision ivy really cares passed context going access outside allows bunch potential future use cases templates without components different component models etc wherever possible avoiding special cases favor standard typescript semantics ctx instance fundamentally nothing special", "d": "4/2018"}, {"body": "really organizational reason note usage angular templates enforce separation via decorator could something like html viewmodelfoo could use tslint rule similar enforce constraint see ideas would reasonably trivial thing via linting vs abusinghackingchanging semantics typescript apis", "d": "4/2018"}, {"body": "robwormald know may really considered actually way disallow property usage current ivy design model angular template compilation transforming typescript performing typechecking transformed code mapping diagnostics issue back template code typescript complains nothing angular compiler fail well unless extra efforts", "d": "4/2018"}, {"body": "trotyl true would nt rely behavior yet pretty sure going static class property thing subject change also sure would work ifwhen actually get true private properties javascript", "d": "4/2018"}, {"body": "robwormald technically private fields also lexical scoped could supported well without inconsistency require extra efforts template parser recognize syntax landed typescript first edit true aot supporting private fields impossible jit current decorator allow creating new private fields allowed access literal private fields ones created decorator edit found class decorator access literal private fields new private fields added decorator fine", "d": "4/2018"}, {"body": "sorry offtopic could please take look proposal important missed functionality comparing angularjsvue etc great ivy renderer thank great job anyway", "d": "4/2018"}, {"body": "way thought would nice dedicated website track progress ivy like react created responsive web application url source code based rest api parses statusmd file regularly updated angular team url source code", "d": "4/2018"}, {"body": "describe expected", "d": "4/2018"}, {"body": "resolved ivy already", "d": "4/2018"}, {"body": "way delete specific formarray withou changing initial index active formarray example formgoupname delete instead", "d": "4/2018"}, {"body": "thanks submitting issue looks like resolved use right arrow move example tabs appmodulets example thanks", "d": "4/2018"}, {"body": "igorminar something want try get done part general api reference updates post thanks", "d": "4/2018"}, {"body": "tested angular cli still happens ng new cd ng g serviceworker project npm install save angularserviceworker npm run build access stop server hit refresh unregister service workers localhost first chrome dev tools steps leftovers", "d": "4/2018"}, {"body": "mrcroft nt seem turned service worker via flag please make sure service workers turned working app still issues offline mode open new issue providing necessary info eg minimal reproduction thx", "d": "4/2018"}, {"body": "gkalpak service worker turned checked angularjson generated dist folder enabled appmodule think command nt remember also checked network tab server running says serviceworker also nt think would otherwise anyway tried angular cli still happening nt sure open another issue actually issue one thought reopened rather recreated opened one ps flag think longer part try initially got result also listed found also tried build script packagejson simply ran instead case anybody wondering see build script back run", "d": "4/2018"}, {"body": "updates aforementioned issues", "d": "4/2018"}, {"body": "thx detailed response mrcroft might issue new cli mrcroft jkossis let track", "d": "4/2018"}, {"body": "javarthur hi problem got resolved also facing issue", "d": "4/2018"}, {"body": "hi used workaround explained issue forces old version uglifyjs error occur", "d": "4/2018"}, {"body": "closing nonreproducible", "d": "4/2018"}, {"body": "believe done obsolete due api changes please reopen", "d": "4/2018"}, {"body": "reason last item use new apis packages make providers treeshakable dropped documentation advises use default also new default behavior cli generating services see angular classes like still done old way needing still loaded may confuse users services wo nt need module angular ones still", "d": "4/2018"}, {"body": "cyrilletuzi still wip likely also others followups", "d": "4/2018"}, {"body": "tasks refactoring certain service framework done remaining services refactored upcoming releases without introducing breaking change", "d": "4/2018"}, {"body": "cyrilletuzi matter available time refactoring breaking change deferred risky changes land like help send us pr appreciate small prs convert one related services time best", "d": "4/2018"}, {"body": "igorminar quick look services provided still need import even others refactored treeshakable way came conclusion one angular lib custom config users import services directly without importing ngmodule import ngmodule want custom config confirm supposed work little confusing another angular lib custom config possible empty sure delete keep correct way stay way upcoming things complement treeshakable services mainly reprovide service outside module thanks", "d": "4/2018"}, {"body": "cyrilletuzi heard ngmodule optional guess may user need inject service directly non config service use custom config provide config usevalue config example suppose new api look like typescript export const config new injectiontoken config providedin root injectable providedin root export class fooservice constructor inject config config appmodulets export const customconfig ngmodule providers provide config usevalue customconfig export class appmodule appcomponentts import fooservice lib component export class appcomponent constructor foo fooservice", "d": "4/2018"}, {"body": "cyrilletuzi could use instead keep consistency requirement also configuration decision use static methods configuration way would certainly depends nothing like provideroutes", "d": "4/2018"}, {"body": "sandangel example already possible trotyl serious limitation cli team explicitly discourage see angularangularcli yes question current state keep module static method custom configuration let users provide tokens appmodule like sandangel example pros cons ngmodule static method configuration simpler user inconsistent module custom config module default config let user provide tokens harder user consistent ngmodule needed", "d": "4/2018"}, {"body": "might tangential maybe different issue potential issues treeshakeable providers let consider scenario define abstract class like one build browser app implement service via provide app via ts injectable export class serverconfigparserservice constructor inject request private readonly request request provide via import app browser import reading treeshakeable provider docs see straightforward way could see problem universal think universal similar thing http use nodejs http might wrong think default provider overriding universal case possible maybe missed something docs would achieve possible maybe brainstorm think treeshakeable providers really exciting feature excited trim bundles thanks joe", "d": "4/2018"}, {"body": "josephliccini everything treeshakable classes abstract classes tokens look one exemple localdatabase abstract ngmodule necessary wanting override existing servicetoken come question", "d": "4/2018"}, {"body": "ah see solution bundles implementations case since determines runtime use cool library way cyrilletuzi", "d": "4/2018"}, {"body": "sure mean implemented bundles initial question come third way halfway others classic function returning providers something like typescript import libconfig mylib ngmodule providers libconfig options export class appmodule module inside lib still easy users would like official direction good practice", "d": "4/2018"}, {"body": "mean included universal bundle browser bundle resolved runtime like happen basically browser bundling process inject include bundle way server bundling process inject include bundle way wo nt able means include bundle application runtime decide use something like compiletime would look like ts function configparserfactory platformid string request request isplatformserver platformid return new serverconfigparserservice request lt need service included appserverbundlejs appbrowserbundlejs codepath nt hit runtime else return new browserconfigparserservice lt need service included appserverbundlejs appbrowserbundlejs codepath nt hit runtime injectable providedin root usefactory configparserfactory deps platformid request export abstract class configparserservice public abstract parseconfig id string object make separate issue sorry hijacking thread", "d": "4/2018"}, {"body": "items done master", "d": "4/2018"}, {"body": "know rc integrated angular stable still plan integrate new version currently rc postponed stable", "d": "4/2018"}, {"body": "stable believe angular rxjs still release candidate", "d": "4/2018"}, {"body": "angular several stable releases wonder something team wait launching stable", "d": "4/2018"}, {"body": "current stable version angular depends rxjs version also stable think rxjs angular reach stable almost time well rxjs lead also angular core team", "d": "4/2018"}, {"body": "know rxjs rewrite angular almost sure angular released rxjs added rc version final stable angular schedule early april late pun unintended wonder waiting rxjs going stable one things keeping release well", "d": "4/2018"}, {"body": "rxjs released michaeljota bet issue solved within week", "d": "4/2018"}, {"body": "tasks materialcdk implementations done material cdk partial apf implementation important bits switch ngpackage bazel rule release bring full compliance", "d": "4/2018"}, {"body": "nicowernli says nt issue angular application design", "d": "4/2018"}, {"body": "duplicate", "d": "4/2018"}, {"body": "working solution submit pr near future", "d": "4/2018"}, {"body": "believe resolved already issue closed", "d": "4/2018"}, {"body": "nt think close integration tests run bazel output bazel integration test uses like report", "d": "4/2018"}, {"body": "also seeing problems registering multiple service workers one domain stands able successfully register one service worker nt located root folder trying add basehref deployurl run node server app specified folder ngsw seems configure nt cache application files", "d": "4/2018"}, {"body": "use code loading external js inside", "d": "4/2018"}, {"body": "yeah rahul implemented long back", "d": "4/2018"}, {"body": "closing due inactivity", "d": "4/2018"}, {"body": "behavior definitely confusing use case omitting extra stuff irrelevant error fact needed need adding totally reasonable really hard identify issue error got", "d": "4/2018"}, {"body": "fix planned", "d": "4/2018"}, {"body": "definitely would nt want app continue starting appinitializer returns rejected promise", "d": "4/2018"}, {"body": "stevenliekens promise rejection signal app behave due situation like route component explain user situation controlled state", "d": "4/2018"}, {"body": "way see apps start unless initialized successfully unreasonable", "d": "4/2018"}, {"body": "stevenliekens formulation virtual sense exactly write code uses positive negative logic check many conditions many cases represents successful initialization fact", "d": "4/2018"}, {"body": "would handle rejected promises ca nt return anything appinitializer would even know rejected let alone", "d": "4/2018"}, {"body": "stevenliekens know something like", "d": "4/2018"}, {"body": "runs app still appinitializer phase right place time redirecting error page executing retry logic", "d": "4/2018"}, {"body": "stevenliekens meant synchronously emit something later use app instantiating main component also provider may need decide results continue react user", "d": "4/2018"}, {"body": "describing sounds like lot custom code angular nt provide anything could help us really nt want ignoring rejected promises become default behavior without better framework support handling rejections", "d": "4/2018"}, {"body": "stevenliekens yep agree providers could seen somehow similar top whole app accessible via di place react accordingly", "d": "4/2018"}, {"body": "issue eladh directive selector ngcm export class viradirective extends upgradecomponent constructor elementref elementref injector injector super ngcm elementref injector export class appmodule constructor private upgrade upgrademodule ngdobootstrap app appbootstrap appcomponent thisupgradebootstrap documentbody angularcm appcomponenthtml error error trying get angularjs injector set", "d": "4/2018"}, {"body": "aminrahimi mentioned docs angularjs needs root hybrid part app means ca nt upgraded component inside regular angular component ie inside angularjs component follow docs example bootstrap hybrid app see simple example runnable demo", "d": "4/2018"}, {"body": "try version issue resolved upgrading ver btw issue even release fix somewhere", "d": "4/2018"}, {"body": "docareatutorial url", "d": "4/2018"}, {"body": "kapunahelewong wanted check still looking reassign nt want reassign without connecting first thanks", "d": "4/2018"}, {"body": "hey jenniferfell take care cssagogo extended break back able take closer look friday fyi yay", "d": "4/2018"}, {"body": "complex application component could already extending class still want implement provide small interface shared many components situation would need feature without feature painful refactor make components extend class even nt make sense design current solution tip since one mentioned also need provide baseclass mycomponentts baseclass abstract sure provide line", "d": "4/2018"}, {"body": "thank looks like issue resolved issue shows related commits still issue please let us know thanks", "d": "4/2018"}, {"body": "changes helped packagejson polyfillsts import reflectmetadata import ieshim import import import import import import import import import import import import import import import import import import rxjsbundlesrx import angularcommonbundlescommonumd import angularcompilerbundlescompilerumd import angularplatformbrowserbundlesplatformbrowserumd import angularplatformbrowserdynamicbundlesplatformbrowserdynamicumd requires following ngclass support svg elements import classlistjs run requires following reflect api import evergreen browsers require used reflectmetadata jit use aot angular decorators remove import zone js required default angular import zonejsdistzone included angular cli", "d": "4/2018"}, {"body": "seems hose router ie router completely broken app works polyfills applied", "d": "4/2018"}, {"body": "problem angular dropped back js ts nt seem support spread array construction", "d": "4/2018"}, {"body": "hello issue different context using icon library fontawsome modified issue using issue would mean redo menus buttons etc define html written since css written independently angular application means additional debug loops issues detected app visible styling definitions us big problem please raise issue feature bug also default option vicb", "d": "4/2018"}, {"body": "similar issue facing understand may necessary provide service module level able access resolversguards however least want service cleaned upon component destruction example userservice accessible inside lazy loaded module call mainmodule logincomponent declared appmodule first login able reach mainmodule logout app effectively go back logincomponent relog go back mainmodule userservice get destroyed reinstatiated service variables etc userservice still living memory log ideally ngondestroy hook maincomponent toplevel component mainmodule call function destroys userservice solution help would appreciated", "d": "4/2018"}, {"body": "update resolve", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "confirm case passing undefined value httpheadersset good", "d": "4/2018"}, {"body": "thank works like magic fails work deployment application done cloud locahost works smooth", "d": "4/2018"}, {"body": "seem issue using material spinner used entry component aot builds", "d": "4/2018"}, {"body": "ohjames could try use typescript mixins sure works angular without workarounds", "d": "4/2018"}, {"body": "genaantg hi tested angular problem still happens advance side", "d": "4/2018"}, {"body": "genaantg solved problem added answer stackoverflow question hope helps", "d": "4/2018"}, {"body": "hi jeremy came back see status issue really like implemented mid time leave preloadingstrategy used achieve lazy loading nested modules wanted first context requirements app needed lazy load detail module user successfully logs detail module subsections different modules subsection modules also lazy loaded reffered detail module routing finally subsection modules available users depending permissions user subsections innaccesible modules nt load user logs load subsections allowed see logs another user logged higher permissions ie could see module still unloaded load somepermissionsservice stream permissions observer subscribe check time logged user permissions change three types module loading modules preloaded start permissions needed property modules preloaded user permission setting property eager loaded modules could achieve exactly wanted strategy selectivepreloadingstrategyts injectable export class selectivepreloadingstrategy implements preloadingstrategy private preloadedmodules string private subscriptions k string constructor private permissionsservice somepermissionsservice preload route route load gt observable observable routedata amp amp routedata preload thispreloadedmodulespush routepath return load else routedata amp amp routedata requestedpermission thissubscriptions routepath thispermissionsservicepermissions subscribe permisos gt permisoshasownproperty routedatarequestedpermission thissubscriptions routepath thissubscriptions routepath unsubscribe thispreloadedmodulesincludes routepath thispreloadedmodulespush routepath return load return thissubscriptions routepath return observableof null approutingmodule take look part private preloadedmodules string private subscriptions k string constructor private permissionsservice somepermissionsservice preloadedmodules subscriptionspermissionsservice service provide us permissions observable module set always preloaded else route property set create subscription path dictionary return observer time permissions emitted new user contains one needed preload module unsubscribe path module subscription check module nt preloaded add array load necessary check preloading reason observer module firing twice unsubscribing finally module preloaded first project handling observers probably better ways achiving worked charm without performance memory issues hope helps", "d": "4/2018"}, {"body": "robwormald include polyfills spfx webpart tried adding external configjson luck tried importing webpartts file luck component works great chrome also users using ie well sure works spfx webparts work angular elements sure tutorials angular elements yet get started help would greatly appreciated close working angular webpart still issues polyfills party controls since change detection turned modify source party controls work spfx sure going elements spfx", "d": "4/2018"}, {"body": "still zones turned use angular elements sharepoint spfx nt see useful sharepoint reason using party controls far every control used go source add detectchanges place order controls work ngzone noop zones turned another issue ca nt get anything render ie clue get polyfills work spfx tried adding js files externals tried importing webpartts files nothing renders ie still popular gov clients unfortunately running time project spend much time fighting framework sets controls one set full page apps another set controls work zones turned spfx detectchanges place hoping elements help solve issue anyone please help getting spfx angular render ie", "d": "4/2018"}, {"body": "johnfabian questions specific spfx best asked one spfx repos nt huge amount experience feel free cc happy talk end zones things experimental zones spfx theoretically play together nicely need sure one copy zonejs like one copy various polyfills", "d": "4/2018"}, {"body": "mickl hard give accurate estimates get quoted internet forever reasonably accurate estimation yes simple todomvc apps components around right lot legacy stuff still bundle", "d": "4/2018"}, {"body": "hi considering use angular elements project one question would like two angular elements components somewhere outnon angular application worndering two angluar elements components share data eg two components would share cached http service question could use one cache course could storing cache window object ist angularionic solution planned thanks lot best john", "d": "4/2018"}, {"body": "robwormald hey rob tried reuse angular elements inside another angular project problem cant make property binding work custom element imported somewhere else think nt know something important even possible", "d": "4/2018"}, {"body": "content projection injecting parent element custom elements smth like tabs injecting tabscomponent component inside tabcomponent using contentchildren inside tabscomponent", "d": "4/2018"}, {"body": "elements able use shared injector could share service gogakoreli inside angular template enforce typechecking ngmodule want use ce artaommahe works limited fashion though alternately use native api content projection", "d": "4/2018"}, {"body": "thank info actually talking one way two way property binding angular custom element imported inside project possible use bindings", "d": "4/2018"}, {"body": "robwormald parent injection case contentchild support planned", "d": "4/2018"}, {"body": "robwormald think important create comprehensive documentation topic current documentation angular elements basic nt tell restrictions think great danger angular elements raise high expectations disappoint people bad documentation many people nt dive deep topic read documentation", "d": "4/2018"}, {"body": "anyone feedback demo limitations looking use pattern complex angular component shared custom element used react ember places whether size nt matter component takes page anyway almost app make things challenging completely new angular refugeeconvert react land cc robwormald", "d": "4/2018"}, {"body": "alxhub reason supporting http authentication mean would change newrequest method adpater class following httpauthentication tested windows authentication works", "d": "4/2018"}, {"body": "also interested reason supporting http authentication tried using edit provided worked windows using nginx server response alxhub soon may try creating pull request feature", "d": "4/2018"}, {"body": "response alxhub filed new issue pull request refer bug", "d": "4/2018"}, {"body": "definitely check animatechild example two animations happen sequence notice order transition array determines child animation gets fired first case going inactive gt active parent container animates first going back inactive reverse happens child inmates parent elements transition array happen sequentially one waits first finish animating mrwolfz says putting group sequentially blah", "d": "4/2018"}, {"body": "gkalpak even facing issue please find screenshot found following error console uncaught promise typeerror read property match undefined feel free ask details", "d": "4/2018"}, {"body": "gkalpak nakulnagariy removed cache working fine", "d": "4/2018"}, {"body": "issue change ng build prod aotfalse ng build prod buildoptimizerfalse", "d": "4/2018"}, {"body": "hi folks issue facing anyone let know best solution one uncaught error unexpected value httpclient imported module appmodule please add ngmodule annotation", "d": "4/2018"}, {"body": "solution ng build prod buildoptimizerfalse sent mail windows sohanyugasa notifications githubcom sent saturday april angularangular cc miguel peguero comment subject angularangular angular error unexpected value imported module please add ngmodule annotation hi folks issue facing anyone let know best solution one uncaught error unexpected value httpclient imported module appmodule please add ngmodule annotation receiving commented reply email directly view github mute thread", "d": "4/2018"}, {"body": "updates anything help", "d": "4/2018"}, {"body": "plunkr broken still issue child leave animations firing query", "d": "4/2018"}, {"body": "plunkr fixed", "d": "4/2018"}, {"body": "verifies object interface compile time object code fetches runtime verified case things like httpclientget return observable return observable actually returned trying state returns returns object misleading client return says reality say get back got back would actually look another way wrote typescript export class widget getvalue input string return new string let thisshouldbeadate new widget getvalue would expect call method return object reason returned string exceptionally confused least jsdocs httpclient need change note generic purely ide meaningful impact actual object returned developer create translation objectsmethodsinterceptors httpclient calls contain anything base types", "d": "4/2018"}, {"body": "iamwyza interestingly last paragraph reveals antipattern something compensate bad design pattern like saying angular developers decided nt want right way least let us know hack around saying insulting indeed happening antipattern common response recurring problem usually ineffective risks highly counterproductive", "d": "4/2018"}, {"body": "seeing error chrome mac well progress definitely blocker service worker pwa support prodution", "d": "4/2018"}, {"body": "experiencing bug samsung internet browser angularcli angularserviceworker first page load fine refresh get site ca nt reached error page cleaning cookies site data reload fixes issue next page refresh", "d": "4/2018"}, {"body": "experiencing angularcli angularserviceworker", "d": "4/2018"}, {"body": "experiencing angularcli angularserviceworker mobile safari uiwebview mobile facebook browser chrome mobile android chrome mobile android tested browsers device page never loads solution", "d": "4/2018"}, {"body": "created pr add detail call long call call long call also work sample found ca nt pass", "d": "4/2018"}, {"body": "coming along", "d": "4/2018"}, {"body": "also problem fix helps plans merge", "d": "4/2018"}, {"body": "problem strongly disagree replacing error call bandaid fix hides underlying problem better fix would changing router call outlet already activated", "d": "4/2018"}, {"body": "sure solution work without earlier version node ca nt find packagesroutersrcdirectivesrouteroutletts routersrcdirectivesrouteroutletd different might try put second named outlet first outlet open empty component first open new one outlet way manually deactivate outlet later node versions", "d": "4/2018"}, {"body": "ah add structural directive ngif angular deactivate rendered", "d": "4/2018"}, {"body": "configs similar follows works errors even without fixes approutingts dashboardroutingts acountroutingts", "d": "4/2018"}, {"body": "solved issue", "d": "4/2018"}, {"body": "hello well upgrade angular angular problem appears production mode annoying everyone developers", "d": "4/2018"}, {"body": "similar problem easy reproduce happens production environment also angular seems like happening also versions looks like could bug angular maybe provide info could helpful fixing investigating interesting thing easily reproduce bug using andreyjamer plunkr whereas problem application happens certain environments cases firefox", "d": "4/2018"}, {"body": "hi yeah also problem certain environments previously build app using nodejs met problem production env several days ago upgraded angular node see problem production plunkr reproduces part app load credentials backend make editable ui firefox angular deals data user login data shows save login prompt every navigation action page reloaded also today fighting another dumb thing browsers autofill user credentials fields load backend sometimes blank browsers think authorization form autofill saved login password breaks change check way restrict browsers found dumb solution fix added code login password fields browsers still autofill invisible fields got interesting side effect fixed issue prompt window problem try solution looks likely hack nt better way solve", "d": "4/2018"}, {"body": "updates ocombe discussion igorminar", "d": "4/2018"}, {"body": "ship files umd files work fine server side nt tested though try", "d": "4/2018"}, {"body": "ocombe sorry thought discussion patching bad", "d": "4/2018"}, {"body": "yes issue observed", "d": "4/2018"}, {"body": "di router behavior strange", "d": "4/2018"}, {"body": "understand intended behavior httpclientmodule imported per module resulting ability provide individual interceptors per httpclient without impacting others like share interceptors modules import app module import feature modules correct", "d": "4/2018"}, {"body": "mobiletainment know alex wants make change avoid also summary valid lazy loaded modules eagerly loaded ones", "d": "4/2018"}, {"body": "believe way works inconsistencies console prints gundefined amp nnull null null null undefined null inconsistency works differently pass object set inconsistency konw whether n params pget n params returns thing pget b hence allowing sanitise params manually", "d": "4/2018"}, {"body": "dears updates arabic numbers support know done update angular version", "d": "4/2018"}, {"body": "philipnady think digaus done use angular still work angular removed nt tested think work", "d": "4/2018"}, {"body": "nt removed totally forgot safe hopefully alternative", "d": "4/2018"}, {"body": "also problem reproduce issue change routereusestrategy reuse components activate event routeroutlet triggered component created first time navigate away come back component reused activate event triggered", "d": "4/2018"}, {"body": "issue option clean solution side", "d": "4/2018"}, {"body": "partially fixed see followup", "d": "4/2018"}, {"body": "closing obsolete", "d": "4/2018"}, {"body": "docareatesting docareatutorial", "d": "4/2018"}, {"body": "hi callawey added code snippet ngmodule imports section appmodulets httpclientinmemorywebapimoduleforroot inmemorydataserviceservice dataencapsulation false", "d": "4/2018"}, {"body": "included import observable rxjsobservable import rxjsaddoperatormap still error map res response gt resjson using ionic v", "d": "4/2018"}, {"body": "error caused introducing works ng serve ng build prod solution simply removing project nt really use anyways", "d": "4/2018"}, {"body": "solve following two steps import browsermodule angularplatformbrowser imports browsermodule", "d": "4/2018"}, {"body": "verify code one import browsermodule angularplatformbrowser import ngmodule angularcore import httpclientmodule angularcommon ngmodule declarations imports browsermodule providers bootstrap appcomponent code resolve issue", "d": "4/2018"}, {"body": "app module import formsmodule angularforms import http httpmodule angular import httpclientmodule angularcommon ngmodules imports httpmodule httpclientmodule formsmodule worked", "d": "4/2018"}, {"body": "use httpmodule provider instead http register services", "d": "4/2018"}, {"body": "spend lot time trying figure error tried suggestions non worked code solution adding service providers appmodulets providers clientservice", "d": "4/2018"}, {"body": "fixed change appmodulets import browsermodule angularplatformbrowser import ngmodule errorhandler angularcore import ionicapp ionicmodule ionicerrorhandler ionicangular import httpclientmodule angularcommon import myapp appcomponent import userspage pagesusersusers import repospage pagesreposrepos import organisationspage pagesorganisationsorganisations import statusbar ionicnativestatusbar import splashscreen ionicnativesplashscreen import githubusersprovider providersgithubusersgithubusers import peopleserviceprovider providerspeopleservicepeopleservice ngmodule declarations myapp userspage repospage organisationspage imports httpclientmodule browsermodule ionicmoduleforroot myapp bootstrap ionicapp entrycomponents myapp userspage repospage organisationspage providers statusbar splashscreen provide errorhandler useclass ionicerrorhandler githubusersprovider peopleserviceprovider export class appmodule provider service file import httpclient angularcommon import injectable angularcore import http response headers requestoptions urlsearchparams angular import observable rxjsrx import rxjsaddoperatormap import user modelsuser injectable export class githubusersprovider githubapiurl constructor private httpclient consolelog hello githubusersprovider provider load observable thisgithubapiurl users map res gt", "d": "4/2018"}, {"body": "add httpclientmodule instead", "d": "4/2018"}, {"body": "sure getting love fixed figured add solution might little specific us especially deleting falsey values request mimic happening previous version", "d": "4/2018"}, {"body": "closing since sounds like resolved", "d": "4/2018"}, {"body": "topic entirely correct exported docs also exported public api real issue public class public constructor accepts private interface problem fix super easy", "d": "4/2018"}, {"body": "even universal tags update properly title example updates browser tab source tool like browseonet meta tags prerender build", "d": "4/2018"}, {"body": "plans fixing issue", "d": "4/2018"}, {"body": "quick update displayingdata appears updated approot lifecyclehooks still uses mychild search needs done source angulariodocs site correctly locate remaining instances", "d": "4/2018"}, {"body": "hi kara speaking ngconf said issue reopened flagsoptions nt sent writevalue order pass forward value adjustment necessary also mentioned separate parsers issue may able resolve value change reaching control", "d": "4/2018"}, {"body": "jsmike thanks taking time explain use case", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "also working angular ts class test transform value gt plaintoclass applicationdata jsonparse value toclassonly true transform value gt jsonstringify classtoplain value toplainonly true data applicationdata", "d": "4/2018"}, {"body": "managed simple way solution requrlindexof lt req thisgetmodifiedreq req request full url need add interceptor request modified otherwise simple request need", "d": "4/2018"}, {"body": "angular pipes help internationalization datepipe currencypipe decimalpipe percentpipe use locale data format data based localeid default angular contains locale data enus set value localeid another locale must import locale data new locale cli imports locale data use parameter locale ng serve ng build want import locale data languages manually srcappappmodulets contentcopy import registerlocaledata angularcommon import localefr angularcommonlocalesfr registerlocaledata localefr files angularcommonlocales contain locale data need advanced formatting options might available extra dataset import angularcommonlocalesextra error message informs case srcappappmodulets contentcopy import registerlocaledata angularcommon import localefrca angularcommonlocalesfrca import localefrcaextra angularcommonlocalesextrafrca registerlocaledata localefrca localefrcaextra locale name old locale id new locale id indonesian id hebrew iw romanian moldova mo romd norwegian bokm\u00e5l nono nb serbian latin sh srlatn filipino tl fil portuguese brazil ptbr pt chinese simplified zhcn zhhanscn zhhans chinese traditional zhtw zhhanttw zhhant chinese traditional hong kong zhhk zhhanthk portugues use snippet beleza import ngmodule localeid angularcore import localept angularcommonlocalespt import hashlocationstrategy locationstrategy registerlocaledata angularcommon registerlocaledata localept pt providers provide localeid usevalue pt", "d": "4/2018"}, {"body": "hi import locate pt like show date formated pt currencypipe still enus appmodulets import localept angularcommonlocalespt import localeextrapt angularcommonlocalesextrapt import registerlocaledata angularcommon registerlocaledata localept pt localeextrapt providers provide localeid usevalue pt idea", "d": "4/2018"}, {"body": "example maybe stackblitz", "d": "4/2018"}, {"body": "yes ocombe writed exemple see symbol dont change r", "d": "4/2018"}, {"body": "currency nt change language use different currency code stackblitz example still french example formatting changes pipe nt convert value currency", "d": "4/2018"}, {"body": "true though aot already bigger though size important use gzip got though functional question", "d": "4/2018"}, {"body": "solve following two steps import browsermodule angularplatformbrowser imports browsermodule", "d": "4/2018"}, {"body": "stuck hell fuk bitch help guys exact matching solution solutions hot hell need proper help error error staticinjectorerror appmodule appcomponent angularfiredatabase staticinjectorerror platform core appcomponent angularfiredatabase nullinjectorerror provider angularfiredatabase nullinjectorget resolvetoken tryresolvetoken staticinjectorget resolvetoken tryresolvetoken staticinjectorget resolvengmoduledep ngmodulerefget resolvedep please reply comment know makes shit", "d": "4/2018"}, {"body": "npm typescript savedev", "d": "4/2018"}, {"body": "spent hour trying get single test singe query param work avail tried solutions getting error expected one matching request criteria match function found none tests without query params work shame spend time test commented code", "d": "4/2018"}, {"body": "matsko hi expect see resolve soon forget using angular animation animation customised runtime fit application requirements", "d": "4/2018"}, {"body": "progress", "d": "4/2018"}, {"body": "hi parameters inside stagger nt work would fixed problem still persist thank", "d": "4/2018"}, {"body": "super sad sad face", "d": "4/2018"}, {"body": "issue angular cli upgrading app built successfully angular issue resolved", "d": "4/2018"}, {"body": "totally relevant way allow styles moment entirely trust input use case displaying user input rich text editor want strip dangerous bits javascript resourceurl keep style attributes intact", "d": "4/2018"}, {"body": "missing information reproduction closing", "d": "4/2018"}, {"body": "issues app using injectable module component imported declared exported still throwing error trying run ng build prod happening several components different modules javascript import customelementsschema ngmodule noerrorsschema angularcore import dummycomponent systemfilesdummycomponent imports ngmodule imports dummyroutingmodule modules declarations dummycomponent componets exports dummycomponent providers dummyservice services schemas customelementsschema noerrorsschema export class dummymodule", "d": "4/2018"}, {"body": "titaneboy probleme stuck options net errconnectionrefused photo server front end side tell use debug like node js thnx", "d": "4/2018"}, {"body": "example using applicationxwwwformurlencoded use form encoding created httpformencodingcodec encodedecode properly import httpparametercodec angularcommon export class httpformencodingcodec implements httpparametercodec encodekey k string string return encodeuricomponent k replace dopost description name headers httpheaders new httpheaders append contenttype applicationxwwwformurlencoded const body new httpparams encoder new httpformencodingcodec append description description append name name tostring going use httpformencodingcodec several times create class constructor reuse hope helps ps guess httpclient implements encoders url amp form create formparams used instead httpparams want use applicationxwwwformurlencoded", "d": "4/2018"}, {"body": "matsko chance check stackblitz", "d": "4/2018"}, {"body": "still facing issue local production deployment", "d": "4/2018"}, {"body": "foxandxss wardbell hi really useful still current far know thanks brandonroberts hi think testing universal captured routing leaves glossary typescript vs qs work follow believe", "d": "4/2018"}, {"body": "believe everything done jennifer one nt really recall typescript one super old still even", "d": "4/2018"}, {"body": "problem bug could lead unsolvable issues example work could bigger issue even add animation ngcontainer tried everyting workaround", "d": "4/2018"}, {"body": "confirm rfc http section delete method type specific reference delete entity payload quite opposite one mentioned response client left open interpretation backend frameworks spring mvc support delete payload certainly nt implement therefore one free pleases sending http request method delete payload expect server side actually lookup payload entity part rfc matter mdn say mdn control http protocol", "d": "4/2018"}, {"body": "paulbors referring outdated version document notice obsoleted section document header date version already mentioned rellisofrhindleton says payload within delete request message defined semantics sending payload body delete request might cause existing implementations reject request", "d": "4/2018"}, {"body": "regardless neither one rfc state clear delete payload latest rfc warns implementation http interpreted", "d": "4/2018"}, {"body": "ingredient adding form shopping list change add button type submit button fine", "d": "4/2018"}, {"body": "nothing new four months later racking brain one week getting issue considering lot important use cases case authentication roles issue handled", "d": "4/2018"}, {"body": "got error upgrading app addition upgrading cli dependencies devdependencies update old new calling", "d": "4/2018"}, {"body": "odolha issue well glad spent day took min find post reason removed polyfill comment polyfill says optimizing aot deployment got rid completely forgetting local development using ngserve still using jit thank sir", "d": "4/2018"}, {"body": "thank link plnkr replaced link stackblitz coding change made use oninit resolved errors another issue opened track proposal change example one nt use ad ad blockers nt break example closing duplicate thanks", "d": "4/2018"}, {"body": "spentak able resolve issue yes please provide solution", "d": "4/2018"}, {"body": "confirm issue still exists resolve problem appear respond change component properties drive condition live component works expected purely confined unit tests stand alone component component mockwrapped unit test input changed wrapper component change detection triggered works expected unit tests jrmcdona reopen issue edit angular", "d": "4/2018"}, {"body": "alright case narrowed one could consider arguably expected behaviour component testing change respond forced changes public component properties", "d": "4/2018"}, {"body": "reproduction given closing issue please reopen repro get one", "d": "4/2018"}, {"body": "somebody solution", "d": "4/2018"}, {"body": "encountered issue combining css selectors inside hostcontext using aot build cli gt bgotink comment solved issue also aot build cli thanks instead hostcontext closed li hover use closed li hover hostcontext", "d": "4/2018"}, {"body": "thanks kara calling inside event handler working waited tick", "d": "4/2018"}, {"body": "would love see feature", "d": "4/2018"}, {"body": "trying send multidimensional array api angular nt let total rubbish time time get baffled simple things complicated possible angular totally regretting picking something else like react", "d": "4/2018"}, {"body": "following code appear headers object ie collections empty trace network call headers sent", "d": "4/2018"}, {"body": "facing issue", "d": "4/2018"}, {"body": "happysamyak could provide reproduce repo thank", "d": "4/2018"}, {"body": "trying migrate project ca nt share full codebase routing functionality boostraping bootstrapping platformbrowserdynamic bootstrapmodule appmodule platformref gt consolelog appmodule bootstrapped const upgrade platformrefinjectorget upgrademodule upgrademodule upgradebootstrap documentbody ccuiapp strictdi true consolelog bootstrapping finished setuplocationsync upgrade platformrefinjectorget router initialnavigation ngmodule export class implements urlhandlingstrategy shouldprocessurl url consolelog url urltostring return urltostring startswith screensswitchconfigurationhtml extract url merge url whole return url const mydirectives documentstarsdirective const approutes routes path screensswitchconfigurationhtml component ngmodule providers documentsservice provide urlhandlingstrategy useclass declarations appcomponent documentsservice mydirectives imports browsermodule upgrademodule routermoduleforroot approutes usehash false initialnavigation false enabletracing true exports routermodule entrycomponents appcomponent error error rootscope infdig h digest h apply ccuicmnminjs objectexeccb requireminjs zcheck requireminjs zenable requireminjs zinit requireminjs requireminjs zonedelegatewebpackjsonpnodemoduleszonejsdistzonejszonedelegateinvoketask anonymous anonymous apply anonymous ccuicmnminjs execcb requireminjs check requireminjs enable requireminjs init requireminjs anonymous requireminjs webpackjsonpnodemoduleszonejsdistzonejszonedelegateinvoketask oninvoketask webpackjsonpnodemoduleszonejsdistzonejszonedelegateinvoketask webpackjsonpnodemoduleszonejsdistzonejszoneruntask webpackjsonpnodemoduleszonejsdistzonejszonetaskinvoketask zonetaskinvoke timer settimeout async scheduletask webpackjsonpnodemoduleszonejsdistzonejszonedelegatescheduletask onscheduletask webpackjsonpnodemoduleszonejsdistzonejszonedelegatescheduletask webpackjsonpnodemoduleszonejsdistzonejszonescheduletask webpackjsonpnodemoduleszonejsdistzonejszoneschedulemacrotask schedulemacrotaskwithcurrentzone anonymous proto anonymous function lnexttick requireminjs requireminjs requirejs requireminjs anonymous ccuicmnminjs anonymous q anonymous u u anonymous eval digest apply anonymous ccuicmnminjs execcb requireminjs check requireminjs anonymous requireminjs anonymous requireminjs anonymous requireminjs requireminjs emit requireminjs check requireminjs enable requireminjs init requireminjs e requireminjs completeload requireminjs onscriptload requireminjs webpackjsonpnodemoduleszonejsdistzonejszonedelegateinvoketask oninvoketask webpackjsonpnodemoduleszonejsdistzonejszonedelegateinvoketask webpackjsonpnodemoduleszonejsdistzonejszoneruntask webpackjsonpnodemoduleszonejsdistzonejszonetaskinvoketask invoketask globalzoneawarecallback error async customscheduleglobal webpackjsonpnodemoduleszonejsdistzonejszonedelegatescheduletask onscheduletask webpackjsonpnodemoduleszonejsdistzonejszonedelegatescheduletask webpackjsonpnodemoduleszonejsdistzonejszonescheduletask webpackjsonpnodemoduleszonejsdistzonejszonescheduleeventtask anonymous lload requireminjs load requireminjs load requireminjs fetch requireminjs check requireminjs enable requireminjs enable requireminjs anonymous requireminjs anonymous requireminjs requireminjs enable requireminjs init requireminjs anonymous requireminjs webpackjsonpnodemoduleszonejsdistzonejszonedelegateinvoketask oninvoketask webpackjsonpnodemoduleszonejsdistzonejszonedelegateinvoketask webpackjsonpnodemoduleszonejsdistzonejszoneruntask webpackjsonpnodemoduleszonejsdistzonejszonetaskinvoketask zonetaskinvoke timer settimeout async scheduletask webpackjsonpnodemoduleszonejsdistzonejszonedelegatescheduletask onscheduletask webpackjsonpnodemoduleszonejsdistzonejszonedelegatescheduletask webpackjsonpnodemoduleszonejsdistzonejszonescheduletask webpackjsonpnodemoduleszonejsdistzonejszoneschedulemacrotask schedulemacrotaskwithcurrentzone anonymous proto anonymous function lnexttick requireminjs requireminjs requirejs requireminjs anonymous ccuicmnminjs anonymous q anonymous u u anonymous eval digest apply anonymous dispatch h webpackjsonpnodemoduleszonejsdistzonejszonedelegateinvoketask oninvoketask webpackjsonpnodemoduleszonejsdistzonejszonedelegateinvoketask webpackjsonpnodemoduleszonejsdistzonejszoneruntask webpackjsonpnodemoduleszonejsdistzonejszonetaskinvoketask invoketask globalzoneawarecallback error error rootscope infdig h digest h apply ccuicmnminjs objectexeccb requireminjs zcheck requireminjs zenable requireminjs zinit requireminjs requireminjs zonedelegatewebpackjsonpnodemoduleszonejsdistzonejszonedelegateinvoketask", "d": "4/2018"}, {"body": "isdrainingmicrotaskqueue function getting updated entries completion loop never ending function function drainmicrotaskqueue isdrainingmicrotaskqueue isdrainingmicrotaskqueue true microtaskqueuelength var queue microtaskqueue microtaskqueue var lt queuelength var task queue try taskzoneruntask task null null catch error apionunhandlederror error apimicrotaskdraindone isdrainingmicrotaskqueue false", "d": "4/2018"}, {"body": "happysamyak know function still need reproduce repo could try make small sample repo describe issue thank", "d": "4/2018"}, {"body": "sorry jialipassion possible", "d": "4/2018"}, {"body": "happysamyak ok try look code", "d": "4/2018"}, {"body": "sorry jialipassion possible let know share file related angular seems like issue url encoding default decodes url read current url decoded next one currentconfigpath mmmynode nextconfigpath", "d": "4/2018"}, {"body": "happysamyak ok thank information could check stacktrace infinite loop occurs print check comment", "d": "4/2018"}, {"body": "taskcallbacktostring function try var parentpromisevalue promise symbolvalue var isfinallypromise chainpromise amp amp symbolfinally chainpromise symbolfinally isfinallypromise promise generated finally call keep parent promise state value chainpromise symbolparentpromisevalue parentpromisevalue chainpromise symbolparentpromisestate promisestate pass value finally callback var value zonerun delegate undefined isfinallypromise amp amp delegate forwardrejection amp amp delegate forwardresolution parentpromisevalue resolvepromise chainpromise true value catch error error occurs always return error resolvepromise chainpromise false error", "d": "4/2018"}, {"body": "got working decoding url read angular updating encoded url triggers infinite call angular router currently overrides default urlserializer worked import urlserializer urltree defaulturlserializer angularrouter export class customurlserializer implements urlserializer parse url urltree let dus new defaulturlserializer return dusparse url thanks jialipassion samyak", "d": "4/2018"}, {"body": "happysamyak great provided useful information developers", "d": "4/2018"}, {"body": "andyrue yes set content length header backend get total thanks man", "d": "4/2018"}, {"body": "recurrence angular rxjs", "d": "4/2018"}, {"body": "issue", "d": "4/2018"}, {"body": "worked maintained query params navigation events navigation events contain query param string", "d": "4/2018"}, {"body": "thank think issue resolved uses oninit still experiencing problem please open new issue thank", "d": "4/2018"}, {"body": "im seeing issue bundling closure compiler angular ngc watch works fine browseranimationsmodule resolves requesting umd module bundled closure compiler importing appmodule using post example repo soon cant figure fix", "d": "4/2018"}, {"body": "error referencing nomoreexisting trigger template looks like problems also mistakes definingdeclaring triggersstates real issue cases missleading error message stackblitz error missing trigger throw error message modules", "d": "4/2018"}, {"body": "hi inserted routertransition file import trigger state animate style transition angularcore export function appmoduleanimation return slidefrombottom export function accountmoduleanimation return slidefromup export function slidefrombottom return trigger routertransition state void style paddingtop opacity state style paddingtop opacity transition enter animate easeout style opacity paddingtop export function slidefromup return trigger routertransition state void style margintop opacity state style margintop opacity transition enter animate easeout style opacity margintop", "d": "4/2018"}, {"body": "confirmed receive error chrome firefox edge chrome version version official build edge version microsoft edge firefox version code question see issue marked closed however still seem issue described let know require information", "d": "4/2018"}, {"body": "dkosasih nt code", "d": "4/2018"}, {"body": "news issue kgrvr stated aot build works well hard coded routes ca nt seem able use variables", "d": "4/2018"}, {"body": "use exported consts aot kgrvr example export const signin string signin path signin component signincomponent work use functions even exported calculate route however use exported arrays objects map paths", "d": "4/2018"}, {"body": "mateuszsawit ok thank intel happens declare function give constant value returned function", "d": "4/2018"}, {"body": "nt remember result get error least working const typescript means value change declaration variable declared function call aot compiller need know value copile time execution time function called", "d": "4/2018"}, {"body": "vilic trichetriche matcher route config accepts function provide exported function find example doc whenever som ngmodule config accepts function aot needs exported function inlined verify works think thread closed", "d": "4/2018"}, {"body": "well tried exactly posted tried string value exported const object different file nt work understood mateuszsawit explained related function call using string value const exported object", "d": "4/2018"}, {"body": "ok post code using small repo working approutingts import productroutes appproductroutes const routes path component canactivate authguard path component homecomponent pathmatch full otherwise redirect home path redirectto ngmodule imports routermoduleforroot routes exports routermodule export class approutingmodule appmodulets import approutingmodule approuting ngmodule imports approutingmodule bootstrap appcomponent export class appmodule appproductroutests export const export const export const", "d": "4/2018"}, {"body": "ya exporting individual constant string like", "d": "4/2018"}, {"body": "objectfreeze function call probably could use export const routingconstant signin signin appproductroutests defining constants nt need define object import productroutes makes available object", "d": "4/2018"}, {"body": "oh ya objectfreeze function call got okay try recommended thanks", "d": "4/2018"}, {"body": "find solution yet mohitkanerika facing error", "d": "4/2018"}, {"body": "informative conversation keep", "d": "4/2018"}, {"body": "closing reproduction provided", "d": "4/2018"}, {"body": "issue breaks password flow emails presumably passwords plus", "d": "4/2018"}, {"body": "limpep hi please share problem backend server issue using apache", "d": "4/2018"}, {"body": "solution quite simple using switched everything started working expected hope helps", "d": "4/2018"}, {"body": "bendee solved problem thanks man", "d": "4/2018"}, {"body": "closing errors anymore info seems opposite problem object detected potentially", "d": "4/2018"}, {"body": "nt think fixed templates least see previous comment nt run language service directly guess via vs code salsa still get warnings statements would compile cleanly nontemplate file context example would red squiggle defined language service nt treat narrowing type even though actual compiler would better reopen issue open new issue specific errors template", "d": "4/2018"}, {"body": "would love ticket addressed meantime pretty decent workaround came wrote interceptor handling http error responses wanted allow individual http calls instruct interceptor ignore certain response status codes also retaining ability pass normal params http call solution ended solution allows following use extend httpparams example interceptor", "d": "4/2018"}, {"body": "stephenfluin followed steps reproduce problem today chrome work done example nt think expected fully resolve problem related info even working right situations inclined keep open change example adsafe think thanks", "d": "4/2018"}, {"body": "jenniferfell able reproduce make sure easylist selected adblock one", "d": "4/2018"}, {"body": "included something like", "d": "4/2018"}, {"body": "issue unfortunately nt taken seriously", "d": "4/2018"}, {"body": "issue trying setvalidators inside nested reactive forms component clarify idea since explanations nt clear amp plunkers nt clearly show problem solution parent template add around nested component shown opening tag allows addremove validators nested component wo error solution wo messing wthe template would nice nt work bit context would helpful", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "issue still going one question happens call nt get error get loop kind somewhere see logging looping blocking page navigate lazy module inside guard", "d": "4/2018"}, {"body": "working version try one", "d": "4/2018"}, {"body": "thank good catch somewhat pervasive examples includes toh tutorial", "d": "4/2018"}, {"body": "great meeting last week thanks looking looks like someone already fixed nt change underlying type asterisk changed docs talks implemented hood heroname heroname notice looks like fixed close issue", "d": "4/2018"}, {"body": "deborahk great meeting thank much quick clear clarification bonus fixed already", "d": "4/2018"}, {"body": "ideal instead routernavigate login windowlocationhref downside another slight delay loading", "d": "4/2018"}, {"body": "know oldclosed issue first issue found around trying figure maybe help someone else linked docs use blows away actual routes trying test means could delete routes source code tests still pass ideal looking test actual lazy route still stubbing lazy loading module case route lazily loads module came approutingmodulets approutingmodulespects typescript component template class lazyloadedcomponent ngmodule declarations lazyloadedcomponent class lazymodule lazily navigates projectcreate fakeasync gt const loader testbedget ngmodulefactoryloader loaderstubbedmodules createprojectcreateprojectmodule createprojectmodule lazymodule spy loader load way testing actual route also making sure load happened nt fall wildcard route", "d": "4/2018"}, {"body": "successfully login want reload navbar template try use compilerclearcache angular app angularcompilercli working solution upper version", "d": "4/2018"}, {"body": "update ng v output angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcdk angularcli angularmaterial angulardevkit buildoptimizer angulardevkit core angulardevkit schematics ngtools jsonschema ngtools webpack schematics angular typescript webpack", "d": "4/2018"}, {"body": "lift operator operator observable worked", "d": "4/2018"}, {"body": "vicb alexeagle igorminar updates", "d": "4/2018"}, {"body": "absolute requirement", "d": "4/2018"}, {"body": "thank looks like resolved", "d": "4/2018"}, {"body": "docareatutorial", "d": "4/2018"}, {"body": "us ditching nt option embedded web browser excel uses addins nt expected switch edge time soon", "d": "4/2018"}, {"body": "seeing interrogating redux state guaranteed deliver startup like put ngoninit opposed constructors", "d": "4/2018"}, {"body": "ktabarez thanks lot solution works", "d": "4/2018"}, {"body": "docareatutorial", "d": "4/2018"}, {"body": "hook called right element get destroyed still visible screen would really useful easy make simple transitions using rxjs hostlistener sets display hostlistener activates transition one could use similar fashion update hostlisteners accordingly exit component cleanly obviously achieved ways approaches require code logic rxjs compensate missing lifecycle hook show stopper definitely useful addition existing hooks", "d": "4/2018"}, {"body": "looks weird weird hand solution radoslavpetranov could please share full implementation component works described appreciated struggling muggles example use ease sharing case use", "d": "4/2018"}, {"body": "stephenfluin igorminar hi comments priority guess doc outofdate either obsolete removed requires rewrite make current input welcome thanks", "d": "4/2018"}, {"body": "jenniferfell definitely date talks typescript old version needs rewrite probably simpler best practices possibly involving following tools built dotnet", "d": "4/2018"}, {"body": "previous url appears angular documentation appears current url related", "d": "4/2018"}, {"body": "thanks everyone going close duplicate recommends changing example compatible ad blockers referenced issue one great discussion need track issue one place thanks", "d": "4/2018"}, {"body": "solved adding unit tests sure solves", "d": "4/2018"}, {"body": "please reopen whilst additional features described would extremely useful current implementation serious performance problems described", "d": "4/2018"}, {"body": "workaround remap actual value e g server response different value like distinguish loading empty checkout stackoverflow thread", "d": "4/2018"}, {"body": "note tell us stuff like etc meta flags set flags specify either get dev defaults flag dev prod aot false true environment dev prod outputhashing media sourcemaps true false extractcss false true namedchunks true false buildoptimizer false true aot angular", "d": "4/2018"}, {"body": "kinda lost exactly appjs part", "d": "4/2018"}, {"body": "problem width angular solved alvahub solution would better get fixed", "d": "4/2018"}, {"body": "angular update pretty sure issue braking back button click browser getting b c looping b c back button click browser", "d": "4/2018"}, {"body": "problem angular version", "d": "4/2018"}, {"body": "update", "d": "4/2018"}, {"body": "able work around issue also interested fix", "d": "4/2018"}, {"body": "u please provide work around", "d": "4/2018"}, {"body": "using vscode", "d": "4/2018"}, {"body": "gets somehow fixed workaround creating trigger method use like component add method", "d": "4/2018"}, {"body": "looks like resolved example looks like expected behavior without authguard string path admin loadchildren appadminadminmodule adminmodule canload authguard brandonroberts gkalpak jasonaden think close resolved thanks", "d": "4/2018"}, {"body": "still seeing behavior logged console stackblitz example", "d": "4/2018"}, {"body": "sure decorator de caracter type de decorator function error message component selector ok component selector error mesage add pipe directive component", "d": "4/2018"}, {"body": "solved issue placing material module appmodulets imports section instead declarations", "d": "4/2018"}, {"body": "dumb question way directive string based inputs custom components example forwarding arialabels wrap custom button cool things custom button template way already", "d": "4/2018"}, {"body": "kekraft think static inputs use attribute syntax component", "d": "4/2018"}, {"body": "ocombe need contributors get runtime work done", "d": "4/2018"}, {"body": "jbogarthyde originally filed get time could take look make assessment context current rxjs implementation thanks", "d": "4/2018"}, {"body": "jasonaden alxhub still relevant needs done fix example code using throw", "d": "4/2018"}, {"body": "hello everyone best way load modules run time without core know anything module using angular elements someone questions contact explain make demonstration time", "d": "4/2018"}, {"body": "como configurar path absoluto en angular buenas estoy tratando de configurar el path para cuando importe un component servicio otro pueda utlizar el path absoluto import foo bar para que cuando importe sea de la siguiente forma import foo appbar alguien puede ayudarme intente con baseurl src de los archivos tsconfigjson tsconfigappjson", "d": "4/2018"}, {"body": "since already changed localeid makes sense currency symbol changes automatically users country find symbol alone bit confusing know means local currency one like dollar also code looks ugly currency symbols pipe least way easily set default currency symbol", "d": "4/2018"}, {"body": "problem use workaround creating new pipe ts import pipe pipetransform localeid inject angularcore import getlocalecurrencysymbol getlocalecurrencyname angularcommon pipe name currencyglobal export class currencyglobalpipe implements pipetransform constructor inject localeid public locale string transform value number return getlocalecurrencysymbol thislocale new intlnumberformat thislocale style decimal minimumfractiondigits format value could nt use intl style currency getlocalecurrencyname doenst return documentation says usd return us dollar workaround currencysimbol decimal maybe help someone else", "d": "4/2018"}, {"body": "actually right documentation needs updated return us dollar usd intended since currency name currency code usd see would mind opening pr fix documentation error please probably add function get current locale currency code", "d": "4/2018"}, {"body": "instantaphex pure gold thanks lot", "d": "4/2018"}, {"body": "future reference using also keeps angular running change detection parent components would happen eg", "d": "4/2018"}, {"body": "still waiting fix nothing angular seems fix", "d": "4/2018"}, {"body": "also struggling landing blank screen", "d": "4/2018"}, {"body": "seriously simple things like angular production ready drop angular use something mature least one nt fail basic things like one many issues simple things trying build prototype show company move angular bur right reasons move angular run away much frustration ps already year since bug reported know helping solving bugs know ang team might solving critical bugs gives idea current precarious state library", "d": "4/2018"}, {"body": "workaround", "d": "4/2018"}, {"body": "done via", "d": "4/2018"}, {"body": "related", "d": "4/2018"}, {"body": "murhafsousli working plunker also included animation module app module ie lazy loaded", "d": "4/2018"}, {"body": "guys notice set custom authorization header interceptor used jwt example ntlm windowsauthentication requests get revoked server hood request browser sends actually already header see chrome developer tools reason wireshark however sniff moment set custom header notice authorization example overriding hence getting response requests", "d": "4/2018"}, {"body": "related", "d": "4/2018"}, {"body": "closing obsolete", "d": "4/2018"}, {"body": "thank markpieszak adapted code according needs works well import injectable optional viewencapsulation inject angularcore import document angularplatformbrowser injectable export class linktagservice renderer export declare type linkdefinition charset string crossorigin string href string hreflang string media string rel string rev string sizes string target string type string amp prop string string", "d": "4/2018"}, {"body": "thanks fixed rc markup parameter description added source pr description nt displaying page api template changes made", "d": "4/2018"}, {"body": "updated version errors fixed", "d": "4/2018"}, {"body": "closing clear repro steps", "d": "4/2018"}, {"body": "issue like reuvenc described even nt fix tried also without problem remains anyway using transferstate api service worker problem visible production version universal working also using solution make page flicker long like problem first load user nt website using latest released version angular angular universal", "d": "4/2018"}, {"body": "recommended approach anyone", "d": "4/2018"}, {"body": "stephengardner jasonaden using safe way manipulate dom right drawback see set id input better way please let know basic example", "d": "4/2018"}, {"body": "thanks tip example legrasm easy works great ca nt believe nt come across method looks like got refactoring interested currently going forward", "d": "4/2018"}, {"body": "please ever use even works nt child see information", "d": "4/2018"}, {"body": "hmm well problematic sideeffect back wondering official recommendation setting focus guess stick find clarification angular team sure would nice api documentation included descriptions examples intended usage", "d": "4/2018"}, {"body": "problem still exist version angularlanguageservice", "d": "4/2018"}, {"body": "still happening work around ricardotorre occasionally get error running builds build optimizer turned try turning see helps", "d": "4/2018"}, {"body": "allanbond stopped happening sometime back updated angular cli", "d": "4/2018"}, {"body": "thing like still present", "d": "4/2018"}, {"body": "seems old thread implemented thought add one use case given code lot data mapping client side applicationmethods map amongst several maps saved store problem using async pipe seems anywhere else call template work perhaps takes subscription completes something funky like technically like use map elsewhere template accomplish without going component file nglet map would ideal maybe would alllow multiple subs", "d": "4/2018"}, {"body": "nnennajohn thats different issue look src code async pipe would notice doesnt something similar describe think common options wrap template nodes depend value emited inside make capable replaying last emitted value", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "update", "d": "4/2018"}, {"body": "nidin awesome yet repo nt moved much last months people interested though", "d": "4/2018"}, {"body": "cedvdb assemblyscript active", "d": "4/2018"}, {"body": "still working please reopen issue", "d": "4/2018"}, {"body": "seems many people still encountering issue reopening however create new reproduction eg plunkr stackblitz", "d": "4/2018"}, {"body": "another workaround since nothing else seemed work", "d": "4/2018"}, {"body": "seem issue latest version angular cli projects animations opacity translation scale work easing effect nt work downloaded source code animation docs angular cli version copied component code project easing works fine anyone else problem good workaround issue open stack overflow one seems want touch", "d": "4/2018"}, {"body": "case add import browseranimationsmodule top appmodulets forgot add imports array adding issue fixed", "d": "4/2018"}, {"body": "closed", "d": "4/2018"}, {"body": "miloszsobczak author issue closed btw also still reason canactivate canactivatechild run resolvers", "d": "4/2018"}, {"body": "remove bootstrap ngmodule add bootstrap maints file platformbrowserdynamic bootstrapmodule appmodule platformref gt const upgrade platformrefinjectorget upgrademodule upgrademodule upgradebootstrap documentbody myapp strictdi true", "d": "4/2018"}, {"body": "recommended bootstrap hybrid app outside angular zone things mostly related change detection might work expected", "d": "4/2018"}, {"body": "problem still angular updated plnkr found workaround bypasses problem although big hustle achieve plnkr workaround", "d": "4/2018"}, {"body": "put penny code guide boolean attributes boolean attribute one needs declared value xhtml required declare value requirement reading consult whatwg section boolean attributes presence boolean attribute element represents true value absence attribute represents false value must include attribute value nt need follow whatwg guideline attribute present value must either empty string attribute canonical name leading trailing whitespace short nt add value nt something specific react standard would really helpful update example desire behavior simple input property set component template usage default value property false boolean attribute set component template usage value binding know property think could great something seeing trying emulated feature way compiler know type property every property component set component template usage would set false default could prevented compile time even statically rule something like lt actually helpful", "d": "4/2018"}, {"body": "gamechanging feature request would nice", "d": "4/2018"}, {"body": "\u53c2\u8003", "d": "4/2018"}, {"body": "issue solved still get error page", "d": "4/2018"}, {"body": "order keep backwards compatible would acceptable something like following html form form notice new directive ngswitchcases someone angular team thinks good solution making pr", "d": "4/2018"}, {"body": "santialbo like sound implementation quite simple well", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "mickl totally agree also posted similar proposal understand correctly possible implement easily current architecture limitations application tick happens every event happened inside zone means event component detached cd tree zone catch events component except use custom event management runoutsidezone trigger change detection thinking implement onpushstrict checking component triggered dom event information ngzone investigating possible changes dom renderer pass information zone maybe could implement something like applicationrefts", "d": "4/2018"}, {"body": "facing issue", "d": "4/2018"}, {"body": "mickl try using small delay pipe http request causes async validators cancelled request happens validation engine cancels ongoing validations", "d": "4/2018"}, {"body": "solution appear temp fix ugly nt required please fix", "d": "4/2018"}, {"body": "cleanest way found circumvent issue follows allows remove merge operator issue fixed code keep working also made lettable operator reuse temporary fix typescript import formgroup angularforms import monotypeoperatorfunction rxjsinterfaces import interval rxjsobservableinterval import distinctuntilchanged map merge rxjsoperators todo temporary async validator fix addressed export const fixformstatus form formgroup gt monotypeoperatorfunction form gt source gt sourcepipe merge interval pipe map gt formstatus distinctuntilchanged", "d": "4/2018"}, {"body": "update", "d": "4/2018"}, {"body": "created library temporarily fill hole", "d": "4/2018"}, {"body": "hi kara would like ask way delete dynamic formarray without changing initial index id", "d": "4/2018"}, {"body": "results works place inside lt ionlist gt outside ngfor example lt ionlist gt lt ionitemsliding ngfor let item items gt lt ionitem ngif itemdisplay gt itemtitle lt ionitem gt lt ionitemsliding gt lt ionitem ngifitems length gt results lt ionitem gt lt ionlist gt obviously stripped version works needed", "d": "4/2018"}, {"body": "reason got downvote think easy make items displayed conditional something simple single empty list nt address issue computed value like async pipe used rather two subscriptions list observable would one maintained internally template service would feed list results item time efficient maintaining two subscriptions makes simpler code maintaining shared subscription component", "d": "4/2018"}, {"body": "everyone still getting error message worked changed something like export function appconfigservicefactory config appconfig let extractedfn gt return gt configload status gt first version worked one projects one although use versions angular ts cost quite time find workaround hopefully helpful others well version info angular angularcli angularcompiler angularcompilercli typescript", "d": "4/2018"}, {"body": "mrucelum use comment put exactly line use", "d": "4/2018"}, {"body": "vladjerca tried get directive work template form fired angular version idea", "d": "4/2018"}, {"body": "end exported function resetting import every component needs", "d": "4/2018"}, {"body": "sorry use reactive forms idea things interact template driven forms", "d": "4/2018"}, {"body": "thanks tenmak vladjerca update", "d": "4/2018"}, {"body": "hi guys need mark input pristine ie placeholder user clicks input element trying writing custom validator unable get access element validate method also better way", "d": "4/2018"}, {"body": "dzmitryshylovich change order host component hostcontext parent border solid black would need change order based understanding want apply style element class named circumstance seems make sense apparently nt work change order said missing", "d": "4/2018"}, {"body": "docareatutorial", "d": "4/2018"}, {"body": "new eta least response angular team functionality real downer since module encapsulation got thrown window dialogs angularmaterial need imported root module", "d": "4/2018"}, {"body": "nt think progress walkaround", "d": "4/2018"}, {"body": "jmcclanahan possible get reference injected component using approach successfully injected component tree btw need subscribe tree click events component injected tree way accomplish", "d": "4/2018"}, {"body": "imports line module declared component import reactiveformsmodule formsmodule angularforms example logincomponentts declared loginmodulets loginmodulets write line import reactiveformsmodule formsmodule angularforms thanks amp regards arun dhwaj", "d": "4/2018"}, {"body": "using angularrouter still facing issue suggestions", "d": "4/2018"}, {"body": "hello problem download file download file text lt \u0161 contenttypes lt \u0161 contenttypes u fact text want download tried code service code public download id string observable let params new urlsearchparams let headers new headers headersappend xaccesstoken thisauthgetcurrentuser token headersappend saleid id headersappend contenttype textxml headersappend responsetype blob return headers headers responsetype responsecontenttypeblob map res gt resblob component code html code please need support thank", "d": "4/2018"}, {"body": "aulonabinaj service remove headers headersappend contenttype textxml headersappend responsetype blob return type service observable object also add responsetype blob instead builtin constant resolve issue filesaver save file response attached correct thing suspect contenttype set textxml causing issue add contentlength header ur business returning response regards soma", "d": "4/2018"}, {"body": "somuenc thank answer tried also add moment download zip file inside filesxml convert file one filetxt pdf regards aulona", "d": "4/2018"}, {"body": "made lib implementation demoed", "d": "4/2018"}, {"body": "imho issue focusing much change detection completely ignoring rendering speed default implementation ngforof uses iterablediffer detect changes collection process way makes easy make efficient incremental changes dom building doublylinked lists items additions removals moves identity changes implementation pretty efficient optimized successive mutations initial rendering first run importantly collection never changes need processing case onetimebindings ends useless work increasing memory pressure polluting dom comment nodes insertion markers according tests rendering could sped done directly using createembeddedview implementing onetimebinding immutable version ngforof", "d": "4/2018"}, {"body": "adding calls simple way achieve binding function executed would really helpful simple translation tables", "d": "4/2018"}, {"body": "facing issue even different names ids last element gets populated every html element thanks davidudofa solution worked", "d": "4/2018"}, {"body": "meet problem form nest ngfor child ngfor need set input name name j j stands child ngfor index", "d": "4/2018"}, {"body": "problem wanted solution debouncing input request backend input changed workarounds timer validator problem request backend every keystroke debounce validation response intended want input debounced distincted request backend way prevent form valid short period time typing use async validator solution following using reactive forms component ts component selector prefixusername templateurl usernamecomponenthtml styleurls usernamecomponentcss export class usernamecomponent implements oninit ondestroy html username sorry ca nt use username", "d": "4/2018"}, {"body": "disagree labeled feature well sev rating see linked issues resulting bug reports projects flatout nt work way one would expect breaks established semantics apply forms", "d": "4/2018"}, {"body": "update kara elaberate make work viewproviders templateoutlet", "d": "4/2018"}, {"body": "hi guys danielkucal also facing bugs many instance memory ngondestroy adding code memory released objectkeys map k gt k null", "d": "4/2018"}, {"body": "hi ghetolay deleted code ngcontent tags mix content ngcontent ngif problem keep brpradeepprabhu add code ondestroy functions newbie angular thx help", "d": "4/2018"}, {"body": "minslay getting issues danielkucal facing resolve creating base component extends component implements ngondestroy export class componenta extends basecomponent implements oninit ondestroy base component export class basecomponent implements oninit ondestroy constructor ngondestroy objectkeys map k gt k null remove detached dom node still analysing resolve issues", "d": "4/2018"}, {"body": "hi brpradeepprabhu tried solution nt worked added code end ngondestroy functions components results previously keep investigating thank time", "d": "4/2018"}, {"body": "angular thisrouternavigate home working internet explorer console logerror", "d": "4/2018"}, {"body": "thank help mlcmlapis works", "d": "4/2018"}, {"body": "really nothing determine module class daterangepickerdirective error anybody helps megazord post nt agree add tsconfigappjson new excludes directive compile aot param without issue", "d": "4/2018"}, {"body": "use case creating validators library nt want create module validator directive want able bundle validator directives npm package user install import validators needs ngmodule also nt want create one module validators bundled final bundle huge waste size happy create pr fix issue", "d": "4/2018"}, {"body": "anjmao incredibly similar reason opened first place workaround small library found error nt occur use barrel indexts files seems import componentdirective index tries find module exports index file obviously still believe warning since barrel files super convenient however use case ca nt wait another year fix may able get around like", "d": "4/2018"}, {"body": "workaround using shared library componentsdirectivespipes create simple dummy module references class declarations nt need use module real apps exist disk ex import ngmodule angularcore ngmodule imports declarations mycomponent mypipe mydirective export class dummymodule", "d": "4/2018"}, {"body": "facing behaviour someone know fixed", "d": "4/2018"}, {"body": "also chiming issue affecting app", "d": "4/2018"}, {"body": "came following workaround nt fix forward button navigation actually kinda makes worse sure many problems nt done lot testing either highly discourage using really desperate", "d": "4/2018"}, {"body": "hi able prepare intrusive fix issue adding manual changes angular code routerumdjs bundle file used project base patched file angular gist change fixes related issues history broken back browser button handled correctly cancelled programmatic navigation url gets replaced long logical url navigation cancelled", "d": "4/2018"}, {"body": "currently issue error thryin yo create umd file rollupjs angular error subject exported nodemodulesrxjssubjectjs ive tried still get error commonjs include nodemodules include nodemodulesrxjssubjectjs namedexports nodemodulesrxjssubject subject", "d": "4/2018"}, {"body": "wanted change route time change aux route described difference wanted show dialog route change instead hiding finally went workaround key set home navigation target instead move outlets section primary outlet", "d": "4/2018"}, {"body": "handled upcoming ivy refactor", "d": "4/2018"}, {"body": "set input inside bind observable another public variable postfix temporary feeling waiting issue fixed input set isloading data observable thisisloading data public isloading observable", "d": "4/2018"}, {"body": "mdsauer put youe solution please", "d": "4/2018"}, {"body": "anyone else reading future reverted symbols ca nt used note use instead even accepts type parameter", "d": "4/2018"}, {"body": "wonder still nt fixed seems like common use case see many requests support", "d": "4/2018"}, {"body": "surprising guess many use reactive forms smart enough use incomplete feature", "d": "4/2018"}, {"body": "issue well using angular trying upload file flask even set content type header form data passed", "d": "4/2018"}, {"body": "issue accepts object contenttype nothing encoding please submit unrelated comments", "d": "4/2018"}, {"body": "nt know helps anyone spending quite time found using formdata nt set content type multipartformdata removing code setting content type multipartformdata worked would like someone shed light", "d": "4/2018"}, {"body": "thank pratikthegamedever removing contenttype multipartformdata solved issue", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "think issue closed", "d": "4/2018"}, {"body": "sure completing observable right solution mean validation update observable stream coming web sockets like update validation every time new value comes server", "d": "4/2018"}, {"body": "would nt separate subscription websocketsubject something similar hooked subscriber would modify form patchvalue causing new validation hit validator observable chain ken rimple training mentoring services chariot solutions rimpleontech mon apr pm dmitry efimenko wrote sure completing observable right solution mean validation update observable stream coming web sockets like update validation every time new value comes server receiving mentioned reply email directly view github mute thread", "d": "4/2018"}, {"body": "really struggled subscribing valuechanges nt working vamlumbers example ended validation function like returning observable controlvalue prop", "d": "4/2018"}, {"body": "approach works resolved form pending issue add catch error line since api return error username found case form status stucks nt enter map nt return anything according rxjs docs need return observable catch", "d": "4/2018"}, {"body": "also facing issue getting range error code describe milestonetemp gt let component milestonechartscomponent let fixture componentfixture beforeeach async gt testbedconfiguretestingmodule declarations milestonechartscomponent compilecomponents log error rangeerror ngdebugcontext debugcontext view object def parent viewcontainerparent parentnodedef context component nodes state root renderer oldvalues disposables nodeindex nodedef object index parent renderparent bindingindex outputindex flags childflags directchildflags childmatchedqueries matchedqueries matchedqueryids references ngcontentindex childcount bindings bindingflags outputs element provider text query ngcontent eldef object index parent renderparent bindingindex outputindex flags childflags directchildflags childmatchedqueries matchedqueries matchedqueryids references ngcontentindex childcount bindings bindingflags outputs element provider text query ngcontent elview object def parent viewcontainerparent parentnodedef context component nodes state root renderer oldvalues disposables ngerrorlogger function", "d": "4/2018"}, {"body": "ran issue case nesting formgroups parent child componenti found paradigm cleaner approach perplexed kept getting previous iteration value works course due waiting another digest cycle yeah seems like bit bug", "d": "4/2018"}, {"body": "encountering issue lot working html many language entries incorrectly marked changed resulting occasional merge conflicts cost lot time solve recent work pmccloghrylaing offer solution", "d": "4/2018"}, {"body": "abandoned work started believe area code refactored part ivy order support runtime", "d": "4/2018"}, {"body": "true option used runtime ivy", "d": "4/2018"}, {"body": "html sample components ngclassforicons value let data value gerald data great class else value ariel data extreme class else data another unknown return data better idea class space sometimes use ngclass expression wo nt work desired output thank reading hope help", "d": "4/2018"}, {"body": "look article might help anyone", "d": "4/2018"}, {"body": "answer stackoverflow prevent services shared module instantiated multiple times worked nt mentioned implement shared module add providers app module import shared module feature modules lazy note use without", "d": "4/2018"}, {"body": "gruppjo recommended approach handle cases app small size singleton providers trivial load initial load cases see providers supposed singletons except specific cases small apps approach may seem fine app grows end declaring lot providers making initial load size larger consequently slower also nt seem good approach libraries would load libraries providers initial load appmodule recommendation regarding like defining one global provider store state providers import import providers used accessing global provider retrieve define state instead relying something along lines otherwise might become difficult maintain performance angular apps app size grows", "d": "4/2018"}, {"body": "hi tbosch thanks help issue", "d": "4/2018"}, {"body": "using angular router version candeactivate change history use navigate back return subject see nextstate changed run next history outsite url anyone knows solve use return false candeactivate solve thanks babarxm", "d": "4/2018"}, {"body": "issue idea", "d": "4/2018"}, {"body": "fires myfonction twice fires myfonction", "d": "4/2018"}, {"body": "use input avoid onblur events", "d": "4/2018"}, {"body": "lot things probably changed change detector angular angular blank ever still pretty hard dig concrete information change detector many articles exist touch surface child components behave onpush environment poorly understood least nt understand fully", "d": "4/2018"}, {"body": "hmm still taking principal really simple parent component passes object child child set object passed via reference hook able recognize reference changed comparison previous new immutable object passed parent new reference cd run child cd run child", "d": "4/2018"}, {"body": "mlcmlapis thanks mostly curious child components behave parent component set onpush dzmitryshylovich hinted back angular child components would inherit onpush state parent wondering still case", "d": "4/2018"}, {"body": "larssn hmm long time nt think children components parent set inherit configuration necessary mention hook parent component invoked grandparent component general design valid components anything extra components discussions main effect still related fact immutable reference passed enough also means whether cd flows children components", "d": "4/2018"}, {"body": "onpush still pass children ca nt revert back default module hit issue still major pain point team every someone wonders new component nt update automatically someone else helps himher root cause hit issue inject state machines via dependency injection values passed around via inputoutput onpush ca nt really detect anything code style time refactor may extend state machines trigger change detection value changes guess recommendation either pass values via case state machines use library like nt tried yet", "d": "4/2018"}, {"body": "sod pure dependency change always main idea strategy real simplicity combinations making change inside component using di observable subscribe patterns count also creates complex scenarios mean setting parent component inherited also children run cd children necessary component also pass immutable children cd applied children without cd parent component", "d": "4/2018"}, {"body": "absence feature lack reasonable way around declaring viewchild every single annotation impractical best impossible worst really devalues reactive forms system", "d": "4/2018"}, {"body": "still reply kara angular team thumbs nt ever seen negative reaction github comment nt seem bother also requesting feature need listen dom events form control native element reactive angular form nt template available ca nt event work way around viewchilds template related hacks using ngxformly", "d": "4/2018"}, {"body": "maybe reopen new issue since team nt monitoring thread anymore", "d": "4/2018"}, {"body": "fix workaround", "d": "4/2018"}, {"body": "jowindebondt fix workaround", "d": "4/2018"}, {"body": "mlcmlapis original question routeroutlet inside component like want use inside appleftnavbar order split html loaded component router two things matter try ngcontent select doesnt work inside leave without selectors displays content properly whole component notsplit course even normal component routeroutlet problem", "d": "4/2018"}, {"body": "jowindebondt means different things first using principally possible content put angular router runtime angular compiler knows nothing compilation time second work direct content content inside see class like allow selection", "d": "4/2018"}, {"body": "okay thanks understand logic still need something similar using template fixed location title footer content dictated router based child routes use workaround oliamb", "d": "4/2018"}, {"body": "jowindebondt yep structural directive useful way", "d": "4/2018"}, {"body": "cdk portals look like something similar", "d": "4/2018"}, {"body": "know nt accomplish actually works far reusing component without hacks angular case actually reuse component even though router outlet child insight anyone know another way accomplish without placeholder component", "d": "4/2018"}, {"body": "tommybananas think correct case using", "d": "4/2018"}, {"body": "mlcmlapis could correct component child contains router outlet find hard believe official solution issue using placeholder component pretty common usecase normal edit states resource share component", "d": "4/2018"}, {"body": "tommybananas use url directly fine probably directive present template true limitation problem component still able recognize current route behave accordingly even routes combined use still component use directly componentless route", "d": "4/2018"}, {"body": "idea pr merged", "d": "4/2018"}, {"body": "made feature request addresses issue would provide safer shallow render experience prevent problem declare mock entire dependency graph component test keep guarantees correctness respect selector inputsoutputs child components making unit tests resistant breakage via refactorings please take look provide feedback since think would vastly improve testing experience angular apps", "d": "4/2018"}, {"body": "michaelbromley great idea love seems like parallel option rather real fix underlying problem components recompiled nt need regardless board mocking idea", "d": "4/2018"}, {"body": "also show solvable problem seems set global function called block tests stupid ridiculous hack replace logic would nt recommend anyone actually use seems work fine speeds things nearly point nt offer solution anyone use simply show easy seems vastly speed things reusing compiled components let tb gettestbed switch back original resettestingmodule function exists window testcache tbresettestingmodule window testcache realresettestingmodule reset testing module testbedresettestingmodule store reference original resettestingmodule function let realresettestingmodule tbresettestingmodule window testcache realresettestingmodule tbresettestingmodule replace original resettestingmodule custom version reuses modulefactory compiler cuts test execution time roughly tbresettestingmodule gt let mf tbmodulefactory let compiler tbcompiler realresettestingmoduleapply tb tbmodulefactory mf tbcompiler compiler", "d": "4/2018"}, {"body": "vmandy know late facing problem slow unit memory errors well two things get around variables used beforeeach declared top file inside first describe eg describe foocomponent gt let typefoo let typefoo let typefoo beforeeach gt something big something big something big aftereach gt undefined undefined undefined describe beforeeach blocks afterwards fixed memory problems speed things replace ionicmodule bits noschemaerrors eg replace good", "d": "4/2018"}, {"body": "current correct link documentation", "d": "4/2018"}, {"body": "basically change detection available testing component changedetection changedetectionstrategyonpush remove fixturedetectchanges beforeeach block use separately test works like charm", "d": "4/2018"}, {"body": "manually creating entire new components configuring unit test inputs outputs onpush component feels excessive might recommended way certainly nt feel like ideal developer experience", "d": "4/2018"}, {"body": "vikerman approach would create container test component mentioned docs case even seem work component inputs router component ie mounted router via routeconfig use onpush change detection strategy works fine using observables async pipe template bindings case even using container test component approach work calling trigger change detection way find actually test component inject expose publicly invoke test unsatisfactory since dependency component absolutely redundant apart use hack unit testing", "d": "4/2018"}, {"body": "interesting issue almost half rock solid solution feeling people nt write much tests nt use onpush immutable data structures sad michaelbromley hmm use case looks something like following ts component onpush class userdetailcomponent userid thisrouteparammappipe map pmap gt pmapget id user thisuserid pipe switchmap userid gt thissvcget userid constructor private route activatedroute private svc mysvc providing observables new values test properly work even without container cd run onpush input changed case something async happens within component user clicks somewhere new observable data pushed may wrong ofc also tried dirty solution overriding cd default", "d": "4/2018"}, {"body": "interesting issue almost half rock solid solution feeling people nt write much tests nt use onpush immutable data structures sad think confusing users angular team priorities", "d": "4/2018"}, {"body": "hotell yeah pretty much setup except component also gets updated want check submit button enabled actual app form course updated via user event triggers change detection hand unit test updates form directly want manually trigger change detection stuck nt really want override cd strategy default longer testing actual component think directly invoke test result", "d": "4/2018"}, {"body": "michaelbromley use method comment components change detection right examples nt properties trigger cd plus whole host element thing seems messy testing purposes", "d": "4/2018"}, {"body": "closing since year since acitivty please open new issue tag still functional", "d": "4/2018"}, {"body": "vicb tested logic methods component rely simple consolelog trace shows angular calls indefinitely methods nt user interaction ngif results", "d": "4/2018"}, {"body": "feature would great solution ui configuration imagine app multiple layout style configurations redirect user based database record good option user routes like instead could conditionally switch one components keeping router path questions problem stack overflow without appropriate solutions two components route bind two components different lazyloaded modules route angular routes url", "d": "4/2018"}, {"body": "serhiikalaida think adding component factory code could simplified expert componentfactoryresolver class maybe could used looking router config noticed route interface component type lt gt would possible add option specify function returns type dzmitryshylovich think even doable", "d": "4/2018"}, {"body": "question came internal discussions around ts strictpropertyinitialization indeed think discussion merit lot interest two separate parts design one mark required intent explicit annotation required originally proposed reuse type annotation example type input string null optional string required enforcement happen static check aot compiler static ts typechecking templates ie make visible ts assign say string null expected type string dynamic component lifecycle happening", "d": "4/2018"}, {"body": "strangely works put disabled directive last radio plunker updated either set different name radio compliant", "d": "4/2018"}, {"body": "vsavkin years later feature still implemented yet issue closed info straightforward use case yet included", "d": "4/2018"}, {"body": "thanks jiribalcar", "d": "4/2018"}, {"body": "hours banging head wall even made miss rootscope solution pointed brandonroberts took seconds", "d": "4/2018"}, {"body": "reference got alternative tool importing exporting strings originally developed use aurelia includes support strings stored files quite handy webpack allows directly import files files giving code easy access strings tool works angular templates bunch handy features use like feel free borrow ideas improve angular tooling also webpack loader based see link docs", "d": "4/2018"}, {"body": "choui solution works fine said wish property view could bind avoid component code works let prop thisformcontrols thismyformcontrols prop disable onlyself true enable", "d": "4/2018"}, {"body": "manual way destroy services provided module", "d": "4/2018"}, {"body": "use case suppose destroy kill reference example expected get renewed upon next needed maybe service creator services say factory existence provide usefactory would confusing misleading use case april notifications githubcom wrote manual way destroy services provided module receiving mentioned reply email directly view github mute thread \u0433\u0435\u043e\u0440\u0433\u0438 \u043f\u0430\u0440\u043b\u044a\u043a\u043e\u0432 georgi parlakov", "d": "4/2018"}, {"body": "gparlakov use case service want associated component inside lazy module opens post logging app however provide component main wrapper component post login access route resolver guards provide lazy module level becomes global service extent even upon logout app routing component outside lazy module service destroyed user data service still memory sure ca nt access directly outside lazy module still deleted permanently reaccessed upon logging even different log", "d": "4/2018"}, {"body": "understanding happens whenever lazy module first loaded service gets instantiated placed module injector every subsequent request module main component would use instance right aware way instructing angular kill module providers provided already guards maybe inside route guard executed way clean upinitialize service ie every time user wants go back component services state gets zeroed alternatively service could become provider services instead work", "d": "4/2018"}, {"body": "okay yes think way either wanted check clean upinitialise step mention way besides keeping track variables setting null mind elaborating little bit service could provider services would help familiar thanks help georgi parlakov notifications githubcom wrote understanding happens whenever lazy module first loaded service gets instantiated placed module injector every subsequent request module main component would use instance right aware way instructing angular kill module providers provided already guards maybe inside route guard executed way clean upinitialize service ie every time user wants go back component services state gets zeroed alternatively service could become provider services instead work receiving mentioned reply email directly view github mute thread", "d": "4/2018"}, {"body": "clean would like said set everything back initial value initialize every time want use risk might confusion whether state initialized every time elaborating provider services notice theserviceservicets provided module used providing new instance every time call method", "d": "4/2018"}, {"body": "gparlakov okay makes sense thanks help sharing info provider services", "d": "4/2018"}, {"body": "ive faced problem read angular documentation cant import formsmodule u also need reactiveformsmodule add imports appmodulets", "d": "4/2018"}, {"body": "deal angular first create custom encoder ts export class customqueryencoderhelper implements httpparametercodec encodekey k string string return encodeuricomponent k ts let preparedparams new httpparams encoder new customqueryencoderhelper fromobject yourparams params preparedparams", "d": "4/2018"}, {"body": "almothafar able fix issue solve", "d": "4/2018"}, {"body": "real solution want see better way get params child components root component technically work allows use router outlet name get right outlet case detail given url like get pathny", "d": "4/2018"}, {"body": "chriszrc suggestion service know params currently use current app mobile via service use", "d": "4/2018"}, {"body": "yup response another approach could use rather listening navigationend events get info router snapshot lame trickery", "d": "4/2018"}, {"body": "perhaps one hint following route definition using like wo nt work escaped lazy loading modules like automatically introduce relative path would destroy routernavigate command like", "d": "4/2018"}, {"body": "elclanrs solution makes app run without errors indeed however module lazyload loads start app removes purpose lazy loading", "d": "4/2018"}, {"body": "new ivy renderer developed fixed", "d": "4/2018"}, {"body": "also confused first get data since nto complete used use saw", "d": "4/2018"}, {"body": "also please note wait complete another question would resolve different behavior", "d": "4/2018"}, {"body": "use inject parent component using abstract class injectiontoken ts export abstract class parentcomponent name string component providers provide parentcomponent useclass forwardref gt appcomponent export class appcomponent implements parentcomponent name angular component template export class hellocomponent public name string constructor private parentcomponent parentcomponent public ngoninit thisname thisparentcomponentname also works directives example", "d": "4/2018"}, {"body": "restarted vs restore package appears top item right clicked packagejson", "d": "4/2018"}, {"body": "yes worked well please restart vs check", "d": "4/2018"}, {"body": "turns encoded parens pose problem firefox decodes entering url leading incorrect final url see details", "d": "4/2018"}, {"body": "routing pattern url get even manually decode get error fixed released release betasrcs", "d": "4/2018"}, {"body": "following cases work javascript aftereach gt expect actuallydone toequal true async run async test successful delayed observable async gt let actuallydone false let source observableof true delay sourcesubscribe val gt actuallydone true err gt fail err fakeasync run async test successful delayed observable fakeasync gt let source observableof true delay sourcesubscribe val gt actuallydone true err gt fail err tick need tick modified case little need case need runnable released also updated document test code wardbell juliemr could please review pr doc test code change ok thank much", "d": "4/2018"}, {"body": "problem milliseconds zonejs version code worked milliseconds timings expected actuallydone", "d": "4/2018"}, {"body": "using following workaround", "d": "4/2018"}, {"body": "hi kara workaround using appears deprecated issue reconsidered", "d": "4/2018"}, {"body": "closed see chrome adding disabled option first help form group valid even though something selected default", "d": "4/2018"}, {"body": "perhaps missing key part logic behind design seems using query params nt prevent link marked active also coming short makes sense specify nt want homepage marked active time use case links marked active makes default behaviour", "d": "4/2018"}, {"body": "update", "d": "4/2018"}, {"body": "natemay two problems first extend single class second broke dependency injection", "d": "4/2018"}, {"body": "guessing need something upstream angularangular use able test rxjs delay operator right make sense add default cli testts well", "d": "4/2018"}, {"body": "intellix need wait merged test sure whether load default good one concern feature pr user may implement solution patch rxjs schedulerdelay kind breaking change load default", "d": "4/2018"}, {"body": "directives behavior mean adding styles directives misuse directive type angular documentation example shows addition styling highlight directive use fine simple directives would useful one could simply add stylesheet associate style directive feel like maybe missing something", "d": "4/2018"}, {"body": "anyone figure way pass data navigating passing params url definitely seem need one cases", "d": "4/2018"}, {"body": "like many others seeing issue well created simple app creates array items wrapped ngfor directive inside ngif make easier profile takes roughly seconds render list todo items ui responsiveness tools looks like template generating thousands calls appendchild know ie prefers setting innerhtml direct dom manipulation innerhtml peforms better experiment used dev console extract html parent element profiled setting innerhtml according profile took huge difference suspicion ngfor directive inserts containing node dom appending child nodes means child node causes browser style calculation ideally ngfor create containing node insert dom child nodes inserted containing node anyone angular team verify", "d": "4/2018"}, {"body": "getting error npm start info worked ends ok verbose cli c program filesnodejsnodeexe verbose cli c program filesnodejsnodemodulesnpmbinnpmclijs verbose cli start info using npm info using node verbose runscript prestart start poststart info lifecycle angularquickstart angularquickstart verbose lifecycle angularquickstart unsafeperm lifecycle true verbose lifecycle angularquickstart path c program filesnodejsnodemodulesnpmnodemodulesnpmlifecyclenodegypbin angularappmyappnodemodulesbin c programdataoraclejavajavapath c c windows c c c program filesmicrosoft sql serverclient c program files microsoft sql c program filesmicrosoft sql c program filesmicrosoft sql c program filesmysqlmysql utilities c program filesgitcmd c usersravi tiwariappdataroamingnvm c program filesnodejs c program filesnodejs c usersravi tiwariappdataroamingnvm c program filesnodejs c usersravi tiwariappdataroamingnpm verbose lifecycle angularquickstart cwd angularappmyapp silly lifecycle angularquickstart args c npm run build silly lifecycle angularquickstart returned code signal null info lifecycle angularquickstart failed exec prestart script verbose stack error angularquickstart prestart verbose stack exit status verbose stack eventemitter c program verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess c program verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid angularquickstart verbose cwd angularappmyapp verbose windowsnt verbose argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs start verbose node verbose npm error code elifecycle error errno error angularquickstart prestart error exit status error failed angularquickstart prestart script error probably problem npm likely additional logging output verbose exit true anyone else encountered exit status error", "d": "4/2018"}, {"body": "able resolve issue problem updating cascading drop downs change somemethod triggered without user selection change", "d": "4/2018"}, {"body": "build ng build command work project", "d": "4/2018"}, {"body": "gahen agree thinking fact let typo forms thank comment saving time unfortunatly reverse true ngiffalse true throw use form valid checked checkedbox wich contains required input solution", "d": "4/2018"}, {"body": "done horrible things feature exist horrible horrible things", "d": "4/2018"}, {"body": "users mentioned nt make much sense people forced write workarounds deliver product pointed breaks css frameworks eg component needs fit particular css structure instead declaring classes within template markupdeclaration makes ridiculously unreadable", "d": "4/2018"}, {"body": "markupdeclaration makes ridiculously unreadable add classes component inside component understand adding new node tree always desired behavior finding something really break layout something put effort want see implement flexbox components directives could take look angular material angular flex open issue requesting fragments components", "d": "4/2018"}, {"body": "since issue closed could anyone give us progress maybe least hints whether push direction adding separate instead fix considering custom elements never moved beyond experimental implementations part dom living standard", "d": "4/2018"}, {"body": "feedback ca nt changed due backward compatibility reasons initial implementation feedback recently next steps", "d": "4/2018"}, {"body": "abraham thanks would nice hearing angular devs thelarkinn robwormald especially curious nt pushed considering standardised sufficiently ready ie documented tested months released", "d": "4/2018"}, {"body": "still broken", "d": "4/2018"}, {"body": "solved issue simply adding appcomponentts top routeroutlet", "d": "4/2018"}, {"body": "careful interpreting user input html enables users use html tags angular seems remove javascript handlers onerror onmouseover etc migth insert xss app", "d": "4/2018"}, {"body": "added file bindevserverdart import package pubserverewritesrewritesdart main server ignoreall r jsonhtmljsdartcsspng rewrite admin adminhtml rewrite r indexhtml start however got following errors pub run bindevserverdart proxying get error get error thrown handler socketexception os error connection refused errno address localhost port package shelfproxyshelfproxydart proxyhandler package pubserverewritessrcrewritesdart serverhandler package shelfshelfiodart handlerequest get faviconico error get faviconico error thrown handler socketexception os error connection refused errno address localhost port package shelfproxyshelfproxydart proxyhandler package pubserverewritessrcrewritesdart serverhandler package shelfshelfiodart handlerequest", "d": "4/2018"}, {"body": "dealing complex responsive html template lot alternative html markup based media queries say angular component data interaction functionality many gradual steps presentation visual component screen use case would want able split html focus various screen sizes visual components template currently possible angular nt see make components seeing inclusion mediaquery based forced deal page long jumble html nt want go manual dynamic component trickery came angular avoid sort juggling goes rewiring component state based visibility state based media queries currently sane way see eject webpack preprocessing include html fragments acceptable", "d": "4/2018"}, {"body": "bbottema looks like one big component maybe composition includes elementary components would simplify design", "d": "4/2018"}, {"body": "mlcmlapis thanks suggestion said nt see making component tree based media queries makes sense would even monitor style changes based media queries", "d": "4/2018"}, {"body": "bbottema reaction media query common behavior also officially supported cdk", "d": "4/2018"}, {"body": "trotyl interesting indeed thanks link still though complicates situation simplifies would rewrite components fit layout model want organize html bit sanely", "d": "4/2018"}, {"body": "bbottema issue started hostbinding css class width component needed also separate components building dynamic grid windows resized individually need responsive way use css using hostcontext well code binding way easier split application components unfortunately using media queries reach similar effect binding class body element main component break point", "d": "4/2018"}, {"body": "dalu trying figure post json object multipartformdata angular hours", "d": "4/2018"}, {"body": "limitation framework place file issues framework yes making reveal password feature ought take maybe lines future visitors hack elementref", "d": "4/2018"}, {"body": "pauldraper could try first please supported dynamic case nt require", "d": "4/2018"}, {"body": "change angular templates internet explorer safari call function end object selected application ran null reference", "d": "4/2018"}, {"body": "post awarded patient users ever", "d": "4/2018"}, {"body": "thank", "d": "4/2018"}, {"body": "would still like well silly things render get happen nt make happy", "d": "4/2018"}, {"body": "work route reload", "d": "4/2018"}, {"body": "use code thisngoninit work route reload", "d": "4/2018"}, {"body": "case call resolve set paramquery url list line check complete redirect route otherwise call route call resolve peremquery get ngoninit method hope understand", "d": "4/2018"}, {"body": "methods thisngoninit", "d": "4/2018"}, {"body": "mlcmlapis nt sound make sense based understanding component strategy supposed checked input property changes change nt happen check nt done component leads think nt called well missing", "d": "4/2018"}, {"body": "bindongkim hmm child component invoked parent component side child component cd child component checked nt matter child nt strategy enabled done direct child enabled deeply nested children child way detect mutable changes object passed child enabled running additional code violates principle reason generally recommended careful adding anything hook called called hooks places force run code even cases angular applying principles controls flow", "d": "4/2018"}, {"body": "mlcmlapis got thanks explanation really appreciate", "d": "4/2018"}, {"body": "problem used ngdocheck detect route param changes changes detected initiate component", "d": "4/2018"}, {"body": "may code may help someone directive selector href host click click event export class hrefdirective input private href private target thiselnativeelementgetattribute target constructor private el elementref click event windowopen thishref thistarget", "d": "4/2018"}, {"body": "thank works like charm", "d": "4/2018"}, {"body": "hi facing issue issue client side angular server side net core could nt send timezone client suggestions added code server side still luck", "d": "4/2018"}, {"body": "actually without cors module please check middleware nodejs", "d": "4/2018"}, {"body": "eric would like deploy solution go posed question stackoverflow link issue guys talked killing", "d": "4/2018"}, {"body": "little differently digesting bunch suggestions landed validator directive directive selector passwordconfirm providers provide ngvalidators useexisting forwardref gt passwordconfirmationvalidator multi true export class passwordconfirmationvalidator implements validator input passwordconfirm string validate c abstractcontrol key string return thispasswordconfirm cvalue null notmatching true use selfassign value directive input model confirming ala errors shown checking existence true confirmation field also decided changing primary input field easier clear confirmation field instead trying validate one another since ca nt see inputs password box guessing fixing password nt match changing top password confirmation one clears seems work pretty well uses", "d": "4/2018"}, {"body": "progress made issue", "d": "4/2018"}, {"body": "nt think going fixed since functionality available angular elements instead angular elements also solves inputs root components another thing want integrating cms", "d": "4/2018"}, {"body": "could load dynamic scripts like file call method inside constructor note multiple dynamic scripts loaded add", "d": "4/2018"}, {"body": "hitting issue landing bug likely missing parent component", "d": "4/2018"}, {"body": "facing problem final version also date pipe breaking chrome safari tried elgervb solution work even adding pollyfill js said indexhtml work case", "d": "4/2018"}, {"body": "keep discussion going enhance existing controlvalueaccessors inject formatters parsers run within quick hack inherited existing input typecheckbox formcontrolname textarea formcontrolname input typecheckbox formcontrol textarea formcontrol input typecheckbox ngmodel textarea ngmodel ngdefaultcontrol host input handleinput eventtargetvalue blur touched eventtargetvalue compositionstart compositionstart compositionend compositionend eventtargetvalue providers customdefaultvalueaccessor export class customdefaultvalueaccessor extends defaultvalueaccessor private myrenderer private myelementref formatters parsers would registered via directive selector eg javascript directive selector formatnumber providers numberformatter export class numberformatter implements formatter constructor private decimalpipe decimalpipe format modelvalue string return thisdecimalpipetransform modelvalue dede directive selector formatnumber providers numberparser export class numberparser implements parser okay work reactive forms may would extend formatters parser inject wanted illustrate idea update sorry confusion proposed solution work reactive forms formatter directives would placed template point view interface dom actual form valueaccessor right place put", "d": "4/2018"}, {"body": "course recommend", "d": "4/2018"}, {"body": "think lot inspirationlessons taken tag helpers asp net razor typescript class address required maxlength value display name street street string usage component usage view html submit form controls section could either html street name required maximum characters rely templates html probably could simplified html would generate end result different customizability taking ever would possible generate entire form inspired htmleditorformodel html submit quite happy razer tag helpers solved requirement yeah angular version heavily inspired would neat motivation end goal able generate forms based openapi spec validation rules defined would allow write backend use tools like nswag generate webapi models services forms would generated api models presto large parts frontend auto generated would also make rather easy apply api changes frontend needs done regenerate models bit naive yes imagine conf demos", "d": "4/2018"}, {"title": "autofocus lost vue loaded", "body": "version reproduction link steps reproduce add autofocus attribute input focused loaded init vue app focus lost need manual focus element second link witouth vue autofocus works autofocus lost expected input keep focused autofocus attribute actually happening focus lost possible emulate behaviour think work witouth need emulate behaivour", "num": "8112", "d": "4/2018"}, {"title": "better documentation around array nested object reactivity", "body": "problem feature solve common occurrence within vue getting fresh array hot api replace existing array fresh array question reactivity implications replacing array deep object vue thisitems remain reactive thisitems diff take advantage performance optimizations answers questions yes setters used object swap wipe watchers anyone clarify expected outcomeoffer guidance approach common problem best way proposed api look like reobservation deeply nested objects", "num": "8111", "d": "4/2018"}, {"title": "weird behavior browser back button", "body": "version reproduction link steps reproduce click page click back button browser expected checkbox check like redirect actually happening checkbox show wrong checked chrome step repeat steps checks disappear", "num": "8110", "d": "4/2018"}, {"title": "\u5728ios\u7684safari\u4e0abfcache\u5931\u6548", "body": "version reproduction link steps reproduce clone install start expected actually happening", "num": "8109", "d": "4/2018"}, {"title": "async component loading show", "body": "const asynccomponent gt \u9700\u8981\u52a0\u8f7d\u7684\u7ec4\u4ef6 \u5e94\u8be5\u662f\u4e00\u4e2a \u5bf9\u8c61 component import mycomponentvue \u5f02\u6b65\u7ec4\u4ef6\u52a0\u8f7d\u65f6\u4f7f\u7528\u7684\u7ec4\u4ef6 loading loadingcomponent \u52a0\u8f7d\u5931\u8d25\u65f6\u4f7f\u7528\u7684\u7ec4\u4ef6 error errorcomponent \u6beb\u79d2 delay timeout write component loadingcomponent show \u6211\u5199\u4e86\u4e00\u4e2a\u52a0\u8f7d\u52a8\u753b\u7ec4\u4ef6 \u4f46\u662f\u6ca1\u6709\u663e\u793a \u6211\u7406\u89e3\u8fd9\u4e2a\u5f02\u6b65\u7ec4\u4ef6 \u5f53\u53bb\u52a0\u8f7d\u7684\u65f6\u5019 loadingcomponent\u5e94\u8be5\u662f\u4e00\u4e2a\u52a0\u8f7d\u7684\u52a8\u753b \u6709\u5565\u53c2\u8003\u7684\u5199\u6cd5\u6ca1", "num": "8108", "d": "4/2018"}, {"title": "mixin mixin see properties first entity", "body": "", "num": "8107", "d": "4/2018"}, {"title": "lazy load components", "body": "problem feature solve problem architecture apps want load components application asynchronally vue declare async component must define constructor function one thus need list every component name exists app even nt loaded first app works see file array called want function dynamic component factory receives name component encountered template render function tries load component dynamically mostly useful async components tries load component definition network resolve component constructor already modified version vue changes successfully use technique build ship three different web apps currently dynamic component factory injected mixin options object want define lowestlevel interface possible designed implemented plugin customized options provide highlevel interface proposed api look like javascript myplugininstall function vue options vueprototypedynamiccomponent function id id matches expected pattern return component constructor probably async constructor otherwise return nothing normal process continues vueuse myplugin someoption true", "num": "8106", "d": "4/2018"}, {"title": "vue rendering options array", "body": "version reproduction link steps reproduce pull repo npm install npm run dev go app created method supposed render option list select element load backend sends vue payload node express server parses large json sends payload frontend pull full stack expected render citynames array options dropdown list coming state actually happening state populated correctly yet rendering options vfor error either want reproduce backend please pull node repo", "num": "8105", "d": "4/2018"}, {"title": "vue rendering state array options", "body": "hi trying render options select table even though state rendering maybe weird thing yet reason nt rendered array brought via node backend heavy parsing vue side see options set store state via vuex console errors displayed options empty rendering state citynames array exporting store components import vue vue import vuex vuex import axios axios vueuse vuex export default new vuexstore state istrue true citynames component script component template", "num": "8104", "d": "4/2018"}, {"title": "vuejs mustach correctly rendered indenting root element", "body": "version reproduction link steps reproduce issue happens root element indented mustache split several lines html myvar root element indented mustache gets rendered correctly also works mustache put single line root element indented html myvar expected mustache bind data actually happening mustache gets rendered plain text wanted prettify code split mustache several lines removed indent root element", "num": "8103", "d": "4/2018"}, {"title": "broken reactivity class instance array property", "body": "version reproduction link steps reproduce wait seconds first array one replaced redrawn mutated array redrawn expected arrays redrawn seconds actually happening mutated array redrawn sure really bug something wrong clearly something", "num": "8102", "d": "4/2018"}, {"title": "functional component fails depending siblings around", "body": "version reproduction link steps reproduce create functional component returns several root nodes use binding like siblings around render template expected renders correctly actually happening renders string undefined console errors interesting may render successfully depending siblings around several examples link", "num": "8101", "d": "4/2018"}, {"title": "gc vfor elements", "body": "version reproduction link steps reproduce open open devtools watch dom nodes click add button click clear follow go back link collect garbage expected dom nodes gc ed actually happening nothing", "num": "8100", "d": "4/2018"}, {"title": "make possible set static classes within attrs hash data object", "body": "problem feature solve doc data objects kind misleading since staticclass nt listed wondering nt added element find odd simplified example nt translate problems comes merging arrays objects strings proposed api look like chrisvfritz said doc issue static class think might make sense alias", "num": "8098", "d": "4/2018"}, {"title": "feature request vswitch directive", "body": "problem feature solve syntax sugar several vif velseif velseif etc example syntax could current setup would see switch statement would make html markup much cleaner proposed api look like", "num": "8097", "d": "4/2018"}, {"title": "render singlefile components without wrapper boilerplate", "body": "problem feature solve singlefile vue component treat entry point rendering dom requires boilerplate script bootstrap js import vue vue import app appvue export const view new vue el app render h gt h app seems unnecessary nt currently seem way compile component selfrendering entry point proposed api look like vue export default el app adding would indicate component meant include precompiled template dom initialize soon generated script loads currently singlefile component support attribute", "num": "8094", "d": "4/2018"}, {"title": "use tostring object interpolation defined", "body": "version reproduction link steps reproduce interpoling object uses method instead normally proper method set way convert object string could try see method present calling one expected fiddle string test actually happening fiddle string json jsonval thanks", "num": "8093", "d": "4/2018"}, {"title": "upgrade version dependency seleniumserver", "body": "problem feature solve currently version dependency seleniumserver defined packagejson could upgrade asking dependency causes version conflict application breaks tests proposed api look like api vue would stay", "num": "8092", "d": "4/2018"}, {"title": "vue route object gets freeze vue core", "body": "version reproduction link steps reproduce using plugin problem getting route params using breadcrumb problem see open issue vuerouter freeze object impossibile manage params easy reproduce install plugin create two route dynamic params links nt replace found something keeps string literally find example link expected get route params chain actually happening explain steps reproduce", "num": "8091", "d": "4/2018"}, {"title": "defining variables containing data seem proxy original", "body": "version reproduction link steps reproduce go link put html file load browser look content currently true false correct click save see true false switch respectively even though directly setting expected update data variable affect somedata update data actually happening seems proxying somedata data variable therefore unable take variables vue data object change new variable proxy back original place could wrong could expected behaviour eyes seems wrong nt make sense happens tested well happens expected fixed happen expected create separate variable containing contents variable vue data object noticed using issue within something building company making extensive use vue many reasons lot data preparing setting correct values database sending using vueresource try prepare data update breaking page problem looking see assigning data like means variable assign data becomes observer way", "num": "8090", "d": "4/2018"}, {"title": "vue breaks styling using comments inline style attribute", "body": "version reproduction link steps reproduce add comment inside style attribute element within vue app instance example style color blue comment backgroundcolor yellow expected element blue text yellow background actually happening comment breaks attribute style properties comment ignored coming effect reproduction example text blue background yellow jsbin contains slightly different example hope live", "num": "8089", "d": "4/2018"}, {"title": "listening blur events keyup enter events input trigger keyup enter events blur events also triggered", "body": "version reproduction link steps reproduce click new tag button input something press return open chrome devtools see output times number expected press return execute kekup enter function focus lost execute loses focus function actually happening press return execute keyup enter function loses focus function focus lost execute loses focus function", "num": "8088", "d": "4/2018"}, {"title": "camel case property names inline template", "body": "version reproduction link steps reproduce component requried prop function named onselectionchange use component xtemplate use vbind onselectionchange myfunc works want use inline template use vbind onselectionchange myfunc correct expected expecting use prop name either xtemplate inlinetemplate actually happening change prop name use component inlinecomponent added codepen repo working put code describe problem", "num": "8086", "d": "4/2018"}, {"title": "keepalive components based runtime conditions", "body": "problem feature solve usecase condition keep component alive based user input supports props check component way components based conditions runtime proposed api look like looking something like following could anything computed vuex state expression", "num": "8085", "d": "4/2018"}, {"title": "error vue execute chromeruntimesendmessage", "body": "hi chrome console error typeerror read property sendmessage undefined objectsendmessage vuecomponentcreatcode productqrcodevue click eval nodemodulesvueloaderlibtemplatecompilerindexjs id hasscoped true transformtorequire video src source src img src image xlink href buble transforms nodemodulesvueloaderlibselectorjs typetemplate amp srcpageoperatorproductvue vuecomponentinvoker vueesmjs vuecomponentvue emit vueesmjs vuecomponente function emit chromeextension vuecomponenthandleclick elementuicommonjs invoker vueesmjs htmlbuttonelementfnwithtaskfnwithtask vueesmjs chrome means redefining design thanks", "num": "8084", "d": "4/2018"}, {"title": "properties used nested component omitted", "body": "version reproduction link steps reproduce open attached link check generated html find something similar default component value note following markup custom component expected grid custom cell component rendered without html attribute actually happening redundant property rendered working vue grid want provide users great customization capabilities run problem bloated markup creating high order components extend default components", "num": "8083", "d": "4/2018"}, {"title": "utilize vue reactivity mobx like data store", "body": "problem feature solve possible simply use unmounted vue instance reactive store however inherits view related functionality make way create nonui vue instance personally nt able understand vue reactivity makes much sense view layer mobx reactivity makes much sense store layer yet mobx typically used react reactive vuex reactive vastly different design mobx similar vue used vue mismatch creates loss symmetry seems clear path towards unified reactive view store system unified use framework unified matching concepts matching apis use mobx vue dealing two different reactive apis kills symmetry consistency get store layer scope vue meant view layer however possible create clean nonui vue instance creates base object expanded separate project proposed api look like javascript new vue ui false data optionally create lower level object used vue instances internally store new vdata data", "num": "8082", "d": "4/2018"}, {"title": "route switching increases memory consume", "body": "version reproduction link steps reproduce yarn install yarn serve select main route switch multiple times child routes check memory consume expected increasing memory switching routes actually happening switching child routes multiple times memory consume increases lot company app basic setup loading cards kanban placed child routes switching one kanban another memory increases take long decrease apparently route components keeps cache way destroy theese components", "num": "8081", "d": "4/2018"}, {"title": "different behavior key data key vmodel", "body": "version reproduction link steps reproduce type something third input whose vmodel test find test updated expected behavior second input whose vmodel data test users type something data propertytest updated actually happening data propertytest updated", "num": "8080", "d": "4/2018"}, {"title": "getting ald vmodel object value change event", "body": "problem event change launch code use vmodel select value used old get new value come accross old link another post speaks issue", "num": "8078", "d": "4/2018"}, {"title": "component calls update hook destroyed", "body": "version reproduction link steps reproduce home link test link expected home component destroyed updated hook called actually happening home component destroyed updated hook called log information home beforecreate home created home beforemount home mounted test beforecreate test created test beforemount home beforedestroy home destroyed test mounted home updated home component call updated hook destroyed vue designed", "num": "8076", "d": "4/2018"}, {"title": "native app call vue method invalid", "body": "version reproduction link steps reproduce ios app call js method ca nt work expected answer asap actually happening ios app call js method ca nt work", "num": "8075", "d": "4/2018"}, {"title": "instance method work functional component ie ca nt use inside", "body": "problem feature solve currently ca nt use functional components html proposed api look like api work outofthebox", "num": "8074", "d": "4/2018"}, {"title": "el vue components always reference dom element", "body": "version reproduction link steps reproduce step click button twice left top add two dom element \u8bf7\u8f93\u5165\u6587\u5b57 drag blank place step double click erery dom element flag one step right click second dom element insert step click \u5220\u9664 remove step find remove first dom element expected expect remove dom element exactly click actually happening always remove first one within component bind \u5220\u9664 event like deletefun elremove", "num": "8073", "d": "4/2018"}, {"title": "el vue components always reference dom element", "body": "version reproduction link steps reproduce step click button twice left top add two dom element \u8bf7\u8f93\u5165\u6587\u5b57 step double click erery dom element tag flag one step right click second dom element step click \u5220\u9664 remove step find remove first dom element expected expect remove dom element exactly click actually happening always remove first one within component bind \u5220\u9664 event like deletefun elremove", "num": "8072", "d": "4/2018"}, {"title": "el vue components always reference dom element", "body": "version reproduction link steps reproduce step click button twice left top add two dom element \u8bf7\u8f93\u5165\u6587\u5b57 step double click erery dom element tag flag one step right click second dom element step click \u5220\u9664 remove step find remove first dom element expected expect remove dom element exactly click actually happening always remove first one", "num": "8071", "d": "4/2018"}, {"title": "vhtml wo nt work", "body": "version reproduction link steps reproduce use expected replaced value evaluated actually happening nothing replaced sure intentional", "num": "8070", "d": "4/2018"}, {"title": "access template child level", "body": "version reproduction link steps reproduce want two show custom template listvue layer triple layout user something listview list expected way two show third html tag actually happening nothing showing", "num": "8069", "d": "4/2018"}, {"title": "input vmodel computed property getter setter", "body": "version reproduction link steps reproduce using jsfiddle link type text inputs expected vue instance data text property updated inputs actually happening first input working using datatext inside setter using thistext data updated", "num": "8068", "d": "4/2018"}, {"title": "allow template element tag name binding", "body": "problem feature solve vue docs give following example case render function might convenient however seems addition single syntax keyword perhaps tag templates could provide functionality render function first tag string return value proposed api look like javascript variable eg maybe something like maybe would nt surprised idea already considered discarded good reasons figured throw feature request anyway discussion future reference", "num": "8067", "d": "4/2018"}, {"title": "vue warning vue directive expression", "body": "define directive use projectbut throw warning indexbottomswipe defined instance referenced render make sure property reactive either data option classbased components initializing property see directive defined vuedirective test acceptstatement false bind el binding vnode logistic code update el binding vnode directive use demo like", "num": "8064", "d": "4/2018"}, {"title": "multidimensional model working", "body": "multidimensional model working well model change press enter", "num": "8063", "d": "4/2018"}, {"title": "property updates slow significantly lifetime application", "body": "version reproduction link steps reproduce yarn yarn run dev ctrl select import observe imports ok first time select file import times observe application performance significantly degrades unacceptable level expected vue application stays responsive launch actually happening vue application slows significantly unacceptable levels variant demo already lot workarounds get vue even update counter realtime without workarounds profilescount simply frozen end stream", "num": "8062", "d": "4/2018"}, {"title": "properties updating realtime", "body": "version reproduction link steps reproduce unpack repotartz yarn yarn run dev ctrl import either tarballs expected profiles counter updated realtime files processed actually happening profiles counter updates files processed smaller tarball given updates seem work realtime ok", "num": "8061", "d": "4/2018"}, {"title": "summernote nt work created event vuejs", "body": "version reproduction link steps reproduce instantiate summernote element inside event vuejs write text inside summernote see issue summernote nt work area instantiate summernote element console watch new summernote created expected create summernote instance without issues actually happening summernote nt work area created created method instantiate summernote element console watch new summernote element created thinking summernote nt work virtual dom wrong", "num": "8060", "d": "4/2018"}, {"title": "refs correct changed list order", "body": "version reproduction link steps reproduce click button three times click click button expected show first actually happening show first", "num": "8059", "d": "4/2018"}, {"title": "", "body": "version reproduction link steps reproduce props datainput type array required true \u62a5vueesmjs vue warn invalid prop type check failed prop value expected string number got array expected \u683c\u5f0f\u4f20\u9012\u4e0d\u6b63\u786e actually happening \u683c\u5f0f\u4f20\u8f93\u9519\u8bef", "num": "8058", "d": "4/2018"}, {"title": "", "body": "props datainput type array required true", "num": "8057", "d": "4/2018"}, {"title": "returns vnode directly array vnodes depending content", "body": "version reproduction link steps reproduce create component uses render function return parent element children create instance component passes multiple elements scoped slot see return array create instance component passes single element scoped slot see return vnode array single vnode expected always return array vnodes even one vnode array behaves actually happening returns mixed types array multiple elements slot direct vnode instance single child inconsistent regular slots behave render functions means render function component rendering scoped slots children needs type check result invoking slot decide needs wrapped array contrast regular slots always safe pass slot child always array bummer although pretty easy classify bug would breaking change lot people using scoped slots write components use default scoped slot root element bug fixed anyone component like would need rewrite like nt bug design love better understand reasoning", "num": "8056", "d": "4/2018"}, {"title": "memory leak vuecomponents", "body": "version reproduction link steps reproduce please check steps provided expected memory leak page navigation actually happening vuecomponents gc also detached dom fragments retain possible leak problem caused vue library", "num": "8055", "d": "4/2018"}, {"title": "getting error mixin css module mode vue components", "body": "version reproduction link steps reproduce mixin vue component turned css module mode mycomponentvue import mymixin mymixin export default name mycomponent mixins mymixin created consolelog style yellow color yellow mymixinvue iam mymixin export default name mymixin red color red expected merge style object output consolelog style expected actually happening throw error", "num": "8054", "d": "4/2018"}, {"title": "\u52a8\u6001\u5220\u9664\u8def\u7531\u89c4\u5219", "body": "problem feature solve \u5728\u505a\u767b\u5f55\u9a8c\u8bc1\u65f6 \u7ed9\u7528\u6237\u52a8\u6001\u6dfb\u52a0\u8def\u7531\u89c4\u5219 \u7136\u540e\u6ce8\u9500\u7528\u6237\u91cd\u65b0\u767b\u5f55\u65f6 \u53c8\u6dfb\u52a0\u4e00\u6b21\u8def\u7531 \u4f1a\u8b66\u544a\u8def\u7531\u89c4\u5219\u91cd\u590d proposed api look like routerdelroutes routes", "num": "8053", "d": "4/2018"}, {"title": "issue getting values without ajax", "body": "way get vselect multiple values without using ajax found link searched lot found help", "num": "8052", "d": "4/2018"}, {"title": "nexttick use microtask macrotask one loop cause task use microtask", "body": "version reproduction link steps reproduce open console expected \u5728nexttick\u4e2d\u5982\u679c\u6709dom\u64cd\u4f5c\u5219\u4f7f\u7528macrotask\u6267\u884c actually happening \u5728\u5b9e\u9a8c\u4e2d\u6211\u5e76\u6ca1\u6709\u8bd5\u51fa", "num": "8050", "d": "4/2018"}, {"title": "prop sanitization", "body": "problem feature solve would extensions props api would allow us sanitize given value property passing onto component instance right real way value set component proposed api look like whould work similarly validators props work passing sanitizer function prop definition", "num": "8049", "d": "4/2018"}, {"title": "console error", "body": "use vue init webpack demo install dependencies cd demo file npm run dev open browser developer tools console error know nt affect work nt want see error", "num": "8046", "d": "4/2018"}, {"title": "binding arg get correct instruction parameters", "body": "version reproduction link steps reproduce results printed expected gonext actually happening gonext", "num": "8045", "d": "4/2018"}, {"title": "vif fires load event removal", "body": "version reproduction link steps reproduce create picture element multiple working source childelements attach load event handler img tag within picture element toggle wrapper element elements vif check many times load event fires expected removing picture elements vif cause additional firing load event image actually happening removing picture elements vif causing additional firing load event image im working project modal loads elements using vfor modal triggered via vif picture elements handler load event specific use case important accurate firing load event problem close modal picture elements firing load callback happen doensnt happen regular elements remove elements problem stops looks like something sources triggering load event", "num": "8044", "d": "4/2018"}, {"title": "vif fires load event removal old issue", "body": "im working project modal loads elements using vfor modal triggered via vif picture elements handler load event specific use case important accurate firing load event problem close modal picture elements firing load callback happen doensnt happen regular elements reproduction remove elements problem stops looks like something sources triggering load event", "num": "8043", "d": "4/2018"}, {"title": "ios safari\u6d4f\u89c8\u5668\u4e0b\u70b9\u51fb\u8def\u7531\u8df3\u8f6c\u540e\u51fa\u73b0\u7a7a\u767d", "body": "ios safari\u6d4f\u89c8\u5668\u4e0b\u70b9\u51fb\u8def\u7531\u8df3\u8f6c\u540e\u51fa\u73b0\u7a7a\u767d \u6570\u636e\u5df2\u7ecf\u8bf7\u6c42\u8fc7\u4e86 \u540c\u6837\u7684\u624b\u673a\u7248\u672c\u4e0a\u6ca1\u6709\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898 \u8bf7\u95ee\u600e\u4e48\u89e3\u51b3\u8c22\u8c22", "num": "8042", "d": "4/2018"}, {"title": "vpre work template tags", "body": "version reproduction link steps reproduce using laraveladminorg incorporated vuejs system problem functionalities use tag template duplicate using jquery vuejs rendering tags even add vpre directive breaking functionality expected directive vpre prevent render tag template actually happening tag template rendered disappears preventing later use js script breaking functionality", "num": "8041", "d": "4/2018"}, {"title": "clipping info given tab", "body": "version reproduction link steps reproduce compute chrome ubuntu chrome throw question use vue error show channel error handleresponse errormessage clipping info given tab log expected show errormessage clipping info given tab channel error handleresponse errormessage clipping info given tab log loggersforeachn invokeloggers error handleresponsepromise handledispatchresponse handlemessage listener eventimpldispatchtolistener extensions publicclassprototype anonymous function extensions eventimpldispatch extensions eventimpldispatch extensions publicclassprototype anonymous function extensions messagelistener extensions eventimpldispatchtolistener extensions publicclassprototype anonymous function extensions eventimpldispatch extensions eventimpldispatch extensions publicclassprototype anonymous function extensions dispatchonmessage extensions channel error handleresponse errormessage clipping info given tab log loggersforeachn invokeloggers error handleresponsepromise handledispatchresponse handlemessage listener eventimpldispatchtolistener extensions publicclassprototype anonymous function extensions eventimpldispatch extensions eventimpldispatch extensions publicclassprototype anonymous function extensions messagelistener extensions eventimpldispatchtolistener extensions publicclassprototype anonymous function extensions eventimpldispatch extensions eventimpldispatch extensions publicclassprototype anonymous function extensions dispatchonmessage extensions uncaught promise error clipping info given tab ehandleresponsepromise ehandledispatchresponse ehandlemessage listener eventimpldispatchtolistener extensions eventpublicclassprototype anonymous function dispatchtolistener extensions eventimpldispatch extensions eventimpldispatch extensions eventpublicclassprototype anonymous function dispatch extensions messagelistener extensions actually happening prevent error", "num": "8040", "d": "4/2018"}, {"title": "template compiler add source metadata html tags", "body": "problem feature solve developing allinone editor webdevs runs inside chrome devtools replacing users fully featured text editor right inside chrome devtools shell automatically pointing project directory comes dom inspector pick element literally take element defined nt look files figure button header coming useful new dev joins project revisiting work long time watch sec demo w react project course also works vue projects awesome watch sec demo w vue project demos shot using locally tinkered compilers clean enough pr goal deliver ultimate developer experience ever features development speak like css quickediting builtin image editor svg editor devs nt fire illustrator photoshop make minor tweaks stuff hurdle releasing app getting external players participate revolutionizing write web wrap two requests please template compilers add metadata tag either data attribute property dom node contains path file relative project root offset tag opens last offset tag closes please star issue proposed api look like something like", "num": "8034", "d": "4/2018"}, {"title": "bound event gets reused vifelse condition", "body": "version reproduction link steps reproduce enter input field click link test btn expected trigger click event configured test btn actually happening triggers function binded test btn trigger test btn happens use vif parent element link use vshow nt issue", "num": "8032", "d": "4/2018"}, {"title": "\u5efa\u8bae\u4e3a\u6570\u7ec4\u6dfb\u52a0\u4e00\u4e2a apply \u65b9\u6cd5", "body": "problem feature solve set \u6240\u4ee5\u6211\u60f3\u5728\u6570\u7ec4\u4e0b\u6dfb\u52a0\u4e00\u4e2a\u53ef\u4ee5\u89e6\u53d1\u66f4\u65b0\u7684\u65b9\u6cd5 \u6240\u4ee5\u5728 \u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b9\u6cd5 \u5177\u4f53\u7684\u4ee3\u7801 \u6d4b\u8bd5\u4ee3\u7801\u5728\u540c\u76ee\u5f55\u7684 testmjs \u8fd9\u6837\u505a\u4f1a\u91cd\u65b0 observe proposed api look like thisarray apply", "num": "8031", "d": "4/2018"}, {"title": "add nexttick option watch api", "body": "problem feature solve situations watch callbacks fired next event loop example create component select value watcher triggered selectitems created proposed api look like", "num": "8030", "d": "4/2018"}, {"title": "losing data load new page", "body": "hello studen know java php start laravel vue make update project al ready change page lose data example url part create app listing gen movies db ok list movies gen url change gennameofgen check soucer ul get new vue work main page gt home one time page change generonameofgen get problem include blade sidebar content app basic say page display sidebar include vue app", "num": "8029", "d": "4/2018"}, {"title": "keepalive includeexclude components component key attribute", "body": "problem feature solve include exclude props allow components conditionally cached component name want reuse components force replacement using attribute control components want keepalive matching components name proposed api look like", "num": "8028", "d": "4/2018"}, {"title": "put agenda", "body": "", "num": "8027", "d": "4/2018"}, {"title": "vmodel bug", "body": "version reproduction link steps reproduce run bug ca nt show correctly expected add tips warn add trim actually happening text space browser correct think bug", "num": "8026", "d": "4/2018"}, {"title": "creating component named map warn user button", "body": "version reproduction link steps reproduce create component includes word map case insensitive example map mapview mapper expected expect work least give sort error message actually happening nothing happens components render error message", "num": "8025", "d": "4/2018"}, {"title": "need number filter", "body": "using angularjs yearrecently found methods transform decimals fixed number html deom add jsplease add number filter vue thanks", "num": "8024", "d": "4/2018"}, {"title": "need numbr filter", "body": "using angularjs yearit convinient transform decimals fixed numbr vuecan add number filter html thank", "num": "8023", "d": "4/2018"}, {"title": "vonce component tag nt work vfor", "body": "version reproduction link steps reproduce run code watch expected yay yay values change hell naw seconds actually happening yay yay values changing hell naw seconds wait seconds behavior consistent component tag vfor change comp comp var z new vue el app data comp items components template yay yay template hell naw settimeout function zcomp", "num": "8021", "d": "4/2018"}, {"title": "wrong style element", "body": "version reproduction link steps reproduce add element style example width inspect element chrome print value comma dot warning see reproduction expected expected value dot comma actually happening dot transformed comma", "num": "8020", "d": "4/2018"}, {"title": "vfor directive inconsistency local production environment using chrome", "body": "version reproduction link steps reproduce create simple table create http request retrieve collection data used utilise directive loop data table row see data rendered request chrome tools gt network expected render collection data actually happening ca nt seem render collection data using directive collection data coming http request works completely fine local machine production environment ran bug deploying application production environment seems happening chrome currently latest", "num": "8018", "d": "4/2018"}, {"title": "introduces typeerror bind function", "body": "version reproduction link steps reproduce provide non function utility method expected lt rendered failed silently sure want keep expectation existing projects fail render completely devmode warning least helpful identifying issue actually happening uncaught typeerror refactoring method use native bind exposes coding error upgrading fairly large codebase one developers mistakenly added object component method eg global vue events instance made way production worked fine upgrading took find clear indication error happening devs experienced well", "num": "8017", "d": "4/2018"}, {"title": "vue selected bind work option tags", "body": "version reproduction link steps reproduce instantiate vue instance property named array consisting iterate locations tag like expected attribute set element actually happening attribute set also tried following attempting debug avail", "num": "8016", "d": "4/2018"}, {"title": "merge common class names component root element component", "body": "problem feature solve looks little awkward duplicate class names dom element proposed api look like look fiddle element component two classes looks like html two classes would merged one html would worked behaved exactly way code look lot cleaner", "num": "8015", "d": "4/2018"}, {"title": "bug report bug animation", "body": "version reproduction link steps reproduce create items expected top element appears animation actually happening top element appears without animation instead bottom element reappears animation", "num": "8014", "d": "4/2018"}, {"title": "unable use directives render function typescript", "body": "version reproduction link steps reproduce paste run expected errors actually happening property oldvalue missing type name string value string", "num": "8013", "d": "4/2018"}, {"title": "component property must function restriction", "body": "problem feature solve take restriction would increase consistency understand every component needs copy object ca nt copy object hood benefits using function instead proposed api look like", "num": "8012", "d": "4/2018"}, {"title": "deletion elements using custom directives causes elements display properly", "body": "version reproduction link steps reproduce html \u4fee\u6539 \u65b0\u589e \u8fd4\u56de js directives inserted el binding bindingvalue elparentnoderemovechild el mounted settimeout gt thisisedit thisisedit expected normal display status changes actually happening display normally status changes cancel comment modify button displayed normally", "num": "8011", "d": "4/2018"}, {"title": "importing css always yields file found", "body": "trying import component inside sections matter path provide double checked correct app fails build due able find file assuming added folder folder results following path import file following code always fails due able find file error happens pointing folder well done need scope components reuse", "num": "8010", "d": "4/2018"}, {"title": "using vifvelse two vmodeled select elements mixing value value option sets produces incorrect option values", "body": "version reproduction link steps reproduce click button twice expected first element show left value selected also current value remain actually happening first element shows selected item value changed empty value one looks values set selecting new value two three option values incorrectly taken select bug seems happen one sets values using attribute another select sets values using value binding also happens elements set", "num": "8009", "d": "4/2018"}, {"title": "page showing ipad specifically", "body": "version reproduction link steps reproduce open link ipad see show personname persontitle expected persons show like opened browser actually happening showing right content showing personname persontitle", "num": "8008", "d": "4/2018"}, {"title": "vuejs android keyboard last typed word missing model", "body": "version reproduction link steps reproduce tried android keyboard autosuggest enabled js event nt fired typing fired space blur click suggested word expected model inputvalue actually happening updated workaround", "num": "8007", "d": "4/2018"}, {"title": "transition filckering", "body": "version reproduction link steps reproduce create transition effect page expected fluid transition without flickering actually happening transition step original dom element removed replacement injected filler space occuped orignal become empty generate flickering every dom element next original fill empty space moment replacement injected next dom element pushed original place", "num": "8005", "d": "4/2018"}, {"title": "sync nt work kebab case update events", "body": "version reproduction link steps reproduce run attached fiddle click change bar button expected prop root component updated via sync actually happening prop nt get updated currently migrating vue vue need stick using kebab case naming component event names sync seems useful less boilerplate think work casing camelkebab also found following docs sync modifier instead recommend emitting events pattern update mypropname kebab case nt work sync", "num": "8004", "d": "4/2018"}, {"title": "touchstart event executed twice use breakpoint debugger chrome devlop", "body": "version reproduction link steps reproduce open chrome develop useing mobile mode click touchstart notice console expected touchstart printed whether useing breakpoint debugger actually happening use breakpoints debugg print touchstart twice program stop second log stop first time print use breakpoint debugging used", "num": "8001", "d": "4/2018"}, {"title": "touchstart event executed twice use breakpoint debugger chrome devlop", "body": "version reproduction link steps reproduce npm install npm run dev open chrome develop switch singer page click letter right side page notice console expected touchstart printed whether useing breakpoint debugger actually happening use breakpoints debugg print touchstart twice program stop second log stop first time print use breakpoint debugging used comes line code srcbasebaselistviewbaselistviewvue", "num": "7999", "d": "4/2018"}, {"title": "labeling root instance", "body": "problem feature solve app nt use vue base project backbone project backbone view create instances vue views inside handles lifecycle vue instance means lot instances makes debugging challenge want way make something like identify proposed api look like js new vue name rootbar label instancename etc", "num": "7998", "d": "4/2018"}, {"title": "vue trouble index event", "body": "trying display list images users change clicking uploading new image first image going default add image issues sending index event method display index photo html correct send index method parameter always words use index produces correct index use consolelog index produces looking advice thanks html index method previewimage function event index thistoggle false var input eventtarget inputfiles amp amp inputfiles var reader new filereader readeronload e gt consolelog index index thisimagedatapush etargetresult else thisimagedata index etargetresult readerreadasdataurl inputfiles", "num": "7997", "d": "4/2018"}, {"title": "access context", "body": "problem feature solve currently afaik way access context sfc templates using functional components proposed api look like nt good idea simplest one think guess would require internal redesign sort", "num": "7995", "d": "4/2018"}, {"title": "var decodingmap function decodeattr properly decode html entities template", "body": "version reproduction link steps reproduce template html attribute use html entity included decodingmap variable expected html entities present html template decoded properly vue prior set dom actually happening vue decoding entities specified var decodingmap ignoring others really includes full unicode charset var decodingmap decodes lt gt quot amp sometimes newline tab proper way decode attribute values html entity used attribute value", "num": "7994", "d": "4/2018"}, {"title": "code wrong nt browser display page cry help", "body": "version reproduction link steps reproduce goods comment merchants content import header componentsheaderheadervue export default components vheader header app tab display flex width height lineheight tabitem flex textalign center expected page shows goodscom merchants actually happening page shows goodscom merchants", "num": "7993", "d": "4/2018"}, {"title": "vif sets data using instead", "body": "version reproduction link steps reproduce open console click select dropdown expected block render actually happening see fire twice initial data expected reset data whatever started case aware using bad practice also think odd statement set data within template \u30c4", "num": "7992", "d": "4/2018"}, {"title": "methods cant access data using cdn", "body": "version reproduction link steps reproduce create simple html page import vue create vuejs file import html create span tag html add methodx vuejs file create message variable add text vuejs file create method named methodx using syntax example expected text message variable must shown actually happening method return undefined instead using thismessage use string shown use function notation shows variable", "num": "7991", "d": "4/2018"}, {"title": "values attributes replaced attribute name breaks mathml", "body": "version reproduction link steps reproduce open html browser internet connection required fetch libraries expected displayed actually happening open displayed comes line code list rewritten attributes general problem including block xml html", "num": "7990", "d": "4/2018"}, {"title": "compilation mustaches mustaches expression nt work", "body": "version reproduction link steps reproduce use string literal containing data binding expected actually happening expected result svelte svelte example", "num": "7989", "d": "4/2018"}, {"title": "class style attributes effect functional sfc components", "body": "version reproduction link steps reproduce clone repository open expected functional component painted greenred applying css class style actually happening css class applied mostly using added class components bemstyle annotations component time element point view container block personal point view thus allowing delegate certain properties container like positioning example like use principle functional components example option specify attribute works statefull components functional components fail pass properties rendering please note functional components declared example repository contain attributes root node described documentation", "num": "7985", "d": "4/2018"}, {"title": "add property render context functional component", "body": "problem feature solve custom properties options functional component ca nt accessed easily proposed api look like render function functional component options accessed like related issue", "num": "7984", "d": "4/2018"}, {"title": "create discordgitter chat bridge", "body": "used matterbridge great success someone fork run easily heroku gitter perk community activity visible one click signup uses identity providers github twitter someone feels like chatting one click def lowest barrier chat room bridge would still keep community toolset obviously ppl could upgrade discord come across needs value adds presumably exist tada", "num": "7983", "d": "4/2018"}, {"title": "compilation mustaches mustaches expression nt work", "body": "version reproduction link steps reproduce use data binding expected actually happening", "num": "7982", "d": "4/2018"}, {"title": "ordinary form post method working laravel vuejs last version", "body": "hello simple raw codes vue instance testing looking browser like token value true sending post data action url refreshing page im writing wrong data token sending post method form idea fix problem interesting really ordinary easy web form thank much", "num": "7978", "d": "4/2018"}, {"title": "content contenteditable dobeling without variable change", "body": "vuejs hello really weird bug contenteditable copy variable write gt change disfucus gt change variable stay error occurs content editable changed name function updatehtml interact site effekt invested hours track wieder behavior nt found similar problems net hopefully help pcpath updatehtml function e var foo etargetgetattribute name complete code backend code module chrome performance profile pictures weird stuff wierdbugzip", "num": "7977", "d": "4/2018"}, {"title": "memory node count increase showing hiding vif", "body": "version reproduction link steps reproduce link codepen simple vue app simply contains button showshides basic component based boolean data property open chrome dev tools go performance tab tick memory checkbox click record toggle button number times stop recording expected would expect nodes count rise component shown fall hidden potentially rise first time shown stay actually happening nodes listeners js heap counts rise time component shown nt go perhaps nt expect browsers clear nodesheap objectslisteners straight away prevent much gc churn production app form gets shownhidden like seems increase node count little every time opened nt yet seen go hopefully misinterpreting looking case would glad reassurance", "num": "7976", "d": "4/2018"}, {"title": "prop component conditionally rendered slot stops reactive", "body": "version reproduction link steps reproduce clicking update message button adds dots message alter button clicked message longer updated expected updating message continues working even slot altered actually happening prop value stops reactive without error warning behavior takes place including version lower works expected unit test found github understanding edge case refactoring structure avoid placing identical slot conditional positions resolves problem however behavior occurring older versions suddenly changed without error warning considering bug reporting let know", "num": "7975", "d": "4/2018"}, {"title": "compilation fails empty values vbind", "body": "version reproduction link steps reproduce referencing closed issue feel like something done issue left white pages along way without clear error message pass null value prop entire compilation breaks evaluated html simply dumped console really better way handle obviously user could check values actually showing component large application piece data sometimes null either accident oversight nothing done could someone least please explain happens eyes component getting prop justify entire compilation failing expected application fail compilation actually happening fails compilation", "num": "7973", "d": "4/2018"}, {"title": "event modifiers support async", "body": "problem feature solve issue want discuss think said right logic implement different componenthowever parent component need consider details child component think create componenti would like encapsulate logic related component inside componentbecause logic belong componentnext time use component new component need think logic new component besides applications require asynchronous requestsgetting status parent component commonso time use ugly way make work component export default name componenta methods ajax return component b loading componentb export default name componentb props loading go methods emit thisloading true thisgo gt thisloading false think nt good way efficient found way custom event modifiers want write demo show efficient proposed api look like add async modifier component export default name componenta methods ajax return loading componentb export default name componentb props loading methods emit thisloading true emit go gt thisloading false", "num": "7972", "d": "4/2018"}, {"title": "event modifiers support async", "body": "problem feature solve issue want discuss think said right logic implement different componenthowever parent component need consider details child component think create componenti would like encapsulate logic related component inside componentbecause logic belong componentnext time use component new component need think logic new component besides applications require asynchronous requestsgetting status parent component commonso time use ugly way make work component export default name componenta methods ajax return component b loading componentb export default name componentb props loading go methods emit thisloading true thisgo gt thisloading false think nt good way efficient found way custom event modifiers want write demo show efficient proposed api look like think maybe vue modifiers like async supportit write like component export default name componenta methods ajax return loading componentb export default name componentb props loading methods emit thisloading true emit go gt thisloading false", "num": "7971", "d": "4/2018"}, {"title": "codebased html entity improperly reescaped vue html attribute", "body": "version reproduction link steps reproduce use unicodebased html entities html attribute eg title template vue expected ampersand character leading character entity reescaped inserted dom actually happening leading ampersand character codebased html entity reescaped put dom issue reported got closed", "num": "7970", "d": "4/2018"}, {"title": "html entity template gets reescaped incorrectly vuejs", "body": "version reproduction link steps reproduce html template provide html title attribute contains html entity using ascii codes expected vue mess reescapeentify literal ampersand character html template actually happening vue sees ampersand character html attribute changes html amp entity resulting rendered ampersand character trying put newline character title attribute within template file seems like vue recognized entities named ones perhaps leaves alone entities using ascii codes get corrupted entities using ascii codes seem behave fine placed content inside tag placed html attribute", "num": "7969", "d": "4/2018"}, {"title": "register service worker correct mimetype", "body": "problem feature solve trying register service able send push notifications using firebase cloud messaging put file called firebasemessagingswjs static folder access file browser firebase needs mimetype applicationjavascript texthtml change proposed api look like", "num": "7968", "d": "4/2018"}, {"title": "uncaught promise syntaxerror unexpected end input eval", "body": "version reproduction link steps reproduce using fetch post get data expected get json fetch actually happening", "num": "7967", "d": "4/2018"}, {"title": "better lifecycle events", "body": "problem feature solve hello came little specific think useful ideas vue undocumented lifecycle events nested highordered components custom input\u043f search component custom input wanted add autofocus search input solution nice problems also adds event causes mounted events call demo would better component instance passed event proposed api look like add flag another name lifecycle events compare component instances like compares targets native events add component instance events allow us use use cases like one", "num": "7966", "d": "4/2018"}, {"title": "bubble event modifier pass along events especially args", "body": "problem feature solve bubbling event deep child really cumbersome without event bus emit event every parent tree reaches target event modifier like would really nice proposed api look like instead repeating vue even", "num": "7965", "d": "4/2018"}, {"title": "transition overflowed elements prevents scroll", "body": "version reproduction link steps reproduce click button open menu element transitioning begin scroll try move mouse scrolling expected scrollable area continues scroll actually happening scrolling area get stuck scrolling event still fired actually scrolling content move mouse start scroll works expected wait transition finish scrolling bug present report component scrolling confirmed happening chrome extends back even framework vuetify created attached codepen determine framework specific generally reproducible may css properties trigger issue success opacity happens specifically declaration remove entry animation occur removed entry animation", "num": "7964", "d": "4/2018"}, {"title": "input file change events fired microsoft edge", "body": "version reproduction link steps reproduce outlined jsfiddle expected change event fired file selected edge browser actually happening change event fired input triggered within vue might bug edge behave correctly outside vue leads believe issue two somewhere", "num": "7963", "d": "4/2018"}, {"title": "develop multi page app vuejs", "body": "develop multi page app vuejs go nuxtjs multi page app ssr mandatory develop multi page app someone shed light question", "num": "7962", "d": "4/2018"}, {"title": "page two new vue first vhtml appear hidden immediately", "body": "page two new vue first vhtml appear hidden immediately", "num": "7961", "d": "4/2018"}, {"title": "array changes always trigger computed property updates", "body": "version reproduction link steps reproduce create computed property maps array values vuex store expected computed property update dependent array changed actually happening computed property updates first time dependent array changed later changes array trigger update worked expected seems broken know beta changelog mentions known breaking changes could culprit", "num": "7960", "d": "4/2018"}, {"title": "nt create refs link without modifier", "body": "version reproduction link steps reproduce add modifier prevent stop etc error gone expected need work without modifiers actually happening javascript error occurs", "num": "7959", "d": "4/2018"}, {"title": "regression slots functional components", "body": "version reproduction link steps reproduce create nested set functional components change slot definition child component slots correctly rendered happening slot names persisted correctly passed chain common pattern creating reusable ahoc components dropdown predefined content using lower level component structural component version version expected slots render correct position actually happening slots correctly assigned correct possition introduced ticket", "num": "7958", "d": "4/2018"}, {"title": "slotscope destructuring alias seem work", "body": "version reproduction link steps reproduce tried vbind slot object consuming slot used slotscope deconstructed aliased variable says typeerror read property title undefined expected deconstruct object correctly okay without alias actually happening alias seems working returning undefined value", "num": "7956", "d": "4/2018"}, {"title": "get list mixins component", "body": "problem feature solve way get component mixins list example would useful collect merge default options mixin every mixin must extend functionality options realize functionality dependence existing mixins proposed api look like vuemixin", "num": "7955", "d": "4/2018"}, {"title": "support exporting function functional component", "body": "problem feature solve read support hoc component composition proposed api look like instead exporting object like could also export directly render function since component function compose much easier", "num": "7954", "d": "4/2018"}, {"title": "dynamically created input associated", "body": "version reproduction link steps reproduce create radio click add click third radio changed third fourth radio want change third expected click third change third click fourth change fourth actually happening click third changed third foutth first second working well new radio created add work bad", "num": "7952", "d": "4/2018"}, {"title": "ios wechat web page video click play", "body": "version link minimal reproduction steps reproduce system real machine open web link wechat click video play button problem code expected system normal video playback actually happening system click video loaded play ios versions android click video wechat play normally additional comments optional previously upgrading encountered problem execution timing nexttick downgraded using settimeout function delay time settimeout function repair wechat web pages play problem suspected timing issue vue settimeout function ios systems", "num": "7951", "d": "4/2018"}, {"title": "vbind obj seems create new object rather passing reference", "body": "version reproduction link steps reproduce create singlefile component slot vbind object attribute consume component via another template set slotscope attribute within rendering call getter function object return undefined function exist expected template code consumes slot use slotscope attribute get plain object however need class structure invoke functions access getters etc actually happening ca nt access class structure object bind getting new object instance rather reference related lets slot bind object thing would like invoke functions object class passed current situation doable creating new object instance instead referencing object bind slot", "num": "7947", "d": "4/2018"}, {"title": "error using vfor", "body": "version reproduction link steps reproduce running code result following error html page title value var apptest new vue el apptest data l error message invalid expression syntax error raw expression vfor value l invalid vfor alias expression vfor value l expected generated actually happening generated error persuaded senior long time introduce vuejs problem solved plan reorganize site vuejs please solve problem", "num": "7946", "d": "4/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u5199\u7684\u4e00\u4e2a\u7ec4\u4ef6 \u4e24\u4e2ai\u6807\u7b7e\u4e00\u4e2a\u662f\u52a8\u6001\u751f\u6210\u7684\u4e00\u4e2a \u76f4\u63a5\u5199\u7684dom \u52a8\u6001\u6e32\u67d3\u7684css\u6700\u540e\u6ca1\u751f\u6548 \u6253\u5305\u51fa\u73b0\u95ee\u9898 expected \u4e24\u4e2a\u6807\u7b7e\u7684css\u540c\u65f6\u751f\u6548 actually happening \u53ea\u6709\u4e00\u4e2a\u751f\u6548 \u6211\u6709\u4e24\u4e2ai\u6807\u7b7e \u5e76\u4e14 \u4e0d\u540c\u7684\u662f \u4e00\u4e2a\u662f\u7528js vhtml\u52a8\u6001\u6e32\u67d3\u7684 \u4e00\u4e2a\u662f\u5199\u7684dom \u52a8\u6001\u751f\u6210\u7684 \u6211\u6700\u540e\u628a\u8fd9\u4e2a\u653e\u5728commoncss\u89e3\u51b3\u7684", "num": "7945", "d": "4/2018"}, {"title": "use instance instead new object call class methods", "body": "", "num": "7944", "d": "4/2018"}, {"title": "provide way define different name prop attribute", "body": "problem feature solve cases really comfortable use prop name example inside component takes passed prop transforms code looks bloated reminds workaround good solution ability change attribute name prop would great something like proposed api look like thus using proposed solutions inside component would return transformed value example believe feature would awesome help us write cleaner code", "num": "7943", "d": "4/2018"}, {"title": "\u0628\u06cc\u0645\u0647", "body": "", "num": "7942", "d": "4/2018"}, {"body": "setting new array like fine think actually docs closing question know rules", "d": "4/2018"}, {"body": "totally fine absolutely sure mentioned docs", "d": "4/2018"}, {"body": "quite interesting problem nt notice translation bug report vue included webpage backforward cache longer works ios safari means navigating back url event prop always equals scroll position get preserved investigation found caused line instance created vue initialization process prevents safari caching page understand correctly uses microtask default used deferring dom event callbacks maybe consider alternative", "d": "4/2018"}, {"body": "long delay quite indeterministic likely revert always using microtasks using fixed edge cases caused problems end", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "pretty sure missed async components work vue", "d": "4/2018"}, {"body": "looking array perfectly create function loads array components names decided runtime using webpack probably others vue handle promises return component descriptors per prefer factory api feel free create plugin leverages vue async api release plugin closing question btw use official forum discord server questions", "d": "4/2018"}, {"body": "thank attention time excellent work however question sincerely understand frame want use webpack already custom workflow much light easier debug fundamental issue posting feature request current async component api demands component name list want component name list absolutely need function vue receives name components needed runtime dinamically load component name rules please see file current approach", "d": "4/2018"}, {"body": "sorry important question even necessary nt explain simply said absolutely necessary obviously necessary others first time get anyone asking anything like unless strong reason could potentially useful others well nt see convincing reason consider", "d": "4/2018"}, {"body": "misnamed getter please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "4/2018"}, {"body": "posva thanks reply made many changes debug missed typo anycase changed yet options still rendering please reopen", "d": "4/2018"}, {"body": "sorry besides repro contain full server create simple codesandbox maybe fetch data server extra setup needed take quick look", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "issue automatically closed", "d": "4/2018"}, {"body": "property name used component template issue closed nt meet requirements new issues please use issue helper create new issue", "d": "4/2018"}, {"body": "please read bot message explains exactly closed issue", "d": "4/2018"}, {"body": "expected getusers keeps original value return function replaces db users array", "d": "4/2018"}, {"body": "woops figured wrong exactly thanks answer future reference interested gon na explain little problem misconception regarding arguments passed functions js forgot mutable objects arrays plain objects opposed primitives passed reference callbyreference copy referenced object callbysharing meaning mutate referenced object reassign local scope original object wo nt updated bad", "d": "4/2018"}, {"body": "works using instead though", "d": "4/2018"}, {"body": "tested captured allocation timeline dom nodes retained pressing go back means correctly gced pressing collect garbage wo nt effect something already gced", "d": "4/2018"}, {"body": "oh sorry blindly trusted performance monitor tab added click dummy component dom nodes js event listeners successfuly gced visible taking snapshot memory", "d": "4/2018"}, {"body": "hmm reproduce issue opened page pressed add button couple times sure nt pages renderer process", "d": "4/2018"}, {"body": "use something like getclass return staticclass whatever want return", "d": "4/2018"}, {"body": "armandomendivil feature request data objects specifically often used functional components question issue", "d": "4/2018"}, {"body": "functional component nt need merge outer classes", "d": "4/2018"}, {"body": "guess assumed option accept objects actually accepts string literals need proposed alias", "d": "4/2018"}, {"body": "guess assumed option accept objects actually accepts string literals think assumption fault nt make clear current docs fixing also honestly forgot accepts interface class binding including arrays well", "d": "4/2018"}, {"body": "chrisvfritz fault know vue demonstrating old story happened documentation happen others fnlctrl object string array know works thing different case result lot vue plugins libraries use little frustrating documented alias would great way make accessible seems obvious doc", "d": "4/2018"}, {"body": "staticclass different class little frustrating documented nt understand undocumented behaving different could reason include another alias intentionally left undocumented reduce api surface avoid questions people may though fact stable enough use production would never removed vue enforces strict compatibility different versions runtimecompiled code seen libs use want use cool intended part public api would remain undocumented", "d": "4/2018"}, {"body": "maybe warning would better nothing alias chrisvfritz idea better nothing intentionally left undocumented reduce api surface hurting helps", "d": "4/2018"}, {"body": "templates makes possible use counter intuitive nt work could left undocumented least work", "d": "4/2018"}, {"body": "made work introduce complexities work arrayobjects like merged take precedence override nt see value adding another way exactly thing potentially lead confusions already good enough solve original use case already one single way bind classes throughout documentation see need introducing another alias breaks consistency", "d": "4/2018"}, {"body": "could work element already within templates another alias breaks consistency consistency already broken since nt included normal html attributes", "d": "4/2018"}, {"body": "could work class static element already within templates made work string literals make note documentation nt work arrayobjects merges normal instead overriding people would recall look docs touching code uses imo unnecessary mental burden consistency already broken since class nt included normal html attributes meant using exact one way achieve exact one goal documentation beginning stated clearly vue use field manipulate classes technically special html attribute native dom api use manipulate classes styles unlike attrs use nt see sane tutorial would tell people manipulate classesstyles something potentially confusing probably better introduce first place", "d": "4/2018"}, {"body": "lot vue plugin libraries use little frustrating documented emileber understand frustration tricky situation still think end result documenting would confusion people misuse nt fully understand subtle behavior attrs alias would great way make accessible seems obvious doc fnlctrl still agree would useful html attributes intuitive users allowed thinking though emileber think nt easily feasible way handle internally may something fix without breaking changes give little background find way currently treat problematic html attributes nt ca nt included nt included nt respect long story short agree obviously great work inside may something wait vue general overhaul", "d": "4/2018"}, {"body": "understand discussion documented issues better nothing thanks guys", "d": "4/2018"}, {"body": "pretty sure feature request already could nt find since api freeze nt think add nt feel readable explicit vifvelse inconveniences switch statement one code smell adding many ifelse harder adding many switch cases instead could probably refactor code multiple functions templates time nt many vifvelse sometimes easier write render function", "d": "4/2018"}, {"body": "agree lot logic inlined templates like generally code smell awkward test maybe computed property method used instead said feature would probably difficult implement brief look around nt see anything npm looking small side project interest iwe could work", "d": "4/2018"}, {"body": "really nt much free time skills nt think interested see done lol think would valuable lot people", "d": "4/2018"}, {"body": "benefits quite debatable add things mainjs file case something implemented loader plugin feel free create feel useful people", "d": "4/2018"}, {"body": "debatable debate thanks", "d": "4/2018"}, {"body": "said something implemented loader plugin added vue core also prefer keeping things explicit vue please next time keep negativity away opening commenting appreciated", "d": "4/2018"}, {"body": "selenium devdependency version affect", "d": "4/2018"}, {"body": "party plugin issue even related vue reported vuerouter repo route object immutable mapping current url design never attempt mutate route object instead trigger navigation", "d": "4/2018"}, {"body": "feature javascript related vue variables reference object look deep clone solve problem", "d": "4/2018"}, {"body": "setting method pandemm said references javascript", "d": "4/2018"}, {"body": "regex second rule starts comment first rule reason issue comment breaks attribute style properties comment ignored coming effect true breaks second property properties preserved working improving update pr ready", "d": "4/2018"}, {"body": "honestly though ca nt think good reason use support need comments inline styles probably use object computed property adding extra logic handle incurring perfcode sizemaintenance cost", "d": "4/2018"}, {"body": "maybe case use developmentscaffolding temporarily disable properties technique chrome uses unchecking single property web tools opinion vue strive far possible change behavior templates understand nt prioritize", "d": "4/2018"}, {"body": "existing regex changed top head leave posva take call whether would like pr imo would like vue allow", "d": "4/2018"}, {"body": "blur event triggered input removed condition becomes false normal browser behaviour vue nothing", "d": "4/2018"}, {"body": "unfortunately html limitation tag names converted lower case limited using vue files please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "4/2018"}, {"body": "using work fine said cases trying control behaviour precisely harder creating necessary methods restore state need", "d": "4/2018"}, {"body": "posva actually written earlier use case big template inside using named use would mean maintain two templates exactly except keep alive wrapper hence looking boolean turn functionality onoff something like following would much better", "d": "4/2018"}, {"body": "see concern one cases wher jsx easier templates nt need write chunk code twice since using exact component thought using hooks related", "d": "4/2018"}, {"body": "sure easytough would add jsx typescript vueclasscomponents easy would translate code jsx event hinting manually destroy component true think would code smell case actually code interface developers open component dialog extra options like following ts import tiles componentstilesvue import ceiling componentsceilingvue import sdialog servicessdialog imports component export default class settings extends vue someopendialogmethod sdialogopen component tiles keepalive true options like anotheropendialogmethod sdialogopen component ceiling keepalive false may boolean dynamic options like", "d": "4/2018"}, {"body": "small generic functional component easily achieve conditional wrapper element javascript conditionalwrapperjs export default functional true props tag type string default div show boolean render h ctx return thisshow h ctxpropstag ctxdata ctxchildren thisslots default html headerpropstitle fullscreenexit fullscreen dialogoptionsfullscreen fullscreen fullscreen close close", "d": "4/2018"}, {"body": "linusborg thanks man cool solution", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "expected nonprops bound attributes actually feature scenario use computed property return object adapted component solve problem", "d": "4/2018"}, {"body": "afraid answer completely clear ca nt omit property custom component passed component used within look mycell component implementation maybe nt understand idea correctly", "d": "4/2018"}, {"body": "ah ok forget computed property thing need prevent attribute added root element component nt declared prop either declare prop yeah sounds dumb use functional component props option everything prop easily set false nt automatically set nonexistent props attributes hope helps", "d": "4/2018"}, {"body": "nt understand issue vue able mobx use vue hidden ui control subcomponents think work like description", "d": "4/2018"}, {"body": "yeah testing evaluating bunch different frameworks store combinations clear someone would really even need mobx vue since could set store vue instance dataprop would become reactive existence vuemobx repo made bit confusing closing however one thing note maybe eventually providing demo vue vs react mobx would help clarify far scope vue really", "d": "4/2018"}, {"body": "use vue nonui instance actually whole idea behind global bus pattern antipattern way vuex store actually wrapped vue instance see details wrapper providing extra features", "d": "4/2018"}, {"body": "nt post vuerouter repository", "d": "4/2018"}, {"body": "please nt create duplicate issues leave open", "d": "4/2018"}, {"body": "use templates nt refer vue instance", "d": "4/2018"}, {"body": "posva get correct initial value", "d": "4/2018"}, {"body": "sure nt use templates access data", "d": "4/2018"}, {"body": "change compiled template depending function scope", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "reproduction link defined components component", "d": "4/2018"}, {"body": "badnow corrected mistake changed repo link problem still remains", "d": "4/2018"}, {"body": "always better use computed property watcher see api docs", "d": "4/2018"}, {"body": "thank reply nt perform domdependent operations updated hook calledand according vue lifecycle one component destroyed updated hook nt calledbut repo condition happensi ca nt figure happens", "d": "4/2018"}, {"body": "please provide valid repro", "d": "4/2018"}, {"body": "use parent", "d": "4/2018"}, {"body": "thanks somewhere docs use case mean would really helpful others", "d": "4/2018"}, {"body": "fact yes would helpful docs nt know nt open pr docs", "d": "4/2018"}, {"body": "darkylmnx sorry poor documentation add later", "d": "4/2018"}, {"body": "kazupon prob thanks", "d": "4/2018"}, {"body": "sure open another issue asking since functional components instance possibile use local components absolutely defined components globally nt said docs either update seems discussed", "d": "4/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow nt manually remove vue relies element normal removed", "d": "4/2018"}, {"body": "works setting element therefore work nt produce element", "d": "4/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow need correctly pass slots", "d": "4/2018"}, {"body": "oops thanks listview global nt want set name listview need set name uservue", "d": "4/2018"}, {"body": "expected please see", "d": "4/2018"}, {"body": "thanks properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty", "d": "4/2018"}, {"body": "actually use want dynamic elementcomponent template render functions allow dynamically build dom tree end different trees", "d": "4/2018"}, {"body": "oh idea accepts actual components plain element tags thanks feature nt seem documented least clearly room improvement believe working fiddle demo case anyone else stumbles question", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "still much please take time boil strict minimum electron extra file download leak best simple html file think use forum discord server stackoverflow first could find answer", "d": "4/2018"}, {"body": "already people discord look issue seemed quite competent nobody see issue code small case already leading actually interested looking problem happier close issues resolve sat apr eduardo san martin morote lt notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread", "d": "4/2018"}, {"body": "nt interested looking problem would nt asked smaller repro asked smaller repros repros way smaller repro contains electron components router store one module top ask us download extra file huge even leakspeed issue looking someone else fix problem free people want help open source project spend time boil issue see difference clearly every week top attitude clearly showing willing help personally attacking something tolerate", "d": "4/2018"}, {"body": "please also remember current version using beta clearly explained release notes could cause issues supply performance profile information much simplier situation reproduce could dealt likely even vue issue forsee going garbage collection issue update cycle blocked gc", "d": "4/2018"}, {"body": "please provide repro using jsfiddle github repository make sure provide boiled reproduction download file like security reasons closing valid repro provided", "d": "4/2018"}, {"body": "okay boiled reproduction github repository requested", "d": "4/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "4/2018"}, {"body": "duplicated", "d": "4/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "thinking today think makes sense make consistent always return array", "d": "4/2018"}, {"body": "cool would great possible without breaking existing code way think allow return either single node array contains single node would still work feasible sound like horrible idea something simple seems work testing diff else vnode vmvnode arrayisarray vnode amp amp vnodelength vnode vnode return empty vnode case render function errored vnode instanceof vnode processenvnodeenv production amp amp arrayisarray vnode warn multiple root nodes returned render function render function return single root node", "d": "4/2018"}, {"body": "please make sure nt come first come back vueonly repro also impossible us look amount code please boil strict minimum", "d": "4/2018"}, {"body": "indeed sorry false alarm", "d": "4/2018"}, {"body": "mixin nt bring style actually meant pure js objects vue components template meant mix logic want share style components much easier natural create separate file import one said something would need fixed vueloader injected mixins meant used", "d": "4/2018"}, {"body": "posva thanks reply think right mixin pure objects logic try use instead still get error", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "programmatically invoke event scenario event dispatching possible bubbling happen synchronously think current nexttick implementation right", "d": "4/2018"}, {"body": "jake archibald loop jsconfasia", "d": "4/2018"}, {"body": "yaodingyd sodatea see thank guys", "d": "4/2018"}, {"body": "purposely removed coerce achieved computed property sanitizer thing actually created plugin may find fr help", "d": "4/2018"}, {"body": "leveraged behaviour small package case interested", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "html limitation always use kebabcase attribute names make sure code works dom templates vue sfc", "d": "4/2018"}, {"body": "looks like bug chrome", "d": "4/2018"}, {"body": "hauntedsmores could report chromium", "d": "4/2018"}, {"body": "javoski posva thanks guys ill put chrome bug", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "works fine fiddle posted revisit add correct steps reproduce fix repro thanks", "d": "4/2018"}, {"body": "working fine template tag missing source need template tag remain source code use jquery later laraveladmin works", "d": "4/2018"}, {"body": "even put template tag inside div vpre tag rendered missing", "d": "4/2018"}, {"body": "ah nt get said first place sure good idea template special meaning html moment use completely escape html indeed leave compilation phase", "d": "4/2018"}, {"body": "hi use giving template tag one outside vuejs exactly problem using vhtml works complicate works would nice easier vpre works template tag thanks", "d": "4/2018"}, {"body": "familiar laraveladmin solve problem", "d": "4/2018"}, {"body": "maybe work template tag inside blade file put script inside root vue element get another warning think moment vhtml best way thanks", "d": "4/2018"}, {"body": "please follow issue reporting guidelines ask questions forum discord server gitter stackoverflow", "d": "4/2018"}, {"body": "gentle ping thanks", "d": "4/2018"}, {"body": "think need change vue core doable vueloader plus necessary vue plugins btw editor looks pretty cool", "d": "4/2018"}, {"body": "definitely understand fact something anyone would want course need core primary concern get vue squad board maybe get help guys implementing changes also trying reach react angular teams parallel speak familiar vue codebase time one trying tie loose ends together help would appreciated", "d": "4/2018"}, {"body": "add source info start amp end index add template compiler module pr get merged", "d": "4/2018"}, {"body": "gzzhanghao looks great thanks feature separate pr instead making big pr even bigger", "d": "4/2018"}, {"body": "note use von onclick vue detect later workaround adding one elements", "d": "4/2018"}, {"body": "noted onclick attribute test issue use case link von clickonce supposed call server one supposed redirect another page js involved issue click link redirect actually call server thanks help works adding key attribute", "d": "4/2018"}, {"body": "want prevent default action event please use modifier", "d": "4/2018"}, {"body": "seems properly destroyed", "d": "4/2018"}, {"body": "\u4e0e\u5176\u6bcf\u6b21\u4fee\u6539\u5b8c\u90fd\u8981\u8bb0\u5f97 \u4e0d\u5141\u8bb8\u76f4\u63a5\u7528\u7d22\u5f15\u64cd\u4f5c\u6570\u7ec4 \u6bcf\u6b21\u64cd\u4f5c\u5b8c\u4e0d\u8981\u5fd8\u8bb0 \u5c31\u4f1a\u9020\u6210\u5927\u91cf\u7684\u4f7f\u7528 set \u6216\u662f\u6570\u7ec4\u4e0b\u53d8\u5f02\u7684\u65b9\u6cd5", "d": "4/2018"}, {"body": "\u548c class gt \u800c\u4e14\u5982\u679c\u7528 set set \u8fd8\u6709\u5c31\u662f\u65b9\u6cd5\u7684\u8c03\u7528\u60c5\u51b5 \u4f46\u662f\u5982\u679c\u662f\u7528 apply apply", "d": "4/2018"}, {"body": "\u89c6\u56fe\u66f4\u65b0\u662f\u5f02\u6b65\u7684 \u591a\u6b21\u8c03\u7528 set", "d": "4/2018"}, {"body": "set \u4f1a\u8c03\u7528\u591a\u6b21 dep notify \u800c\u4e14\u4e0d\u662f\u8ba8\u8bba set apply", "d": "4/2018"}, {"body": "vue notify", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "\u73b0\u9636\u6bb5 vue \u7684\u4e00\u4e2a\u539f\u5219\u662f\u9664\u975e\u6709\u91cd\u5927\u610f\u4e49\u5426\u5219\u4e0d\u6dfb\u52a0\u65b0\u7684", "d": "4/2018"}, {"body": "\u55ef \u53ea\u662f\u4e2a\u5efa\u8bae", "d": "4/2018"}, {"body": "since api freeze already feasible pretty much extra code still edge case probably happen move inside handler create watcher hook sure one enough nt know code", "d": "4/2018"}, {"body": "luoxlgh also write wrapper function", "d": "4/2018"}, {"body": "posva thanks luoxlgh team want call watch handler first time second advice hook helps us solve problem better calling watch handler nexttick time maybe learn lifecycle hooks called", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "repro nt run ie function shorthand objects fixed runs properly ie", "d": "4/2018"}, {"body": "confirm whitespace options return whereas works fine chrome instance littlegrayss asked considered bug handled vue thank", "d": "4/2018"}, {"body": "white space tag removed used option value would return undefined ca nt say desirable vue enforce trimming white space tag better include first place", "d": "4/2018"}, {"body": "using inbrowser templates selfclosing tags working expected anything containing map nt working things passed vue expect element indeed warn existing element warning button changing title issue reflect", "d": "4/2018"}, {"body": "ah forgot valid html element even nt use selfclosing tags component named nt work", "d": "4/2018"}, {"body": "work need use beacuse browser use uppercase element names", "d": "4/2018"}, {"body": "hmm ok well seems uppercase works first character foobar gt works foobar gt nt work", "d": "4/2018"}, {"body": "checkout style guide section docs help", "d": "4/2018"}, {"body": "ok thanks case warnings would useful wasted quite hours trying figure wrong", "d": "4/2018"}, {"body": "posva comparison reserved vue html tags vs specs already vue html mdn whatwg abbr abbr abbr acronym address address address applet area area area article article article aside aside aside audio audio audio b b b base base base basefont bdi bdi bdi bdo bdo bdo bgsound big blink blockquote blockquote blockquote body body body br br br button button button canvas canvas canvas caption caption caption center cite cite cite code code code col col col colgroup colgroup colgroup command content content data data data datalist datalist datalist dd dd dd del del del details details details dfn dfn dfn dialog dialog dialog dir div div div dl dl dl dt dt dt element element em em em embed embed embed fieldset fieldset fieldset figcaption figcaption figcaption figure figure figure font footer footer footer form form form frame frameset head head head header header header hgroup hgroup hgroup hr hr hr html html html iframe iframe iframe image img img img input input input ins ins ins isindex kbd kbd kbd keygen label label label legend legend legend li li li link link link listing main main main map map map mark mark mark marquee menu menu menu menuitem menuitem meta meta meta meter meter meter multicol nav nav nav nextid nobr noembed noframes noscript noscript noscript object object object ol ol ol optgroup optgroup optgroup option option option output output output p p p param param param picture picture picture plaintext pre pre pre progress progress progress q q q rp rp rp rt rt rt rtc rtc ruby ruby ruby samp samp samp script script script section section section select select select shadow shadow slot slot small small small source source source spacer span span span strike strong strong strong style style style sub sub sub summary summary summary sup sup sup table table table tbody tbody tbody td td td template template template textarea textarea textarea tfoot tfoot tfoot th th th thead thead thead time time time title title title tr tr tr track track track tt u u u ul ul ul var var var video video video wbr wbr wbr xmp edited posva collapsed table took much space", "d": "4/2018"}, {"body": "warnings work components registered globally eg imported registered locally warnings triggered eg html import map jscomponentsmap export default components map", "d": "4/2018"}, {"body": "case warnings would useful wasted quite hours trying figure wrong pqvst use indom template vue warn use something like parsed browser first vue got element tagname", "d": "4/2018"}, {"body": "thinking working upload pr", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "children", "d": "4/2018"}, {"body": "vonce vfor iteration rendered ex children originally child added later child rendered scenario key provided vfor idea patch element inplace ex item example existing children rerendered hence binding persists jsfiddle example comp behaving expected vfor vonce placed vfor child text change jsfiddle example component behaving expected vfor vonce placed vfor child yay yay text change hell naw bug given expected behavior vfor still bound data render children array count changes child render scenario vonce behavior required children parent short behavior currently consistent except component element js line working fine line", "d": "4/2018"}, {"body": "may chromium bug preact similar issue", "d": "4/2018"}, {"body": "works fine end closing looks similar yaodingyd shared", "d": "4/2018"}, {"body": "get following errors try jsfiddle would nice would fix", "d": "4/2018"}, {"body": "also line refers current current vue instance instead write", "d": "4/2018"}, {"body": "timotheejeannin said need use arrow function valid", "d": "4/2018"}, {"body": "apologies timotheejeannin posva fairly new vuejs still learning curve problem actually arrow function actually directive rendering data function utilising module make http request curious know works local production environment something wrong would love insights", "d": "4/2018"}, {"body": "warning dev mode would fine", "d": "4/2018"}, {"body": "set element prop attribute attribute taken account upon page loading setting attribute would worthless", "d": "4/2018"}, {"body": "humbly ask reconsider issue correct taken account upon page load using prerendering serverside rendering property present upon page load also using standard clientside rendering implementation call template render browser honor property regardless thank hard work excellent product", "d": "4/2018"}, {"body": "indeed useful ssr nt checked added yet", "d": "4/2018"}, {"body": "see", "d": "4/2018"}, {"body": "working update created pr", "d": "4/2018"}, {"body": "nt bug using index key", "d": "4/2018"}, {"body": "kaelwd hahaha hours life lost trifle thanks", "d": "4/2018"}, {"body": "technical restriction due javascript", "d": "4/2018"}, {"body": "posva tell exactly technical restriction", "d": "4/2018"}, {"body": "js objects references please ask questions forums discord server", "d": "4/2018"}, {"body": "ca nt copy data object hood benefits using function instead deep cloning objects copy data object hood causes heavy performance overhead bloated code deep clone implementation better use function create fresh object every time", "d": "4/2018"}, {"body": "posva thanks yes mean ca nt use clone data object", "d": "4/2018"}, {"body": "deep", "d": "4/2018"}, {"body": "probably reason vnode update mechanism since deleted element parentnode null could successfully insert made following changes code shows normally", "d": "4/2018"}, {"body": "generally bad idea remove elements directive vue also control specific example basically", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "adding select elements one fixes issue", "d": "4/2018"}, {"body": "use keys", "d": "4/2018"}, {"body": "see code wrong error console check make sure using nonminified version vue test please check opening issue open issue please boil make sure actually bug always ask questions often get faster answers forum discord server stackoverflow", "d": "4/2018"}, {"body": "problem coming keyboard emitting events although think intented imagine implement workaround vue core would terrible impact need still workaround bigger delay specific input", "d": "4/2018"}, {"body": "reproduce maybe happening specific browser case please specify issue closing details provided", "d": "4/2018"}, {"body": "os uname linux dontshootme smp wed mar utc gnulinux browser mozilla firefox bits also tested os android browser firefox mobile os android browser firefox mobile behaviour present", "d": "4/2018"}, {"body": "tested latest firefox everything worked fine", "d": "4/2018"}, {"body": "reproduce windows firefox happening chrome edit also works fine ie edge", "d": "4/2018"}, {"body": "yes test done latest firefox browser mozilla firefox bits click try mutliple click fiddle unstable sometimes behavior appears sometimes", "d": "4/2018"}, {"body": "oh yeah updated docs good chance make contribution", "d": "4/2018"}, {"body": "posva mean intentional probably leaving item open either sync supports kebab docs updated would nice", "d": "4/2018"}, {"body": "related vue happens without vue well probably chrome bug report", "d": "4/2018"}, {"body": "please reduce reproduction whole projects valid repros", "d": "4/2018"}, {"body": "feature request devtools core", "d": "4/2018"}, {"body": "logs also shows user instantiated views name like component", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "already access every property", "d": "4/2018"}, {"body": "yeah know access template talking", "d": "4/2018"}, {"body": "access context render function case write template", "d": "4/2018"}, {"body": "yeah knew well thinking might useful access context script tag example access vuex store using ssr anyway get closer coverage render function sfcs nt deem useful enough worth issue close conversation otherwise try pr get bit spare time", "d": "4/2018"}, {"body": "need full javascript access better use render function", "d": "4/2018"}, {"body": "see thank", "d": "4/2018"}, {"body": "wontfix reasoning necessary encode html entities inside attribute values decoding map html parser handling browsers autoencoding behavior example extract element browsers return instead decoding vue performs meant type edge cases simply put encoding anything inside attributes want vue handle case showed repro need convincing reason first place", "d": "4/2018"}, {"body": "use case include newline char aka code html entity inside html title attribute think legit reason use encoded char template", "d": "4/2018"}, {"body": "also template source come anywhere necessarily existing part dom extract outerhtml case pulling html standalone html template file seems intuitive valid html html file interpreted properly vue used template", "d": "4/2018"}, {"body": "thanks least understanding issue giving meaninful response posva grasping previous issues", "d": "4/2018"}, {"body": "similar usecase kidplug like newlines inside title attributes vue wo nt allow though could considered edgecase fairly common requirement", "d": "4/2018"}, {"body": "workaround", "d": "4/2018"}, {"body": "thank much arrived close using title data computed properties closer native shame ca nt intuitive approach perhaps directive passthrough vanilla html attributes", "d": "4/2018"}, {"body": "new vue el app template components app something changed version", "d": "4/2018"}, {"body": "tried fiddle could nt repro please next time provide actual repro fiddle similar edit actually using instead inside normal variable gets set exactly using", "d": "4/2018"}, {"body": "sorry referring", "d": "4/2018"}, {"body": "typo exactly try inside javascript linter able catch", "d": "4/2018"}, {"body": "arrow function work change context value use regular functions please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "4/2018"}, {"body": "please nt open duplicate issues obligation framework x support behavior framework", "d": "4/2018"}, {"body": "also use escape codes", "d": "4/2018"}, {"body": "posva thank disappointed", "d": "4/2018"}, {"body": "think tradeoff maintainability supporting mustaches inside mustaches would increase complexity code parser means possible bugs uncommon use plain strings mustaches inside mustaches easy workaround use variable computed property probably common use case js escape character using computed property make code maintainable situations faster", "d": "4/2018"}, {"body": "use", "d": "4/2018"}, {"body": "think following example workaround would work myulfuncjs import myulfunccss export default functional true render h context const data contextdata props contextprops tag ul name slide return h transitiongroup data contextchildren myulfunccss slidemove transition transform cubicbezier render everything need regardless think workaround exists still would great able sfc", "d": "4/2018"}, {"body": "would also work sfc ugly", "d": "4/2018"}, {"body": "hi thanks filling issue functional components nt share behavior automatically applying attributesclassesstyles stateful components documented normal components attributes defined props automatically added root element component replacing intelligently merging existing attributes name functional components however require explicitly define behavior skipping auto binding behavior would remove performance overhead always merging classesstylesattirbutes normal components functional components made fast design using last comment actually correct way workaround", "d": "4/2018"}, {"body": "ugly", "d": "4/2018"}, {"body": "btw nothing passing class style functional component even annoying work regular functional component written javascript depicted previous example ca nt least make functional components behave without additional plumbing", "d": "4/2018"}, {"body": "may possible future change behaviour flexibility past templates functional components nt possible made sense pass js also easier", "d": "4/2018"}, {"body": "thinking would possible use vue file render function one mentioned looking single file containing everything like sfc fail see point separate css file describe animation keyframes", "d": "4/2018"}, {"body": "think sfc seem powerful like much export default functional true render h data children gt children slidemove transition transform cubicbezier elegant", "d": "4/2018"}, {"body": "would also use feature pretty extensively writing powerful mixins work functional components becomes much difficult nt access options object rendering context", "d": "4/2018"}, {"body": "forgot ask could please share specific scenarios would useful also keep mind already possible putting object variable exporting", "d": "4/2018"}, {"body": "use case writing mixin handle reading checking type list custom property vue components checks attributes applies specific css attribute name matches given types specified vue instance type property works fine full nonfunctional components functional components ca nt access custom properties render function ca nt access type properties set nt exist object actually composing styles component fine export option seems odd nt present object given vue instance attributes", "d": "4/2018"}, {"body": "one scenario project want make vue route components responsive javascript const baseresponsive functional true render h context options extended component ca nt accessed base render workaround using injections looks weird let component contextinjectionscomponents getdevicetype return h component contextdata const routes path foo component extends baseresponsive inject components default desktop mobile path bar component extends baseresponsive inject components default desktop mobile", "d": "4/2018"}, {"body": "caikan quite different need import vue files see", "d": "4/2018"}, {"body": "would write mixin functional components apart", "d": "4/2018"}, {"body": "initial idea let functional components extended dynamically extended components render logic different options think found another workaround using factory function", "d": "4/2018"}, {"body": "posva custom options great options writing mixins encapsulate reusable behavior nt rely reactive data would nice able use custom properties mixins forced pollute prop list things nt going change publicly exposed component api properties accessible mixin", "d": "4/2018"}, {"body": "still nt get trying share piece code please", "d": "4/2018"}, {"body": "sure disclaimer though fairly new vue pretty extensive experience front end frameworks new adopting vue real chance something ridiculous unintuitive use case nt strike way personally suppose mixin takes custom property types component definition assuming present checks matching attributes component host element concatenates string styles derived attributes specified component element match type specified component definition might using styled components hopefully familiar library suppose component define base styles fontsize typographysizemedium color colorsblack add styles based types provided attributes context optionstypedstyles set mixin return context slotsdefault types bright dark bold light mixin import keys intersection values lodash export default beforemount function let styles looks intersection components attribute specified types intersection keys optionstypes values attrs foreach gt styles stylesconcat thistypes concatenates styles attaches custom options component optionstypedstyles styles unfortunately work object provided render function", "d": "4/2018"}, {"body": "lifecycle functional components call render thing put mixin functional components props edit oh inject may missing think instead set functions return object options directly use object render function also looks straightforward imo", "d": "4/2018"}, {"body": "ah nt realize lifecycle methods nt exist functional components like said vue newb yes actually ended suggested end probably cleaner figured give original use case case gave additional perspective original request", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "supposed work use computed property instead", "d": "4/2018"}, {"body": "write code error amp see really expected return value expected result svelte svelte example", "d": "4/2018"}, {"body": "also escape", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "unfortunately something vue anything garbage collection fully automatic nonaccessible js land except debug builds forcing garbage collection devtools everything looks fine", "d": "4/2018"}, {"body": "tried find difference finally find commits may cause bug", "d": "4/2018"}, {"body": "think problem slot twice template modified jsfiddle show conditional rendering slots works expected note last slot working version works described", "d": "4/2018"}, {"body": "passing null value content passing nothing properly pass js null content null remember bound attribute text inside quotes used literally used js expression evaluated datascope vue instance", "d": "4/2018"}, {"body": "maybe warning added dev mode", "d": "4/2018"}, {"body": "kidplug example given correct pass along null value something like php though still fails acts given anything entire compilation breaks bothersome part right actually supplying value", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "note supposed fail definition using means content treated javascript expression equivalent writing following javascript giving proper compilation warning instead runtime error good first contribution", "d": "4/2018"}, {"body": "like try", "d": "4/2018"}, {"body": "related", "d": "4/2018"}, {"body": "evan said said nt something done modifier kind event pingpong typically leads brittle code long run components relying implementation details way proposed length explicit better keep way button needs promise makes sense pass component pass factory function returns promises component control execution promise", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "example uses script texttemplate html source puts dom using nonvue direct insert also using vue title resulting element dom vue corrupted fine plain insert", "d": "4/2018"}, {"body": "said vue nt set html like using set using setting vanilla js yields result", "d": "4/2018"}, {"body": "posva explain ampersand character working properly example making sense afraid", "d": "4/2018"}, {"body": "posva example comparable vue see", "d": "4/2018"}, {"body": "posva need seek second opinion one", "d": "4/2018"}, {"body": "posva also maybe looking problem wrong level wrong step perhaps problem vue interpreting characters template set dom", "d": "4/2018"}, {"body": "posva look example see entities lt gt quot amp rendered properly vue apos codebased entities think parsing template perhaps vue looking named html entities inside attributes", "d": "4/2018"}, {"body": "posva aha look vue source line function decodeattr var decodingmap includes four named entities plus ironically newline tab var shoulddecodenewlines logic passing false parsing attribute value whole approach using decodingmap limited naive html entity valid inside html attribute maybe submit new bug decodeattr function", "d": "4/2018"}, {"body": "workaround stumbled trying set newlines title attribute component template", "d": "4/2018"}, {"body": "guess accurate say unicode vs ascii codes", "d": "4/2018"}, {"body": "html escapes different js escapes using escape js nt work", "d": "4/2018"}, {"body": "sorry wrong response example calling setattribute like example require html escaped values way equivalent entity template string look example good span title vs bad span title vue consistent named html entity works properly codebased html entity vue reescaping value expect html template inserted dom directly without modification vue", "d": "4/2018"}, {"body": "check example template declared string js raw chars pulled script tag template note inconsistency vue handling good vs bad span title", "d": "4/2018"}, {"body": "posva seeing comments", "d": "4/2018"}, {"body": "wrong place questions like", "d": "4/2018"}, {"body": "probably related webpack settings broken cache caused cacheloader etc try clearing cache files link provided nt valid reproduction since run please provide github repo error persists", "d": "4/2018"}, {"body": "could add reproduction examples make easier understand point view", "d": "4/2018"}, {"body": "minimal example click ps sorry inline templates lazy create files", "d": "4/2018"}, {"body": "okay reproduction confusing follow please next time spend time organising spent minutes trying work ambitions still nt understand proposed feature bug fix please define requirements output clearly triage issue", "d": "4/2018"}, {"body": "nt understand would able perhaps describe problem instead via discord sure describing bug feature request likely usage question", "d": "4/2018"}, {"body": "closing feature requests thoroughly carefully elaborated technical usage examples use case motivations ideas quite fully formulated please discuss discord first opening issue", "d": "4/2018"}, {"body": "general adding syntax sugar particular use case imo common enough warrant new addition also simplify bit userland", "d": "4/2018"}, {"body": "unable reproduce osx sure nt browser bug could try adding classes manually without vue", "d": "4/2018"}, {"body": "example without transition system far chrome bug idea edit windows confirm osx users reproduce either", "d": "4/2018"}, {"body": "fyi linux chrome working", "d": "4/2018"}, {"body": "johnleider assuming commit fixes issue thus close ticket feel free reopen issue persists issue", "d": "4/2018"}, {"body": "commit fix issue discovered issue debugging chrome related bug contain css property vuetify", "d": "4/2018"}, {"body": "problem seems popup window select file happen change event registered internet explorer reason nt work first time real problem register new change event time upload method called notice alert popup many time keep selecting files solution declare change event outside everything works fixed fiddle", "d": "4/2018"}, {"body": "closing based gudradain solution user land", "d": "4/2018"}, {"body": "triggering click event adding change event also gudradain said", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "4/2018"}, {"body": "ca nt reproduce chrome browser upd sorry reproduced", "d": "4/2018"}, {"body": "problem seems vueset called inside computed property also able reproduce bug without vuex", "d": "4/2018"}, {"body": "seems caused take issue", "d": "4/2018"}, {"body": "sodatea yes please", "d": "4/2018"}, {"body": "issue initial render nt populated overall though say code probably good nt used inside templates escape hatch used code avoid bug adding method component calls linked component like", "d": "4/2018"}, {"body": "use method inline function instead closing already", "d": "4/2018"}, {"body": "mixed order working fiddle", "d": "4/2018"}, {"body": "bad thanks", "d": "4/2018"}, {"body": "work please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "4/2018"}, {"body": "thank much posva sorry", "d": "4/2018"}, {"body": "well component nt function technical sense still use options object internally describe one reasons ca nt simply use function would collide way async components work javascript vuecomponent myasnccomponent gt import somecomponentvue locally component components myasnccomponent gt import somecomponentvue javascript vuecomponent functionalcomponet function h context return h div hello world code break since vue nt expect render function clean way tell render function loader function async component really possible implement current api", "d": "4/2018"}, {"body": "thanks answering understand possible current api something vue would like implement", "d": "4/2018"}, {"body": "surely think make functional components easier work towarda vue still log time road", "d": "4/2018"}, {"body": "pushing refernece object array multiple times create new distinct objetcs make example work eg", "d": "4/2018"}, {"body": "thanks peculiarity object", "d": "4/2018"}, {"body": "reproduction nt seem related problem describing passing original object expected behavior use alongside individual bindings cases final scope object needs merged anyway current behavior consistent easily work around using instead pass individual prop use destructuring", "d": "4/2018"}, {"body": "hi evan actually thought destructuring trying renaming variables like newvariable oldvariable stated mdn nt work thought posting issue reproduction create new issue needed thanks", "d": "4/2018"}, {"body": "destructuring alias works intended nt work need open bug report proper reproduction", "d": "4/2018"}, {"body": "confused reproduction earlier post updated try create another reproduction issue facing thanks", "d": "4/2018"}, {"body": "confirm insert line generated render function chrome example ie ps vue problem", "d": "4/2018"}, {"body": "vue revert commit problem disappears", "d": "4/2018"}, {"body": "also problem", "d": "4/2018"}, {"body": "probably changes regex dont work", "d": "4/2018"}, {"body": "yes output chrome output", "d": "4/2018"}, {"body": "may replace ss", "d": "4/2018"}, {"body": "hallo yeah fix problem lt nt include white spaces nonbreaking space thin space included planning run", "d": "4/2018"}, {"body": "vue nt support", "d": "4/2018"}, {"body": "updates", "d": "4/2018"}, {"body": "update vue version error reporting nt know resolved thanks", "d": "4/2018"}, {"body": "link repo", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "justineo said please provide repro instructions please open new issue reproduction", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "interested feature feature confirmed implemented willing work edit currently working please feel free jump", "d": "4/2018"}, {"body": "utatti also ready help needed", "d": "4/2018"}, {"body": "besides also another enhancement simple code parent component know wrong usage think provided field call change type seeing issue think maybe choice default function function", "d": "4/2018"}, {"body": "regarding transform basically vue removed feature request different name locally prop transform feature asked many times already achievable userland", "d": "4/2018"}, {"body": "posva updated fr description", "d": "4/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "4/2018"}, {"body": "posva would mind taking look", "d": "4/2018"}, {"body": "posva thanks answer apidoc vm event callback listen custom event listener removed triggers first time want know removed mean code like beforemount register events via let l l var name eventoncel name gt thisevents func func mounted emit let l l var name eventoncel emit name name done thisevents empty object demo codepen", "d": "4/2018"}, {"body": "means removed listener native events", "d": "4/2018"}, {"body": "well zero listener events remove event array make confused least get confirmed official thanks lot posva", "d": "4/2018"}, {"body": "posva actually able reproduce skipped events even chrome turn slowdown cpu throttling practically though mainly problem falling back introduces minimum delay also case scroll events triggering many layoutspaints prop updated vue resulting huge lag app think correct defer application updates settimeout happy submit pr idea want solve actually wonder paving fundamental problem", "d": "4/2018"}, {"body": "posva thoughts want approach eager start working pr severely impacting application", "d": "4/2018"}, {"body": "sorry something know help", "d": "4/2018"}, {"body": "posva needs done order move forward", "d": "4/2018"}, {"body": "needs done happy contribute", "d": "4/2018"}, {"body": "similar case chrome loading images dont remember browsers month ago vue images loader read file images would loaded long youre scrolling page keep scrolling without stop loaders would never disappear sadly didnt much time dig deeper thought one thoses javascript situations image loading initiated within settimeout guessing part reason could try reproducing maybe", "d": "4/2018"}, {"body": "check modified codepen changed component logic match default native multi checkbox behavior", "d": "4/2018"}, {"body": "emanuelmutschlechner nt think codepen relevant though appreciate working toward solution adding explicit prop original pen putting prop field works around bug seen modified pen point nt need done passing already original pen nt way picking", "d": "4/2018"}, {"body": "pearofducks want pick defined component explicitly bind custom component", "d": "4/2018"}, {"body": "emanuelmutschlechner please read previous response nt necessary pretty confident valid bug appreciate trying help", "d": "4/2018"}, {"body": "get point sure bug need feedback core team solution partly based example code bound explicit used disabled attribute inheritance source", "d": "4/2018"}, {"body": "maybe issue somewhat related", "d": "4/2018"}, {"body": "looks like slot inside scoped slot rendered", "d": "4/2018"}, {"body": "justineo rerendered changes nt cause problems think thinking", "d": "4/2018"}, {"body": "cents another reproduction issue notice warning raised modal shown hand jsx version component raising warning", "d": "4/2018"}, {"body": "idea wrap every event treat equally like reemit wrapper component", "d": "4/2018"}, {"body": "nt think causes issues render correct nt rendering mentioned add improvement label something fixed destructive bug", "d": "4/2018"}, {"body": "linusborg causing issues use case similar portal basically slotscopes preserve reactivity moving slot another location see comment well nt making slotsdefault getter essentially saying making slots reactive slots refs reactive always struck strange since nt really much overhead presumably already logic vue causes change slotsdefault trigger render would happen naturally slots reactive agree general idea future nt distinction scopedunscoped slots unscoped slot really scoped slot invoked passed data yes would breaking change could possibly option component like name pending would let us make change opt way consensus linusborg general direction willing work pr", "d": "4/2018"}, {"body": "likely confirm", "d": "4/2018"}, {"body": "flagging important due downstream issues libararies", "d": "4/2018"}, {"body": "removing regression tag behavior along", "d": "4/2018"}, {"body": "case failed error exists computed array reactive components set watcher deep true computed", "d": "4/2018"}, {"body": "issue grab seems like since progress made", "d": "4/2018"}, {"body": "kotapi created pr issue days ago closed yet think waiting decisions vue team", "d": "4/2018"}, {"body": "alright yuriyalekseyev", "d": "4/2018"}, {"body": "folks update pr would love merged", "d": "4/2018"}, {"body": "leebenson want say thanks revelation consistently experienced issues webpack typescript resolving imports properly turns using works actually returns null", "d": "4/2018"}, {"body": "feature would great add another example currently works workaround catch error try catch block could nt find way trigger error vue instance possible thought maybe convention emitting event might work think something similar could helpful", "d": "4/2018"}, {"body": "posva linusborg hi tried found leave transition missing enter transition work appear attribute help please", "d": "4/2018"}, {"body": "need reproduction understand problem ca nt help ca nt provide", "d": "4/2018"}, {"body": "ywwhack workaround great made improvements use injections instead props props polluted code looks little prettier vue import somechildren somechildrenvue export default inject components default somechildren", "d": "4/2018"}, {"body": "update implementing components option functional components workarounds good seems pretty hacky imo especially mentioning must fore dynamic components known components", "d": "4/2018"}, {"body": "jkzing unfortunately comes another problem solution works adding text textarea press backspace omit text till text textarea throws error says something like arguments invalid gone vue code pass thisvalue createelement wo nt cause error pass thisvalue createelement would go settextcontent method nodewholetext error solutions suggestions ps reproduction", "d": "4/2018"}, {"body": "hey vsevolodtrofimov solution suggested using really working latest vue getting error looks like vue actually trying fire handler instead unbinding event", "d": "4/2018"}, {"body": "dawidmyslak change work handler called", "d": "4/2018"}, {"body": "nice one pbastowski", "d": "4/2018"}, {"body": "thank guys", "d": "4/2018"}, {"body": "deylak property data object processing function property trying set value property later defined function executed new value observedhowever observed new value never relied upon think modify method shown following code add judgment conditions existence ensures property accessor propertyif accessor property method return directly", "d": "4/2018"}, {"body": "hcysunyang feel free submit pr", "d": "4/2018"}, {"body": "ok submit pr", "d": "4/2018"}, {"body": "ps", "d": "4/2018"}, {"body": "hackish workaround worth js created function thiswaitdata asynccall mounted function thiswaitdatathen function data", "d": "4/2018"}, {"body": "possible flat solution", "d": "4/2018"}, {"body": "consistent solution create empty functional stateless better performance component element completely layoutless element using tag introduce useragent margin html export default name vempty usage seem natural recently upgraded ended", "d": "4/2018"}, {"body": "completely layoutless even empty dom elements match css selectors like etc bare element performant functional component imo element always valid child given parent element eg etc", "d": "4/2018"}, {"body": "bare element consistent encapsulated solution better imo creates problem use valid pretty much everywhere componentbased development suggest refraining pseudo selectorselements implicitness con older days used save markup longer issue since components reduce average amount code write anyway instead pseudo selectors use classes explicit give better control", "d": "4/2018"}, {"body": "basically special semantics shares categories neither used inside lot elements instead pseudo selectors use classes explicit give better control yes remind old days support want clean solution prevent developers leveraging modern technologies pseudo classes", "d": "4/2018"}, {"body": "well opinionated year developing library nt find much use sense absence using tags nt sound probable see", "d": "4/2018"}, {"body": "seems pretty important future vue chance added somewhere official roadmap even backlog consider also react angular already example take look list react custom renderers", "d": "4/2018"}, {"body": "status", "d": "4/2018"}, {"body": "run situation useful instance currently writing component enable layout list items nonconstant order columns different layout modes different purposes ca nt use flexbox purpose due browser compatibility cases like knowledge vue way within get children rendered order without explicitly letting component know items like parent component able act without knowledge yes bit edge case found people problems google searching led thread", "d": "4/2018"}, {"body": "create event emitter components question tackle problem", "d": "4/2018"}, {"body": "nblackburn well content passed via slot therefore listen events emitted instances via slot within component guess fine nt solve problem source items array displaying corresponding set fields sidebar allow deletion addition reordering said items add item reorder ordering lost know fix means passing original array items may maintain internal map items child components correct order little cleaner children maintains correct order plus want component work places content dynamic array items make prop optional increases chances developer forget pass array items use case used document template editing system way component used many times single template would forgotten introduce bug may easily escape testing ca nt help feel like nt make sense children array would reflect actual order components kind feels like something old version internet explorer would childnodes property element", "d": "4/2018"}, {"body": "plus comment says example provided op thread components coupled design suggests emitting events parent via parent advocate use parent advise using children feels little inconsistent add understand development nt straightforward change may incur fair deal work wanted add two cents name consistency sake consistency", "d": "4/2018"}, {"body": "caelanstewart nt mean allow demonstate create file house event bus javascript import vue vue let eventbus new vue export default eventbus import eventbus components want communicate across emit event comonent createdmounted destroyed javascript created eventbus emit columnadd beforedestroy eventbus emit columnremove simply handle event parent component like give instance independent components allows track order mounted works added", "d": "4/2018"}, {"body": "nblackburn doest allow track items reordered though mounted destroyed hooks items called second time move element array one index another take look jsfiddle demonstration see initial array items root vue component root vue components mounted hook simulate user reordering items components already mounted take look console mounted hooks fire initial instantiation components two seconds items reordered see updated hooks fired components problem idea new index items inside updated hook information passed argument plus response suggestion event bus use event bus use multiple instances going work compare parent component check indeed child parent child another instance would better use child component done js fiddle", "d": "4/2018"}, {"body": "anyway regardless fix said previous comment already solution ideal point introduce faff able track reordering components get array components correct order wanted add cents problem introduces inconsistency one seems vue like least knows enough people end agreeing maybe happen", "d": "4/2018"}, {"body": "caelanstewart never suggested direct answer decoupled way parentchild communication could applied get closer something works become hurdle try think issue different way nt think problem vue solve", "d": "4/2018"}, {"body": "nblackburn okay fair enough bit confused suggesting something nt fit case", "d": "4/2018"}, {"body": "amongst huff adding two retrospectively cents neglected properly read responses thread see miljanaleksic used slots solution indeed work access child components correct order", "d": "4/2018"}, {"body": "\u662f\u7531\u4e8e\u5728\u5f00\u53d1\u6a21\u5f0f\u4e0bvueloader hrm\u63d2\u5165\u4e86require vue \u5bfc\u81f4vue\u6a21\u5757\u4f7f\u7528\u7684vue\u4e0e\u5168\u5c40vue\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 hxfdarling", "d": "4/2018"}, {"body": "closing feature request causes breaking change nt breaking changes supposed go major versions feature merges props actually super nice something manually every time common scenario creating complex components get breaking change add feature roadmap something besides point closed ticket could suggest elegant reusable way achieve kind behavior could maybe write plugin thanks time", "d": "4/2018"}, {"body": "complex syntax already syntax add nt break vue js please kiss guys smart see would want", "d": "4/2018"}, {"body": "find concatenating handlers dots ampersand everywhere pretty hard parse reading template", "d": "4/2018"}, {"body": "adding new type syntax necessary cover probsbly use cases anyway mon apr alexandre notifications githubcom wrote find concatenating handlers dots ampersand everywhere pretty hard parse reading template receiving commented reply email directly view github mute thread", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "\u9047\u5230\u540c\u6837\u95ee\u9898", "d": "4/2018"}, {"body": "\u725b\u903c\u6bc5\u54e5", "d": "4/2018"}, {"body": "agree mrcsmcln avoiding unexpected results good rationale behavior excluding certain arbitrary attributes less transparentconsistent simply causes unexpected results different way though clear documentation appreciated case argue consistency clarity important additionally appears currently way apply bindings child element instead root without using custom props existing behavior would still achievable two attributes excluded op suggests binding selectively would verbose also explicittransparent compounded inability one root element forces us use wrapper elements eg hocs may want apply bindings side note documentation seems imply included", "d": "4/2018"}, {"body": "ran trying text input component needed div making input font awesome span textbox time styling applied input div would nice could get inheritstyle option would also include class say even kind nicer way merge classstyle data deal adding specific property passing styling input annoying non intutitve generally agree exposing styling inner components like sometimes simple ones makes sense even complex ones may default item apply style times jcupps mentioned vue forces us abuse div tags thinks might root element even though know never cant use template tags get around contrived simple example cant node types different vue nt like else different node type class gets applied div regardless inheritattrs even though vue anything gets way html thats different topic", "d": "4/2018"}, {"body": "causing grief use props unobvious names pass class attributes reusable components stated authoring components nt think good idea encourage user directly style component via classes inline styles mind whole point making reusable components flexible styled container thus making easy use without refactoring every time want change say background colour text size name property inheritattrs imply exactly maybe renamed inheritmostattrs way new users would get clue write computed properties components deal applying classes styles inner elements quite frankly annoying wastes time forget personally think default behaviour changed exclude attributes flag false however would breaking change related property inheritstylinginattrs would default false include setting true would force behaviour looking would expected first place", "d": "4/2018"}, {"body": "think encountered case would nice context filter creating app core module projection real coordinate space screen objects space represented vue components though filters would trick props given real unit like meter compute filtered value need values viewport dimensions previously generated scale value understand use methods actually using em wondering options case", "d": "4/2018"}, {"body": "believe use cases need access filter example ssr project implementing filter need create different translate instances every request different languages access different instance via server workaround change people prefer filter also implement hacky way overwrite method however something slower filter related source codes", "d": "4/2018"}, {"body": "absolutely convinced filters must way access context question core team going", "d": "4/2018"}, {"body": "yuxingfafu window functionname thisfunctionname", "d": "4/2018"}, {"body": "gnumarcelo code worked put plugin file axioplugints file typescript import vue vue import axios axios export function axiosplugin vue typeof vue options axiospluginoptions void stuff options vueprototype http axios export class axiospluginoptions add stuff import axiosstatic axios declare module vuetypesvue interface vue axiosstatic", "d": "4/2018"}, {"body": "must put data inside bracket return", "d": "4/2018"}, {"body": "like data return names ali ahmad raza", "d": "4/2018"}, {"body": "nt know exactly issue problem sounds pretty close solution install future people googling issue might option helps", "d": "4/2018"}, {"body": "give routerview unique key like", "d": "4/2018"}, {"body": "onlyurei hello met issue baidu mapand may ask resolve mean make warning", "d": "4/2018"}, {"body": "would breaking change emit callback alternative would use common pattern web apis provide method emitted event called something like takes promise example js function callback evt evtwaituntil new promise function resolve reject settimeout gt resolve resolved component methods handleclick evt var promise promiseresolve evtwaituntil p gt promise p emit click evt consolelog promise promise promise desired could get robust throw error called", "d": "4/2018"}, {"body": "nice vision dlongley see beyond edge", "d": "4/2018"}, {"body": "could also pass parameter directly like js methods handleclick evt var result new promise resolve gt emit click evt resolve way mutating object nt create receiver would consume second argument", "d": "4/2018"}, {"body": "sirlancelot forces receiver call order achieve proper operation eliminates ability reject sane automatic error propagation approach allows receiver take asynchronous action necessary provides proper error propagation nt think good reason break abstraction considerable thought put design pattern various web apis eg serviceworkers would recommend approach course patterns work", "d": "4/2018"}, {"body": "dlongley awesome approach thought yet would possible use technique something like wrap around function want retried token needed refreshed problem need value returned promise second try first try value returned properly ca nt find return promise attaching tokenrefreshed event export function callafterloggedin fn storegettersloggedin return calltrytokenrefresh fn else storestatebus loggedin fn export function callaftertokenrefreshed fn storestatebus tokenrefreshed fn export function calltrytokenrefresh fn let possiblepromise fn let promise possiblepromise instanceof promise promise return possiblepromisethen null gt return callaftertokenrefreshed fn return possiblepromise", "d": "4/2018"}, {"body": "\u597d\u5427 \u6211\u4e5f\u89c9\u5f97\u8fd9\u70b9\u5e94\u8be5\u63d0\u4e00\u4e0b \u4e0d\u7136\u6709\u70b9\u5751", "d": "4/2018"}, {"body": "html datalist feature supported vuejs architectiure", "d": "4/2018"}, {"body": "anyone come solution think clean yet currently really hard answer questions like bounding box element item x array rendered since refs array order synchronized data source order best come assigning different unique ref name item list like really gross especially considering access ref element array one item since ref vfor solution adding attribute find ref want traversing looking match man ever feel antivue storing data dom like", "d": "4/2018"}, {"body": "portal component may need vue official support keep components tree showed vuedevtools codes event bubbling portals relies vue tree", "d": "4/2018"}, {"body": "works fine assigning new variable names seems work slotscope newvariable destructuredvariable anyone check thanks", "d": "4/2018"}, {"body": "wo nt like please open bug report reproduction", "d": "4/2018"}, {"body": "somebody reference new issue one need create rehusable declarative tree components alternative view configuration composition global confs", "d": "4/2018"}, {"body": "nickfederighi thanks suggestion experiencing similar issue form multiple buttons osx catching keydown event instead good workaround", "d": "4/2018"}, {"body": "array object instances specific class class public functions need invoke functions template seems vbind converts passed value standard object way invoke class functions cheers", "d": "4/2018"}, {"body": "google brought thread searching better understand propsemitter pattern particularly unsure emitting event using deeply nested component top think might cleanest solution found used parent follows could also computed property defined manner within component setter getter operations use computed property instead prop makes updating emitting change parent easy object might worthwhile creating computed properties well example represented person properties allows used changes propagate way eg still experimenting seems consistent approach could find codepen", "d": "4/2018"}, {"body": "try close divs properly", "d": "4/2018"}, {"body": "hey tzurbaev looking solution achieve", "d": "4/2018"}, {"body": "bug fixed need update vue still old version", "d": "4/2018"}, {"body": "man thanks spent days answer saved lt", "d": "4/2018"}, {"body": "specific reason vue renders adding vpre everywhere may best solution serverside rendered templates hard ensure complete coverage", "d": "4/2018"}, {"body": "may interest finding thread future serverside rendering laravel vuejs", "d": "4/2018"}, {"body": "sevenecks legendary tada thank", "d": "4/2018"}, {"body": "fnlctrl would number props", "d": "4/2018"}, {"body": "like use rendered function functional component js componentbjs import componenta componentavue export default functional true components componenta render createelement context return createelement componenta props hello new default even define language pr default values contextprops pass remaining props contextlisteners", "d": "4/2018"}, {"body": "bugs production builds produces extra spaces text makes extra line buttons text templates like html long text close nt bug exists production nt see development", "d": "4/2018"}, {"body": "vmodel nt work workaround ended upgrading vue solved issue", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "given fnlctrl said could click handler input element spare add label", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "build helpers like usecases imo", "d": "4/2018"}, {"body": "good answer", "d": "4/2018"}, {"body": "trying migrate legacy jquery plugins bootstrap plugins knockoutjs code vuejs removal original event handlers mount huge pain absolutely single problem plugins events set knockoutjs supports mix manual event dom changes viewmodel dom event changes perfectly vuejs decision strange would correct case everyone lived ideal world projects created scratch depend external libs never refactored otherwise user unfriendly approach", "d": "4/2018"}, {"body": "possible virtual dom include save restore original event handlers well least optionally also existing dom recompiling mount probably unnecessary step", "d": "4/2018"}, {"body": "stevenwung dmitrisintsov met problem migrating jquery undestand pain temporary solution may mount vuejs small containers page rewritten vue try mount vue instance js scipts", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "closing issues end life receive critical security patches", "d": "4/2018"}, {"body": "fergaldoyle almost years later one greatest wtf ie moments dev path", "d": "4/2018"}, {"body": "vs use", "d": "4/2018"}, {"body": "also issue displays unknown custom element lt randomquote gt register component correctly recursive components make sure provide name option library use code appjs var vue require vue vueconfigdebug true comment line production new vue el app created function thislaravueinitcall home data laravue require laravuecoffee components require componentscoffee moduleexports custom elements titles require componentstitlecoffee randomquote require componentsrandomquotecoffee randomquotecoffee moduleexports template require randomquotetemplatehtml created gt random mathfloor mathrandom quote quotes random data gt ret quote quotes notice small things rewards inversely proportional even largest avalanche triggered small things great things done series small things brought together great things done impulse series small things brought together coming together beginning keeping together progress working together success small beginnings come great things randomquotetemplatehtml quote", "d": "4/2018"}, {"body": "drasnop wrong guarantee", "d": "4/2018"}, {"body": "need computed method seems work way op posted except debounced method lacks cancel method", "d": "4/2018"}, {"body": "im sure figured moved know longer issue", "d": "4/2018"}, {"body": "oh nt actually talking problem spent almost hours figuring debounced function lacks cancel method debounce works otherwise fine need use computed trick want use cancel method debounced function know fix still idea needs done way bit obvious imo example codepen", "d": "4/2018"}, {"body": "vue wraps functions bound function defined properly wrapped function nt contain method even likely going work properly component used multiple times page using computed property ensures debounced method created component instance", "d": "4/2018"}, {"body": "makes sense thanks", "d": "4/2018"}, {"body": "shuaibird plasmatium", "d": "4/2018"}, {"body": "bolelee", "d": "4/2018"}, {"body": "hmm interesting read limitation class custom getters equivalent computed properties vue difference handle computed properties somewhere else agree increase side effects add complex edge cases could left user vue supposed unopinionated making somewhat artificial limitation fact imposing opinion cases trivial work around", "d": "4/2018"}, {"body": "works fine ca nt root data object plus want store original reference class instance object vue call getters setters every time", "d": "4/2018"}, {"body": "yeah reactivity tricky probably better limitation complex codebase despite inconveniences always workarounds take back previous comment", "d": "4/2018"}, {"body": "\u53ef\u4ee5\u4e86 slot\u53ef\u4ee5\u5728vfor \u4e0b\u76f4\u63a5\u4f7f\u7528\u4e86", "d": "4/2018"}, {"body": "could well inline handler", "d": "4/2018"}, {"body": "article details upcoming support nothing official roadmap see current latest core next minor release support native esm import improved async error handling iterator vfor directive sure got information", "d": "4/2018"}, {"body": "thank dynalz unclegena", "d": "4/2018"}, {"body": "watched promo live webinar nativescriptvue looks amazingly promising let keep rolling", "d": "4/2018"}, {"body": "jasonlfunk using issues ie missing ie package something happening browser seems odd get browser specific vue error like update false alarm found bind declaration php file vuejs file built go different less clean way", "d": "4/2018"}, {"body": "example worked around problem edit note component example boolean property controls visibility modal essence example call fetches component array", "d": "4/2018"}, {"body": "would really like explicit place nt manually done store nonreactive data use time things like dictionaries used rendered templates never need trigger rerender considering component definitions", "d": "4/2018"}, {"body": "case someone else stumbles across addressed per morgul suggestion documented form input bindingsmodifiersnumber hoping save next person step go find docs", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "variable changes use update changed", "d": "4/2018"}, {"body": "trusktr please use forums discord questions variable changes need reassign even set created hook wo nt observed ps answer back please", "d": "4/2018"}, {"body": "case acebalajadia solution nt work listing come alternative way", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "hasikii \u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u8ba1\u7b97\u5c5e\u6027\u6765\u5b9e\u73b0\u53d6\u53cd", "d": "4/2018"}, {"body": "gloomyline computed\u600e\u4e48\u7528set\u8ba1\u7b97\u6570\u7ec4\u67d0\u9879\u7684\u6539\u53d8\u5462", "d": "4/2018"}, {"body": "hasikii vmodel\u662f value value \u548c change event target valuevalue", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "looks like vue uses following hood js let decoder export default decode html string string decoder decoder documentcreateelement div decoderinnerhtml html return decodertextcontent", "d": "4/2018"}, {"body": "hcysunyang works looks counterintuitive", "d": "4/2018"}, {"body": "like inline expressions vuejs automatically collects dependencies computed properties refreshesrecomputes dependencies change may need reference dependencies need recomputation check following example", "d": "4/2018"}, {"title": "fetch execute id set otherwise gets whole collection", "body": "consider case var appmybook new backbonemodel urlroot appmybookfetch forgot set book id fetching appmybook contains list books rest server fetch called without id suggest id set fetch return null nothing thanks", "num": "4191", "d": "4/2018"}, {"title": "documentation collection addcreate missing mention options passed model creation", "body": "backbone docs mentioned section property collection model defined pass raw attributes objects arrays add create reset attributes converted model proper type leaving undocumented fact also provided passed along creation model visible lack small comment makes appear first instance like limiting factor handling creation models directly collections", "num": "4189", "d": "4/2018"}, {"body": "models urls ids", "d": "4/2018"}, {"body": "ok thanks ended extending model guess keep good work", "d": "4/2018"}, {"body": "created small pr proposed changes", "d": "4/2018"}, {"body": "thanks", "d": "4/2018"}, {"body": "tsangjustin browser using exabeam comment explains happening depth gwynjudd mentioned url encoding changed chrome released dec lines recent influx comments tickets issue also may existed firefox due comments mentioned tickets however tested time wrote workaround issue", "d": "4/2018"}, {"body": "jashkenas underscore new shiny bb sure left done moment merged changelog already", "d": "4/2018"}, {"body": "would lovely megawac jridgewell would feel pushing", "d": "4/2018"}, {"body": "solution fully understand used pathstripper regex edit works situration see", "d": "4/2018"}, {"body": "aggror pathstripper according documentation cached regex stripping urls hash equivalent solution neat efficient", "d": "4/2018"}, {"title": "router service failing query parameters application controller", "body": "hello really sure really problem anyway trying migrate router service got strange error message distilled following minimal test case application controller query parameter got two routes route uses router service transition route b aftermodel got acceptance test loads route query parameter set leads assertion failed passed query parameter transition application please update testparam checkin leading behaviour found believe bug problem code hint would helpful cheers jan niklas", "num": "16594", "d": "4/2018"}, {"title": "improve documentation unless template helper", "body": "per discussion learning team channel unless bit confusing native english speakers multilingual devs improve documentation help two improvements put description logic docs suggested language give block form example current docs file edit", "num": "16592", "d": "4/2018"}, {"title": "mouseenterleave event delegation broken wo jquery", "body": "components andor event handler called anymore running without jquery think events nt bubble event delegation based root element work events get triggered element listener app case see possible workaround would use hood enable event delegation make sure behaves ie nt trigger child elements jquery seems works jquery mode could work pr agree way forward", "num": "16591", "d": "4/2018"}, {"title": "misleading error invalid import computed", "body": "hi development stumbled upon issue took quite time pinpoint error message actual error following bad import sure worth issue feel free close easy win gives developer helpful misleading error message always something", "num": "16588", "d": "4/2018"}, {"title": "text template helper action doco makes sense", "body": "pretty sure text doco template helper correct underlying file seen rendered text question reads like function read function passed create closure function arguments almost certain bit bracket function passed complete makes sense grammatically putting aside whether makes sense context ember unfortunately ca nt say brackets otherwise would pr edit changed make sense grammatically makes sense grammatically", "num": "16586", "d": "4/2018"}, {"title": "brace expansion allow whitespace", "body": "consider example versus one easier read even error message makes case would suggest simpler readable missing something legitimate reason whitespace stripped", "num": "16585", "d": "4/2018"}, {"title": "emberrelease embertry scenario failing", "body": "scenario emberrelease missing npm packages package embersource specified installed installed run install missing dependencies think tarball failed publish", "num": "16580", "d": "4/2018"}, {"title": "\u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0444\u0430\u0441\u0442\u0431\u0443\u0442\u0430 \u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u043a\u0448\u0435\u043d\u0435", "body": "\u0442\u0430\u043a\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0435\u0441\u0442\u044c", "num": "16579", "d": "4/2018"}, {"title": "looking work around restriction error changing view elementid creation", "body": "application initial load data use data generate dynamic id classes another api call make reload missing data problem reload function bring different information elementid complains changing id allowed like without api call good work around issue keeping logic", "num": "16574", "d": "4/2018"}, {"title": "componenthelper found message", "body": "hello cerated new app wrote following templatehbs first component exists second one got errors console believe something like helper found message similar modaldialog modaldialognotfound outlet pass parameter like get error nt think need least warning reading someone hbs file ca nt say sure whether component name variable maybe always symbol good idea", "num": "16555", "d": "4/2018"}, {"title": "create new tag model destroyed error test teardown", "body": "beginning ember test failing teardown error assertion failed create new tag destroyed working reproduction going hard best describe scenario model relationship model b model also properties depend properties model b la model b computed assertion seems getting triggered teardown tries computed properties depend property related model far tell occur running app make error go away either removing computed properties really solution setting relationship sure regression per se also really sure best dig figure fix", "num": "16541", "d": "4/2018"}, {"title": "ember route model method swallows errors", "body": "inside route file eg lets say nothing found redirect basically simple nt thrown console lead lots time wasted simple typo", "num": "16534", "d": "4/2018"}, {"title": "operand got", "body": "fix updated seeing couple route transitions instead previous ca nt reproduce except application error operand got eencode tepush tpushcomponentdefinition estatic xn ecompile tecompileinline tecompileinline ecompile teadd ecompile objectevaluate eevaluate eevaluatesyscall eevaluateinner eevaluateouter enext eexecute ihandleexception ehandleexception ethrow nevaluate eexecute ererender eurender erunintransaction terenderroots terenderrootstransaction terevalidate einvokewithonerror eflush eflush eend eend erun ejoin ejoin array etrigger eend eend erun ejoin ejoin functione join l nsendaction ntap nsend n send htmlbuttonelementtap objectup objectgesturetrigger", "num": "16532", "d": "4/2018"}, {"title": "migrate internals public modules api", "body": "tracking issue migrating internal repo public js modules api x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x moment progress rwjblue future point opened call help style quest issue", "num": "16529", "d": "4/2018"}, {"title": "special kind ember object proxy error thrown ember", "body": "recently upgraded ember addon ember gt found model class created via proxy like note recordproxy using constructed using model object non computed property ie vanilla js import model emberclisimplestoremodel export default modelextend changerole throwing error like curious regression future deprecation waiting happen understand error ember would need access function prior could invoke like normal function without function computed getter would nt anticipate use explicit invoke trouble creating w ember twiddle able using prove broken note app works fine flip source dependency back ember helpful pointers move forward thank advance", "num": "16521", "d": "4/2018"}, {"title": "properly use injectedproperties ember", "body": "recently upgraded ember addon gt got error regarding service injection worth mentioning project supports class syntax ember object working fine ember exception throws class tests almost certainly used js import inject emberservice export default function statetocomputed dispatchtoactions wrappedcomponent wrappedcomponentprototyperedux inject redux return class connect extends wrappedcomponent constructor super arguments pointers path forward would greatly appreciated thank advance", "num": "16519", "d": "4/2018"}, {"title": "improve docs router service", "body": "router service docs need beginnerfriendly description right says router service public api provides componentview layer access router recommend main description pr file needs change ideally commonly used apis code blocks demonstrating use explanations purpose use example see emberarray additional prs could include code block demonstrating use method property maintainers may feel free edit issue directly locks mark helpwantednew contributors looks good", "num": "16518", "d": "4/2018"}, {"title": "rfc embercopy embercopyable deprecation", "body": "metaissue track implementation embercopy addon x implement copy method copyable mixin data x remove use copy copyable code tests emberjs x adjust copy always copy arrays rather delegating copyable x remove use copy copyable code tests x deprecate copy nativearraycopy x deprecate copyable mixin use objectextend feasible deprecationapp document deprecation objectassign shallow copies availability addin emberclieslint x deprecation rules copy copyable discussion decided emberapi verify copy copyable documentation reflect deprecation link requisite prs opened", "num": "16517", "d": "4/2018"}, {"title": "regression canary emberextendprototypes undefined", "body": "removed framework common libraries like emberinflector use value source need intimate api deprecation cycle example value used set source cc rwjblue", "num": "16511", "d": "4/2018"}, {"title": "regression closure component dot rule unenforced", "body": "closure component invocations follow dot rule invoked either helper path containing example valid invocations hbs somecomponent wrappinghash wrappinghashsomecomponent somecomponent thissomepassedincomponent component somepassedincomponent another example invalid invocations invoke component usually show hbs somecomponent closurecomponent closurecomponent somecomponent somepassedincomponent ember invocations block param closure components without permitted reproduction cc iezer rwjblue", "num": "16510", "d": "4/2018"}, {"title": "class attribute recomputed", "body": "something like template used work fine true addition classes added false classes used however nt work added even true works add nonempty string else clause", "num": "16505", "d": "4/2018"}, {"title": "dynamically created computed property seems broken", "body": "hello using dynamically generated computed property seems work anymore code sample", "num": "16504", "d": "4/2018"}, {"title": "uncaught typeerror read property syscall null", "body": "banging head every time try update gt version beta final happens transitioning particular route exactly times unfortunately unable create reproduction except application stacktrace nt point anything dig idea start looking javascript appendopcodesprototypeevaluate function evaluate vm opcode type var operation thisevaluateopcode type operationsyscall errors type argument operationevaluate vm opcode else operationevaluate vm opcode", "num": "16503", "d": "4/2018"}, {"title": "expandproperties documented wrong module", "body": "fall subheading page fix go set", "num": "16500", "d": "4/2018"}, {"title": "assertion failed attempted access property", "body": "following code inside called somewhere code results following assertion error lengthget get length case encountered error thirdparty code nt control information help us improve error message telling us happened situation new embererror assert objectget objectisarray arrayforeach arrayemberaflattenarrayflatten arrayforeach arrayemberaflattenarrayflatten blows inside ember guess bug", "num": "16495", "d": "4/2018"}, {"title": "getowner returning false objectproxyinit", "body": "returning container since returns false looks quite different", "num": "16484", "d": "4/2018"}, {"title": "read property fullname undefined", "body": "following maybe hacky code coffeescript import service emberservice import component embercomponent import getowner setowner emberapplication import promise rsvp export default serviceextend getrenderer owner ownerlookup renderer dom render template context new promise resolve gt create new component owner getowner used work fine including broke calling append leads blowing returns undefined component create code know using somewhat private apis changed new ember fix thanks great framework", "num": "16483", "d": "4/2018"}, {"title": "queryparams longer documented api docs", "body": "queryparams longer documented controller code refactored mixinscontroller fix need tie back adding existing documentation queryparam property flow viewable controller", "num": "16481", "d": "4/2018"}, {"title": "bug canary embernamekey undefined", "body": "undefined pulled namespace called return right thing", "num": "16480", "d": "4/2018"}, {"title": "bug canary mixins throwing", "body": "addon throwing embernamekey validationsmixin seems immutable addons using", "num": "16479", "d": "4/2018"}, {"title": "ember viewbox attribute svg component incorrect capitalization", "body": "summary rendering component bound attribute resulting dom element attribute without capital b impact svg wrong size observed chrome reproduction issue could nt figure jsbin embertwiddle problem exist ember similar past issue", "num": "16477", "d": "4/2018"}, {"title": "changes scheduling task causes rerender", "body": "ember contextual component work initial render register parent registration process cause cp updated want render updated value cp first paint code found reference ember cp would computed twice single render fine ember breaks behavior understandable reasons right schedule callback queue render triggers cp change next run loop updates dom accordingly working fine ember second render cycle nt happen tests example test found using example happening function resolved run queue empty go validate first step visible cp already updated made step visible however cp recomputed yet meaning step yet visible causes lot tests fail question twofold change intentional would right way approach declarative api like much ember power coming template seems like moving wrong direction break behavior allowed declarative apis like one addon", "num": "16464", "d": "4/2018"}, {"title": "typo shouldrender documentation", "body": "currently documentation states setting value disable rendering setting value actually disable rendering default value cause application render", "num": "16455", "d": "4/2018"}, {"title": "ember regression unable addobject arrayproxy", "body": "ember able use add new record existing collection fetched via upgrading ember action results error also breaks loading additional pages uses add subsequent pages existing model suspect related change understand immutability future direction ember results breaking change deprecation warning possible make less restrictive via deprecation willing work change unsure desired approach would", "num": "16451", "d": "4/2018"}, {"body": "somewhat hesitant bake without changes event dispatching make pay go believe applications nt use always listening nontrivial cost couple simple know always simple work arounds folks suffering right refactor component explicitly add event listener refactor template use closure actions hbs hover", "d": "4/2018"}, {"body": "somewhat hesitant bake hm way would get baked change implementation pay go without changing public api time later support box already baked sense public api documented ca nt ignore believe applications nt use mouseenter mouseleave mouseover always listening nontrivial cost right certainly see benefit smarter approach handling events covered ember public api cost already incurring running w jquery fixing native mode would bring implementation par right refactor component explicitly add event listener didinsertelement yes fixed like", "d": "4/2018"}, {"body": "hm way would get baked change implementation pay go without changing public api time later sold smiley would love pr", "d": "4/2018"}, {"body": "provide quick repo reproduction wondering complaining computed function", "d": "4/2018"}, {"body": "serabe ca nt reproduce new app either expected infinite rendering invalidation import real app instead could found module weird since give reproduction case shall close", "d": "4/2018"}, {"body": "reread paragraph text appears think understand brackets would helpful get views others see right track contexts helper called closure action helper behavior simple passed function name read function actions property current context function read immediately function passed create closure function arguments resulting value action helper used way simply function would interested feedback suggestion", "d": "4/2018"}, {"body": "shearichard thank please open pr people comment directly proposal ok approve merge directly thank", "d": "4/2018"}, {"body": "serabe good idea done thank", "d": "4/2018"}, {"body": "intended behaviour changing would require follow rfc process describe contributing file thank", "d": "4/2018"}, {"body": "understand intended error message interested knowing intended allowing whitespace allows cleaner code", "d": "4/2018"}, {"body": "basically parse runtime dealing fewer exception led fastereasier code feel free dig last couple rounds refactoring underlying code also fwiw expansion simplified", "d": "4/2018"}, {"body": "thanks links heads", "d": "4/2018"}, {"body": "valid tarball url downloaded locally confirm", "d": "4/2018"}, {"body": "confusing reran make sure got error", "d": "4/2018"}, {"body": "debugging kategengler seems like npm bug basically published tag addon already using due packagejson current release tarball exactly integrity checksum matches getting confused pruning newly installed package detailed log ssemberasyncactioncontainer debugembertry ember try one emberrelease skipcleanup embertry commands tryone scenario argument emberrelease embertry commands tryone command options embertry commands tryone skipcleanup true configpath configembertryjs checkforupdates false disableanalytics false embertry commands tryone command specified command line embertry commands tryone config npmoptions verbose scenarios name npm devdependencies embersource name npm devdependencies embersource name npm devdependencies embersource name emberrelease npm devdependencies embersource embertry task tryeach dependencymanageradapters npm bower embertry dependencymanageradapter npm backing packagejson nodemodules embertry task tryeach scenario manager setup embertry dependencymanageradapter npm changing dependency set devdependencies embersource embertry dependencymanageradapter npm write packagejson embertry dependencymanageradapter npm name emberasyncactioncontainer version description async state wrapper keywords emberaddon license mit author kelly selden directories doc doc test tests repository build lint js eslint js addon addontestsupport app config lib server testsupport tests start ember serve test ember test test ember try dependencies emberclibabel emberclihtmlbars emberdefer devdependencies broccoliassetrev emberajax embercli emberclidependencychecker emberclieslint emberclihtmlbarsinlineprecompile embercliinjectlivereload embercliqunit emberclishims emberclisri embercliuglify emberdisableprototypeextensions emberexportapplicationglobal emberloadinitializers embermaybeimportregenerator emberresolver embersource gt emberaddon configpath testsdummyconfig embertry dependencymanageradapter npm run npm install options verbose embertry utils run spawned sh c npm install verbose noshrinkwrap cwd usersrjacksonsrcsandboxemberasyncactioncontainer stdio inherit npm info worked ends ok npm verb cli npm verb cli npm verb cli install npm verb cli verbose npm verb cli noshrinkwrap npm info using npm npm info using node npm verb npmsession npm info lifecycle emberasyncactioncontainer emberasyncactioncontainer npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm verb correctmkdir usersrjacksonnpmlocks correctmkdir flight initializing npm verb lock using usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesstaging npm verb unlock done using usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesstaging npm info linkstuff emberasyncactioncontainer npm verb linkbins emberasyncactioncontainer npm verb linkmans emberasyncactioncontainer npm info lifecycle emberasyncactioncontainer emberasyncactioncontainer npm info lifecycle emberasyncactioncontainer emberasyncactioncontainer npm info lifecycle emberasyncactioncontainer emberasyncactioncontainer npm info lifecycle emberasyncactioncontainer emberasyncactioncontainer npm verb saving date npm verb exit true npm info lifecycle undefinedpreshrinkwrap undefined npm info ok embertry utils run process exited embertry dependencymanageradapter npm run npm prune embertry utils run spawned sh c npm prune verbose noshrinkwrap cwd usersrjacksonsrcsandboxemberasyncactioncontainer stdio inherit npm info worked ends ok npm verb cli npm verb cli npm verb cli prune npm verb cli verbose npm verb cli noshrinkwrap npm info using npm npm info using node npm verb npmsession npm verb correctmkdir usersrjacksonnpmlocks correctmkdir flight initializing npm verb lock using usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesstaging npm info lifecycle embersource embersource npm info lifecycle embersource embersource npm verb unbuild rmstuff embersource usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle embersource embersource npm info lifecycle emberroutergenerator emberroutergenerator npm info lifecycle emberroutergenerator emberroutergenerator npm verb unbuild rmstuff emberroutergenerator usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle emberroutergenerator emberroutergenerator npm info lifecycle recast recast npm info lifecycle recast recast npm verb unbuild rmstuff recast usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle recast recast npm info lifecycle esprima esprima npm info lifecycle esprima esprima npm verb unbuild rmstuff esprima usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm verb unbuild rmstuff nodemodulesrecastnodemodules npm info lifecycle esprima esprima npm info lifecycle jquery jquery npm info lifecycle jquery jquery npm verb unbuild rmstuff jquery usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle jquery jquery npm info lifecycle broccolimergetrees broccolimergetrees npm info lifecycle broccolimergetrees broccolimergetrees npm verb unbuild rmstuff broccolimergetrees usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm verb unbuild rmstuff nodemodulesembersourcenodemodules npm info lifecycle broccolimergetrees broccolimergetrees npm info lifecycle broccolifunnel broccolifunnel npm info lifecycle broccolifunnel broccolifunnel npm verb unbuild rmstuff broccolifunnel usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm verb unbuild rmstuff nodemodulesembersourcenodemodules npm info lifecycle broccolifunnel broccolifunnel npm info lifecycle emberclivalidcomponentname emberclivalidcomponentname npm info lifecycle emberclivalidcomponentname emberclivalidcomponentname npm verb unbuild rmstuff emberclivalidcomponentname usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle emberclivalidcomponentname emberclivalidcomponentname npm info lifecycle emberclipathutils emberclipathutils npm info lifecycle emberclipathutils emberclipathutils npm verb unbuild rmstuff emberclipathutils usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle emberclipathutils emberclipathutils npm info lifecycle embercligetcomponentpathoption embercligetcomponentpathoption npm info lifecycle embercligetcomponentpathoption embercligetcomponentpathoption npm verb unbuild rmstuff embercligetcomponentpathoption usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle embercligetcomponentpathoption embercligetcomponentpathoption npm info lifecycle asttypes asttypes npm info lifecycle asttypes asttypes npm verb unbuild rmstuff asttypes usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle asttypes asttypes npm verb unlock done using usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesstaging removed packages npm verb exit true npm info ok embertry utils run process exited embertry dependencymanageradapter npm switched dependencies embertry dependencymanageradapter npm name embersource versionexpected versionseen null packagemanager npm embertry dependencymanageradapter bower changing dependency set scenario emberrelease embertry task tryeach embertry task tryeach scenario emberrelease allowedtofail false dependencystate name embersource versionexpected versionseen null packagemanager npm command ember test embertry utils run spawned sh c node usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesemberclibinember test cwd usersrjacksonsrcsandboxemberasyncactioncontainer stdio inherit missing npm packages package embersource specified installed installed run install missing dependencies stack trace error report error occurred constructor emberclidependencychecker usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesemberclidependencychecker embertry utils run process exited result false embertry task tryeach cleanup embertry task tryeach skip scenariomanager cleanup embertry task tryeach output results results scenario emberrelease fail command run ember test dependency expected used type embersource installed npm scenarios failed scenarios succeeded scenarios run embertry task tryeach exit", "d": "4/2018"}, {"body": "woah explains since brand new addon", "d": "4/2018"}, {"body": "fix retriggering ci build release branch tarball would generate small difference timestamps kinda sucks though", "d": "4/2018"}, {"body": "yeah mitigate embertry says shas match noop least npm fixes", "d": "4/2018"}, {"body": "possible mitigations remove attempting updating packagejson remove updating packagejson allow disabling embertry ed new deps think second seems likely succeed thoughts kategengler", "d": "4/2018"}, {"body": "like second think originally moved prune reason tue apr pm robert jackson notifications githubcom wrote possible mitigations remove nodemodules attempting npm install updating packagejson remove nodemodules updating packagejson allow disabling npm prune embertry npm installed new deps think second seems likely succeed thoughts kategengler receiving mentioned reply email directly view github mute thread", "d": "4/2018"}, {"body": "generally reserve issue tracker bugs ember seems like qa x type thing better served forum stack overflow slack going close please cross link forumso post update thread answer find future searchers", "d": "4/2018"}, {"body": "looks like pull requests already exist", "d": "4/2018"}, {"body": "think would useful see stack couple different pathways end calling need know dig thing seems somewhat odd case need figure unwatching would cause called personally would expect called given object getting rendered template", "d": "4/2018"}, {"body": "rwjblue full stack", "d": "4/2018"}, {"body": "gotcha old friend proxy assertion first suggestion may need digging would add guard avoid calculating proxy destroying might look like js unknownproperty key thisisdestroying thisisdestroyed return however also curious property call", "d": "4/2018"}, {"body": "think point", "d": "4/2018"}, {"body": "hmm think addressed missed rondalesc backported release scheduled us test latest build see already fixed", "d": "4/2018"}, {"body": "feeling may trolled us issue apologize could sworn try latest release build morning still saw error however trying reproduce ember master locally could nt reproduce switch back latest release also ca nt reproduce nt even know way anymore switching back release version exhibit error think consider resolved await new release", "d": "4/2018"}, {"body": "kdamball example code appear bug emberjs function signature model hook nt referenced code example exactly sure error trying invoke lately using emberclitypescript improves static type analysis application code helps editor lookup autocomplete well opinion adding typescript improves developers ability catch types errors also think eslint would call syntax issue close", "d": "4/2018"}, {"body": "nullrocket experiencing issue could kindly explain integrated fix project like start digging sure get local version vm connected project", "d": "4/2018"}, {"body": "edited reproduction pretty sure related usage component helper block reading willviles comment went back simplified reproduction nt take component reproduce initially thought removed pasted large number components simulate number rendered previously set reproduction transitions two routes template route number transitions throw error currently throws error experiencing issue switch embersource duplicate error hbs mycomponent textitem mycomponent textitem", "d": "4/2018"}, {"body": "nullrocket thanks found caching issue template handle cached properly routes first visited definition given new handle every lookup", "d": "4/2018"}, {"body": "worse issue affects dynamic lookup via component helper reproduction something else assumed every compilable template stayed compiled state wrappedbuilder handles components tagname ember meaning every invoke component tag regenerating opcodes hitting limit", "d": "4/2018"}, {"body": "bumped glimmervm include related fix whcih cherrypicked beta release though release branch actually glimmervm builds published channels release beta canary soon test use update point tarball url printed command krisselden would mind reviewing confirming ultimately resolved close", "d": "4/2018"}, {"body": "krisselden rwjblue ran iterations reproduction seems fixed errors memory heap growth", "d": "4/2018"}, {"body": "thanks fast work today", "d": "4/2018"}, {"body": "closing issue underlying bug fixed confirmed demo repos provided fix pulled release release beta release latest builds minutes release beta canary channels include fix get latest tarball url via embersourcechannelurl additional issues crop report new issue reproduction", "d": "4/2018"}, {"body": "issue case emberclisimplestore nt seem terribly simple ember check trigger reported assertion proxy assertion find underlying model quick fix workaround implement always returns undefined copy forward methods underlying model setup something like js init snip thisiscopyingmethods true let method model typeof model method function method thisproxymethod method thisiscopyingmethods false unknownproperty thisiscopyingmethods return return thissuper arguments fix issue generically means either make proxy assertion ignore type result feels somewhat like whackamole may actually nice heuristic sorts check method exists calling types things see list exclusions nearly functions change assertion warning", "d": "4/2018"}, {"body": "rwjblue closing favor thanks help robert", "d": "4/2018"}, {"body": "problem happy help", "d": "4/2018"}, {"body": "update looks like root cause inside opt conditional first ember set false error thrown curious edge case support w nt caught yet magic returns injected service wout error", "d": "4/2018"}, {"body": "roughly issue described", "d": "4/2018"}, {"body": "change fix issue basic gist setting properties prototype instance properly define computed property must go normally change suggest work backwards forwards compatibly consider general regression though mentioned specific use case likely fixed private api deprecation patch release", "d": "4/2018"}, {"body": "rwjblue perfect thanks quick reply dude verified works planning ship patch ember redux morning yet solve", "d": "4/2018"}, {"body": "first ran ternary also converted computed property found problem", "d": "4/2018"}, {"body": "also ran basically prevents us using ember breaks app quite lot places rather hard track would awesome get fix", "d": "4/2018"}, {"body": "someone time put together repo demonstrating issue possibly failing test case pr", "d": "4/2018"}, {"body": "sure pretty easy reproduce see relevant code also note interestingly true default toggling work fields", "d": "4/2018"}, {"body": "confirm issue passing argument component invocation right eg issue", "d": "4/2018"}, {"body": "think likely similar fixed basically somewhere pipeline likely curly component manager truthy check nt", "d": "4/2018"}, {"body": "provide simplified demoexample working anymore mean recomputing throwing error etc ultimately believe essentially issue reported pattern public api happened work due refactor late cycle computed properties design time defined runtime way make usage scenario work would define cp instance object instead example", "d": "4/2018"}, {"body": "really provide simple demo example quite rely application simplest example live probably write one necessary computed property function get called never get never get called even dependent keys modified working tell need live sample try write one", "d": "4/2018"}, {"body": "fairly sure prior comment correct duplicate essentially thing actually support quick solution snippet would move works way back ember something like", "d": "4/2018"}, {"body": "test asap get back thanks lot support", "d": "4/2018"}, {"body": "works like charm thanks lot close", "d": "4/2018"}, {"body": "closing missuse system", "d": "4/2018"}, {"body": "seeing similar issues sentry logs upgrading ember stacktraces giving hints unfortunately one example safari another chrome", "d": "4/2018"}, {"body": "similar debugging found far error happens receives larger size heap always", "d": "4/2018"}, {"body": "moreover also larger", "d": "4/2018"}, {"body": "look implementation class notice buffer uses something pushed heap size checking problem nt expand needed regular arrays simple test produces produces", "d": "4/2018"}, {"body": "pieterv agree seems likely issue thank digging report specific issue glimmervm coordinate solving krisselden chadhietala wycats tomdale address expanding heap reached max capacity", "d": "4/2018"}, {"body": "hi thanks quick work hot fix apply properly fixed", "d": "4/2018"}, {"body": "urbany far know best option stay ember resolved", "d": "4/2018"}, {"body": "nt run propper testing eheh thanks", "d": "4/2018"}, {"body": "maybe next time around wo nt wait month report pretty determined something one components though question probably highlight fact know nothing glimmervm internals heap growing constantly transitioning route sign anything else looking mitigate general", "d": "4/2018"}, {"body": "nullrocket concern something regenerating opcodes using already compiled specifically alway pushcomponentdefinition wondering always seeing new definition something see existing definition still smells", "d": "4/2018"}, {"body": "rwjblue sure close may address crash confident fully root caused wondering idiom people messes caching covered test suite", "d": "4/2018"}, {"body": "krisselden component following template route causes error perhaps component helper related problem dig bit deeper fix help opened another issue seems related continually growing opcodes hbs items item component itemcomponent optionsargs", "d": "4/2018"}, {"body": "edited reproduction pretty sure related usage component helper block reading willviles comment went back simplified reproduction nt take component reproduce initially thought removed pasted large number components simulate number rendered previously set reproduction transitions two routes template route number transitions throw error currently throws error experiencing switch embersource duplicate error hbs mycomponent textitem mycomponent textitem", "d": "4/2018"}, {"body": "experiencing issue since upgrading ember app occurs transitioning two tab states multiple times transitions errors tab child component scheduling function using ember runloop child component rendered using helper prevent error using instead solution locks thread quite perceptibly", "d": "4/2018"}, {"body": "krisselden agreed reopened smiley nullrocket willviles test latest release build confirm working following get current tarball url update", "d": "4/2018"}, {"body": "rwjblue confirm issue resolved app thank", "d": "4/2018"}, {"body": "rwjblue also confirm version fixed app thanks", "d": "4/2018"}, {"body": "awesome thank testing try take time today poke things krisselden try see another underlying issue releasing try update let know", "d": "4/2018"}, {"body": "rwjblue fix error also fixed nt fix still reproduce one reproduction app seem related", "d": "4/2018"}, {"body": "tested project linked latest ember release right problem reported still occurs probably means bug correctly fixed right", "d": "4/2018"}, {"body": "fyi issue still ongoing problem need reproduction like believe roughly describes issue nullrocket minute try technique repo bouncing back forth routes like mentioned use demo able reproduce specific error issue led us ensuring heap grow fwiw fix landed still needed want avoid needing grow heap needlessly case appears leak", "d": "4/2018"}, {"body": "rwjblue pushed two branches repo original setup using original setup using embersourcechannelurl release see heap continually growing takes upped number iterations number route changes speed growth minutes grows significantly", "d": "4/2018"}, {"body": "awesome thank much nullrocket", "d": "4/2018"}, {"body": "tested changes linked locally running iterations heap growth", "d": "4/2018"}, {"body": "closing issue underlying bug fixed confirmed demo repos provided fix pulled release release beta release latest builds minutes release beta canary channels include fix get latest tarball url via embersourcechannelurl additional issues crop report new issue reproduction", "d": "4/2018"}, {"body": "take toddjordan", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "switching resolve issue believe", "d": "4/2018"}, {"body": "rwjblue yes fixed issue case thanks believe bug nonetheless", "d": "4/2018"}, {"body": "possible ensure trigger error probing", "d": "4/2018"}, {"body": "lucacorti thanks reporting definitely bug", "d": "4/2018"}, {"body": "related", "d": "4/2018"}, {"body": "lucacorti share code snippet showing object proxy created", "d": "4/2018"}, {"body": "rwjblue issue originally created service", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "error essentially component creating rendering created normal owner interface already worked around similar issue added manually setting owner quickest work around would sorry got ta use js since coffeescript super bad lets remove manual population renderer owner believe code still seems pretty nonidiomatic brittle future framework changes suggest trying come way refactor away pattern", "d": "4/2018"}, {"body": "thank worked leave decide whether close issue sure whole thing documented somewhere maybe good idea definitely sure ones things like thanks great support", "d": "4/2018"}, {"body": "definitely agree erroring useless error like add assertion actually helpful error message", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "kiwiupover double check current canary build need grab newest sha tarball url emberjscombuilds canary", "d": "4/2018"}, {"body": "sir", "d": "4/2018"}, {"body": "closed", "d": "4/2018"}, {"body": "steps fix add mixin constructor calling add deprecation accessing suggesting usage directly profit", "d": "4/2018"}, {"body": "looks like also applies release possibly related", "d": "4/2018"}, {"body": "yes agree believe related", "d": "4/2018"}, {"body": "copied seems apply issue sth tried create test first however efforts write something matches current implementations showed current test setup happily accepts diffs case sensitive bindings glimmervm emberjs probably test helpers refined however many internals involved nt know codebase well enough make substantial decision continued find actually going wrong believe found offending commit code essentially changed using lower case name attribute setting within install method yet new emberglimmer internals nt feel comfortable deciding best way fix happy help getting done little support though rwjblue hmm change definitely odd ember tests pass remove tolowercase unsure could cause sth rwjblue maybe posted svg related issue totally sure issues really cause however specifically looking attributebinding like would end make requested change one test fails specifically tests case insensitivity honestly seems little odd since used js case insensitive", "d": "4/2018"}, {"body": "thank sleuthing sth helpful", "d": "4/2018"}, {"body": "rwjblue happy helpful tried fix issue yesterday came along way many questions regarding direction things actually go intended tried get help slack guess everybody busy happy see fixed", "d": "4/2018"}, {"body": "fyi fix pulled release release beta release latest builds minutes release beta canary channels include fix get latest tarball url via embersourcechannelurl", "d": "4/2018"}, {"body": "run eager hear answers questions would interested helping figure solution problem eitherway", "d": "4/2018"}, {"body": "alexlafroscia picked poke replicate failure outside submitted upgrade check embersteps ci see passing ci run", "d": "4/2018"}, {"body": "unable reproduce locally seeing failure remarkably similar main codebase trying see get reproduction issue", "d": "4/2018"}, {"body": "could issue related conversion addon typescript thus move classes actually typescript rewrite branch problem build show issue correctly although still running time writing specifically bunch tests fail find first step would computed cp class usage place right broken concern", "d": "4/2018"}, {"body": "alexlafroscia may related paired rondalesc issue tracked", "d": "4/2018"}, {"body": "alexlafroscia believe issue seeing attempting add computed property perinstance without ember adding computed property instance eg without usage setup native getter properly notified changes see additional background", "d": "4/2018"}, {"body": "hmm interesting different way class set computed properties rather essentially would decorator version right way approach instead", "d": "4/2018"}, {"body": "looks like using work instead thanks helping dig rwjblue definitely problem trying define computed property without", "d": "4/2018"}, {"body": "thank", "d": "4/2018"}, {"body": "right saw error existed ember data long time able years app without warning deprecation converting array approach took fix app model managed add emberinfinity without overriding addon code", "d": "4/2018"}, {"body": "sorry deleted original comment bit confusing one clearer bryanhickerson nutshell happening inherited inherited calls overrides throw nt want mutating previously bug ember overriding version nt call letting accidentally bypass pr linked fixes bug array mutations go important keep fix avoid issues like future summary ember data always wanted recordarrays immutable error dates back due bug ember poor test coverage ember data recordarrays fact mutable went specific methods ember fixed bug ember data correctly enforcing recordarray immutability seems like right fix make deprecation", "d": "4/2018"}, {"body": "thanks context open ember data pr", "d": "4/2018"}, {"body": "actually closing seems related workaround documented fixed issue", "d": "4/2018"}, {"body": "artcommacode yes announced post release closing thank", "d": "4/2018"}, {"body": "thanks checking include screenshot see link release safari webkit safari version console error messages may mean something see safari page fully renders errors technology preview header renders lots errors", "d": "4/2018"}, {"body": "builtin helper documented api docs nt gotten working ember app sure yet", "d": "4/2018"}, {"body": "added api docs missing feature flagging pragma perhaps", "d": "4/2018"}, {"body": "apologies opened pr correcting problem", "d": "4/2018"}, {"body": "would nt mind taking look one test phase", "d": "4/2018"}, {"body": "lukecoy got", "d": "4/2018"}, {"body": "seems already fixed find error logs", "d": "4/2018"}, {"body": "look sure look", "d": "4/2018"}, {"body": "closing favor thank", "d": "4/2018"}, {"body": "still using ember meet problem nt return correct value even runloop works", "d": "4/2018"}, {"body": "still issue release version", "d": "4/2018"}, {"body": "dhaulagiri throw together demo app tweak show error", "d": "4/2018"}, {"body": "rwjblue pull run see error", "d": "4/2018"}, {"body": "issue", "d": "4/2018"}, {"body": "exelord success finding workaround", "d": "4/2018"}, {"body": "nope holding upgrade", "d": "4/2018"}, {"body": "rwjblue insight might look track last issue blocking us", "d": "4/2018"}, {"body": "issue almost certainly glimmervm think next step make failing test pr based demo think would basically similar test", "d": "4/2018"}, {"body": "exelord get fix pointing packagejson", "d": "4/2018"}, {"body": "thank dhaulagiri work ca nt wait official release", "d": "4/2018"}, {"body": "oh sorry missed issue basic change needed instead like done still less work components use allow component set returning falsey value", "d": "4/2018"}, {"body": "addressed", "d": "4/2018"}, {"body": "fyi fix pulled release release beta release latest builds minutes release beta canary channels include fix get latest tarball url via embersourcechannelurl", "d": "4/2018"}, {"body": "hmm two examples given actually quite different sets strings even quoted would treated strings html tokenizer browser attributes strings seems way parsing done example bit treated like path expression therefore evaluates undefined seem odd nt really seem like big parser quirk mmun may thoughts though", "d": "4/2018"}, {"body": "rwjblue thanks taking look issue bug guess question becomes one documentation ie read need convert numeric literals string literals order use templates bind numeric variable instead eg set controller use works fine would expected work constant number controller property described getting converted string automatically part process", "d": "4/2018"}, {"body": "mixonic also tracked precursory pr would need merged taking stab fix try verify still happens today", "d": "4/2018"}, {"body": "efx added", "d": "4/2018"}, {"body": "iezer may solved items ember template compiler section think may skipped first checkbox moved straight onto autointerpretation", "d": "4/2018"}, {"body": "mixonic embercliemberloadinitializers fixed thanks gavinjoyce", "d": "4/2018"}, {"body": "stefanpenner particular case even worse still using bower try get builds nt publish longer builds hodgepodge version canary ca nt recall exact sha super old", "d": "4/2018"}, {"body": "closing favor adding discussion", "d": "4/2018"}, {"body": "hmm title issue points underlying issue seeing described article linked initial attribute content reflect current property ember helper always set property therefore work nt really bug perse going go ahead close issue", "d": "4/2018"}, {"body": "patricall ping", "d": "4/2018"}, {"body": "closing according triage policy thank", "d": "4/2018"}, {"body": "reviewed tomdale day triaging list came following", "d": "4/2018"}, {"body": "adds implementation needed need update docs reflect new paths", "d": "4/2018"}, {"body": "cc emberjslearningteammanagers", "d": "4/2018"}, {"body": "rwjblue one correct used compilation import string compiled template used runtime belong template comes runtime thing factory template singleton di compile precompile come", "d": "4/2018"}, {"body": "indeed aware come please feel free provide suggestion without one likely push forward", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "anything one help move forward regression keeping us upgrading workaround lowercase breaks rendering svgs really want upgrade really would like finally get rid wrapper div regularly inconveniencing us cyclone", "d": "4/2018"}, {"body": "sth tbh mostly need someone dig help track regressed perhaps great first step submitting failing test case pr glimmervm", "d": "4/2018"}, {"body": "tldr message likely related issue rwjblue reporting back first extensive debugging adventure glimmer ember internals neckbeard tried create test first however efforts write something matches current implementations showed current test setup happily accepts diffs case sensitive bindings glimmervm emberjs probably test helpers refined however many internals involved nt know codebase well enough make substantial decision continued find actually going wrong believe found offending commit code essentially changed using lower case name attribute setting within install method yet new emberglimmer internals nt feel comfortable deciding best way fix happy help getting done little support though", "d": "4/2018"}, {"body": "hmm change definitely odd ember tests pass remove unsure could cause working seems like would related component attribute bindings right", "d": "4/2018"}, {"body": "rwjblue maybe posted svg related issue totally sure issues really cause however specifically looking attributebinding like would end make requested change one test fails specifically tests case insensitivity honestly seems little odd since used js case insensitive", "d": "4/2018"}, {"body": "able write test within emberjs glimmervm far anything look inspiration done emberjs within eventdispatchertestjs test case insensitive event handler let receivedevent second test currently fails however sure best place test maybe even simplified please let know submit pr done differently", "d": "4/2018"}, {"body": "seems quite though one several non trivial changes glimmer vm handles attributes tried debug changes seems issue appears dynamicproperty longer instantiated property manager contains normalized attribute exceeds knowledge glimmer intention development hopefully helps resolving issue though however pretty sure expected issue related", "d": "4/2018"}, {"body": "sth tests look great failing test pr would perfect", "d": "4/2018"}, {"body": "fyi fix pulled release release beta release latest builds minutes release beta canary channels include fix get latest tarball url via embersourcechannelurl", "d": "4/2018"}, {"body": "would suggest removing deferring switching changeproperties", "d": "4/2018"}, {"body": "simonihmig aware leaks last run test multiple acceptance tests leak multiple containers", "d": "4/2018"}, {"body": "krisselden one leaked container even multiple tests", "d": "4/2018"}, {"body": "seems least explained though agree still bit rough edge framework going close", "d": "4/2018"}, {"body": "toddjordan could elaborate see last time transition seen alive followed steps notice anything odd", "d": "4/2018"}, {"body": "efx steps show find try looking", "d": "4/2018"}, {"body": "ah thanks see issue selecting navigated page brings", "d": "4/2018"}, {"body": "docs live changes packagejson probably sync ember yuidocjson perhaps tried naively trouble linking locally posting notes public benefit", "d": "4/2018"}, {"body": "fixed", "d": "4/2018"}, {"body": "closing favor", "d": "4/2018"}, {"body": "seeing error get triggered code nt control chaijs chaijs code value amp amp typeof valueinspect function amp amp error attempted access property line test code triggers case array ember data records returned filter", "d": "4/2018"}, {"body": "dhaulagiri specific issue addressed released emberdata however still believe changes could make reduce avoid dserrors like issue imho update assertion system allow", "d": "4/2018"}, {"body": "rwjblue sure enough using ed seems fix sadly trapped ed long time fix wo nt immediate help us try upgrade ember may explore second suggestion", "d": "4/2018"}, {"body": "dhaulagiri fwiw manymost emberdata upgrade blocking issues happened era addressed emberdata might worth try", "d": "4/2018"}, {"body": "cibernox throws actual error ember", "d": "4/2018"}, {"body": "denzo seems like bug report filed emberpowerselect", "d": "4/2018"}, {"body": "denzo reported bug emberpowerselect maybe cibernox aware problem issue wtih power select app", "d": "4/2018"}, {"body": "huberts wrong exactly seems like pretty reasonable pattern safe way checking object thenable", "d": "4/2018"}, {"body": "huberts denzo bug fixed emberpowerselect", "d": "4/2018"}, {"body": "open pr works prevent proxy assertion applying functions fixes large number existing reported issues eg emberpowerselect probing still provides nice guidance folks may accidentally attempt remove retrieving cp values proxy", "d": "4/2018"}, {"body": "clarify change still supposed able use embermetal functions proxy objects getting assertion triggered testing call isempty proxy object", "d": "4/2018"}, {"body": "submitted pr make explicit error info thank", "d": "4/2018"}, {"body": "checked still happening", "d": "4/2018"}, {"body": "chancancode kategengler decide nt issue still something needs addressing", "d": "4/2018"}, {"body": "nt checked inspector current behavior yet still show tree components beneath templateonly component say problem", "d": "4/2018"}, {"body": "locks mentioned target controller instantiated properly handle query params nt bug perse limitation current implementation changing instantiate controllers would almost certainly breaking change", "d": "4/2018"}, {"body": "closed", "d": "4/2018"}, {"body": "thanks everyone hard work", "d": "4/2018"}, {"body": "working properly docs", "d": "4/2018"}, {"body": "mikeu time send documentation pr fixing", "d": "4/2018"}, {"body": "rwjblue sorry nt know nt get notified comment february better late never guess thanks ping sure able put something together time next week assuming urgent given long open reason upcoming release makes certain deadline appealing please let know see would expecthope pr update docs older versions recent release", "d": "4/2018"}, {"body": "nope rush trying lose track would expecthope pr update docs older versions recent release likely would pull docs changes current release", "d": "4/2018"}, {"body": "believe fixed tested ember new foo cd foo ember g acceptancetest index edit test pass properly ember test environmentproduction", "d": "4/2018"}, {"body": "rwjblue please confirm emberembercli version tested tested still seeing error think need migrate app latest versions", "d": "4/2018"}, {"body": "tested current release versions ember embercli also rudimentary test possible something specific needed repro discovered date happy reopen closed error", "d": "4/2018"}, {"body": "closing updated default embercli ago sorry troubles", "d": "4/2018"}, {"body": "resolved", "d": "4/2018"}, {"body": "sure anyone still following hitting issue big time probably wo nt several months anyone caveats overriding arrayprototypetostring return something static meantime", "d": "4/2018"}, {"body": "already supported close", "d": "4/2018"}, {"body": "followed", "d": "4/2018"}, {"body": "stumbled upon upgrading agree warning release notes deprecation warnings would nice use nested components extensively app organisation", "d": "4/2018"}, {"body": "ever going fixed", "d": "4/2018"}, {"body": "using mixin js import mixin emberobjectmixin import typeof emberutils function basicarray array typeof array array return false return arrayevery value gt return string number includes typeof value export default mixincreate serializequeryparam value urlkey defaultvaluetype defaultvaluetype array amp amp basicarray value return valueslice deserializequeryparam value urlkey defaultvaluetype defaultvaluetype array amp amp basicarray value return valueslice", "d": "4/2018"}, {"body": "new ideas tried emberanchor nice addon requires little much configuration standardscompliant regarding anchors anyway believe quite important feature implement", "d": "4/2018"}, {"body": "seeing error reproduced rwjblue see error", "d": "4/2018"}, {"body": "definitely confusing especially documentation makes effort mentioning called component rendered initial render subsequent rerenders changing class rerender fine obvious seems like bug first encounter", "d": "4/2018"}, {"body": "bumped error today ember dug code found thread uncomment line proper error thrown", "d": "4/2018"}, {"body": "workaround manually abort transition transitioning another route seems work ember versions hope helps", "d": "4/2018"}, {"body": "ember warning anymore suspect glimmer uses rightmost attribute multiple attributes name therefore longer issue closed avoid duplicate attributes one use", "d": "4/2018"}, {"body": "issue closed due inactivity likely user error cc rwjblue", "d": "4/2018"}, {"body": "issue closed since removed ember", "d": "4/2018"}, {"body": "issue closed cc rwjblue", "d": "4/2018"}, {"body": "anchor warning seems broken ca nt find page", "d": "4/2018"}, {"body": "issue closed since removed ember", "d": "4/2018"}, {"body": "problem simple solution problem viewbox svg element see attributebinding repeated double colon tested ember", "d": "4/2018"}, {"body": "issue still present might related", "d": "4/2018"}, {"body": "even glimmer issue still present ember cc stefanpenner krisselden", "d": "4/2018"}, {"body": "wagenet example using ember", "d": "4/2018"}, {"body": "case user action changed relationships model model doesnt represent api response date dependant relationship easily integrated models payload somehow need convince computed property loads relationship server data changed adding boolean dependant key triggerchangeindicator use toggleproperty triggerchangeindicator", "d": "4/2018"}, {"title": "jquery nt autoappend px css variables", "body": "description jquery nt autoappend px css variables link test case", "num": "4063", "d": "4/2018"}, {"title": "typo report", "body": "description found typo corejs make pr link test case", "num": "4059", "d": "4/2018"}, {"title": "remove deprecated methods", "body": "description deprecated methods like remember remove looking good start apis remove link test case", "num": "4056", "d": "4/2018"}, {"title": "chrome edge reporting invalid certificate codejquerycom", "body": "description currently problems loading jquery cdn directly opening chrome results net errcertcommonnameinvalid subject sslhwcdnnet issuer comodo rsa domain validation secure server ca expires jan current date apr pem encoded chain begin certificate end certificate begin certificate end certificate begin certificate end certificate link test case", "num": "4050", "d": "4/2018"}, {"title": "ready longer executing synchronously", "body": "good day realized ready longer executing synchronously gather done handlers executed even one fails one handler would like execute synchronously want load execute handler ready done work around get described behavior", "num": "4048", "d": "4/2018"}, {"title": "rtagname wrong regular expression", "body": "description think regular expression srcmanipulationvarrtagnamejs problems return first html tag failed link test case", "num": "4047", "d": "4/2018"}, {"title": "object tag svg ignored contents", "body": "first thank much project work description regression could introduced commit returning longer possible access document content svg provided attribute example would stop working since version js var svgobject svgobject svgobjecton load function svgobjectcontents find svg test link test reproduce bug would need domain nt possible upload platforms provide test link however prepared pr fix test case provided following js qunittest contents function assert assertexpect", "num": "4045", "d": "4/2018"}, {"title": "wrong outerheight outerwidth position calculation ie", "body": "methods return different values chrome see values sample chrome outerheight positiontop ie outerheight positiontop html function text td first outerheight text td eq position top outerheight positiontop suppose issue related", "num": "4044", "d": "4/2018"}, {"title": "wrong outerheight outerwidth calculation textarea ie", "body": "starting jquery methods become returning wrong value ie checked ie see results method sample jquery ie chrome jquery chrome jquery ie html function output text textarea outerheight outerheight", "num": "4043", "d": "4/2018"}, {"title": "callback function parameters changes position map called", "body": "description may caused callbackcall elem elem may callbackcall elem elem make map function act called different method link test case", "num": "4042", "d": "4/2018"}, {"title": "strange behavior deferredthen chain jquery", "body": "using jquery executed following script console google chrome javascript var rejected deferred reject rejected promise resolved deferred resolve rejected resolved promise case resolved done function consolelog adone arguments donehandler called fail function consoleerror afail arguments case b deferred resolve function return resolved done function consolelog bdone arguments fail function consoleerror bfail arguments failhandler called case b thought donehandler would called like case fact called failhandler argument rejected", "num": "4040", "d": "4/2018"}, {"title": "please add license github settings", "body": "please add license github settings repository currently github could identify project licence shown interface available via api also ref", "num": "4039", "d": "4/2018"}, {"title": "jquery breaks running window text iframe different doamin exist page", "body": "running text window cors iframes page throws exception str open page least one iframe different domain run window text expect happen return empty stringundefined actually happens throws exception corssecurity browsers affected webkitgecko based least minimal testcase happening seems sizzelgettext function assumes parameter sent nodetype property must array start iterating element indexes b adding iframes document reference also window object window n n number frames page sending window object iterates also inaccessible windows try access nodetype prop throws exception", "num": "4038", "d": "4/2018"}, {"title": "feature request warn selector returns zero matches", "body": "feature request jquery warn selector returns zero matches somehow ask mostly typically selector statement start chain statement ends noop element idelementid nt exist whatever reason document ready server didnt emit etc problem noop subtle difficult log test first breaks chain suppose could extend jquery particular implementation breaks chain perhaps switching implementation allows chaining requires inserting exists jquery code jqueryfnexists function thislength consolewarn jquery warning selector found zero items thisselector return elementid exists click function e consolelog click testing start empty dom check consolelog invoked jquery warning selector definitelynoclassdefined returns zero items feel like could easily plugged patch releases since breaking change edit started", "num": "4037", "d": "4/2018"}, {"title": "spa jquery", "body": "expect future version jquery allow develop single page apps using jquery syntax helpful lots jquery developers", "num": "4036", "d": "4/2018"}, {"title": "memory leak ie screens loaded iframe", "body": "description using jquery migration script per discussion microsoft support team guessing ie browser memory leak screens loaded iframe due circular reference ui elements jquery please find reference image url suspecting jquery holding handle orphan dom iframe window references link test case", "num": "4034", "d": "4/2018"}, {"title": "function", "body": "try run code like line code passes without exceptions click div error js console verry difficult diagnose uncaught typeerror jqueryeventspecial handleobjorigtype handle handleobjhandler apply function think jquery check typeof throw exception function", "num": "4033", "d": "4/2018"}, {"body": "pr", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "looking", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "seems resolved", "d": "4/2018"}, {"body": "yes work assuming attach event fires followups stackoverflow please since bug report", "d": "4/2018"}, {"body": "internal jquery code actual bug experiencing could provide test case js bin jsfiddle", "d": "4/2018"}, {"body": "actually may bug return correct value execute buildfragmentjs return return maybe tag one letter also needs warp future ca nt get", "d": "4/2018"}, {"body": "think issue related jquery demo switching jquery amp jquery show position calculation longer includes table position", "d": "4/2018"}, {"body": "yes jquery", "d": "4/2018"}, {"body": "see description api description translate items array object new array items description pass element current matched set function producing new jquery object containing return values", "d": "4/2018"}, {"body": "yep unfortunate documented inconsistency two apis way long change", "d": "4/2018"}, {"body": "thank ur explanation sry inconvenience caused", "d": "4/2018"}, {"body": "would agree behavior native js var rejected promisereject rejected resolved promiseresolve rejected promiseresolve function return resolved function consolelog bdone arguments catch function consoleerror bfail arguments", "d": "4/2018"}, {"body": "well seems strange behavior least unified cases b failed javascript var rejected promisereject rejected resolved promiseresolve rejected resolved case resolved function consolelog adone typeof arguments catch function consoleerror afail typeof arguments failhandler called case b promiseresolve function return resolved function consolelog bdone typeof arguments catch function consoleerror bfail typeof arguments failhandler called hand jquery jquery git used behave differently case case b done b failed javascript var rejected deferred reject rejected promise resolved deferred resolve rejected resolved promise case resolved done function consolelog adone typeof arguments fail function consoleerror afail typeof arguments case b deferred resolve function return resolved done function consolelog bdone typeof arguments fail function consoleerror bfail typeof arguments behavior unified jquery addition jquery jquery used behavior unified b done", "d": "4/2018"}, {"body": "note equivalent promisea spec run synchronously nt swallow errors expect behave differently jquery behave like promisea spec", "d": "4/2018"}, {"body": "misunderstood specification native promise jquery deferredresolve take multiple arguments one argument promiseresolve therefore equivalent processing native promise think necessary follows b done javascript var rejected promisereject rejected resolved promiseresolve rejected resolved case resolved arguments gt consolelog adone typeof arguments catch arguments gt consoleerror afail typeof arguments case b promiseresolve function return resolved arguments gt consolelog bdone typeof arguments catch arguments gt consoleerror bfail typeof arguments", "d": "4/2018"}, {"body": "argument native promiseresolve special specification resolve x thenable attempts make promise adopt state x promisesa value thenable ie method returned promise follow thenable adopting eventual state promiseresolve javascript mdn think arguments jquery deferredresolve specification", "d": "4/2018"}, {"body": "supplement behavior occurs rejected promise passed first argument deferredresolve cases b done b failed occur first argument second argument exchanged cases b done javascript var rejected deferred reject rejected promise resolved deferred resolve rejected resolved promise resolvedprime deferred resolve resolved rejected promise case resolved done function consolelog adone argumentslength fail function consoleerror afail argumentslength case b deferred resolve function return resolved done function consolelog bdone argumentslength fail function consoleerror bfail argumentslength case resolvedprime done function consolelog adone argumentslength fail function consoleerror afail argumentslength case b deferred resolve function return resolvedprime done function consolelog bdone argumentslength fail function consoleerror bfail argumentslength", "d": "4/2018"}, {"body": "sorry examples get longer complex getting harder understand problem reported part confusion results giving name deferrred rejected seems comes behavior consistent standard resolving using rejected also rejects", "d": "4/2018"}, {"body": "yes consistent standard resolve argument thenable follow thenable jquery supposed promisea spec fail sorry expected actually ok", "d": "4/2018"}, {"body": "also want pass one argument write like following code jquery however native promise got one argument following code wrong therefore make similar jquery seems following code appropriate", "d": "4/2018"}, {"body": "format following code ok jquery javascript native promise promiseresolve promisereject sorry arguments gt consolelog ok arguments ok promise catch e gt consolelog fail e jquery deferred resolve deferred reject sorry done function consolelog ok arguments ok arguments deferredpromise fail e gt consolelog fail e", "d": "4/2018"}, {"body": "however time try use chain difference native promise jquery ok native promise fail sorry jquery javascript native promise promiseresolve gt return promiseresolve promisereject sorry arguments gt consolelog ok arguments ok promise catch e gt consolelog fail e jquery deferred resolve gt return deferred resolve deferred reject sorry done function consolelog ok arguments fail e gt consolelog fail e fail sorry", "d": "4/2018"}, {"body": "finally set first argument resolve something deferredpromise ok returned time probably seems special interpretation done first argument", "d": "4/2018"}, {"body": "standard promisea uses one argument since jquerydeferred allowed still provide ability reporting bug close ticket feel documentation needs improved make suggestions request docs changes need specific especially given relatively obscure behaviors", "d": "4/2018"}, {"body": "yes reporting bug beginning think work follows insist compatibility native promise like think extend specification deferredresolvewith uses one argument args like promisea currently follows deferredresolvewith context args args type array optional array arguments passed donecallbacks deferredresolvewith extending specification follows args type array thenable ie deferredpromise", "d": "4/2018"}, {"body": "question simple javascript deferred resolve deferred reject sorry test function consolelog ok arguments ok arguments deferredpromise test catch e gt consolelog fail e deferred resolve gt deferred resolve deferred reject sorry test function consolelog ok arguments ok arguments deferredpromise test catch e gt consolelog fail e fact fail sorry bug isnt", "d": "4/2018"}, {"body": "ok good small case agree seems inconsistent promise thoughts surprised would nt promisea test intended behavior", "d": "4/2018"}, {"body": "examples highlight differences method including shorthand whose behavior specified promisesa ecmascript promise objects fundamental model jquery deferred objects predate terms ecmascript vocabulary jquery deferred objects fulfilled thenable objects ie objects method whereas promise objects resolution required enqueue invocation method inbound value observable effect standard promise resolution never supply thenable onfulfilled callback however jquery deferred behavior intended backwards compatibility surprising mixing models callbacks receive settlement values case means done onfulfilled callback gets rejected deferred object string multiple settlement values possible via callback explicit return deferred returned fulfilled therefore invoke callback first invokes onfulfilled callback returns deferred resolved result case deferred thenable unwrapped part handling reveal rejected thenable results return value also rejected state therefore ignoring onfulfilled callbacks introducing compatibility could instead done unwrapping input side would made implementation messier less backwards compatible ie unable receive multiple settlement values benefit nonstandard cases path opted avoid favor force output interpreted context standard behavior", "d": "4/2018"}, {"body": "thanks report license repository seems github nt like extension guess could remove extension repos seen nt use one use", "d": "4/2018"}, {"body": "packagejson also specifies fine removing changing", "d": "4/2018"}, {"body": "hi get answer github support team basically github uses automatic license detector installed locally get following results sections surrounded additions tool detected github confidence requirement changes github meeting threshold detect license project removes additions license detected properly course author community choice version license project use", "d": "4/2018"}, {"body": "fine making changes although bring kborchers specific changes licensetxt file sure legal issues see done eslint repo note packagejson file also clear license mit right", "d": "4/2018"}, {"body": "dmethvin much larger change one done eslint removed one minor eslint line beginning said opinion remove lines without issue team would like sure get us close enough github satisfied though last lines removed define things may fall mit license section referenced cla", "d": "4/2018"}, {"body": "thinking bit since jquery project defining content licensed differently nodemodules external directories may able remove need check legal get back asap", "d": "4/2018"}, {"body": "documentation says get combined text contents element set matched elements including descendants window object element situation code calling expecting result result expect", "d": "4/2018"}, {"body": "explain company develop third party tool communication reasons ass iframe website include snippet client created generic event handling function analytics purpse assume get text text execution context event aslong iframe different domain page window text dose throw exception wise throw undexpected point view essentially added iframe different origin page entire application failed", "d": "4/2018"}, {"body": "mean call valid application", "d": "4/2018"}, {"body": "application client following line every event executed jquery text application works fine integrate company code snippet adds iframe origin function break", "d": "4/2018"}, {"body": "think wierd something like adding iframe page change result unrelated function great add codition nodetype array return undefinedempty string always throw exception unhandled types", "d": "4/2018"}, {"body": "jquery nt validate user input expected supported method signatures used according returns behavior inputs undefined jquery would get much larger add input validation also slow library want input validated consider using typescript includes jquery type definitions package need tell client change invalid code", "d": "4/2018"}, {"body": "completely normal selection return nothing use advantage example chain operations selection may actually nicer noelements case since nt need extra logic handle need sure selection matched something check property people would definitely annoyed console message condition error could plugin like js jqueryfnwarnifempty function msg thislength consolewarn msg jquery selection empty nosuchthing warnifempty addclass notthere", "d": "4/2018"}, {"body": "dmethvin small correction js jqueryfnwarnifempty function msg thislength consolewarn msg jquery selection empty return nosuchthing warnifempty addclass notthere", "d": "4/2018"}, {"body": "haha yes", "d": "4/2018"}, {"body": "people develop spas jquery time large spa usually needs structure jquery alone provide google search information", "d": "4/2018"}, {"body": "possible run screenshot debugger however screenshot looks like references coming code nt jquery core test case uses jquery core", "d": "4/2018"}, {"body": "reopened test case uses jquery core", "d": "4/2018"}, {"body": "jquery generally nt validate user input make library way bigger need use parameter types match api docs want parameter validation consider using typescript together typesjquery package", "d": "4/2018"}, {"body": "discussed meeting reason error thrown trycatch however still nt work words never selected text nt think anything ca nt force browser select hidden text want avoid catching errors much possible", "d": "4/2018"}, {"body": "migrate ticket ready closed nothing core deprecation codewise", "d": "4/2018"}, {"body": "problem even run jquery modified source stored server somehow wo nt actually execute javascripts properly way errors clues provided debugger left ability switch page page via ajax jqueryevalurl function url debugger return jqueryajax url url", "d": "4/2018"}, {"body": "working always since created warning coming browser jquery api guaranteeing attempted use loaded html line javascript would available request changed async request jquery longer guarantee loaded html available worse mechanism available via indicate html loaded want receive warning browser need rewrite call async call injects html document change minor version since breaking change even clear whether makes sense try fix api may simpler deprecateremove give people instructions rewrite calls injected html embedded tags stack trace probably case remove html inject scripts directly code scripts act injected html html loaded example html fragmenthtml html jquery main html file change something note cases synchronously injected html used far away point injected rewrite may obvious case seem really complicated andor working code nt understand plugin nt write code got stackoverflow ignore console warning keep existing code need help could check stackoverflow", "d": "4/2018"}, {"body": "dmethvin would potentially require lot rewriting app code jquery users entrypoint mess jqueryparsehtml use follows content loaded using simple ajax get php output data php output able solve problem site like share solution solution different approach require much rewriting app code jquery users turns already eval script content could add callback function parameter jqueryparsehtml add jqueryajax use case statement eval script content unlocks waiting variable defined jqueryparsehtml instead sascsettingscontentloaded calls new callback parameter jqueryparsehtml add callback functionality use cases pop jquery bugreports useful addition jquery donating jquery developers community jqueryevalurl function url debugger return jqueryajax url url samwaitforcondition usage example delete sascsettingscontentloaded sasc seductiveappssitecode load content asynchronously content accompanying js loaded eval ed sets sascsettingscontentloaded true samwaitforcondition content loaded function return sascsettingscontentloaded function point content accompanying js fully loaded whatever needed content samwaitforcondition definition waitforcondition function label condition callback frequency context used instance let page wait vividdialogs fully initialized showing site components see source demo var fncn samwaitforcondition typeof label string samlog error fncninvalid label return false typeof condition function samlog error fncninvalid condition return false typeof callback function samlog error fncninvalid callback return false typeof frequencyundefined frequency lt frequency prevents excess stress js engine labelstacktrace undefined try var adebug adebug else throw new error myerror catch ex var stacktrace samglobalslogdostacktracesforallcode samglobalslogdostacktracesforcodepath codepath samuserdeviceisfirefox exstacksplit n exstack stacktrace provided labelstacktrace stacktrace var r condition context var dbgmsg fncn label n condition condition r true false n callback callback var dbgdata startstacktrace labelstacktrace label label condition condition callback callback frequency frequency conditionastext condition callbackastext callback samlog dbgdata", "d": "4/2018"}, {"body": "hard read solution looks like changes minified file nt variable names mean anything fact names change time jquery rebuilt original source code repo would much clearer describe changes regards users call directly pretty much jquery api accepts html potentially tag reference external script must evaluated sync order work way compatible existing jquery code major version bump jquery could change without describing internal changes jquery show user would put code example gave order make synchronous code work asynchronously", "d": "4/2018"}, {"body": "behavior previously marked enhancement added see related tickets behavior previously documented suddenly disappears sounds like bug anyone else thinks rather normal api method may may return json body workaround quite simple application rather common occurrence wcf service calls nt normally return data return json object event fault", "d": "4/2018"}, {"body": "noting lands possible use option call force use script transport allows use attributes like tag perhaps little intuitive setting note things like meant simpler apis fewer options assumptions wanted new functionality wo nt exposed apis could use since accepts full options object personally stick", "d": "4/2018"}, {"body": "question dmethvin use defined nonce shall use instead thanks", "d": "4/2018"}, {"body": "lands would use add options options nonce expect ship", "d": "4/2018"}, {"body": "dmethvin perfect see commit already merged main branch wait next version thank", "d": "4/2018"}, {"body": "dmethvin lets say use thing", "d": "4/2018"}, {"body": "hey graingert since relevant ticket ask stackoverflow otherwise tickets become support forums random issues hard follow note html file include script tags else comes play example", "d": "4/2018"}, {"body": "dmethvin replying", "d": "4/2018"}, {"body": "gather never fixed might break existing implementations arraylike objects conclusion never use objects aka associative arrays someday object mine may happen member named length value exactly zero would treat like empty array hardtoexplain consequences", "d": "4/2018"}, {"body": "bobstein yes nt want object arraylikes treated arrays would need use different mechanism possible alternatives include drawbacks far properties enumerated browser support", "d": "4/2018"}, {"body": "years working jquery ran problem today working json data feed contains length field looper function linked bobstein works well maybe jquery think fixing fashion least documenting issue page", "d": "4/2018"}, {"body": "ryonlabaw documented mentioned ca nt fix without breaking documented behavior since plenty alternatives today nt make sense change since want arraylike iteration object example nodelist current behavior desired", "d": "4/2018"}, {"body": "hi issue jquery last version load jquery documentation suggests csp policy obviously add nonetheless nt want use due security issues could exception jquery file considering hash nonetheless csp documentation refers hash external files applies csp", "d": "4/2018"}, {"body": "somewhere code eg calling loadscript trying load base js file", "d": "4/2018"}, {"body": "hi thanks replying really base file load end html seems jquery code builtin violates csp rule mon apr mike kamermans notifications githubcom wrote somewhere code eg calling loadscript trying load base js file receiving commented reply email directly view github mute thread", "d": "4/2018"}, {"body": "jfoclpf page works correctly large file probably inline script hiding error message get provide error line set breakpoint see stack leads please nt continue debugging session ticket though related except involve csp message", "d": "4/2018"}, {"body": "long csp headers indicate includes able load plain tag without integrity crossorigin attributes", "d": "4/2018"}, {"body": "thank dmethvin pomax one question use lot jquery function getscript load external scripts hosted domain jquery function trigger perhaps csp violation", "d": "4/2018"}, {"body": "jfoclpf yes would cause see", "d": "4/2018"}, {"body": "hit error similar scenario workaround molipet may ask solve issue thanks", "d": "4/2018"}, {"body": "hi wowcut workaround avoid setting depending use case use hiding iframe", "d": "4/2018"}, {"body": "gabrielschulhof nt easy way get ahold uc browser gandharthakar still issue latest jquery amp latest uc browser version", "d": "4/2018"}, {"body": "mgol checked fiddle latest android uc browser latest version jquery works fine thank much", "d": "4/2018"}, {"body": "got similar error trying get value passed querystring url var parameterpage urlsearchparamsget page please help", "d": "4/2018"}, {"body": "good day want handlers execute synchronously async execution problem apply third part control ready handler latest version jquery normal select control shown control shown looks unpreofessional applcation", "d": "4/2018"}, {"body": "fixed seo runs google light house reverted due concerns wider effects", "d": "4/2018"}, {"body": "status", "d": "4/2018"}, {"body": "still planned pr refactor event system ready yet micha\u0142 go\u0142\u0119biowskiowczarek", "d": "4/2018"}, {"body": "tracking issue roadmap really like subscribe something inform availability modules thanks", "d": "4/2018"}]