[{"title": "binding undefined property works dom updates intermittently", "body": "following code vue instance contains hash tabs property however initially undefined first part html allows change tabs second allows change view value current tab confusing thing click number value change dom however switch tabs switch back dom update jsfiddle copied code well html choose tab key value value almost working behaviour confusing suspect problem view layer nt add currenta dependency initially undefined ideally becomes defined added dependency nt possible warning message indicating binding undefined property screws everything would helpful", "num": "660", "d": "12/2014"}, {"title": "feedback difficulty appending child vm", "body": "really issue rather feedback difficult time appending child vm quite easy simple use case follows js var new vue template root var comp vueextend template child mount documentbody addchild comp appendto el tried code quite figured quite bit arduous passing component configuration would really nice could something like js var b new component append b passing component instance append appendto would call mount append el thoughts workflow", "num": "659", "d": "12/2014"}, {"title": "certain component names cause error doublenested vrepeats", "body": "found naming child component ending input causes error doublenested reason error set property vue undefined complaining though vuejs great", "num": "658", "d": "12/2014"}, {"title": "insertbefore breaking data binding undefined parentnode", "body": "trying solve odd problem thought could work around manually adding items directive element causes error replace method bug expected behavior", "num": "657", "d": "12/2014"}, {"title": "typescript support", "body": "plan add typescript definition file", "num": "656", "d": "12/2014"}, {"title": "fails silently component root element", "body": "see replace set true multi root template could cause param ca nt pass component case comment block cause problem", "num": "655", "d": "12/2014"}, {"title": "subscribers undefine", "body": "vue version encounter error uncaught typeerror read property update undefined pnotify anonymous function anonymous function handler handler happens click dropdown works well jsfiddle example needed extract one", "num": "654", "d": "12/2014"}, {"title": "scoped component", "body": "plan scoped component currently even register component vm level still affecting global would nt makes sense registration affects enclosing template think maintainable way component nt affect example reusing list component built someone else nt want worry item component internally used overrides item component app cents", "num": "653", "d": "12/2014"}, {"title": "multiple event listeners element extension causes error", "body": "something like fails init happens due parent array however expected array", "num": "652", "d": "12/2014"}, {"title": "mustachestyle inline variable nt work used style attribute", "body": "somehow datatest attribute works see action", "num": "651", "d": "12/2014"}, {"title": "similar dom string", "body": "hi know standalone also implement similar style creating dom using function like thanks", "num": "649", "d": "12/2014"}, {"title": "xlink namespace working", "body": "tried write vattr property unfortunately got warning following code according stack overflow link must worked point one problem seen far xlink regex nt match even fixing still getting error line completely misunderstanding issue", "num": "648", "d": "12/2014"}, {"title": "component loses dependency parent vue", "body": "components try replace passed object end shadowing instead updating however setting property individually works correctly see replace properties button properly passes data back parent replacing whole object ends breaking link component parent trying replace object root data new one loaded using ajax", "num": "647", "d": "12/2014"}, {"title": "vcomponent vrepeat render child elements", "body": "update version got unexpected behavior use component vrepeat component repeat children update got parent element read changelog ca nt find information fix issue repeat child span tag repeat parent div", "num": "646", "d": "12/2014"}, {"title": "doc inserted updated attached", "body": "hey find nowhere report doc specific errors component lifecycle every component vue instance lifecycle created compiled inserted attached detached finally destroyed key moments", "num": "645", "d": "12/2014"}, {"title": "reason missing vprop directive", "body": "builtin vprop would convenient modifying dom properties scrolltop", "num": "644", "d": "12/2014"}, {"title": "getting typeerror node undefined compiling vue component", "body": "js fiddle replicates issue basically trying make vue component use bootstrap modal suspect done something js caused error compilation even fault could situation relevant vue error message help users", "num": "643", "d": "12/2014"}, {"title": "number work select", "body": "vmodel number always gets string select changes please see example", "num": "642", "d": "12/2014"}, {"title": "get inner content compile component", "body": "going write common datagrid component sample jsfiddle sample case user wants customise body datagrid rowdataaaa filtera rowdatabbb filterb rowdataccc filterc according vue doc content tag used copy content component two questions get costomized content uidatagrid component javascript file use vm interpolate vm compile compile content dynamically thanks", "num": "641", "d": "12/2014"}, {"title": "change default", "body": "seems components write today need want get idea actual usage think makes sense", "num": "640", "d": "12/2014"}, {"title": "unhandled errors thrown evaluating computed properties getting swallowed silently", "body": "thought would ask sending pull request intentional swallowing exception point prevents reaching thus logged note console blank even though would expect something similar read property property undefined thank", "num": "639", "d": "12/2014"}, {"title": "vmodel", "body": "\u662f\u5426 \u4e00\u76f4\u4e3a", "num": "638", "d": "12/2014"}, {"title": "ca nt set selected value select option groups", "body": "updating backing model option groups nt set selected value see fiddle", "num": "637", "d": "12/2014"}, {"title": "vref update correctly keepalive set dynamic vcomponent", "body": "dynamic directive keepalive set vref update point currently active view model instance works fine keepalive set fiddle demonstrates issue open console see output switching components", "num": "636", "d": "12/2014"}, {"title": "vcomponent attributes thoughts", "body": "hi fiddling lately mostly add features vueroute question come usage vcomponent dynamic directive regarding attributes static behavior would expected component define attributes enable disable use cases pages different transition timing change one hack meh instance want preload disappear showing website outin want pages inout page heavy computation webgl module instance nt want recreate time would use one keepalive store components waste memory would need webgl module know footprint big highlighting could avoid storing webgl stuff global var nt get gced ai nt nobody got time vm waiting global preloader waitfor event problem time vm instanciated wait event even though preloader comes website bootstrap could fix testing instance best thing requests felt like putting thoughts use vue build websites amp experiences rather webapps although line close use cases little specific anyway hit keep good work loving far", "num": "635", "d": "12/2014"}, {"title": "issue updating dynamic select options", "body": "hi able update options array dynamic select seems javascript error thrown causing execution stop error uncaught typeerror read property childnodes undefined see fiddle reproduce", "num": "634", "d": "12/2014"}, {"title": "use inplace overwrite primitive values", "body": "could result less code consistent behavior", "num": "633", "d": "12/2014"}, {"title": "vfocus directive", "body": "programmatically focus input elements", "num": "632", "d": "12/2014"}, {"title": "may bug twoway directive", "body": "define twoway directive use set function bind error ca nt read property set undefined code follows javascript vuedirective tags twoway true bind function var selfthis consolelog self selfel itemadded function selfset val", "num": "631", "d": "12/2014"}, {"title": "components receive uncompiled version", "body": "possible pass child component compiled version tried following seems contain static elements work way", "num": "630", "d": "12/2014"}, {"title": "data available context component", "body": "created fiddle also noticed run instead works expected ps confirmed issue appears starting since", "num": "629", "d": "12/2014"}, {"title": "\u592a\u597d\u4e86\u4f5c\u8005\u662f\u534e\u4eba", "body": "javascript var scheduleoptions \u57fa\u7840\u8d44\u6599\u5b8c\u5584\u4e2d \u57fa\u7840\u8d44\u6599\u5df2\u5b8c\u5584 \u8be6\u60c5\u5b8c\u5584\u4e2d \u8be6\u60c5\u5df2\u5b8c\u5584 \u5b9a\u4ef7\u4e2d \u4ed3\u5e93\u4e2d \u9500\u552e\u4e2d \u552e\u99a8 \u5df2\u4e0b\u67b6 new vue el cards data goods id name image event false \u662f\u5426\u53c2\u4e0e\u6d3b\u52a8 cats \u5206\u7c7b gprice \u5e73\u53f0\u4ef7\u683c gmarketprice \u5e02\u573a\u4ef7 gcost \u4f9b\u8d27\u4ef7 storagesq \u5e93\u5b58 isstock false \u662f\u5426\u5165\u5e93 scheduleoptions scheduleoptions schedule id name \u4f73\u80fd image event false cats \u5206\u7c7b gprice \u5e73\u53f0\u4ef7\u683c gmarketprice \u5e02\u573a\u4ef7 gcost \u4f9b\u8d27\u4ef7 storagesq \u5e93\u5b58 isstock false \u662f\u5426\u5165\u5e93 scheduleoptions scheduleoptions schedule methods modify function id limitscheduleoptions value \u5bf9\u5e94 scheduleoptions \u95ee\u9898\u4e8c \u6539\u4ef7 \u95ee\u9898\u4e09", "num": "628", "d": "12/2014"}, {"title": "best way share globals vars", "body": "willing drop current angular app wondering use vue context want share global infos like user name counters etc shall reproduce layout angular got main app linked body impact performance vue shall avoid fastersaferbetter simply use global app variable attached window every view object able access data part model know exists subviews question recommended considering perf maintainability put issue linked documentation chapter like managing larger apps thanks", "num": "627", "d": "12/2014"}, {"title": "vattr takes one attribute used globals", "body": "made fiddle big issue since bottom solution works wanted give hint open console inspect dom see first input render attribute second input correctly renders", "num": "626", "d": "12/2014"}, {"title": "camelcase attribute params propagated child component", "body": "js var vm new vue template data showclosebutton true components xdialog template close paramattributes showclosebutton vm mount vm appendto documentbody vmshowclosebutton false assertequal vm elinnertext result", "num": "625", "d": "12/2014"}, {"title": "param number vmodel working", "body": "param number vmodel working", "num": "624", "d": "12/2014"}, {"title": "value defined using vcomponent vrepeat since", "body": "title somewhere adding directive like situation described array primitives means value longer accessible jsfiddle used work vue jsfiddle works vue notice buttons top text later version value undefined also note click top buttons event handler works old version new", "num": "623", "d": "12/2014"}, {"title": "circular dependency observed properties", "body": "two properties model depend run loop want update one avoid seen property twoway binding directives case tried set property observer effect", "num": "622", "d": "12/2014"}, {"title": "unexpectedmissing directive values", "body": "trying pass strings arguments directives without values defined cases nt expecting examples could misunderstanding part rather bug documentation issue confirm", "num": "621", "d": "12/2014"}, {"title": "js transition enter function needs extra initialization", "body": "example clicking container content box expected shown slidedown shown immediately default show operation think due function executed line file know works expected uncomment line jsfiddle intended behavior", "num": "620", "d": "12/2014"}, {"title": "dynamic select options default options", "body": "", "num": "619", "d": "12/2014"}, {"title": "weird html escaping triplebraces", "body": "one actually loading html", "num": "618", "d": "12/2014"}, {"title": "event listener defined nested vue ignored", "body": "code show confusion expected click element method defined vue called actually one seems methods defined inner vue ignored matter outer vue defined method name intentional behavior read model inheritence document found nothing concerning methods", "num": "617", "d": "12/2014"}, {"title": "paramattributes handle attribute change", "body": "result", "num": "616", "d": "12/2014"}, {"title": "passing array objects child component via attribute fails", "body": "hello upgrading ca nt pass correctly array objects parent child component working example working working sure seems value passed string", "num": "615", "d": "12/2014"}, {"title": "caching arrays using trackby vrepeat", "body": "arrays cached using trackby put component cache repeatjs bunch nested view models contain arrays change position parents tracked property arrays lost see storing data property", "num": "614", "d": "12/2014"}, {"title": "vrepeat loop across object", "body": "finding ca nt use object vrepeat vm reference flavour manages iterate right number times access properties keys first time nest another vrepeat use object presumably gets new vm contrast arrays seem work every time fiddle", "num": "613", "d": "12/2014"}, {"title": "html directive working starts", "body": "snippet html starts bound using html directive template parser interprets id template", "num": "612", "d": "12/2014"}, {"title": "vclass vcomponent replaces component class", "body": "instead appending fiddle expecting got", "num": "611", "d": "12/2014"}, {"title": "destroy throws error", "body": "components use subcomponents partials throw error destroy result", "num": "610", "d": "12/2014"}, {"title": "view listening components transitions destroy", "body": "hi looking convenient clean way solve problem main view implementing components want view wait components finishes transition main view destroyed way defer destroy process main view triggered instance route change thanks", "num": "609", "d": "12/2014"}, {"body": "html key value value", "d": "12/2014"}, {"body": "tried appears worked able use jquery without well sure bug might help someone", "d": "12/2014"}, {"body": "answer question maybe interested discussion gist basic defintion file far complete", "d": "12/2014"}, {"body": "scoped available children", "d": "12/2014"}, {"body": "aha make sense love", "d": "12/2014"}, {"body": "thanks", "d": "12/2014"}, {"body": "known issue ie browsers recommended use instead", "d": "12/2014"}, {"body": "mean want virtual dom vue looking standalone virtual dom implementation", "d": "12/2014"}, {"body": "virtual dom vue", "d": "12/2014"}, {"body": "virtual dom vue interesting concept quite different vue current templating strategy realdombased thinking nt see practical implementation without completely overhauling api would feel like different project wo nt happen near future", "d": "12/2014"}, {"body": "thanks man looking forward", "d": "12/2014"}, {"body": "need wrap quotes vue nt treat colon argument separator", "d": "12/2014"}, {"body": "expected behavior current version oneway moment however become twoway next release code would work", "d": "12/2014"}, {"body": "awesome thanks ideas date converting ractivejs due problems templating engine trying figure make code update properties continue conversion knowing work correctly time done converting thanks much vuejs love templating speed ease use", "d": "12/2014"}, {"body": "likely christmas", "d": "12/2014"}, {"body": "related component scope change since belongs parent scope need inject explicitly using really want maybe put child component template", "d": "12/2014"}, {"body": "thank fix code please feedback understanding mistaken smile", "d": "12/2014"}, {"body": "thanks want make pr", "d": "12/2014"}, {"body": "yes ticket closed pr opened", "d": "12/2014"}, {"body": "guess simple one would good enough define function use strict need check assign guess leaves flexibility developer", "d": "12/2014"}, {"body": "thing watch filtered security", "d": "12/2014"}, {"body": "tmiguelt dealing third party js like bootstrap jquery usually find best separate logic regarding items vm events like way keep track modal state simultaneously calling appropriate bootstrap methods show modal also may want read mvvm guides also take another look vue docs way trying use computed properties little wrong generally used display purposes modifying state actions paramattributes also noted using vue want try stay away manipulating dom libraries like jquery would much better maintainability wise dom state controlled vue", "d": "12/2014"}, {"body": "still nt explain error none code actively break vue even slightly better way honestly ca nt see issue using computed properties like getterssetters trigger logic changed plus toggle function nt option need actively set visibletruefalse rather toggling opposite value", "d": "12/2014"}, {"body": "michaelliao believe select returning string value select different value see mean", "d": "12/2014"}, {"body": "yes also returns string converted number vuejs number specified", "d": "12/2014"}, {"body": "yeah currently nt support param fix", "d": "12/2014"}, {"body": "updated using vm interpolate render td compile render inner component advice thanks", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "rarely use default behaviour", "d": "12/2014"}, {"body": "nt started converting rather large app yet thing least looking forward", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "replacetrue makes sense always creating one extra layer breaks readability semantic structure html", "d": "12/2014"}, {"body": "cool since breaking change probably wait though", "d": "12/2014"}, {"body": "hand woult possible pass template prevent component replacing node html ie html content like thefooter use template possible", "d": "12/2014"}, {"body": "say less components use replace true go code base get accurate number wednesday december florian morel notifications githubcom wrote hand woult possible pass template prevent component replacing node html ie content like thefooter use template possible reply email directly view github", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "ayamflow reckon want pick old element lifecycle callback attach created also may able pick embedded template using hash tag starts used queryselector use selected element innerhtml template string allows use common trick include templates", "d": "12/2014"}, {"body": "normanzb use case easy seo footer stuff nt want use embedded templates javascript manipulation basically", "d": "12/2014"}, {"body": "thanks original intention allow simple paths like fail silently property present computed properties indeed seems undesired behavior", "d": "12/2014"}, {"body": "computed property", "d": "12/2014"}, {"body": "putting inside", "d": "12/2014"}, {"body": "thanks fixed", "d": "12/2014"}, {"body": "hey evan unfortunately still working tested branch property tracked set clone repo build dev webpack see happening", "d": "12/2014"}, {"body": "works expected", "d": "12/2014"}, {"body": "moved vuejsdiscussions", "d": "12/2014"}, {"body": "really sure code works binding attribute readonly according mdn fairly sure best way according html spec dyamically modify elements using vue use directive html text fiddle", "d": "12/2014"}, {"body": "tmiguelt vue feature also using attribute different property jmooresparc still put inside using dynamic options using dynamic options nt put anything inside gets rid error example", "d": "12/2014"}, {"body": "see thank situation updaing options object ajax request based different input values change one inputs performing ajax call modifying options object result", "d": "12/2014"}, {"body": "still running issues removing initial", "d": "12/2014"}, {"body": "initial issue unfortunately build good bit initial html server come client populated hybrid returning html vue take causes types problems nt think vue issue resolved end modifications generate", "d": "12/2014"}, {"body": "give example", "d": "12/2014"}, {"body": "purely internal implementation note", "d": "12/2014"}, {"body": "think left user space", "d": "12/2014"}, {"body": "okie dokie", "d": "12/2014"}, {"body": "even try example guide also errors uncaught typeerror read property set undefined", "d": "12/2014"}, {"body": "yeah bug give empty function work also fixed branch", "d": "12/2014"}, {"body": "content compiled parent scope", "d": "12/2014"}, {"body": "mean amp nt belongs parent scope following value number index", "d": "12/2014"}, {"body": "case first compiled parent scope injected child component since parent scope nt empty different use without component", "d": "12/2014"}, {"body": "got thank", "d": "12/2014"}, {"body": "issue following since everything parent template compiled parent scope well content going inserted child component", "d": "12/2014"}, {"body": "jails thanks replying quite sure understand tag inherit container component scope case since separate vue component scope ie acts separate component might missing something maybe working example fiddle provided would help understand new behavior basically want elements get inserted scope containing instance", "d": "12/2014"}, {"body": "data belongs component scope write way otherwise data belongs parent scope write way hope help", "d": "12/2014"}, {"body": "hmmm intention though want wrap dynamically inserted block markup inside template data instance ready used dynamically inserted block example template html count use way final template html count showing count count given returns data interpolated output look like html showing count works newer releases maybe shed light whether attempting done", "d": "12/2014"}, {"body": "new mechanism explained short semantics block changed uncompiled template injected parent already compiled content injected parent might need rethink expect work case showed fiddle assume trying dynamically inject uncompiled template component achieve template somewhere eg pass id paramattribute hook replace placeholder template content leverage returns cloned fragment template", "d": "12/2014"}, {"body": "hmmm kinda sucks feel great flexibility content insertion mechanism longer situation example control template replacing block plugin used others structure template working components latter child first surely get work using suggestion think usefulness reduced quite bit personally would much rather work way new scope inheritance mechanism ca nt really think use case would need inject content interpolated parent scope child component opinion thanks taking time explain change", "d": "12/2014"}, {"body": "simple idea parent component template coupled state child component except explicitly passed via makes easier reason scoping larger applications", "d": "12/2014"}, {"body": "bit created loading component tried use like html loading belong every view component since nt work forced repeat axloader declaration inside every component template", "d": "12/2014"}, {"body": "thelinuxlich need repeat right case make loader partial replace", "d": "12/2014"}, {"body": "need put every component okay cause logic insertion point ca nt see replace vpartial", "d": "12/2014"}, {"body": "might missing something else way compiled makes much sense useful right ca nt see good reason block components template dynamic block compiled scope parent component inserted instead scope component inserted think option choose want interpolation happen scope containing component would great sure would possible ways", "d": "12/2014"}, {"body": "nvm saw understand decision adopt approach although replacing raw uncompiled block nested useful personally suggestion emulate pre behavior able replace tag beforecompile seems like point already transcluded", "d": "12/2014"}, {"body": "closing discussion behavior still open continued", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "html", "d": "12/2014"}, {"body": "\u4e3a\u6bdb\u6ca1\u4e0b\u6587\u4e86", "d": "12/2014"}, {"body": "jsfiddle", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "html", "d": "12/2014"}, {"body": "click modify limitid \u6211\u8981\u83b7\u53d6\u5f53\u524dlimitid", "d": "12/2014"}, {"body": "\u76f4\u63a5 \u4e0d\u5c31\u884c\u4e86\u561b", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "modify limit data \u7684\u8bdd\u83b7\u53d6\u7684\u5230\u7ed3\u679c\u662f undefined", "d": "12/2014"}, {"body": "\u54e6\u662f\u6211\u5f04\u9519\u4e86 \u76f4\u63a5 \u5e94\u8be5\u5c31\u53ef\u4ee5", "d": "12/2014"}, {"body": "methods modify function consolelog dname smalltestmodal modal show \u663e\u793a\u4e00\u4e2a\u5f39\u7a97 new vue el smalltestmodal data name dname gcost dgcost", "d": "12/2014"}, {"body": "modal directive modal modify \u91cc\u9762\u7ed9\u5b83\u8bbe\u7f6e\u65b0\u7684 \u8fd9\u91cc issue \u4e3b\u8981\u662f bug \u548c feature", "d": "12/2014"}, {"body": "recommended approach share global vars pass root component root vm linked problem angular handle vue definitely", "d": "12/2014"}, {"body": "great thanks answer", "d": "12/2014"}, {"body": "interesting actually global symbol explicitly allowed expression parser expression simple keypath vue uses faster keypath parser treats path segment added check special case", "d": "12/2014"}, {"body": "html attributes differentiate upper lower case attribute actually treated get around use dash case paramattributes vue auto convert camel case setting data", "d": "12/2014"}, {"body": "thanks see api docs however intuitive maybe warning use paramattribute camel case would good idea", "d": "12/2014"}, {"body": "good idea added", "d": "12/2014"}, {"body": "perfect thanks", "d": "12/2014"}, {"body": "oh works limit inputing numbers", "d": "12/2014"}, {"body": "want limit input numbers add trigger native browser behavior", "d": "12/2014"}, {"body": "tried chrome also input words way found bug work eg work since eg work since", "d": "12/2014"}, {"body": "try jsfiddle edge version send link working either", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "oh breaking change see blog post fixed version", "d": "12/2014"}, {"body": "great thank", "d": "12/2014"}, {"body": "see first change basically using component anything parent template compiled parent scope case need put child component template", "d": "12/2014"}, {"body": "would rethink design two computed properties depending one another constraint look like", "d": "12/2014"}, {"body": "simplified looks like svg shape reacts hammerjs inputs pan rotate scale inputs trigger calculation transformation matrix render shape accordingly proplem far component also hasneeds sort public api properties like use values initialize transformation shape values properties also feed bindings eg rendering text rotation need observed two inputs entering single function finally updating two similar things hammer updating matrix updating properties api setting eg property updating matrix updating properties investigated topic bit looks like common problem common edge case knockout something called deal peek function lets access observable computed observable without creating dependency watchtowerjs observersystem upcoming angular faces similar issue", "d": "12/2014"}, {"body": "nt quite understand circular dependency use case though", "d": "12/2014"}, {"body": "two possible events function called unified parameters recalculate matrix also rotation keep sync updating rotation meens triggering watcher keep two inputs completely seperated buisnesslogic eg updating shape etc triggered", "d": "12/2014"}, {"body": "make matrix computed property depends transform properties modify transform properties finally matrix apply bind directive seems could oneway data flow", "d": "12/2014"}, {"body": "thanks suggestion patience think see direction move moment seems lead similar problems multitouch gesture updates three properties translation rotation scale trigger three watcher run matrix calculation three times different values one another maybe combine single object one deep watching observer said many thanks help", "d": "12/2014"}, {"body": "indeed new design trick small drawbacks close want nevertheless really belive situations developers face circular triangular dependencies well vuejs fantastic", "d": "12/2014"}, {"body": "glad works thing even circular dependency eventual value able stabilize additional iteration vue stop new evaluated value otherwise probably problem design actually helpful look problem functional way ie eventual needed value derived raw values oneway dataflow", "d": "12/2014"}, {"body": "function called data observed hence value right data observed function called first time value set time", "d": "12/2014"}, {"body": "makes sense seems like option nt useful getting access directive arguments inconsistent example isliteral set true nonexpression argument argument accessed via bind method isliteral set true expression argument mustaches argument available via argument bind update methods isliteral set true expression argument filter value available via bind method noncalculated state update called cases bind value undefined mentioned doc suggests value argument available designed", "d": "12/2014"}, {"body": "code behaviors intended forgot update descriptions custom directive functions upgrade updated basically called data binding finished immediately called first time initial value", "d": "12/2014"}, {"body": "probably jquery works done leaves element state element enters simply setting element css property initial value clears inline styles element imagine calling already shown element wo nt anything", "d": "12/2014"}, {"body": "thank reply really enjoy using vuejs yes know mean also noticed guide page tried express necessity kind writing point may intuitive displaying process left done function know simple make function jsjs shared", "d": "12/2014"}, {"body": "display part different different directives setting could operations part intentionally abstracted transition logic applied everywhere", "d": "12/2014"}, {"body": "understand intention thanks", "d": "12/2014"}, {"body": "\u53ea\u8981\u5728 data \u91cc\u7ed9 loves \u6240\u6307\u5411\u7684", "d": "12/2014"}, {"body": "want nested view need register component use invoke parent code created outer vm already compiled whole dom inner vm created basically nothing make sure read component section guide", "d": "12/2014"}, {"body": "fixed", "d": "12/2014"}, {"body": "reproduce", "d": "12/2014"}, {"body": "closing nt really need use option use case", "d": "12/2014"}, {"body": "refactoring fixed commit", "d": "12/2014"}, {"body": "closing discussed gitter", "d": "12/2014"}, {"body": "tried used jqueryui conjunction sortable items got deleted every time moved one sortable list another nt know yet worked poorly try make js fiddle next days showing", "d": "12/2014"}, {"body": "jsfiddle showing sortable items get deleted sorted still nt figured turns happening regardless using", "d": "12/2014"}, {"body": "honest nt clear vision best approach prefer keep separate layer possibly mixin provides easy integration via instantiation options", "d": "12/2014"}, {"body": "moving vuejsdiscussions", "d": "12/2014"}, {"body": "actually much simplier actual connection contenteditable needed connecting mutationobserver contenteditable set", "d": "12/2014"}, {"body": "mutationobserver available everywhere though nt make sense vue include mutationobserver polyfill feature", "d": "12/2014"}, {"body": "also whenever try set property starts sign get warning message properties set view model instance happens component instances children another component ex child set property grid instances column nested grid using vue", "d": "12/2014"}, {"body": "make fiddle reserved key problem", "d": "12/2014"}, {"body": "hmm difficulties reproducing problem jsfiddle release npm exact code cdnjs dist edit well replaced npm vue package cdnjs source exposing vue global instead problem gone still like know npm package latest code though cdnjs release newer", "d": "12/2014"}, {"body": "weird though maybe create cloneable repo using npm version demonstrates issue", "d": "12/2014"}, {"body": "ok repo problem clone npm install get vue webpack also uncomment script tag includes cdnjs version comment requiring vue mainjs file build see problem go away although cdnjs version issue nt merge reserved properties component nested within another component case column inside grid", "d": "12/2014"}, {"body": "hah actually using minified production version cdn suppresses warnings reserved key warning leftover old design longer needed removed", "d": "12/2014"}, {"body": "oh wow well hopefully last question issue supposed work non observed keys able retrieve using", "d": "12/2014"}, {"body": "afraid limitation work reserved keys proxied vm internal methodsproperties retrieved via called vm possible prototypal inheritance parent scope", "d": "12/2014"}, {"body": "understandable", "d": "12/2014"}, {"body": "closing inactivity", "d": "12/2014"}, {"body": "must another issue play reproduce outside code", "d": "12/2014"}, {"body": "inactivity", "d": "12/2014"}, {"body": "closing inactivity", "d": "12/2014"}, {"body": "made gist pattern use basic definition file use vueprojects works perfect even subclassing got even better ts modifier although say holy grale truth made nice comparisson two possible aproches sum perspective use straight forward almost benifits plain js misuse small hack get benifits ts like intellisense think second approach done like shown gist way superior writing definition files always weak point using ts passion write keeping uptodate constant work classapproch get definitions writing code stays sync development said ts vue make significant move towards depends paradigm hacks affort think making vue fit ts wont painless affects parts code fully oversee would maybe also worth trouble", "d": "12/2014"}, {"body": "used create custom components behaving like form inputs using vwith eg would switch component could use like concept keeping parent scopes untouched makes sense except seems way reproduce inputtype behaviours using components nt find another way would great way using vmodel custom components suggestions", "d": "12/2014"}, {"body": "inside although maybe could old", "d": "12/2014"}, {"body": "use inside component template still gon na reference child property clone right manually watching value change operating parent using quite dirty one sure understand reasoning behind change whole point vm library performs bidirectional binding maintaining accurate representation decoupled data imposing hierarchical flow architecture javascript ca nt modify original variable outside function within mutate object passed sure understand mean eg javascript root scope var rootvariable foo parent scope function var parentvariable consolelog rootvariable bar", "d": "12/2014"}, {"body": "mean js var rootvar var rootobj function child parentval parentvala parentval child rootvar consolelog rootvar child rootobj consolelog rootobja pass object indeed mutate child component ca nt change parent reference", "d": "12/2014"}, {"body": "ok example makes sense think context vm library handling bidirectional binding key allow form inputs manipulate source data components access parent scopes nt see big difference semantics form input comes preexisting component library applies custom behaviour html tag custom ui component level access right", "d": "12/2014"}, {"body": "thinking tend agree oneway restriction unnecessary likely reverted next point release", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "able reproduce working sorting library looks like sorting last item list vrepeat comment node moved end beginning vrepeatordered list exception occurs try put together reproduction case", "d": "12/2014"}, {"body": "example reproduction steps seems like sorting library responsible comment getting moved could vue protect error anyway way could define repeat depend comment retaining position within list", "d": "12/2014"}, {"body": "impractical vue add comprehensive support every input type possible extend adding custom handlers reference implementations found", "d": "12/2014"}]