[{"title": "feature default event actionhelper configurable", "body": "linkview eventname changed via reopen action handler easily changed makes difficult necessary create addon switches ember default eventing case overridden default click tap linkviews would like action helper without needing entirely overwrite helper", "num": "10090", "d": "12/2014"}, {"title": "production builds need compiler stripped", "body": "", "num": "10087", "d": "12/2014"}, {"title": "refreshing model different route based query params behavior changed", "body": "case app filters route display result filters achieve queryparams controller model refresh changes model stopped refreshing updated ember yesterday nt see anything change changelog assuming intentional please correct wrong simplified example works nt work good measure", "num": "10081", "d": "12/2014"}, {"title": "upgrade emberjs fails simple app", "body": "sample app reproduce bump version ember could related", "num": "10080", "d": "12/2014"}, {"title": "emberselect rendering correct selected option canary", "body": "seen bin selection changed updated selected option render selected screen rendered properly option selected second time works fine without optiongrouppath works fine beta", "num": "10076", "d": "12/2014"}, {"title": "mismatched check istop appears lead null outletsource", "body": "seeing error executing code written line emberjs see elsewhere someone references deprecating istop happened find change conditional follows code makes good sense error subsides thoughts", "num": "10070", "d": "12/2014"}, {"title": "cp mapped query param becomes constant", "body": "code coffeescript apppostscontroller embercontrollerextend queryparams computedproperty property false computedproperty emcomputed property gt get property jsbin problem changing nt cause change changing cause url change", "num": "10069", "d": "12/2014"}, {"title": "better deprecation within initializer", "body": "deprecation pretty cryptic dealing initializers call first argument documented api initializer receive container perhaps provide custom wrapper message specific case dgeb thoughts", "num": "10067", "d": "12/2014"}, {"title": "ca nt reload hasmany relationship", "body": "try reload update server joined record like working data ember store changes view rendering changes tried set record manually model result new record added rendered old record updated wrong", "num": "10057", "d": "12/2014"}, {"title": "serialize route params nested routes", "body": "hi using following route configuration want show slug model instead id url projectroute contains serialize method works well nested routes modify model however events nested route another model set breaks obviously events model slug property actually assumed events nested route projects would inherit model project route seems case think could go around overriding serialize hook projecteventsroute using modelfor seems like hack miss something ps wnat use resource want keep proper namespace nesting", "num": "10056", "d": "12/2014"}, {"title": "unable run tests embercli amp ember due missing embertestingjs file", "body": "appears file called missing ember release causing using embercli fail instead running tests expected uncaught syntaxerror unexpected token lt exception logged console app loads usual generated file contains html error jshint ignore start runningtests true jshint ignore end found found code nosuchkey message specified key exist key requestid hostid rest file appears ok steps reproduce using ember cli change handlebars version ember version visit browser instead seeing expected page tests default welcome emberjs page shown exception logged console", "num": "10055", "d": "12/2014"}, {"title": "factory undefined", "body": "new ember much confused debug ember debug ember data debug handlebars debug jquery trying get record via works good refreshing page getting jqueryjs \u0441\u0442\u0440\u043e\u043a\u0430 store lt modelfor store lt recordforid deserializerecordid normalizerelationships lt eachrelationship lt mapprototypeforeachcb orderedsetprototypeforeach mapprototypeforeach eachrelationship normalizerelationships store lt push find lt trycatch invokecallback publish queueprototypeinvoke queueprototypeflush deferredactionqueuesprototypeflush backburnerprototypeend backburnerprototyperun run exportsdefault lt ajax loggererror errorstack error assertion failed typeerror factory undefined var tmp errorapply arguments model route json nt know may lost something could happens", "num": "10052", "d": "12/2014"}, {"title": "configure emberrails work handlebar", "body": "trying get simple app runnning based nt even begun app done far generate using rails new rails g ember bootstrap n app javascriptengine js rails g ember install ember rails g ember install emberdata set root route home applicationjsemblem ember page getting error visiting link error rough directions update handlebars version update template precompiler version later gem file believe thats related ember ember gem emberrails gem embersource gem emblemrails believe correct embersource update handlebars version tried installing handlebarssource gem got error requested handlebarssource bundle currently handlebarssource locked try running course following tried bundle update yet got error bundler could find compatible versions gem handlebarssource gemfile embersource ruby depends handlebarssource gt ruby suspect needs happen embersource depend handlebarssource idea update handlebars emberrails app use ember", "num": "10051", "d": "12/2014"}, {"title": "sendaction problem components embedded", "body": "sendaction seems work property components embedded suppose component b embedded component component b invokes sendaction throw error action handler might problem example posted js bin code borrowed book mastering emberjs example postphotocomponent postdatecomponent work fine sendaction postratingitemcomponent throw error", "num": "10050", "d": "12/2014"}, {"title": "container regressions ember data", "body": "work fixing thought would bring looks like containernormalize may longer used since refactor tests complete ms unitstorecreaterecord store models dash creating record camelcase string finds model died test model found something unitstorecreaterecord store models camelcase creating record dasherize string finds model died test model found something unitstoremodelfor dsstore modelfor fetching factory string sets normalized key typekey died test model found blogpost unitstoremodelfor dsstore modelfor fetching factory string dashing normalizer sets normalized key typekey died test model found blogpost", "num": "10044", "d": "12/2014"}, {"title": "api docs nt mention linkto helper used inline", "body": "helper used either block helper inline helper two variants different helper arguments block variant documented figured syntax inline variant second argument defaulting current route document inline use arguments", "num": "10041", "d": "12/2014"}, {"title": "view events bubbling actions", "body": "sure go issues might nice handled event sent action along event handler otherwise opening component ideal implies setting global handler specific cases extending new component registering specific helper feels like overkill something like", "num": "10040", "d": "12/2014"}, {"title": "new error registry instance must passed option constructing container", "body": "specs passing versions ember latest canary release started failing build relevant spec lines", "num": "10039", "d": "12/2014"}, {"title": "fillin test helper focus target element", "body": "helper fills target without ever causing element focused jsbin failing test issue makes difficult test application logic depends focused state case validation logic triggers input field loses focus focus state input element never changes validation logic never triggered tests", "num": "10034", "d": "12/2014"}, {"title": "meta emberjs run ember data tests well", "body": "see build recent container refactor broke pretty much tests canary would nice know ahead time lot work happened times see mapsetorderedset changes back look cross reference time since ember ember data tight dependency think makes sense test together ember data test suite also nt take long either", "num": "10033", "d": "12/2014"}, {"title": "wrong route priority asterisk match", "body": "came across potential bug router given following definition impossible reach route entering url jsbin demonstrating happens try enter search route enter url see links correctly transition routes happy dig fix wanted get confirmation proper code misunderstanding things work asterisk match", "num": "10025", "d": "12/2014"}, {"title": "bug ember live reload", "body": "using ember get following error start page load thisreloader null object last line livereloadprototypeaddplugin tries execute fails additional message without line number livereload disabled browser seem support web sockets maybe error handled gracefully execute code web sockets detected", "num": "10024", "d": "12/2014"}, {"title": "emptyview broken", "body": "think argument broken sample jsbin working fine dandy using arguments", "num": "10019", "d": "12/2014"}, {"title": "error phantomjs rendering contains twice ember component ember", "body": "upgrade process ember integration tests fail phantomjs following message running test real browsers chromefirefoxsafari problem everything perfect realized issue appears section template contains twice component quite easy reproduce error need empty component insert tags run", "num": "10018", "d": "12/2014"}, {"title": "deprecate bind helper", "body": "see comment nt want lose track", "num": "10017", "d": "12/2014"}, {"title": "update htmlbars", "body": "changes cc mmun", "num": "10015", "d": "12/2014"}, {"title": "canary channel updated day ago", "body": "found following error message travis ci binpublishbuilds currentbranch master pullrequest false error filepath hometravisbuildemberjsemberjsdocsdatajson nt exist introduced seems canary channel updated", "num": "10010", "d": "12/2014"}, {"title": "canary builds publishing", "body": "cc fivetanley rwjblue rondalesc", "num": "10008", "d": "12/2014"}, {"title": "template custom textfield component rendering", "body": "ember noticed assigning template longer render template occuring due commit examples cookbook section docs cookbook version ember ember", "num": "9992", "d": "12/2014"}, {"title": "save serialized attr without relation", "body": "config attribute save config attribute save", "num": "9990", "d": "12/2014"}, {"title": "embera wrap dom arrays correctly docs claim", "body": "", "num": "9989", "d": "12/2014"}, {"title": "release blog post", "body": "ticket summary items discussed release post repo followers please consider guarantee even prediction behavior place notes issue locked keep us focused commit bit please edit description feature htmlbars feature block params feature embermetalinjectedproperties filesize change basically wash within talk current state boolean attrs review performance profiles changes common situations enumerate tools support htmlbars compilation today crosslink blog post write compilation tools node rwjblue discuss mental model attributes noting svg exception use attribute rules doc reference deprecations deprecated quoteless outlet names deprecate setting container childviews deprecate private bind helper always private removed beta feature inline feature emberroutingnamedsubstates feature htmlbars attr syntax still pending go decision must go indepth deprecate emberobjectcontroller remove previously deprecated private helper", "num": "9985", "d": "12/2014"}, {"title": "computedequal nt update properly", "body": "easiest way explain example shown short explainaition basically nt work", "num": "9980", "d": "12/2014"}, {"title": "index parameter computedmap callback function undefined", "body": "per document callback method computedmap following signature problem index always undefined showed problem repo commit code get logs ember version", "num": "9979", "d": "12/2014"}, {"title": "emberisnone breaks page passing undefined object", "body": "experimenting ways load script addthis found weird use vanilla js check object exists things work fine try using emberisnone breaks page nothing loads break missing something", "num": "9975", "d": "12/2014"}, {"title": "final argument api documentation", "body": "opening issue may left api docs intentionally behavior final argument mentioned guides api docs intentionally left docs happy add yuidoc blocks open pr", "num": "9973", "d": "12/2014"}, {"title": "dom nodes displayed", "body": "running situation certain dom nodes displayed sure going jsbin inspect see divs containing color names hidden reason might related", "num": "9971", "d": "12/2014"}, {"title": "svg need use setattributens setting xlink href", "body": "svg sprites utilize work properly attribute must set using instead jsbin demonstrates issue fix", "num": "9970", "d": "12/2014"}, {"title": "queryparams return updated values within", "body": "calling within return updated queryparam values bin shows returns correct values full transition route taken place allowing get complete current qp state cc machty ps use case trying reload routes model within queryparamsdidchange without setting full rerender child routes always needed", "num": "9969", "d": "12/2014"}, {"title": "ca nt", "body": "searched issues router map return router main got results confirmed canary use case error expected able return result routermap expected return router instance think would great api would assume ember supports method chaining every object grumpily curious else nt straightforward jquerylike chaining disclosure actually discovered error using documented", "num": "9966", "d": "12/2014"}, {"title": "embertestingjs included release", "body": "looking changelog believe embertestingjs file included releases ca nt seem find file bower releases ember", "num": "9963", "d": "12/2014"}, {"title": "emberbeta breaks translateattr", "body": "spec passing every version ember current beta version relevant code helper function gets called correct arguments emits correct content nt show dom aswritten relies ember removed added tried changing calls use new function html generated tests fail", "num": "9961", "d": "12/2014"}, {"title": "restoring debugger functionality htmlbars", "body": "see debugger helper htmlbars nt access template context console able get view context using seem reasonable add var described comments using happy create pr", "num": "9960", "d": "12/2014"}, {"title": "bug canary bug emberautolocation", "body": "faced problem upgrading app latest canary found minor problems important clone app run set location history hash app mostly works", "num": "9956", "d": "12/2014"}, {"title": "detect warn loudly people series npm", "body": "basically broken", "num": "9954", "d": "12/2014"}, {"title": "warning using linkto disabledwhen", "body": "set linkto helper get following warning jsbin", "num": "9953", "d": "12/2014"}, {"title": "svg component prevents triple mustache rendering text", "body": "tested ember chrome svg component exists sibling element triple mustache tag longer renders provided text see little digging looks like domhelperparsehtml function attempting parse text svg instead html", "num": "9948", "d": "12/2014"}, {"title": "duplicate definitions yuidoc output", "body": "working found functions definitions checked cursory glance different definitions cc rwjblue", "num": "9946", "d": "12/2014"}, {"title": "windows newlines cause extra whitespace safarichrome", "body": "problem app working since upgraded emberjs happens chrome issue somehow templates rendered lots additional spaces surrounding html node say instead tab hello get something like rendered maybe see example obviously breaks styling lot funny thing remove least one space strange construct magically styling given section back even though spaces still mention using embergrunttemplates compile know new versions think tried update well nt help know mention whitespace issue chrome says people get opposite effect missing spaces due bug chrome gt chrome instance consuming gathering people whitespaces update tried update ember handlebars gruntembertemplates alpha fixes occurrences whitespace issue still present ie results space front rendered text nt expressionless", "num": "9945", "d": "12/2014"}, {"title": "release channel versioned", "body": "seems updated following header comment", "num": "9944", "d": "12/2014"}, {"title": "bindattr tests", "body": "today silly error cause issues following handlebars code test expecting find least bar baz class instead found neither really wanted looking code bindattrjs wanted able write test said warning produced duplicate tag element bindattr already exists element someone point right direction test live would test valuable htmlbars support thanks awesome work", "num": "9942", "d": "12/2014"}, {"title": "expose ember streams", "body": "ember streams ie simplestream nt appear exposed anywhere use case converting rxjs observables ember streams direct output bindings feasible current tactic subscribe rxjs observable property emitted values rxember set helpers use thought cases able jump past run loop write directly bindings using ember new streams", "num": "9940", "d": "12/2014"}, {"title": "implement serverside rendering seo", "body": "currently ember apps must downloaded entirety evaluated executed end user sees ui typically ember apps serve static loading page replaced framework app boots lead degraded experiences user wait js assets load get actionable ui issue exacerbated mobile devices take longer desktop boot app often connected via highlatency mobile networks users developing world may using slow connections older browsers suffer degraded experience fetching initial data payload separate request highlatency networks imposes additional penalty seo also problem clientside rendered apps despite google recently announcing search crawler would evaluate javascript scraping sites secrecy around ranking algorithms leads many organizations distrust relying new system vs wellunderstood behavior serverrendered pages additionally crawlers tools like curl ca nt fetch content javascript apps without embedding javascript engine anyway ability remix scrape content one strengths web would like address shortcomings starting seo thanks generous sponsorship bustle wycats working booting rendering ember apps server designed ember beginning serverside rendering initial work largely infrastructural getting pieces place ember apps run statelessly server work prerequisite ambitious goal rendering apps server downloading javascript background take control loaded sometimes referred rehydrating client aka issue tracks infrastructure changes needed achieve seo server rendering mvp x abstract browser environment necessary executing ember library x abstract browser environment necessary booting ember application x incorporate tests verify node compatibility built output x support booting application node environments x split container code registry stateless session store stateful remove application lt session coupling x render component string instead dom element x render route string api asynchronously initializing application api asynchronously rendering multiple sessions using single application x audit disable assertions browser specific running serverrendering mode build demo app showing feature working compile ember directory commonjs modules turned difficult use compiled output sent browser node revisit later distribute commonjs ember build npm implement boot lifecycle hooks entered loading state application state settled application rendered useful things like analytics integration well still want get discovered critical path expect list expand time start dig", "num": "9938", "d": "12/2014"}, {"title": "htmlbars error bound attributes yet supported emberjs", "body": "decided test htmlbars jsbin upgrading embercli app keeps throwing error bound attributes supported based merged pull request ought working app allows users customise look css store database mimic added css controller property try use css property bound attribute template throws error mentioned non htmlbars style using bindattr still works jsbin link demonstrating issue template controller", "num": "9936", "d": "12/2014"}, {"title": "expose backburner emberbackburner", "body": "need private backburner instance ember data right reaching grab constructor backburner loader may always especially bundle format future know may far still account need private instance ed igort fill", "num": "9935", "d": "12/2014"}, {"title": "emberroute beforemodel description ends abruptly", "body": "description ends abruptly see propagate error handled hook would either machty wrote original text ended probably removed purpose guessing removing either end previous line fine", "num": "9932", "d": "12/2014"}, {"title": "emcontrollerdetectinstance emobjectcontrollercreate false", "body": "jsbin link demonstrating issue", "num": "9930", "d": "12/2014"}, {"title": "usersposts posts controllerbaz use controller", "body": "fixing deprecations updating found option seem work documented using syntax js bin updated js bin also seems similar", "num": "9929", "d": "12/2014"}, {"title": "uncaught typeerror line ember canary", "body": "bone headed markup like could self closing tags like ember dies line elementloc undefined uncaught typeerror read property start undefined quick example line still useful info case line could perform check case elementtag elementloc undefined thanks", "num": "9928", "d": "12/2014"}, {"title": "error assertion failed template must function", "body": "exact ember version also using embercli problem try test component default test comes ember generator javascript test renders function expect creates component instance var component thissubject equal componentstate prerender appends component page thisappend equal componentstate indom throws error", "num": "9927", "d": "12/2014"}, {"title": "sortby wo nt work record id", "body": "recordarray ids sortby id returns sorted array like would treat id attribute string number possible add extra parameter tell cast numerically sugestions thanks", "num": "9926", "d": "12/2014"}, {"title": "rawfunction emberhandlebarshelpers missing", "body": "hi updated ember ran unit tests unfortunately test use rawfunction test helpers new way", "num": "9924", "d": "12/2014"}, {"title": "port use attr nodes", "body": "slow ported use streams attr node related class name bindings weird world class name bindings code general consolidated steps repeated eachcollection helper bindattr applyclassnamebindings implementation ported already", "num": "9922", "d": "12/2014"}, {"title": "port attr nodes", "body": "slow ported use streams attr nodes", "num": "9921", "d": "12/2014"}, {"title": "deprecate", "body": "buffer methods completely legacy however still required several tests tests updated use morphs dom fragments htmlbars features marked deprecated possibly even removed", "num": "9920", "d": "12/2014"}, {"title": "classes unordered", "body": "via indream way keep order class names eg ui eight wide become eight ui wide bindattr break framework like semantic ui new based bound classes explicitly ordered rolled back ordered", "num": "9912", "d": "12/2014"}, {"title": "ember handlebars emberresolver could process handlebars template", "body": "trying upgrade ember handlebars latest ember handlebars files structure based file setup works fine old version failed new version error output browser inspector failing new version generated gt controller application object fullname controller application fullname view application fullname template application fullname template error fullname route error error processing route index unknown template object function error transition index transition aborted working old version generated gt controller application object fullname controller application fullname view application fullname template application fullname view toplevel rendering application default view object fullname view application fullname controller index fullname controller index generated gt controller index object fullname controller index fullname view index fullname template index could find index template view nothing rendered object fullname template index transitioned index transition transition complete ember inspector active almost certain related new changes handlebars know seems like handlebars rendering logic changed could run template function sorts someone help", "num": "9911", "d": "12/2014"}, {"title": "using unbound helper undefined value", "body": "getting error whenever undefined custom helper wrote using ember htmlbars", "num": "9910", "d": "12/2014"}, {"title": "rsvp onerrorhandler probably nt sync assert within run loop", "body": "jsbin highlights issue whereby uncaught promise clobber tasks within run loop due emberassert one point assert fired within settimeout escape run loop good reason stopped keeping mind meaningful stack trace already lost given assert fires within runloop queue rather anywhere related source error cc stefanpenner", "num": "9901", "d": "12/2014"}, {"title": "htmlbars addon templates compiled", "body": "app uses customnamed templates extra resolver rules find good news htmlbars picks templates without custom hooks required bad news structure working inside addons components also tree files somehow picked different addons vs main app", "num": "9900", "d": "12/2014"}, {"title": "use development build without mandatorysetters feature", "body": "cursory glance looks like feature compiled source way disable feature", "num": "9897", "d": "12/2014"}, {"title": "attributes syntax update", "body": "attributes feature must refactored pass strings properties land refs", "num": "9896", "d": "12/2014"}, {"title": "inline needs property truthyness test", "body": "feature goes live truthy check needs fixed mmun thoughts", "num": "9895", "d": "12/2014"}, {"title": "work nested inside unbound block", "body": "nested within work jsbin code sample entirely clear bug bug definitely obvious use case pretty simple list items multiple types type different rendering using determine type gives big performance boost list gets longer example javascript unbound isimage image markup unbound unbound ispdf pdf markup unbound unbound ispostitnote postit note markup unbound unbound isvideo video markup unbound unbound isunknown unknown file type markup unbound edit occurs canary likely recent regression", "num": "9894", "d": "12/2014"}, {"title": "ember bindattr render classes using ternary operator", "body": "example handlebars inspect class name div ends null rendered liked html inspect jsbin would thought someone else would reported searched around could nt find anything sorry dup", "num": "9893", "d": "12/2014"}, {"title": "code different github screencast guides nt run ember", "body": "", "num": "9892", "d": "12/2014"}, {"title": "could release embersource rubygemsorg", "body": "", "num": "9891", "d": "12/2014"}, {"title": "class name passed via bindattr sometimes simplestream instead string", "body": "created js bin demonstrating issue", "num": "9890", "d": "12/2014"}, {"title": "proxied promise fail handler promiseproxymixin nt execute exception thrown fail handler nt caught application", "body": "example proxied fail handler nt called exception rethrown promiseproxymixin nt caught application causing error handling acceptance tests fail", "num": "9888", "d": "12/2014"}, {"title": "feature recordsinqueryparams support records queryparams", "body": "often find wanting store list selected records queryparams ideally serialization records would represented ids however currently see represented complete record json serialized form records query params current desired potential api current workaround javascript appexamplecontroller embercontrollerextend", "num": "9886", "d": "12/2014"}, {"title": "feature storageparams queryparams except using localsession storage", "body": "thank query params awesome ember love using thank much everyone involved concept thinking new feature ember instead putting serialized data could persist transitionsrefreshessessions localsession storage example note might make sense key name contents would persisted scoped route serializationdeserialization params could identical since namevalue pairs also always stored strings localsession storage use cases commenting long body messages queryparams great small pieces information filters sorting parameters persist page refreshes however long messages commenting think github commenting make sense persist query parameters would great data like automatically synchronized localsession storage easytouse fashion ember queryparams always could implemented developerbydeveloper appbyapp basis however would great builtin emberjs thank", "num": "9885", "d": "12/2014"}, {"title": "ca nt stub injected properties tests", "body": "previously stubbing component dependencies tests passing hash subject new injected properties feature however get otherwise helpful error message saying set injected property service object lt subclass embercomponent think default behavior correct letting people know try override injected property however tests need way override error proceed setting stub one hypothetical api js import stub emberqunit var servicestub stub emberobjectcreate var component thissubject service servicestub stamped stub passed cp proceed setting raise exception cc slindberg", "num": "9884", "d": "12/2014"}, {"title": "ember starter kit broken", "body": "current starter kit contains announced supported anymore error assertion failed ember handlebars requires handlebars version please see details typeerror emberapplication undefined quite frustrating people trying start ember", "num": "9882", "d": "12/2014"}, {"title": "components break encapsulation access controller properties", "body": "see jsbin short syntax inside component gives access calling controller properties even correctly return", "num": "9880", "d": "12/2014"}, {"title": "amp requirejs uncaught error could find module handlebars", "body": "hello started new project today ember requirejs handlebars ca nt get ember load without handlebars error handlebars gets loaded fine requirejs nt recognized ember downgrade ember handlebars bower magically starts working fiddled shims avail requireconfig baseurl bowercomponents paths modernizr modernizrmodernizr jquery jquerydistjquerymin handlebars handlebarshandlebars ember emberember shim modernizr modernizr handlebars exports handlebars ember deps handlebars exports ember config require jquery handlebars ember function k handlebars ember use strict", "num": "9879", "d": "12/2014"}, {"title": "app broken upgrade", "body": "upgrading get following error loading application error stack contains line application code model hook route dance bower help anything using handlebars embercli emberdata ideas went wrong", "num": "9875", "d": "12/2014"}, {"title": "expose htmlbars", "body": "", "num": "9874", "d": "12/2014"}, {"title": "htmlbars backslash template generates unexpected token syntax error", "body": "backslashes handlebars literal characters html entity code generates following error compiled runtime syntaxerror unexpected token illegal embercli apps backslash simply stripped errors thrown command line app rebuilt jsbin backlash application template", "num": "9869", "d": "12/2014"}, {"title": "emberrunlater return function object", "body": "emberrunlater return function object documentation see", "num": "9866", "d": "12/2014"}, {"title": "various instrumentation hooks extremely nonperformant", "body": "serve tracking issue various pain points performance issues even leak affect app instrumented view instrumentation", "num": "9865", "d": "12/2014"}, {"title": "requiring generated controllers", "body": "documentation states ember automatically generate controllers try require one get error example approutermap gt resource room path room gt resource page path page approomcontroller emobjectcontrollerextend needs lt page gt since work default generated controller nt extend explicitly fails extend ember controller called pagecontroller nt add functionality", "num": "9863", "d": "12/2014"}, {"title": "populate store ember data", "body": "yet fully understood emberdata think populate store events work model conf javascript appeventadapter dsrestadapterextend host namespace mynamespace appeventserializer dsjsonserializerextend primarykey id keyforattribute function attr return emberstringunderscore attr appevent dsmodelextend userid dsattr string title dsattr string startatdate dsattr string startathour dsattr string json return external service", "num": "9862", "d": "12/2014"}, {"title": "htmlbars create component tagname textarea", "body": "giving component fails assertion jsbin", "num": "9861", "d": "12/2014"}, {"title": "query params broken mapping", "body": "good day using mapping shown unclear used hook example open jsbin see support names mapping contains keys controller updated extra action fired controller action always undefined doc says check like add strings array via input click would simillar click would empty array please advice thank", "num": "9860", "d": "12/2014"}, {"title": "review usage k obj", "body": "reviewing perf android noticed bunch deoptimisations due loops example deoptimises issue covered particular code switched use objectkeys saves hasownproperty call anyway android deoptimisation actually quite noticeable cc stefanpenner", "num": "9857", "d": "12/2014"}, {"title": "passing view instance view template helper fails", "body": "old regression happened fixed looks like back example code crashes regression removing line loads view instance template makes everything work line", "num": "9856", "d": "12/2014"}, {"title": "typeerror embernone function", "body": "since started working ember using check values variables since updated says function available anymore wrong use function deprecated bug", "num": "9855", "d": "12/2014"}, {"title": "inconsistent return value orderedset", "body": "see orderedset internal class thought report anyway feel free close necessary orderedset returns undefined object already exists set unexpected imho changed match interface set fwiw behaviour previously firefox chrome since fixed firefox issue exists chrome", "num": "9852", "d": "12/2014"}, {"title": "properties first capital letter produces uncaught typeerror call method unchain undefined", "body": "likely related jsbin reproduce error click link error appear console changing global avoids error global lookups deprecated ember uncapitalizing first letter avoids error much expected expected able use properties upper case first letters allowed reason throw error tells thanks", "num": "9851", "d": "12/2014"}, {"title": "create styleguide contributing", "body": "include following something close come standards ember projects follow x setup jshint run prs travis x setup jscs cover things jshint nt handle also run travis prs convert existing codeexamples follow standards set x styleguidemd basic rundown styles follow contributing linked contributingmd add styleguide website", "num": "9849", "d": "12/2014"}, {"title": "remove need loaderresolve build step", "body": "backburner rsvp router route recognizer", "num": "9844", "d": "12/2014"}, {"title": "pushobjects nt work argument arrayproxy", "body": "using ember chrome execute following command browser console since arrayproxy enumerable return value instead array containing single object arrayproxy verify running seeing result believe bug caused array proxy native method nt understand arrayproxies sees single object pushed onto array", "num": "9843", "d": "12/2014"}, {"title": "observers computed macros firing", "body": "apologies duplication nt able find anything topic come across following unexpected behavior multiple times including latest stable ember release use computed macro looks property class macro observer fire unless explicitly write example nt work import em ember export default emviewextend someproperty emcomputedalias parentviewsomeproperty nt update work import em ember export default emviewextend someproperty emcomputedalias parentviewsomeproperty update makecomputedmacrowork function thisget parentviewsomeproperty willinsertelement intended behavior correct way handle kind situations intended behavior please let know create jsbin anything else required", "num": "9842", "d": "12/2014"}, {"title": "using htmlbars optionally omitted start tags added html", "body": "earlier handlebars template like would produce dom like noticed bootstrap expects tbody element style big deal maybe implications fresh embercli app passing test failing canaryhtmlbars probably related", "num": "9839", "d": "12/2014"}, {"title": "large replace test max call stack", "body": "rwjblue test request run current beta tests cyanogenmod asop browser one test wich fails call stack overflow", "num": "9838", "d": "12/2014"}, {"title": "loop passed itemcontrollerwrapped array shifts context actions", "body": "jsbin explanation jsbin application service responsible maintaining state collection items state app state nt persisted part model using item controllers encompass extra states expose service seems using item controllers causes context actions least within loop shift away controller template buttons outside loop fire action exact actions inside loop notice also action fails silently typically uncaught actions result console error believe issue context considered service rather containing template relevant template question excerpted handlebars action works color colors action work fails silently", "num": "9836", "d": "12/2014"}, {"title": "update containerview preamble docs", "body": "changes deprecated initial definition child views upon extend make preamble incorrect blocked lack versioned api docs changing means someone using lt access accurate docs version", "num": "9833", "d": "12/2014"}, {"title": "rename build output emberjs emberdebugjs", "body": "renaming nonproduction file makes clear file intended production use need maintain buildsemberjscom files using like buildsemberjscomcanaryemberjs used many many jsbin whatnot include deprecation indicating consumers switch", "num": "9830", "d": "12/2014"}, {"title": "controller needs nt allow runtime changeslookups", "body": "nt array respond changes trying achieve something bit strange yet might beneficial routes controllers share common property would like observe value one controllers closest thing solution gotten depracted call end javascript export default emberobjectcontrollerextend needs application currentroute embercomputedalias controllersapplicationcurrentroutename currentsomevalue function deprecated call return thiscontrollerfor thisget currentroute get somevalue property currentroute way current release without deprecated calls tried route well ca nt observe property controller since routes nt", "num": "9828", "d": "12/2014"}, {"title": "htmlbars binding streams flush didinsertelement", "body": "handlebars view layer attribute bindings via synced immediately rendering process means hooks query elements inside component based things like bound class names htmlbars attribute bindings available inside caused regressions skylight reduced test case htmlbars feature flag hook work class name set via flushed yet turning htmlbars displays correct behavior", "num": "9823", "d": "12/2014"}, {"title": "confusing htmlbars error template caused error", "body": "htmlbars seems lint structure html insanely awesome btw provides error messages one got testing discourse error message useful confusing look way bottom determine template came would really nice mentioned name template first line along error message realize might tough templates compiled like perhaps template file name could passed parameter compile method development mode note using emberrails already exists actual issue might get emberrails support", "num": "9821", "d": "12/2014"}, {"title": "query params work computed property", "body": "hi case use date objects query params however want shown day format yyyymmdd url ember way miss deserialize object outputted url forced using computed property however seem work written reproducible jsbin shows problem ember", "num": "9819", "d": "12/2014"}, {"title": "infinite recursion willtransition hook queryparams", "body": "route query parameter set true route hook prompts user confirm want navigate away route user presses cancel transition aborted using combination causes router enter infinite recursion user presented confirm dialog press ok jsbin steps reproduce click one colors press cancel button confirmation dialog", "num": "9818", "d": "12/2014"}, {"title": "tries reuse destroyed view rerendering outlet", "body": "put applicationhbs put indexhbs toggle checkbox second time toggle true ember throws looks like reusing view already destroyed previous render block bug effects canary without htmlbars outlet fails rerender nt throw exception", "num": "9814", "d": "12/2014"}, {"title": "handlebars selecting wrong option", "body": "jsbin illustrate seems kind ember selecting wrong element list note without using regular view happen ember seem happen canary htmlbars turned believe regression introduced metamorphs removed", "num": "9813", "d": "12/2014"}, {"title": "difficult get dynamic linkto behavior", "body": "wanted dynamically created custom semiback button link appears changed route changes accomplished sending event parameter information pretty janky currently working nt support active states although required need nice easier plus pretty sure nt using router like seems like similar problem crept components generating example ca nt pass dynamic segments better approaches could", "num": "9812", "d": "12/2014"}, {"title": "input typesubmit default value regression", "body": "ember following code returned button default value submit value working broken", "num": "9809", "d": "12/2014"}, {"title": "binding computed properties", "body": "hey components may contain calculated properties required controllers assuming component computed property x simple enough bind controller property x currently overrides computed property logic guess comes one way binding easy handlebars thoughts", "num": "9807", "d": "12/2014"}, {"title": "checkboxes unclickable contained within element action attached", "body": "simple example input tag type checkbox contained inside checkbox clickable expected put action containing div say catch click events checkbox unclickable catch change event see attempts work expected reverted every time couple fiddles works expected nt", "num": "9806", "d": "12/2014"}, {"title": "handlebars outputting null undefined escaped", "body": "created jsbin show behaviour ember evaluating foo would output empty string nothing html template ember evaluating outputs word template want note happen escaping enabled seems related unescaped output", "num": "9805", "d": "12/2014"}, {"title": "htmlbars ember canary uncaught error unknown template object function", "body": "testing htmlbars ember canary mentioned application load opening console shows ember handlebars jquery uncaught error unknown template object function anonymous function rolling back ember handlebars everything fine using embercli happy provide details needed", "num": "9804", "d": "12/2014"}, {"title": "mixin detect work like coreobject detect", "body": "looks like provides used like javascript var vehicle emobjectextend var car vehicleextend consolelog vehicledetect car true consolelog vehicledetectinstance carcreate true hand seems provide javascript var movable emmixincreate var vehicle emobjectextend movable var car vehicleextend consolelog movabledetect carcreate true consolelog movabledetect car false consolelog movabledetect vehicle false well looking around came conclusion public api check whether class uses given mixin either directly indirectly opinion renamed work like make consistent thoughts", "num": "9799", "d": "12/2014"}, {"title": "htmlbars rendering issue component working ember", "body": "jsbin illustrates issue see background images displayed code using code htmlbars using jsbin template gives error amp images nt display happy update code better pattern thats issue thought worth raising seems like nt drop replacement case", "num": "9797", "d": "12/2014"}, {"title": "statement crashing whole page", "body": "use ember data load large amount readership stats show viewed posts website however people permissions view previously used readership worked fine issues using ember data caused whole chrome tab crash", "num": "9795", "d": "12/2014"}, {"title": "equally named controller properties nested query parameters influence", "body": "issue using controller properties different query parameters route hierarchy created jsfiddle illustrate issue shortly explain fiddle binds query parameter local property binds query parameter also local property fiddle click change outer params first changes outer sort property value case id click move inner link inner route without query parameter argument however transition property also mysteriously equals remained unchanged edit using ember", "num": "9794", "d": "12/2014"}, {"title": "loop radio button work deselection", "body": "", "num": "9793", "d": "12/2014"}, {"title": "click linkto refresh data nested cycle key value", "body": "outlet model linkto lineitem name linkto lt div class row gt lt p class lead gt name lt p gt lt form role form gt eachkeyvalue config lt div class formgroup gt lt label class radioinline gt key lt label gt eachkeyvalue value lt input type radio bindattr namecolor valuevalue amp gt value eachkeyvalue lt div gt eachkeyvalue lt button type submit class btn btnsuccess gt save lt button gt lt form gt lt div gt route need create form selected product applineitemroute emberrouteextend model function params return productsproductsfindby id paramsproductid", "num": "9792", "d": "12/2014"}, {"title": "htmlbars errors", "body": "hi upgrading working app following dockyard request update htmlbars test initially got errors looked like related liquidfire replaced instances amp amp remove equation getting bunch deprecation messages relating amp makes sense errors knowledge using bound attributes anyway nothing rendering happy help debug excited see htmlbars working", "num": "9791", "d": "12/2014"}, {"title": "exception silently ignored load initial route", "body": "using embercli modules throws exception load time exception silently swallowed initial route rendered example put try start app url fail render expected exception never logged instead try start app valid url exception properly logged", "num": "9790", "d": "12/2014"}, {"title": "embermetalinjectedproperties missing featuresmd", "body": "", "num": "9787", "d": "12/2014"}, {"title": "htmlbars plain html attributes throw without emberhtmlbarsattributesyntax enabled", "body": "following throws error html repro", "num": "9785", "d": "12/2014"}, {"title": "handlebars helper function parameter gets confused named context", "body": "parameter confused current context passing values template helper function context parameter property name works broken know workaround naming context differently ember able resolve different value using helper function jsbin example", "num": "9784", "d": "12/2014"}, {"title": "emberhtmlbarsattributesyntax fails contains inline without output value", "body": "quite easy replicate showmenu false output anything htmlbars tries append classlist illegal contains space end", "num": "9780", "d": "12/2014"}, {"title": "someundefinedvalue throws", "body": "passing undefined value unboundif helper htmlbars fails would previously evaluate falsy handlebars thus render block", "num": "9774", "d": "12/2014"}, {"title": "query params replacestate nt work refreshmodel true", "body": "jsbin sure limitation introduced design certain use cases sorting replacestate refreshmodel needed cc machty", "num": "9771", "d": "12/2014"}, {"title": "unable multiselect listbox using keyboard internet explorer", "body": "using emberselect view multiselect enabled ie view emberselect multiple true contentxyz optionlabelpath contentlabel optionvaluepath contentvalue one way select multiple options click one option keeping shift pressed press arrowdown arrowup direction many ever times want ie shift arrowdown shift arrowup works fine browsers except internet explorer use ie press shiftarrowup nothing happens however keep pressing shiftarrowdown two options keep getting selected happens emberselect happen usual used", "num": "9766", "d": "12/2014"}, {"body": "api would nt work routes like", "d": "12/2014"}, {"body": "run issue multiple times would great nice api cover api also covered cases like switching routes rather dynamic segments", "d": "12/2014"}, {"body": "igort api would nt work routes like products iditems id right nt think could expand api look like allow identical segment names think something similar could accomplish route swapping well dynamic segments", "d": "12/2014"}, {"body": "made change fix duplicate dynamic segment names javascript function transitiontodynamic name routeswithsegments var routes thisrouterroutercurrenthandlerinfos var models var lt routeslength var route routes var params routeparams var routesegments routeswithsegments routename var param params paramshasownproperty param continue var segment params param routesegments amp amp routesegments param segment routesegments param modelspush segment var args modelsslice argsunshift name thistransitiontoapply args route could call like", "d": "12/2014"}, {"body": "semiblind guess part suspect recent changes might something specifically symptoms nt seem get called anymore example given", "d": "12/2014"}, {"body": "definitely bug expected behavior docs query params declared routedriven controllers eg configure query params active within articles route must declared articlescontroller js bin example works use applicationroute rather indexroute could easily mistaken since built ember app uses query params kind makes sense reason overarching communicate specific maybe way around work specific controller able bind query params see get example test means misunderstood something let know still relatively new ember world", "d": "12/2014"}, {"body": "provide error messages description fails repro jsbin", "d": "12/2014"}, {"body": "error try create jsbin might take time thanks", "d": "12/2014"}, {"body": "mmrath might take time guaranteed take us much time repro fix issue pulling app", "d": "12/2014"}, {"body": "thanks mixonic understand trying put together jsbin sure put together app jsbin first jsbin", "d": "12/2014"}, {"body": "mmrath problem looks like needed bump emberclihtmlbars thank testing new beta really appreciate", "d": "12/2014"}, {"body": "excellent mixonic thanks awesome work guys", "d": "12/2014"}, {"body": "provide jsbin reproducing error", "d": "12/2014"}, {"body": "sorry bit pressed deadline codebase large enough would take quite lift separate whatever matter step back hit milestones timely istop simply smells brief look thought offer potential fix", "d": "12/2014"}, {"body": "istop set compile template embedded template object istop added emberhtmlbarstemplate istop generally incorrect", "d": "12/2014"}, {"body": "ends needing way cp diverge qp set outside", "d": "12/2014"}, {"body": "stefanpenner oh yeahh forgot ember distinguish co accept value works fine coffeescript apppostscontroller embercontrollerextend queryparams computedproperty property false computedproperty emcomputed property k v gt argumentslength gt set property v get property", "d": "12/2014"}, {"body": "rwjblue agree pretty cryptic alternative bit explicit container method called registry registry forwarded call first associated container behavior deprecated may one container per registry please call directly container instead glad pr even marginally clear right solution introduce asap provide documented alternative state initialization", "d": "12/2014"}, {"body": "unable reproduce canary see jsbin would able create minimal jsbin demonstrating issue reopen emberjsdata", "d": "12/2014"}, {"body": "wecc thanks looks like works canary recheck reopen emberdata able reproduce", "d": "12/2014"}, {"body": "chance could put together jsbin would help clear issue", "d": "12/2014"}, {"body": "hi gave another try yesterday appeared nt implemented model hook route rather explicitly set model setupcontroller implementing model hook everything work expected closing", "d": "12/2014"}, {"body": "sorry fixed", "d": "12/2014"}, {"body": "closed", "d": "12/2014"}, {"body": "sorry inconvenience reopen githubcomemberjsdata feels like ember data issue better tackle", "d": "12/2014"}, {"body": "sure thanks quick reply", "d": "12/2014"}, {"body": "think using instead since stable release", "d": "12/2014"}, {"body": "update barber latest use handlebarssource working properly", "d": "12/2014"}, {"body": "key code javascript apppostphotocomponent embercomponentextend click function thissendaction action xxxxx work fine consolelog img click apppostratingitemcomponent embercomponentextend click function e var content thisget content thisset parentviewselected content thisset parentviewselected content", "d": "12/2014"}, {"body": "belongs stackoverflow answer question end sending action parent context postratingcomponent either need handle action within postratingcomponent possibly retriggering wish handle controller", "d": "12/2014"}, {"body": "runspired thanks reply possibly retriggering postratingcomponent following code work javascript postrating contentpost actionselrate apppostratingcomponent embercomponentextend selected selected ratings actions selrate function r consolelog postratingcomponent selrate", "d": "12/2014"}, {"body": "nothing sendaction nt send action property specified action name case action defined", "d": "12/2014"}, {"body": "also reason answering ember moving towards component heavy strategy particular issue one found annoying sometimes nice nest components consistently belong instance messaging component contains components uploading selecting photos messaging related items nested components also get used think great easier way send actions nested components active route controller directly also suspect antipattern core team would support better ways handling issue", "d": "12/2014"}, {"body": "looks like normalize stuff removed sure course action forward add normalization stuff back ember data need", "d": "12/2014"}, {"body": "ah looks like hook ember data wants", "d": "12/2014"}, {"body": "tests actually exercising far tell longer thing think options delete tests testing behavior container ember data seems little weird bandaid tests reach reintroduce goes dgeb wycats tomdale strategy would prefer missing strategy entirely", "d": "12/2014"}, {"body": "seems reasonable", "d": "12/2014"}, {"body": "first sorry proven painful ember data team best help smooth transition using registries well containers already exposed container deprecated see unfortunately overriding going override underlying recommend creating registry alongside container override instead something like obviously would require tweaking create registry return", "d": "12/2014"}, {"body": "sounds good thanks", "d": "12/2014"}, {"body": "sounds good pr smiley", "d": "12/2014"}, {"body": "rwjblue sorry nt send pr newbie ember neither familiar inline helper behaves exactly properly structure documentation ps locks found inline feature documented guide ticket request document feature api docs", "d": "12/2014"}, {"body": "try set nt able find anything similar ember test suite", "d": "12/2014"}, {"body": "seems relevant", "d": "12/2014"}, {"body": "seems relevant", "d": "12/2014"}, {"body": "fixed", "d": "12/2014"}, {"body": "ya bad idea long pain ass maintainrun", "d": "12/2014"}, {"body": "fivetanley publish builds test suite simply run like need build first", "d": "12/2014"}, {"body": "cool get started tomorrow fixing container stuff ember data", "d": "12/2014"}, {"body": "one thing think set current breakage intentional like changes types cases private api changed purpose failing tests would quite annoying", "d": "12/2014"}, {"body": "nt mind breaking private stuff lot cognitive overhead two codebases know using probably use computers case mental bookkeeping us happy put work hear dgeb putting fix great lt", "d": "12/2014"}, {"body": "rwjblue cases unexpected issues arise think reasonably setup types cases private api changed purpose failing tests would quite annoying ya clearly deficiency breaks private api change hopefully latest work help", "d": "12/2014"}, {"body": "could make allowed failure travisyml would still get us early warning things break", "d": "12/2014"}, {"body": "machty mind chiming", "d": "12/2014"}, {"body": "seems likely could routerjs bug", "d": "12/2014"}, {"body": "seems like live reload issue ember issue suspect may using ember cli feel free open issue repo may need fork live reload code fail gracefully suspect worth", "d": "12/2014"}, {"body": "feeling moving away usage work prior versions probably fix", "d": "12/2014"}, {"body": "would preferred approach going forward monday december peter wagenet notifications githubcom wrote feeling moving away usage work prior versions probably fix reply email directly view github", "d": "12/2014"}, {"body": "jherdman oops broke big streamify pr couple months ago surprised one hit yet write failing test preferred approach going forward", "d": "12/2014"}, {"body": "mmun opened failing tests", "d": "12/2014"}, {"body": "best tell problem partly matter set overwrote", "d": "12/2014"}, {"body": "yes thats correct", "d": "12/2014"}, {"body": "kind weird override imho nt able figure provided", "d": "12/2014"}, {"body": "jherdman yeah right better feel free add fix pr", "d": "12/2014"}, {"body": "yay two failing tests", "d": "12/2014"}, {"body": "note issue nt appear anymore", "d": "12/2014"}, {"body": "awesome thanks much letting us know szines since works beta nt think may worth backporting release unless lot trouble lot people others weigh find affecting happy holidays", "d": "12/2014"}, {"body": "upgrading depends", "d": "12/2014"}, {"body": "would like go beta mmun htmlbars longer passes quoted depends", "d": "12/2014"}, {"body": "mixonic labeled nt lose track going update like get would prefer avoid major changes", "d": "12/2014"}, {"body": "mixonic yes", "d": "12/2014"}, {"body": "donezo", "d": "12/2014"}, {"body": "thanks tracking error message closing favor", "d": "12/2014"}, {"body": "stefanpenner need details seems work simple jsbin", "d": "12/2014"}, {"body": "another jsbin prod build", "d": "12/2014"}, {"body": "latest canary build days old something builddeployment process borked", "d": "12/2014"}, {"body": "gotcha get asap", "d": "12/2014"}, {"body": "look well soon get minute", "d": "12/2014"}, {"body": "tricknotes found following error message travis ci binpublishbuilds currentbranch master pullrequest false error filepath hometravisbuildemberjsemberjsdocsdatajson nt exist introduced seems canary channel updated", "d": "12/2014"}, {"body": "fixed", "d": "12/2014"}, {"body": "ok initial issue fixed hitting publishing", "d": "12/2014"}, {"body": "node work", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "photoshop tell pixels", "d": "12/2014"}, {"body": "stefanpenner actually think legit last week trollface edit jk", "d": "12/2014"}, {"body": "void element template first place ember behavior seems accurate actually rendering template since inside gt tag browser ignoring get", "d": "12/2014"}, {"body": "correction browser render content inside appears browser assumes content inside sibling node instead child actually renders looks like forcing remain child node done example using input element probably remove template cookbook example", "d": "12/2014"}, {"body": "agreed believe current behavior actually correct", "d": "12/2014"}, {"body": "made issue website repo keep track updating cookbook", "d": "12/2014"}, {"body": "nt ember related emberdata related suspect issue opened mistake", "d": "12/2014"}, {"body": "yes resolve javascript appproduct dsmodelextend families dshasmany family name dsattr string config dsattr config appconfigtransform dstransformextend deserialize function serialized return serialized serialize function deserialized return deserialized", "d": "12/2014"}, {"body": "nore need arrays watched using enumerableutils use enumerable utils directly", "d": "12/2014"}, {"body": "current behavior seems broken docs embera say returns embernativearray array like object seems like embera either error pass dom array update docs say nt really accept array like objects normalize dom array ember native array", "d": "12/2014"}, {"body": "another option update docs", "d": "12/2014"}, {"body": "feel like also error", "d": "12/2014"}, {"body": "assertion seems good", "d": "12/2014"}, {"body": "ah nt read docs correctly param nt dependendkey raw value sorry confusion", "d": "12/2014"}, {"body": "simple jsbin seems work properly provide jsbin demonstrates issue describing", "d": "12/2014"}, {"body": "browser using", "d": "12/2014"}, {"body": "using firefox de get time tonight try reproducing jsbin", "d": "12/2014"}, {"body": "able reproduce inside view didinsertelement anything emberisnone block nt run error", "d": "12/2014"}, {"body": "bug ember indeed intended behavior spec believe browsers throw error pass literal value declare variable instead relying think case works engine wart javascript little inconsistent good practice always use statements open stack notice starts place call emberisnone inside emberisnone", "d": "12/2014"}, {"body": "angus croll great writeup", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "misteroneill thanks pointing definitely intentional nt show api love could document api docs", "d": "12/2014"}, {"body": "yep update doc blocks tomorrow free time", "d": "12/2014"}, {"body": "closing favor pr fixing docs", "d": "12/2014"}, {"body": "nothing svg removing still problem think may related adding empty text node using dev tool edit html add space anywhere save see get rendered fine simply select dom node curiously simply removing nodes fix problem", "d": "12/2014"}, {"body": "maybe krisselden mixonic could weigh", "d": "12/2014"}, {"body": "think need clarify something removing svg dev tools solve problem removing template may something svg", "d": "12/2014"}, {"body": "far tell bug related inside remove either wrapping things look correct seems likely bug ember related since remove html via dev tools readd exactly render properly", "d": "12/2014"}, {"body": "think likely related htmlbars", "d": "12/2014"}, {"body": "think perhaps svg namespace properly left tag closed still needs investigation", "d": "12/2014"}, {"body": "character immediately fixes problem", "d": "12/2014"}, {"body": "removing wrapping also fixes", "d": "12/2014"}, {"body": "div svg indeed svg namespace", "d": "12/2014"}, {"body": "fixed master thanks", "d": "12/2014"}, {"body": "salzhrani right namespaced attributes still wip probably issue htmlbars well think also nt handle namespaced attributes correctly static html", "d": "12/2014"}, {"body": "really easy pr though ca nt yet guarantee merge", "d": "12/2014"}, {"body": "result map instance routerjs router ember router solution today original flexibility api design chaining routerjs vs ember router", "d": "12/2014"}, {"body": "stefanpenner reason wrap map function emberrouter return ember version", "d": "12/2014"}, {"body": "unsure suspect fine sure fine recall reason could nt around ca nt remember exactly", "d": "12/2014"}, {"body": "go small leaking inner router confusing", "d": "12/2014"}, {"body": "could put check would best place put check robust way check posted stackoverflow anyone searches find answer", "d": "12/2014"}, {"body": "could put check check think routermap return instead", "d": "12/2014"}, {"body": "agree return instance emberrouter got active work area targeting roll effort", "d": "12/2014"}, {"body": "rwjblue", "d": "12/2014"}, {"body": "fixed merged", "d": "12/2014"}, {"body": "able get embertestingjs file cloning repo building manually wording enable testing production builds publishing embertestingjs along standard builds imagined file would bower module", "d": "12/2014"}, {"body": "correct auto published bower channels contain testing file tagged releases fix retag", "d": "12/2014"}, {"body": "fixed autopublishing added embertestingjs standard release updates tags componentsember repo updated", "d": "12/2014"}, {"body": "shajith might interested", "d": "12/2014"}, {"body": "jamesarosen suspect make htmlbars compatible helpers others probably fill best way go", "d": "12/2014"}, {"body": "wagenet would like ensure compat layer works case agree htmlbars helpers much better performance jamesarosen provide jsbin could use test easily", "d": "12/2014"}, {"body": "unfortunately use emberbeta get problems version nt pushed anywhere uses available falling back", "d": "12/2014"}, {"body": "jamesarosen fixed reopen", "d": "12/2014"}, {"body": "james mentioned test still failing reopening", "d": "12/2014"}, {"body": "failing build", "d": "12/2014"}, {"body": "provided demo seems working canary beta jamesarosen confirm show done wrong jsbins", "d": "12/2014"}, {"body": "yes seems work fine must artifact test nt see passing reliably months", "d": "12/2014"}, {"body": "aha demo running current beta note attribute element sorry nt clear test original jsfiddle specifically failing beta canary", "d": "12/2014"}, {"body": "thanks clarification dig hours", "d": "12/2014"}, {"body": "wagenet rwjblue regarding htmlbars helpers want go route maintain compatibility ember either release maintain two separate versions b detect htmlbars browser register proper helper first headache nt want second ok though adds bloat shipped js file", "d": "12/2014"}, {"body": "contrary popular belief semver pretty important us going try hard make sure use htmlbars versions likely performance though", "d": "12/2014"}, {"body": "compatibility layer seems work really well regression shows perfect perfect far nt care", "d": "12/2014"}, {"body": "tracked issue submitted get ball rolling also created simpler repro", "d": "12/2014"}, {"body": "chained helpers supported ember releases could change recommended usage", "d": "12/2014"}, {"body": "believe usage would believe subexpressions supported handlebars unsure specific support required ember though", "d": "12/2014"}, {"body": "looks like nt like cf may remove since nt currently support bindings see", "d": "12/2014"}, {"body": "helper context view documentation updated correct way lookup value like would appear template", "d": "12/2014"}, {"body": "mmun something new streams work prevents us presenting novicefriendly interface inside debugger helper context creating screencast debugging ember aimed new users always thought helper nice way learn explore going templates talk streams even views case would mean ca nt reasonably cover feature", "d": "12/2014"}, {"body": "mitchlloyd expect able old debugger context misleading take keywords account want access view context take account keywords use want controller use", "d": "12/2014"}, {"body": "explicit previous context misleading consider template inside correct way access particular would return nt work expect plan simplify breaking change needs wait ember", "d": "12/2014"}, {"body": "debuggerhelper could define local function sugar value call", "d": "12/2014"}, {"body": "mmun seem pretty reasonable seeing pop debugger chrome might nice saw like whoa see situation tricky assuming something like possible", "d": "12/2014"}, {"body": "possible ember semver", "d": "12/2014"}, {"body": "seems like nice compromise pushing far", "d": "12/2014"}, {"body": "much better name p", "d": "12/2014"}, {"body": "mitchlloyd please feel free make pr associated documentation changes", "d": "12/2014"}, {"body": "believe resolved closing", "d": "12/2014"}, {"body": "seeing details error occurring", "d": "12/2014"}, {"body": "ran failing jsbin error undefined point reason getpath function var pathname thislocationpathname various versions ieopera nt always return leading slash pathnamecharat pathname pathname return pathname cibernox mentions setting location type workk fine", "d": "12/2014"}, {"body": "capturing updated messge nice photo", "d": "12/2014"}, {"body": "almost certainly caused", "d": "12/2014"}, {"body": "found problem fixing", "d": "12/2014"}, {"body": "created let see tests pass", "d": "12/2014"}, {"body": "closed via", "d": "12/2014"}, {"body": "stefanpenner mean embercli repo", "d": "12/2014"}, {"body": "haha", "d": "12/2014"}, {"body": "updated description title", "d": "12/2014"}, {"body": "fixed beta canary channels", "d": "12/2014"}, {"body": "rwjblue close", "d": "12/2014"}, {"body": "yeah thinking", "d": "12/2014"}, {"body": "looked one seems two definitions one instance method class method unfortunately indication likely need add andor bmac always seems know right yuidoc declarations use idea", "d": "12/2014"}, {"body": "looks like could using docs blocks nt think alone fix issue danmcclain mentioned methods yuidoc finding methods confirmed using standard docsite yuidoc generates listed duplicated methods twice see example suspect logic using generate extended lines api docs site could improved check method name like flag overriding method definition", "d": "12/2014"}, {"body": "literally running problem yesterday tried replicate using jsfiddle could nt made suspect something also use probably use yeoman found mainly affects elements floated right andor contain selector compare compiler output see putting everything one line creates different morphs mins yesterday experiment working going going spend time today see figure problem let know find anything", "d": "12/2014"}, {"body": "almost certainly need something reproducible able track happening jsbin simple demo project compiled output etc", "d": "12/2014"}, {"body": "nt encountered anything like yet bug space plausible repro definitely required dig", "d": "12/2014"}, {"body": "try prepare jsbin maybe manage make issue occure meantime say happen chrome ie works fine firefox", "d": "12/2014"}, {"body": "fwiw problem app spots tried minutes get reproduce jsbin could nt ended working around css changes", "d": "12/2014"}, {"body": "create bootstrap breadcrumb component like causes whitespace issues put everything one line like problem example see lines like compiled morphs full compiled templates working nonworking gist using windows workmanw michaljagielskisc guys using windows might windows thing handlebars template compiler", "d": "12/2014"}, {"body": "ok tried extract small piece code html css excerpt build process iwe use downloading extracting first type npm install grunt nodejs grunt required guys definitely know probably notice close text space left visible firefox ie checked opera exactly like chrome space visible proof chrome opera firefox ie hope helps find culprit sorry text misleading placeholder kind typed text without thinking jonnii using windows", "d": "12/2014"}, {"body": "expect another chromeblink bug insignificant whitespace cc krisselden thanks repro take look soon see seen", "d": "12/2014"}, {"body": "looks like problem related line endings crlf template saved crlf line endings see problem changing file use lf occur handlebars value value javascript define testetemplatesapplication ember exports function exports use strict var ember default exports default emberhandlebarstemplate function anonymous handlebars helpers partials data thiscompilerinfo helpers thismerge helpers emberhandlebarshelpers data data var buffer sourceurltestetemplatesapplicationjs", "d": "12/2014"}, {"body": "suspect line endings windows ca nt reproduce jsfiddle also affects browsers chrome", "d": "12/2014"}, {"body": "thank much help really quick response also thanks work ember guys much appreciated", "d": "12/2014"}, {"body": "likely clean compiler level would pretty easy probably also reported bug upstream", "d": "12/2014"}, {"body": "mixonic upstream correct", "d": "12/2014"}, {"body": "jonnii going suggest input layer handlebars htmlbars", "d": "12/2014"}, {"body": "mixonic confirmed indeed line ending issue windows save file unix line endings works", "d": "12/2014"}, {"body": "mixonic short term possible solutions convert using unix line endings causes problems team mates edit hbs templates visual studio complains write kind grunt step fix line endings get compiler thoughts", "d": "12/2014"}, {"body": "another solution seems work using grunt following need update packagesjson newer version gruntembertemplates make sure clear npm cache npm install", "d": "12/2014"}, {"body": "jonnii awesome idea step embertemplates task thank much", "d": "12/2014"}, {"body": "due failure publisher step issue missing cibernox time take look", "d": "12/2014"}, {"body": "probably caused issue found following message ember docs hometravisbuildemberjsemberjs ember yuidoc version generating documentation sh nodemodulesembercliyuidocnodemodulesyuidocjslibclijs found could someone accessible permission try clearing cache travis", "d": "12/2014"}, {"body": "deleted cache restarting job", "d": "12/2014"}, {"body": "clearing cache trick thanks tricknotes", "d": "12/2014"}, {"body": "confirmed thanks much heart", "d": "12/2014"}, {"body": "williamsbdev could assert attribute already value used applied would need assert though would performance overhead checks", "d": "12/2014"}, {"body": "test file exists hbs helper today add assert unit test", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "nice thanks quick feedback rwjblue", "d": "12/2014"}, {"body": "rwjblue thank pointer nt looking htmlbars directory still looking handlebars", "d": "12/2014"}, {"body": "think would happily accept pr making nonproduction build ergonomics better going close issue original question asking tests resolved", "d": "12/2014"}, {"body": "think rwjblue already pull request closing favor pr", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "willdoes ember metalviews support binding properties return streams", "d": "12/2014"}, {"body": "blesh sounds like good experiment setting binding simple js var somestream new whateverstream emberobjectcreate foobinding somestream subclass subscribes observerable observable callback calls stream happy bounce code back forth google chat immmun gmailcom message irc mmun", "d": "12/2014"}, {"body": "sounds good send chat", "d": "12/2014"}, {"body": "tomdale bout firstclass emberdata client nt need fetch models", "d": "12/2014"}, {"body": "want note excited please nt add posts like yay want people contribute constructive feedback want people participate without getting hundreds emails nt content thanks", "d": "12/2014"}, {"body": "jayphelps scope current phase definitely something intend incorporate solid", "d": "12/2014"}, {"body": "could recipes deployment seems like tad complicated deploy push invalidate cloudfront really awesome see btw", "d": "12/2014"}, {"body": "seems also want mechanism clearly distinguishing pre postrehydrated apps elements would otherwise tied ux instance would lot cases need start disabled occluded click capturer lot visual indications could handled via simple class added root element though", "d": "12/2014"}, {"body": "hopefully iojs real thing nt need use year old version", "d": "12/2014"}, {"body": "button elements would otherwise tied ux instance would lot cases need start disabled occluded click capturer ya important default broken ui would bad trademark apps hopefully patternconvention emerge satisfy sensible way", "d": "12/2014"}, {"body": "button elements would otherwise tied ux instance would lot cases need start disabled occluded click capturer build app certain way namely like serverapp whole thing still work early clicks even clientside app bootstraps react reactrouter instead handling actions inline controller action actually make transition new route usually query params whether opening modal submitting form use router query params nonclientsidebootstrapped app loses animations state fully renderable server client mindshift back years works beautifully", "d": "12/2014"}, {"body": "bout firstclass emberdata storepush client nt need fetch models reactrouter dump initial data script tag like clientside app initializes primes data stores stuff app asks data already got react causes html checksum created client equal prerender server dom nt get thrashed events get added big prereq folks get model hooks work isomorphically", "d": "12/2014"}, {"body": "timevans definitely still exploring exactly deployment happens probably application server deploy built versions intended serverside rendering build workflow ember cli potentially via addon", "d": "12/2014"}, {"body": "endash lot think definitely lot edge cases keeping scope constrained rendering punting rehydration better understand cases", "d": "12/2014"}, {"body": "sidenoterant fundamental issue rendering app server side usually taken consideration designing libraries framework happens essential part business many complex applications bucket infrastructure cases bucketing new features app ui elements spas transcend boundaries csshtml different code path needed eg module requires module sometimes users bucket import implements secondary code path client side easy rely build process produce different bundles different code paths need worry delivering right bundle right set modules probably custom loader knows right wiring dependencies server side things go south really fast code path ca nt decided per request forcing people fight framework try implement bucket infrastructure problem react use singletons etc ericf nt know talked wycats maybe good time make sure whatever solution gets implemented server side rendering flexible enough introduce alternative code path per request", "d": "12/2014"}, {"body": "caridy yes please ericf talk wycats would love make sure understand requirements would great yahoo ember shop", "d": "12/2014"}, {"body": "great stuff future developer working quite big emberjs based app involved issues described main problem found server side page rendering identify point time page finished rendering dom scraped solve cooperative approach renderer app described maybe also relevant prerendering outlines plans", "d": "12/2014"}, {"body": "vanthome planning api detecting application boot settled soon one first tasks working part effort something weeks", "d": "12/2014"}, {"body": "another constraint worry singleton state ember clean singleton state lot users wo nt cause major issues server since singletenant like browser one idea allow singleton state wrapping entire application function build time executing per request optimizations proabably way singleton state closed per request conventions embercli help lot since already owns build", "d": "12/2014"}, {"body": "experimentation framework bucketing strategy well foresee us going road permutation based builds completely different application instance based bucketing strategy traffic allocation", "d": "12/2014"}, {"body": "chadhietala permutation based builds works client side realistic execute code one permutations per request server side keep isolation people suggested used execute new context might scale big complex apps due perf penalty executing app code per request", "d": "12/2014"}, {"body": "work htmlbars", "d": "12/2014"}, {"body": "donaldpipowitch say absolutely", "d": "12/2014"}, {"body": "zeppelin indeed built terms htmlbars", "d": "12/2014"}, {"body": "big players making big plays keep great work guys", "d": "12/2014"}, {"body": "tomdale wycats checklist looks good one area phase work think added checklist around shortcircuiting since requests server stateless could good opportunities removing autowiring observable bindings setting expensive server likely used serverside related component lifecycle making possible devs avoid costly operations wo nt needed serverside like react sure ember components already something like similar work avoiding dom operations general shortcircuiting might allow server avoid executing entire code paths nt required handling current request plan rendering elements assuming ember app deal everything inside container within scope would dev provide wrapping html around app visible content bout firstclass emberdata storepush client nt need fetch models reactrouter dump initial data script tag like windowprerenderdata clientside app initializes primes data stores stuff jayphelps rpflorence using expressstate built serializejavascript team yahoo wrappedup idea tidy way flux implementation enabling stores dehydraterehydrate", "d": "12/2014"}, {"body": "since requests server stateless could good opportunities removing autowiring observable bindings setting expensive server likely used serverside potentially although users unfortunately rely even basic rendering maybe good patterns exist help users prevent", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "super awesome say makes logical coupling lazyloading ember apps well wishful thinking", "d": "12/2014"}, {"body": "already mentioned zipfworksemberprerender something works well backends ruby python php would awesome thought something like inverted rest api backend post json route service running node receives complete html back probably focus issue would awesome next step imo", "d": "12/2014"}, {"body": "probably obvious anyway seo might neat solution served html page contain content inside body ember boots replaced dynamic app", "d": "12/2014"}, {"body": "feature flags enableddisabled runtime noncanary builds warnings printed console intended explain jsbin console output working jsbin canary builds", "d": "12/2014"}, {"body": "thanks quick response work emberjs", "d": "12/2014"}, {"body": "sgtm", "d": "12/2014"}, {"body": "please mark via yuidoc", "d": "12/2014"}, {"body": "naming confusing nt think implementation bug see objectcontroller actually objectproxy thing", "d": "12/2014"}, {"body": "actually seems working perfectly example using cases however get wrapped version case need access controller wrapped property base scope example handlebars foo bar controller something context outside block barsomeproperty lt wrapping controller someproperty lt surrounding context", "d": "12/2014"}, {"body": "rwjblue sorry fault contriving example much original problem actions updated jsbin", "d": "12/2014"}, {"body": "context changed using keyword preserving form actions sent surrounding controller controller specified words behavior exhibited latest jsbin correct get behavior desire specifying action", "d": "12/2014"}, {"body": "rwjblue thank posted stackoverflow", "d": "12/2014"}, {"body": "ran markup like got error would great get better error", "d": "12/2014"}, {"body": "provided jsbin cause exception either fixed issue many updates tweaks gone htmlbars ember helpers last week jsbin tweaked working state himansudesai confirm issue fixed", "d": "12/2014"}, {"body": "apologize seems like jsbin saved markup instead required show error user gets hint going manually tracing source code shows issue line outlined original comment sorry confusion please see jsbin", "d": "12/2014"}, {"body": "problem htmlbars pr take care", "d": "12/2014"}, {"body": "oneeman awesome thank add specific test case input selfclosing tag htmlbars pr free time", "d": "12/2014"}, {"body": "good point updated test include case", "d": "12/2014"}, {"body": "thanks much someone htmlbars crew take look pr soon holiday nt expect move today", "d": "12/2014"}, {"body": "looks like dupe", "d": "12/2014"}, {"body": "nt even ember issue emberdata one one solution define property like models", "d": "12/2014"}, {"body": "closing reopening ember data", "d": "12/2014"}, {"body": "marcemira something like work santa", "d": "12/2014"}, {"body": "believe answer export raw function named export bound helper default export import test raw function tests see example check blueprint ember cli", "d": "12/2014"}, {"body": "tomdale advice absolutely best way forward need bring back backwards compatibility", "d": "12/2014"}, {"body": "totally makes sense thanks help", "d": "12/2014"}, {"body": "removed initial streams refactor leading landed property documented underscored considered private safe remove refactor fairly easy work around globals modules apps would prefer add back thanks report going close issue wo nt fix", "d": "12/2014"}, {"body": "give shot seen looks like one time might messier together since attribute nodes need created element generated whereas old way bindings set call correct confused", "d": "12/2014"}, {"body": "oneeman wonder might appropriate apologies working splitting attr nodes attribute morph object htmlbars attrview object managed via renderer believe required order port attribute bindings shared system htmlbarssyntax attrs", "d": "12/2014"}, {"body": "worries familiarizing view layer good", "d": "12/2014"}, {"body": "mixonic love tackle could provided little additional guidance", "d": "12/2014"}, {"body": "seanpdoyle methods harken back used string buffer would add script tag placeholder string would search convert script tags metamorph objects methods public api safe remove master unfortunately went remove ran several tests still use string buffers believe intent avoiding using template tests decoupled handlebars htmlbars template engine tests keep avoiding templates become bit painful expect utility function two could make things easy buffer pushed dom fragment instead string instead appending view via buffer child view appended via morph still unsure complexity worth vs using template", "d": "12/2014"}, {"body": "mixonic removing seems break tests dependent block fail", "d": "12/2014"}, {"body": "seanpdoyle right test probably exact kind talked", "d": "12/2014"}, {"body": "instead appending view via buffer child view appended via morph good example docs somewhere use looked otherwise undocumented", "d": "12/2014"}, {"body": "mixonic trouble figuring append child using attempt js view viewcreatewithmixins template compile awesome content render function buffer thissuper buffer thisappendchild childview fails complaining ca nt live buffer", "d": "12/2014"}, {"body": "ps sorry handson imagined still trying wrap head around get dom manipulation within", "d": "12/2014"}, {"body": "indream seen behavior recent beta master large refactor process classlist seem recreate easily", "d": "12/2014"}, {"body": "mixonic able reproduce inspect dom edit also present canary", "d": "12/2014"}, {"body": "fivetanley gracias", "d": "12/2014"}, {"body": "mixonic thought regression would appear like", "d": "12/2014"}, {"body": "verified freshly downloaded today date packed old version ember handlebars manually update version ember handlebars ember handlebars run answer questions bower command line thrown confirmed ember handlebars installed ember inspector application failed error mentioned", "d": "12/2014"}, {"body": "replace ref", "d": "12/2014"}, {"body": "mattma try enabling feature flag please", "d": "12/2014"}, {"body": "indream switch module like mentioned works fine blog post helps well post comment someone mentioned quoted update template precompiler using embercli info appreciated well second using instead emberrocks could take advantage fashion interface mixonic anyway could use dependency roll version replace rwjblue could share insights magic must implement feature support latest release info would much appreciated thanks", "d": "12/2014"}, {"body": "mattma course plan way build tools use htmlbars compilation could definitely use help getting gulp wrapper sounds neat rwjblue working emberrails build pipeline think recommended api starting come focus claims usable without broccoli commit robert days ago think remaining hurdle general usage without ast plugin system", "d": "12/2014"}, {"body": "mixonic sounds awesome ast plugin system work parallel along development htmlbars going roll soon think wait official release ember core team rwjblue", "d": "12/2014"}, {"body": "mixonic confirmed work without broccoli thanks rwjblue used version simply export compiler since project developed lighting fast speed wonder going update along new releases also export compiler well", "d": "12/2014"}, {"body": "mattma things settling beta stable yet final api compiling better see reason need keep dependency emberclihtmlbars next weeks answers question", "d": "12/2014"}, {"body": "package everything need compile templates done things", "d": "12/2014"}, {"body": "mixonic sounds great working gulphandlebars allow custom htmlbarshandlebars compiler rwjblue would awesome could drop hard dependency rely package something understand hopefully could help clear confusion difference emberhtmlbartemplate emberhandlebarstemplate two api going merge one simple api", "d": "12/2014"}, {"body": "replicate jsbin unable", "d": "12/2014"}, {"body": "fivetanley oh bad still using emberhandlebarsregisterboundhelper santa", "d": "12/2014"}, {"body": "error occurring compat helper layer either", "d": "12/2014"}, {"body": "link pinned latest commit case comes future", "d": "12/2014"}, {"body": "one point assert fired within settimeout escape run loop good reason stopped keeping mind meaningful stack trace already lost given assert fires within runloop queue rather anywhere related source error made assertions entirely unusable would result cascading failures", "d": "12/2014"}, {"body": "tasks within run loop due emberassert fine people onerror set isolate tasks emit failures channel", "d": "12/2014"}, {"body": "made assertions entirely unusable would result cascading failures sure cascading failures referring given assert question takes place run loop queue async disconnected originating failure stack trace useless came settimeout fine people onerror set isolate tasks emit failures channel well nt think fine based demonstrated jsbin still emit failures channel asynchronously effect substituting useless settimeout stack useless run loop queue stack thoughts", "d": "12/2014"}, {"body": "believe solution looking unfortunately also poses additional ergonomic issues testing originating failure easily leak subsequent tests enhancing solution require work rsvp amp backburner emit class errors existing queues flushed current runto completion async perspective within runloop sync world outside runloop makes similar chrome firefox log unhandled exceptions logged end current macro task queue micro tasks flushed", "d": "12/2014"}, {"body": "seem ember issue likely issue emberclihtmlbars embercli please open issue one projects share repo used easily reproduce issue facing", "d": "12/2014"}, {"body": "please reopen githubcomstefanpennerembercli may even end htmlbars addon sure yet thanks bringing attention take better care track", "d": "12/2014"}, {"body": "rwjblue always beating commenting issues p", "d": "12/2014"}, {"body": "thank", "d": "12/2014"}, {"body": "way disable published builds", "d": "12/2014"}, {"body": "theory custom builds could ghempton", "d": "12/2014"}, {"body": "yep definitely possible prevent embedded published builds", "d": "12/2014"}, {"body": "feature seems slightly disruptive lot past issues closed solution disable mandatory setters would accept pr reenable configurable runtime development builds", "d": "12/2014"}, {"body": "adding removing feature source build step allows much better optimizations production builds remove code completely would prefer fix whatever issues alluding add long running flags people know use aka expert mode", "d": "12/2014"}, {"body": "saying leave check production saying allow feature disabled development runtime without requiring custom build production build could still identical libraries require custom setters conjunction ember objects", "d": "12/2014"}, {"body": "somewhat unique feature removed production build required development", "d": "12/2014"}, {"body": "yes pr", "d": "12/2014"}, {"body": "opposed reviewing pr need carefully consider move forward", "d": "12/2014"}, {"body": "well since logic would relatively straightforward makes sense decide beforehand happy work since third party library developing depends would detriment require users custom build ember get around developmentonly constraint", "d": "12/2014"}, {"body": "lot past issues closed solution disable mandatory setters usecases entirely ambiguous guard meant protect users bypassing kvo suffering many worse issues cases people using bypass guarantees framework offer using framework provide api solves issue specific issue working around using getset nt solve problem", "d": "12/2014"}, {"body": "working feature flag would really useful us right go directly emberjs bowercomponents directory comment assertion use coalesce build offline tool working looking github seems even feature flag developed called mandatorysetter looks like used parts embermetal including tests guess put properties back since removed disabled", "d": "12/2014"}, {"body": "stefanpenner think general issue libs target want write adapters ember ca nt guaranteed every lookup within ember adapter uses ember", "d": "12/2014"}, {"body": "stefanpenner think general issue libs target want write adapters ember ca nt guaranteed every lookup within ember adapter uses ember get set nt seem impossible also work around provide specific example", "d": "12/2014"}, {"body": "simply put property setter emberobject production works fine development blows using property versions ember one supported behind flag hiding behind feature flag imo still keep users insulated", "d": "12/2014"}, {"body": "hiding behind feature flag imo still keep users insulated runtime flag development versions third party library bypasses mandatorysetter without consuming developer anything whole app would open issues mandatorysetter exists prevent", "d": "12/2014"}, {"body": "well would nt new flag requesting flag maintained order compatibility party libraries class issues mandatory setters aims prevent", "d": "12/2014"}, {"body": "bypassing kvo surprised come think development runtime flag appropriate users disabling feature voiding assurances bypassing known development semver guarantees risk", "d": "12/2014"}, {"body": "think development runtime flag appropriate mentioned happily review pr mostly saying need cautious weigh carefully risk really nt control third party library deciding likely without user understanding ramifications remove helpful assertions mandatorysetter provides", "d": "12/2014"}, {"body": "mentioned happily review pr mostly saying need cautious weigh carefully yes reason part compile step performance overhead even guarded really nt control third party library deciding likely without user understanding ramifications remove helpful assertions mandatorysetter provides ya maybe said risk", "d": "12/2014"}, {"body": "workmanw bindings within block work", "d": "12/2014"}, {"body": "wagenet yeap far tell types bindings work nt know much ember internals used nt know critiea would relevant testing cooked jsbin tests componentcontroller value bindings plain ole templatevalue bindings though streams think edit detail test clicking button demonstrates bug toggling value bound changing text field demonstrates inline template value change bound value checking box demonstrates outward binding change within block", "d": "12/2014"}, {"body": "also fwiw work using aware private checked jsbin helper work expected see least say behave differently regard", "d": "12/2014"}, {"body": "oneeman fixed", "d": "12/2014"}, {"body": "workmanw heads plan remove private unboundifboundif helpers", "d": "12/2014"}, {"body": "mmun referring removing replacing right", "d": "12/2014"}, {"body": "workmanw yes exactly still acting let know", "d": "12/2014"}, {"body": "mmun awesome thanks heads migrated using cheers", "d": "12/2014"}, {"body": "closing favor", "d": "12/2014"}, {"body": "believe meant favor", "d": "12/2014"}, {"body": "access", "d": "12/2014"}, {"body": "published thank reminder", "d": "12/2014"}, {"body": "simpler failing testcase bindattrtestjs javascript test able bind multiple classes passed string bindattr class function var template compile var content emberobjectcreate property firstclass secondclass view emberviewcreate template template content content runappend view ok view div hasclass firstclass ok view div hasclass secondclass", "d": "12/2014"}, {"body": "closing favor", "d": "12/2014"}, {"body": "ah promisealias shorthand maybe causing", "d": "12/2014"}, {"body": "reminder move", "d": "12/2014"}, {"body": "things like probably better addon eg embercli addon submit", "d": "12/2014"}, {"body": "believe several options drop readonly needs lazy injected properties special case construction enforce container tests nt like unit level tests add special case test helpers may favorite although like feature advocate", "d": "12/2014"}, {"body": "personally see injections declarative di seems completely broken died properties providable di system say straightup obvious bug", "d": "12/2014"}, {"body": "personally think guarding accidentally overwriting service save devs lot headaches see wycats point perhaps assert changed ensure stub isa etc would make collisions quickly apparent also allow services specified directly stubbed also really bad always wanted see emberqunit support stubbed eg javascript var thingservicestub emberobjectextend moduleforcomponent something somethingcomponent needs component otherthing service thing thingservicestub", "d": "12/2014"}, {"body": "dependency injection composition intended work hand hand even though implement lookups cps user playing role nondynamic properties imo allowing injection cps stomped cleanest least surprising solution making allow registration might nice nt think solves issue simple manner special objects simply impossible create without container feels really wrong great catch tomdale", "d": "12/2014"}, {"body": "perhaps assert changed ensure stub isa emberservice embercontroller etc interesting wonder nail", "d": "12/2014"}, {"body": "wrong say controller able override potentially injected property think many cases default injected property would generally apply across class objects also see places particular controller service may special requirement explicitly override default may thinking incorrectly treat injected properties property present base class use case case basis perhaps property could explicitly whitelist properties intentionally overridden still assertion catch unintended overrides another option add modifier property like", "d": "12/2014"}, {"body": "perhaps assert changed ensure stub isa emberservice embercontroller etc lean toward making assert tests often use informal double ducktypes actual serviceapi see trying fear leaking validation step injection domain valid enforcement type", "d": "12/2014"}, {"body": "agree mixonic always correct detect poor experience folks making simple mistakes clobbering incorrectly", "d": "12/2014"}, {"body": "sounds like consensus treat injected properties like embercomputedreads", "d": "12/2014"}, {"body": "slindberg c", "d": "12/2014"}, {"body": "yep pr merged last night get right version update tag link shortly", "d": "12/2014"}, {"body": "tag updated new version linked emberjscom correct", "d": "12/2014"}, {"body": "topic components breaking encapsulation access hence access containing controller via handy ugly kind way feel like breaking encapsulation one great benefits components aid encapsulation two ways easy break encapsulation rendering somewhat leaky abstraction core team view something fixed future version ember", "d": "12/2014"}, {"body": "nt much experience requirejs fundamentally change way use require handlebars update handlebars perhaps root issue handlebars bower compatible requirejs regardless ember", "d": "12/2014"}, {"body": "strange thing upgraded also upgraded embercli problem uncaught error could find module handlebars requiremodule anonymous function requiremodule requiremodule requiremodule anonymous function anonymous function uncaught error could find module ember", "d": "12/2014"}, {"body": "made test reverted everything though might related embercli started working project amp handlebars updated bowerjson handlebars amp ember previous errors appear", "d": "12/2014"}, {"body": "using requirejs old preember cli projects ran issue looks like handlebars nt exposing global get things working ie prevent ember complaining define pathtohandlebars function handlebars windowhandlebars handlebars require pathtoember function ember", "d": "12/2014"}, {"body": "issue another way remove amd check top handlebars lib expose global variable requirejs conf make sure keep handlebars shimmed", "d": "12/2014"}, {"body": "courthead put code make work", "d": "12/2014"}, {"body": "app work nt use instead create hbs template file instead know embercli included production build", "d": "12/2014"}, {"body": "yeah trying minutes app results far tried canary running different app canary yesterday problems seems like either recent bug forgetting step somewhere", "d": "12/2014"}, {"body": "looks like feature flag still necessary beta enabling solves error", "d": "12/2014"}, {"body": "must still use feature flag due issue embercli world actually know version ember using working need enable feature flag", "d": "12/2014"}, {"body": "indeed solved problem thanks lot guys", "d": "12/2014"}, {"body": "balinterdi great hear sorry troubles", "d": "12/2014"}, {"body": "rwjblue planning leave open fixed things embercli close point embercli ticket", "d": "12/2014"}, {"body": "wagenet like keep nt loose track final", "d": "12/2014"}, {"body": "fixed emberclihtmlbars", "d": "12/2014"}, {"body": "also thanks danmcclain fixing upstream", "d": "12/2014"}, {"body": "submitted add back compat layer still need decide want export", "d": "12/2014"}, {"body": "closing need add api htmlbars future simple", "d": "12/2014"}, {"body": "seems like backslash prior causes error might issue simplehtmltokenizer throw error throw error", "d": "12/2014"}, {"body": "rwjblue yeah retested issue embercli app throw error command line backslash directly precedes however note cases throwing error character still appears stripped final rendered html", "d": "12/2014"}, {"body": "one bad easy fix need escape appear string escaping double quotes newlines currently see", "d": "12/2014"}, {"body": "fixed tildeiohtmlbars", "d": "12/2014"}, {"body": "close", "d": "12/2014"}, {"body": "type marked basically back burner provide along cancel everything good", "d": "12/2014"}, {"body": "time take stab updating accordingly", "d": "12/2014"}, {"body": "stefanpenner emberruncancel later return undefined", "d": "12/2014"}, {"body": "stefanpenner", "d": "12/2014"}, {"body": "stefanpenner cancel function timer var timertype typeof timer", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "also run really pain controller needs extended purpose", "d": "12/2014"}, {"body": "ember generates route backed controllers route entered model fulfills decide correct type controller known time may need define upfront use something like going forward controllers singleton services rendered components needs goes away entirely nt believe specific problem continue exist", "d": "12/2014"}, {"body": "hello unfortunately nt appear bug rather questions suggest using better venue stackoverflow feel free cross link post", "d": "12/2014"}, {"body": "sorry", "d": "12/2014"}, {"body": "problem need keep issue tracker organized", "d": "12/2014"}, {"body": "morph tag single textnode processing element assertion happening find escaped", "d": "12/2014"}, {"body": "suppose nt try put morph first place possibility dynamic content inside", "d": "12/2014"}, {"body": "rlivsey correct believe would fixed inclusive morph changes pipeline mixonic mmun would know", "d": "12/2014"}, {"body": "rwjblue seems wrong placeholder script tag look little wacky probably better", "d": "12/2014"}, {"body": "thanks report couple issues htmlbars components generating unsafe morphs ember needs htmlbars template object ca nt believe test", "d": "12/2014"}, {"body": "seems good would love pr changing use", "d": "12/2014"}, {"body": "rwjblue dont believe solution ultimately slower assuming safely iterable would suggest first approach making safely iterable appears like flat object suspect nt needed likely causing deopt try switching also contain correctly shape node samsaffron unfortunately nt extra bandwidth week work time add benchmarks make changes gladly provide feedback", "d": "12/2014"}, {"body": "micro benchmark demonstrating object enumeration assuming object fast enumerable numbers chrome latest best solution attempt get fast use nt possible best option", "d": "12/2014"}, {"body": "stefanpenner safely iterable mean eg objects without custom prototypes", "d": "12/2014"}, {"body": "petka enumerates cases really well", "d": "12/2014"}, {"body": "fixed", "d": "12/2014"}, {"body": "possibly deprecated nt use internal methods use", "d": "12/2014"}, {"body": "deprecated since prior removed time removed every time used deprecation warning printed console", "d": "12/2014"}, {"body": "rwjblue well using app worked pretty well nt cause deprecation warning suddenly nt work anymore also anyway exactly looking thanks pointing btecu internal methods mean ones described documentation", "d": "12/2014"}, {"body": "think may getting deprecation warnings use development ember production build minified", "d": "12/2014"}, {"body": "ember used ember cli uses development ember gotten every deprecation warning worked beginning far important useful embernone never saying", "d": "12/2014"}, {"body": "awesome easy patch got time try pr", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "thanks", "d": "12/2014"}, {"body": "whoops wrong linking last one sorry", "d": "12/2014"}, {"body": "shama believe interpret capital part global moving away globals may want change behavior", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "code codebase look like single person typed matter many people contributed quote favorite style guide clean without unnecessary spaces easy read pretty standard almost need consistent across project", "d": "12/2014"}, {"body": "rwjblue happened jscs setup going", "d": "12/2014"}, {"body": "like airbnb style guide well ca nt project simply adopt airbnb style guide usemodify licensed mit license long original source referenced appropriately serve huge jump start particular issue new sure genesis request know say greatest form flattery imitation airbnb certainly worthy imitation comes style document", "d": "12/2014"}, {"body": "landed jscs integration working rules", "d": "12/2014"}, {"body": "related pr", "d": "12/2014"}, {"body": "nt optimal nt believe bug either", "d": "12/2014"}, {"body": "one solution call eg sure internally expect developer stefanpenner pretty sure bug close", "d": "12/2014"}, {"body": "sure internally expect developer ya suspect nt bug nt believe developers without monkey patching native array methods ca nt hope safe guard reasonable scenarios also hope continue minimize usage proxies going forward", "d": "12/2014"}, {"body": "going go ahead close bendemboski hope makes sense", "d": "12/2014"}, {"body": "well see two issues either bug documentation bug documentation says pushobjects adds objects passed enumerable end array implementation correct say accepts native array enumerable also reason ran addobjects works fine passed arrayproxy converted addobjects pushobjects stopped functioning correctly quick survey similar methods reveals addobjects actually outlier pushobjects unshiftobjects removeobjects setobjects work passed native array whereas addobjects works fine arrayproxy would think would want methods consistent especially addobjects pushobjects want support native arrays passed methods rather enumerables documentation updated sure leaves us far bug think issues definitely addressed", "d": "12/2014"}, {"body": "agreed unless compelling reason accept arguments", "d": "12/2014"}, {"body": "compelling reason maybe compelling reasons slightly unmotivated consider issue worth fixing atm obviously someone energy time provide quality tested pr nt demonstrate issues sure happy accept potential performance overhead intercepting method calls extra internal complexity plans move away proxies plans move enumerable something iterable compatible", "d": "12/2014"}, {"body": "totally fine requiring native arrays saying consistent either way due semver compat would need deprecate passing arrayproxy instead removing support completely", "d": "12/2014"}, {"body": "due semver compat would need deprecate passing arrayproxy instead removing support completely ya need find way mess preference entirely rather scenario solving somewhat loosely held opinion", "d": "12/2014"}, {"body": "stefanpenner totally agreed bendemboski would able take look submitting pr deprecate using", "d": "12/2014"}, {"body": "sure", "d": "12/2014"}, {"body": "pr created", "d": "12/2014"}, {"body": "intended behaviour computed properties lazy nt really exist data fetched typically template layer pulls data activates listen cp via observer cp nt get consumed naturally add observer assuming observer also consumes cp everything works expected", "d": "12/2014"}, {"body": "htmlbars nt support feature yet template look like table static dynamic parts", "d": "12/2014"}, {"body": "mmun handlebars welcome emberjs outlet", "d": "12/2014"}, {"body": "yeah static fix easily dynamic stuff curious actually using vs hbs items item itemname bit trickier", "d": "12/2014"}, {"body": "mmun makes sense easy enough add tags figured going figured making issue might save others time upgrading static version hard might good idea add something changelog people least aware upgrading going forward sure best way handle pretty confusing tags normally added dom automatically missing ember apps", "d": "12/2014"}, {"body": "know mixonic quite bit work ensuring exact scenario worked properly metalviews see", "d": "12/2014"}, {"body": "pretty confusing tags normally added dom automatically missing ember apps totally confusing maybe added html spec grrr concerned catching possible edge cases implement optionally omitted start tags tbody think position shifted opinion problem worth solving since solution might confusing bug cooler heads may yet prevail", "d": "12/2014"}, {"body": "mixonic generally cool lets discuss today next htmlbars meeting todayish", "d": "12/2014"}, {"body": "mixonic agreed edge cases trying catch could become huge source issues especially trying mimic behavior browser maybe good solution leave behavior core htmlbars add hooks could done addon", "d": "12/2014"}, {"body": "mikegrassotti possible addons update ast template compile time possible hook today even easier", "d": "12/2014"}, {"body": "built htmlbars", "d": "12/2014"}, {"body": "code paths likely hitting", "d": "12/2014"}, {"body": "seems bad confirm state master betas", "d": "12/2014"}, {"body": "ember latest ember seem fail way", "d": "12/2014"}, {"body": "saladfork thank kindly", "d": "12/2014"}, {"body": "think currently emergent behavior anything else controllersitemcontrollers deprecated suspect may get fixed suspect good tested pr get accepted suspect core may opt fix", "d": "12/2014"}, {"body": "agree seems counterintuitive behavior working example hack properly set colorservice arraycontroller indexcontroller enables proper bubbling behavior", "d": "12/2014"}, {"body": "thanks responses ember seems suggest desire move towards explicit datacontext templates see consistent handlebars scope deprecating contextshifting even behavior emergent template deceives reader action flow expect action fire context current template gt gt stefanpenner hmm would happy try forwardthinking solution would recommended nocontrollers approach solve issue booleans putting array service item controllers components check membership nonbools still issue though short creating hashdictionary lookup service ca nt think way maintain state item ebryn suspect solution might work case items used multiple places would clobbered", "d": "12/2014"}, {"body": "saladfork yep definitely limitation workaround", "d": "12/2014"}, {"body": "furthermore using itemcontroller directly results actions sent inside loop expected see", "d": "12/2014"}, {"body": "needs considered static modified runtime seems strange need create strange graph share route controllers routes push data controllers via controllers push actions routes likely dataflow going less ideal nt bug much better venue qa stackoverflow need keep issue tracker focused", "d": "12/2014"}, {"body": "closing favor", "d": "12/2014"}, {"body": "template name known compiler gets string following printed embercli", "d": "12/2014"}, {"body": "could pass template name think bad idea", "d": "12/2014"}, {"body": "eviltrout seems fine pass source filename htmlbars compiler option want set property location info ast nodes eventually anyways support source maps", "d": "12/2014"}, {"body": "able hack asset pipeline wrap htmlbars compilation rethrow error proper document think might good idea pass option want close issue clean things cool", "d": "12/2014"}, {"body": "agree eviltrout would definitely nice context debugging", "d": "12/2014"}, {"body": "yes known issue currently cc machty", "d": "12/2014"}, {"body": "ca nt use computer properties qp default values may add something similar functionality soon meantime try overriding following methods either via within route de serializing date query param", "d": "12/2014"}, {"body": "discovered thsoe two methods posting issue works like charm", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "looking far added failing unit test getting assertion error described hope sort long submit test punt fixing someone else", "d": "12/2014"}, {"body": "reference couple old issues", "d": "12/2014"}, {"body": "looking old issues seems clear best handle certainly depths took failing test ebryn old issue changed line get work current branch wagenet putting discuss tag like old one pinging relevant folks weigh confirmed problem still present htmlbars", "d": "12/2014"}, {"body": "looks like duplicate", "d": "12/2014"}, {"body": "duplicate still fixed canary despite bug marked closed perhaps misunderstanding issue status looked little bit seems caused line code curious api seems remove inserting newly created element say option list attribute output get looks like node list self contained piece html one options looping get false element element removed nodelist first elements default true assume first option list considered selected popped actually selected node stack subsequent nodes marked selected", "d": "12/2014"}, {"body": "eviltrout grrrr seems bad look like bug related slightly different need take look closely seems like tags injected wo knowing context treated separate elements aware stored properties likely fixed upstream", "d": "12/2014"}, {"body": "eviltrout append member new parent element removed node list weird true trust length ie dos nt count blank text nodes toward length", "d": "12/2014"}, {"body": "mixonic api surprised seems support theory odd observation option removed promortes first remaining list automatically", "d": "12/2014"}, {"body": "eviltrout bet exactly correct yuck would need specialcase check track offset actually selected definitely regression sure getting patch cycle worth overheadcomplexityeffort let us brainstorm angles attack", "d": "12/2014"}, {"body": "seems like better question stackexchange rather bug", "d": "12/2014"}, {"body": "sounds good posted", "d": "12/2014"}, {"body": "cc calvinmetcalf", "d": "12/2014"}, {"body": "would love look ca nt find input setup type submit", "d": "12/2014"}, {"body": "best practice related data flows bindings controllers via actions", "d": "12/2014"}, {"body": "also nt likely better question ask stackoverflow", "d": "12/2014"}, {"body": "stefanpenner nt think data flow addressing problem far understand actions triggered user interaction calculated properties may defined component level apart characteristic component nt make sense calculated properties lost binding thanks", "d": "12/2014"}, {"body": "hilem nt actually issue event types appears specifically issue click suspect ember preventing default event behavior browser takes mean checkbox change state nt believe bug solution would apply action handler way want also handle things like checkboxes", "d": "12/2014"}, {"body": "wagenet common design pattern able click anywhere row select row row checkbox checkbox added purely reinforce selectable accessibility reasons telling way deal basically use checkbox fake checkbox images whatever way handle puts lot burden onto accessibility testing would otherwise fine btw nonissue form elements spotted behavior checkbox one thing say ember needs punt issue awhile difficult handle way code currently architected nt see argue nt bug", "d": "12/2014"}, {"body": "default action helper prevents default action case means checkboxes trigger override setting helper see", "d": "12/2014"}, {"body": "thanks wagenet", "d": "12/2014"}, {"body": "addressed issue htmlbars", "d": "12/2014"}, {"body": "speaking ben lesh might related", "d": "12/2014"}, {"body": "quick ccareynetflix probably related p", "d": "12/2014"}, {"body": "fwiw issue referenced project using ember", "d": "12/2014"}, {"body": "ccareynetflix updated version latest right restarted server", "d": "12/2014"}, {"body": "rwjblue correct missed step got go process fix number mismatched tags promising fixing mismatched tags giving error ember serve version valid watchman found version livereload server port serving throw er unhandled error event error fseventstreamstart failed null emit null emit emitreadable emitreadable readableaddchunk readablepush transformpush jsonstreamtransform going try temporarily disable watchman see helps", "d": "12/2014"}, {"body": "running ember serve watchernode worth noting watchman worked great ember embercli", "d": "12/2014"}, {"body": "yes error basically indicating system invalid state regards fsevents either reboot start polling watcher ember serve watcherpolling temporarily", "d": "12/2014"}, {"body": "reverting get fseventstreamstart failed error must unrelated watcher error think far htmlbars bug user error closing thanks look forward testing htmlbars", "d": "12/2014"}, {"body": "awesome thanks testing", "d": "12/2014"}, {"body": "warning incorrect remove harmless nt worry", "d": "12/2014"}, {"body": "thanks mmun thats good know case still sure using htmlbars broke code", "d": "12/2014"}, {"body": "chrism jsbin seems work properly confirm", "d": "12/2014"}, {"body": "rwjblue yep working", "d": "12/2014"}, {"body": "warning fixed", "d": "12/2014"}, {"body": "provide reproducible example otherwise nt actionable us also example open chrome bug nt crash", "d": "12/2014"}, {"body": "verify behavior happening described also suspect bug would like verify machty", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "ember emberradiobutton viewcomponent likely included componentaddon provide also question better suited stack overflow try keep issues repo focused bugs framework please feel free crosslink back post", "d": "12/2014"}, {"body": "rwjblue know implement function problem write nothing occurs loop radio button please reopen issue", "d": "12/2014"}, {"body": "almost certainly bug view related ember example super simple radio button component illustrate things work properly", "d": "12/2014"}, {"body": "rwjblue thank much error mine", "d": "12/2014"}, {"body": "ok seems strange code gives error html signinheader isauthenticatedsessionisauthenticated currentusersessioncontentcurrentuser signin authenticatewithservice signout invalidatesession renders html signinheader isauthenticatedsessionisauthenticated currentusersessioncontentcurrentuser signin authenticatewithservice signout invalidatesession problem using id amp class element fixed html signinheader isauthenticatedsessionisauthenticated currentusersessioncontentcurrentuser signin authenticatewithservice signout invalidatesession", "d": "12/2014"}, {"body": "another template seems break removing class svg element like works", "d": "12/2014"}, {"body": "ugh think dupe issue already raised", "d": "12/2014"}, {"body": "fixed merged", "d": "12/2014"}, {"body": "thanks follow using config seeing message thought would test latest version amp commenting feature flag back seeing message understood correctly nt commit fixed", "d": "12/2014"}, {"body": "chrism think might", "d": "12/2014"}, {"body": "rwjblue still getting error manually removing bowercomponents completely running bower install amp also clearing browser cache case nt want hold think error thought worth mentioning case still appear need include feature flag", "d": "12/2014"}, {"body": "chrism definitely important get right thanks working try update addon published", "d": "12/2014"}, {"body": "rwjblue ok bumped amp think looking good installation wise getting error one thing maybe important say still using ember cli could issue", "d": "12/2014"}, {"body": "ember version", "d": "12/2014"}, {"body": "rwjblue also still seeing thing chrism using", "d": "12/2014"}, {"body": "fixed publish emberclihtmlbars merged", "d": "12/2014"}, {"body": "chrism cdoornink please test emberclihtmlbars latest canary might need", "d": "12/2014"}, {"body": "rwjblue seems work fine amp without need feature flag", "d": "12/2014"}, {"body": "awesome thanks sticking one", "d": "12/2014"}, {"body": "pleasure", "d": "12/2014"}, {"body": "think duplicate", "d": "12/2014"}, {"body": "fixed", "d": "12/2014"}, {"body": "take look shortly get kids bed", "d": "12/2014"}, {"body": "came post", "d": "12/2014"}, {"body": "workin", "d": "12/2014"}, {"body": "jonnii meantime enabled feature work well", "d": "12/2014"}, {"body": "rwjblue yeah worked earlier big deal also going play new attribute syntax", "d": "12/2014"}, {"body": "yep played yesterday today gone", "d": "12/2014"}, {"body": "non cases fixed", "d": "12/2014"}, {"body": "definitely seems like work", "d": "12/2014"}, {"body": "cool wanting get involved looks manageable famous last words report status soon", "d": "12/2014"}, {"body": "actually js bin works master well latest release wagenet closed js bin example", "d": "12/2014"}, {"body": "awesome thanks confirming", "d": "12/2014"}, {"body": "fixed updating", "d": "12/2014"}, {"body": "hmm seeing error thrown jsbin double check", "d": "12/2014"}, {"body": "rwjblue forgot mention uncomment offending block uncommented", "d": "12/2014"}, {"body": "private please use general still errors though going update title keep open new failing jsbin", "d": "12/2014"}, {"body": "fix updated issue", "d": "12/2014"}, {"body": "krisselden wagenet bradleypriest sorry guys sure tag seen comments many issues hence", "d": "12/2014"}, {"body": "vishwaas unfortunately emberselect nt good state overall planning deprecate soon simpler version available may still accept prs unlikely work emberselect see", "d": "12/2014"}, {"body": "ah right thanks wagenet", "d": "12/2014"}, {"body": "unlikely core team fix though may accept prs definitely want go direction new select helper", "d": "12/2014"}, {"body": "wagenet point new helper may continue use ember select get working", "d": "12/2014"}, {"body": "new helper yet talk rwjblue progress work", "d": "12/2014"}, {"body": "thoughts issue", "d": "12/2014"}, {"body": "aexmachina may duprelated reducecomputed bug also meta issue pr pr whilst provides improvements address way arraycomputedreducecomputed handles corner cases think realisation different approach sort mergediff required sadly current project deliverables leaves time invest alternative solution much would like", "d": "12/2014"}, {"body": "ahacking yeah like like acrc need overhaul nt suppose got tips workaround avoid thrashing might able use cp becomes async", "d": "12/2014"}, {"body": "yes used avoid repeated updates well deferredasync update nt issue use cases soothing ailment treating core problem per issues referenced potential way forward use stable merge sort derivative diff state calling addremove functions cp appropriate nt think core actually much work compared complexity currently nt luxury time bite polishing testing full array cp replacement stage look various sorting algorithms implementations upshot tsort appears best algorithm array based cp exploit runs stable nt reorder items otherwise considered equal would close n minor changes case ui interactions may approaches array cp given complexity currently obvious many edge cases would nice elegantly bypass problem areas hope sortdiff approach could perhaps dirty list bitmap might allow efficient cp updating would certainly better understanding may able elaborate since depths array cps least sorting use case", "d": "12/2014"}, {"body": "sohumb might potential workaround us also sohumb thoughts ahacking discussion conceptually possible use arrayobservers produce set transformations fed acrc interface way behaves like computed property changes coalesced current implementation seems attempt nt really succeed agree diffing algorithm could well simpler approach", "d": "12/2014"}, {"body": "think regenerating diffing right idea ultimately like diffing happen dom level manipulate list way want including total regeneration still get minimal dom updates lot active discussion around current htmlbars work lays groundwork make possible", "d": "12/2014"}, {"body": "yeah agree diffing dom level would whole lot preferable given small arrays tend ui elements wonder far recompute everything strategy would able take us would bypass fragility incidental complexity suspect cases diffing would matter performance data coming diffs anyway least translated diffs layer semantic information changes involved also like raise incredibly weird design moment really meant incremental reducers ones update diff information provide full array even though property changes coalesced ember call handlers multiple times ca nt realistically pass inside", "d": "12/2014"}, {"body": "wonder far recompute everything strategy would able take us react demonstrated quite far", "d": "12/2014"}, {"body": "react also couples efficient dom diffing engine quite comparison new htmlbars stuff comes meant whatever dom thrashing involved", "d": "12/2014"}, {"body": "recompute everything coalescing property changes avoid dom thrashing", "d": "12/2014"}, {"body": "react also couples efficient dom diffing engine quite comparison new htmlbars stuff comes meant whatever dom thrashing involved gets us far please note ember kvo system well tuned types updates unfortunately entire array changes forces entire rerender nt change array mutate ember underlying system handles scenario optimally using diffing point provides clear wins restores minimal rerendering goal ember even naive array rebuilding point arrayreduce computed shifts problem preserving array equality large complex book keeping problem book keeping current expensive many scenarios flawed remove limitation get big win", "d": "12/2014"}, {"body": "sohumb agree reducecomputed interface mighty strange difficult work thing change event addremove think probably easier cleaner observe array use emberrunonce recompute derived value currently reducecomputed broken excessive recomputation entire array change anyway", "d": "12/2014"}, {"body": "got ta say imho current implementation moved plugin eventually replaced something kinda broken", "d": "12/2014"}, {"body": "ripping implementation would breaking change would something rush people want new implementation right away could definitely plugin would fantastic tue dec pm simon wade notifications githubcom wrote got ta say imho current implementation moved plugin eventually replaced something kinda broken wed dec ahacking notifications githubcom wrote sohumb agree reducecomputed interface mighty strange difficult work thing change event addremove think probably easier cleaner observe array use emberrunonce recompute derived value currently reducecomputed broken excessive recomputation entire array change anyway reply email directly view github reply email directly view github", "d": "12/2014"}, {"body": "aexmachina agree along others doubt wasted significant amount time persuing approach based array cp working looks like first class feature framework find really practice fine unstable features marked array cp stuff state really feature flagged experimental since level critical unappreciative hard work people put feature curation process features like array cp get promoted stable ember release given problems", "d": "12/2014"}, {"body": "curation process features like array cp get promoted stable ember release given problems unfortunately inherited time strict release gonogo policy", "d": "12/2014"}, {"body": "critical unappreciative hard work people put feature curation process features like array cp get promoted stable ember release given problems landed therefore instituted feature flagging general feature review processes", "d": "12/2014"}, {"body": "stefanpenner thanks intimately familiar ember change history surprised given good work observed recently glad current strict policy", "d": "12/2014"}, {"body": "rwjblue thanks might pr ember documentation change give people heads", "d": "12/2014"}, {"body": "add issue sohum spent several hours chasing bug coming eventually tracked another ac issue fix imagine pretty unimpressed think really goes show really nt included ember reliable two experienced ember developers able chase anyone less experience would completely flummoxed another exciting thing came across travels following code reducecomputedjs dependentarraysobserver flushchanges call removeditem addeditem exact arguments reasons debugging noticed view destroyed corresponding removal underlying array turns code normal behaviour sometimes views destroyed recreated apparent reason perhaps example broken acrc leaking another layer system ideally able remove obviously suboptimal performance pov also quite confusing debugging point view create issue", "d": "12/2014"}, {"body": "anyone interested simple implementations use get around problems arraycomputed reducecomputed use naive approach traversing whole array every time changes work fine performance nt seem much worse small arrays lt ember na\u00efve replacements", "d": "12/2014"}, {"body": "javascript diff git amodulesatticaddonutilsunborkarraycomputedreducecomputedjs bmodulesatticaddonutilsunborkarraycomputedreducecomputedjs index amodulesatticaddonutilsunborkarraycomputedreducecomputedjs bmodulesatticaddonutilsunborkarraycomputedreducecomputedjs emcomputedfilterby function key property value emcomputedsort function key sortdefinition yes rolls sort sortby emberassert embercomputedsort requires two arguments array key sort either sort properties key sort function argumentslength var sortproperty typeof sortdefinition string var dep sortproperty key sortdefinition key return emcomputed dep function sortproperty return emget key sortby sortdefinition else return emget key sort sortdefinition yeah absolutely utterly think need removed", "d": "12/2014"}, {"body": "igort another one", "d": "12/2014"}, {"body": "record complexity inherent cps array cps dealing plethora feedback related issues come observers made realise ember approach needs questioned added fact ties views rendered dom updated also constant frictionnocando view contextscope handlebarshtmlbars expressivity handlebarshtmlbars requires lot cps since templates provide limited language express basic js constructs whats scope real problem ability reference components propertiescps yield wire components properties handlebars eg video player controls new block params work bikeshedding syntax passed block params context default led question entire ember paradigm look elsewhere come conclusion reactflux style approach offers much cleaner way forward client server seorendering need complexity cps use fast immutable datastructures get strong guarantees applications behavior use immutable data get undoredo changesets free get damn fast rendering low overhead processing nt need express state terms cps overhead entails use real js etc limited constructs handlebars provides know exactly scope templates limited expressivity case handlebars easily mapreduce data need components use real js using jsx entire view composed components stuff uses js scope rules react damn fine router modelled embers thanks emberists also looked outside box far less surprises gotchas never thought saying much ember looked good going getting polished app across line ember taken toll", "d": "12/2014"}, {"body": "ahacking believe identified things agree working towards hopefully soon see continued evolution satisfy concerns unfortunate nt satisfy points today one thing take offense open minded statement ember evolved desktop like experience web sproutcore solution tries embrace web almost annually ember reinvented refined self improve status quo remove entire categories problems afraid change rather attempt embrace allow system evolve web ecosystem learns unfortunate acceleration evolution ca nt instantaneous personally wish ultimately everything requires elbow grease time reinvestment perseverance enjoyed point often brutally honest comments mostly hold thoughts high regard sad see opinion open mindedness negative", "d": "12/2014"}, {"body": "stefanpenner sorry offended nt believe made statement open mindedness certainly aware embers roots constant evolution undergone tireless efforts core team including immense respect ember core done regard leaders contemporary web development previous statement intended criticize ember developers community even suggest ember ca nt reinvent statement record candid list encountered critical aspects cause pause drivers considering alternatives could silently walk away felt important state ember still complete oss web framework holistic view found anywhere else still ember projects maintain far done ember however believe reactflux offers better proposition architecturally technically well developer productivitymaintenancerobustnessfragility point view things hard discern really understand value merit approaches used anger previously used frameworks drove ember driven something else even though said much looks good ember initially excited prospect htmlbars great stuff still entrenched logicless template model requires helpers lots cps well constrained expressibility composing ui embers way trying tame unnecessary computation minimal dom updates approach starts get strained dealing scopes templates property observer feedback cp observers number inputs mutually dependant fire multiple times problems react jsx templates nt want reduce set numbers divide another present percentage cpobserver shenanigans dealing deferred calculations run loop better yet use immutable datatypes avoid unnecessary recomputation get undoredo free way incredibly empowering compared ember requires react approach nt require declarative templates order minimize dom updates nt need defer cp helpers components render data virtual dom diff approach feel critical factor developer productivity deterministic outcomes cleanrobust implementations maintainable long haul react nt coverage ember allows superior architecture works well client server encompassing like ember ember cli pull router immutable datatypes flux implementation data layer cobble build system together ember offers lot turnkey value react nt yet closing feel ember local maximum requires leap another curve break free legacy see cps handlebars templates see ember reinventing htmlbars push components deprecating controllers server side rendering services like pink unicorns sit seeing kind moves change game like fluxreact ember core team embrace flux unidirectional architecture approach action dispatch stores view controller dom update paradigm built around immutable datatypes dom diff rallying behind", "d": "12/2014"}, {"body": "ahacking totally respect decision part ember still providing exactly looking think plans brings benefit lessons learnt react ultimately ember still delivers coverage workflow conventions need team bit horrified dirty little corner ember codebase made clear think removed time implementing simple replacements go hoping release soon think react got lot offer nt believe second panacea may ultimate nt mean going everyone else team react awesome got long way go get anywhere near ember sure people looking jump ship next shiny new thing limitations approach become well understood ahacking end submitting pr add warning docs stefanpenner would open pr says arraycomputed reducecomputed exhibit unexpected behaviour circumstances people ember community recommend use alternative implementations would good official replacements maintained community stefanpenner plans resolving ember people keep getting mauled even igort certified ember ninja", "d": "12/2014"}, {"body": "aexmachina nt submit pr put forth proposal nt get positive indication would accepted mostly agree everything say also please nt get wrong also recognise react small part overall solution nowhere near coverage ember case shiny new things quite contrary interested flux architecture pattern immutable data dom diff way foward independent particular framework react managed capture ecosystem approaches seem diametrically opposed rendering handlebars cps observers much like ember core team holistically framework including react recognise probably aligned approach react allows currently would great clearer idea future direction ember nt like assume means stefanpenner indicated big changes ahead clear overall vision even though know ember core pretty big thinkers space know services coming controllers dead long live components nt convey enough intent overall architecture vision kindly asking detail please nothing public please publish something clearly articulates defines architecture data events flow architecture", "d": "12/2014"}, {"body": "road rfc pretty explicit highlevel goal explicitly calls reactlike data flow dec pm stefan penner notifications githubcom wrote kindly asking detail please nothing public please publish something clearly articulates defines architecture data events flow architecture tomdale wycats reply email directly view github", "d": "12/2014"}, {"body": "agree ahacking read rfc", "d": "12/2014"}, {"body": "aexmachina wasnt aware rfc since read thanks whilst rfc points important changes still nt get sense big picture changes together transform ember architecture nt see despite fact every change seems like reasonable one see words reactlike nt mean lot really want see holistic picture data event flows within architecture exactly compose everything together clear actually compose components effectively proposed rfc nt see block params sufficient accordion want separate blockscomponents header bodypane basic use cases ca nt see working raised block params rfc think diagram showing event data flows view would really help focus align proposed changes validate fact support goal also nt see reactflux like single directional flow architecture rfc despite changing component actions work nt see clear possibility immutable data supported rfc may well possible may goal purpose clear without high level architecture overview heard services talked mention rfc intended replace models data sourcepersistence layer anyway questionsobservations raise rfc", "d": "12/2014"}, {"body": "nt see block params sufficient accordion want separate blockscomponents header bodypane basic use cases ca nt see working raised block params rfc ahacking helper would handle pretty elegantly", "d": "12/2014"}, {"body": "machty thanks sounds like could work keen see things make composition workable kind overview given htmlbars limited vocabulary compared say dom builder api jsx scope preserving embedded js sounds like core feature support composition nt see rfc admit love ability filtermap real js per react composing components either js jsx seeing handlebars helper escape hatches bit legacyroundabout way get things done see value ember clean dom builder api choice using htmlbars style templates pure js something like jsx nt see something like within rfc", "d": "12/2014"}, {"body": "ahacking love jsx well tradeoffs start using maps filters sort iteration react got pull mapping fn main jsx return value inline return wind something like experimented react section app immutable structures desirable though already working fidgeting ember immediately became part app htmlcss designerdev could longer touch know nt everyone story real tradeoffs react ember fans still feeling certain aspects htmlbars could better elegantly expressed jsx could said way around example handlebarshtmlbars attempting best possible presentation language block still faithful html relieving designers need understand closure jsx attempting minimize number technologies unnecessary coupling build web app view layers still kinda resembling html assumes definitely must know javascript anything meaningful", "d": "12/2014"}, {"body": "machty think excellent description tradeoffs personally like code show looks even nicer fat arrows jsx thispropspeoplemap p gt hello pname using component jsx thispropspeoplemap p gt accept different shops different responsibilities work flows lean towards developer happiness change request markup nt work styles designer wants apply end structural changes anyway new templates partials etc may introduced nt expect designers understand anything within moustaches bindattrs put outlets ember template naming conventions think comments demonstrate base rendering layer amenable hence earlier suggestion foundational dom building api similar reacts potentially whatever htmlbars uses internally would less opinionated imo sensible thing compiled htmlbarshandlebars style templates templating system including things like jsx could use dom builder api", "d": "12/2014"}, {"body": "rwjblue think closed since got merged unless", "d": "12/2014"}, {"body": "updated latest beta version ember still getting strange behavior would really appreciate someone could take look thanks", "d": "12/2014"}, {"body": "providing additional options helper supported spent little bit time tracking figured share helper creates instance view provides options view creation helper transforms bound properties work hood today setting property actually setup binding must provided creation time binding automatically setup likely current form deprecated ember going forward would suggest using component wrap type behavior component layout would use iterate items present", "d": "12/2014"}, {"body": "malstrom mixonic totally right use computed properties use exactly bootstrap accordions works raw handlebars show use emblem template engine similar jade syntax compiles handlebars however app file use configure link views allows pass data attributes links generated linkto still struggle tell try setup jsfiddle", "d": "12/2014"}, {"body": "benoithubert thanks", "d": "12/2014"}, {"body": "thoughts", "d": "12/2014"}, {"body": "seems like bug sorry nt chance triage yet", "d": "12/2014"}, {"body": "lancedikson possible put together small sample app demonstrates issue rwjblue stefanpenner think done loader work thoughts", "d": "12/2014"}, {"body": "wagenet ok push gh soon", "d": "12/2014"}, {"body": "wagenet check demoproject please grateful help issue", "d": "12/2014"}, {"body": "create issue requirejs repo", "d": "12/2014"}, {"body": "lancedikson thanks try give look soon", "d": "12/2014"}, {"body": "disabled hidden behind additional feature flag closing", "d": "12/2014"}, {"body": "erunamojazz without failing jsbin going hard us debug going close get information please let know point also give try", "d": "12/2014"}, {"body": "stefanpenner twokul icajax perhaps make emberdata", "d": "12/2014"}, {"body": "rwjblue ah mystery solved yes would great emberdata also", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "oh odd potentially open changing name deprecating old one", "d": "12/2014"}, {"body": "sounds like reasonable solution", "d": "12/2014"}, {"body": "turns css issue repeatable without emberjs", "d": "12/2014"}, {"body": "released closing", "d": "12/2014"}, {"body": "someone going spearhead nt usually like leaving open feature requests around without pr", "d": "12/2014"}, {"body": "super familiar process introducing new public api though", "d": "12/2014"}, {"body": "jamesarosen good starting place", "d": "12/2014"}, {"body": "also ran problem", "d": "12/2014"}, {"body": "ran problem boolean value set attribute still set element behavior exists chrome firefox nt appear case safari jsbin displays behavior via attribute applied custom anchor link attempt download google homepage instead opening new tab chrome", "d": "12/2014"}, {"body": "adamferguson following plain js shows setting attribute actually adds attribute counterintuitive js developers jsbin deal ember use special value indicate attribute added updated jsbin showing works properly", "d": "12/2014"}, {"body": "rwjblue thanks helps", "d": "12/2014"}, {"body": "mixonic rwjblue still issue right", "d": "12/2014"}, {"body": "yes", "d": "12/2014"}, {"body": "updates", "d": "12/2014"}, {"body": "machty ping", "d": "12/2014"}, {"body": "rwjblue ping", "d": "12/2014"}, {"body": "updated jsbin ember different error trying bindattr element dom underlying issue fancybox changing dom ways view aware basically nt nonember libraries affecting dom bindings otherwise controlled ember", "d": "12/2014"}, {"body": "wagenet recommended way use modals common use case reason work previously", "d": "12/2014"}, {"body": "jgadbois cookbook guides good article modals get started", "d": "12/2014"}, {"body": "yoranbrondsema thanks pointing correct model object string also looks like controller either string object able submit pr changes", "d": "12/2014"}, {"body": "feedback actually issue work intended", "d": "12/2014"}, {"body": "seems like bug need others verify cc emberjscorecontributors", "d": "12/2014"}, {"body": "machty going try look weekend", "d": "12/2014"}, {"body": "zencocoon nice idea unlikely going add significant changes current plan deprecate favor lightweight component helper see", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "solution found nt sure since issue closed", "d": "12/2014"}, {"body": "michaellee since hash urls break anchor links general ember issue proposed solutions valid solution alternative use history location type", "d": "12/2014"}, {"body": "knownasilya awesome thanks went component needed create skip link accessibility reasons modified component little also allows focus change scrollto occurs", "d": "12/2014"}, {"body": "michaellee nice feel free leave comment modifications", "d": "12/2014"}, {"body": "knownasilya left comment also wrote quick tip codehive thanks", "d": "12/2014"}, {"body": "fixed", "d": "12/2014"}, {"body": "get fixed", "d": "12/2014"}, {"body": "mixonic looking dom fragment returned seems show elements intact deeper dive html contents nodes passed around methods mentioned mysterious issue seems html looks normal", "d": "12/2014"}, {"body": "ember scriptsafeinnerhtml get unknown runtime error following html hbs columnname errors line", "d": "12/2014"}, {"body": "estshy unfortunately many issues may necessitate significant overhaul ca nt give eta moment love hear people interested helping though", "d": "12/2014"}, {"body": "hi fighting integrate format js ember last days hard fight found discussion issue bmeurant exactly moment necessary extend viewrender solves first part problem explore deeper find whenever condition bound helper one registered ember observes changed example hidden part template shown trigger rendering emberview common thing unless write every single content helper separate view format jsdefined helpers called inside block wo nt available intl object inside data object get injected emberviewrender called therefore translations available helper hand explored handlebars implementation see whether feasible way inject data extending handlebars default maybe overriding method far could find nice bunch chaotic workaround integrate nicely ksol quite right took decision keep walking path rwjblue actually found thread basically topic seen two optics btw guys anyone already working plz let know happy collaborate integration", "d": "12/2014"}, {"body": "btw eventually going", "d": "12/2014"}, {"body": "still experiencing issue ember emberdata however tested without everything worked expected sham truly needed specific emberdata operations simply require shim sans sham", "d": "12/2014"}, {"body": "stefanpenner really sure going issue please go ahead close split like", "d": "12/2014"}, {"body": "stefanpenner really sure going issue please go ahead close split like neither someone needs figure", "d": "12/2014"}, {"body": "going close issue since according stefanpenner least fixed still problems latest stable release currently please file new ticket bonus points check problem still exists beta canary", "d": "12/2014"}, {"body": "time validate app holidays current still require shim additional info issue", "d": "12/2014"}, {"body": "nt problems since removed objectcreate stub removed sham limited shim made sure include first", "d": "12/2014"}, {"body": "good hear", "d": "12/2014"}, {"body": "issue also happening", "d": "12/2014"}, {"body": "fixed folks rwjblue may want cut release weekend", "d": "12/2014"}, {"body": "mixonic agreed thought couple things would like get waiting feedbackclarification", "d": "12/2014"}, {"body": "rwjblue supposed embertestingjs file bower package seeing", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "blesh workaround nt work get url want pass depends properties sure pass value solution", "d": "12/2014"}, {"body": "cwarny hard say without seeing reproduced work around works fine still least next week", "d": "12/2014"}, {"body": "use case tileimagejs export default embercomponentextend tagname image attributebindings x width height src xlink href width height x function return thisget property function return thisget property src function key value argumentslength gt var thisget attr xlink href b c mathrandom return attr xlink href property tileimage called loop parent template passing tile data property notice anything weird using ember", "d": "12/2014"}, {"body": "oh remove workaround meant replace", "d": "12/2014"}, {"body": "probably silly drop attribute never gets added property never gets called something else nt get nt dangerous refer computed property might computed prior rendering case return nothing sorry right place discussion", "d": "12/2014"}, {"body": "possibly work around worked specific scenario could also observe set attribute run run next hack hack workaround afterall commented something like js src undefined updatelinkhref function attr link href thisget src updatesrc function emberrunonce afterrender thisupdatelinkhref observes src didinsertelement", "d": "12/2014"}, {"body": "also tracked", "d": "12/2014"}, {"body": "record also breaks ember persistence foundation", "d": "12/2014"}, {"body": "dontfidget trying align embermap private made breaking change need support multiple versions ember use polyfill please note missing methods like copy friends return wrong version methods copy polyfill attempts use new style foreach callback using older version ember lt think", "d": "12/2014"}, {"body": "wonderful fix converting variable name lower case fixed problem think start battle renaming variable", "d": "12/2014"}, {"body": "skoryky yes works pretty fine thank", "d": "12/2014"}, {"body": "also facing issue", "d": "12/2014"}, {"body": "also confirm well situation multiple query params set like", "d": "12/2014"}, {"body": "seeing error", "d": "12/2014"}, {"body": "also issue ember though cause error nt seem fatal though", "d": "12/2014"}, {"body": "also facing issue updates", "d": "12/2014"}, {"body": "putting agenda next core team meeting", "d": "12/2014"}, {"body": "also observed behavior", "d": "12/2014"}, {"body": "also encountered dirty solution use function within didtransition trick albeit elegantly", "d": "12/2014"}, {"body": "problem thisset controller update query parameter url", "d": "12/2014"}, {"body": "appsearchcontroller embercontrollerextend queryparams domain domain null domainfield embercomputedoneway domain actions searchsubmit function thisset domain thisget domainfield sets domain parameter nt modify url model appsearchroute never called expected appsearchroute emberrouteextend queryparams domain refreshmodel true opt full transition model function params var domain paramsqueryparamsdomain actions refresh function emberloggerlog route refreshing thisrefresh", "d": "12/2014"}, {"body": "please provide work around interim", "d": "12/2014"}, {"body": "clarify thisset code make change class object nt change url", "d": "12/2014"}, {"body": "hi news using build managed fix wrapping assert obviously workaround thanks", "d": "12/2014"}, {"body": "wagenet rwjblue believe closed due getting merged", "d": "12/2014"}, {"body": "anyone interested simple implementations use get around problems arraycomputed reducecomputed use naive approach traversing whole array every time changes work fine performance nt seem much worse small arrays lt ember na\u00efve replacements", "d": "12/2014"}, {"body": "quite beginner ember checked canary build seems fixed simply checked updated createchildview works fine", "d": "12/2014"}, {"body": "getting rid eager urls closing favor", "d": "12/2014"}, {"body": "working htmlbars", "d": "12/2014"}, {"body": "issue problem query params defined route instead route moving query params route controller fixed problem see", "d": "12/2014"}, {"body": "good close due getting merged", "d": "12/2014"}, {"body": "closing trek please reopen think still need docs", "d": "12/2014"}, {"body": "like suggest reopening issue see background basically able past create helper renders component based bound property however internals rendercomponent helper changed individual releases ember possibly longer functions see link background", "d": "12/2014"}, {"body": "quickly wrote believe simple solution problem intimately familiar inner workings ember though could way base add new helper register import ember embermetalcore emberassert import lookuphelper emberhtmlbarssystemlookuphelper module ember submodule emberhtmlbars method component emberhandlebarshelpers param string componentname name component render export function componenthelper params hash options env emberassert one argument helper bound property whose value component render paramslength var helper lookuphelper loadinganimation envdataview env return helperhelperfunctioncall hash options env quick test application seemed work correctly thoughts", "d": "12/2014"}, {"body": "greenarrow would work single one time lookup component bound property would tear set new component bound property changed roughly limitation view helper", "d": "12/2014"}, {"body": "rwjblue ah figured could nt easy acceptable would somebody else interested making happen pointing right direction making happen", "d": "12/2014"}, {"body": "greenarrow rwjblue fine dynamic unbound helper assert stream passed helper would throw assertion implemented would work expected", "d": "12/2014"}, {"body": "mmunoz would taking similar approach partial helper appropriate ie stream provided first parameters view helper create metamorph view subscribes stream tears appends new child view changes sunday december martin mu\u00f1oz notifications githubcom wrote greenarrow rwjblue fine dynamic unbound component helper reply email directly view github", "d": "12/2014"}, {"body": "lukemelia yes definitely", "d": "12/2014"}, {"body": "mmunoz cool work progress able pull together pr early week sunday december martin mu\u00f1oz notifications githubcom wrote lukemelia yes definitely reply email directly view github", "d": "12/2014"}, {"body": "lukemelia think want assert first argument always string name looked container nt make mistakes helper least initially", "d": "12/2014"}, {"body": "mmunoz makes sense planning start making view helper get behavior implement component helper similarly restriction mention sunday december martin mu\u00f1oz notifications githubcom wrote lukemelia think want assert first argument always string name looked container nt make mistakes view helper reply email directly view github", "d": "12/2014"}, {"body": "lukemelia heart mmun made much bettereasier recent refactorings view helper", "d": "12/2014"}, {"body": "lukemelia let know like help awesome smile", "d": "12/2014"}, {"body": "able kill emberdynamiccomponent builtin", "d": "12/2014"}, {"body": "initial pass", "d": "12/2014"}, {"body": "closing issues verified jsbin works expected canary machty fix pr", "d": "12/2014"}, {"body": "metalviews htmlbars fix", "d": "12/2014"}, {"body": "least metalviews", "d": "12/2014"}, {"body": "looks busted", "d": "12/2014"}, {"body": "problem model really strange behaviour", "d": "12/2014"}, {"body": "archaeron pointing nothing embera actually something inherent javascript result two different arrays contents javascript equality checks array object comparing arrays nt compare contents", "d": "12/2014"}, {"body": "seems like likely fix wrapping returns embera means need shim every native array function use concerning alternatives also cross platform performant internal ember uses handle case js var map emberenumerableutilsmap map array function suspect weighing everything balance reasonable limitation mode", "d": "12/2014"}, {"body": "agree stefanpenner", "d": "12/2014"}, {"body": "future js allow us actually subclass things like array happens clear hopefully performant solution", "d": "12/2014"}, {"body": "wagenet know js equality checks meant structure totally different implemented function checks value equality still strange behaviour", "d": "12/2014"}, {"body": "arandaio believe page please demonstrate issue emberjsjsbincom suspect see working code example understand", "d": "12/2014"}, {"body": "wrong person stefanpenner", "d": "12/2014"}, {"body": "oops archaeron", "d": "12/2014"}, {"body": "addressed within", "d": "12/2014"}, {"body": "status issue", "d": "12/2014"}, {"body": "ember removes concept controllers itemcontrollers", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "news", "d": "12/2014"}, {"body": "hey friends picking eventualbuddha left wondering rationale behind breaking change trying upgrade breaking routes", "d": "12/2014"}, {"body": "alexgorbatchev see conversation tl dr need consistent convention know whether path needs transforming autolocation foobar lt gt foobarabout consider index route foobar path hash history ending slash means index basically enforcing convention make sense would great know went omitting trailing slash though please lmk", "d": "12/2014"}, {"body": "alexgorbatchev also note previous important comment extraneous history states index discussion may seem like simple problem first glance tell experience w location classes nontrivial support trivial change server configuration use trailing slash old route needed", "d": "12/2014"}, {"body": "jayphelps existing emberrails app currently ember currently testing following monkey patch work around without modify coffeescript create emberautolocationcreate emberautolocationcreate gt assert emberassert emberassert msg gt emberassert assert return msg rooturl must end trailing forward slash eg app assertapply arguments createapply arguments", "d": "12/2014"}, {"body": "alexgorbatchev mind using plain js people nt know cs", "d": "12/2014"}, {"body": "alexgorbatchev disabling assertion okay keep mind reason least one known bug possibly since location classes nt written tested handle", "d": "12/2014"}, {"body": "javascript var create create emberautolocationcreate emberautolocationcreate function var assert assert emberassert emberassert function msg emberassert assert msg rooturl must end trailing forward slash eg app return return assertapply arguments return createapply arguments", "d": "12/2014"}, {"body": "jayphelps thanks heads testing whole app tomorrow see comes", "d": "12/2014"}, {"body": "wagenet believe closed something ca nt realistically support someone gobs time hands love proved wrong every approach tried leaked", "d": "12/2014"}, {"body": "landed", "d": "12/2014"}, {"body": "thanks stefanpenner help snowballed help posted update solution stackoverflow using knowledge", "d": "12/2014"}, {"body": "jenseng suggestion updated docs always assumed setting computed property worked well", "d": "12/2014"}, {"body": "error emberdata ember", "d": "12/2014"}, {"body": "see", "d": "12/2014"}, {"body": "workaround use render inside collectionview item template attach item controller pass model works without hacks controller created container described", "d": "12/2014"}, {"body": "still little dark track bugfixfeature towards betarelease merged master figured common meta question raised separately", "d": "12/2014"}, {"body": "seeing issue unfortunately ca nt isolate upgrading giant ember app happening nested properties", "d": "12/2014"}, {"body": "possible mark spam", "d": "12/2014"}, {"body": "seawatts fact username ghost means github already identified spam deleted user account go ahead deleted comment though", "d": "12/2014"}, {"body": "dontfidget may ask decided end resolve", "d": "12/2014"}, {"body": "concern admittedly speculation chugging along hoping nt run problem fair nt run incidents upgraded app ember ember controller alias could definitely cause behavior crop upgrading change things upgrading sure caused effect ember introduces streams supposed lazy bindings curious affected behavior", "d": "12/2014"}, {"body": "seeing issue unfortunately ca nt isolate upgrading giant ember app happening nested properties", "d": "12/2014"}, {"body": "artze suspect change global behavior future maybe", "d": "12/2014"}]