[{"title": "bug transition child renders parent outlet transition back yield empty template", "body": "following router specify edit route renders outlet transitioning back render nothing last route jsbin reproduces issue", "num": "1947", "d": "1/2013"}, {"title": "css class binding work properly collectionview", "body": "check file seems css class binding working well collectionview", "num": "1945", "d": "1/2013"}, {"title": "removing action handler dom throws exception rootelementdelegate events", "body": "short version triggering action handler using keyboard action causes handler removed exception sometimes thrown elaborately triggering action handler using keyboard eg pressing space submit form action causes handler removed view seems like action unregistered element still dom point event button click bubbled event handler fails causes null subsequently throws error possible solution would put unregistration actionhelperregisteredactions ember run loop would delay slightly event handlers bubble noted issue minor case nt cause problem besides exception flooding error reporting facilities occurs side effect blur event bubbling actionable event click removes handler dom case thought add issue fiddle illustrates problem", "num": "1943", "d": "1/2013"}, {"title": "render unbound", "body": "click items list sets property may also check items batch screen shown items checked otherwise individual item screen shown handlebars template expected rerender every time click new item case simulate behavior wrapping nt seem right think helpers bound default working template", "num": "1942", "d": "1/2013"}, {"title": "indexroute model call seems stalling rendering", "body": "router like javascript approutermap function thisresource employee path function thisroute detail path employeeid appindexroute approuteextend redirect function thistransitionto employeeindex appemployeeindexroute approuteextend rendertemplate function thisrender application outlet main model function return appstorefind appemployee application wait call finished rendering anything letting ember determine path like javascript approutermap function thisresource employee function thisroute detail path employeeid render application template employeeindex directly loading records asynchronously odd behavior avoiding loading rendering lists stuff index route", "num": "1941", "d": "1/2013"}, {"title": "feature disable binding action", "body": "simple use case form submit buttons links buttonlike styling something like attribute useless since trigger means action handler look like could helpful something like would basically throw away event expression true could also whole form action handler html", "num": "1936", "d": "1/2013"}, {"title": "proposal inverse binding computed properties", "body": "often finding need two boolean bindingsproperties one negation one example javascript istitlevalid function return thisget titlelength gt property title istitlenotvalid embercomputednot istitlevalid cases enough use vs nt really work css class bindings example html view embertextfield valuebinding title sure possible even api might look like would also create", "num": "1935", "d": "1/2013"}, {"title": "guides routing specifying route model", "body": "second code says appshowpostroute emberrouteextend nt postroute appshowpostroute", "num": "1934", "d": "1/2013"}, {"title": "view state errors unhelpful", "body": "getting error navigating states uncaught ca nt call destroyelement destroyed view error somewhat helpful would better included view class raising error would make easier debug assume also applies error raised operation allowed current state etc", "num": "1933", "d": "1/2013"}, {"title": "control undocumented", "body": "documentation needed clarify intended purpose use cases", "num": "1932", "d": "1/2013"}, {"title": "render undocumented", "body": "helper powerful unclear difference lookup view controller accept model needs documentation", "num": "1931", "d": "1/2013"}, {"title": "partial vs template", "body": "difference partial looks name template difference two point partial gain added functionality", "num": "1930", "d": "1/2013"}, {"title": "working unexpectedly", "body": "handlebars outlet outlet drawerpanel problem second call must specified without explicit template simply appended root element thought ember last rendered template tracking used default reported issue sure framework bug seem incorrect", "num": "1929", "d": "1/2013"}, {"title": "allow nested use control helper", "body": "use helper template work parent control context seems lost post template comment template see bug jsfiddle", "num": "1928", "d": "1/2013"}, {"title": "get browser back button event new ember", "body": "eg older version approuter emberrouterextend location hash route function path islogined thistransitionto errorpage root emberrouteextend index emberrouteextend route", "num": "1927", "d": "1/2013"}, {"title": "surrounding markup destroyed use outlets ember", "body": "see inspect dom html output window expect see tags surrounding outlets removed dom behavior occur ember view critical bug blocking ability upgrade ember use outlet system began standardizing ember evaluation bug exists", "num": "1926", "d": "1/2013"}, {"title": "ember linkto helper throw call method slice undefined", "body": "hi working ember use ember working fine get error upgrade btw project always use gruntemberhandlebars compile template route approutermap function thisresource coffee path public function thisroute latte template linkto coffeelatte latte linkto thanks", "num": "1924", "d": "1/2013"}, {"title": "emberobjectinit undocumented", "body": "seems documentation emberobjectinit missing could nt find least", "num": "1923", "d": "1/2013"}, {"title": "bindings lazily retrieve properties upon depend", "body": "currently define binding class properties upon binding depends retrieved moment object instantiation adverse effect eagerly triggering computed property calculations could detrimental calculations expensive results never used javascript appproject emobjectextend contributors function var contributors ema property contributorcountbinding contributorslength complete working example instantiate project nt want make remote call actually needs property think least two ways ember could handle setting observer chain could pause encounters cacheable computed property yet cached much like pauses encountering undefined value would still problem volatile computed properties could delay creation observer chain dependent property actually requested via", "num": "1921", "d": "1/2013"}, {"title": "make router url actual property event", "body": "see", "num": "1920", "d": "1/2013"}, {"title": "routemodel method thiscontrollerfor controlleroftheparentroute get model returns null", "body": "jsfiddle check console output model null note delete predefined controller parent route appprojectcontroller fiddle issue disappears", "num": "1918", "d": "1/2013"}, {"title": "router error using routing", "body": "using routing feature getting following error route matched url part coming redirect triggered nodeeveryauth facebook signin already forked everyauth ca nt find hash getting appended redirect url said ember care nt routes configured explicitly turn routing thanks", "num": "1917", "d": "1/2013"}, {"title": "controller bindings render control helpers", "body": "afaik way bind controller properties helper use case template controller view described believe could nice feature allow bind controller helper", "num": "1914", "d": "1/2013"}, {"title": "get back button state forward button state release", "body": "previous version ie emberrouter emberrouterroute function give every back forward event new version get eg older version approuter emberrouterextend location hash route function path islogined thistransitionto errorpage root emberrouteextend index emberrouteextend route", "num": "1911", "d": "1/2013"}, {"title": "initializers incorrect beforeafter properties unhandled", "body": "set property initializer one nt exist weird error thrown object function seems error happens topological sort fails found error commenting one initializer supposed run assume problem", "num": "1906", "d": "1/2013"}, {"title": "access controller route", "body": "given would great access controller via instead annoying events route purpose dry route events provide hook specifying custom controller could submit pr agree", "num": "1905", "d": "1/2013"}, {"title": "large id values lead exponent representation urls", "body": "generates generate", "num": "1894", "d": "1/2013"}, {"title": "metamorph tags inserted li tags breaks styling", "body": "sure ember issue using zurb foundation block grid display number text areas template looks like handlebars rendered html metamorph tags li causing output look like remove extraneous script tags using webkit inspect looks correct see makes think issue tags li tags noticed number closed issues around metamorph recently already fixed thanks", "num": "1893", "d": "1/2013"}, {"title": "calling toggleproperty handlebars action causes error", "body": "following minimal test case clicking toggle foo gives error uncaught typeerror object true method indexof following works point using toggleproperty avoid write function toggling properties", "num": "1891", "d": "1/2013"}, {"title": "router nt like mapped times", "body": "define twice ember ca nt find routes example discovered defining resources one one app could map routes function behavior seemed odd", "num": "1888", "d": "1/2013"}, {"title": "memory leak routerviews ember", "body": "memory leak ember occurs set explicit view route eg leak becomes prominent size app grows yesterday ember page grew ate memory time created fiddle demonstrates leak page freeze seconds press button observe browser memory use test", "num": "1885", "d": "1/2013"}, {"title": "embermeta set metakey destroyed objects", "body": "", "num": "1884", "d": "1/2013"}, {"title": "binding content controller content specified nested controller", "body": "tl dr route results fetched want use use ugly syntax common multiple leaf routes single resource want share resource use example use instance accessing via nt practical detailed explanation jsbin example basically issue specifying content child controllers inherit parent usually multiple routes nested resource example results following posts postsindex post postindex postedit case data dynamic fragment loaded understand intentional basically share resource specify still find way access content easily nt really good way", "num": "1881", "d": "1/2013"}, {"title": "sortablemixin sortascending mentioned api docs", "body": "", "num": "1880", "d": "1/2013"}, {"title": "linkto helper loses context collectionview", "body": "", "num": "1879", "d": "1/2013"}, {"title": "inside computed property thisget firstname undefined calling template", "body": "wa nt operations dsmodel attributes inside computed property function available call template console works fine example using property fullname uppercase following error get thrown call method touppercase null remember happy call property template call console apppersonfind get fullname fine jsfiddle examples working solution without attribute operations failing solution thisget lastname touppercase idea", "num": "1876", "d": "1/2013"}, {"title": "reference missing documentation", "body": "looks like documentation needs update emberbutton referenced api section builtin views page phrasing page make look like builtin views ember may new nt think case also think would help lot see classes extend another class api builtin views would accessible emberview page example emberview class extends emberobject extended embertextfield emberbutton", "num": "1874", "d": "1/2013"}, {"title": "update router connectoutlet", "body": "ca nt find demo api emberrouter code javascript emberrouterextend enablelogging true root emberrouteextend index emberrouteextend route connectoutlets function router var appcontroller routerget applicationcontroller", "num": "1873", "d": "1/2013"}, {"title": "implement hook choose default controller route", "body": "leaf routes might used least fellas like something like following example want use controller referencing model different views situation ux requirement break apart separate routes technical one would make sense provide hook specifying custom controller way provide hook model setting controller content rendering template real use case override entire setup method use shared controller leaf route allow specify controller gets passed instead relying naming convention case creates excessive boiler plate code happy issue pr wanted get feedback spending afternoon basically propose change js setup function context thistransitioned false thisredirect context controller function context var controller thiscontrollerfor thisroutename context controller set controller model context return controller think used pretty much however changed empty hook weeks back might slightly related", "num": "1872", "d": "1/2013"}, {"title": "obvious access item controllers item views", "body": "arraycontroller collectionview array collection able create item controllers item views object instance respective content arrays item view clearly access respective modelrecord instance unclear connect item view matching item controller case list item contains subview progress bar changes style messaging visual state based properties context computing properties record possible reasonable workaround strikes antipattern instead setting progress bar context individual record directly would like means linking progress view appropriate item controller preferably item controller would available addition record instance perhaps item view would continue reference associated record instance content ie defined would also gain reference array item controller controller ie", "num": "1871", "d": "1/2013"}, {"title": "incorrect layoutname swallowed", "body": "fiddle using nt exist raise error nt", "num": "1870", "d": "1/2013"}, {"title": "incorrect templatename swallowed", "body": "fiddle defined incorrectly view class call via render raise error instead nothing happen ember blow case", "num": "1869", "d": "1/2013"}, {"title": "unhandled actions swallowed", "body": "reproduced fiddle old router would raise error something like made text completely random illustrate point also effects misspelled names anything else think point said nothing handled would exception longer case counterintuitive especially people familiar old behavior app blow unhandled actions", "num": "1868", "d": "1/2013"}, {"title": "unrender views", "body": "previous router public method disconnecting happens private methods reason behavior part public api assumed outlets changed rendering", "num": "1867", "d": "1/2013"}, {"title": "routeexit works differently using back button using forward", "body": "following code collect user position page user exits user exits using forward button linkto value picked correctly user users back button value always filing bug expect forward back buttons work symmetric way", "num": "1865", "d": "1/2013"}, {"title": "template naming issue deeply nested resources", "body": "following router javascript thisresource tournaments path tournaments function thisroute new path new thisresource tournament path tournamentid function try transition like url change properly template getting rendered tried nt seem find template understand naming correctly access need go whole namespace shifted right causing naming correct seems little confusing outlet intended documentation nt really show nested resources ids", "num": "1864", "d": "1/2013"}, {"title": "typeerror compile emberjs version", "body": "using basic apphandlebars combination get following error firefox typeerror compile function template compile scripthtml row used combination jquery handlebars", "num": "1862", "d": "1/2013"}, {"title": "navigating route whose model returns promise fails", "body": "seems error following situation navigate route note reloading browser exhibit must switch route model method returns promise controller route arraycontroller get error similar created jsbin illustrate trigger error click link navigate route", "num": "1856", "d": "1/2013"}, {"title": "content set router transition even setupcontroller defined", "body": "routing documentation indicates setup controllers manually transition implementing route setupcontroller method default value returned model hook assigned model property posts controller change behavior implementing setupcontrollers hook following page tell one controllers model present set content property route handler setupcontroller hook wording implies controller content wo nt magically modified implement hook however jsfiddle reference usecase nt want content posts controller reset every transition may loaded large number posts backend nt want happen user presses back button viewing post therefore controller handles loading data refreshing etc defined setupcontroller documentation says let worry setting controller content gets set return value model method anyway even model method implemented transition posts controller first time happens route model method gets called value gets stored controller gets created init sets content yay finally setupcontroller gets called case nt touch controller content sets stuff controller may need nonetheless controller content gets set return value model going solution define however pretty roundabout solution seems like setupcontroller prevent controller content set automatically way base", "num": "1854", "d": "1/2013"}, {"title": "javascript event object passed action functions", "body": "appview emberviewextend dosomething evt consolelog evt evt undefined", "num": "1853", "d": "1/2013"}, {"title": "app initialize called dom ready even app ready", "body": "app initialize called dom ready even still deferred readiness runs initializers initializers run app ready makes sad panda particular assigning appstore shortly finally advancereadiness kick things result store initializer runs early pick appstore tomhuda katzdale says sounds like bug entirely clear fix properly right initializers run dom ready initialize method scheduled run ready scheduleinitialize seems certainly suboptimal", "num": "1851", "d": "1/2013"}, {"title": "overriding tostring lead interesting problems", "body": "discovered overriding view way mixin lead problems upon initialization view consider code snippet mixin tostring function var new xmlserializer return sserializetostring thiselem meant called object set sometime view initialized something meaningful happened saw problems chrome view failing firefox upon initialization problem stemmed ember calling view expected chrome implementation xmlserializerserializetostring simply returns fed firefox implementation xmlserializerserializetostring throws exception circumstances view method called initialization view unbeknownst us using overridden version instead ember default either made possible override methods like without side effect totally impossible ember relies internal housekeeping least need strong documentation gotcha check following fiddle chrome firefox see action", "num": "1850", "d": "1/2013"}, {"title": "ember fails install via npm", "body": "npm http contextify install c usersjcollumdevappnodemodulesemberno demoduleswindownodemodulesjsdomnodemodulescontextify nodegyp rebuild contextify install c usersjcollumdevappnodemodulesemberno demodulesjquerynodemodulesjsdomnodemodulescontextify nodegyp rebuild c usersjcollumdevappnodemodulesembernodemoduleswindownodemodu lesjsdomnodemodulescontextify node c program filesnodejsnodemodulesnpmbin nodegypbin nodemodulesnodegypbinnodegypjs rebuild c usersjcollumdevappnodemodulesembernodemodulesjquerynodemodu lesjsdomnodemodulescontextify node c program filesnodejsnodemodulesnpmbin nodegypbin nodemodulesnodegypbinnodegypjs rebuild gypgyp err err configure errorconfigure error gypgyp err err stackstack error ca nt find python executable python et error ca nt find python executable python set python env variable err python gypenv v ariable gyp stackerr failnopython c program filesnodejsnodemodulesnpmnodemo dulesno degyplibconfstackigure failnopython c program filesnodejsnode nmojdsu odemodulegypsnod egyplibconfigerr urejs stack c program filesnodejsnodemodulesnpmnodemodulesnodegyplibconfigure gyperr stackerr c program filesnodejsnodemodulesnpmnodemodulesnod ig gyplibstackconf objectoncomplete relying end user python path", "num": "1848", "d": "1/2013"}, {"title": "support multiple calls emberroutermap", "body": "prototyping new router code broke routes logical groups separate call emberroutermap took little figure call map wipes previous routesresources seems large project managing single map might get unwieldy", "num": "1847", "d": "1/2013"}, {"title": "action target itemcontroller", "body": "inside make item controller default target currently seems way target item controller explicit using inside nt work neither leaving target altogether go page controller default fiddle illustrate", "num": "1846", "d": "1/2013"}, {"title": "automatic build system", "body": "many developers use ember may know ruby ecosystem ruby installed machines required compile latest versions ember make life easier started develop automatic compiler create latest library versions whenever commit pushed main repo idea add postreceive hook repositories ember ember data every time new commit pushed github notify application located server downloads latest version repository compile make available example could available address like repository available still bugs related gem bundler continue working interesting related", "num": "1844", "d": "1/2013"}, {"title": "need documentation", "body": "create really documented missing altogether source time pull request right wanted make issue keep track", "num": "1840", "d": "1/2013"}, {"title": "unable pass object action helper", "body": "behavior looks broken commit", "num": "1839", "d": "1/2013"}, {"title": "binding class property working", "body": "set binding linked class property binding updated example bug binding nt meant use class property think binding doc updated explain behavior better raise error binding created", "num": "1835", "d": "1/2013"}, {"title": "rake aborted usascii", "body": "ruby e puts encodingdefaultexternaltos encodingdefaultinternaltos run getting using ubuntu still getting error fix", "num": "1834", "d": "1/2013"}, {"title": "router rooturl property used routing", "body": "per stack overflow question set property router like get route matched url admin error try load app admin used work new approach setting work bug", "num": "1832", "d": "1/2013"}, {"title": "emberarrayfindproperty documentation incorrect", "body": "documentation arrayfindproperty arrayfind says return object found item returned", "num": "1831", "d": "1/2013"}, {"title": "router loading state template results read property length undefined", "body": "tl dr fiddle got route returns deferred object template defined rendering loading template dies trying find parent route read property length undefined function parentroute route var handlerinfos routerouterroutercurrenthandlerinfos var parent current var lhandlerinfoslength adding function resolves error nt know hiding error elsewhere ever undefined", "num": "1830", "d": "1/2013"}, {"title": "syntax error unexpected tsymbeg expecting tamper", "body": "rsqw rsqwdesktop tmpwebsite rake preview rake aborted syntax error unexpected tsymbeg expecting tamper listener listento paths filter gt js syntax error unexpected expecting kend see full trace running task trace clonning using rvm ruby", "num": "1829", "d": "1/2013"}, {"title": "textfield valuebinding problem jquery", "body": "nt time look closely going provide example problem time jsfiddles latest ember latest handlebars one jquery works expected jquery text field valuebinding appexample text field display value appexample link set value appexample empty string type text box value update click link disappear expected type text box value update click link appexample get set empty string value text box update", "num": "1828", "d": "1/2013"}, {"title": "latest ember seems like router", "body": "error uncaught typeerror undefined function anonymous function anonymous function dslresource anonymous function dslmap emberrouterreopenclassmap anonymous function uncaught error route matched url routerhandleurl emberrouteremberobjectextendstartrouting emberapplicationembernamespaceextendstartrouting emberapplicationembernamespaceextenddidbecomeready anonymous function emberhandleerrors invoke invokeoncetimer anonymous function emberhandleerrors invoke iter runloopflush runloopend tryable embertryfinally emberrunend autorun", "num": "1827", "d": "1/2013"}, {"title": "routeless states", "body": "hi guys got question use new router used old one namely define plain old states instead routes motive behind ability organize certain parts application using regular statechart previously meant creating instead given route avoid serialization states urls know create instance router given route feels much less intuitive previous method old router allowed since new router pretty friendly comes defining statechart would great way skip urlserialization part go mixed routestate definition like would look subclasses routes course imagine couple fitting dsls technical implementations get idea something considered part router future right missing something best practice wontfix another remotely related feature found useful back good ol sproutcore days concurrent substates frozencanuck ki framework complex applications multiple hierarchical views existing sidebyside page benefit greatly statechart concurrent substate views main view one serialized url regular router questions similar routeless states thanks listening", "num": "1826", "d": "1/2013"}, {"title": "dynamic routes loading model correctly", "body": "hi raised issue week ago still seeing problem one else seems complaining could well something wrong much trial error really ca nt work far tell following guidelines exactly created fiddle shows problem think post model correctly passed showedit actions however passed route handler via transitionto seems get lost along way received setupcontoller function also model function params postid available similarly model seem survive passed via linkto real app problem also manifests way going show post url directly browser bug would really appreciate someone telling wrong thanks stephen", "num": "1824", "d": "1/2013"}, {"title": "propagating active linkto enclosing", "body": "bootstrap jscss uses existence active class determine item ui element highlighted linkto ember add active class anchor creates solutions proposed notably stack overflow solution unfortunately solution breaks jsbin based upon original within irc chat mentioned sort tag could added ember anything could done help issue would welcome thank", "num": "1822", "d": "1/2013"}, {"title": "redirect transitions routes renders multiple views", "body": "fiddle given following routes expect end always redirects apploggedinroute emberrouteextend redirect function thistransitionto loggedout approutermap function thisresource loggedout function thisresource loggedin path function instead appear end transition log shows templates rendered inside outlet appended bottom page", "num": "1821", "d": "1/2013"}, {"title": "request support model mymodel thisrender route", "body": "discussion maybe others like provide use cases namely existing code lines coffeescript routing supporting model syntax would reduce code post vast majority routing code see probably point code smells along way especially putting much rendertemplate instead using setupcontroller vast majority cases using several render calls rendertemplate global navigation menu subscreen renders navigation items one controllerview shared across several routes basically dashboard views outlet main outlet menu gets populated various things snippet lines substitue model behaviour interestingly old router connectoutlet right thing point view new router introduced degradation overall code shorter porting new router anyway code cut half routes almost events transitions coffeescript approutermap route home path apphomeroute emberrouteextend setup transitionto dashboard appdashboardroute emberrouteextend setupcontroller controller context controllerfetchdashboard apppublicdashboardroute emberrouteextend model params uc controllerfor user ucgetuser paramsuserslug code smell fetch user store apppublicworkspaceroute emberrouteextend model params user modelfor publicdashboard workspace usergetworkspacebyslug paramsworkspaceslug workspace apppublicworkspaceindexroute emberrouteextend rendertemplate controller workspace modelfor publicworkspace apppublicworkspacepublicappinstanceroute emberrouteextend model params workspace modelfor publicworkspace workspacegetappinstanceby slug paramsappinstanceslug appworkspaceroute emberrouteextend model params dc controllerfor dashboard dcgetworkspacebyslug paramsworkspaceslug appworkspaceindexroute emberrouteextend rendertemplate controller workspace modelfor workspace appworkspaceappinstanceroute emberrouteextend model params workspace modelfor workspace workspacegetappinstanceby slug paramsappinstanceslug", "num": "1820", "d": "1/2013"}, {"title": "action pass event object callback", "body": "one changes affected upgrading action handler nt get event object passed seems test description needs updated send view event current handlebars context action contain event also code action event documentation needs updated specifically example seems using release style callbacks event passed finally would like ask current recommended way attaching event handler need event object need access pagex variable interested thanks", "num": "1818", "d": "1/2013"}, {"title": "quotes error", "body": "hey guys small thing every time update emberjs system fix line else app breaks missing something end true typo bug", "num": "1814", "d": "1/2013"}, {"title": "release build comments show version actual release", "body": "means looks like one version behind", "num": "1813", "d": "1/2013"}, {"title": "problems uses application controllertemplates", "body": "tldr fiddle app contextual navigation bar current project application template gets via however seems always truthy project navigation always appears assume controller exists even though content binding instead toggles expected nt think navigation bar application template using break number ways href nt update changes contents link clicking links raises uncaught rangeerror maximum call stack size exceeded fiddle shows issues action", "num": "1812", "d": "1/2013"}, {"title": "pre release says version", "body": "release linked ember homepage following top file changed avoid confusion versions", "num": "1811", "d": "1/2013"}, {"title": "router resource nt include dynamic parameters", "body": "seems resources ca nt dynamic parameters see jsfiddle linkto properly adds id parameter however clicking model method route properly executed params argument empty eventid parameter", "num": "1810", "d": "1/2013"}, {"title": "binding routercurrenthandlerinfos throw assertion error", "body": "hi seems possible observes add property dependency currenthandlerinfos property router instance direct assignation line file routerjs line throws assertion error must use emberset access property could use set method rather direct assignment place", "num": "1809", "d": "1/2013"}, {"title": "redirect based model attribute", "body": "let say model attribute need differentiate following states undefined draft future past user goes draft like want redirect hand post published future want show content differently published past example want add button might simple also might chose render completely different template one thing let say user opens post going published minute might want render template redirect minute passes since page viewing wo nt correct time anymore tried accessing nt get model would good approach problem think possible either redirect change template based route solution came far javascript apppostroute emberrouteextend model function params var post apppostfind paramspostid router wo nt bind property", "num": "1807", "d": "1/2013"}, {"title": "assertion failed application initialize may called", "body": "upgrading get following errors understand original create functionality preserved createwithmixins make change get error point nt think related search codebase running appinitialize call stack also shows suspicious emberapplicationembernamespaceextendinitialize ideas", "num": "1806", "d": "1/2013"}, {"title": "applicationview rendering properly application starting", "body": "hi starting failed render property compare two first render failed successfully rendered issue applicationview supplied fail surprisingly applicable applicationview views generated later simple trace surprisingly undefined clue", "num": "1805", "d": "1/2013"}, {"title": "error object path router could found destroyed", "body": "hi context using curljs load files modelsjs viewsjs etc use autoinit false root set maybe router indexroute instanciated please take look tried use defer advance defer raises exception ready event fired bound code also executed remember curlsjs loads files", "num": "1804", "d": "1/2013"}, {"title": "outlets longer working properly applicationroute", "body": "using applicationroute seems like easily connect outlets without destroying state renderer nt render outlet renders outlet breaks future rendering workaround specifying application subsequent render calls also outlet found rendering appends content without warning need want separate sidebar controller well notification controller consistent throughout routes mistaken go would love corrected", "num": "1803", "d": "1/2013"}, {"title": "noun routes forget model", "body": "setup router routes like javascript approutermap function thisresource posts path function thisroute new apppostsroute emberrouteextend model function params return appposts apppostsindexroute emberrouteextend model function params return thismodelfor posts navigating new post back posts loses previously rendered posts however setup router routes follows see javascript approutermap function thisresource posts path function thisroute new apppostsindexroute emberrouteextend model function params return appposts two routing configurations work correct", "num": "1802", "d": "1/2013"}, {"title": "arraycontroller content lost transitioning back route", "body": "works fine click fruits click vegetables click fruits content fruitsindexcontroller disappears fruitsindexcontrollercontent undefined point code abstraction app setupcontroller specialized findquery slice ing result controllercontent need array mutable nt want repeat findquery hit server every time come back route hence isloaded flag seems router relying setupcontroller load content controller time enter route expected behavior", "num": "1801", "d": "1/2013"}, {"title": "parent route methods getting called multiple times", "body": "given routes loading app gets called proper value returned template clicked called param demonstrates issue positive ember version seen bug using", "num": "1800", "d": "1/2013"}, {"title": "router works differently direct link vs navigating", "body": "setup fiddle tested following ember version version last commit following router config routes javascript approutermap function thisroute posts path thisresource post path posts postid apppostsroute emberrouteextend model function params return appposts apppostroute emberrouteextend model function params return apppostcreate id paramspostid title post apppostroute model behaviour seeing open navigate post apppostroute model nt called however copy url link post new browser window apppostroute model called would expect processing regardless link activated", "num": "1799", "d": "1/2013"}, {"title": "action string literal paramters", "body": "work however nt way make work something like view inboxfoldername inbox action showmessagefolder viewinboxfoldername hreftrue seems handlebars know handle string values guess trying parse path nt think correct know bug old router may also affect new router also like write way handle string literals nt know", "num": "1796", "d": "1/2013"}, {"title": "connecting templateview childview outlet", "body": "hello nt know bug understanding fully ember js ca nt seem connect view template containerview child outlet nt want raise false bug would like know aware working demo example find master branch example application view containerview child outlet working workingnocontainerview branch applicationview normal view outlet working open also stackoverflow questions regards xavier", "num": "1795", "d": "1/2013"}, {"title": "linkto top level nested routes name", "body": "apologies length got set routes along following lines support url structure show task task listings etc pages identical project nonproject scoped controllers views difference router scopes api request current project obviously nt work correctly router names routes conflict show routes ca nt link project section nonproject section vice versa uses route name contexts end place regardless see two solutions allow specifying explicit route paths similar router worked action lookups would let following explicit get right place nt specify full path would depend level would link would link different route nested routes instead could different routes project level routes would different class guess could share code class prevent code duplication would explicitly specify templates amp controllers etc want use ones also logic templates link right place depending whether project", "num": "1793", "d": "1/2013"}, {"title": "source link todo app broken", "body": "source link todo application links app source", "num": "1792", "d": "1/2013"}, {"title": "add option forcerecalculate property", "body": "couple cases useful property bound value undefined means nt get calculated begining even though value evaluate something else undefined bound property changed case discussed tomdale form validation might want recalculate validations form submitted actual values changed workaround found use instead since triggered manually become bloated need set want display value bound periodic time interval example might showed page loads might want recalculate every couple seconds page stays date one solution comes mind global bind property change regular basis sure good design", "num": "1791", "d": "1/2013"}, {"title": "proposal namespaced routing", "body": "note also posted gist containing sample code think proposal would work problems currently building structure going rather large static clientside app app different fairly unique sections share basic look feel may shared behaviors otherwise remain fairly segmented like code organization reflect segmentation sections reporting monitoring settings way organizing give section subfolder section route handlers folder models folder templates far way emberjs organized figured get far issue comes namespacing currently ember nt support route handlers namespaced appreportsindexroute dealing right using ember conventions like able organize code without worry naming collisions extralong object names problem route handlers look one templates folder templates default therefore route handlers custom function calls would great could use namespace create ie appreports determine root folder searching templates solution propose route handler know nested inside namespace use namespace name look controllers views templates controllers views would need namespace templates would folder name namespace example reportstemplates controller view template nt exist look root namespace example see gist example code showing would work already plan solving problem would useful anyone else", "num": "1790", "d": "1/2013"}, {"title": "issue binding property depends", "body": "binding computed property depends state set fail impacts relationships ember data depend set", "num": "1789", "d": "1/2013"}, {"title": "transitionto redirect still transitions route supposed leave", "body": "version fiddle sectionarouteredirect transitionto sectionb sectionb entered rendered however look transition logs console see entered sectionb transitioned sectionb transitioned sectiona simple fiddle rendering correct however complicated app rendering gets messed ie sectiona seems still get rendered led discover erroneous transition log", "num": "1788", "d": "1/2013"}, {"title": "jsfiddle jsbin starting points contributingmd work", "body": "get starting points work urls", "num": "1787", "d": "1/2013"}, {"title": "proposal add enterfilter exitfilter emberroute haltingredirecting transitions", "body": "update added considerations async behavior omnibidirectional transitions continuation boiled formalized proposal think merits separate discussion proposal add used halt redirect transitions router motivation see referenced issue router transitions initiated url changes often backforward buttons prevented redirected consistent nonugly catchall manner page load transitions caught effectively perroute transition filters would provide lot additional effective patterns managing application state solution add two properties invoked beginning router transition ability halt attempted transition optionally redirect another route properties default either function array functions called sequence functions passed new object contain logic determine whether transition haltedredirected invoked destination route invoked route router transitioning tl dr transition algorithm summary transitioning router find common shared parent route source destination routes call source routes destination routes giving routes opportunity halt transition redirect desired transition algorithm depth suppose router currently router gets call router determines root shared parent route case shared parent route assumed router creates new object router first loop destination route children namely left right call route function exists passing newly created object route decide whether application state transition allowed allowed route nothing transition object denied route call optionally pass string redirectto route calling object property truthy either value true means halt transition without redirecting string value redirectto route router nt loop destination routes remains false router continues loop way leaf destination route loop finished router begin loop routes even transition already marked halted purpose well running destination routes source routes source routes first priority whether transition blocked running destination routes first able provide information whether transition would eventually failed would redirected take advantage information necessary use case super strong reverse implementation trivially complicated straightforward approach people safely ignore working hood long adhere rule neither exitenter filters side effects beyond haltingredirecting transition loop performed reverse order leaf shared parent route router call source routes following order router stops iterating halts transition halts redirects overwrite previous haltsredirects performed destination router transition object whose property false true string value redirectto route false router goes ahead performs transition true router nt perform transition string value router performs algorithm performs destination route performing source routes would require annoying extra work make sure say user nt get asked confirm abandoning changes twice note possible accidentally design transition filters infinitely redirect though suppose could catch halt first say redirects examples refer following code examples javascript approutermap function thismap login thismap faq thisresource admin function thisroute manageposts thisroute manageusers thisresource posts function thisroute new appadminroute emberrouteextend enterfilter function transition thiscontrollerfor admin get isloggedin takes optional string arg router redirect instead transitionhalt login apppostsnewroute emberrouteextend exitfilter function transition thiscontrollerfor postsnew userhastypedstuffin confirm unsaved changes sure like abandon post transitionhalt redirect needed halt transition example user typing new post decides check faq clicks link transitions router runs nt exist transition continues unhalted state router calls postsnewrouter logic halt transition user already started filling forms user clicks confirm message transitionhalt called halt transition without redirect example user clicks link presses back button something request transition router loops destination routes gets halted redirected adminroute router still loops see nt router performs another full transition login nt halt user ends login form example transiting admin subroutes user logged tooling around admin routes wants transition shared parent route case whose filters nt get called enteredexited get invoked since nt exist transition succeeds remaining considerationsideasapplications reverting url failed transitions case simple halt without redirect router revert last change made url perhaps simple taking untransitionedoutof source route url reapplying address bar page load failed transitions someone follows link application startup router try perform transition obviously skipping nonexistent source routes properly follow redirects transition merely halted redirect router smart enough transition indexroute halting redirect first transition attempt results redirect another route halts without redirect entire transition considered noop also arrays filters mentioned briefly route specify multiple filters run rather one allows sharing common logic roping multiple separate routes require admin logged relationship async considerations tl dr transition filters rely presently available synchronous data makes sense try incorporate promises async patterns transition filters purpose filters haltredirect transitions based logic determined synchronously concept promises asynchronous behavior transitions logic must rely information presently available app wo nt able implement calls waits load deciding whether halt transition user already loaded controller could check user proper state perform requested transition done synchronously need implement asynchronous transition logic would variety following route depends user loaded use check user loaded check property determines whether transition performed haltredirectpass accordingly user loaded redirect transition loading state route store intended transition user loads retry transition note likely uncommon corner case still supportable via proposed filter system might seem complicated example lends credibility idea enterexitfilters support asyncpromiseoriented approach keep mind would essentially mean adding concept states transitions would end turtles way rather transition filters used determine sort transitions ought permitted based presently availably data app synchronously queried filters replacement action approach suggested tl dr perhaps provide default check default regex properties make easy draw biunidirectional nonexistent transitions statesroutes idea originally suggested convert urltransitions actions nt seem practical anymore given direction new router taken solutions way elegant said still need able draw valid state transitions app proposed filter approach default states routes freely transition every state needs way mark certain transitions unidirectional completely cut transitions directions transition filters accomplish specifying transitions might extremely tedious without extra help api perhaps instead null default simple functions look properties route namely arrays regex fully specified route names check source destination routes match regex see transition valid regex nt pass callback called object default halts transition implemented ember router relies separate internal router think bulk code change belongs perhaps tomdale wycats chime misguided please excuse minor misconceptions present state rapidly changing router believe everything consistent latest believe addition valuable addition toolkit plugs far tell remainder leaks ember application routing state management certainly far better approach originally going referenced issue let know thoughts looks good gladly take swing code changes guidance", "num": "1786", "d": "1/2013"}, {"title": "transitiontoroute deprecation issue", "body": "whenever subcontroller controller target router parent controller eg say calls call still throws deprecation warning since see relevant commit made", "num": "1785", "d": "1/2013"}, {"title": "router parsing params properly", "body": "hi following routes setup using latest router subsequently path recognized correctly posteditroute fired however requested post model get loaded tried adding model function posteditroute see params empty contain postid variable", "num": "1784", "d": "1/2013"}, {"title": "router place functionality collections", "body": "old router new router struggling find decent way providing edit place functionality list items pattern comes quite often apps take examples todo mvc specifically trek recent fork built new router contains patterns struggling make fit helper amp lack controllers seems helper recommended way rendering collections models problem nt result controller templates rendered using controllers place put properties used presentation template nt belong data layer one use controllers thought viewmodels objects decorate underlying model presentation specific properties using helper nt access controller per template rendered nt seem place hang view specific properties seems wrong push model layer consider want generate following html consists title todo computed property shows long ago todo created timeago property presentation logic nt make sense push model view rendered controller would look something like controller wrapping model adding presentation logic required template using helper render list models nt controller per iteration block need decide timeago property go rather push model one thing adding view object referencing coffeescript apptodoview emberviewextend template emberhandlebarscompile viewtodotitle viewtimeago timeago gt timeago get createdat property createdat template example nt nice one additional chained also template needs know property referencing view model recommended way using helper getting controller per iteration controllers used edit place items collection implementing edit place functionality similar way trek todo project ie setting flag model using condition template switch another view seems wrong editing flag set model nt set controller think remember wycats saying controllers responsible storing application state stepping outside router switching editing view result url change reloading page put back application state nt able define routes maps relavent application state templates get complicated quickly example simple one states editing showing soon things want place need start adding flags template quickly becomes mess conditionals example inplace comment form add comment relavent todo would require another flag model another conditional added view seems way stepped outside router gone back modelling application state series flags objects none serialized url anyone else dealing similar things router help pattern", "num": "1782", "d": "1/2013"}, {"title": "route api documentation master", "body": "new routing api released master noticed lack api documentation also view emberarraycontroller class api locally website master see new route class methods attached lastly api coverage render handlebars helper hope noticed ok reading sourcetests fine also", "num": "1781", "d": "1/2013"}, {"title": "best practice loading global app state", "body": "one seems know answer best practice loading global app state currently using emberrails style setup except latest github ember emberdata example main application view headline shows current company name current user name matter populate information view globally example application view html companyname outlet controller coffee appapplicationcontroller embercontrollerextend companyname loading loadcompanyname ajax url company datatype json success response thisset companyname responsedatacompanyname would fire loadcompanyname nt specific route global", "num": "1780", "d": "1/2013"}, {"title": "setting controller property application controller application ready", "body": "trying set main application view headline current company name need fetch via ajax companyjson applicationcontroller companyname property method called loadcompanyname fetch companyname question reference instanced controller application ready function", "num": "1779", "d": "1/2013"}, {"title": "support routes nested one level deep", "body": "back day hours ago possible nest routes one level deep eg along lines post show details give concrete example router using current api currently entering console yields object first two routes top level one level nesting wondering something wrong feature temporarily disabled latter come back soon strategies looking something todo list imagine example simplified making use outlets level nesting fiddle demonstrating issue", "num": "1778", "d": "1/2013"}, {"title": "reference current route linkto", "body": "possible tell linkto helper automatically assume specified route nested within current route previously action helper would automatically determine current state making possible new router linkto helper seems necessary explicitly define complete intended route indeed case missing something", "num": "1777", "d": "1/2013"}, {"title": "ca nt build cygwin ruby", "body": "tried run cygwin ruby get encoding error similar happened execjs rakepipeline run got", "num": "1776", "d": "1/2013"}, {"title": "inconsistent nested templatecontroller naming requirements render helper", "body": "using helper render nested template controller eg messagessidebar uses messagessidebarcontroller need specify template name camelcase manually specify controller period separator use period notation template controller looked automatically template render however view destroyed ember try look property parent view set null value either fail property something weird property used something else", "num": "1775", "d": "1/2013"}, {"title": "add querystring support router", "body": "", "num": "1773", "d": "1/2013"}, {"title": "router documentation", "body": "defining routes used since gone name instead argument hard time understanding instance particular class could link api docs class relation toplevel accessed calling get using callback parameter would ever want access outer inside callback", "num": "1772", "d": "1/2013"}, {"title": "verb route noun get noun parameters models", "body": "nested route routes play well posts postsnew posts postid routes access post vial thismodelfor post initial load get nothing linkto posts postidshow posts postidedit would reliably get post noun associated show edit verbs initial loads linkto route sure bug inappropriate usage would prefer able use postsindex template currently breaks", "num": "1769", "d": "1/2013"}, {"title": "unify boundunbound helpers augment unbound accept helpers", "body": "proposal deprecate make presently instead registering unbound helpers augment unbound helper accept helper calls template usage rationale un boundedness helper best decided template need make app dev decide kind helper register lem know sounds good blast seems like pretty easy one", "num": "1768", "d": "1/2013"}, {"title": "view option create controller", "body": "hi maybe possible far could nt find solution one stackoverflow said implemented yet create view template like create controller following naming convention option specifying controller class helpful eg loop create child views nt controller parent view set controller child view", "num": "1766", "d": "1/2013"}, {"title": "support singular routes", "body": "currently add rest endpoints like end two different name spacings ok controllers views etc think problem associated default template names app need directories order templates properly named would nice could avoid complexity example defined routes greatest api point way tell router singular resource way route maps instead everything well would require ember inflector course properly pluralize singularize strings", "num": "1765", "d": "1/2013"}, {"title": "action foo target router fails read property send undefined", "body": "jsfiddle reproducting issue basically define two actions name one controller one router use explicit router action fail", "num": "1763", "d": "1/2013"}, {"title": "action helper nt pass arguments", "body": "see note set array length arguments sent method", "num": "1759", "d": "1/2013"}, {"title": "template within another template process actions", "body": "form basically templates want dry putting code single template rendering template new controller template template cancel renders properly getting controller action hooked inspect element attribute anything wrong", "num": "1757", "d": "1/2013"}, {"title": "listview stop click event propagation", "body": "use twitter bootstrap dropdown menu issue dropdown menu nt closed click menu found change click handler linkview ruby click function event issimpleclick event return true like ruby click function event issimpleclick event return true", "num": "1752", "d": "1/2013"}, {"title": "feature request make use src attribute handlebars templates break files", "body": "hi folks suggestion handlebars templates currently working single page static application currently without ability merge files serve side would like break application little bit quite templates already adding lot soon things going get pretty unruly quite soon idea simple currently lot templates like html view awesomeness want turn templates like html figured would possible script tags javascript nt seem working reason could someone knows sort thing comment nt working say even possible tweak cheers", "num": "1750", "d": "1/2013"}, {"title": "nested route names contain perioddot", "body": "hi ember guys willaddroute code concatenates nested route names perioddot example take look simple router creates amongst others route called postspostindex makes route referencing little bulky using transitionto want create route class controller view route use extra namespace would nt better three lines code using willaddroute removed could believe nested routes almost always named uniquely anyway cases true worth loosing simplicity guys think thanks lot sebastian", "num": "1749", "d": "1/2013"}, {"title": "content set connectoutlet set content collectionview", "body": "fiddle bare minimum", "num": "1748", "d": "1/2013"}, {"title": "named outlet proposal question", "body": "make sense treat named outlets like partials example template simply following would nt make sense unless specifically tell ember named outlet maps would make attempt render template pass current context current behavior must something else wrong", "num": "1747", "d": "1/2013"}, {"title": "router namespaced classes", "body": "according wycats gist following use route seeing behavior seeing mapping templates router helper route class controller class mapping", "num": "1746", "d": "1/2013"}, {"title": "ember breaks action undefined", "body": "ui constructed following way body gets connected following template embedded view button opens popup like full working sample published steps recreate problem open url login popup appears click login need enter usernamepassword tabs widget appears click add new document add new document popup appears click cancel add new document popup disappears hover add new document button problem ember breaks action undefined error issue discussed however problem seems different closed issue", "num": "1745", "d": "1/2013"}, {"title": "statemanager changing states enter event fires manager still old state", "body": "encountered problem transition states trying trigger actions within enterevent state entering loginattempt state triggering enter function ember says still loggedout state also logincontroller able send messages state already entered code javascript appstatemanager emberstatemanagercreate initialstate loggedoutawaitingcredentials loggedout emberstatecreate authenticate function mananger context managertransitionto loginattempt loginattempt emberstatecreate enter function manager consolelog entering loginattempt managerget currentstatename ember says still loggedoutawaitingcredentials state applogincontrollertrytologin fails logincontroller wrong state loginsuccess function manager context consolelog logged loginfailure function manager context consolelog login failed applogincontroller embercontrollercreate trytologin function validate appstatemanagersend loginsuccess uncaught error could respond event loginsuccess state loggedoutawaitingcredentials", "num": "1739", "d": "1/2013"}, {"title": "unable render outlet controller level", "body": "displaying view occasionally display dialog eg sure upon pressing button router kicked button action targeted controller controller rendering dialog view outlet application view went way dialog route url new router thisrender routes nothing similar controllers view connectoutlet far know means access outlet different parent view mean ember support operations intentional ie rely jquery code eg using viewappendto think room complex cases could justify connecting arbitrary controller arbitrary outlet controller scope", "num": "1738", "d": "1/2013"}, {"title": "router overwrites existing objects namespaces", "body": "seems like models must namespace javascript appblog dsmodelextend approutermap function match match blogs blogs function match match blogid blog function match match posts posts appblogtostring undefined", "num": "1737", "d": "1/2013"}, {"title": "invalid sequence model calls nested routes", "body": "using new router nested routes action jumping nested route model deepest route called first without meaningful arguments model calls top bottom called nicely along rendertemplate calls deepest route rendertemplate call called creates situation deepest model call called first without context whatsoever produce meaningful model result call passed last rendertemplate produced fiddle show problem fiddle level nested things posts also comments added tested levels problem identical ie deepest model gets called first context calls top bottom done", "num": "1736", "d": "1/2013"}, {"title": "rake abort master typeerror", "body": "getting following error running master ca nt find solutions via google hope ok post issue running doesnt change anything running trace", "num": "1735", "d": "1/2013"}, {"title": "derived hooks nt reinvoked parent changes", "body": "js approutermap function match match postid post function match match index match comments appcommentsroute emberrouteextend model function return thismodelfor post get comments model hook get updated someone navigates", "num": "1733", "d": "1/2013"}, {"title": "trigger unnecessary materialization", "body": "proxy discussion proposed materialization api possible register observers unmaterialized content without triggering materialization", "num": "1732", "d": "1/2013"}, {"title": "controllers access controllers controllerfor", "body": "controller dependencies nt anything right assuming want return controller tries get another controller nt specified dependency adding failing test", "num": "1729", "d": "1/2013"}, {"title": "route model function getting called clicking link full page load", "body": "router looks like link state generated handlebars linkto helper click link router updates url correctly fires rendertemplates function handler skipping model function refresh page calls model function correctly misunderstanding load model route", "num": "1726", "d": "1/2013"}, {"title": "proposal deprecate emberalias add embercomputedalias emberaliasmethod", "body": "problem fails unexpectedly cases example used alias property defined later eg due alias descriptors processed mixins merged see followalias discussing kselden stefanpenner seem good way make work expected also supporting ability alias method names solution address propose adding deprecation warnings introducing two new methods embercomputedalias propertypath synthesizes computed property dependent propertypath returning value propertypath future could potentially optimized certain cases reusing descriptor target property emberaliasmethod methodname synthesizes method pointing specified method", "num": "1725", "d": "1/2013"}, {"title": "view emberselect contentbinding content action actionmethod onchange targetview doesnot work", "body": "want run method controllerview change dropdown menu trying use attribute view helper working presently making work around adding observer binded value good addition helper", "num": "1724", "d": "1/2013"}, {"title": "textsupport listen cut paste events", "body": "user ember app uses textexpander snippet value javascript opposed dom always missing last character textexpander catches last turns events", "num": "1717", "d": "1/2013"}, {"title": "emberdata bug generates emberjs router bug", "body": "sorry unexplicitness title example found everything looks good go directly nothing loaded comment line application loaded direct item url fact nt appear work called make entire application crash", "num": "1714", "d": "1/2013"}, {"title": "needs autosynthesize controller properties use", "body": "automatically synthesize property use", "num": "1713", "d": "1/2013"}, {"title": "controller instance views created via view appsomeview", "body": "given view controller instantiate like currently two ways bind controller one via global singleton defining controller inline view less ideal well cases view instances share controller instance good way specify controller class views share global instance", "num": "1712", "d": "1/2013"}, {"title": "linkto helper work multiple contexts", "body": "html linkto blog thisblog link blog linkto linkto post thisblog thispost link post linkto javascript app emberapplicationcreate appapplicationcontroller emberobjectcontrollerextend blog emberobjectcreate id post emberobjectcreate id approutermap function match match index match blogs blogid blog match blogs blogidposts postid post result blogsundefinedpostsundefined check fiddle", "num": "1711", "d": "1/2013"}, {"title": "nested routes parent model access promises models", "body": "hi previous router new router implementation provide smooth mechanism accessing parent models yes work expected models promises also true case routes nested dynamic segments app children models composite keys words children model fetched without parent model instance tried find workaround found issues instead would like share ember provides method supply model instance object method always returns last dynamic segment nt parent segments direct url access child route methods executes parent turns problem attempt access parent models returns parent model step step transition well fired parent thus user must manually set hope documented fixed somehow models promises according wycats comment nt get promise created fiddle demonstration link direct url access", "num": "1709", "d": "1/2013"}, {"title": "connecting multiple outlets", "body": "hi may issue however raising update documentations accordingly recent version connect multiple outlets following way js test emberrouteextend route test connectoutlets function router context routerget applicationcontroller connectoutlet abc xyz routerget secondcontroller connectoutlet bcd wxy new changes connect multiple outlets could please clarify thanks", "num": "1705", "d": "1/2013"}, {"title": "rendertemplate current route controller passed argument", "body": "", "num": "1704", "d": "1/2013"}, {"title": "behavior route methods overriding setupcontroller", "body": "reference personally nt make much sense call super get original behavior model public method route gives set functionality model configuring model controller attached route rendertemplate connecting outlet controller route outlet config setupcontroller misc configuration controller controllers restoring state seems like default leave model rendertemplate functionality alone override setupcontroller want alter behavior model connection template rendering would override methods maybe emberk blank", "num": "1703", "d": "1/2013"}, {"title": "route render method default controller templatecontroller", "body": "inside route call connects thingviewthing template current controller route would expect connect thingviewthing template thingcontroller default", "num": "1701", "d": "1/2013"}, {"title": "hot swapping livereload templates things", "body": "embere\u00f1os workflow definitely missing guard livereload capabilities love contribute plugin ember allow saved templates auto update displayed browser without causing full page reload changing embertemplates seems easy enough meat challenge seems hotswapping template already displayed posting hopefully get idea complications might run mayhaps addressed knowntoembercoreonly shortcuts workarounds also like gauge interest plugin perhaps learn others handling fullpagereload gap productivity like limit initial scope plugin template changes since seems potential greatest possible gain least amount work ideas hotswap prone aspects ember would appreciated", "num": "1700", "d": "1/2013"}, {"title": "reloading page nested route nt work", "body": "created jsfiddle reproducitng bug encountered app upgrading latest master issue click reload page end back route even though url semantics naming nested routes templates somehow change last days", "num": "1699", "d": "1/2013"}, {"title": "watching multiple properties using emberbeforeobserver computed properties", "body": "current master branch possible watch several properties like avoid caching property even go road also noticed new version sortable mixin nt use properties anymore instead uses instead differ property used past", "num": "1698", "d": "1/2013"}, {"title": "error nested route rendering outlet application", "body": "javascript approutermap function match match index match posts posts function match match postsindex match postid post function match match postindex appindexroute emberrouteextend redirect function thistransitionto postsindex apppostsindexroute emberrouteextend model function return apppostall apppostroute emberrouteextend rendertemplates function thisrender post application state click back discovered rendering error vanishes open fiddle click link go back design workaround someone irc proposed unnest routes ca nt accept", "num": "1694", "d": "1/2013"}, {"title": "current best practice handling forms new router", "body": "changes works changes like really sure approach basic forms validation example jsfiddle source code validations many people irc suggested using computed property client side validation good way go came suspect correct pattern also computed property result propertyspecific validation properties also best practice handling failed validations come server rails would status code thing comes mind putting event handler right form event handler javascript appnewusercontroller emberobjectcontrollerextend createuser function thisget content becameinvalid function possibly set view property display additional errors appstorecommit router lookup since unsupported since approach case redirecting newly created record controller binding new record even considered good practice general event handling forms form even submitted controller event people often say controller responsible current client session ember data responsible persistent session could theoretically set handlers router directly code would look like javascript appnewuserroute emberrouteextend model function var record appusercreaterecord route solution accessing router form controller still need bind event controller means binding two different events didcreate becameinvalid two different places router controller moment seems like proper solution also feels like accessing global user record multiple places app binding events wherever however like propertyspecific validation attributes view one last thing pops property gets calculated simple example works well sense error message displayed user starts typing good enough even prevent user submitting form somehow still want display error messages ca nt nt touch username form field property wo nt get calculated alternative option would form field knows validate something like tell forcevalidate user clicks submit button questions often pop irc especially since new router release everyone different answer would good could come general best practice since forms something every web app", "num": "1692", "d": "1/2013"}, {"title": "match trailing slash route", "body": "router ok okay get following error javascript", "num": "1691", "d": "1/2013"}, {"title": "ca nt invoke router method directly using send", "body": "previous router could invoke route directly using send latest build able get route fire using send api kicked within ember view still api available new router manually invoke route given context error get try manually invoke global router within app typeerror object approuter method send arguments array get message function native code get stack function native code set message function native code set stack function native code type undefinedmethod proto error", "num": "1690", "d": "1/2013"}, {"title": "emberinspect treat string array", "body": "", "num": "1689", "d": "1/2013"}, {"title": "loader", "body": "hate open issue question like seems option hoping someone know could shine light discussionreasoningintent regard ember microloader description packagejson says loading external dependencies rsvp initially place used since used new router however external dependencies like jquery handlebars metamorph nt loaded manner guess wondering touch things like problem solving ie necessary rsvp router loader external dependencies like mentioned changed use loader plans available ember namespace endusers load dependencies apps looks like amdish syntax created using amd loader like almondrequirejsetc lulz created sole purpose trolling tom dale", "num": "1688", "d": "1/2013"}, {"title": "context event route", "body": "see commit example example however within search event actually reference events object route would expect map appapplicationroute instance useful able refer events functions though use case", "num": "1687", "d": "1/2013"}, {"title": "time build", "body": "new docs router changes main site might time build another pre release know still router things tie think bit confusing new people hit site download ember try follow guides thought know one person tripped perhaps", "num": "1685", "d": "1/2013"}, {"title": "action handler longer access original event", "body": "define action view method handles action longer provided reference event past event first argument context accessible event object context passed first argument although great many situations access original event required situations", "num": "1684", "d": "1/2013"}, {"title": "router missing properties route", "body": "noticed enter function defined route router properties like name path defined route perhaps things changed simple fiddle appindexrouteenter thisname undefined expected", "num": "1681", "d": "1/2013"}, {"title": "new router render anonymous template", "body": "make example practical example javascript define hds apptemplatesmytemplate function mytemplate indeed templates considered global variable way work side effect", "num": "1677", "d": "1/2013"}, {"title": "namespacing routes", "body": "appears currently possible use namespaced route handlers eg would great could map handler appusersindexroute digging bit found key would updating take namespace account sending name camelize see something already progress submit pull request", "num": "1674", "d": "1/2013"}, {"title": "router logging available new router", "body": "old router possible specify see transitions states told new router based anymore still quite useful feature plans adding back new router", "num": "1673", "d": "1/2013"}, {"title": "accessing route model new ember data record hangs router", "body": "specify function new router new ember data record router hang try access route directly renders page propertly transition another route created jsfiddle example see click link transitions renders template reload page go directly page blank", "num": "1672", "d": "1/2013"}, {"title": "using setupcontrollers requires redefining default controller content", "body": "sure issue represents something changed goes say following route say want connect property model data eg dshasmany content separate array controller case would add following works fine default setting post controller content property model overwritten needs added back manually setupcontrollers function big deal would thought messing controller variable default behaviour would still applied thought mention", "num": "1670", "d": "1/2013"}, {"title": "ember leaks memory simply including emberjs", "body": "looks like problem still exist emberlatestjs introduced memory leak occurs simply including emberjs turn chrome memory watcher reload page includes emberjs see reload uses megs memory returns half memory page finishes loading prior would return memory used page load", "num": "1667", "d": "1/2013"}, {"title": "accessing property name bound handlebars helpers", "body": "per headline would great bound handlerbars helpers would provide access name property invoked currently seems way tracing back within bound handler function good place stashing property name would seem use cases feature modeldriven applications type property looked property name type used customize formatting example case particular example difference type value instance may guessed", "num": "1665", "d": "1/2013"}, {"title": "outlets inside conditionals nt render", "body": "fails render inner template making inner route explicitly render nt work either take works outer view alwaystrue outlet goes outlet lt div gt inner view lt div gt javascript app emberapplicationcreate approutermap function match match home match outer outer function match match inner inner appoutercontroller embercontrollerextend alwaystrue true apphomeroute emberrouteextend redirect function thistransitionto inner runnable version", "num": "1662", "d": "1/2013"}, {"title": "new router sprockets integration issues", "body": "followup issue noticed new router defaults router mappings file namings free one writing router boilerplate nt seem work well way sprockets compiles templates nested subdirectories templates assuming mapped routes like javascript approutermap function match match index match posts posts function match match postindex match new newpost assume placed templates related posts templatesposts subdirectory case sprockets emit template name eg posts template like cause template lookup fail new routing setup could solved modifying route names like however cause template controller lookup fail sure correct naming convention controller would setup tried eg apppostspostscontroller failed well solution come upon explicitly define routes fine boilerplate required organizing files subdirectories since fair number people using ember sprockets maybe find way avoid explicitly define routes fit new routing systems defaults respects perhaps another option eg configuration sprocketshandlebars integration thanks sean", "num": "1659", "d": "1/2013"}, {"title": "manual rerender required view template specified", "body": "following view whole example jsfiddle javascript appuserlinksview emberviewextend template function var template thisget content property content using following object simply works well change text template nt get rerendered automatically therefore requiring add observer view view nt rerender without observer even though template defined understanding means bind whenever content changes simplified demo purposes experiencing issue ember data template basically renders empty initial text blank nt update data finishes loading nt think related ember data could reproduce simply", "num": "1658", "d": "1/2013"}, {"title": "intermediate view destroyed prematurely", "body": "toy app nested views navigate either person successfully switch detail basic view navigate person detail view fails detail view breaks ca nt find view view destroyed nothing replacing", "num": "1657", "d": "1/2013"}, {"title": "add dynamically states state manager", "body": "hi wondering possible add new states dynamically ie pass state name template name viewstate like js mainappservicestatemanager emberstatemanagercreate templatepath apptemplates addstate function statename templatename var path thisget templatepath var viewstate emberviewstatecreate view emberviewcreate isinserted false willinsertelement function var isinserted thisisinserted isinserted gettemplate path templatename handlebars thisset isinserted true something like thisstatespushobject statename viewstate function gets template view state ajax hope help thank", "num": "1656", "d": "1/2013"}, {"title": "nested routes nested outlets", "body": "hi trying follow example nest routes explained guides new router according guide parent route templates content inserted application template outlet child route template rendered parent template outlet behaviour getting parent route rendered child route template rendered parent template outlet fiddle demonstrating issue realize stuff brand new thought would bring attention sean", "num": "1651", "d": "1/2013"}, {"title": "rake dist build process aborts due wrongly referenced file", "body": "rake dist aborts file directory emberjspackagesemberroutinglibhandlebarsextjs file located emberjspackagesemberroutinglibexthandlebarsjs copying renaming file emberjspackagesemberroutinglibhandlebarsextjs fixes build process", "num": "1650", "d": "1/2013"}, {"title": "overridden computed properties get clobbered set", "body": "cp wrapped via emberwrap argument count lost causes problems length checks done setting", "num": "1649", "d": "1/2013"}, {"title": "dynamic segments nested routes", "body": "ran issue trying use dynamic segments together nested routes template keep getting error use dynamic segment alone without nested routes function second parameter works missing something", "num": "1648", "d": "1/2013"}, {"title": "unable access router instance runtime", "body": "old router possible access router instance via also instantiated controller like however yields using new router mentioned documentation simply deprecated behavior better way access controller instances", "num": "1646", "d": "1/2013"}, {"title": "call get id undefined object using controllerfor w router", "body": "rewriting simple pagination example found new router api controllerfor seems cause problem need modify controller context property something like following js personapproutermap function match match person match page pageid pagination personapppaginationroute emberrouteextend model function params return paramspageid setupcontrollers function controller pageid thiscontrollerfor person set content personapppersonfind get error listed uncaught error assertion failed call get id undefined object working jsfiddle show issue action see error click anchor tag top force hard navigation page arraycontroller happens attempting reach another controllers content set also occurs try something else w controllerfor modify another property using latest build emberjs master pulled minutes ago fresh build", "num": "1644", "d": "1/2013"}, {"title": "uncaught typeerror read property handler undefined", "body": "got form click text field type key see error coming line latest download emberjs version video behavior sure create reduced example gist stack trace sorry nt well formatted form handlebars template starts case relevant see behavior error version", "num": "1643", "d": "1/2013"}, {"title": "using promises route models", "body": "returning promise emberroutemodel seems work correctly router first initialized ie application loaded deep link route given model previous router switched loading state deserialize calls resulted promise iirc nt dug deep enough new api yet fully understand works anyway subsequent calls emberroute hooks setupcontrollers result promise delivered model one get around fairly easily something like seems emberroute hooks promiseaware default", "num": "1642", "d": "1/2013"}, {"title": "deferred transitions emberrouteredirect", "body": "trying get grips new router api thought might worth considering emberrouteredirect hook return boolean indicating emberroutesetup handled redirect turn enables deferred transitions routes example", "num": "1641", "d": "1/2013"}, {"body": "make jsbin please", "d": "1/2013"}, {"body": "good catch", "d": "1/2013"}, {"body": "experiencing issue using second router example navigating directly", "d": "1/2013"}, {"body": "intentional want customize behavior loading implement", "d": "1/2013"}, {"body": "put submit action form instead submit button disabled nt fire submit event form", "d": "1/2013"}, {"body": "link button without form", "d": "1/2013"}, {"body": "also checked still submit form pressing enter input field buttons disabled", "d": "1/2013"}, {"body": "right define isinvalid property bind buttons disabled property make submit action handler check seems like ca nt simplified", "d": "1/2013"}, {"body": "problem add check every action handler kind binding become tedious example using bootstrap loading buttons basically want disable button action previous click processed almost always serious app nt want user resubmitting every formbutton clicks", "d": "1/2013"}, {"body": "basically results duplicate logic disabled x another place app really nt belong especially event bubbling parent routes", "d": "1/2013"}, {"body": "also believe make easy improve ember applications encourage users good ux right nobody really bother polluting action handlers additional statements", "d": "1/2013"}, {"body": "think objective css class bindings think needed class use use", "d": "1/2013"}, {"body": "guess solves issue thanks", "d": "1/2013"}, {"body": "yes open issue emberjswebsite close one", "d": "1/2013"}, {"body": "okay", "d": "1/2013"}, {"body": "also get error idea error think came", "d": "1/2013"}, {"body": "lulezi error due tried without success make jsfiddle illustrate problem", "d": "1/2013"}, {"body": "experiencing exact error confirm revert commit error isnt thrown anymore", "d": "1/2013"}, {"body": "lulezi lcoq bobey guys using control helper code explicit call could blow things commented line ember build error went away cc wycats", "d": "1/2013"}, {"body": "bisected confirm seeing error due commit well", "d": "1/2013"}, {"body": "twinturbo nope nt", "d": "1/2013"}, {"body": "twinturbo least part app", "d": "1/2013"}, {"body": "fixed", "d": "1/2013"}, {"body": "lulezi kselden error say seems happen switch different collectionviews still loading", "d": "1/2013"}, {"body": "getting error also switching views running error occurs view switches every single time happening open source ember app mashboard router error occurs transition view within application version deployed github pages current due bug", "d": "1/2013"}, {"body": "lulezi kselden seems fixed certainly", "d": "1/2013"}, {"body": "documentation issues website", "d": "1/2013"}, {"body": "guess also relates insource documentation", "d": "1/2013"}, {"body": "mehulkar darthdeus website documentation talking guides generated insource documentation guesss issue stay", "d": "1/2013"}, {"body": "intentionally undocumented yet done still undergoing changes", "d": "1/2013"}, {"body": "difference know used several times following works following work", "d": "1/2013"}, {"body": "uses controller every time uses new copy time", "d": "1/2013"}, {"body": "means suitable completely standalone things nt depend global application state guess smarter partial", "d": "1/2013"}, {"body": "good question love get insight well", "d": "1/2013"}, {"body": "lcoq looks like meant anyway case use case difference would imho semantic", "d": "1/2013"}, {"body": "would like remove favor", "d": "1/2013"}, {"body": "twinturbo nt bug even particularly unexpected want second call render first one usually expect logical parentchild relationship implied fact implication siblings second call child route would render parent expecting instance correct specify", "d": "1/2013"}, {"body": "nt really understand question please reopen information trying achieve please use", "d": "1/2013"}, {"body": "adamjmurray odd change sections divs works fine", "d": "1/2013"}, {"body": "adamjmurray nevermind still fails something weird seems like problem users reports", "d": "1/2013"}, {"body": "ok comments sounds like see bug agree bug confused feel like big problem everyone beta testing template rendering ember pretty solid since sproutcore days came big surprise also worried something slightly wrong codebase trigger jsfiddle examples straightforward right", "d": "1/2013"}, {"body": "adamjmurray actually surprised rendering anything updated code work fashion expect", "d": "1/2013"}, {"body": "adamjmurray let explain happened overwrite application route meant default action rendering application template longer happened outlet render appends dom basically templates nt rendering application template expected appending dom think may able provide warning specify outlet outlet name found would clued something wrong setup", "d": "1/2013"}, {"body": "beautiful thank providing warning help future ember users sure really confused four people days", "d": "1/2013"}, {"body": "provide help happen", "d": "1/2013"}, {"body": "hughou get issue without precompiled templates almost certainly issue gruntemberhandlebars", "d": "1/2013"}, {"body": "yes use template without gruntemberhandlebars working fine gruntemberhandlebars issue know plugin instead thank", "d": "1/2013"}, {"body": "believe nt updated handlebars yet might give shot dgeb updated last week", "d": "1/2013"}, {"body": "build tools really need ball updating later versions handlebars least handlebars final ships", "d": "1/2013"}, {"body": "moved website repo", "d": "1/2013"}, {"body": "future reference emberjswebsite", "d": "1/2013"}, {"body": "think laziness cp improved drop watching dk upon watching cp instead reason observe dks invalidate cached cp reason leave even cp observed much like suggestion think good suggestions investigate volatile cps nt really make sense dks observing setup dks support observing reason turn caching regardless think good suggestion", "d": "1/2013"}, {"body": "comment useless removed p", "d": "1/2013"}, {"body": "think would useful actual property cases might want know actual route path within route", "d": "1/2013"}, {"body": "works thismodelfor parentroute right unless promise", "d": "1/2013"}, {"body": "sorry deleted mistake previous comment nt think right way access parent route model works", "d": "1/2013"}, {"body": "lcoq whoa missed method thanks tip", "d": "1/2013"}, {"body": "disable routing like", "d": "1/2013"}, {"body": "awesome thanks missed docs sorry trouble", "d": "1/2013"}, {"body": "fyi pesky facebook url change session redirect behavior week started adding fragment redirecturi field left blank please ensure app handle behavior", "d": "1/2013"}, {"body": "helper takes single model property becomes controller allowing additional properties magically bind controller opposed view instance easy determine please explain exactly trying achieve", "d": "1/2013"}, {"body": "wycats fact need bind properties controller using helper recursively display tree record categories model owner many contains list existant categories children checkbox used addremove category product uses define property need keep know category added", "d": "1/2013"}, {"body": "similar use case instantiating signup button like inside javascript scvrushtournamentsignupbuttoncontroller emberobjectcontrollerextend init function var controller could much easier", "d": "1/2013"}, {"body": "nt really understand question please reopen information trying achieve", "d": "1/2013"}, {"body": "twinturbo mind adding quick fiddle zoom issues", "d": "1/2013"}, {"body": "seems somewhat related", "d": "1/2013"}, {"body": "lcoq controller passed setupcontroller need elsewhere", "d": "1/2013"}, {"body": "ok fact original design worth noting eliminates possibility controller hook", "d": "1/2013"}, {"body": "wagenet needed events triggered two ways access controller events set event typical example one could let route events update controller properties wycats agree close issue soon submit pr", "d": "1/2013"}, {"body": "internally ids cast strings happens", "d": "1/2013"}, {"body": "ember data bug would mind filing emberjsdata", "d": "1/2013"}, {"body": "try typing webkit inspector apparently js represents large integers ivanvanderbyl right data casts strings produces nt look like ember data bug", "d": "1/2013"}, {"body": "tomdale yeah duhh bad move", "d": "1/2013"}, {"body": "likely due use css pseudo selectors unfortunately pseudo selectors also take script tags account cause annoying issues luckily selectors usually used inplace likely zurbs css adapted", "d": "1/2013"}, {"body": "access css use helper nt generate script tags notes collection controller tagname ul classnames blockgrid fourup mobiletwoup view embertextarea classnames stickynote valuebinding viewcontent collection outlet", "d": "1/2013"}, {"body": "thanks guys stefanpenner right changing zurb structure fixed problem good know", "d": "1/2013"}, {"body": "think needs find way guides already", "d": "1/2013"}, {"body": "action helper passes value property case passes true toggleproperty method toggleproperty expects property passed second fiddle right way concern", "d": "1/2013"}, {"body": "selvaganeshbsg changed since jsfiddle emberhandlebars seem date change", "d": "1/2013"}, {"body": "using outdated version handlebarsjs requires least handlebars original fiddle working updated handlebars", "d": "1/2013"}, {"body": "wycats using jsfiddle posted originally working problem jsfiddle", "d": "1/2013"}, {"body": "think definitely bug passing raw strings possibility way helper sets event listener uses method string arg still gets looked via handlebarsget double checking hopefully pr soon", "d": "1/2013"}, {"body": "correction handlebars seems fine included ember seems problem seems missing code works updated ember perhaps something borked ember release builds", "d": "1/2013"}, {"body": "think duplicate", "d": "1/2013"}, {"body": "ahh thanks bobbus right duplicate close add fiddle comment one", "d": "1/2013"}, {"body": "freedompeace unable duplicate leak may missing something browser andversionpatchlevel able replicate leak", "d": "1/2013"}, {"body": "stefanpenner made error simplifying fiddle initially submitting specifically view set nonexistent route caused fiddle essentially nothing fiddle corrected leak back aforementioned fiddle ember leaks memory least chrome windows linux safari windows firefox windows", "d": "1/2013"}, {"body": "thanks fixing fiddle confirm chrome osx noone gets take thorough look tonight", "d": "1/2013"}, {"body": "confirm chrome windows xp amp firefox windows xp", "d": "1/2013"}, {"body": "confirmed chrome version beta mac os chrome canary version mac os", "d": "1/2013"}, {"body": "confirmed version osx", "d": "1/2013"}, {"body": "confirmed chrome osx doubts test taking place outside context run loop created alternative jsfiddle wrap transitions run loops took way longer run cut iterations order magnitude yields following even assumed running test would yield leak kind poor assumption since probably metacaching nt considered leaks new test run loops generates mb instead original test nt know enough gets cached course ember app take consideration nt really make sense run repeated tests something like transitions outside context run loop", "d": "1/2013"}, {"body": "distracted beertomdalejs last night hopefully take look evening", "d": "1/2013"}, {"body": "time last night look looks like may dealing multiple independent leaks though possible single issue culprit one leak think found multiple occur one run loop view passively generated leaks view instance believe isolated failing test spending time evening anyone another perspective failing related tests would quite helpful", "d": "1/2013"}, {"body": "nt need simple work since controller thus proxy", "d": "1/2013"}, {"body": "want inherit content gets loaded nt seem right always reference parent", "d": "1/2013"}, {"body": "reason behind share resource makes sense nest loads record way access seems via seems like quite common pattern whenever multiple end routes behind single resource tried nt seem work seems like binding goes way overwrites parent undefined", "d": "1/2013"}, {"body": "case anyone else runs issue workaround wrap helper helper", "d": "1/2013"}, {"body": "tomdale fixed", "d": "1/2013"}, {"body": "wycats bug still appears master", "d": "1/2013"}, {"body": "actually intentional fixture adapter intentionally delaying loading data emulate delay receiving data server template first loads yet therefore trying call undefined blows us want guard displaying template data loaded via template see", "d": "1/2013"}, {"body": "thanks yehuda", "d": "1/2013"}, {"body": "particular looks deprecated see adding documentation additionally guide issues probably reported guide likely closed renaudf trying get lowhanging fruit closed issues today would appreciate help thanks", "d": "1/2013"}, {"body": "maybe question would help", "d": "1/2013"}, {"body": "bobbus thank", "d": "1/2013"}, {"body": "router still refactored submitted pr add method similar describing talking wycats removed method pr preference initially provide single path via registering controller route container example want use register route container decide reintroduce method overridden important returned controller gets registered container subsequent calls return", "d": "1/2013"}, {"body": "understanding point controllers already instantiated would fine case", "d": "1/2013"}, {"body": "first glance seems like would really good semantic solution wonder would even matter instance get point", "d": "1/2013"}, {"body": "work via view bug currently preventing working get", "d": "1/2013"}, {"body": "addressed", "d": "1/2013"}, {"body": "sorry bugspam forgot tests linted rebase times good", "d": "1/2013"}, {"body": "something sure negatives would", "d": "1/2013"}, {"body": "would useful get old behavior", "d": "1/2013"}, {"body": "thanks", "d": "1/2013"}, {"body": "one useful design patterns mvc view ability broadcast messages controller allow controller act upon message asneeded basis app uses design pattern messages controllers controller appropriate method handle message method gets called otherwise nothing happens design adhering mvc pattern useful variety scenarios creating complex reusable views building mixins transform generic controller messages specific messages eg something deleted becomes photo deleted generally decoupling views controllers models functionality relies swallowed messages app thus far draganddrop given multiple draggable items drop targets viewsmixins translate type item dropped message containing dropped model name example dropping photo listing category listing would create message categories controller previously handling message optional controller needed handle drop would corresponding method otherwise message would pass silently example category care photo dropped appropriate method dropping photo another photo nothing imagine scenario many droppable models multiple drop targets creating every variation drop message handler eg diddropfile diddropphoto diddropcategory diddroptag etc every controller would become cumbersome certainly understand frustration come code typo perhaps providing warning development would appropriate throwing outright error reusable views mixins benefit greatly ability chatty without stopping code execution saying wrong thing", "d": "1/2013"}, {"body": "certainly understand frustration come code typo perhaps providing warning development would appropriate throwing outright error reusable views mixins benefit greatly ability chatty without stopping code execution saying wrong thing would support warning development mode option configure behavior mon jan pm dana franklin notifications githubcomwrote one useful design patterns mvc view ability broadcast messages controller allow controller act upon message asneeded basis app uses design pattern send messages controllers controller appropriate method handle message method gets called otherwise nothing happens design adhering mvc pattern useful variety scenarios creating complex reusable views building mixins transform generic controller messages specific messages eg something deleted becomes photo deleted generally decoupling views controllers models functionality relies swallowed messages app thus far draganddrop given multiple draggable items drop targets viewsmixins translate type item dropped message containing dropped model name example dropping photo listing category listing would create message diddropphoto send categories controller previously handling message optional controller needed handle drop would corresponding diddropphoto method otherwise message would pass silently example category care photo dropped appropriate method dropping photo another photo nothing imagine scenario many droppable models multiple drop targets creating every variation drop message handler eg diddropfile diddropphoto diddropcategory diddr optag etc every controller would become cumbersome certainly understand frustration come code typo perhaps providing warning development would appropriate throwing outright error reusable views mixins benefit greatly ability chatty without stopping code execution saying wrong thing reply email directly view github", "d": "1/2013"}, {"body": "would favor warning development maybe change throw error assertion change caused big breaking changes application well idea implementing bunch placeholder methods seems like lot extra work discussing issue used cocoa example imagine implement method every single message sent controller amount placeholder code would grow control", "d": "1/2013"}, {"body": "yes helpful notice warning development would address typos viewstemplatesmixinscontrollers help expose messages objects sending warnings could configured would certainly added bonus", "d": "1/2013"}, {"body": "app relies heavily disconnectoutlet showhide various dialogs popups etc", "d": "1/2013"}, {"body": "try work soon", "d": "1/2013"}, {"body": "anyone else interested work around create empty handlebars template render want unrendered", "d": "1/2013"}, {"body": "ran app used workaround", "d": "1/2013"}, {"body": "twinturbo specific sure implement work around two route events toggle two templates search template initially rendered main outlet route rendertemplate method map shows fine showmap method showsearch runs get following case sure mean create empty handlebars template render want unrendered nt want ask question stackoverflow work around wo nt needed wycats closes issue", "d": "1/2013"}, {"body": "running issue called clicking back button", "d": "1/2013"}, {"body": "problem called called different timeway try produce minimal example put jsfiddlenet", "d": "1/2013"}, {"body": "useful also helpful see changes two calls", "d": "1/2013"}, {"body": "think router inideed looking matchedit far understand docs depending file structure build tool compile templates could mismatch suggest atm look embertemplates hash console find registered templates router override rendertemplate thisrender yourtemplate", "d": "1/2013"}, {"body": "compiles also tried template still rendered", "d": "1/2013"}, {"body": "hum work outlet defined match template think bug would possible make jsfiddlejsbin illustrate", "d": "1/2013"}, {"body": "defining outlet thought sure give try", "d": "1/2013"}, {"body": "could come example working since really sure handle nested resource models stuff seems work way", "d": "1/2013"}, {"body": "told tomdale worked part thoughts", "d": "1/2013"}, {"body": "modified little adding oultet level think nest resource sub resource expected rendered parent template default outlet", "d": "1/2013"}, {"body": "sure understand naming chose example instead outlet intentional mean every single becoming new namespace matter nested", "d": "1/2013"}, {"body": "brings question structure templates directories would make sense looks like actual structure like example makes look one actually correct torn one used nt nesting level", "d": "1/2013"}, {"body": "also edited example provided using nested outlets different trying achieve need routes nested events bubble nt want nest actual templates", "d": "1/2013"}, {"body": "darthdeus pretty sure resources never nested means would post instead postspost pretty sure actually big think better suited stackoverflow", "d": "1/2013"}, {"body": "triplonetienne sorry slow response possible put together jsbin jsfiddle shows error action", "d": "1/2013"}, {"body": "seen issues like caused old cached versions things people manually compiled ember andor handlebars got version actual releases please reopen fiddle reproduce", "d": "1/2013"}, {"body": "working js fiddle report issue displaying list genres movie shop movies loaded via ajax switching genres emberdata clicking genre names yields error", "d": "1/2013"}, {"body": "looks related", "d": "1/2013"}, {"body": "closing duplicate", "d": "1/2013"}, {"body": "probably commit cause", "d": "1/2013"}, {"body": "right guess intended seems unfortunate used behaviour", "d": "1/2013"}, {"body": "painful surprise good step forward conventionoverconfiguration new router api glad changed overriding found first realized taking wrong approach routes stopped overusing resources removed overrides leveraged convention", "d": "1/2013"}, {"body": "first ramping router api tried going approach loading controller content many reasons good practice ember better encapsulate logic repository type approach whether via emberdata also lets swap restlocalstoragewebsqlmocks write repo return deferreds make easy support deep linking", "d": "1/2013"}, {"body": "definitely intended initially allowed completely block setting controller content people used additional setup hit nasty surprise controller suddenly set aware usecase wanting set controller use hook tl dr nt want set model controller nt use hook", "d": "1/2013"}, {"body": "sorry misunderstanding model set even model hook implemented causes blank modelcontent set intended", "d": "1/2013"}, {"body": "leepfrog still clear existing content", "d": "1/2013"}, {"body": "markprzepiora nt model hook care controller model undefined", "d": "1/2013"}, {"body": "markprzepiora two questions trying set model controller nt using model hook model hook used things inside ember really using main controller route model set set model immediately setting via afterwards matter setting first", "d": "1/2013"}, {"body": "wycats issue overriding controller method something like thus needs noop else content array set undefined loose cached results markprzepiora easiest workaround either cache content elsewhere like hypothetical least another property like", "d": "1/2013"}, {"body": "run brief confusion controller content reset entering route usecase main application layout showing dropdown listing projects member fetched via ajax originally using hold data full view thing backed controller populated content available everywhere viewing projects page gets wiped end changed storing projects looks like makes sense fact controller projects page really different controller project listing handling different things use data filtering amp ordering two different long story short think behaviour clearing content default actually makes sense makes think structure app routepage controllers different nonroute controllers data available applicationwide exists longer single routesection nt stored primarily single route controller", "d": "1/2013"}, {"body": "nt make sense pass event cases eg router controller made everything consistent believe tomdale idea make useful view", "d": "1/2013"}, {"body": "bad breaking change app building could probably live without event object could eventtarget killer", "d": "1/2013"}, {"body": "internalfx reason could nt make custom view event handler", "d": "1/2013"}, {"body": "discussed bit", "d": "1/2013"}, {"body": "wagenet certainly could sure ember team thought long hard valid reasons removing think hard part impossible guys know framework used wild way along probably would fine fairly large gui toolkit uses frequently nt make sense time make bunch views different things mostly keepin dry created one action assigned multiple elements split evttarget could well create view lot views would exist mostly purpose click method guess argument convenience would convenient way get event object even optional think bug emotional reaction broke app syndrome dealing since started ember hardly considered bug since wycats made clear nt accident gon na close get wycats said api freeze blog true forgiven", "d": "1/2013"}, {"body": "internalfx definitely sorry broke stuff app lot learning us build ember wish known exactly took right first time course never case intend take api freeze seriously intend change existing apis strong case hope helps prevent similar troubles future", "d": "1/2013"}, {"body": "wagenet know mean always know better way build app done building", "d": "1/2013"}, {"body": "problem initializers want register injections need run readiness initializers want look objects container need run injections registered probably readiness solved rails via three initialization phases bootstrap things framework needs anything else happens normal initializers plugins application initializers finisher things need run normal initializers application initializers use stub initializers known names register appropriate times may want precise setup something like work", "d": "1/2013"}, {"body": "sounds reasonable nt overengineer stuff think use cases two emberdata people actually use initializers authentication hooks like documentation suggests", "d": "1/2013"}, {"body": "probably make documentation examples work people nt using probably use later eta", "d": "1/2013"}, {"body": "sent updates documentation really much way examples fleeting mention auth hooks", "d": "1/2013"}, {"body": "general nt expect overriding ember objects ca nt see normal use case serializing views explain bit", "d": "1/2013"}, {"body": "example view consisted svg ember loaded iframe want pass svg parent frame tostring function view makes sense want serialize view special way via xmlserializer course changing name function svgtostring solves issue perhaps somewhere black listing functions offer implementations would use cents", "d": "1/2013"}, {"body": "sirzach right would probably good us provide comprehensive list reserved words somewhere said use something different way use currently greatly eases debugging someone wants submit pr make overriding possible without losing current debugging benefits think open", "d": "1/2013"}, {"body": "fair thanks looking nice mentioned guys call expect still allow others override see expect maybe could add note api docs", "d": "1/2013"}, {"body": "nt maintained ember core team please file issue", "d": "1/2013"}, {"body": "break sections routes functions call one var sectionone function thisresource stuff function var sectiontwo function thisresource morestuff path function approutermap function sectiononecall thisresource thingy sectiontwocall could quite easily add syntactic sugar turn something like approuterdefine sectionone function thisresource stuff function approutermap function thismount sectionone thisresource thingy thismount sectiontwo currently issue router nt work namespaces similar syntax could help support giving namespace", "d": "1/2013"}, {"body": "interesting came feel works intended purpose keeps nice level abstraction high level route maintaining context emberroutermap javascript define ember appsapp function ember app javascript define appsapp routesdataroute function app dataroute", "d": "1/2013"}, {"body": "works leaving open hopes elegant solution", "d": "1/2013"}, {"body": "like functionality", "d": "1/2013"}, {"body": "seems generally superseded", "d": "1/2013"}, {"body": "believe tom commit intended address moving able control target child contexts", "d": "1/2013"}, {"body": "latest build available nt automatically generated yet think wagenet working hopefully soon", "d": "1/2013"}, {"body": "javierav rlivsey anyone commit access repo run even work forks want happen travis able run gets commits master", "d": "1/2013"}, {"body": "travis run really good idea", "d": "1/2013"}, {"body": "pointing docs guide starting point", "d": "1/2013"}, {"body": "leepfrog josepjaume could one write failing test", "d": "1/2013"}, {"body": "wycats says almost certainly using handlebars actually let know reopen", "d": "1/2013"}, {"body": "wagenet occurred handlebars", "d": "1/2013"}, {"body": "yes afraid handlebars", "d": "1/2013"}, {"body": "fact pr nt seem fix bug although solves one pointed", "d": "1/2013"}, {"body": "leepfrog josepjaume guys using emberrails", "d": "1/2013"}, {"body": "wycats c", "d": "1/2013"}, {"body": "leepfrog clarify emberrails bug needs new release", "d": "1/2013"}, {"body": "right class properties working bindings example though update read without waiting bindings sync put call write read still nt work binding class property think better shows problem", "d": "1/2013"}, {"body": "totally thanks help", "d": "1/2013"}, {"body": "cases really need property class use computed properties instead bindings javascript appfoo emobjectextend appfooreopenclass count appbar emobjectextend foocount function return emberget appfoocount property appfoocount may cacheability issues properties dependent upon class properties though since class nt nt hooks runloop instances", "d": "1/2013"}, {"body": "updated link issue fiddle relevant try computed properties instead binding thanks", "d": "1/2013"}, {"body": "think even better summary jamesarosen looks right bindings class properties something desired ember cc kselden saw speak emberjs nyc bindingsproperties maybe input", "d": "1/2013"}, {"body": "ember project trouble running rake tasks developing ember", "d": "1/2013"}, {"body": "fixed", "d": "1/2013"}, {"body": "closing favor pr", "d": "1/2013"}, {"body": "pdwinkel care submit pr", "d": "1/2013"}, {"body": "duplicate", "d": "1/2013"}, {"body": "fixed", "d": "1/2013"}, {"body": "issue seems loadingroute rendertemplate invoked early render pipeline even applicationview exists found following illustrative", "d": "1/2013"}, {"body": "believe reason routergethandler method", "d": "1/2013"}, {"body": "zgramana planning send pr", "d": "1/2013"}, {"body": "still need get make reissue tildeio repo also need create tests etc", "d": "1/2013"}, {"body": "please refile website issues page", "d": "1/2013"}, {"body": "confirm bug works textarea textfield works jquery", "d": "1/2013"}, {"body": "done bit investigating got handle going emberviewapplyattributebindings incorrectly using attr using prop getset element properties val getset form field values prior jquery would help people incorrectly using attr take special action certain nodetype input one special cases rather set value attribute used set default value text field setdetermine current value would go ahead update value property element prop used behavior removed place ember using attr get set properties elements needs changed source information", "d": "1/2013"}, {"body": "confirm bug added jquerymigrate project mitigate issue", "d": "1/2013"}, {"body": "see jsfiddle click update name button see updates textfield inline view change text textfield see updates inline view click update name button see updates inline view textfield", "d": "1/2013"}, {"body": "also ran problem well ca nt take time submit patch right revert jquery believe team need look places uses attr library", "d": "1/2013"}, {"body": "little research found weirder expected edit value text field value becomes effectively oneway editing input value value still propagate bound property value reflect changes made property", "d": "1/2013"}, {"body": "issue could test would appreciate dev build fix thanks", "d": "1/2013"}, {"body": "confirm works jsfiddle longer exhibits bug", "d": "1/2013"}, {"body": "dead long live discussion change commit", "d": "1/2013"}, {"body": "switched get error javascript function resolvedpaths options var types optionsoptionstypesslice uncaught typeerror call method slice undefined data optionsoptionsdata", "d": "1/2013"}, {"body": "shit wrong place anyhow clearly nt bug thanks attention", "d": "1/2013"}, {"body": "krainboltgreene exactly getting slice error", "d": "1/2013"}, {"body": "kaspertidemann might multiple things resource definition b apparently things date well overall suggest going guide updating apis", "d": "1/2013"}, {"body": "updated everything new router many days ago slice error popped latest master earlier today dig see find causing", "d": "1/2013"}, {"body": "right actually still get well pretty sure using latest stuff", "d": "1/2013"}, {"body": "using rails try deleting contents tmpcache started seeing error still using cached templates compiled older version handlebars", "d": "1/2013"}, {"body": "turns due compiled templates using rails sure breaking", "d": "1/2013"}, {"body": "getting slice error could fault continue dig", "d": "1/2013"}, {"body": "problem morning using brunch ember skeleton update handlebars version inside nodemodulesemberhandlebarsbrunchvendor newest version handlebars precompiling templates new version handlebars used", "d": "1/2013"}, {"body": "davidpeeters great detective work exactly problem setup well still uses handlebars version overwriting plugin folder latest file fixed problem", "d": "1/2013"}, {"body": "sounds like bug tooling ember", "d": "1/2013"}, {"body": "still getting slice error updated everything think would interested anyone using rails emberrails gotten work described detail makes think might related emberrails", "d": "1/2013"}, {"body": "aew stackoverflow might good place ask question", "d": "1/2013"}, {"body": "experiencing problem ember latest using linkto handlebars helper issue resolvedpaths expecting optionsoptionstypes exist function resolvedpaths options var types optionsoptionstypesslice data optionsoptionsdata optionsoptionstypes gt undefined gt uncaught typeerror call method slice undefined linkto populate optionsoptionstypes aew", "d": "1/2013"}, {"body": "run day caused emberrails gem date thing finally worked deleting old versions emberrails gem updating gem git repo clearing temp files projects certainly bug ember", "d": "1/2013"}, {"body": "nerdyworm thank solution worked needed uninstall emberrails could make work bug ember", "d": "1/2013"}, {"body": "still seeing error despite everything reason switched older branch back master error returned matter many times emptied think issue ember rails depends barber template compilation barber updated handlebars adding gemfile fix permanently hopefully new release soon", "d": "1/2013"}, {"body": "nragaz thumbsup", "d": "1/2013"}, {"body": "matching issue", "d": "1/2013"}, {"body": "updated compatible handlebars newly published versions master grunt compatible latest grunt compatible cc trek", "d": "1/2013"}, {"body": "getting error using handlebars master branch ember function resolvedpaths options var types optionsoptionstypesslice data optionsoptionsdata types undefined happens linkto helper precompiling emberprecompile", "d": "1/2013"}, {"body": "carlitux almost certainly using old version precompiler", "d": "1/2013"}, {"body": "wagenet option precompile date please", "d": "1/2013"}, {"body": "carlitux try dgeb fork", "d": "1/2013"}, {"body": "new subclass think littleno exception router checks existence hook methods nt call present afaik implement hooks want fire null hooks nt want fire get customized behavior like launching modal instead rendering outlet whatever case probably want use custom hooks send actions authoritative statemanager app might disagree think right way go particularly since often lot intermediate states application nt necessarily coupled linkable url approach identify states need linkable define router anything else needs happen layer use another statemanager manipulated either directly sending user events overridable hooks would nt mind dsl change though either forwarded url change events another target perhaps statemanager chose another parent class instantiate", "d": "1/2013"}, {"body": "function nt actually return anything fixing though nt fix whole problem passed model method empty made progress changing changing might also help show route subresource collection", "d": "1/2013"}, {"body": "james many thanks time fixed return model function downside writing coffeescript time really think js syntax still got wrong real app problem index route worked ok subresource routes could nt replicate exactly edit behaves exactly like app problem implicit index route get paramspostid passed correctly sub routes updated case thanks stephen", "d": "1/2013"}, {"body": "ginty access pare nt resource route model use hook posteditroute nt need implement hook nested edit route never receive params parent route setup model access using modelfor", "d": "1/2013"}, {"body": "nragaz thanks see works final update posterity", "d": "1/2013"}, {"body": "sanfords fyi using still works although output invalid html", "d": "1/2013"}, {"body": "really neat idea thank", "d": "1/2013"}, {"body": "might also consider away altogether style blocks even list elements unless building something like delicious actually lists links might semantically correct anyway personally like main menus", "d": "1/2013"}, {"body": "correct however using comprehensive bootstrap library build ui uses class active block", "d": "1/2013"}, {"body": "discussion", "d": "1/2013"}, {"body": "going close move discussion", "d": "1/2013"}, {"body": "looks like something specific resources changed use routes works expected updated fiddle showing", "d": "1/2013"}, {"body": "another quick look look deeper tomorrow reason ends incorrect appears due bit router checks leaf route parent resource redirected false true earlier never checked drops sets wrong thing sure even getting bit first place though whether aborted route earlier returning handlers infos transitioned fixes issue still called wrong routes templates still rendered incorrectly backtrack try work meant", "d": "1/2013"}, {"body": "rlivsey looks like issue fixed", "d": "1/2013"}, {"body": "wagenet experiencing issue master looks fix things redirecting leaf paths resources still issue far aware", "d": "1/2013"}, {"body": "rlivsey hmm ok wonder redirect leaf states think andor talk wycats", "d": "1/2013"}, {"body": "usecase resource guards contents resources routes check logged base resource redirect opposed check subroutes pretty common pattern however sure best way implementing", "d": "1/2013"}, {"body": "updated fiddle use latest master", "d": "1/2013"}, {"body": "current redirection system handle redirection midroute wagenet says need redirect leaf state said usearch case valid look expanding support might able use implicit index limited cases", "d": "1/2013"}, {"body": "wycats look patch allow midroute redirection gotchas think current implementation would make overly difficult maybe could add assertion nonleaf redirections nt currently supported bit confusing otherwise", "d": "1/2013"}, {"body": "problem setup hook called routerjs would need way cancel propagation inside routerjs use ember nt hard though", "d": "1/2013"}, {"body": "ok great good excuse get intimately familiar router take look tonight tomorrow morning see far get", "d": "1/2013"}, {"body": "step router think understand enough going crack router setupcontexts could check returns false signal abort change route setup return false instead undefined thistransitioned lets us signal ember side transitioning early call enter setup parts router didtransition instead checking last handler transitioned check whether handlers transitioned sound like right track whether setup returning false good enough signal abort kind like dom event handlers returning false stop bubbling", "d": "1/2013"}, {"body": "implemented appears trick whip tests get pull request shortly", "d": "1/2013"}, {"body": "rlivsey wycats wagenet glad talking deciding return false setup cancel transition guys take moment absorb alternative approach teal deered rlivsey approach takes step right direction leaks greatly considering redirect leaf states time return false setup hooks transitionedoutof states already called might destructive teardown logic know lot text think suggest lasting yet still lightweight approach solve problems brought thread well many many others", "d": "1/2013"}, {"body": "machty pull request address point currently redirect leaf states lets redirect anywhere midroute everything else point correct may well larger problem solve request fixing bug current implementation", "d": "1/2013"}, {"body": "rlivsey ah yes correct think fine accept", "d": "1/2013"}, {"body": "looks like associated pr merged", "d": "1/2013"}, {"body": "able comfortable adding additional sugar quite yet revisit shortcuts ember see lot realworld usage thanks feedback keep mind circle back around", "d": "1/2013"}, {"body": "thanks letting us know places documentation date want access raw javascript event use normal event handling object", "d": "1/2013"}, {"body": "like new router change really makes app lot chaotic links app open popover context clicked link eitheror situation context actions event data events makes incredibly difficult", "d": "1/2013"}, {"body": "closealert popovers definitely use case honestly use case seen state changing actions need know event case need know location event triggering element properly position element said accomplish handling event view positioning view element passing event view", "d": "1/2013"}, {"body": "nt see anything like line ember provide information please", "d": "1/2013"}, {"body": "brand new copy ember took site breaks triple quotes", "d": "1/2013"}, {"body": "electricgraffitti escapeattribute function starts emberjs emberprodjs taken master build line seems version somehow different seems like somehow expanded minifiied version something like also missing comments file part quotes files reads", "d": "1/2013"}, {"body": "interesting pulled code chrome clicking download button ember home page", "d": "1/2013"}, {"body": "rlivsey errors say related fact currentproject objectproxy helper also used currentprojectid linkto use currentprojectcontent interresting fact nt know would use needs controller proxied content controller explicitely using currentprojectbinding controllersprojectcontent fine concerning linkto hrefs template rerendered order make link date nt know possible automatically perhaps adding observer linkto helpr added context change", "d": "1/2013"}, {"body": "yeah mainly issue think something sure think proxy nt content exist wonder helper check object content fixed href issue wrapping force block rerendered agree would good happen automagically", "d": "1/2013"}, {"body": "think property objectproxy make sense rails always return true since check actually content need call bit unrelated question using together using way missing something", "d": "1/2013"}, {"body": "alexanderzaytsev makes sense would quite useful binding feels like exposes implementation detail template whereas concept asking whatever controllerview template bound get basically feels natural writing templates change implementation controllersproject controllersprojectcontent controller nt update templates probably make one way binding though never going change end", "d": "1/2013"}, {"body": "rlivsey concerning appears clicking link cause router enter project route projectcontoller context model hook controller projectcontroller sets content property kaboom", "d": "1/2013"}, {"body": "looks like wycats sorted truthiness issue cheers ah makes sense wonder try detect dealing objectproxy try grab actual content instead assume simple checking proxy could wrapped another proxy maybe recursively grab content reaches actual object", "d": "1/2013"}, {"body": "rlivsey still issue", "d": "1/2013"}, {"body": "update fiddle use latest master ember currentproject works show block nt seem ever show select project see block currentprojectcontent show one link href nt update project changes either", "d": "1/2013"}, {"body": "duplicate", "d": "1/2013"}, {"body": "crofty whoops missed", "d": "1/2013"}, {"body": "mspisars fixed headers release still need fix underlying issue nt happen", "d": "1/2013"}, {"body": "dmathieu played bit example seems like route naming issue parameter passed inside eventroute eventindexroute", "d": "1/2013"}, {"body": "right", "d": "1/2013"}, {"body": "got bad thanks", "d": "1/2013"}, {"body": "noticed consolation observe add property dependency seems cover use cases edit", "d": "1/2013"}, {"body": "strong suspicion private api", "d": "1/2013"}, {"body": "wycats suspicion correct", "d": "1/2013"}, {"body": "yes correct", "d": "1/2013"}, {"body": "think issue probably highlights bigger smell valid use cases controllers knowing route application could use set state controllers require information become verbose redundant said certainly bug", "d": "1/2013"}, {"body": "use set application controller", "d": "1/2013"}, {"body": "wagenet hey look exactly thinking case closed book thanks", "d": "1/2013"}, {"body": "use case reality simple need application set css class body tag customized layout previous version used removeclass addclass methods check current state thanks routerget currentstatename read new code indeed seems equivalent old routerget currentstatename set class name binding depending value closed thank", "d": "1/2013"}, {"body": "note nt work hook function computed property nt believe called post already loaded store best pattern would probably promise seems best solution fwiw trying rally support behind would allow properly keep different rendering logic separate route would linkable url offer transition validationhaltingredirects etc etc etc edit almost certainly split render branch logic another function keep model", "d": "1/2013"}, {"body": "could also postcontroller render loading state postview b bind model trigger action router redirects post fully loaded might provide nicer experience user routing would nt delayed", "d": "1/2013"}, {"body": "machty looks like pr correct solution closing superseded nt agree please let know reopen", "d": "1/2013"}, {"body": "looks like explicitly initializing nt need anymore remove line everything work", "d": "1/2013"}, {"body": "pretty sure due line router try use property instead workaround", "d": "1/2013"}, {"body": "recall talking wycats believe something plan support said want tackle pr definitely open considering", "d": "1/2013"}, {"body": "updated looks like working", "d": "1/2013"}, {"body": "irritating specify template future example easiest workaround use helper template instead using outlet calling route template use exist configure properties sidebar controller using however still issue rendering outlet may change eg event see", "d": "1/2013"}, {"body": "fixed master", "d": "1/2013"}, {"body": "oops believe issue", "d": "1/2013"}, {"body": "issue comes line happens however correct approach use route note bug prevents working properly fix master releasing soon", "d": "1/2013"}, {"body": "thanks wagenet changing use model noticed problem combination redirect transitionto another route redirect callback redirecting route still executes model hook problem case using redirect hook check app logged redirect login page model hook called even though redirecting away route fail remote server call load data like dsmodelfind yet authenticated case calling model hook redirect hook actually happening fiddle console output transitioned index model fruitsindexroute redirecting fruitsindexroute transitioned foodvegetablesindex", "d": "1/2013"}, {"body": "issue nt relying routes without dynamic segments probably need make clear documentation even change method name", "d": "1/2013"}, {"body": "conversation wycats suggests documentation issue merits investigation", "d": "1/2013"}, {"body": "changes update router started creating issue app seems like parent route context cleared transition triggered", "d": "1/2013"}, {"body": "possible loss parent route context actually related generating link updated fiddle first use event transition triggered via rather works fine shows link longer route via action via link think router setting handler context undefined generating url link context passed parent route updated fiddle", "d": "1/2013"}, {"body": "due bug routerjs failing test case working solution however helpful fiddles well", "d": "1/2013"}, {"body": "wagenet great thanks update", "d": "1/2013"}, {"body": "struggling bug appeared due commit fixed luckily wrote discuss irc perhaps useful figuring clarify documentation", "d": "1/2013"}, {"body": "wagenet thanks fixes problem essentially issue", "d": "1/2013"}, {"body": "apppostroute model nt called already object provided", "d": "1/2013"}, {"body": "ah makes sense", "d": "1/2013"}, {"body": "discussed recently sounds like wycats looking implementing something handle", "d": "1/2013"}, {"body": "pretty sure addressed", "d": "1/2013"}, {"body": "wagenet works correctly work correctly", "d": "1/2013"}, {"body": "twinturbo upgrade handlebars", "d": "1/2013"}, {"body": "wycats yes", "d": "1/2013"}, {"body": "anybody", "d": "1/2013"}, {"body": "container views nt render template see templates layout part via embercontainerview api documenation template templatename defaulttemplate layout layoutname defaultlayout property container view result template layout rendered html contents embercontainerview dom representation rendered html child views", "d": "1/2013"}, {"body": "indeed saying stackoverflow question seems ca nt template rendered outlet inside child viewtemplate containerview agree naming example might misleading containerview application view child views one children view called container might confusion template outlet try render template view outlet child view container containerview application view nothing rendered would u mind checking master branch github project linked please thx xavier", "d": "1/2013"}, {"body": "hey mike could please tell right meaning described work design would mind putting bug label issue really think one cheers xavier", "d": "1/2013"}, {"body": "mike anybody else", "d": "1/2013"}, {"body": "well hurry anymore switched angularjs would still keen know missed something one cheers", "d": "1/2013"}, {"body": "still would like get answer one", "d": "1/2013"}, {"body": "moment go may want generalpurpose solution still usecasegathering mode moment", "d": "1/2013"}, {"body": "since want use cases let add something wicked identical issue moment app users user dashboard dashboard nested resources purpose comment name groups items user visits see dashboard userid shows public dashboard user therefore user access dashboard either id dashboard rendered differently whether logged user someone else dashboard internals implementation would simplest coffeescript dashboardmapping gt resource group path groupid gt route item path itemid approutermap gt route home path route transittoroute dashboard resource dashboard path getcurrentuserinfo id dashboardmapping resource publicdashboard path userid dashboardmapping obviously current router number conflicts currently seems need different routes group item simplify somehow avoid duplication edited way expressed led inconsistences", "d": "1/2013"}, {"body": "examples deprecated see", "d": "1/2013"}, {"body": "currently call model tell computed properties observers recalculate timer probably good idea", "d": "1/2013"}, {"body": "regard point handlebars helper put together auto updating relative timestamps based code could probably refactored generic timer based updating bound helper", "d": "1/2013"}, {"body": "ivanvanderbyl would use rather darthdeus seems like solves issue please reopen", "d": "1/2013"}, {"body": "ah yes course thinking method wrote one smile", "d": "1/2013"}, {"body": "exactly looking thanks guys", "d": "1/2013"}, {"body": "last week sat conversation tomdale wycats exactly issue naming convention corresponding routes would help ember goal convention configuration generated route controller view objects pretty sure working recent change router initial part", "d": "1/2013"}, {"body": "topfunky thanks reply awesome screencast watched twice already hope take care level organization important larger apps ember one viable options", "d": "1/2013"}, {"body": "see original report", "d": "1/2013"}, {"body": "also related fix hasmany access within init array observers trigger unnecessary materialization new records", "d": "1/2013"}, {"body": "log entry late check explanation", "d": "1/2013"}, {"body": "wildchild following saying nt actually issue", "d": "1/2013"}, {"body": "wagenet think different issue transitions seems ok order logs wrong", "d": "1/2013"}, {"body": "ran bug logging issue currentpath property applicationcontroller still reflects original route new target update fiddle showing incorrect currentpath", "d": "1/2013"}, {"body": "closed", "d": "1/2013"}, {"body": "found situation redirect user profile completion page therefore halting transition looks like really good approach let see jedi council think", "d": "1/2013"}, {"body": "update realized provided context object decide whether transition halted problem depending whether transition caused url change direct provided context context object may serialized form eg might might actually user object address think expect context object following signature enter filter able make decision transition based much information presently available consider following pattern assume user seems clean powerful pattern parameter nothing ternary operator normalize context desired possiblyloaded model check see model loaded halt transition use convenience function new addition start entire transition transitions attempted since note promise devotees might detect false positive design stink since explicitly check something loaded end watching loaded case run future action sounds like perfect job promise unfortunately explicitly check object already loaded determines whether halt transaction use promises always halt retry transition handler run transition landing us back halt retry infinite loop pattern allows following user either navigates clicks button directly tries transition route normalizes context object determines object loaded halts transition optionally app display circular loader indicate transition progress note reason user ca nt try click somewhere else user transitions elsewhere original transition object loads tries retry transition router discard transition request since new transition already taken place note parameters make sense would nt present since loaded context already available alreadyloaded route", "d": "1/2013"}, {"body": "think remove deprecation warning however like deprecate without causing problems", "d": "1/2013"}, {"body": "expected access post id use", "d": "1/2013"}, {"body": "helper result controller item use property", "d": "1/2013"}, {"body": "tchak superb exactly need", "d": "1/2013"}, {"body": "tchak used ember data associations case association arraycontroller", "d": "1/2013"}, {"body": "problem nt belong neither model controller general helper think could create custom helper use sure would work bindings though", "d": "1/2013"}, {"body": "crofty works ember enumerable", "d": "1/2013"}, {"body": "tchak crofty works ember enumerable wrapped ember controller", "d": "1/2013"}, {"body": "wycats guess looking way use ember data associations directly maybe something like result many association per fiddle edit whilst would nice could sort ember data associations directly helper like", "d": "1/2013"}, {"body": "crofty bug related first pass item controllers support exactly case describe version ember", "d": "1/2013"}, {"body": "hjdivad thanks fiddle shows used array controller question ember data associations set fiddle main question issue though handle edit place functionality described common pattern pattern used todo mvc good elegant solution lot people use project evaluate js frameworks thinking dynamic outlets would good idea ie helper would output outlet every item collection url changes correct outlet could replaced edit view", "d": "1/2013"}, {"body": "crofty okay see think yet another example supporting view controllers eg js appcommentscontroller emarraycontrollerextend itemcontroller comment appcommentcontroller emobjectcontrollerextend editing false discussion think", "d": "1/2013"}, {"body": "hjdivad fan approach editing state routable refresh page loses state ideally would able define routes would show editing view place comment managing application state setting flags controller conditionals templates gets complicated quickly example simple one states editing showing soon things want place need start adding flags prefer router amp outlet approach", "d": "1/2013"}, {"body": "crofty think relatively minor tweak would make routable editing needs depend something managed router seems like router set flag something equivalent show list todos one editing place something like even dynamic outlet approach need mechanism decide outlet pick think agree wrong flag model imagine dynamic outlet approach work", "d": "1/2013"}, {"body": "crofty tom solve problem looks like vantage point", "d": "1/2013"}, {"body": "sorry opened website repo", "d": "1/2013"}, {"body": "calling api", "d": "1/2013"}, {"body": "applicationready would assume somehow needs get reference applicationcontroller instance fir method", "d": "1/2013"}, {"body": "linked question think", "d": "1/2013"}, {"body": "right best place probably", "d": "1/2013"}, {"body": "ah applicationroute seems fired matter route hit application launch documented router ill submit pull request website guides", "d": "1/2013"}, {"body": "actually question im moving stackoverflow sorry", "d": "1/2013"}, {"body": "use nested resources nested routes show reallife example nesting bit weird", "d": "1/2013"}, {"body": "wycats sohara see something similar extracted app url like think possible something like sohara would work wycats right last commit", "d": "1/2013"}, {"body": "nested resources one level nt work new dsl source one parent level managed fiddle updated work one level", "d": "1/2013"}, {"body": "starting think run issue soon since gon na need something like course flattened also need sure would make sense", "d": "1/2013"}, {"body": "wycats agreed example overly simplified real world example closer mentioned routes need distinct even though different representations underlying data object example works would need nesting resource attempted got thisresource guess rule thumb use leafterminal nodes got tripped note advising following updated guides note use thisresource urls represent noun thisroute urls represent adjectives verbs modifying nouns thinking routes predicating object along lines show details post show overview post perhaps purposes better think resources", "d": "1/2013"}, {"body": "wooandoo need place inside resource template route template fiddle updated level", "d": "1/2013"}, {"body": "teddyzeenny thanks right updated sample sohara suggestion show wycats wish simple sample created routes index gt indexroute controller postsindex gt postsindexroute controller showdetails gt showdetailsroute controller showindex gt showindexroute controller organize code would index gt indexroute controller postsindex gt postsindexroute controller postsshowdetails gt postsshowdetailsroute controller postsshowindex gt postsshowindexroute controller showdetailroute could created posts users articles response wycats think nice solution repeat parent name hand solution", "d": "1/2013"}, {"body": "yes need specify full route name remember route names start resource names pretty short see routing guide", "d": "1/2013"}, {"body": "yasuyuki inclined say nt explicitly support cygwin consider using vagrant files provide", "d": "1/2013"}, {"body": "nragaz idea happening make failing test case jsfiddle us verify things fixed", "d": "1/2013"}, {"body": "pretty sure issue line", "d": "1/2013"}, {"body": "wagenet yes agree viewname converted camelcase dot notation everything would well started working fiddle sure make actually work could nt find example new router", "d": "1/2013"}, {"body": "fixed allow use dot slash notation render allow", "d": "1/2013"}, {"body": "ok two maybe close older one", "d": "1/2013"}, {"body": "seems also important implications view controller controllers would nice query string could accessed controller least right setting controller property model function support pagination means stuffing query parameters dynamic segments urls look like feels like hack setupcontroller seems appropriate function access params object code would like write really would nice worked box like collections individual records views query string able set view probably linkto helper assuming controller property returns would link probably solutions setting query string open suggestions generally interested feedback ideas sure understanding ember javascript task tackling would love contribute way", "d": "1/2013"}, {"body": "southpolesteve useful comments currently us use dynamic segments params think need extract query string url router lib make agreement providing params controllers maybe use separate method like one wait decisions wycats tomdale", "d": "1/2013"}, {"body": "southpolesteve", "d": "1/2013"}, {"body": "southpolesteve comments valid provide excellent illustrations reason closing issue thanks caligomentis", "d": "1/2013"}, {"body": "domenic pinch could always add statement investigate bit practice think ever call context nt really matter", "d": "1/2013"}, {"body": "gut feeling ones produced callback parameters kind sub router ember taking care creating", "d": "1/2013"}, {"body": "instance dsl could figure search colon find definitions emberjs source code like peter says nt really important normal use", "d": "1/2013"}, {"body": "would good add link api reference people know capabilities available available asis tutorial encouraging cargocult coding without understanding going fact serious misunderstanding case opening issue since want help make ember docs better mind ember developer curious outsider got confused thought feedback would helpful", "d": "1/2013"}, {"body": "nation coffeescript welcomes usage", "d": "1/2013"}, {"body": "moment public methods class nt think link api docs necessarily required disagree", "d": "1/2013"}, {"body": "kind least explicit statement used storing dsl methods ones available honestly think many people expect expect least carry around vague fuzzy equivalence two back head", "d": "1/2013"}, {"body": "issue", "d": "1/2013"}, {"body": "chiming say probably affects stackoverflow post", "d": "1/2013"}, {"body": "encountered problem ca nt access parent route model internal routing works however accessed directly url thing thismodelfor never works internal routing even route maybe nt using thismodelfor solved problem using link edit linkto longer works updated latest master working friday build ember moving fast davissorenson case different problem bug adapterbinding problem check solution", "d": "1/2013"}, {"body": "example updated guides javascript approutermap function thisresource posts thisresource post path posts postid apppostroute emberrouteextend model function params return apppostfind paramspostid", "d": "1/2013"}, {"body": "wildchild doesnt solve problem unfortunately thats getting model noun verb underneath noun", "d": "1/2013"}, {"body": "broken certain scenarios please file bug reports specific scenarios fix soon", "d": "1/2013"}, {"body": "got think bad example guides issue", "d": "1/2013"}, {"body": "someone make failing jsfiddle jsbin really sure issue", "d": "1/2013"}, {"body": "issue reported believe nested route hook executed parent", "d": "1/2013"}, {"body": "likely fixed please try latest master let know resolves problems", "d": "1/2013"}, {"body": "yes solved thanks wagenet", "d": "1/2013"}, {"body": "looks like solved please let know mistaken", "d": "1/2013"}, {"body": "wagenet unfortunately case issue nt solved overall behavior described access directly url work expected plain route inside resource something like javascript approutermap function thisresource objects thisresource object path objects objectid function thisroute configure appobjectconfigureroute emberrouteextend model function params var object thismodelfor object first time object undefined handler called method", "d": "1/2013"}, {"body": "wagenet confirm caligomentis findings still broken first time route called first time object undefined successive calls object indeed show get returned code demonstrates live sorry lack jsfiddle making one last night site went try get one comment link asap", "d": "1/2013"}, {"body": "failing fiddle", "d": "1/2013"}, {"body": "wagenet thanks help creating fiddle irc link repro steps click get log undefined thismodelfor post call see id displayed click home click get log correct model thismodelfor post call see id displayed", "d": "1/2013"}, {"body": "yep issue well symptom seen nt mentioned return need nesting able fill appropriate nested outlet", "d": "1/2013"}, {"body": "walter return params specific route segment whole url", "d": "1/2013"}, {"body": "wagenet take mean using thismodelfor post set nested route model trying", "d": "1/2013"}, {"body": "walter aye modelfor works broken first call route unless using custom actions controllers reference utilize transitionto", "d": "1/2013"}, {"body": "almost fix ready", "d": "1/2013"}, {"body": "fixed", "d": "1/2013"}, {"body": "looks good except internal ember helpers need api passes raw string maybe also would awesome way say certain hash parameters bound", "d": "1/2013"}, {"body": "wycats thinking would apply custom helpers example internal ember helper even make sense offer unbound version etc seem realm reserved ember keywords one thinking", "d": "1/2013"}, {"body": "machty use emberhandlebarsregisterhelper internally changed behavior would break things", "d": "1/2013"}, {"body": "wycats gotcha could say little specifying bound hash parameters would happening helper registration side using helper template", "d": "1/2013"}, {"body": "helper registration side", "d": "1/2013"}, {"body": "", "d": "1/2013"}, {"body": "wycats nt look like supported without adding compiling ember handlebars templates without knownhelper arguments passed seem get sliced nt access options hash think done come knownhelpers get augmented builtin ember helpers seems like fix problem edit completely incorrect bitten chrome optimization", "d": "1/2013"}, {"body": "issues come since starting realized raw helpers ie declared present receive raw strings bound helper functions receive alreadylookedup property values still make sense make move registerhelper registerrawhelper registerboundhelper registerhelper bound helpers presently accept one argument single property reason nt expand accept arbitrary number arguments eg", "d": "1/2013"}, {"body": "wycats also would awesome way say certain hash parameters bound would nt solved making possible pass bound property helper assume properties params hash unbound", "d": "1/2013"}, {"body": "think point reason enough leave separate method regards point could make sense lookup parameters also create bindings properties end eg thinking come place store raw parameter values fix", "d": "1/2013"}, {"body": "machty superseded pulled still want open unification approach considering", "d": "1/2013"}, {"body": "wycats yes issue closed decided unify names reason ghempton provided", "d": "1/2013"}, {"body": "sounds like plans discussed", "d": "1/2013"}, {"body": "thx know problem deep far solution bind data view logic view", "d": "1/2013"}, {"body": "think problem duplicated recent work", "d": "1/2013"}, {"body": "something discussing", "d": "1/2013"}, {"body": "wagenet bother taking stab big enough let core handle", "d": "1/2013"}, {"body": "bcardella normally say go case however part bigger discussion still resolving would hate work something line solution", "d": "1/2013"}, {"body": "oops bcardarella", "d": "1/2013"}, {"body": "wagenet makes sense look forward seeing solution", "d": "1/2013"}, {"body": "bcardarella actually going leave open make sure address case", "d": "1/2013"}, {"body": "believe better solution would make possibility explicitly specify endpoint route shortly", "d": "1/2013"}, {"body": "bcardarella saw latest router api solve use case singular routes", "d": "1/2013"}, {"body": "mankind closing", "d": "1/2013"}, {"body": "darthdeus router property try use distinct action names", "d": "1/2013"}, {"body": "oh thought target uses keywords realize property makes sense thanks", "d": "1/2013"}, {"body": "ah arguments interpreted context treated literals shows working documentation nt specify parameters keys context", "d": "1/2013"}, {"body": "design way pass literals action handler times would greatly simplified code able say pass string argument action handler nt seem like possible perhaps behavior could modified pass hash handler la action goto place tacobell allow", "d": "1/2013"}, {"body": "would love way pass literals understand choice mean otherwise would impossible pass rich objects models controllers etc target", "d": "1/2013"}, {"body": "macht hash syntax creates another ambiguity takes options hash last argument things like think way let people choose either semantic new syntax like means means whether syntax desirable api simplicity standpoint nt opinion would nice regular old quotes could serve purpose since concept everybody already understands afaik handlebars already uses let control tokenization", "d": "1/2013"}, {"body": "planning make possible string mode detect whether user used strings said lack explicit string requirement causes people pretty loose suspect adding strictness would break things", "d": "1/2013"}, {"body": "wonder controller correctly looked suspect action targetting wrong controller either ther usersformcontroller anonymous one usersformcontroller defined would possible debug point tell controller perhaps simply use render usersform controllerthis", "d": "1/2013"}, {"body": "bcardarella first need set target controller action helper controller allrady default target forwards router think problem render create new controller probably", "d": "1/2013"}, {"body": "tchak passing usefull think already refers usersnewcontroller controller work please forgive believed understand something wrong", "d": "1/2013"}, {"body": "right actually passing blow whole thing edited comment controller name reference", "d": "1/2013"}, {"body": "tchak thanks render controller nameofthecontroller must used although pitty think sensible refactoring beeing able using", "d": "1/2013"}, {"body": "yes turns pass name controller however think would nice shortcut rendering template within template wanted keep current context nt type name controller currently guess similar rails templates might necessitate helper method automatically something like would expand thoughts", "d": "1/2013"}, {"body": "sure behavior one given template helper", "d": "1/2013"}, {"body": "bcardarella looking rails like partial ember template helper handlebars sufficient extracted answer stackoverflow link got precompiled template embertemplates hash template sometemplate inject template similar rails partial tchak reason approach work update knowledge ooops saw added something similar posted suggestion following search stackoverflow link still leave", "d": "1/2013"}, {"body": "mankind using template helper order try reuse templates multiple views problem way pass new context basically right using template mytemplate inline template imagine using name mytemplate would use two differents parent templates different context keep mind context must provide property curently find render helper much better underlying rendered view real context controller default using render mytemplate lookup instance bind mytemplatecontroller perhaps could improve controller lookup strategy fallbacking current controller neither specific controller passed options hash neither controller mytemplatecontroller exists cc tchak thoughts", "d": "1/2013"}, {"body": "agree render helper better since real context using template helper wo nt thesame tchak correct seems thinking wrong along wo nt inlining template template mytemplate mean parent template use context without needing specify insert template parenta takes context parenta insert parentb take context parentb means automatically lookup parentatemplateview parentbtemplateview instances respectively also bind controllers", "d": "1/2013"}, {"body": "yes exactly want thank much", "d": "1/2013"}, {"body": "closed still felt need update run future partial helper added rails like partial template helper longer work future like rails use leading underscore partial template name short part taken emberjs test file partial helper actual commit add partial", "d": "1/2013"}, {"body": "thanks report behavior bubbles default disabled via", "d": "1/2013"}, {"body": "really avoid extensive use htmlinline template application geting bigger consider use build tool recommend", "d": "1/2013"}, {"body": "nt use ruby rails stack ca nt use something like say avoid use htmlinline template development perspective ie better separation concerns thats exactly trying achieve code separation client side fact since posted question considered could benefits client side includes like improved caching files nt change much like layouts etc", "d": "1/2013"}, {"body": "mansona consider precompiling templates bundle rest javascript files try grunt using ruby well know ruby use iridium used dev right tool right job know", "d": "1/2013"}, {"body": "mansona inline templates never great solution many many templates project handlebars needs parasecompile runtime eventually take amount time results unsatisfactory user experience tchak advice sound inline ok demonstrations build tools eventual need maintain shows setup using node exposes little ruby developer projects many languages help solve said like investigate opening pull request think giving people additional options great", "d": "1/2013"}, {"body": "since commit looks like behavior describe could check please", "d": "1/2013"}, {"body": "behavior changed yes class names changed eg still feels redundant would nt better everything named last segment eg case routes organization id router looks like would much rather routes called instead dashboard going", "d": "1/2013"}, {"body": "sebastianseilund way wo nt able one route case might ok others much", "d": "1/2013"}, {"body": "alexanderzaytsev right makes much sense calling dashboards different names example imo proposal makes names shorter almost cases", "d": "1/2013"}, {"body": "sebastianseilund template name think case unnecessary repetition", "d": "1/2013"}, {"body": "userdashboardhbs user", "d": "1/2013"}, {"body": "also later stage move around routes nt need update class names stuff since keeps name", "d": "1/2013"}, {"body": "templates one directory nt convenient app grows become mess fast think separate directories preferred approach like rails", "d": "1/2013"}, {"body": "good point nobody wants guess easily live front stuff thanks input nice day", "d": "1/2013"}, {"body": "twinturbo going fix noncritical bugs old router anymore suspect issue resolved master updated controller semantics", "d": "1/2013"}, {"body": "twinturbo please reopen ca nt make work new router", "d": "1/2013"}, {"body": "bcardarella use", "d": "1/2013"}, {"body": "perfect thank thursday january paul chavard wrote bcardarella use render sidebar reply email directly view github brian cardarella principal dockyard visit us call us dockyrd follow twitter follow us twitter", "d": "1/2013"}, {"body": "tchak thank works great", "d": "1/2013"}, {"body": "bcardarella behaviour describing vas reverted du potential conflicts model classes see", "d": "1/2013"}, {"body": "correct approach would naming convention create would template seems lot references issues clear current working implementation master mean templates also good practice", "d": "1/2013"}, {"body": "since router example nested post route map following new route", "d": "1/2013"}, {"body": "lcoq index route template views named controller", "d": "1/2013"}, {"body": "darthdeus think index route optional created default therefore work without nt need one assume postsnew postspost bee inserted postshandlebars outlet view name think postspostview postsview good one", "d": "1/2013"}, {"body": "outlet mean always define template outlet going generated default", "d": "1/2013"}, {"body": "guess define sure say try see sorry nt yet know exactly use latest commit", "d": "1/2013"}, {"body": "tchak thank paul quick response close happen know fix temporary plan move namespaced routes prior", "d": "1/2013"}, {"body": "bcardarella personal preference stay like seems going way feel free weight suggestions", "d": "1/2013"}, {"body": "perhaps since pr merged", "d": "1/2013"}, {"body": "tried fix proposed nt solve issue debugged issue point realized views sometimes wrong children listed childviews attribute case add new document popup appears foreachchildview method gets called point time childviews attribute contains wrong views ember unregisters actions within views including add new document button action therefore add new document button nt action associated timing issue framework tries deal removed views wrong children listed childviews incorrectly set since creation view view represents add new document popup ie uploaddocumentview wrong views childviews belong body outlet however uploaddocumentview belongs popup outlet nt make sense childviews list uploaddocumentview views belong outlet different outlet uploaddocumentview belongs", "d": "1/2013"}, {"body": "kalien guess something altering dom outside normal view dom management maybe plugin issue jquery synthesis focus events synchronously dom manipulation", "d": "1/2013"}, {"body": "kalien suspect kselden right ensure another plugin please let us know revisit", "d": "1/2013"}, {"body": "design using function instead need run code depends statemanager fully made transition", "d": "1/2013"}, {"body": "thanx works expected good know entering state mean already state find hint docs", "d": "1/2013"}, {"body": "send event route handle events first go controller bubble route hierarchy", "d": "1/2013"}, {"body": "thanks event handler controller instead bubbling router", "d": "1/2013"}, {"body": "wycats appropriate method hide rendered template ie example user clicks ok confirmation dialog would remove view", "d": "1/2013"}, {"body": "right way hide template nragaz figured", "d": "1/2013"}, {"body": "issue also brought", "d": "1/2013"}, {"body": "right hated idea going turbolinks ember cc tomdale", "d": "1/2013"}, {"body": "wait", "d": "1/2013"}, {"body": "alternative namespace add model model names appblogmodel instead appblog part naming convention", "d": "1/2013"}, {"body": "cry cry sob sob scream scream", "d": "1/2013"}, {"body": "finnadie gun", "d": "1/2013"}, {"body": "tchak everything going fine breeeeeathe", "d": "1/2013"}, {"body": "everything going fine everything going fine everything going fine everything going fine screamcat", "d": "1/2013"}, {"body": "tchak nt worry yehuda wild cat screamcat", "d": "1/2013"}, {"body": "yes serious issue ember turbolinks", "d": "1/2013"}, {"body": "us", "d": "1/2013"}, {"body": "would terribleimpossible appblog act model namespace", "d": "1/2013"}, {"body": "fixed master", "d": "1/2013"}, {"body": "future readers fixed", "d": "1/2013"}, {"body": "tested master seems models still overwritten", "d": "1/2013"}, {"body": "fixed", "d": "1/2013"}, {"body": "biting sign app toplevel route supposed set service want work ie see messages service want redirect new signins home route like calling home route triggers method route triggering method toplevel route service nt set anywhere nt know messages fetch", "d": "1/2013"}, {"body": "nopik nragaz nt expect entirely solve problem see improves things", "d": "1/2013"}, {"body": "actually current master head seems even worse routes approutermap function match match home function match match postid post function match match commentid comment jumping homeroute postindexroute longer triggers postroute ie postindexroutemodel called without context see", "d": "1/2013"}, {"body": "still issue root problem seems use triggers nested route parent", "d": "1/2013"}, {"body": "fixed still called entering via url context pass via set route current model", "d": "1/2013"}, {"body": "try fresh clone master", "d": "1/2013"}, {"body": "tried already forget mention makes difference produces exact error edit maybe also mention example emberdata builds fine", "d": "1/2013"}, {"body": "exact issue trying build emberjs windows fresh install ruby bundle install completing without errors ubuntu usually work getting different errors hours trying seems impossible build emberjs point annoying trying get new router features build available yet", "d": "1/2013"}, {"body": "eltehupkes found building emberdata produces emberjs recent one find downloads moment im using still quite date though may help little bit", "d": "1/2013"}, {"body": "rolus hrm buliding emberdata gives december one actually even slightly recent new router something last week though think nowhere nearly recent enough thanks tip though", "d": "1/2013"}, {"body": "eltehupkes using emberjs distmodulesemberjs", "d": "1/2013"}, {"body": "huh nt know got something better emberdata ran rake ember update fetched emberjs built without errors know weird right ran rake dist distmodulesemberjs", "d": "1/2013"}, {"body": "superseded", "d": "1/2013"}, {"body": "one case running latest emberdata emberjs need delay aggregate calculation set child models actually loaded materialzed discussion asking documented api notifying computed property otherwise items collection available", "d": "1/2013"}, {"body": "think design supposed provide model second argument example url generated using model id refreshing navigating url manually id need find model sure use id probably need override", "d": "1/2013"}, {"body": "model hook executes convert url model coming inside app supply model directly lroza explained", "d": "1/2013"}, {"body": "obviously understanding something trying use link get collection models filtered first model case trying redirect view displays list selected student classes working far getting collection classes goes supply model directly route handler transition classindex get access list classes passed", "d": "1/2013"}, {"body": "see code particular router definition would helpful thanks", "d": "1/2013"}, {"body": "sure javascript approutermap function match match home match studentidclasses classes function match match classindex match id classdetails match students students", "d": "1/2013"}, {"body": "quick question nt using ember data association instead trying query js appclassindexroute emberrouteextend model function return thismodelfor student get classes appstudentsroute emberrouteextend events filterclasses function student thistransitionto classindex student bottom line ca nt update static segment new model definition model determined statically case static association", "d": "1/2013"}, {"body": "", "d": "1/2013"}, {"body": "nt set emberselect observe run", "d": "1/2013"}, {"body": "mehulkar suggestion correct way things questions stackoverflow good place ask", "d": "1/2013"}, {"body": "mehulkar wagenet mentioned issueproblem confusing u provide kind feature general", "d": "1/2013"}, {"body": "thecodejack far know helpers generally used handlebars helpers really wanted may able something like think helper", "d": "1/2013"}, {"body": "ok thanksi think workand better option adding observer", "d": "1/2013"}, {"body": "jamesrosen ideas implement would love pr", "d": "1/2013"}, {"body": "bug clearly documented though fixtureadapter ids represented string see", "d": "1/2013"}, {"body": "okay fact emberjs data api crashes case without exception problem ps thank solution", "d": "1/2013"}, {"body": "definitely make fixture adapter coerce ids strings", "d": "1/2013"}, {"body": "got issue following exception appear console", "d": "1/2013"}, {"body": "please file bug ember data loading data fixtures coerce data strings", "d": "1/2013"}, {"body": "done", "d": "1/2013"}, {"body": "based pull request appears implemented use however instead synthesizing access", "d": "1/2013"}, {"body": "true made issue pr close", "d": "1/2013"}, {"body": "chime also came across issue seems fairly nice pattern setup multiple controllers route setupcontrollers use template place want comments view appear seems supported see setupcontrollers also deprecated setupcontroller suggests pattern ember way reference fact default behaviour auto load single controller instance", "d": "1/2013"}, {"body": "working solution would allow specify controller class viewwidget scope lifecycle current controller current controller goes away content swapped widget controller would disposed well sound", "d": "1/2013"}, {"body": "sounds good dispose conditions would ever naturally happen changing routes anyway without seeing api seem like unnecessary layer could intuitively handled via setupcontrollers view appcommentsview would automatically look commentscontroller instance alternatively view appcommentsview controllername commentscontroller anyway good know solution pipeline either way thanks", "d": "1/2013"}, {"body": "wycats sounds perfect thanks", "d": "1/2013"}, {"body": "thx sounds like great solution", "d": "1/2013"}, {"body": "future readers workaround", "d": "1/2013"}, {"body": "things nt use use route represents single model several models easiest path would nest routes handler blog model handler blog post model really sold dynamic segments could something like js apppostroute emberrouteextend model function params return blog appblogfind paramsblogid post apppostfind paramspostid serialize function object return blogid objectblogget id postid objectpostget id template would able handlebars blogtitle posttitle postbody however strongly recommend model router handler handles single model passes model along template", "d": "1/2013"}, {"body": "wycats contain", "d": "1/2013"}, {"body": "wondering ca nt use model build required link really violates ember way actually nt wan na pass models build pass like rails helper", "d": "1/2013"}, {"body": "seems point description captured", "d": "1/2013"}, {"body": "answers follows use get parent context fixed also fixed pass promise via nt anything special intend want special behavior resolve promise calling misunderstanding point please let know reopen", "d": "1/2013"}, {"body": "wagenet use thismodelfor parentname get parent context ok using unable use fix fixed fixed children still runs also fixed fixed thank pass promise via transitionto nt anything special intend want special behavior resolve promise calling transitionto never pass promise via transitionto returns promises check fiddle according wycats model hook returns promise router moves loading handler waits promise resolve understand right never get promise hook returns promise note applies direct url access step step transition works expected nt direct url access behave like regular transition check updated fiddle direct url fiddle reproducing", "d": "1/2013"}, {"body": "ok looks like covered misunderstood wycats ember data objects models promises yes get promise returned ember data objects also promises", "d": "1/2013"}, {"body": "misunderstood wycats ember data objects models promises yes get promise returned ember data objects also promises wagenet probably misunderstood instead could clearer get promise returned nt use ember data fiddle example works looking docs packagesemberroutinglibvendorrouterjs works work nested routes nested model depends parent must use child route hook return promise parent model instead instance retrieve children need id parent nt think router behave like turns hell promises resolves hook also wait promise resolved setting exactly wanted say", "d": "1/2013"}, {"body": "wildchild ok think understand saying look", "d": "1/2013"}, {"body": "wildchild since remaining issue pretty well encapsulated going reopen one", "d": "1/2013"}, {"body": "able", "d": "1/2013"}, {"body": "additionally think additional method added returns template name use route would allow easily change template want use wo override rendertemplates works", "d": "1/2013"}, {"body": "longer case master", "d": "1/2013"}, {"body": "makes lot sense downside change see order override default template route need explicitly specify current controller route example instead need still associate current controller rendered template still tend favor change since default controller template probably driven template route also lead generally cleaner code", "d": "1/2013"}, {"body": "dgeb leepfrog entire sure someone would route template named controller named named explain example", "d": "1/2013"}, {"body": "wycats agree improbable controller template mismatch passing extremely rare think much likely route nt match controller template pair instance take look ember rails example addcontactroute reuses template controller matches template route could still call instead bottom line example comment highly unlikely nt see reason go ahead change", "d": "1/2013"}, {"body": "pull request addresses issue", "d": "1/2013"}, {"body": "pr merged", "d": "1/2013"}, {"body": "one thing comes mind custom nonidempotent users plugin might write code little differently perhaps use new hooks introduced plugin hey figure already groomed turbolinks nt big deal", "d": "1/2013"}, {"body": "project currently developing ember use rake pipeline compilation process guard run command whenever file js handlebars yml changes guard notified compiled reload page would quite interesting update parts application without refresh think quite difficult exception templates", "d": "1/2013"}, {"body": "nt think possible right simple mechanism replacing template immediately update dom wherever template used however definitely possible something worth attempting would require tracking live views templates used making possible property trigger rerender would necessary make sure views already dom updating enough future renders", "d": "1/2013"}, {"body": "check updated fiddle must name route", "d": "1/2013"}, {"body": "thank sir gentleman scholar", "d": "1/2013"}, {"body": "need named particular unique name already declared name parent route", "d": "1/2013"}, {"body": "nevermind looks like documentation date", "d": "1/2013"}, {"body": "nesting want insert template words nt work desire share model", "d": "1/2013"}, {"body": "problem template outlet nuked enter trying share model would recommend template instead structure templates like", "d": "1/2013"}, {"body": "would recommend template thanks makes sense desire share model model nested structure actually dummy example real app ca nt retrieve nested model without parent model thus routes must nested also looks much better could something like internal stack instead nuking outlets familiar internals sorry proposing something weird feel free close issue design always", "d": "1/2013"}, {"body": "wildchild sure yet ember means template outlet plug case though creating template nt want plug template leads believe nt actually want template instead want single template posts another individual posts definitely better error message regardless", "d": "1/2013"}, {"body": "got removed template app thank much guess behaviour make much pain case nested routes markup requires rendered parent ca nt imagine cases right knows sometimes requirements weird definitely better error message regardless also would cool mention guides", "d": "1/2013"}, {"body": "going make exception render ancestor outlet direct parent", "d": "1/2013"}, {"body": "use templates nt need default context controller validity ember data using restadapter ember data flag become false server returns access specific errors server error hash assuming provides one via redirection router probably want router handle transition js appnewuserroute emberrouteextend model function return appusercreaterecord events save function user userone didcreate function thistransitionto showuser user template note improve time common usecases become fleshed validation timing case user nt made changes text field field become invalid object created form submitted", "d": "1/2013"}, {"body": "wow thanks detailed response helps lot validation timing issue one properties actually changed caused validation property recalculate show error still one question though already client side validations probably want prevent user submitting form invalid show errors basically question trigger calculation like properties errors show even property bound change add something like handler javascript save function user userget usernameinvalid alert username invalid return false userone didcreate function thistransitionto showuser user thisget store commit user loads form clicks submit wo nt trigger conditional property calculated yet", "d": "1/2013"}, {"body": "afaik best practices kind validation still evolving would really helpful know approaching problem maybe establish patterns common use cases darthdeus sounds like root issue getting handle validation separate display errors words field invalid blank mean want tell user maybe want something view layer hides error messages particular field modified", "d": "1/2013"}, {"body": "mikegrassotti also like hear others handle sorts things particularly multipage forms menu items let navigate previously visited step form past current step form filled validations passed something working involves connectoutlet setting property controller particular step visited links view display differently depending little messy imo would love see others handle sort thing", "d": "1/2013"}, {"body": "using userone didcreate function thistransitionto showuser user end url like usersnull although server returns id transitionto user users list get url id consolelog user shows id gets lost transitionto user data gets rendered correctly", "d": "1/2013"}, {"body": "wycats agree raila seeing appears event firing ajax request cycle completed instead attached observers onto attribute waiting change bug", "d": "1/2013"}, {"body": "case vs", "d": "1/2013"}, {"body": "problem", "d": "1/2013"}, {"body": "happily write patch nt clear begin tests emberrouting emberapplication seem routing tests", "d": "1/2013"}, {"body": "problem", "d": "1/2013"}, {"body": "probably external lib vendored part emberrouting", "d": "1/2013"}, {"body": "trek thank dig", "d": "1/2013"}, {"body": "ok sent patch leave open still technically broken ember updated vendored version comes", "d": "1/2013"}, {"body": "yes please leave issue open close resolved", "d": "1/2013"}, {"body": "curious way get typing url manually", "d": "1/2013"}, {"body": "rails back ends generate links like mention rails swallows trailing slash sunday january jakub arnold wrote curious way get users typing url manually reply email directly view github brian cardarella principal dockyard visit us call us dockyrd follow twitter follow us twitter", "d": "1/2013"}, {"body": "wycats snag bcardarella test", "d": "1/2013"}, {"body": "trek wycats wrote test routerecognizer library", "d": "1/2013"}, {"body": "current controller bubble controller current route route hierarchy", "d": "1/2013"}, {"body": "excellent thanks blazing quick reply", "d": "1/2013"}, {"body": "fixed need improvements check jsdump much larger much robust", "d": "1/2013"}, {"body": "interested", "d": "1/2013"}, {"body": "following problem dependencies shipped together ember distribution would like include ember without exposing new global variables using amd distribution dependencies using internal microloader pull dependencies internal usage created small loader internal use discussions jrburke allows us compose standardissue amd modules exported ember variable using almond could get much smaller internal loader support things like amd plugins hooks exposing loader tiny purposebuilt internal dependencies people want use amd apps use robust loader like requirejs almond using load external dependencies people use whatever solution want resolve dependencies probably good guide using ember modules especially modules mature future", "d": "1/2013"}, {"body": "believe case code example wrong", "d": "1/2013"}, {"body": "fixed signature", "d": "1/2013"}, {"body": "beginners trying use old routing pity nt begin current master", "d": "1/2013"}, {"body": "release pretty soon nt make promises backcompat right second want make sure get api right feedback early adopters crucial stage", "d": "1/2013"}, {"body": "try best order give feedback questions especially users struggled", "d": "1/2013"}, {"body": "think making new build would great idea started using ember last two weeks super confusing documentation public site totally sync downloadable code site", "d": "1/2013"}, {"body": "api documents docs emberlatest causing issues", "d": "1/2013"}, {"body": "adityav true since docs new router anyway one thing help helping people jsfiddle find personally pretty confusing different people irc different builds ember different bugs even referencing bugs issues", "d": "1/2013"}, {"body": "darthdeus checked api docs check sha shown top left guides refer emberlatest", "d": "1/2013"}, {"body": "adityav sorry bad thought meant guides hearnoevil", "d": "1/2013"}, {"body": "let try get done tomorrow", "d": "1/2013"}, {"body": "starting new project today perfect timing", "d": "1/2013"}, {"body": "one early adopters would really like know gets done code api guides version guys try make happen also future namespace docs site something like idea", "d": "1/2013"}, {"body": "mansona think great idea kinda like edge rails guides favor core team spending ton time docs home stretch definitely afterwards managed new api breaking changes", "d": "1/2013"}, {"body": "would good also keep examples updated maybe add complete example working emberdata implementation thanks", "d": "1/2013"}, {"body": "find guides guides link pretty frustrating new release updated doc frustrating old guides explaining router", "d": "1/2013"}, {"body": "easiest way might clone emberweb machine checkout older revision buildrun site locally also going included coming release build master going reasonably close release", "d": "1/2013"}, {"body": "wycats nt quite get done tomorrow idea hold dependancies", "d": "1/2013"}, {"body": "mansona still outstanding critical bugs example", "d": "1/2013"}, {"body": "marktheunissen cheers tis good know watching", "d": "1/2013"}, {"body": "hopefully objections closing issue originally intended point mismatch docs js website clear still critical blockers preventing sure resolved see new build cheers", "d": "1/2013"}, {"body": "example list items often useful respond clicks certain elements listing without create rumbling herd subviews stop propagation event", "d": "1/2013"}, {"body": "first argument second", "d": "1/2013"}, {"body": "", "d": "1/2013"}, {"body": "one example useful wrapping party ui widgets ember example twitter bootstrap several methods rely event object although ways work around issues becomes increasingly difficult simply grab widget add application also cases retrigger even parent element action stops event bubbling widgets rely example twitter bootstrap drop menu would normally close add custom code manually handle situation work arounds cases dealing event directly best idea useful removing access completely really impact development", "d": "1/2013"}, {"body": "cloke trying via helper via listens appropriate events", "d": "1/2013"}, {"body": "realityendshere darthdeus lfridael want filter elements listing get access anything current scope example need access dom", "d": "1/2013"}, {"body": "wycats previously app contained listing items clicking certain elements within listing would perform specific action ie select item prevent event bubbling containing element causing opposing action ie deselect listings determine modifier keys pressed time click modify action ie select range toggle selection state given item method managing selected items mixed collection view level list item used action helper call selectlistitem method selectable mixin created app address removal event object action callback method signature stopped using action helper placed click method item view intercept click events identify pressed modifier keys call updated version mixin selectlistitem method satisfactory likely better resolution specific problem said unless missing something action helpers address needs listed first paragraph original event contain data pointer position active modifier keys could useful shorthand communicating related views eg list item parent collection view certainly understand desire deter developers sending dom events controllers original event data still used views intermediate iteration simple action complex event handling method send events along nonember widgets", "d": "1/2013"}, {"body": "realityendshere correct want dom event handling via view event handlers via remember events bubble view hierarchy via normal dom bubbling simply register event handlers parent view things work expected", "d": "1/2013"}, {"body": "case want access accessing pagex pagey targeting view turn generating higherlevel event realityendshere suggesting seems like reasonable pattern handle creating subview every location track user clicks rather add parent view filter generating element lot less terse one view several different click methods one tracks location assume significant performance gain passing evt otherwise seems sort arbitrary useful able access familiar javascript event information", "d": "1/2013"}, {"body": "annnd checking master see route longer extends state object instead closing curious get metadata route ie name path", "d": "1/2013"}, {"body": "probably would implement real app got idea register templates loader dependencies injections made via container api javascript define hds apptemplatesmytemplate function mytemplate", "d": "1/2013"}, {"body": "tchak precisely use involve route", "d": "1/2013"}, {"body": "would really nice convention since chosing right name routes hard examples vs vs vs etc", "d": "1/2013"}, {"body": "", "d": "1/2013"}, {"body": "submitted allow please could", "d": "1/2013"}, {"body": "closing favor", "d": "1/2013"}, {"body": "use", "d": "1/2013"}, {"body": "new record non resolved promise ruter get stuck loading state definitely bug would advise create set new models directly inside setupcontrollers method", "d": "1/2013"}, {"body": "tchak mean router always waits model unresolved understand correctly case model something loaded asynchronously", "d": "1/2013"}, {"body": "tchak darthdeus someone submit pull request make newly created models immediately trigger didload right place would", "d": "1/2013"}, {"body": "wycats done", "d": "1/2013"}, {"body": "fixed", "d": "1/2013"}, {"body": "want default behavior need call super", "d": "1/2013"}, {"body": "ah tried calling nt know apply part thanks", "d": "1/2013"}, {"body": "ember unlike ruby call super original arguments", "d": "1/2013"}, {"body": "tchak good know merci smile", "d": "1/2013"}, {"body": "seems like page reload always return memory ember nt control browser handles reloads seems like chrome bug", "d": "1/2013"}, {"body": "wagenet seem like chrome bug fact occur may something mitigate time isolate commit introduces commit take thorough look tonight", "d": "1/2013"}, {"body": "invistigation kselden narrowed first rsvp commit confirmed related use mutationobserver related chrome issue continuing investigate", "d": "1/2013"}, {"body": "looks like chrome issue fixed nov stable yet end", "d": "1/2013"}, {"body": "confirmed paulirish fixed chrome", "d": "1/2013"}, {"body": "stefanpenner looks like got able since jump hoops work get around blocks github said manually applying commits since released help find leaks appeared able apply commits leaks sight keep trying commits confirm changes contributing issue since main reason started looking leaking navigating page ember included", "d": "1/2013"}, {"body": "wagenet thanks confirming particular leak nt affecting ie mutationobservers present anything newer firefox webkit leaking ie may separate issue keep us posted also might useful profiling ghetto poc workaround used kselden ideas waiting hear back wycats talking chrome dev actually fixed issue chrome", "d": "1/2013"}, {"body": "familiar gitbisect would useful tool", "d": "1/2013"}, {"body": "fixed isolate ie issues please file new ticket", "d": "1/2013"}, {"body": "hotfix", "d": "1/2013"}, {"body": "would useful", "d": "1/2013"}, {"body": "ghempton got thoughts", "d": "1/2013"}, {"body": "seems good expose information would trivial implement need agree api seems like good place", "d": "1/2013"}, {"body": "", "d": "1/2013"}, {"body": "use api", "d": "1/2013"}, {"body": "working referenced issue supporting multiple properties eg issue exposing array", "d": "1/2013"}, {"body": "confirm seeing behaviour app", "d": "1/2013"}, {"body": "issue view block helper", "d": "1/2013"}, {"body": "see implementation always binds property immediate parent view happening either property needs get smarter inheriting parent views need sophisticated binding logic", "d": "1/2013"}, {"body": "fixed merging", "d": "1/2013"}, {"body": "updates", "d": "1/2013"}, {"body": "nested templates subdirectories specify view javascript apppostsview emberviewextend templatename postsposts works approutermap function match match index match posts posts function match match postindex match new newpost particular case app directory inside rails javascripts assets directory inside app directory template directory resulting template paths like apptemplatesposts added config object app use get correct path template js appconfig templatepath function viewname return apptemplates viewname apppostsview emberviewextend templatename appconfigtemplatepath posts think clean solution point likely would create view object hand anyway handle user events etc", "d": "1/2013"}, {"body": "thinking issue moment stay tuned smile", "d": "1/2013"}, {"body": "wycats thanks looking levelbossmike solution looks good already handrolled view classes corresponding every template suppose true people end customizing views point seems significant effort made automatically generated routes handle general cases avoid boilerplate probably useful scaffolding app case really nt need create view object hand template sufficient also seems new router lot user events passed controller bubbled router maybe leaves use cases hand rolled views app actually leaving lot view files prenewrouter behind least nt want add back get templatenaming right", "d": "1/2013"}, {"body": "wycats sohara levelbossmike experiencing situation rails sprocket wo nt even recognize run emberjs app rails app using emberrails latest emberjs emberdata builds strange errors thrown", "d": "1/2013"}, {"body": "mankind checked repo html page render rails route renders json need page html body included scripts css etc", "d": "1/2013"}, {"body": "sohara thanks got partially working making controller index respond html removing yield layout file want respond json closed added incase someone runs similiar issue thanks", "d": "1/2013"}, {"body": "mankind take dicussion github issues emberjs irc tonight ping username sohara emberjs freenode finishing dinner back desk minutes also close issue imho", "d": "1/2013"}, {"body": "oh well actually close since opened original issue obviated updates router api last couple days", "d": "1/2013"}, {"body": "sohara ok thanks", "d": "1/2013"}, {"body": "issue", "d": "1/2013"}, {"body": "guess intentional mentioned api documentation", "d": "1/2013"}, {"body": "would nt say intentional something nt big enough issue anyone address", "d": "1/2013"}, {"body": "tidied readability", "d": "1/2013"}, {"body": "testing fix bug second view templatename inserted first destroyed new view get deleted probably common case since view updatedcontext seems generates new view instance overwrites previous one", "d": "1/2013"}, {"body": "would mind asking question stackoverflow", "d": "1/2013"}, {"body": "wycats viewstate still exist deprecated assume ahs removed juanjardim version ember use always need manage old version yep post question sorry ca nt answer", "d": "1/2013"}, {"body": "gone", "d": "1/2013"}, {"body": "hi thanks answering version using", "d": "1/2013"}, {"body": "juanjardim wow super outdated suggest upgrade least wait bit close new routing think take look guides see changed", "d": "1/2013"}, {"body": "sohara thanks report two different issues fixed default always wanted render different parent would override method discussed fixed earlier today template names supposed underscored names usually taken file system camelized underscored names supported going moving asking build tools normalize underscored names emberpreferred camelized convention two commits fiddle working expected updated version new build ember", "d": "1/2013"}, {"body": "wycats awesome thanks", "d": "1/2013"}, {"body": "ran today well able resolve simply deleting dir nt investigate given fix seems like rakepipeline issue", "d": "1/2013"}, {"body": "experience rakepipeline plating nicely git especially switching different gitref unsure better good solution exists inpractice merely clean repo branch change git pull", "d": "1/2013"}, {"body": "also experienced problem today making pull cloned everything worked fine", "d": "1/2013"}, {"body": "clarify sometimes git checkoutpullrebaseresetetc may need run following hopefully prevent needing reclone entire project", "d": "1/2013"}, {"body": "hit issue repeatedly today could always resolve sadly via acceptable workaround get root cause twinturbo ideas", "d": "1/2013"}, {"body": "definitely seems like rake pipeline issue", "d": "1/2013"}, {"body": "twinturbo thoughts", "d": "1/2013"}, {"body": "ill check monday reproduce jan pm yehuda katz notifications githubcom wrote twinturbo thoughts reply email directly view github", "d": "1/2013"}, {"body": "pdi", "d": "1/2013"}, {"body": "think need", "d": "1/2013"}, {"body": "oh noes might appear work end triggering handler twice want differently named route", "d": "1/2013"}, {"body": "way think nested syntax producing flattened set routes original route definition creating three routes handler get invoked whenever go child states nt route name", "d": "1/2013"}, {"body": "thanks lot yehuda could get work got another corner though trying create behavior visiting posts slightly different first render posts template application template outlet render postindex template posts template outlet finally visiting postsnew first render posts template render newpost template outlet seem get plugged directly template outlet see happening missing something", "d": "1/2013"}, {"body": "mhfs yep smile want render different parent template need explicit see relevant code js appcontributorindexroute emberrouteextend rendertemplates function thisrender contributor appdetailsroute emberrouteextend rendertemplates function thisrender contributor appreposroute emberrouteextend rendertemplates function thisrender contributor absolutely make default work appropriate heuristic", "d": "1/2013"}, {"body": "mhfs good news default closest ancestor route rendered template", "d": "1/2013"}, {"body": "thumbsup", "d": "1/2013"}, {"body": "awesome wycats thanks ton", "d": "1/2013"}, {"body": "darthdeus application trying access controller controller something like context route would use help", "d": "1/2013"}, {"body": "one relevant context debugging console find router find controller instances like verbose taste would nice also available like etc", "d": "1/2013"}, {"body": "understand preference less verbose console debugging found offering shortcuts like quickly escapes console usage application especially since cargoculting name game javascript would feel ember exporting object console could something like etc", "d": "1/2013"}, {"body": "property binding want bind currentstatus property statuscontoller previous router api like going work new router api ca nt use appcontainerlookup controller status thanks", "d": "1/2013"}, {"body": "wycats object works understand desire discourage bad architecture", "d": "1/2013"}, {"body": "ramigg give context need looks like probably controller disguise", "d": "1/2013"}, {"body": "using controllers use case emberroute object matter", "d": "1/2013"}, {"body": "ramigg standardizing around one app architecture works well big reason ember exists reason wycats hesitant make easy bind things wrong way debug shortcuts nt strong preference trying understand", "d": "1/2013"}, {"body": "wycats discouraging bad architecture nt affect debugging friendliness object", "d": "1/2013"}, {"body": "thanks reply nt answer question need way able bind application properties exist controllers design look ember recommends end guide bind properties", "d": "1/2013"}, {"body": "debug object pattern could really useful going forward ramigg agreed guide referenced recommending storing application properties controllers recommended afaik binding properties via global constant appmyobject example obviously approach worked router could hack way wycats saying ember trying discourage approach question hard answer clearly perhaps might actually need way bind application properties exist controllers things ember way never going appmyobject instance sitting global namespace seen done old examples blog posts even legacy code except debug cant think good reason anymore sure never binding controller properties model layer typical app bind controller properties templates views controllers router connected templatesviews controller instance already routes customize connections wire controllers together using something like controllerfor post connectcontrollers hope helps maybe ask instead access properties wherever need without binding global namespace", "d": "1/2013"}, {"body": "thanks grasscode agree comment make sense still think acceptable share properties controllers access controller properties without binding global namespace", "d": "1/2013"}, {"body": "grasscode nt look like works new router ramigg put global settings javascript approutewithsettings emberrouteextend setupcontrollers function controller controllerset settings thiscontrollerfor settings apphomeroute approutewithsettingsextend appotherroute approutewithsettingsextend controllers andor views bind", "d": "1/2013"}, {"body": "connectcontrollers seems still available say nt know working perhaps implementation change favor using containercontrollerfor", "d": "1/2013"}, {"body": "used connectcontrollers oldrouter assuming go away router using controllerfor suggests ramigg totally agreed acceptable common share properties controllers patterns still evolving afaik approaches manually set properties specific controller via setupcontrollers extend common base route example register injections prior app initialize injections crazy powerful internally ember makes sure default properties set controller see implementation example use others", "d": "1/2013"}, {"body": "thanks guys answers helps lot would great somewhere documented others enlightened wycats", "d": "1/2013"}, {"body": "ended implementation js function emberonload emberapplication function application applicationinitializer stole emberdata place found exactly use case nt look simple straight forward works though proper solution", "d": "1/2013"}, {"body": "ramigg think appcontainerinjection approach lot cleaner less verbose assuming result make documention somewhere worth noting property name assigning connected controller already exist receiving controller least case eg otherwise got error along lines got error regardless whether connect controllers via setupcontrollers callback registering injections", "d": "1/2013"}, {"body": "sohara run issue well issue controllers based embercontroller arraycontroller whenever receiving controller extends objectcontroller agreed adding property name controller definition solid workaround thu jan sohara notifications githubcom wrote ramigg think appcontainerinjection approach lot cleaner less verbose assuming result make documention somewhere worth noting property name assigning connected controller already exist receiving controller least case eg apppostcontroller emberobjectcontrollerextend users null topuser null topuserbinding userstopuser otherwise got error along lines uncaught error assertion failed delegate set users appuserscontroller content property object proxy apppostcontroller content undefined got error regardless whether connect controllers via setupcontrollers callback registering injections reply email directly view github", "d": "1/2013"}, {"body": "sohara yeah got error reopen objectproxy arrayproxy classes added settings null property updated code agree implementation overkill way emberdata implemented injection store property controllers thought best way go though nt understand nt problem content proxy", "d": "1/2013"}, {"body": "ramigg think declare store property null see", "d": "1/2013"}, {"body": "since commit appcontainer longer public api suppose way left inject controller dependencies setupcontrollers handler", "d": "1/2013"}, {"body": "sure official position changed app register injections within app initializer kinda like emberdata example ember passes arguments initializer theres need global lookups registering injections seems could good strategy certain sure could see argument avoiding initializers setupcontrollers hook wycats tomdale appropriate use case initializers meant internal api post example whats working us nt want encourage abuse injections vesslethatshouldnotbenamed jan pm sohara notifications githubcom wrote since commit appcontainer longer public api suppose way left inject controller dependencies setupcontrollers handler reply email directly view github", "d": "1/2013"}, {"body": "latest commit add needs controllers much better way wire things", "d": "1/2013"}, {"body": "specify use cases example use needs", "d": "1/2013"}, {"body": "ramigg add documentation website shortly basic idea controller needs get set values another controller must explicitly declare dependencies", "d": "1/2013"}, {"body": "yeah got idea exactly needed thanks tomdale guess code injecting settings controller controllers good practice", "d": "1/2013"}, {"body": "ramigg yeah definitely nt need taht kind thing manually", "d": "1/2013"}, {"body": "manually trigger transitionto without access router", "d": "1/2013"}, {"body": "call transitionto controller", "d": "1/2013"}, {"body": "iroza access controller instance controller aware works exactly", "d": "1/2013"}, {"body": "thisget controller job", "d": "1/2013"}, {"body": "lroza thisget controller transitionto undefined new using build last week", "d": "1/2013"}, {"body": "davidpeters master seems changing rapidly upcoming release might want pull build tracking changes", "d": "1/2013"}, {"body": "tl dr link rerendered definitely need better error message case may also timing issue know content would undefined", "d": "1/2013"}, {"body": "add better error message ca nt link something empty model reason trying get content view instead template controller", "d": "1/2013"}, {"body": "route using view controller ember data model defined conceptually page would model return page id model overriding model func inside pagination route rewrite route plan flip bits another controllers model assuming user error real bug ember", "d": "1/2013"}, {"body": "toranb looks like trying build link using view content explain expecting work least mental model causing", "d": "1/2013"}, {"body": "upgrade latest build ember working fiddle router nt write example might time dig source completely rewrite hand", "d": "1/2013"}, {"body": "previous fiddle using helper different scoping semantics want use need make sure object trying pass helper actually scope case explicitly changed scope via view make work need make sure controller access appropriate information via pass information helper", "d": "1/2013"}, {"body": "excellent nt realize difference scoping dropped action helper favor linkto retrospect switched made change new examples show linkto route based actions previously used action helpers", "d": "1/2013"}, {"body": "able get working reading little router docs found helpful getting correct pagination behavior anyone might follow discussion", "d": "1/2013"}, {"body": "call significantly cut typing", "d": "1/2013"}, {"body": "possibility share model hook scenario prefer person route pagination sorting search like behavior starting smell like person route nt see way multiple nested routes open suggestion one thanks", "d": "1/2013"}, {"body": "toranb put gist steps make work play around presenting idiomatic solution", "d": "1/2013"}, {"body": "handlebars template js code match thanks taking time help build great solution others", "d": "1/2013"}, {"body": "attempting implement pagination emberjs project using toranb gists guide example solution handling pagination new router wycats would extremely helpful", "d": "1/2013"}, {"body": "using new router", "d": "1/2013"}, {"body": "", "d": "1/2013"}, {"body": "master need use emberoldrouter build", "d": "1/2013"}, {"body": "using emberlatestjs app building since router trying avoid using router maybe app nt ambitious enough need bite bullet figure make transition", "d": "1/2013"}, {"body": "find emberoldrouter build seeing branch tag name", "d": "1/2013"}, {"body": "run inside cloned repo get package said one goals new router branch make extremely simple use even nt particular ambitious usecase example nt define router ember render template conceptual route optionally using using templates unnamed application templates basically getting simplicity model ability grow multipage routable app need", "d": "1/2013"}, {"body": "okay yes using new router implicitly something like html application view think issue still valid tips debugging happy digging", "d": "1/2013"}, {"body": "tpitale gist stack trace seeing would help narrow", "d": "1/2013"}, {"body": "gist original issue let know need something something else entirely thanks wycats", "d": "1/2013"}, {"body": "better formatted screenshot chrome inspector", "d": "1/2013"}, {"body": "backtrace appears happen template changes elements page time trying trigger handlers arising issue code something ember like changing templates fixed bug seems well", "d": "1/2013"}, {"body": "tpitale reference mind giving example issue resolved", "d": "1/2013"}, {"body": "indexhtml example inside switches two views problemseditview problemsshowview depending current problem controller isediting want submit form clicked form hidden instance problem saved server remain visible errors problem triggers becameinvalid seems functioning fine using problemon didcreate problemon didupdate trigger setting isediting false unfortunately error remains despite form behaving desired hope helps stefanpenner", "d": "1/2013"}, {"body": "looking error located think looking click handler something form submit button submit button removed html isediting set false find element jquery uneducated guess", "d": "1/2013"}, {"body": "added logging changes erroring actions deleted logs look like errors seems like hit enter submit form error occurs click submit button form error lookup deleting registered action reversed weird", "d": "1/2013"}, {"body": "sorry bad also provide jsfiddle would great", "d": "1/2013"}, {"body": "sure reproduce particular application order demonstrate issue something simple jsfiddle core issue registeredactions bit described nt know enough hooks ember create simplified example dig maybe puzzle", "d": "1/2013"}, {"body": "good chance decompose problem fiddle solution become obvious fantastic starting point us resolve either bug fix documentation update", "d": "1/2013"}, {"body": "understand value fiddle think also understand problem described best prevents creating fiddle snap fingers lack complete understanding systems within ember play summary willing unable create fiddle moment update whenif take time dig problem closed expectation anyone else investigate error nt really causing trouble", "d": "1/2013"}, {"body": "ran exact issue tpitale describing seems focusout event fires submit button view destroyed thus ember actions longer contained emberhandlebarsactionhelperregisteredactions temporarily patched embereventdispatcher setuphandler method javascript rootelementdelegate dataemberaction event ember function evt return emberhandleerrors function var actionid ember evtcurrenttarget attr dataemberaction action emberhandlebarsactionhelperregisteredactions actionid handler actionhandler handler null typeof action undefined amp amp typeof actionhandler undefined amp amp actionhandler null handler actionhandler actioneventname eventname handler null amp amp actioneventname eventname return handler evt", "d": "1/2013"}, {"body": "currently promises used enter router url state unresolved promise relatively easy handle put entire router state transitioning one route another get promise probably want handle loading target state would nt want change ui loading spinner content nt ready render yet current strategy allow loadingrelated hooks route handlers return promises models probably something like could use api hooks thoughts strategy", "d": "1/2013"}, {"body": "wycats understanding correctly would substate route would events state think good approach esp default implementation state works box code enhanced implementing state", "d": "1/2013"}, {"body": "initial confusion stemmed fact promises handled differently entering router via url versus transition routes would agree promiseaware hooks emberroute creating substate would perhaps overkill attempted illustrate idea loadingpromiseaware hooks code based understanding new routing far javascript apppromiseawareroute emberrouteextend deserialize function params model thismodel params model amp amp emtypeof modelthen function clear currentmodel explicitly modelfor return promise thiscurrentmodel null retain promise possible internal use thispromisemodel model thishandlepromisemodel model else thiscurrentmodel model return model model function params promise appentityfinderfindbyid paramsid return promise handlepromisemodel function promise var self promisethen function result selfcurrentmodel model selfmodelwasresolved result return result function result selfmodelwasrejected result return result modelwasresolved function result modelwasrejected function result key point want make feel would clearer always referred actual model promise case loading url hand model transitioning states", "d": "1/2013"}, {"body": "lfridael definitely wrong currentmodel promise loading good catch question route currently loading case able observe issue", "d": "1/2013"}, {"body": "lukemelia agree lfridael want start hooks first move substates usecases justify", "d": "1/2013"}, {"body": "wycats remark use contribute anything discussion early morning nt coffee yet", "d": "1/2013"}, {"body": "wycats promiserelated hooks definitely added value nt calls normalized well ie passed model instead promise cases", "d": "1/2013"}, {"body": "wycats solution sketch normalizes calls hooks please take look", "d": "1/2013"}, {"body": "lfridael hooks already get models supposed work router recognizes new url moves state router starts calling hook handler model hook returns promise router moves handler waits promise resolve promise resolves router continues calling remaining handlers repeat steps promises resolved router calls hooks model definition resolved writing think saying nt happen normal hooks sometimes get called promise entire point thread seems like issue addressed code specifically something like even", "d": "1/2013"}, {"body": "wycats yes problem hooks get called promise nonurl calls agree issue addressed higher chain also handling deferred models take account possibility asynchronous operations taking arbitrarily long time user navigating another route meantime active promise rejected sort indication interrupted userinitiated navigation", "d": "1/2013"}, {"body": "promises resolved router calls setupcontrollers rendertemplates hooks wycats following code always return promise trying resolve error never raised weird promise javascript appmodelreopenclass find function modelid var promise emberdeferredcreate missing something", "d": "1/2013"}, {"body": "wildchild ember data models promises using ember data always get promises reason nt get error raised according promisesa spec errors caught passed failure callback failure callback error raised huge fan attempting adhere spec nt see signs things behaving incorrectly", "d": "1/2013"}, {"body": "seems like lfridael issue still unresolved reopening", "d": "1/2013"}, {"body": "ticket definitely duplicate admit found confusing behaviour promises changed depending whether initial load navigating new route solution finders always return objects isloaded type attributes", "d": "1/2013"}, {"body": "closed duplicate still useful information attempt solve", "d": "1/2013"}, {"body": "eviltrout elaborate using isloaded attributes workaround also using finders struggling lot emberdata api using", "d": "1/2013"}, {"body": "unfortunately missed one tried debug based jsbin nt know usefull perhaps guys already aware routerjs transitionto called called dotransition method javascript function dotransition router name method args var output routerparamsforhandler name args true var params outputparams tosetup outputtosetup var url routerrecognizergenerate name params methodcall router url setupcontexts router tosetup think method aims eh updating url seeing emberrouter javascript function setuprouter emberrouter router location var lasturl routergethandler gethandlerfunction emberrouter var doupdateurl function locationseturl lasturl routerupdateurl function path lasturl path emberrunonce doupdateurl init emberrouter routerhandleurl something causes collectsobjects method think responsible resolving promises fact updateurl called emberrunonce guess dotransition goes setupcontexts promises resolved sure good reason put updateurl runonce ca nt figure", "d": "1/2013"}, {"body": "southpolesteve essentially instead returning promise model call return object isloaded attribute initially set false load finishes set attribute true template surround everything contentisloaded arrays little complicated return initially empty array fill elements load completes rerender template", "d": "1/2013"}, {"body": "nt want require people return special value synchronously transitioned case wanting transition asynchronous work done router go state asynchronous operation seems bad white screen unknown amount time", "d": "1/2013"}, {"body": "admittedly bit corner case want several routes automatically redirect routes find exact routes app retrieve something server first appeal approach one set fixed navigation links control actual destination javascript alone impact change fairly minimal people required return special values fact current contract redirect hook would hold falsy return value ie undefined nt return anything simply means business usual return true emberroutesetup stops prematurely way see get effect manipulating transitioned flag feels bit hackish", "d": "1/2013"}, {"body": "want app temporarily transition state asynchronous lookup happening", "d": "1/2013"}, {"body": "yes transitioning state would line way deferred operations promises handled parts routing logic", "d": "1/2013"}, {"body": "maybe makes sense return redirection promise sure spitballing", "d": "1/2013"}, {"body": "yes would make sense allows internal framework routing logic attached promise ca nt think plausible use case right approach would seem futureproof using mere boolean simple synchronous control flow", "d": "1/2013"}, {"body": "one issue seeing transitioning another route transition adds browser history expected behaviour makes impossible least hard user backbutton previous route previous route one issues redirect", "d": "1/2013"}, {"body": "remove statement statement contents", "d": "1/2013"}, {"body": "contents sorry clear", "d": "1/2013"}, {"body": "fyi fiddle noticed used instead tried pointing correctly gave", "d": "1/2013"}, {"body": "sinisterminister present required name application template reason nt want", "d": "1/2013"}, {"body": "mainly due way structured files commonjs brunch templates templates folder compiled put build gives name case specifically actual application view file moment javascript var ew require app ewapplicationview emviewextend templatename require templatesapplication brunch compiles templates names based moduleid javascript windowrequiredefine templatesapplication function exports require module embertemplates moduleid emberhandlebarstemplate function anonymous handlebars helpers partials data helpers helpers emberhandlebarshelpers var buffer foundhelper selfthis functiontype function helpermissinghelpershelpermissing undefvoid escapeexpressionthisescapeexpression template stuff omitted moduleexports moduleid", "d": "1/2013"}, {"body": "going much better time strip pretty straight forward current ember position expect conventional template names build tools like brunch responsible coercing absolutely could provide granular hook overriding default template lookup could tack onto front nt seem difficult add line line normalize name", "d": "1/2013"}, {"body": "fine see forking fixing brunch stuff work latest ember conventions seems odd override applicationview override template assigned using property like views", "d": "1/2013"}, {"body": "sinisterminister sort oversight sort wary providing many degrees freedom feature probably fix get chance way think templates rendered router template main attraction get extra features via names controllers views needs say match posts post saying user enters render template associated controller view", "d": "1/2013"}, {"body": "concern got large ember app built around sproutcore statecharts ugly frankenstein app plan going back refactoring goes beta works currently templates app user stories wholly expect us somewhere templates time app finished template centric focus like described could make things considerably difficult us many templates routes modals dynamic views etc nt need routed know nt saying need route every template still worrisome getting flexibility key us sometimes paradigm promoted framework nt quite right shape fit closest fit options see embersc chimera really like ember offer terms bindings whatnot plan building many apps hope see flexibility continue matures current issue hand think remove easily still expect templates named things like depending directory structure removing parent directory names could lead accidental conflicts overwrites object perhaps strip slashes camel case sounds like still different describe", "d": "1/2013"}, {"body": "sinisterminister thanks continuing discussion clarify one thing routes templatecentric course use subclasses encapsulate reusable functionality exactly way used new router expect override template particular route like reason approach would work", "d": "1/2013"}, {"body": "wycats thanks well thought reply seems like good fit thoughts instantiating resolving widget controllers ala container example", "d": "1/2013"}, {"body": "wycats perfect especially get opportunity introspection model instance decide controller class use particular model rather one class every item array", "d": "1/2013"}, {"body": "zeppelin say use case want something complicated trying find time work feature separately reusable views feature currently testing varying controller classes although likely works simply class retrieved via", "d": "1/2013"}, {"body": "hjdivad thinking sg similar want uniform es every item array declare however array objects different types able something like", "d": "1/2013"}, {"body": "zeppelin seems fine provided update example make property", "d": "1/2013"}, {"body": "zeppelin suppose obvious one concern making property bad things may happen returns different value underlying object nt changed particular moment expecting return controller instance underlying object obviously ca nt guaranteed controller class changes multiple invocations thoughts would expect happen case see problem making error case", "d": "1/2013"}, {"body": "wycats seems great solution fwiw find app examples bad option option seems far elegant like said hard get right result seem favored option subpar results solid solution built framework would huge win", "d": "1/2013"}, {"body": "fan itemcontrollerclass arraycontroller tracked lifecycle item array widget think pointless controller match lifecycle widget stored state would reset parent rerender since bound poststartdate track lifecycle parent controller content post fact sort theme child controller lifecycle parent content", "d": "1/2013"}, {"body": "ghempton given current implementation render helper work inside helper render assumes render templatecontroller simultaneously make sens singleton controllers register rendered views active views outlet helpers inside rendered template think need way distinguish singleton non singleton controllers render helper detect kind controller deal let render multiple times template different controllers sure handle activeview thing case semantics outlet inside", "d": "1/2013"}, {"body": "view spent last couple days trying make views work like reusable widgets end put logic view even thought nt belong", "d": "1/2013"}, {"body": "would workaround question atm", "d": "1/2013"}, {"body": "would great save lot trouble app working", "d": "1/2013"}, {"body": "colymba master see", "d": "1/2013"}, {"body": "thanks hjdivad works great quick question though seems work syntax missing something", "d": "1/2013"}, {"body": "colymba seems bad look write patch reproduce issue bug jsfiddle", "d": "1/2013"}, {"body": "colymba although said already jsfiddle handy would great smile", "d": "1/2013"}, {"body": "hjdivad nt got one copy code working", "d": "1/2013"}, {"body": "hjdivad ca nt reproduce jsfiddle anymore probably typo happens accessing directly instead", "d": "1/2013"}, {"body": "colymba ahh yeah iterating wo nt work although nothing iterating directly sidestep whatever logic employs", "d": "1/2013"}, {"body": "hjdivad thought thx", "d": "1/2013"}, {"body": "ghempton closed", "d": "1/2013"}, {"body": "lfridael work", "d": "1/2013"}, {"body": "yes would work thanks", "d": "1/2013"}, {"body": "fixed", "d": "1/2013"}, {"body": "want set different controller model render template using different controller need override two hook would open convenience simplify scenario usecase driven", "d": "1/2013"}, {"body": "routes route property ran day route property would nt work removed fine wont work work", "d": "1/2013"}, {"body": "watching video wycats yesterday clear api requires controller param unclear first due older documentation since longer case think time close thread good discussion true bug framework", "d": "1/2013"}, {"body": "make sure future readers understand work controllers final router api like takes current route controller parameter look controller directly different route outside method use thiscontrollerfor routename", "d": "1/2013"}, {"body": "gladly help english", "d": "1/2013"}, {"body": "fixed please reopen still issue", "d": "1/2013"}, {"body": "confirm fixed", "d": "1/2013"}, {"body": "addobserver removeobserver reference count must balanced throw error may unbalanced removeobserver last one", "d": "1/2013"}, {"body": "kselden better book keeping making sure counts change result successul removal removing something twice successful", "d": "1/2013"}, {"body": "zroadhousewsm looks like tests whether caret position moved missing tests", "d": "1/2013"}, {"body": "read code fragment referenced saw methods getting setting caret position nt see test cases verify behavior users type text another fragment jan pm yehuda katz wrote zroadhousewsm looks like tests whether caret position moved keyup missing tests reply email directly view github email including attachments contains confidential andor proprietary information may used person entity addressed reader hereby notified dissemination distribution copying email prohibited received email error please notify sender replying message delete email immediately", "d": "1/2013"}, {"body": "zroadhousewsm seems related try latest master", "d": "1/2013"}, {"body": "still fails put together jsbinfiddle demonstrate issue", "d": "1/2013"}, {"body": "wagenet due major changes routing ca nt use latest master try demonstrate jsfiddle", "d": "1/2013"}, {"body": "tried put together fiddle could nt get working ca nt spend time right attempted repro case", "d": "1/2013"}, {"body": "chasm think approach interesting may elegant solution machty described situation unfortunately seem like drastic departure machty current implementation would like see conversation exploration continue machty sounds like prepare fiddle chasm apply hes approach solve mentioned problem", "d": "1/2013"}, {"body": "chasm machty want thank two sofully enumerating specific concerns ideas reviewing perspectives tomdale shortly see guidance provide", "d": "1/2013"}, {"body": "wycats know busy router fixes thoughts", "d": "1/2013"}, {"body": "agree machty appreciate thoughtful words chasm two cents add handler need ability prevent arbitrary state transitions could simply override invoke somewhere body different proposal inline add new method called treated nonmatch looking api looks like redirect basically handles use case", "d": "1/2013"}, {"body": "agree machty becomes quite important issue using modals state transitions posted question stackoverflow regarding issue wycats kindly pointed open issue one thing considered allow route selectively disable uri change would rather transition state clientsnew represented clients makes sense making use modals transition substates", "d": "1/2013"}, {"body": "closing favor referenced link love hear thoughts idea participated thread", "d": "1/2013"}, {"body": "", "d": "1/2013"}, {"body": "still reproducible master", "d": "1/2013"}, {"body": "feel like may resolved either way closing due inactivity still issue please let us know", "d": "1/2013"}, {"body": "still occurring master sadly also still unable generate correctly failing demo able work around app setting object property controller changing class name binding chain controller instead directly object javascript apppersonview emberviewextend classnamebindings controllerpersontype controller function var persontype thisget persontype controllername emberstringclassify persontype controller property persontype way object change triggers controller change triggers class name change instead triggered object change safe ordering observers thereby ensured awful awful hack though implementation nt already awful awful hack grimacing", "d": "1/2013"}, {"body": "closing duplicate tracking", "d": "1/2013"}, {"body": "definitely something odd going", "d": "1/2013"}, {"body": "eimermusic goodforonefare converted master seems work properly issues please make new failing jsbin master", "d": "1/2013"}, {"body": "think issue fixed one guys verify reopen still broken", "d": "1/2013"}, {"body": "wycats check today tomorrow well perhaps related issues", "d": "1/2013"}, {"body": "wycats workmanw really seems fixed", "d": "1/2013"}, {"body": "wycats yeap issue resolved thanks lot", "d": "1/2013"}, {"body": "closed favor", "d": "1/2013"}, {"body": "closing duplicate wycats says address", "d": "1/2013"}, {"body": "maybe question stackoverflow related issue", "d": "1/2013"}, {"body": "issue basically duplicate reason choosing close issue", "d": "1/2013"}, {"body": "looks like actually case definitely bug verified latest master", "d": "1/2013"}, {"body": "wagenet believe precompile inline templates please reopen case", "d": "1/2013"}, {"body": "closing due inactivity", "d": "1/2013"}, {"body": "ebryn looks stale please reopen still relevant", "d": "1/2013"}, {"body": "close", "d": "1/2013"}, {"body": "closed", "d": "1/2013"}, {"body": "issue addressed router smile", "d": "1/2013"}, {"body": "great stuff thank", "d": "1/2013"}, {"body": "nt think want change names stage lot code already uses minor disputed semantic improvement", "d": "1/2013"}, {"body": "leepfrog assuming nt directly apply new router still issues please file new ticket", "d": "1/2013"}, {"body": "fwiw still issue new router workaround override parent route sets parent route model passed serialization nt think side effects wonder default behaviour update ugh see problem serialize called generating url may current model case mysteriously nt working original use case morning sorry", "d": "1/2013"}, {"body": "routing looks like right way query parent route model parameters subroute model hook using modelfor", "d": "1/2013"}, {"body": "anyone wanting basic solution problem add something like view", "d": "1/2013"}, {"body": "closing duplicate", "d": "1/2013"}, {"body": "emberjs support handlebars runtime", "d": "1/2013"}, {"body": "emberselect issue still prevents runtimeonly handlebars working ember box currently precompiling templates using following hack loaded ember ember currently tries compile handlebars template emberselect last remaining blocker using handlebars runtime production avoid blowing stubbing required compilationrelated functions ember load without error handlebarscompiler function handlebarscompilerprototypecompile function handlebarsjavascriptcompiler function handlebarsjavascriptcompilerprototypecompile function handlebarsparse function handlebarscompile function", "d": "1/2013"}, {"body": "really precompile phase task reason ship builtin templates string", "d": "1/2013"}, {"body": "moved precompilation earlier", "d": "1/2013"}, {"body": "closing favor discussion", "d": "1/2013"}, {"body": "seems amply documented", "d": "1/2013"}, {"body": "update trying reproduce bug latest master crashes first time click close inner view cc wycats kselden", "d": "1/2013"}, {"body": "pretty sure nt apply directly new router still issues please file new ticket", "d": "1/2013"}, {"body": "ran problem working fix noticed specifying viewcontext instead eventcontext works well seems important point specify context handlebars passing controller function dcalhoun said specifying name variable wan na pass function behind action example action removeuser user target apprecentuserscontroller click example", "d": "1/2013"}, {"body": "nt issue new router urls updated end run loop multiple transitions single run loop coalesced", "d": "1/2013"}, {"body": "note people trying closure compiler web ui use", "d": "1/2013"}, {"body": "going assume nt issue new router still problems please file new ticket", "d": "1/2013"}, {"body": "closing due lack feedback", "d": "1/2013"}, {"body": "works fine master think closed", "d": "1/2013"}, {"body": "resolved yuidoc", "d": "1/2013"}, {"body": "nope", "d": "1/2013"}, {"body": "rewriting old app used emberjs ran issue", "d": "1/2013"}, {"body": "hold nt want top sort bindings create rather reimplement computedproperties nt ordering issue", "d": "1/2013"}, {"body": "clicked wrong button", "d": "1/2013"}, {"body": "nt think issue valid anymore new router implementation wagenet probably closed", "d": "1/2013"}, {"body": "closed still valid", "d": "1/2013"}, {"body": "target actions lazily evaluated one gets soon get", "d": "1/2013"}, {"body": "goal determine whether particular object mixin included works object instances object classes would nt want report mixin included able call methods defined mixin checks see whether class subclass parent general use plain old instance detection agree naming could clearer nt think anything fundamentally wrong implementation understandable confusion classes way classes implemented via mixins", "d": "1/2013"}, {"body": "still way check add property mixin somewhat unwieldy", "d": "1/2013"}, {"body": "mixin detect want", "d": "1/2013"}, {"body": "saying behave differently despite name surprising rubyist since behave checking modules classes course ruby nt true", "d": "1/2013"}, {"body": "nt directly applicable new router", "d": "1/2013"}, {"body": "bradleypriest going assume issue nt directly apply new router still issues please file new ticket", "d": "1/2013"}, {"body": "jhorman seems fixed", "d": "1/2013"}, {"body": "moment sticking guns aggressive cleaning objects prevent leaks certainly valid usecases small number longlived tabs might want keep dom around prefer continue improve render performance think carefully specific usecases give rise pattern rather encouraging users keep views dom around performance inadvertently leak memory definitely keep eye performance constraints move forward likely limited form would make sense helpful", "d": "1/2013"}, {"body": "think thing find odd behavior necessarily currentview property deleting view also forces create view behavior must create view clean imho consistent either user controls memory create delete containerview nt mixed two cents", "d": "1/2013"}, {"body": "closed favor", "d": "1/2013"}, {"body": "moot new router actions nt generate urls anymore", "d": "1/2013"}, {"body": "think primary usecase variant layout feature something like wrapping layout probably eventually particular ticket mostly misunderstanding layout feature started implement feature master consider usecases wrapping layouts best implement without creating smorgasbord similarbutnotquite features", "d": "1/2013"}, {"body": "seems like want emberrunlater actions scheduled timers queue drained either need mechanism something like aftertimers queue exist", "d": "1/2013"}, {"body": "think key want make sure emberrunlater never run run loop created", "d": "1/2013"}, {"body": "wycats correct also need fix emrunnext emrunlater nt use emrun use settimeout", "d": "1/2013"}, {"body": "also run later embersettimeout", "d": "1/2013"}, {"body": "kselden sounds good", "d": "1/2013"}, {"body": "hack yield something like possible var get emget emtextfieldreopen error function var label get label return get parentviewcontexterrors label property parentviewcontextisvalid layout emhandlebarscompile viewlabel yield viewerror", "d": "1/2013"}, {"body": "trek want take stab", "d": "1/2013"}, {"body": "use create clean destroy wagenet also true object bindings observers title suggest", "d": "1/2013"}, {"body": "going close scope probably need something like indexset work async array observers timeframe", "d": "1/2013"}, {"body": "thinking lot nt think runtime level want provide initialization hooks certain classes notably views provide explicit apis method may well execute wrong time even moved internal setup logic anyway", "d": "1/2013"}, {"body": "nt think scope ember", "d": "1/2013"}, {"body": "pretty moot point stuff happened past months", "d": "1/2013"}, {"body": "believe kselden improvements fix issue", "d": "1/2013"}, {"body": "addressed", "d": "1/2013"}, {"body": "hi tried use tomdale said keeping code simple ember tries success taken case windowapp emapplicationcreate windowcore emnamespacecreate beta emnamespacecreate approutermap function thisroute registration path betaregistration also corebetaregistration tried appindexroute emrouteextend redirect function thistransitionto registration also corebetaregistration tried corebetaregistrationcontroller emcontrollerextend corebetaregistrationview emviewextend template emtemplates betaregisration corebetaregistrationroute emroutecreate setupcontroller function return consolelog arguments setupview function return consolelog arguments app namespace works different", "d": "1/2013"}, {"body": "agree topfunky need convenient way bind click touch", "d": "1/2013"}, {"body": "confirmed fixed ember", "d": "1/2013"}, {"body": "ruby e puts encodingdefaultexternaltos encodingdefaultinternaltos run getting using ubuntu still getting error fix", "d": "1/2013"}, {"body": "pretty moot", "d": "1/2013"}, {"body": "going close larger bindingrelated issues probably addressed kselden nt really turned major blocker practice", "d": "1/2013"}]