[{"title": "make jquery works polymer", "body": "jquery query document dom default visit shadowdom use jquery amp polymer semanticui library", "num": "2111", "d": "2/2015"}, {"title": "css converts percents pixels", "body": "jq code sets css property pixels eg works correct add percent works correct versions", "num": "2110", "d": "2/2015"}, {"title": "performance dimension methods significantly degraded elements style display none", "body": "calling dimension methd namely method page element style display none operation method significantly slower calls elements without property able reproduce behaviour firefox linux mint firefox mac osx yosemite chrome mac osx yosemite using jquery provided demonstration test performs calls dimension accessor visible hidden div printing timing information console sample output machine visible width milliseconds hidden width milliseconds visible inner width milliseconds hidden inner width milliseconds visible outer width milliseconds hidden outer width milliseconds visible height milliseconds hidden height milliseconds visible inner height milliseconds hidden inner height milliseconds visible outer height milliseconds hidden outer height milliseconds indicate dimension calls hidden elements take longer visible elements led discover issue attempting use selectable interaction jqueryui library able select rows table selection ordinarily responsive also offer filtering table implemented hiding rows setting style display none soon filtering applied selection became unresponsive managed identify slowdown caused refresh function defined line time writing managed improve responsiveness modifying function following thisrefresh function selectees thatoptionsfilter thatelement selecteesaddclass uiselectee selecteeseach function var pos thisoffset visible thiscss display none data selectableitem element element left posleft top postop right posleft visible thisouterwidth bottom postop visible thisouterheight startselected false selected thishasclass uiselected selecting thishasclass uiselecting unselecting thishasclass uiunselecting bypassing outerwidth outerheight calls hidden elements responsiveness par unfiltered version unable find existing issue matched problem however find stack overflow post encountered problem interacting different part jqueryui api posted three years ago post also contains link featured benchmark particular problem demo provided albeit older version jquery", "num": "2108", "d": "2/2015"}, {"title": "add new functionality", "body": "felt many time toggle boolean values wrote separate function time code given could called function name toggleboolean state could add new functionality hope help us function toggleboolean state var booleanformat true false yes false true yes var obj jsonparse booleanformat return obj statetolowercase", "num": "2107", "d": "2/2015"}, {"title": "unexpected token eof", "body": "trying compress assets rails rake task error file unexpected token eof undefined line col pos", "num": "2106", "d": "2/2015"}, {"title": "map vs", "body": "js map foreach similar signatures jquery map different leads tons stupid mistakes understand kinda breaking change going release jquery good time breaking changes", "num": "2105", "d": "2/2015"}, {"title": "possible browser compatibility regressions", "body": "due impending purging testswarm data migrate app new server data possible regressions found last days let failures rerun filter false negatives left jquery started failing test failures effects module modules passed started failing test failure dimensions module modules passed jquery weekly android started failing traversing module timed repeatedly modules passed", "num": "2104", "d": "2/2015"}, {"title": "add promise constructor function", "body": "would like suggest adding constructor function jquery works similar spec return function exists create jquery deferred combined suggestion offer decent compatibility layer native promises least terms use", "num": "2103", "d": "2/2015"}, {"title": "add catch promise objects", "body": "relates far simpler request given method matches promise spec extra progress parameter would nice compatible method per dmethvin could call return passthrough", "num": "2102", "d": "2/2015"}, {"title": "restore init", "body": "see need put back despised live code commented know smilecat", "num": "2101", "d": "2/2015"}, {"title": "check documentreadystate interactive document ready", "body": "comment mentioned probably give incorrect interactive readystate affects interactive accepted browsers using requirejs load scripts exactly jquery many scripts loaded domcontentloaded fully loaded scripts depending document ready wait load event triggered currently use get around problem another implementation domready accept interactive readystate browsers excluding ie reason jquery nt", "num": "2100", "d": "2/2015"}, {"title": "datepicker working safari", "body": "date picker working chrome safari fiddle", "num": "2099", "d": "2/2015"}, {"title": "submit event triggered using enter keypress silents first trigger event", "body": "reproduce focus text input press enter keyboard key submit input issue first registered event data describing jquery event eg custom data namespace demo markup script required reproduce issue html js function addressinput blur function e data consolelog ok data screenshot event log", "num": "2095", "d": "2/2015"}, {"title": "event handlers nt work like native ones", "body": "event handler registered addeventlistener instantly removed removeeventlistener nt work like example", "num": "2094", "d": "2/2015"}, {"title": "jquery ui dialog resize problem", "body": "lot resizes internal dialog space decreases pixel iteration bootstrap included process faster", "num": "2093", "d": "2/2015"}, {"title": "suggestions add new serialization html json", "body": "hello would nice use json formation data pass use found lots functions extended jquery however none satisfies lacks many functions searched many times net results even use serializearray nt meet needs hope function either serialize form none form html mean tag input types serialized json radio button tags name serialize choosen one checkbox button tags name return array choosen multiple values even none choosen make empty array left table tag offer customers one boolean value indicates whether need serialize row json object serialize whole table input values usual notice point table tag familiar tags well", "num": "2091", "d": "2/2015"}, {"title": "change jqueryeach jquery signatures", "body": "since use second argument one place always documented internal might good time remove since decrease size improve performance", "num": "2090", "d": "2/2015"}, {"title": "unable subscribe dom node removing using api", "body": "sometimes necessary know element removed jquery api remove empty html use cases delete data associated element created another module third party library custom jquery plugin unable frames current jquery api one possibly workarounds override cleandata method jquery ui cleandata function orig return function elems var events elem elem elems null try cleandata workaround looks dirty hack reasons implement public api scenario box view necessary create remove event case", "num": "2088", "d": "2/2015"}, {"title": "css fails elements null ownerdocumentdefaultview", "body": "doc new domparser parsefromstring texthtml docdefaultview null doc find div css uncaught typeerror read property getcomputedstyle null", "num": "2086", "d": "2/2015"}, {"title": "remove deprecated ajax methods", "body": "deprecated since time remove", "num": "2084", "d": "2/2015"}, {"title": "deploy project local environment", "body": "hi deploy project local environment", "num": "2083", "d": "2/2015"}, {"title": "empty remove clear jquery data focusout", "body": "jquery version encountered version persists browser chrome operating system windows professional sp jsfiddle issue give element jquery data focus something causes element removed dom via empty remove empty remove deletes jquery data element empty remove triggers focusout event element focusout handlers check element jquery data sorely disappointed data longer would expect jquery data would still available element actually removed dom current workaround issue blur focused element calling empty remove", "num": "2082", "d": "2/2015"}, {"title": "ajax settingsdata undefined beforesend typeget", "body": "would like adjustmodify valuesdata beeing sent ajax request beforesend callback atm seems possible post request defined get typed request intended behaviour see", "num": "2081", "d": "2/2015"}, {"title": "setting transitionduration set requires instead", "body": "following question stackoverflow short remove transitionduration element already transitionduration applied one would call jquery requires rare cases completely removing style attribute example provides stackoverflow javascript var duration dot click function transitionduration set click works jquery transitionduration set click bug jquery transitionduration set click fix jquery", "num": "2080", "d": "2/2015"}, {"title": "native abort abort jqxhr", "body": "native xmlhttprequest aborted eg calling abort suspending computer unloading page jqxhr fire callbacks expected fire error complete callbacks test code reproduce test code jsfiddle note bug present master versions", "num": "2079", "d": "2/2015"}, {"title": "setup integration testing infrastructure", "body": "allow us use webdriver times prefer test", "num": "2078", "d": "2/2015"}, {"title": "add jquerydeparam", "body": "jquery nice method serializing object string used query string acemetrix offered jquerydeparam things reversely quite common use case think merged jquery thoughts", "num": "2077", "d": "2/2015"}, {"title": "nested table even odd selector returns wrong expected set", "body": "even odd selector returns wrong set rows nested table latest jquery version issue appears latest chrome firefox please look class added odd row added rows nested table switching odd even shouldbeeven rows nested table selected rows selected", "num": "2076", "d": "2/2015"}, {"title": "qmik", "body": "stop", "num": "2075", "d": "2/2015"}, {"title": "please use qmik develop mobile", "body": "qmik", "num": "2074", "d": "2/2015"}, {"title": "standardize custom pseudo object", "body": "cc timmywil scottgonzalez sizzle pseudos object exposed three distinct properties sizzle defines first two jquery defines third none appear current jquery documentation though sizzle documents object pseudos separately documents related setfilters sure published instructions define custom pseudo least would necessarily reference one also internal uses least two libraries core defines defines hidden visible animated extending calls visible pseudo ui defines data focusable tabbable widget pseudos extending replaces animated filter calls issue affects three source repositories jqueryapijquerycom crux standardize one internally deprecate others things considered vote would", "num": "2073", "d": "2/2015"}, {"title": "mutation observer feature jquery core", "body": "really would like see easy way work mutation observers jquery maybe excited plugin think could really something jquery core provides", "num": "2072", "d": "2/2015"}, {"title": "animated toggle turns display inline display inlineblock", "body": "example nonanimated appears work normally animation like put property element example causes red text drop new line instead wrapping normally happens whether span explicitly set display inline earlier inheriting default value bug seems similar apparently closed prior release nt quite", "num": "2071", "d": "2/2015"}, {"title": "data keys match data specification two dashes used", "body": "jquery provided method since change made conform data specification according specification key converted converted method allows arguments provided docs says return values object calling data parameters retrieves values javascript object jquery works correctly matches one would expect jquery data attributes two consecutive dashes converted way data attributes containing single dash means treated way converted special notes attributes containing two dashes row included returned object appeared fixed makes first version bug appears tests html code used testing html jquery test js var data div data assertequal data one none assertequal data nestedsingle single assertequal data nesteddouble double pass fail test js var data div dataset assertequal data one none assertequal data nestedsingle single assertequal data nesteddouble double passes expected refs cc loic", "num": "2070", "d": "2/2015"}, {"title": "chaining submit add nt work ie", "body": "following syntax works safari osx chrome winosx firefox winosx work nonmetro ie windows var html html html expect work ie browsers document add html submit also work ie browsers body append html submit thing get work ie also works browsers body append html theform submit", "num": "2069", "d": "2/2015"}, {"title": "support cross domain patch requests using broke", "body": "jquery versions provided support making cross domain patch requests using jqueryajax method assuming client server settings configured correctly cors support broke beginning jquery properly configured ajax request fails error could complete operation due error stepping relevant jquery code shows underlying error thrown permission denied breaking change appears occurring newly added condition getpostheadputdeleteoptions itest thistype amp amp code determining type xhr object use complete description including code snippets found would happy provide jsfiddle link showing vs support link shared privately regards john", "num": "2068", "d": "2/2015"}, {"title": "ca nt import module bower properly", "body": "try import package bower get error message feb error component json file c devreposspajsclientjavaserverclientsrcmainbowercomponentsjeditablebowerjson must property see", "num": "2067", "d": "2/2015"}, {"title": "callback function called blur event", "body": "versions gt gt browser chrome steps reproduce save following html file html bind blur function consolelog blur focus call trigger blur callback print console blur open file chrome open debug panel click anywhere debug panel refresh expected callback function called print console observed output console matters callback works expected nt click debug panel something window active sense word active ca nt tell bug related bug also occurs using karma test runner jasmine making tests involving fail versions jquery gt culprit suspect problem something clicking debug panel call trigger event callback", "num": "2065", "d": "2/2015"}, {"title": "double fired mouseenter chrome", "body": "version jquery browser chrome demo native event fired chrome jquery event fired twice chrome", "num": "2064", "d": "2/2015"}, {"title": "animation windows store apps", "body": "line line always return undefined windows store app used lines forward crashes use case trying use jquery blockui within windows store app", "num": "2062", "d": "2/2015"}, {"title": "inserting", "body": "hello issue pertains warning message synchronous xmlhttprequest main thread deprecated detrimental effects end user experience help check appears inserting", "num": "2060", "d": "2/2015"}, {"title": "find context performance weirdness", "body": "hi must missing something big big difference performance number times faster", "num": "2059", "d": "2/2015"}, {"title": "nt expose jqueryswap", "body": "even wantneed internally still nt expose reason robust modular architecture method undocumented technically could stop exposing whenever want better moment release nt see code make sure scottgonzalez amp arschmitz assume uimobile nt depend", "num": "2058", "d": "2/2015"}, {"title": "investigate possible performance improvements showhide methods", "body": "related", "num": "2057", "d": "2/2015"}, {"title": "update jscs", "body": "released later week lot jquery related changes last meeting decided update beta release would nt clutter prs", "num": "2056", "d": "2/2015"}, {"title": "sizzleattr typeerror", "body": "code throws uncaught typeerror exception sizzleattr tries call getattribute comment element comments function", "num": "2055", "d": "2/2015"}, {"title": "jquery sizzle generates wellformed error", "body": "scripts work fine upgraded get error rather cryptic note running seamonkey similar firefox uses exact javascript engine sure version really far feels like interpreter like value identifier ends definitively seem like good identifier wondering occurs something slightly wrong somewhere whether sizzle wrongly generates invalid identifier control thus far seem prevent scripts working least happens cleanup variable garbage collection particularly seems happening dealing xml document opposed standard html dom jsfiddle offers jquery specify js store use google version fiddle url", "num": "2054", "d": "2/2015"}, {"title": "integrate velocityjs replace jquery animate", "body": "issue explore possibility integrating velocityjs jquery huge change naturally need everybody involved discussion cc slexaxton paulirish", "num": "2053", "d": "2/2015"}, {"title": "click working innerhtml changed", "body": "", "num": "2052", "d": "2/2015"}, {"title": "removeattr onsubmit working ie", "body": "tested ie developer tools disabled submit functions run chrome ie developer tools open function run bug occurs jquery edge compat edge", "num": "2051", "d": "2/2015"}, {"title": "drop support android lt", "body": "android lt market share androids whereas android platform takes mobile market share gives us android lt whole mobile market share would account desktop browsers calculations get super low percentage android lt whole browser market share plus nt remember tickets old android except ones created mzgol added testswarm found bugs given drop support know wan na", "num": "2050", "d": "2/2015"}, {"body": "data attributes pulled first time data property accessed longer accessed mutated data values stored internally jquery need modify attributes please use", "d": "2/2015"}, {"body": "thank question jquery process adding support shadow dom casebycase basis however question better suited forums", "d": "2/2015"}, {"body": "second issue resolved lands first appears working expected please post link reopen edit reproduce first issue reopen", "d": "2/2015"}, {"body": "get dimensions hidden elements jquery must make element visible measure requires browser expensive reflows nothing say docs issue already note goes every dimensions page clear enough getting dimensions hidden elements always going unreliable slow especially applied hundreds elements", "d": "2/2015"}, {"body": "would better classed issue jquery ui library investigated nt expectation library would checking dimension inner elements making selections surprising see big performance difference due filtering looking different means hiding filtered rows table avoid problem happening", "d": "2/2015"}, {"body": "might things jquery ui make faster sure anything selectableitem data would valid hidden elements whole thing might able skipped", "d": "2/2015"}, {"body": "kinds utilities make jquery used internally plugins utility libraries code best ways cover use case", "d": "2/2015"}, {"body": "intro outro files syntactically incorrect purposeful build half wrapper around built source standalone modules sure assets task suspect attempting concactenate files src folder looking build jquery custom build instructions readme", "d": "2/2015"}, {"body": "make confusing", "d": "2/2015"}, {"body": "agree given time machine one first things would killed hitler time someone noticed inconsistencies suggested fix back decided even back would break much code today ratio jquery native web probably hundreds one nt make sense create backcompat nightmare match semantics different method used different types objects want exact arguments method jquery create little plugin implement also means nt broken existing code continues use get ways", "d": "2/2015"}, {"body": "dont touch hitler nobody knows could without fix spend next years regreting missing opportunity untill another chance fix", "d": "2/2015"}, {"body": "fixing regrettable action equivalent way solve want", "d": "2/2015"}, {"body": "check", "d": "2/2015"}, {"body": "careful us exposing shim browser builtins freezes makes much harder remove later want people also expect us fixes making close native possible imo would make sense mostly wanted people able provide implementations assigning sure useful would", "d": "2/2015"}, {"body": "see us creating alias different though latter adds new handler existing deferred", "d": "2/2015"}, {"body": "course would need done trigger reserved word treatment older browsers", "d": "2/2015"}, {"body": "got", "d": "2/2015"}, {"body": "recast question form bugfeature think would whether jquery support lazyloaded would run handlers fires read background seems like could use hack domready uses", "d": "2/2015"}, {"body": "seems like could use hack domready uses hack needed ie lt code looks like", "d": "2/2015"}, {"body": "reference mentioned hack last commit dropping ie lt", "d": "2/2015"}, {"body": "meant check use domready turns method went away using indirect feature check penalize least think would mean", "d": "2/2015"}, {"body": "ah library domready coreready sorry", "d": "2/2015"}, {"body": "filing issue native browser features fiddle nt even use jquery", "d": "2/2015"}, {"body": "realize thanks", "d": "2/2015"}, {"body": "dup", "d": "2/2015"}, {"body": "think may relying undefined behavior chrome firefox nt show nt try browsers find spec reference says event path change delivery jquery honors nt find discussion happen listener removed midst dispatch find one", "d": "2/2015"}, {"body": "found something like method allows removal event listeners event target eventlistener removed eventtarget processing event triggered current actions eventlisteners never invoked removed", "d": "2/2015"}, {"body": "yes seem like spec intended behavior similar language mdn note none three browsers seem call event listener added process handling event seems oddly asymmetrical nt seem special case laid way classic modifying collection enumerated dilemma jquery single dom event listener jquery handlers element takes snapshot handlers exist time event arrives tried use live collection would need guard case alreadycalled handler removed could skip handler still attached lot mess really rare edge case jquery event handler semantics nt match dom event listeners exactly fact even browsers consistently tells rarely people depend suggested resolution add sentence docs clarifying handler list element set event first delivered far wanted would something like solution", "d": "2/2015"}, {"body": "funny thing anything jquery project wanted know case work native event handlers browsers checked jquery found mismatch know understand making changes part code responsible event handlers good idea complicate much agree rare case proven think first one noticed adding notification jquery docs sufficient job", "d": "2/2015"}, {"body": "api issue opened", "d": "2/2015"}, {"body": "please file issue reduced test case", "d": "2/2015"}, {"body": "seems like good idea plugin would nt go jquery core", "d": "2/2015"}, {"body": "yes", "d": "2/2015"}, {"body": "duplicate", "d": "2/2015"}, {"body": "afraid always fail case even would use host window guess best nop fyi method detached nodes always bad idea", "d": "2/2015"}, {"body": "arguable throwing error preferable even returned style declaration every value empty string nt see use case retrieving styles early useful", "d": "2/2015"}, {"body": "stems perf advice longer relevant building dom detached avoid layouts paints yeah node detached throw error", "d": "2/2015"}, {"body": "current behavior seems fine unless better use case showing commonly happen really help caller return empty strings case", "d": "2/2015"}, {"body": "ok seems team agreement thank opening issue desired behavior retrieving styles detached elements opened docs issue", "d": "2/2015"}, {"body": "would fine making lot changes promisea compliance would also move people towards standard methods", "d": "2/2015"}, {"body": "sounds good let also open ticket jquery migrate tho", "d": "2/2015"}, {"body": "opened", "d": "2/2015"}, {"body": "created docs issue", "d": "2/2015"}, {"body": "better question forum stackoverflow", "d": "2/2015"}, {"body": "browser decides fire element removed dom appears jquery removed data element actually removed focus management flakey general many browsers particularly ie blur asynchronous example nt even get final event nt lot jquery need handle removing focused element add logic code", "d": "2/2015"}, {"body": "given situation behavior depend getting focusout event element removed explicitly set focus visible element removing element focus good practice anyway", "d": "2/2015"}, {"body": "docs seem pretty clear purpose prerequest callback function used modify jqxhr jquery xml object sent use set custom headers etc time reaches point bookkeeping already completed want change data could prefilter", "d": "2/2015"}, {"body": "dmethvin thanks anwser use set custom headers etc interpreted also would something allowed modify", "d": "2/2015"}, {"body": "thatt modifying jqxhr though", "d": "2/2015"}, {"body": "somehow possible use one call possible register globally", "d": "2/2015"}, {"body": "one ajax call could nt pass data options encode url call getting forumstackoverflow territory might want start thread best way deal use case", "d": "2/2015"}, {"body": "data already provided ajax using option lib using problem nt control code hook mechanics event fired want intercept adjust data beeing transmitted without modifying lib", "d": "2/2015"}, {"body": "root cause give javascript opposed tries helpful add end value seemed right thing different change method reset css property empty string setting actual value value number would worked method maintains evergrowing list properties truly unitless transitionduration unitless properties one specific value lack units unambiguous numeric value like could mean various different time units wonder place value actually need units could simply skip adding one case", "d": "2/2015"}, {"body": "wonder place value actually need units could simply skip adding px one case", "d": "2/2015"}, {"body": "experts correct plain time value incorrect example probably valid code changes required", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "since polls would seem okay say really sure okay though seems like would need hander notified seeing notifications change version master", "d": "2/2015"}, {"body": "problem using plugin people nt need adding quite bytes nothing", "d": "2/2015"}, {"body": "agreed thank opening issue think best left plugin", "d": "2/2015"}, {"body": "looks right please reread docs ask help forum stackoverflow", "d": "2/2015"}, {"body": "ok figured wrong selector instead thanks putting time cheers", "d": "2/2015"}, {"body": "mrducnguyen odd positional selector means filters selection independent dom structure selectors nonstandard slow quite frankly atrisk future versions strongly recommend switching nthchild cases like siblings interchangeable filter generalpurpose afterthefact collection reduction instead use one following note css oneindexed opposed zeroindexed javascript", "d": "2/2015"}, {"body": "thanks suggestions actually found another interesting thing actually different use adds class row index adds class row index", "d": "2/2015"}, {"body": "stems fact nested table related document order nested tr elements follow tr elements outer table yet another reason avoid positional selectors", "d": "2/2015"}, {"body": "stop spamming repository", "d": "2/2015"}, {"body": "actually would like keep probably prevalent user code needs stay regardless long time nt used much nwmatchers name filters intuitive name regardless like continue recommending use createpseudo method creating custom selectors making choice one property somewhat moot except jquery ui already uses available", "d": "2/2015"}, {"body": "actually would like keep sense moving deprecated standardizing probably prevalent user code needs stay regardless still exceedingly rare among things lack documentation fix could nt simpler rate though propose deprecation think remove anytime soon promote consistency long time nt used much would depend measurement criteria probably used execution count jquery ui alone extent specialcase functionality used much bet updating apijquerycom would address educational gap nwmatchers name filters intuitive name appears nwmatcher moved least api perspective addressing however even nt maintaining surface area jquery core support transitioning independent selector engine seems overaccommodating regardless like continue recommending use createpseudo method creating custom selectors making choice one property somewhat moot except result still assigned object property eg", "d": "2/2015"}, {"body": "would depend measurement criteria probably used execution count jquery ui alone extent specialcase functionality used much bet updating apijquerycom would address educational gap think different wavelengths terms defining custom pseudos said jquery ui mostly used used still referring user code general remember seeing much often maybe memory result createpseudo still assigned object property eg data totally true brain fart however main point nt jquery documentation either documenting custom pseudo creation jquery fine picking property sticking still nt see value behind deprecating properties deprecation voices intention removal whether say use property documentation seems like enough", "d": "2/2015"}, {"body": "thank opening issue think best left plugin maintained independently", "d": "2/2015"}, {"body": "looks correct necessary actually change dimensions element animation text wraps strangely animation changes width height opacity width reduces less length text text wraps expect happen", "d": "2/2015"}, {"body": "definitely related fixed supports solution arguably distinct", "d": "2/2015"}, {"body": "sure expecting code like therefore also nt know mean work expect append form body trigger submit event body whereas something like would append immediately submit form", "d": "2/2015"}, {"body": "ah expecting submit triggered newly added html apparently understanding incorrect thank", "d": "2/2015"}, {"body": "posted fiddle fiddle loads jquery default runs see result patch verb success step versions jquery using ie find works versions point see fail detail error appears jsfiddle different reported perhaps due jsfiddle overhead copy code html page run directly using without running jsfiddle see error reported", "d": "2/2015"}, {"body": "thank detailed issue try make fix", "d": "2/2015"}, {"body": "jquery property bowerjson seems issue connected project", "d": "2/2015"}, {"body": "add reproducible changed", "d": "2/2015"}, {"body": "looks like nt issue", "d": "2/2015"}, {"body": "seems work take look fuzzy rules focus try native methods jquery breaking something works native methods please provide test case", "d": "2/2015"}, {"body": "trying accomplish modifying contents element mouseenterleave pretty dicey note clarification fiddle", "d": "2/2015"}, {"body": "try replace image video mouseenter back mouseleave event jquery event native behave differently fired fired think lack older browsers script normal browsers behave would great implementation mouseenter would work older browsers true emulated eventover", "d": "2/2015"}, {"body": "sounds like understand difference due code simulate mouseenter mouseover even chrome bugs synthesized event double fires problem mouseover event fired img handler div removes seems required event flow says dom event flow event listeners might change position event target document event object dispatched changes affect propagation path second event mouseenter synthesizer checks related element child nt removed perhaps could also check whether related element even document deal edge case nt know occurs situations far work around issue could position img element rather modify dom", "d": "2/2015"}, {"body": "take rare edge case occurs element event path manipulated may fix checking related element removed document mentioned may side effects", "d": "2/2015"}, {"body": "difference behavior nativeevent jqueryevent difficult consider true problem dom event general jquery browsers handle event difficult decide way correct sent bug report firefox example decide bug chrome everything right problem jquery", "d": "2/2015"}, {"body": "understand security model since store apps elevated privileges nt take kindly iframes may unknown content provide jsfiddle smallest sample code windows store app crashes code path taking defaultdisplay suspect use show inside blockui always bad idea guess may turn eliminate process dealing breaking change unlikely land soon", "d": "2/2015"}, {"body": "provide complete test case reopen", "d": "2/2015"}, {"body": "go away lands", "d": "2/2015"}, {"body": "since nt see line items let continue working towards resolution", "d": "2/2015"}, {"body": "valid test variable contains every single element page whereas contains single one since indexed use valid comparison see equivalent", "d": "2/2015"}, {"body": "ah sorry inspected prep code closely found base test", "d": "2/2015"}, {"body": "definitely nt use ui", "d": "2/2015"}, {"body": "nt even know existed saw related discussion definitely mobile either", "d": "2/2015"}, {"body": "sounds good think originally exposed users could control retrieve useful values hidden elements use case rare best", "d": "2/2015"}, {"body": "ok assigning", "d": "2/2015"}, {"body": "turns something needs nt want internally could put jquery migrate doubt used externally never documented plus really bad practice performance standpoint", "d": "2/2015"}, {"body": "could improve case simplifying avoiding check visibility seems webkit taking getting value sure would work yet though", "d": "2/2015"}, {"body": "check visibility could optional passing argument disabled default would nt sacrifice performance really needed", "d": "2/2015"}, {"body": "according jquery always adds page pageload use much simpler code support ie browsers obey selector nt know performance characteristics though class selectors probably faster attribute selectors another benefit either classbased attributebased toggling animated css means jquery plugin decide show show happens without changing plugin code", "d": "2/2015"}, {"body": "jamesarosen showinghidding elements used think attribute good choice however spec includes description makes inappropriate number cases hidden attribute must used hide content could legitimately shown another presentation example incorrect use hidden hide panels tabbed dialog tabbed interface merely kind overflow presentation one could equally well show form controls one big page scrollbar similarly incorrect use attribute hide content one presentation something marked hidden hidden presentations including instance printers encourage use ariahidden ties directly actual state element also means element hidden accessible manner", "d": "2/2015"}, {"body": "related could punt small might well come valid test cherrypick somewhat indirectly prevents issue surfacing", "d": "2/2015"}, {"body": "nodetype check", "d": "2/2015"}, {"body": "looks like duplicate jquerysizzle harmless already fixed upstream resolved next jquery release", "d": "2/2015"}, {"body": "hey author velocity even nt come fruition excited explore potential improve animation jquery velocity thoughts pro faster animation within jquery particularly lowpowered mobile devices velocity optimized willingness gut velocity redo internals wrap web animation api means even performance benefits particularly situations high concurrent main thread load css currently shines considerably expanded workflow features jquery users talking frivolous niceties rather valuable basics lot people would expect jquery first place transform animation svg animation robust scrolling syntax color animation better animation chaining multicall management removal redundant bloat use jquery w velocity gsap transit svg animation library velocity inside jquery quite bit space saving although mention one remove bytes nuts con could breaking changes certain edge cases may ultimately interested addressing attempted address every edge case velocity would wind far away original intention make animation better make jquery animation better velocity uses jquery animate syntax awesome trying improve upon jquery wanted best animation library could make jquery perfect starting point getting point users velocity people care webbased motion design workflows would expect development principle going forward principle nt completely beholden jquery past yes would likely minor breaking changes nothing big though sure core stuff jquery animate velocity however jquery going semver release par course anyway people want stay comfort zone stick want catch times upgrade read lines new documentation jquery probably needs go regardless remain competitive frameworks big improvements require big changes politicking ca nt turn prolonged backandforth sufficient majority opinion within jquery core move ahead come within reasonable timeline put necessary work get velocity ready internal replacement whatever else guys gals bring attention", "d": "2/2015"}, {"body": "personally love idea gsap velocity around performance perspective reason use current jquery animation engine aside cost adding another dependency app", "d": "2/2015"}, {"body": "reiterate points made meeting nt tests lint code ciintegration uses ua detection instead feature detection clear much would performance gain would since jquery also uses raf test velocity animate tests drop replacement would fail tests first point widely considered bad way write code second recognized bad practise long time ago basically everyone else always advocated logic third point believe jquery performed slower nt case would like see performance test forth point failures api incapability internal really nt mixed feelings statement velocity animation engine api jquery animate although would nt consider replacement would interesting see could reuse tricks library course something interesting aside use see velocity popularity result qualified marketing efforts anything else would nice prove wrong", "d": "2/2015"}, {"body": "cc gnarf", "d": "2/2015"}, {"body": "nt tests lint code ciintegration nt publicize later week uses ua detection instead feature detection microconcern quickly refactored sparing use ua detection limited small subset behavior could probably rip entirely concern better suited subsequent discussion entailing velocity would refactor order replacement clear much would performance gain would since jquery also uses raf articles detail velocity performance optimizations go far beyond raf refer velocity documentation regardless primary benefit velocity one workflow enhancement reversal proper scrolling looping svg animation transform animation ui mocking people switch also continue using performance allure checking test velocity animate tests drop replacement would fail tests yep one thing spoke david interest passing tests something consider jquery semver release example would nt necessarily pass every littleused animation edge case tbd believe minor breaking changes occur better tbd see velocity popularity result qualified marketing efforts anything else would nice prove wrong articles tutorials velocity focus workflow benefits performance workflow benefits inarguably game changer anyone ui motion design fad popularity would nt enduring ps cool velocity stuff", "d": "2/2015"}, {"body": "refer velocity documentation think better perf test numbers best arguments think workflow benefits arguing wonder jquery scope since one jquery goals try small possible want something extensive task might better suited specific animation framework quieter would nt clutterderail discussion since would really interesting hear thoughts cc people", "d": "2/2015"}, {"body": "jquery animate nt ever performance imo dealing really common animation use cases web dev world use cases changing velocity covered interested knowing parts jquery animation unit tests would need compat work velocity core ca nt work velocity core much work julianshapiro thinks personal costbenefit nt think performance even topic thread microperf best performance something work together well lot us experience interested hearing arschmitz well", "d": "2/2015"}, {"body": "following velocity change jquery raf pretty closely since jquery mobile planning switching js based animation transitions decision partially part move share code ui partially seen improvements speed js based animation things like velocity lot headaches surrounding css based solutions gnarf well rest ui mobile teams talked pro cons around current approach going start jquery core see performance issue depending outcome next step going either look using velocity directly try improve directly done limited prototyping around months ago see performance looked like older mobiles tests purely visual frame rates anything time velocity give noticeable benefit though pages admittedly simplistic complex pages velocity would make difference understanding nt think performance even topic thread microperf best performance something work together well lot us experience think work together either way perf concern nt really opinion velocity vs replacing velocity beyond would really like see us work together whatever solution going make sense whole", "d": "2/2015"}, {"body": "also julianshapiro feel free reach irc gnarf google hangouts gmail want talk unit tests jquery", "d": "2/2015"}, {"body": "thanks edit reserved comment julianshapiro everyone else scroll reread comment number could breaking changes certain edge cases idea edge cases may although mention one remove bytes nuts idea difference weight effectsjs velocityjs currently like small compact things nuts could probably help politicking ca nt turn prolonged backandforth sufficient majority opinion within jquery core move ahead totally board plan little worried breaking gt much lt backwards compat significantly increasing file size basic jquery given thoughts making velocitycore could include adding bigger byte size features like color plugins also looked jquerycolor apiway thing really like idea taking core velocity replace effects cover units minimum needed easy install plugins everything else", "d": "2/2015"}, {"body": "julianshapiro thank effort obviously still details work concerning implementation think would safe say move forward couple addenda take lead adapting velocity inclusion team help however still lot would ask patience first address remaining issues want move ahead nt think say certain going included code prepared reach point reassess things need take care inclusion following semver also try make breaking changes unless passing unit tests goal shoot leeway holy grail would pass bulk work completed would great could put together numbers performance comparisons may primary concern still concern first step improving performance measuring also numbers great making release notes ambition improve jquery animations much appreciated", "d": "2/2015"}, {"body": "ambition improve jquery animations much appreciated qft hearteyes", "d": "2/2015"}, {"body": "excited idea mostly antiraf situation getting bad fixed yay feel little conflicted first markelog original concerns seem pretty valid tests published get go hooked ci sure heart broken ua sniffing definitely seems addressable kinda surprised primary benefit velocity one workflow enhancement true velocity library targets sort authoring amp workflow feature set beyond basic animate api shoots inside jquery really interested animation engine reversal proper scrolling looping svg animation transform animation ui mocking sugar available respect combo little funny velocity value proposition around workflow aspects jquery needs basic animationtweening core even snabbtjs size velocity functionality jquery needs performance easy show velocity whopping legacy test cases probably better show difference real world sites measuring avg framerate amp std dev missed frames cpu time per frame tangentially related see julian questions necessity backward compatibility particular amp methods provide ability totally tank performance developers either invalidate styles via mutations force recalc layout probably upgrading animate performance might require addressing two guys", "d": "2/2015"}, {"body": "gnarf paulirish idea edge cases may hook velocity jquery tests find shortly idea difference weight effectsjs velocityjs currently like small compact things nuts could probably help take consideration velocity internal css gettersetter engine would replace jquery process initially spoke david would net negative saving bytes without taking consideration probably around ungzipped extra check velocity goes inside jquery removing features keep necessity focused case would likely size boost even hypothetical situation tests published get go reasons hint wanted discourage pr time happy code feature requests always great tests day one publish weekend mentioned heart broken ua sniffing definitely seems addressable kinda surprised feel like let dad jquery needs basic animationtweening core core assumption nt heard echoed elsewhere fact far understand motivation jquery behalf rethink statement whole short must asking jquery basic animation functionality answer motivationperspective base level svg color transform animation support arguably unacceptable jquery continues lack features going forward animation functionality continue need widespread supplementation enriched workflow level agree advanced workflow features velocity offers probably part jquery good news even part velocity begin relegated velocity ui pack velocityjsorg uipack", "d": "2/2015"}, {"body": "going put worth long time jquery velocityjs user business web development discovered velocity long came impressed low overhead smooth animations compared jquery extent add projects need animations beyond basic use best tool job quite happy custom build jquery without animation support use css animations depending trying achieve still coming back velocity something repeated large number sites using yet never run velocity without jquery scale sites need develop words animate useful bit like hammer velocity screwdriver bits toolbox etc bringing core velocity possibly couple small changes calls fit jquery things would positive thing already extra library mean extra bandwidth part entire balancing act job almost suggest jquery slimline base velocity ie b animations basic control add rest things make velocity special jqueryui colours sequences etc unlike things already already ability build custom version needed would make major code shuffle already minor reshuffle begin far breaking things changing api goes best knowledge api changes would additions rather replacements big differences related wrappers updated tl dr version basically jquery could write improved animation code projects could continue duplicating efforts fix issues improvements browsers projects could come together extra initial work end something better", "d": "2/2015"}, {"body": "html", "d": "2/2015"}, {"body": "div contains sap element innerhtml changed javascript language", "d": "2/2015"}, {"body": "please ask programming help stackoverflow jquery forum", "d": "2/2015"}, {"body": "see note removing inline onclick event handler using removeattr nt achieve desired effect internet explorer avoid potential problems use prop instead note include ie funny like", "d": "2/2015"}, {"body": "mobile market share counted separately desktop otherwise get low values almost everything mobile devices still nontrivial amount jquery mobile also needs support cc arschmitz besides real market share likely higher android dashboard counts people visiting google play store amp people newer devices nt think", "d": "2/2015"}, {"body": "one thing could introduce grades support like mobile make sure apis work would nt care pixel differences android etc know rwaldron though", "d": "2/2015"}, {"body": "mobile market share counted separately desktop exactly otherwise get low values almost everything could define everything besides real market share likely higher android dashboard counts people visiting google play store amp people newer devices sorry speculation think statistics close get real data couple years ago android lt share rapidly dropping giant pain support might wait little branch would make sense mentioned nt real old android issue gives optimistic attitude topic", "d": "2/2015"}, {"body": "one additional thing consider hybrid apps one main uses vs always said hybrid apps similar also one main ways jquery mobile used android lt dropped main branch longer able use many hybrid apps support android often goal hybrid apps also idea single code base likely means cases especially using jquery mobile apps start switching platforms like ios well able use version jquery everywhere making apps android cross platform market huge number think would decrease usefulness main branch drive people use compat im really sure thats want", "d": "2/2015"}, {"body": "one thing could introduce grades support like mobile make sure apis work would nt care pixel differences android etc know rwaldron though would ok however would say careful little bit pain point time still trying figure right way handle mobile", "d": "2/2015"}, {"body": "markelog mobile market share counted separately desktop exactly people divide ones using firefox chrome ie etc nt divide people using android ie desktop opera etc use desktop browser mobile one smartphone use mobile one rarely desktop one use conflating desktop amp mobile browsers nt take account", "d": "2/2015"}, {"body": "android lt dropped main branch longer able use many hybrid apps support android often goal hybrid apps also idea single code base likely means cases especially using jquery mobile apps start switching platforms like ios well able use version jquery everywhere actually officially nt support hybrid apps branch dropping android would mean nt support android hybrid apps", "d": "2/2015"}, {"body": "would put mobile really hard spot force us either drop support hybrid apps recommend people never leave need support android would also make actually defining core dependency kind complicated", "d": "2/2015"}, {"body": "would put mobile really hard spot force us either drop support hybrid apps recommend people never leave need support android yup yet another reason dropping android lt would premature point long mobile supports", "d": "2/2015"}, {"body": "need support android mean need support android really need shared opinion keep open could revisit later dmethvin", "d": "2/2015"}, {"body": "seems like still reasonably big numbers android would bad idea break outright platform example issue think keeping android phantomjs point took code would blow nothing would work", "d": "2/2015"}, {"body": "markelog meant need support android whole generalization fully aware many apps written android support versions android currently supported app store actually ok ignoring numbers sooooo low think devs realistically ignoring well nt think ignore", "d": "2/2015"}, {"body": "arschmitz ago run test suite android via browserstack turns nt fail many tests android currently mostly work even nt test difference amp far greater", "d": "2/2015"}, {"body": "mzgol aware nt bring since nt think anyone advocating us supporting yes reality probably fairly safe run nt actually test would recommend anyone", "d": "2/2015"}, {"body": "given current usage stats need android support mobile nt think dropping support yet looking hopeful able drop support later version open new issue time comes", "d": "2/2015"}, {"body": "trust working mobile want drop support anyone cheer day happens cant today", "d": "2/2015"}, {"body": "hidden inputs ca nt contain focus rule jquery break", "d": "2/2015"}, {"body": "dmethvin trying focus hidden input clicking visible textbox time focusin event occurs handler hides sibling input prevents click event propagated another take demo nt used hide time used empty instead", "d": "2/2015"}, {"body": "agree confused thought wrapped however also happens bare dom far tell look correct nt think anything click nt delivered", "d": "2/2015"}, {"body": "dmethvin yes looks correct tried chrome ie ff dom caption clearing nt work", "d": "2/2015"}, {"body": "removing element text box moves underneath mouse pointer keep mouse depressed move box click appears", "d": "2/2015"}, {"body": "ok guess click event considered mousedown mouseup need happen target click happens parent child target moved considered click anymore look demo guess workaround use mousedown instead click parent get mousedown mouseup anyway", "d": "2/2015"}, {"body": "third argument difference branches obviously nt go path", "d": "2/2015"}, {"body": "could cache fact selector failed skip subsequent ones actually entry sizzle cache nt mean must failed previously", "d": "2/2015"}, {"body": "hmm bad idea", "d": "2/2015"}, {"body": "yeah like lot panacea selectors theirselves different avoids lot pain little effort", "d": "2/2015"}, {"body": "issue opened address issue fairly well little cost gibson said close issue merge sizzle update", "d": "2/2015"}, {"body": "paulirish happy know see improvement", "d": "2/2015"}, {"body": "wow amazing", "d": "2/2015"}, {"body": "nice one awesome", "d": "2/2015"}, {"body": "wow cool", "d": "2/2015"}, {"body": "screen shot console running fiddle", "d": "2/2015"}, {"body": "looks like returns tablebending chicanery going sure much use table instead", "d": "2/2015"}, {"body": "sufficiently obscure difficult work around think mark wontfix nt like divs styled table elements", "d": "2/2015"}, {"body": "thaina hey checking would able provide test case markelog asked", "d": "2/2015"}, {"body": "forgot close issue doh", "d": "2/2015"}, {"body": "seems android problem ios sure happens android seems ca nt ca nt scroll code gon na blacklist", "d": "2/2015"}, {"body": "patch restoring hack android landed problem reappear browsers likely need mark wontfix add note docs", "d": "2/2015"}, {"body": "like take dependencyfree promisecompatible approach etc shims gaps build restrictions js var readyfiring readycallbacks whenready function callback readycallbackspush callback jqueryfnready function callback whenready callback return could also thenable function want jqueryready fn dont jqueryready jqueryfnready suitably wired load events documentreadystate holdready function resolveready whenready function callback readycallbackspush callback readyfiring readycallbackslength callback readycallbacksshift jqueryisfunction callback perfect backcompat synchronous call context trycatch break bit want callbackcall document jquery readyfiring whenready additionally deprecate etc favor deprecate nasty global behavior modifier better covered casespecific deferredpromise patterns remove alreadydeprecated document ready event", "d": "2/2015"}, {"body": "additionally sound good", "d": "2/2015"}, {"body": "oh really simple way patch things like fact nt dependencies agree extras well never really liked nt seem widely used seems like maybe older stealjs uses case talking removal point deprecation", "d": "2/2015"}, {"body": "note better worse mediawiki currently makes use method thenable view source wikipedia page example uses fire jquery domready handlers towards end actual end script tags html windowjquery amp amp jqueryready windowmw mwloaderrequire windowmw mwdataset backendhost mediawikiincludesoutputpage bottomscripts added mediawiki fixes bug solved firefox bug regards also simplified things little needing jquery crossbrowser stuff served way effectively bring browsers bootstrapping scripts loaded run document ready run scripts loaded bottom body requestedloadedparsed thus making lot likely run initial rendering reduce flashes lesser styled content", "d": "2/2015"}, {"body": "added could test instead good make sure fixed edge nt apply even hacky workaround soon", "d": "2/2015"}, {"body": "sure hook really needed everywhere monteslu error harmless cause issues", "d": "2/2015"}, {"body": "actually breaking anything looks awful", "d": "2/2015"}, {"body": "added could test instead still need test could use additional restriction beyond register thrilled work", "d": "2/2015"}, {"body": "anything core push fix firefox nt think force clicking asynchronously internally", "d": "2/2015"}, {"body": "trick event special api correct method calling leads teardown calling", "d": "2/2015"}, {"body": "actually read comment looks like okay scottgonzalez clarify repeat summation earlier long meaningful values returned nt problems possible break existing code reason push break quotes common cases centering pixels probably noticeable cases agree possible break code somewhere hand ca nt think would nice expose way get dimension already provided examples would actually break see", "d": "2/2015"}, {"body": "scottgonzalez nt mean annoy still clear position seems presented arguments sides said breaks barely noticeable reminded dave listed multiple examples would break existing code simply neutral", "d": "2/2015"}, {"body": "neutral change enables reasonable use cases think ok allow breaking change major release userland fix breaking change pretty simple", "d": "2/2015"}, {"body": "would like add since nt see mentioned anywhere css height css width also rounding values fiddle hope helps", "d": "2/2015"}]