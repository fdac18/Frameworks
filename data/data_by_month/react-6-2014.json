[{"title": "would nt cool classname could inject object classset", "body": "sort stray thought classname could pass object addon", "num": "1766", "d": "6/2014"}, {"title": "key enter anchor fire click event", "body": "key enter focused anchor fires click event raw dom react mimics browser behaviour", "num": "1764", "d": "6/2014"}, {"title": "inbrowser transformer warn typejsx script nt jsx comment", "body": "inbrowser transform typejsx script jsx processme comment emit warning browser syntax error reporting pretty much useless least firefox says syntax error pointing script tag includes react something equally unhelpful surprised nt find existing issue ca nt first person lose bunch time nt", "num": "1762", "d": "6/2014"}, {"title": "adding getdefaultcontext method", "body": "realizing context undocumented api may change wanted see anyones thoughts might adding possible add reliable defaults context prop defined making possible write stricter definitions", "num": "1756", "d": "6/2014"}, {"title": "reactchildrenforeach reactchildrenmap etc check arguments", "body": "accidentally forgot pass passed callback function first could throw error passing first argument see happy make change desirable", "num": "1755", "d": "6/2014"}, {"title": "add failfast mode react", "body": "using components missinginvalid prop warning logged child key provided would like error thrown instead already discussed issues like way totally support related issue ensure proper proptype documentation components would require error instead warning fail dev better would nice able use react strict way using configuration attribute something one thing would probably add enforce components name see", "num": "1753", "d": "6/2014"}, {"title": "express required children proptype", "body": "hi want component least one required children children singe element array easy avoid useless array allocation according doc nt know simplest way come syntax guess usecase quite common people building modals things like maybe would nice simpler way express children required maybe job kind guarantee children prop never different type", "num": "1752", "d": "6/2014"}, {"title": "incorrect component name using jsx browserify", "body": "big deal browserify cases react component name correctly inferred variable name assigned like normally case jsx transformation works fine produce error messages like error message component name correctly inferred another kind node module declaration work quite annoying easy know component nt inject required props guess usecases case react class assigned guess component name rather filename nt know bug feature request wanted mention", "num": "1751", "d": "6/2014"}, {"title": "datetime attribute element disallowed react", "body": "render time element see react throws away datetime attribute bad screenreadersmicroformats use get semantic meaning see", "num": "1749", "d": "6/2014"}, {"title": "testing component", "body": "hi component class eleventhenvelopesreactlist param eleventhenvelopesstorage storage constructor constructor storage want write test example component generate text test react require processcwd bowercomponentsreactreactwithaddons reacttestutils reactaddonstestutils renderintodocument iscompositecomponent reacttestutils expect require chai list eleventhenvelopesreactlist suite eleventhenvelopesreactlist list setup list new list list listcreate envelopes suite list result react components valid mounting passing failing eleventhenvelopesreactlist list generate ul list typeerror object false method mountcomponentintonode figure test component still errors could find good article thanks", "num": "1746", "d": "6/2014"}, {"title": "popups opened handlers get blocked browsers", "body": "nt happen use bind function opens popup", "num": "1745", "d": "6/2014"}, {"title": "make sure polyfill list date", "body": "need sure added others recently", "num": "1744", "d": "6/2014"}, {"title": "question regarding todomvcflux example dispatching actions", "body": "unsure ask let know post somewhere else question regarding todomvcflux example dispatching actions flux watching video describing flux architecture presenter mentioned action goes store ca nt put another one stores completely finished processing presenter mentions several times later video supposed principle property flux architecture looking todomvcflux example nt seem obey property", "num": "1743", "d": "6/2014"}, {"title": "setstate callback componentwillmount", "body": "calling nt behave would expect fiddle demonstrating short callback invoked state updated", "num": "1740", "d": "6/2014"}, {"title": "support asynchronous server rendering waiting data rendering", "body": "would seriously ease process building something isomorphic componentwillmount could return promise react would delay rendering promise resolved seen attempt something like reactrouter rrouter however giving responsibility component instead router module would make sense", "num": "1739", "d": "6/2014"}, {"title": "flux test use multiple instances singleton like todostorejs", "body": "read test use multiple instances singleton like todostorejs better choice instance store pass sub views", "num": "1735", "d": "6/2014"}, {"title": "stopimmediatepropagation support", "body": "would good support current use case following onclick ontouchend event attached touch event supporting devices trigger event handler twice natively supported simple polyfill easy since react already synthetic event system", "num": "1734", "d": "6/2014"}, {"title": "test application written react via casperjs", "body": "hi using casperjs testing problem inicialize react component reactjs pahtomjs casperjs osx example chrome add ok casperjs test missing somecomponents wrong thanks", "num": "1733", "d": "6/2014"}, {"title": "using data tag instead span data binding", "body": "hey running bit caveat using reactjs noticed binding data irrespective elements inserts tag tags commonly styled might make sense use tags instead", "num": "1732", "d": "6/2014"}, {"title": "nt reactjs passthrough unknown dom properties", "body": "instance moment contains valid attribute however reactjs baby nt understand attribute instead assuming developer knows hell strips leaves lovely comment console incredibly frustrating nt want strip attributes nt understand want pass addition react inability provide adequate support attributes existed since html happens html spec changes new attributes available existing elements bug issue provided related attribute react inability trust developer knows real bug react assumes developer know strips unknown attributes fear much less ideal remedied", "num": "1730", "d": "6/2014"}, {"title": "supported api making new event types ie event plugin injection", "body": "trying implement scrollable list items tappable mobile devices looks like two plugins address tap problem amp confused plugins nt mentioned docs unclear things build runtime require recompilation grunt plugin system flux love help getting merged developing mobile apps straightforward", "num": "1729", "d": "6/2014"}, {"title": "reactchildrenonly throw", "body": "find self using makes thing complex also seems performance issues got right found self writing component need react different array using amp made things complex issue would nice returns seems missing something", "num": "1728", "d": "6/2014"}, {"title": "add displayname nested render warning", "body": "informative error message see", "num": "1726", "d": "6/2014"}, {"title": "investigate firefox sourcemap issues", "body": "reported irc today confirmed master ff nightly also", "num": "1725", "d": "6/2014"}, {"title": "react freeze component", "body": "feature allow stubspy component methods properties test", "num": "1723", "d": "6/2014"}, {"title": "mutating element attributes leaves behind empty ones", "body": "links writing disabled leaving href undefined first renders disabled html dom get looks like state changes rerendered enabled looks like good far however disables href attribute left value means still gets styles link receive focus consistent disabled states", "num": "1722", "d": "6/2014"}, {"title": "iframes nt update src change", "body": "seems like src iframe immutable order update url iframe points required use reactkey cache buster change react recreate iframe src prop changes", "num": "1720", "d": "6/2014"}, {"title": "iframe onload event react", "body": "following iframe element rendered one react components html tried adding event well attaching directly dom like function react component except wo nt work set attribute iframe look function global scope set iframe wo nt recognize react component function short want notify react component whenever url changes inside iframe", "num": "1718", "d": "6/2014"}, {"title": "event info lost handler delayed", "body": "porting app react ran issue everything event null event handler uses settimeout example believe underlying issue feels like bug worth fixing since event handlers work native dom events jquery break ported react", "num": "1717", "d": "6/2014"}, {"title": "allow custom proptypes chainable", "body": "way make custom proptype required would useful maybe form createchainabletypechecker factory could exposed", "num": "1715", "d": "6/2014"}, {"title": "require rendering dom", "body": "writing value final textarea html creates invalid html markup appears unnecessary proper functionality admittedly test minimal removing object using rendered valid html component still worked properly browser passed tests perhaps supporting serverside rendering purpose rendering real dom", "num": "1714", "d": "6/2014"}, {"title": "stateful imperative bridge wraps react components", "body": "ideally also include way wrap react component web component used deprecate regular components", "num": "1711", "d": "6/2014"}, {"title": "reactcsstransitiongroup leaves dom nodes classes", "body": "sequence fast changes adddelete operations nodes left stuck classes state modifications change rendered dom tree console multiple warnings test page place cursor input field type l type backspace fast repeat step times easily reproduces could also reproduced chrome", "num": "1707", "d": "6/2014"}, {"title": "react addons production file nt ship testutils", "body": "page download file behind link react addons production compressed production version react addons linked file nt seem embed testutils described part addons nt expecting see production assets shipping test utilities description misleading", "num": "1706", "d": "6/2014"}, {"title": "ease stubbing component methods", "body": "working project porting code react use sinon mocks hard times stubbing component spec methods could check called appropriately given certain context js var comp reactcreateclass displayname comp plop function consolelog plop render function thisplop return reactdomdiv null foo var stub sinonstub comptypeprototype plop reactaddonstestutilsrenderintodocument comp sadly keeps printing plop onto fails sinonassertcalled stub throws expected intended behavior bug alternate suggestions achieve note directly stubbing spec object method works export component constructor spec separately available also need stub spec even creating component class convenient js var compspec displayname comp plop function consolelog plop render function thisplop return reactdomdiv foo var stub sinonstub compspec plop var comp reactcreateclass compspec reactaddonstestutilsrenderintodocument comp plop properly stubbed sinonassertcalled stub pass would great original spec object attached component would ease stubbing part test env obviously attached spec one used internally work maybe could even feature available dev thoughts", "num": "1705", "d": "6/2014"}, {"title": "reusing markup silently fails first child textnode", "body": "suppose rendering following server client case serverrendered markup reused firstchild body element text node containing new line therefore shouldreusemarkup reactmountjs evaluates false react even try reuse markup performs innerhtml operation page load instead following serverside works intended think counterintuitive first variant fails reuse markup silently either fixed documented possible solution could ignore first child text node use second child instead", "num": "1704", "d": "6/2014"}, {"title": "findcomponentroot error foundation modal plugin", "body": "xpost mailing list hi working project uses foundation modal system run bit painpoint seems whenever modal launchescloses foundation manipulates dom special way result react virtual dom loses track going react event handlers break since dom changed created plunk illustrate basically want button within modal utilise react onclick event handler call clickbutton function dice see upon clicking button get following error console tried combination things including using forceupdate conjunction foundation modal event system ca nt get things work question related assistance appreciated cheers dhruv bhatia", "num": "1703", "d": "6/2014"}, {"title": "build fails node due microtime", "body": "node step nt complete microtime build fails fixed related issue tested build upgrading microtime works fine", "num": "1701", "d": "6/2014"}, {"title": "better docs", "body": "zpao docs forms could clearer mentioning put array attribute usage example likely cc sompylasar", "num": "1700", "d": "6/2014"}, {"title": "discussion prebuilt binaries distribution", "body": "nice prebuilt binaries available current package managers right prebuilt package bower nice also npm component nlzio think best way create maintain packages cc zpao", "num": "1699", "d": "6/2014"}, {"title": "controlled input cursor jumps used layers", "body": "see try typing beginning text box", "num": "1698", "d": "6/2014"}, {"title": "wrong url tagtreetv documentation video section", "body": "someone try get tagtreetv documentation video section url section thinking react tagtreetv tagtreetv video conveying principles thinking react building simple app url htp tagtreetv instead", "num": "1697", "d": "6/2014"}, {"title": "jsx transform difficult compose", "body": "hi would like use available transforms jsx transform javascript code using js var transform require jstransform transform var visitors arrayprototypeconcatapply require visitorlist require visitorlist require visitorlist require visitorlist require visitorlist require visitorlist require visitorlist require transformsreact visitorlist require transformsreactdisplayname visitorlist var transform visitors sourcecode problem difficult use jsx transforms without depending whole package would essentially download lot dependencies another jstransform etc two files copied transforms directory source tree obviously bad solution would nt better put jsxtransforms separate npm package also found reference something called vendorfbtransformsyntaxjs appropriate visitor nt seem open source example essentially skipped typecheck code syntaxjs could problem future awesome library way", "num": "1695", "d": "6/2014"}, {"title": "using listento instead removelistener flux", "body": "noticed demo flux js var todoapp reactcreateclass getinitialstate function componentdidmount function todostoreaddchangelistener thisonchange componentwillunmount function todostoreremovechangelistener thisonchange render function onchange function thissetstate gettodostate got problem backbone solved method called introducin similar solution react solve similar problem", "num": "1694", "d": "6/2014"}, {"title": "improve testing documentation", "body": "agree general consensus testing react breeze thinking might good benefit new users updated documentation page examples api method nothing exactly clear first wanted start writing tests dig react source code order find implementation details still idea use despite tries descriptors nt even know test without testutils anymore currently given testing react components examples follow", "num": "1693", "d": "6/2014"}, {"title": "improve stack trace errors render", "body": "useful information stack trace exception render saying nt tell one unfortunately chrome dev tools accept displayname idea update jsx transform already adds displayname also output crazy pattern makes stack trace look better discussion twitter", "num": "1692", "d": "6/2014"}, {"title": "events propagate nested components stoppropagation", "body": "using reactbootstrap modals site full page rendering nested react rendering events propagated ancestors calls inner component hierarchy respected outer component hierarchy complicating matters syntheticevent created afresh dispatch component hierarchy stoppedpropagation equivalent called syntheticevent constructor even eventpluginutilsjs checked single callback case would still return false tracking propagationstopped status return value looks tricky given may map single nativeevent multiple synthetic events easiest fix may set custom property nativeevent object check constructor check single callback case", "num": "1691", "d": "6/2014"}, {"title": "click events fired mobile long touchclick", "body": "hi problem using react android make long touch eg button click even fired press quickly everything works expected get touchstart mousedown touchend long clicks even nt set reactinitializetouchevents true experience behavior release also build fresh master", "num": "1690", "d": "6/2014"}, {"title": "problem installing reacttools windows node bits npmdebug", "body": "full npmdebuglog error lines error git clone git githubcomariyaesprimagit cloning bare repository c error git clone git githubcomariyaesprimagit fatal write error invalid argument error error enoent chmod c userslamalienappdataroamingnpmnodemodulesreacttoolsnodemodulescommonernodemoduleswhiskeynodemodulesmagictemplatesindexjs error need help may report entire log error including npm node versions error error system windowsnt error command c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs install g reacttools error cwd c error node v error npm v error path c userslamalienappdataroamingnpmnodemodulesreacttoolsnodemodulescommonernodemoduleswhiskeynodemodulesmagictemplatesindexjs error fstreampath c userslamalienappdataroamingnpmnodemodulesreacttoolsnodemodulescommonernodemoduleswhiskeynodemodulesmagictemplatesindexjs error fstreamtype file error fstreamclass filewriter error fstreamfinishcall chmod error code enoent error errno error fstreamstack c program error fstreamstack objectoncomplete verbose exit true", "num": "1689", "d": "6/2014"}, {"title": "contributors jade react compiler transformer", "body": "hey wrote jade react compiler transformer solve interesting problem make react dryer jadereactcompiler library supports major features jade including javascript fragments would anyone facebook community interested contributing helping maintain library", "num": "1688", "d": "6/2014"}, {"title": "handling table rows mutations row spans", "body": "trying display data array table one property also array listing table last entry subarray displayed column property want make table entry clicked toggles expanded version rows added entry subarray since columns value want take advantage rowspan attribute representations work really well initial render starts acting try toggle state dynamically", "num": "1686", "d": "6/2014"}, {"title": "csstransitiongroup throws error child removed", "body": "contains single child passed directly wrapped displaying child work fine removing child throw demo easy workaround wrap child component array demo check whether actual object intended passing single component without array wrapper supported", "num": "1684", "d": "6/2014"}, {"title": "add possibility set name html attribute via variable", "body": "jsx file value html attribute could variable eg name produces", "num": "1683", "d": "6/2014"}, {"title": "uncaught object invariant", "body": "getting error nt give much context causing happens updating store component listens changes update state error mean console", "num": "1681", "d": "6/2014"}, {"title": "rendercomponenttostring reflect value", "body": "appear render selection state elements given example html", "num": "1680", "d": "6/2014"}, {"title": "terse test utility methods", "body": "", "num": "1679", "d": "6/2014"}, {"title": "reactlink update input state changes null undefined", "body": "reset state variable input control nt change reset empty string change", "num": "1678", "d": "6/2014"}, {"title": "synthetic event simulation share dispatch logic event plugins", "body": "right reacttestutils takes care accumulating dispatches simulating synthetic events logic event plugin instead mouseentermouseleave work perhaps necessary logic event plugin simulate events cf", "num": "1677", "d": "6/2014"}, {"title": "jsx nt handle parenthesization", "body": "unit test fails javascript handle parenthesis expressions function var code jsx reactdom join n var result jsx reactdom component x b join n steps past inner expression parenthesis expression therefore nt range possible skip past insert", "num": "1673", "d": "6/2014"}, {"title": "way wrapper get notified child layout changes", "body": "seems way wrapper component get feedback children changing layout wanted implement demo vjeux context wrapper unless something wrong quite possible automatically scroll initial example talking spicyj reactjs told indeed something would need addressed one point", "num": "1672", "d": "6/2014"}, {"title": "svg linear gradient defined", "body": "trying render svg image linear gradient defined results javascript exceptions lineargradient defined checkout fiddle", "num": "1670", "d": "6/2014"}, {"title": "docs nav noisy", "body": "lot stuff left nav docs would great someone could clean make little easier digest", "num": "1669", "d": "6/2014"}, {"title": "unrecognized entities give strange", "body": "compile jsx turns seems subpar expect throw error", "num": "1667", "d": "6/2014"}, {"title": "rendercomponenttostring rendering different datareactid run", "body": "whenever run rendercomponenttostring backend returns components different run change backend render checksums indexjs template", "num": "1666", "d": "6/2014"}, {"title": "improve form inside form error message", "body": "take look error console terrible error uncaught object least ask render form inside form console give better really helpful case", "num": "1665", "d": "6/2014"}, {"title": "select tag defaultvault nt work certain conditions", "body": "ran inconsistency trying use select tag also generating options values options provided component initially rendered case getting options ajax call nt correctly set subsequent calls still works expected scenario providing complete array options view constructor test case jsfiddle linked sure expected behavior case ghost thanks", "num": "1663", "d": "6/2014"}, {"title": "missing svg tags attributes", "body": "note maintainers starting react complete support subset svg specifications actually implemented browsers find missing attribute tag work correctly please write comment note factory functions might provide tags able use directly missing ones use jsx translates supports tags inherently", "num": "1657", "d": "6/2014"}, {"title": "ide support", "body": "hi plans integrate react netbeans already amp javascript support thank advance mic", "num": "1656", "d": "6/2014"}, {"title": "couchapp examples", "body": "hi couchapp examples available thank advance mic", "num": "1655", "d": "6/2014"}, {"title": "ca nt reuse components renders", "body": "apologies wrong place ask question thought might better explained somewhere nt ephemeral irc storing instance trying reuse results error recently started wondering descriptors desired behavior concession sake performance seems like good reasons memoization worryfree duplication etc would preferable react mutate could reused thanks", "num": "1654", "d": "6/2014"}, {"title": "reactaddonsupdate correctly descend array items", "body": "currently reactaddonsupdate helper support changes array items internal reason implemented yet would great able something like javascript thisstatephotos src caption cool photo src caption super cool photo var changedphotos reactaddonsupdate thisstatephotos change second photo src set newphotojpg thissetstate photos changedphotos", "num": "1653", "d": "6/2014"}, {"title": "error invariant violation reactmount two valid unequal nodes", "body": "getting error locally due seems like element fiddle reproduce error fiddle seems source images web error goes away update local use images found fiddle error locally goes away locally use eg react gets unhappy see fiddle app wizzard navigate slowly encounter error locally navigate fast error appears remove images get error matter", "num": "1650", "d": "6/2014"}, {"title": "autoplay attribute", "body": "reason work react something wrong", "num": "1649", "d": "6/2014"}, {"title": "add ability inject virtual html attributes reactdom", "body": "add ability define virtual attributes html elements would allow semantic attributes declared would applied modify attributes element could declared way javascript callback would given access attribute value allow modify attributes element function hiddenattribute value attributes value attributesstyle attributesstyle attributesstyledisplay none reactdeclareattribute hidden hiddenattribute using jsx javascript jsx reactdom jsxns core core common common var mycomponent reactcreateclass render function return outputs html would elements custom components however one use element would inherit hidden attribute writing nt able think useful attributes perhaps useful single use case buyin concept like happy attempt implementation thought propose see would beneficial anyone else different kind attribute", "num": "1648", "d": "6/2014"}, {"title": "reactproptypesrenderable vs", "body": "validate reason asking sometimes use statements arrays without clause coffeescript evaluates coffeescript isvisible false isvisible reactdomspan evaluates causes warning however following construct passes isvisible false isvisible reactdomspan else null evaluates please forgive different latest version repro react javascript var react todolist error react require reactaddons todolist reactcreateclass displayname todolist proptypes children reactproptypesrenderableisrequired render function return reactdomdiv thispropschildren consolelog consolelog test consolelog consolelog try consolelog reactrendercomponenttostring todolist reactdomspan null catch error error error consoleerror fail consolelog pass consolelog consolelog test consolelog consolelog try consolelog reactrendercomponenttostring todolist reactdomspan void catch error error error consoleerror fail consolelog pass output test pass test warning invalid prop supplied expected renderable prop pass", "num": "1647", "d": "6/2014"}, {"title": "supported", "body": "supported filter fegaussianblur tags", "num": "1646", "d": "6/2014"}, {"title": "create reactchildrenfilter", "body": "function filter children would useful common case implementing like map foreach etc traverses index index current depth depth first level increasing thereafter jsx var showmore reactcreateclass render function var children showmore thisstateshowmore showmore function thissetstate showmore true limit function child depth return depth gt lt thispropslimit getinitialstate function return showmore false", "num": "1644", "d": "6/2014"}, {"title": "whitespace inline elements", "body": "nt whitespace inline dom elements separated line break think example describes situation pretty well right workarounds pretty ugly either css nt get started manual whitespace inside inline elements quite nonsemantic hope duplicate earlier issue research cheers", "num": "1643", "d": "6/2014"}, {"title": "updating parent component child unmount", "body": "code looks something like root component shows changing list items currently hovered note mouse last component disappears selection stuck component nt reset null uncomment line componentwillunmount attempt tell parent unset active property throws error unmounting active item parent currently middle reconciling children currently place allow state updates seems like maybe best solution parent smarter realize removing active child unset state property though nt see super clean way right nt need know anything makes item active seems nicer keep way possible sebmarkbage thoughts cc zgotsch", "num": "1641", "d": "6/2014"}, {"title": "thoughts making reactlibkeymirror npm module", "body": "finding really love something like nonreact related fluxy projects good npm module considerations making separate module", "num": "1639", "d": "6/2014"}, {"title": "component support", "body": "sure bower support achieved would really nice simple support thus allowing would require git repo field pointing source files likely built nonminified dist file given nt using build project ther also issue addons one thing time", "num": "1635", "d": "6/2014"}, {"title": "child context passed", "body": "application renders module component eg dynamically according props unfortunately context passed case test case hardcode module component works perfectly need pass manually", "num": "1634", "d": "6/2014"}, {"body": "standard believe something considered use often aliased", "d": "6/2014"}, {"body": "cool feel like use classset addon time would love", "d": "6/2014"}, {"body": "also compiler transform inlines implementation avoids object allocation loop function call compile time reducing string concatternary becomes", "d": "6/2014"}, {"body": "sure released use function released programs automatically become faster consume less memory could write transform pretty trivial", "d": "6/2014"}, {"body": "ah man guys best react continually like", "d": "6/2014"}, {"body": "point checking argument types functions feels like extreme overkill probably would nt opposed asserting second argument function especially silently nothing instead throwing error", "d": "6/2014"}, {"body": "least understand wanting identical behavior dev prod seems would problem way around error prod warning dev many times found troubleshooting issue already printed console although problem option thirdparty modules guaranteed even likely strictly follow current definition mandatory unless per filemodule somehow would problematic", "d": "6/2014"}, {"body": "think likely possibly default behavior", "d": "6/2014"}, {"body": "works one array allocation fair imo would nt complicate validation logic handrolling allocationfree solution", "d": "6/2014"}, {"body": "assigning displayname component manually", "d": "6/2014"}, {"body": "able reproduce chrome using following syntax works fine touchesir recommendation probably work unwise depend internal workings react make code work relying falls category", "d": "6/2014"}, {"body": "displayname part supported api see normally lean towards always first example though might nice specialcase", "d": "6/2014"}, {"body": "brwr impression nt pointed else would one create debuggable components without using jsx", "d": "6/2014"}, {"body": "slorber hit internally fb cases say spicyj said add manually assign variable exporting much really point might able get filename transform step gamble often since crapshoot either way going close thanks filing though suggest manual approach luckily pretty greppable little bit manual work lint rule things better", "d": "6/2014"}, {"body": "thanks zpao right using filename ideal solution anyway", "d": "6/2014"}, {"body": "use dom properties camelcased react also see console warns", "d": "6/2014"}, {"body": "oh duh thank jun andrey popp notifications githubcom wrote use datetime dom properties camelcased react also see console warns warning unknown dom property datetime mean datetime reply email directly view github", "d": "6/2014"}, {"body": "returns boolean tells whether mounted want work", "d": "6/2014"}, {"body": "chenglou course wrong yesterday tired example result", "d": "6/2014"}, {"body": "show rest block", "d": "6/2014"}, {"body": "yeah gulp starting unittest passing failing eleventhenvelopesreactlist list generate ul list error invariant violation setenabled toggle event listening worker thread likely bug framework please report immediately invariant objectmergesetenabled reactreconciletransactioneventsuppressioninitialize reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform object object reactcomponentmixinmountcomponentintonode objectreactmountrendernewrootcomponent objectrendernewrootcomponent objectreactmountrendercomponent objectrendercomponent reacttestutilsrenderintodocument context callfn testrunnablerun runnerruntest next next objectonimmediate processimmediate immediatecallback", "d": "6/2014"}, {"body": "found issue", "d": "6/2014"}, {"body": "sorry meant test block", "d": "6/2014"}, {"body": "problem react require processcwd bowercomponentsreactreactwithaddons reacttestutils reactaddonstestutils renderintodocument iscompositecomponent reacttestutils expect require chai list eleventhenvelopesreactlist suite eleventhenvelopesreactlist list setup list new list list listcreate envelopes suite list", "d": "6/2014"}, {"body": "component googprovide eleventhenvelopesreactlist class eleventhenvelopesreactlist param eleventhenvelopesstorage storage constructor constructor storage", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "chenglou moved call class list test definition list eleventhenvelopesreactlist list new list list listcreate envelopes suite eleventhenvelopesreactlist list setup list new list list listcreate envelopes suite list result warning react components valid mounting passing failing appenvelopesreactlist list generate ul list typeerror object method mountcomponentintonode objectreactmountrendernewrootcomponent objectrendernewrootcomponent objectreactmountrendercomponent objectrendercomponent reacttestutilsrenderintodocument context callfn testrunnablerun runnerruntest next next objectonimmediate processimmediate immediatecallback", "d": "6/2014"}, {"body": "spicyj hi know problem", "d": "6/2014"}, {"body": "assuming global issue many events although probably far common allowed initiator popups", "d": "6/2014"}, {"body": "post jsfiddle minimal repro case browser", "d": "6/2014"}, {"body": "well made jsfiddle show suddenly worked chrome firefox opera opened popup without asking confirmation sure nt working local project today morning using latest react npm browserify chrome ubuntu browser using nt know happenedis happening working mean chrome blocked popup displayed tiny box red cross right side address notifying something blocked", "d": "6/2014"}, {"body": "react handle onclick asynchronously browsers infer user intent stack sensitive functions like windowopen desktops mobile devices \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c giovanni notifications githubcom \u043d\u0430\u043f\u0438\u0441\u0430\u043b well made jsfiddle show worked chrome firefox opera opened popup without asking confirmation sure nt working local project today morning using latest react npm browserify chrome ubuntu browser using nt know happenedis happening working mean chrome blocked popup displayed tiny box red cross right side address notifying something blocked reply email directly view github", "d": "6/2014"}, {"body": "events handled synchronously right", "d": "6/2014"}, {"body": "found bunch inconsistencies one prs check list code", "d": "6/2014"}, {"body": "master callback nt called immediately looks like bug called repro using jsfiddle", "d": "6/2014"}, {"body": "ghost", "d": "6/2014"}, {"body": "main reason believe nt exist already client side basically always want show sort loading indicator instead deferring rendering would also make code significantly complex probably deal", "d": "6/2014"}, {"body": "cases find hard solve without server side want fetch data rendering ca nt delegate data retrieval components since nt information component rendered client side first time mount application receiving prerendered html even sort cache data retrieved server might want use async method retrieve data would prevent react reusing html reactasync solve problems fibers cache trick point view hackish solutions solve problem solved core", "d": "6/2014"}, {"body": "color uninformed subject fdecampredon say async nt return anything immediately react supposed render nothing return nothing render data yet yeah get serverside also happen props change fires personally seems like wrong dispatch async requests unless component really isolated black box also implements loading indicator far understand react components mistaken conventional oop instances best case react component tool visualizing data props interactive possibly also state view view model ears sounds like problem react components nt ones dispatching async requests fetch data data ready call solution clientside serverside also get ability abort outcome choice async request fail feel free dismiss misunderstood something seems treating react components view model seems meant view", "d": "6/2014"}, {"body": "color uninformed subject fdecampredon say componentwillmount async nt return anything immediately react supposed render nothing return nothing render data yet yeah get serverside also happen props change componentwillmount fires must admit think cases feature would useful first time mount top level component server true otherwise cast would want display loader indicator personally seems like wrong dispatch async requests componentwillmount unless component really isolated black box also implements loading indicator far understand react components mistaken conventional oop instances best case react component tool visualizing data props interactive possibly also state view view model way want toplevel component would able retrieve data like done flux sample sample things pretty simple retrieving list todo synchronous operation case prerendering server would render first time data loose prerendered markup server case simple application one set data displayed one view hierarchy still much problem preload data still keep synchronous property store case application composed multiple modules reuse across application would like able treat modules separate applications able subscribe different stores would responsible fetching data perhaps get things wrong way discussionsample around web make think something missing somewhere sample seems petehunt tried achieve something similar reactnestedrouter promote similar mechanism willtransitionto discussions make feel nobody come proper solution rrouter also provides kind mechanism prefetch data component renderedmounted finally reactasync like said earlier", "d": "6/2014"}, {"body": "fdecampredon clear purpose reactnestedrouter loading data specifically returning promise method indeed block rendering new ui nt want unless absolutely", "d": "6/2014"}, {"body": "fdecampredon everyone still trying figure things would nt surprise one definitive answer guessing devs facebook must run times", "d": "6/2014"}, {"body": "created dispatcher works instances dispatcher stores instead solely singletons allows easier testing well better support flux server side", "d": "6/2014"}, {"body": "thanks way better nowadays singletons hurting eyes think examples singletons lot clearer less passing instances dispatchers models end singletons bad approach passing instance dispatcher sub components", "d": "6/2014"}, {"body": "really issue going close think better discussion mailing list", "d": "6/2014"}, {"body": "yes also playing around react undocumented context feature giving child components access dispatcher", "d": "6/2014"}, {"body": "good idea careful much magic", "d": "6/2014"}, {"body": "nt think would make sense stopimmediatepropagation touchend stop click event firing touchend guess work already test see", "d": "6/2014"}, {"body": "ah cool works nt think", "d": "6/2014"}, {"body": "use phantomjs test react nt trouble using event information provided nt enough reproduce problem going close issue make minimal repro case showing example nt work react works using direct dom manipulation another library please feel free comment reopen", "d": "6/2014"}, {"body": "give quick example would appropriate current use text children multiple think majority cases using best semantic choice want use elements pretty certain support long explicitly", "d": "6/2014"}, {"body": "zpao say something want fix fix ie rid redundant spans entirely swivelgames unless step make effort going happen right todo list least personally feel css rules plain spans bad idea may look short descriptive stuck one span style", "d": "6/2014"}, {"body": "html foo bar currently produces roughly html variable foo bar since databindings supposed affect design layout page personal opinion might advantageous utilize tag case would roughly produce following output html variable foo bar tag default styling basically function difference tag purpose replace tag things like databinding keeping track particular arbitrary data used specifically webapp much like attributes tag supposed utilized processed outside app purpose provide storage arbitrary data within markup app believe purpose using tag precisely reason addition tag spec utilized tags developing webapps frameworks attribute seems work perfect scenarios", "d": "6/2014"}, {"body": "could confusing tag attributes mdn says html element links given content machinereadable translation nt seem anything data binding", "d": "6/2014"}, {"body": "regarding specific attribute react favors dom api property names attributes rather html since designed usable js identifiers use rather identified common source confusion added warning regarding rendering attributes number issues play importantly use render meaningless attributes dom leading potentially invalid document additionally react needs know specific information properties efficient diffing ie style property diffed differently classname perform correct dom manipulation using attributes vs properties", "d": "6/2014"}, {"body": "number different ways think accomplish unfortunate react nt gotten hump yet thanks info attribute", "d": "6/2014"}, {"body": "react nt trust developer various properties behave differently browsers info different kinds attributes need distinguish see list attributesproperties possible autodetected see right shipping hardcoded list love hear suggestions could already open track ability customize custom attribute list", "d": "6/2014"}, {"body": "considered something like property would pass value asis attribute dom could considered property although look kind ambiguous like sense would work like going soon usecase actually similar ie use unsupportedunofficial attributes kind makes sense", "d": "6/2014"}, {"body": "need manually build version react tapeventplugin also call initializetouchevents ps eventplugins really plugins general sense externally pluggable rather internally indepedent features", "d": "6/2014"}, {"body": "provide specific use cases would helpful look specific situation general discourage introspecting children instead passing js object describes parameter prop also use limit types children passed", "d": "6/2014"}, {"body": "creating kind layout manager ca nt really show code say end found suit better still think better version nt throw performance issues make code complex", "d": "6/2014"}, {"body": "reactchildrenonly meant asserting single child testing whether expected cases nt nt use method almost promise regardless reactchildrenonly significantly affect performance", "d": "6/2014"}, {"body": "add errors jsx file page still renders correctly behavior persists load source file errors reported lines exist html file makes bugs hard track confirmed windows firefox add details get back work monday let know information need thanks eric", "d": "6/2014"}, {"body": "exactly issue source lines offout bounds possible old jsx issue source lines reported esprima mysteriously offset afaik never explicitly solved one able reproduce anymore perhaps struck jsx sugar ontop esprima sourcemap assume think even issue iswas nt think jsx necessarily root cause", "d": "6/2014"}, {"body": "hi syranide thanks responding general level problem trying solve want able use jsxtransformer script able see useful version compiled js script precompilation jsx want make error jsxcontaining js script get useful error message hopefully see problem original script get clue problem might stands error script console complains lines exist html file lines say error line examplehtml even though examplehtml lines compounding problem even errors jsx compiled perfectly js js file ran fine still see sources jsx compiler reactjs source jquery source ca nt see either uncompiled compiled version jsxcontaining js file instead see hopefully explains everything let know still confused provide info whenif need thanks", "d": "6/2014"}, {"body": "syranide tested last week could nt get source map anything firefox", "d": "6/2014"}, {"body": "specific probably misunderstanding react concept", "d": "6/2014"}, {"body": "maksimr lib exactly want plays around react internals stub methods nt promise always gon na work longterm core still changing afaik also nt official way stubbing yet priority btw object whose methods want stub passed nt frozen descriptor call thing returned dev build closing nt questions", "d": "6/2014"}, {"body": "chenglou thanks langpavel use component controllerview contains domain logic saving validation model test want control count call functions made mistake place", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "believe browser reload iframe whenever src prop changes either via react otherwise nt think changes required", "d": "6/2014"}, {"body": "lol nevermind speak americano", "d": "6/2014"}, {"body": "events pooled react use sneaky yet documented prevent returned pool copy attributes need", "d": "6/2014"}, {"body": "indeed issue nt think stop pooling events near future suggest using passing event around anything might delayed", "d": "6/2014"}, {"body": "persist worked great thanks", "d": "6/2014"}, {"body": "wary exposing api see really quick sugar checking whether prop undefined adding check custom validator thing", "d": "6/2014"}, {"body": "yeah think main benefit exposing something would nt providing way making prop required instead providing way option making required javascript var myproptype chainableproptypefactory function prop type validation proptypes prop myproptype requiredprop myproptypeisrequired custom prop type easily created used optional required props", "d": "6/2014"}, {"body": "good catch reason set ie treated property rather attribute runtime correct like say generate markup attribute wrong sure preferred fix add another directive ex zpao spicyj", "d": "6/2014"}, {"body": "nt think invalid markup nt used unless use nt surprised deleting value would work guess applying updates value actual node manually relying render seems like good enough approach already render initial value text child nt use server rendering syranide another directive could make sense get scoped properties since true inputs want submit pr somethingkindawierd cc salier", "d": "6/2014"}, {"body": "zpao invalid meant generated markup validate via html validator throwing error attribute value allowed element textarea point yes submit pr", "d": "6/2014"}, {"body": "code sometimes executed wrong sequence assumes independent asynchronous callbacks always executed proper sequence transition leave csscoreaddclass node exampleleave flushclassnamequeue csscoreaddclass thisgetdomnode exampleleaveactive endlistener csscoreremoveclass node exampleleave csscoreremoveclass node exampleleaveactive sometimes happens initiates css transition transition finished timer fired", "d": "6/2014"}, {"body": "far found property attached component constructor stubbing nt work methods wrapped amp bound internally component constructor creation time still access original unbound method property attached wrapped method yes finding tricky track amp grasp went simple function subbing component constructor way perform sinon assertions checking property js var comp reactcreateclass displayname comp plop function consolelog plop render function thisplop return reactdomdiv null foo var stubcomp stubcomponent comp plop sinonstub var comp reactaddonstestutilsrenderintodocument stubcomp sinonassertcalled compplopreactboundmethod works painfully ugly really wish something better", "d": "6/2014"}, {"body": "moving use classes soon see js class comp plop consolelog plop render thisplop return reactdomdiv null foo way allow overriding directly", "d": "6/2014"}, {"body": "good hear eta land stable release ready acceptable answer", "d": "6/2014"}, {"body": "hopefully next couple months ca nt promise anything", "d": "6/2014"}, {"body": "cc spicyj remember fixed time ago", "d": "6/2014"}, {"body": "using react test head honest suppose fixed release edit problem seems file ca nt spot difference big compliment source code readability way awesome project", "d": "6/2014"}, {"body": "jannesmeyer iirc possible nt specifically issue though memory fuzzy details ca nt find issuecommit distinctly remember fix react incorrectly getting first whitespace text node rather first dom node ps also yes would consider bug trivial fix well agree remarkably easy become familiar core props goes real devs", "d": "6/2014"}, {"body": "nt think fixed", "d": "6/2014"}, {"body": "spicyj right think nt know though perhaps someone never actually", "d": "6/2014"}, {"body": "yup closing favor", "d": "6/2014"}, {"body": "allowed modify dom nodes managed react need take dom nodes modal system interacts create instead managed react either content modal modal system interact make use react simply calling rather managed react end react gt modal system gt react makes sense", "d": "6/2014"}, {"body": "future mailing list better place questions like", "d": "6/2014"}, {"body": "thanks find update outdated packages", "d": "6/2014"}, {"body": "see also", "d": "6/2014"}, {"body": "right thinking async updating dom problem", "d": "6/2014"}, {"body": "fixed next time rebuild docs thanks", "d": "6/2014"}, {"body": "terribly familiar side javascript yet issue depending lot dependencies nt exportedbundled browser anyway", "d": "6/2014"}, {"body": "one issue visitors potentially using different versions esprimafb jstransform one inside nodemodule directory instead shared one nt know enough architecture jstransform know whether could problem another minor issue takes longer like projects many duplicate versions package purely based taste course another issue would pin version reacttools anyway ca nt depend internal path files changing releases nt see documentation source code comments says guaranteed never change might well copy files save lot bytes dependencies lock version anyway recommended way compose transforms nt notice", "d": "6/2014"}, {"body": "performs deduplication default none really matter far understand version incompatibility issue yeah might end using different versions would error", "d": "6/2014"}, {"body": "far know npm performs deduplication network level ie caches packages nt file system level ie package extracted multiple folders huge deal though take look see dependencies outdated bigger problem imho could nt automatically update version reacttools anyway internal file path guaranteed stay mentioned", "d": "6/2014"}, {"body": "flux stores nt necessarily reactspecific many people use react without flux nt make ton sense build direct integration two want define mixin keep track listeners like use components like", "d": "6/2014"}, {"body": "like example thank", "d": "6/2014"}, {"body": "qualified write", "d": "6/2014"}, {"body": "going anything think would reasonable transform also perhaps things classes", "d": "6/2014"}, {"body": "solution advantage add name every single method react component though", "d": "6/2014"}, {"body": "tried initial suggestion definitely trick see class name referenced stack trace syntax see merits approaches prefer initial approach ulitmately simpler introduce another layer naming conventions", "d": "6/2014"}, {"body": "work debugger definitely ability make work said let make sure whatever fine browsers chrome mmmmkay actually prefer spicyj feature language nt rely multiple assignments results sane output correct vs correct could also get rid runtime assignment", "d": "6/2014"}, {"body": "looks like safari stack traces already show displayname properly", "d": "6/2014"}, {"body": "lrowe propogation propagation", "d": "6/2014"}, {"body": "thanks sompylasar spelling fixed", "d": "6/2014"}, {"body": "nt android phone ca nt test easily get native click event use plain js without react guess nt react nt special filtering fire click events", "d": "6/2014"}, {"body": "yes regular onclick nt fired long clicks platformbrowser combination well plans support unified click event across browsers platforms future know workaround going implement issue thanks christoph", "d": "6/2014"}, {"body": "ripcurlx reasonable universal robust solution lots discrepancies normalized nt see however unsure good one could actually make ios infamous delayed onclick far understand intentional fixing may always user wants", "d": "6/2014"}, {"body": "seems like something environment correctly set", "d": "6/2014"}, {"body": "caused norton antivirus blocks git protocol", "d": "6/2014"}, {"body": "nt really react issue", "d": "6/2014"}, {"body": "neat closing issue might better question mailing list", "d": "6/2014"}, {"body": "looks like example contains tags children divs ones contain actual nt sound like valid html use chrome inspector looks like browser removed invalid div wrapper guess problem lies somewhere", "d": "6/2014"}, {"body": "right nesting wo nt work invalid html use regular function instead component return array elements ca nt use lifecycle methods state future hoping way return one element component", "d": "6/2014"}, {"body": "thanks clearing things every time wrap render return call div feel bad nt actually need div markup use returns one child looks like bit tried another approach work even though neat original design would certainly love able return multiple children component smiley", "d": "6/2014"}, {"body": "actually nt first intended think manage expansion pergroup basis nt state updated yet keep state entry dictionary react state", "d": "6/2014"}, {"body": "setstate nt deep merge use something like underscore extend react immutability addon modify expandeddict properly", "d": "6/2014"}, {"body": "seems fixed current dev branch published npm closing", "d": "6/2014"}, {"body": "ah cool thanks submitting anyway", "d": "6/2014"}, {"body": "likely happen object spread operator one solution future however specific case future fix create object properties necessary", "d": "6/2014"}, {"body": "could imagine possibly supporting computed property expressions already write though heard little demand", "d": "6/2014"}, {"body": "created mixin requiring specific attribute rendered dom elements want copypaste name attribute throughout components problem currently rare widely available configurable generic components reusable mixins", "d": "6/2014"}, {"body": "victorhomyakov would mixin look dom dataattribute ca nt read", "d": "6/2014"}, {"body": "eg drag amp drop", "d": "6/2014"}, {"body": "something event delegation example", "d": "6/2014"}, {"body": "nt see working drag amp drop needs set dataattribute dom linked component indicate", "d": "6/2014"}, {"body": "sortable mixin uses attribute find object instance corresponding dom node passed case someone nt want call expose props node attributes copypaste attribute name component method", "d": "6/2014"}, {"body": "fact ca nt see error message chrome bug see based stack trace error seeing findcomponentroot unable find element probably means dom unexpectedly mutated eg browser usually due forgetting using tables nesting tags using nonsvg elements parent try inspecting child nodes element react id", "d": "6/2014"}, {"body": "thanks helps", "d": "6/2014"}, {"body": "think enable pause exception give full error message chrome nt confirmed seemed like", "d": "6/2014"}, {"body": "confirmed enable pause exception view error scope variables tab also returns missing tag pretty neat", "d": "6/2014"}, {"body": "thanks pulling hair", "d": "6/2014"}, {"body": "yeah sorry dupe", "d": "6/2014"}, {"body": "ah sorry nt see come searching assume safe ignore warnings", "d": "6/2014"}, {"body": "problem yup okay ps warnings nt logged prod build react extra performance optimizations", "d": "6/2014"}, {"body": "another quirk type x set empty string undefined x comes back field without reactlink generally correct behavior become uncontrolled component current behavior controlled component sebmarkbage spicyj", "d": "6/2014"}, {"body": "chenglou intuitively seems like become uncontrolled set defaultvalue value set nullundefined however using reactlink value undefinednull kind gray area although still think may make sense mirror behavior value exactly makes sense least also seems favorable deterministic perspective input keyed given new key time becoming uncontrolled behavior would makes sense mirror imho setting defaultvalue keeping last value also makes sense ca nt imagine usecase would good idea rely implicit behavior", "d": "6/2014"}, {"body": "assuming running internally enhanced jsx currently valid yeah could reproduce issue issue apparently also affects children yields", "d": "6/2014"}, {"body": "new syntax thing", "d": "6/2014"}, {"body": "ah cool heard proposal seems great simple correct fix believe", "d": "6/2014"}, {"body": "spicyj", "d": "6/2014"}, {"body": "already works correctly react", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "sort plan rewrite reorganize see get energy execute", "d": "6/2014"}, {"body": "take look framer docs done vertical breakpoints sidebar remarkable", "d": "6/2014"}, {"body": "built livefiltering sidebar knowledge base similar thinking react tutorial works knew react maybe nt want much content shown initially could still topic areas exposed initially expose subtopics filter", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "concur ran issue google calendar api current workaround", "d": "6/2014"}, {"body": "sorry clear workaround write opened issue provide better error message", "d": "6/2014"}, {"body": "fix although explicitly issue ps propose lenient parsing like browsers pr nt match entity output asis means nt fugly urls text reason", "d": "6/2014"}, {"body": "currently generated ids server random checksum something else always", "d": "6/2014"}, {"body": "ah okay thought something like reason opened issue getting warning server client rendering get computed influenced certain variables handled differently server displayed file", "d": "6/2014"}, {"body": "yoshuawuyts client able reuse dom created server must match exactly data different time even checksum wo nt match", "d": "6/2014"}, {"body": "clear thanks", "d": "6/2014"}, {"body": "clear client tries reuse dom takes root index react id target dom node like chenglou said root index random affect checksum always drop irc unable determine root cause end client server rendered different data using something like", "d": "6/2014"}, {"body": "yeah injecting livereload snippet based guess make production development differences function thanks dude", "d": "6/2014"}, {"body": "appears checksum random reopening edit clarify trying squash error react attempted use reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injectednew markup compensate works lost many benefits server rendering instead figure markup generated different client server", "d": "6/2014"}, {"body": "clear root id checksum differ time root id used client generating markup checksums generated client match nothing else wrong even though server produces different checksum time", "d": "6/2014"}, {"body": "yoshuawuyts checksum depends root index result indeed random client generate root index trying reuse dom rather copies target dom node rendered server markup generated client react ids", "d": "6/2014"}, {"body": "rather copies target dom node nt know thanks", "d": "6/2014"}, {"body": "hardest time getting right though could give maybe pointer might wrong indexjs code rendered buildjs client side call renderjs server side call", "d": "6/2014"}, {"body": "add breakpoint consolewarn call reactcomponentbrowserenvironmentjs inspect compare serverrendered version", "d": "6/2014"}, {"body": "apart tags id identical html html", "d": "6/2014"}, {"body": "confused nt see datareactchecksum clientside generated markup addchecksumtomarkup called rendercomponenttostring", "d": "6/2014"}, {"body": "logged string callback method suggested woops haha sparkles", "d": "6/2014"}, {"body": "time correct method still appear identical client html server html edit seem share idea still getting error though", "d": "6/2014"}, {"body": "instead adding whitespace paste two versions exactly", "d": "6/2014"}, {"body": "client server", "d": "6/2014"}, {"body": "odd sure could also try adding debugging reactmarkupchecksumaddchecksumtomarkup server see looks like compare get running guess good mine though", "d": "6/2014"}, {"body": "yeah even setting string fixed server response things break idea happens try tomorrow see anything changes", "d": "6/2014"}, {"body": "fast testing seems like might something full page rendering really sure would messed something along way quick test ran test body instead worked", "d": "6/2014"}, {"body": "syranide version react using also string using want see make version run", "d": "6/2014"}, {"body": "yoshuawuyts think using code stripped htmlelement replaced body div mounted body nt really proper test possible fumbled along way really", "d": "6/2014"}, {"body": "let see make work", "d": "6/2014"}, {"body": "correctly computes new checksum files identical reading previously set checksum returns investigating", "d": "6/2014"}, {"body": "returns thus incorrectly reads checksum", "d": "6/2014"}, {"body": "yoshuawuyts yeah checked source try mounting instead see nt fix", "d": "6/2014"}, {"body": "yep fix sparkles sparkles", "d": "6/2014"}, {"body": "maybe add check provides little information going wrong checksum nt align", "d": "6/2014"}, {"body": "think see done way mounting really throw error try mount reason ever sure first one fall unobviousunintuitive trap spicyj agree go way something would interested taking yoshuawuyts checking", "d": "6/2014"}, {"body": "yeah pr spicyj gives green light", "d": "6/2014"}, {"body": "yoshuawuyts probably rather think explicitly check", "d": "6/2014"}, {"body": "aye", "d": "6/2014"}, {"body": "see full error message going page recall chrome bug causes error message shown though thought fixed current builds better job warning exactly problem gets properly implemented", "d": "6/2014"}, {"body": "chrome bug", "d": "6/2014"}, {"body": "yeah bug latest chrome version happens arbitrarily nothing far able determine chrome fixes happens annoyingly often", "d": "6/2014"}, {"body": "intended see user could option initial render react wo nt blow away selection updating", "d": "6/2014"}, {"body": "anybody working keen implement tag", "d": "6/2014"}, {"body": "preserveaspectratio also seems missing create pr prefer collect missing attributestags first later create single patch edit preserveaspectratio added commit", "d": "6/2014"}, {"body": "impractical us add jsx support every editor may luck making feature request netbeans use issues repository used keeping track bugs react", "d": "6/2014"}, {"body": "know nt really right forum question like might better luck mailing list ca nt promise anything", "d": "6/2014"}, {"body": "afaik master allows reuse descriptors renders", "d": "6/2014"}, {"body": "yes last couple releases transitional code warn relying mutation descriptor previous versions master next release nt mutate descriptors safe reuse", "d": "6/2014"}, {"body": "andreypopp spicyj generally easy predict reused expected hold anything created render function component expect possibly animation would need tie pooling system", "d": "6/2014"}, {"body": "syranide yeah would pooled descriptors nt escape created inside descriptors created outside reused different represent static pieces ui", "d": "6/2014"}, {"body": "ah awesome pooled descriptors would still able support memoization use case example thanks", "d": "6/2014"}, {"body": "think kind memoization possible right moving separate component implemented would compare previous new value prop", "d": "6/2014"}, {"body": "oh yeah definitely would nt able share dom component instances renders without unmount case example imagine generating array nt think way memoize would nt result unmounting remounting entire list one changed though admit curiosity nt born realworld something started thinking something petehunt said talk leveraging familiar cs tools react", "d": "6/2014"}, {"body": "matthewwithanm might misunderstanding saying react reuse component instance update instead unmountremount long props match regardless actual descriptor object reused", "d": "6/2014"}, {"body": "wanted add might well exist whenif react makes switch pooled descriptors reusing across renders might well possible default", "d": "6/2014"}, {"body": "spicyj sorry yeah talking reusing actual descriptors example lot iteration build structure example would nt able memoize functions return list item descriptors use components job firstly render single components secondly even could return arrays second component would unmounted instead getting updated second lost first gained items super contrived nt problem exploring ideas memoization react syranide oooh sounds interesting keep eye thanks discussion everybody react community rad", "d": "6/2014"}, {"body": "petehunt", "d": "6/2014"}, {"body": "works", "d": "6/2014"}, {"body": "oh closing issue drscre let know missing something", "d": "6/2014"}, {"body": "luigy thanks sorry bad everything works", "d": "6/2014"}, {"body": "happens image loads react unmounted dom fixed master sorry trouble", "d": "6/2014"}, {"body": "spicyj cool thanks", "d": "6/2014"}, {"body": "spicyj awesome getting hit one", "d": "6/2014"}, {"body": "workaround us eta release fix", "d": "6/2014"}, {"body": "working something similar images im rendering img could try add use backgroundimage style something like bradens let know solution works thanks", "d": "6/2014"}, {"body": "gsantome yeah currently already workaround pretty bad since losing semantics meaning tag stop errors though thanks", "d": "6/2014"}, {"body": "bradens planning sometime soonish want say sometime next weeks", "d": "6/2014"}, {"body": "zpao sounds good thanks", "d": "6/2014"}, {"body": "try dom attributes camelcased react", "d": "6/2014"}, {"body": "seen warning console using dev build react", "d": "6/2014"}, {"body": "could something like", "d": "6/2014"}, {"body": "would nice able wrap attributes general though things like autoprefixing", "d": "6/2014"}, {"body": "petehunt issue see would across board elements would less ideal cases might specific use case one two elements cases like could used almost element really spicyj seems like reasonable use case attributes come mind", "d": "6/2014"}, {"body": "another possible virtual attribute could define would use object javascript var classes mybtn true defaultbtn thisstatedefault return main idea add convenience methods would shared dom elements", "d": "6/2014"}, {"body": "pretty sure oversight srccorereactproptypesjs want submit pull request fix", "d": "6/2014"}, {"body": "yes heart", "d": "6/2014"}, {"body": "technically renderable return render", "d": "6/2014"}, {"body": "strings numbers arrays already considered renderable even though ca nt render standalone", "d": "6/2014"}, {"body": "string numbers supposed one point array directly returned render yeah bit inconsistent", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "already use return elements nt want display", "d": "6/2014"}, {"body": "oh okay makes sense thanks", "d": "6/2014"}, {"body": "intentional deviation html usually nt want extra whitespace tags see summary current rules", "d": "6/2014"}, {"body": "bstst use insert intentional whitespace tabs newlines etc ps yes know link incase someone stumbles across issue", "d": "6/2014"}, {"body": "yeah syranide already noticed thing using coffeescript thus using jsx thus feels looks wrong code inserts redundant react dom still convinced right behavior opinion every inline opening tag written dom newline example would write following html markup without jsx name alias city renders current situation coffeescript nt add whitespaces output without whitespaces namealiascity renders desired result whitespaces due inline tags separated newlines admit ugly wrong whilst would take fix add newline inline tag writing dom", "d": "6/2014"}, {"body": "bstst makes sense relying implicitly added newlines create whitespace considering would solution nt want whitespace separating two pretty much always seems relying implicit behavior something explicitly require nt matter ugly code beauty never goal code understandable deterministic imho", "d": "6/2014"}, {"body": "syranide indeed think see would solution whitespace wanted rest case sorry commotion", "d": "6/2014"}, {"body": "ensure mouseleave fired believe would fix particular use case mean event invented determined means", "d": "6/2014"}, {"body": "nt spec ie jquery supported many years", "d": "6/2014"}, {"body": "similar issue cursorhover problem hover moving box cursor nt update scene nt reevaluated every frame move cursor moving box let rest box moves way see firing mouseleave event destruction nt enough could take upon change browser behavior reevaluating mouse target every rerender eg using target changed simply refire synthetic mouseoverout events would trigger enterleave events used art changed consistent browser immediate mode framework could reference something like current mouse target render eg something like something like might possible", "d": "6/2014"}, {"body": "thought thing published keymirror standalone module", "d": "6/2014"}, {"body": "awesome heard discussion splitting utils react separate modules like curious know facebook would consider using strml module rather keep things control happy send pr", "d": "6/2014"}, {"body": "super simple module think end would better separate module dependencies allow users require single one time eg smart packagers eg webpackbrowserify would pack efficiently fb would nt publish ton separate modules could simply required within", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "want versioning interesting problem nt done yet common core modules may need versioned separately react eg jest stay tuned", "d": "6/2014"}, {"body": "petehunt challenge wo nt change bunch", "d": "6/2014"}, {"body": "pure curiosity take object instead array enum values solid usecase passing object null keys array impression missing vital point", "d": "6/2014"}, {"body": "touchesir main purpose keymirror deal fact closure compiler advanced mode crushes keys allows write code like become something like evaluates runtime specified list strings would nt get crushed matching property names", "d": "6/2014"}, {"body": "jordwalke happens release component depends version conflicts another component used app even worse module stateful btw talking changing thread yesterday super long shot versioning react dependencies dependents difficult problem especially fb internal development process desire dogfood everything open source", "d": "6/2014"}, {"body": "spicyj thanks insight nt even bother think route keymirror gaining appeal second", "d": "6/2014"}, {"body": "want send pull request nt think us familiar component willing consider pr nt add much complexity", "d": "6/2014"}, {"body": "spicyj would happy turn large projects like etc component usually file points built dist file possible ideal component list lib files dependencies realize nt working like want make minimum step exposing dist files change conditional type line pointers appreciated", "d": "6/2014"}, {"body": "spicyj oh noticed react entry point react framework using one prebuilt packages available global using commonjs modules require expect simplifies issue eg already done change conditional moduleexports react type line", "d": "6/2014"}, {"body": "browser builds umd wrapper set moduleexports appropriate nt store prebuilt versions repo right need build step run files nt see instruct run sort build script use prebuilt version nt get committed might hard make work current setup", "d": "6/2014"}, {"body": "nt store prebuilt versions repo yep makes sense given need build step run files using becomes untenable view nt see instruct component run sort build script see note install scripts antipattern except unlike event support anything akin yes correct say might hard make work current setup think close hopefully revisit sometime future basically depends willingness guys eg interest level", "d": "6/2014"}, {"body": "npm run build script packaging nt see way thing component", "d": "6/2014"}, {"body": "spicyj ca nt concept github central repository means build step etc possible sense source code published", "d": "6/2014"}, {"body": "saw libraries publishing prebuilt distributables separate github repo release", "d": "6/2014"}, {"body": "react already bower", "d": "6/2014"}, {"body": "oh perhaps even use repo", "d": "6/2014"}, {"body": "sompylasar yup would much prefer come core teamcommunity worth otherwise", "d": "6/2014"}, {"body": "andreypopp spicyj ah nt notice take look sounds like yes could use repo", "d": "6/2014"}, {"body": "spicyj jonathanong nt think use supports one consumable module per repo would need happen barebones react repo one repo per addon wherein one depends literally repos would include ultimately would make sense include addon bundle repo would include", "d": "6/2014"}, {"body": "sompylasar interested userland management issue modules really come user react team practically relied upon maintaining automation around component module releases etc", "d": "6/2014"}, {"body": "sure would grateful react team managed mentioned saw teams standalone repo nt add released distributables main repo along sources", "d": "6/2014"}, {"body": "spicyj help getting githubcomreactjs repos maintained", "d": "6/2014"}, {"body": "take guys nt using react bower webpack cuz nt work know instagram using webpack react wondering nicer way consume app without hassle rebuilding source npm time", "d": "6/2014"}, {"body": "discussion ultimately decided nt doable component insistence single export devprod builds make really annoying shipping individual addons standalone modules something want need figure api things first", "d": "6/2014"}, {"body": "said need bypass cdn serving local copy dev manually copy paste raw cdn file nt seem like best solution would nice prebuilt binary available npm", "d": "6/2014"}, {"body": "make work webpack", "d": "6/2014"}, {"body": "specific nt work webpack", "d": "6/2014"}, {"body": "install react bower require js file try compile webpack profit try coffee branch jun pm ben alpert notifications githubcom wrote specific nt work webpack reply email directly view github", "d": "6/2014"}, {"body": "explain error get specifically nt work exact configuration command line arguments reproduce problem would helpful nt guess", "d": "6/2014"}, {"body": "sorry away laptop moment post back tomorrow get chance", "d": "6/2014"}, {"body": "problem thanks", "d": "6/2014"}, {"body": "installing npm works well sent iphone jun pm adam krebs notifications githubcom wrote install react bower require js file try compile webpack profit try coffee branch jun pm ben alpert notifications githubcom wrote specific nt work webpack reply email directly view github reply email directly view github", "d": "6/2014"}, {"body": "right forces compile b keep react separate rest frontend deps rest work problems bower", "d": "6/2014"}, {"body": "sure mean compile version npm already compiled repo sent iphone jun pm adam krebs notifications githubcom wrote right forces compile b keep react separate rest frontend deps work problems bower reply email directly view github", "d": "6/2014"}, {"body": "also without investigated thing bower output browserify umd turned remember seeing issues browserify umd past think fixed possible issue webpack browserify umd updated today believe sent iphone jun pm adam krebs notifications githubcom wrote right forces compile b keep react separate rest frontend deps work problems bower reply email directly view github", "d": "6/2014"}, {"body": "using webpack zpao thanks link pretty much made dupe sorry jonathanong basically thing needed way single repo multiple components nt seem crazy frankly would allow projects start big decouple time otherwise support projects potentially perfectly valid reasons want ship multiple things single repo ca nt imagine would add exponential complexity component react may microlibrary locwise actually focused library small mental api footprint petehunt mentioned meteor meetup longterm package manager win js client et al sure working directly vcs hubs github bitbucket etc already solved hosting user namespacing seems like interesting avenue would sooner fork host componentified react installing via former seems lot simpler us course best would core react support highly sympathetic issues outlined zpao time", "d": "6/2014"}, {"body": "jasonkuhrt tend agree thinking commonjs lingua franca npm canonical reponamespace", "d": "6/2014"}, {"body": "main issue umd wrapper around code imagine problem lies somewhere umd wrapper webpack import show create umd wrapper track trying run project get removing get", "d": "6/2014"}, {"body": "umd wrapper provided browserify nt anything special", "d": "6/2014"}, {"body": "cool chase thanks jun pm ben alpert notifications githubcom wrote umd wrapper provided browserify nt anything special reply email directly view github", "d": "6/2014"}, {"body": "intentional context determined component created function rendered component also note context experimental likely change future versions", "d": "6/2014"}, {"body": "case anyone else runs problem hackish way solve problem module component created inside access right context spicyj said feature likely change", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "thanks pointer reactfuture sebmarkbage follow repo info advancements area", "d": "6/2014"}, {"body": "spent hours trying figure code nt work thanks fix hope makes release soon", "d": "6/2014"}, {"body": "hi guys also falling bug still want use native input number native controls change events way make working react preventdefault events bind input handling dom thanks", "d": "6/2014"}, {"body": "gre sorry literally bug dom chrome least impossible read actual value input nonnumeric", "d": "6/2014"}, {"body": "sure get mean works chrome proof used", "d": "6/2014"}, {"body": "gre try chrome outputs input soon enter anything nonnumeric value becomes empty", "d": "6/2014"}, {"body": "understand chrome behavior make impossible implement sync react nt know says spec sure get functionally wrong behaviour number input nonnumber values nt make sense yeah maybe chrome nt allow inputing invalid text related initial bug react disables arrow controls keyboard ui chrome bug fixed still bug react making input number working right anyway recommended previously gon na implement number component thanks", "d": "6/2014"}, {"body": "gre nt know specifics guess autofill browser simply nt tell us user makes changes possible listen updown yeah seems reasonable listening etc accomplish fragile ps point basically already kind bad implement could easily even prevent invalid chars typed number ofc like selects styling always going issue seemingly also always going obscure bugsbehaviors", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "provide jsfiddlejsbin example mean", "d": "6/2014"}, {"body": "thanks discussion explanations encountered situation", "d": "6/2014"}, {"body": "bringing reason problem closed duplicate link empty href still takes focus kind sort style problems extra css still get focus tab focus controls page", "d": "6/2014"}, {"body": "slashes bit much break mobile proxies like operamini proxy amazon kindle proxy know valid html unless anyone mention actual exploit escaping slashes avoiding would say wasteful react btw params face proxy issues", "d": "6/2014"}, {"body": "another possible cause error writing posterity react receiving events elements removed dom nt happen unless bug react happens due react bug issue fixed master next release", "d": "6/2014"}, {"body": "see also", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "fixed", "d": "6/2014"}, {"body": "understanding targeted version part components classes guestimate timeframe take look tags really looking forward want create react components code using typescript", "d": "6/2014"}, {"body": "also puzzled would nt lifecycle events also apply", "d": "6/2014"}, {"body": "yes methods called reacttransitiongroup lower level component handling animations programatically kendall buchanan notifications githubcom also puzzled would nt lifecycle events also apply lt reactcsstransitiongroup reply email directly view github scarella simonecarella gmailcom", "d": "6/2014"}, {"body": "reactcsstransitiongroup higherlevel api want something complicated something using lowerlevel reacttransitiongroup api less implementation detail reactcsstransitiongroup uses reacttransitiongroup hood", "d": "6/2014"}, {"body": "taking demo op semireliably cause error tried perform animation without animationend transitionend event occur frequently resizing browser window one animation occurring particularly issue since transitioning components windowresize event", "d": "6/2014"}, {"body": "first problem lines easily reproduces firefox chrome second adding green lines background tab reproduces firefox chrome", "d": "6/2014"}, {"body": "bootstrap similar problems broken transitions transitions stopped background tab etc solved via triggering event manually nt fired browser", "d": "6/2014"}, {"body": "consider angular implementation enterleave animations add specific css classes may customized keyframe animations transitions \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c jonathan thomas notifications githubcom \u043d\u0430\u043f\u0438\u0441\u0430\u043b love see full example transitioning one element new react confounding must possible even simple looking issue seems nt straightforward designed one component like simply animate appearance onto stage seems animate owned components owner would like wrap components markup animate sure zimok got example working sounds like use case reply email directly view github", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "workaround use simulatenativemouseover simulatenativemouseout making sure specify relatedtarget appropriately together cause react fire onmouseenter onmouseleave events", "d": "6/2014"}, {"body": "clarifying note stumbling across issue like remember mocha tests run within single process node caches require calls one earlier tests requires react node cache react executionenvironment module canusedom property nt set global window variable yet easiestcleanest way think rectify ensure run tests nt use global window object one test process another spicyj others please correct got anything wrong comparatively new node world", "d": "6/2014"}, {"body": "let discussion reactfuture consistent plans", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "dont know late error called reactunmountcomponentatnode sending function child execute onclick event form disappeared got error react debugging found execute onclick function parent execution react continue bubbling event button form nt exist anymore dom react solution adding eventstoppropagation prevent continuing onclick hope answer help someone", "d": "6/2014"}, {"body": "gsantome thanks letting us know likely change unmounting batched state updates currently fix problem another way", "d": "6/2014"}, {"body": "experimented possible fix little bit spicyj said might worth ignore prepended nonwhitespace text gist would necessary code want make sure ignore text nodes consist purely whitespace would get rather complex wanted make sure account edge case alternating comment nodes text nodes actually find element node text node nonwhitespace content therefore think would much easier implement petehunt proposal use opinion makes sense nonwhitespace check react nt actually make sure appended nonwhitespace text neither reusing dom nodes came server", "d": "6/2014"}, {"body": "believe add end promise chain q rethrow exception previously caught recorded promise failure closing nt believe anything actionable react", "d": "6/2014"}, {"body": "yes mistake sorry nt know done method opened issue seems work fine", "d": "6/2014"}, {"body": "fixed", "d": "6/2014"}, {"body": "going close proposal reason currently cloning props objects actually passing instances anyway syntax clarifies gets merged allows sugar merging additional properties also preserves option using single object descriptors merging descriptor props object also allow us switch semantics object initialization rather arbitrary function call quite parity plain function calls using outside react might interesting allow us change implementation jsx need new syntax allows used spreading named arguments every became thing", "d": "6/2014"}, {"body": "yep pointed proposal recently looks awesome", "d": "6/2014"}, {"body": "sorry long delay busy try today", "d": "6/2014"}, {"body": "problem whenever time", "d": "6/2014"}, {"body": "curious want hyphenate names subsequent updates instead show warning one way", "d": "6/2014"}, {"body": "yes matches existing practice requiring camelcased attributes general makes easier make warpper components modify props way need look one place find original value addition nt need worry happens someone specify style block one last advantage warnings happen dev version runtime cost production build", "d": "6/2014"}, {"body": "think worth adding sake providing suggestive warning eg", "d": "6/2014"}, {"body": "go also updated docs prefix since clear right", "d": "6/2014"}, {"body": "warning would helpful sucked lot time anyone interested chrome seems handle hyphenated css props ok ff nt", "d": "6/2014"}, {"body": "fiiiiiiiiine", "d": "6/2014"}, {"body": "generally makes sense though people complained unit testing react relies available require time", "d": "6/2014"}, {"body": "see current proposal", "d": "6/2014"}, {"body": "going close reactfuture proposal mentioned let open issues reactfuture nt think current proposal viable replacement", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "zpao docs forms could clearer mentioning put array attribute usage example likely", "d": "6/2014"}, {"body": "sompylasar good idea reopening remember add info", "d": "6/2014"}, {"body": "closing favor new issue", "d": "6/2014"}, {"body": "problem unrelated css transition ending within child component would trigger parent csstransitiongroup remove child dom prematurely understood writing logic noticed worked way nt check maybe related also", "d": "6/2014"}, {"body": "fixed", "d": "6/2014"}, {"body": "would also love way consistent quoting transformer preferably double quotes case running issues pkyeck", "d": "6/2014"}, {"body": "hey chenglou manage write react docset", "d": "6/2014"}, {"body": "rough version passed agirton hope one reactjs", "d": "6/2014"}, {"body": "chenglou working well need go pages get anchor links hooked items lower left hand table tableview easier navigation busy nt able feature yet", "d": "6/2014"}, {"body": "chenglou agirton chance point docsets fully working fine", "d": "6/2014"}, {"body": "agirton ping", "d": "6/2014"}, {"body": "using markdown comments docco good choice wo nt change anything", "d": "6/2014"}, {"body": "docco nt actually generate api docs afaik html page code comments together", "d": "6/2014"}, {"body": "correct takes philosophy code mostly selfexplanatory obvious variable naming markdown comments give additional context write variable definitions etc want though", "d": "6/2014"}, {"body": "see backbone underscore annotated sources examples prefer style", "d": "6/2014"}, {"body": "crosspost considered something like property would pass value asis attribute dom could considered property although look kind ambiguous like sense would work like going soon usecase actually similar ie use unsupportedunofficial attributes kind makes sense", "d": "6/2014"}, {"body": "converted small project use cjsx worked perfectly far tell looks nice see", "d": "6/2014"}, {"body": "working cjsx quickstart gulpfile build coffeescriptsass well integration jest wip coming along", "d": "6/2014"}, {"body": "wow took track fix right way", "d": "6/2014"}, {"body": "like change default file extension transform jsx regardless docblock present see", "d": "6/2014"}, {"body": "", "d": "6/2014"}]