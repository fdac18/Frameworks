[{"title": "boolean attribute getters throw attribute name lowercase", "body": "description removed logic lowercased attribute names caused one regression attribute getter using name boolean attributes lowercased going infinite recursion exceeding stack call limit amongst others breaking angularjs test suite tested jquery link test case basically enough trigger error", "num": "3133", "d": "5/2016"}, {"title": "width totally broken systematically rounded inaccurate", "body": "look console output prints test width compare actual value displayed browser dev tools expected value accurate observed value systematically rounded integer documented even accurately nearest integer systematically floored systematically ceiled sometimes rounded value less n lt viceversa anyway nt rounded renders width totally broken absolutely useless", "num": "3132", "d": "5/2016"}, {"title": "new feature jquery less sass src", "body": "nt find issues tab jqueryui github repository nt know post putting less sass src theme generation github repository using bower great thing get exactly need js src files users compile js using amd module structure like requirejs project also use less sass css build system including src would allowed users also compile less sass import jqueryui theme want gt css file js file", "num": "3131", "d": "5/2016"}, {"title": "target inputs safari", "body": "description target inputs via input namexzx safari mac latest version link test case", "num": "3130", "d": "5/2016"}, {"title": "deferrednotify progress callback getting wrong params", "body": "calling deferrednotify params seems like progress callback given promise ends unexpected incorrect situation receiving undefined first param params array object second basically notifywith sig context params would expect notify params still behave give inline progress callback given params js return retrieve function data textstatus jqxhr deferrednotify data textstatus jqxhr data odatanextlink else deferredresolve data textstatus jqxhr return data function data textstatus jqxhr assertok true records created return awebapiretrieve progress function data textstatus jqxhr assertok true retrieved page progress callback gets undefined data context params object notifywith textstatus given params edit mgol fixed markdown proper code formatting", "num": "3129", "d": "5/2016"}, {"title": "selector input attribute valuexxx nt take changes via val function account", "body": "think problem jquery selector value taking account value set val function jquery sure design seems like bug set value text box via input text val newvalue selector jquery taking change account input text valuenewvalue returns nothing check difference following links jquery jquery normally would expect change val function reflected value attribute input well seems reasonable", "num": "3128", "d": "5/2016"}, {"title": "delay submit", "body": "description using latest versions also latest jquery validate files simple form fields input select boxes validation around jquery submit noticing second delay triggering submit testing using firebug able locate line code slowly system submit chunk code question section causing delay processing changing code following code validatorsetdefaults submithandler function var formname documentformnamesubmit form submitted almost immediately second delay would account delay submission code server jquery submit process slow javascript submit much faster link test case nt external link code need source code post thanks", "num": "3126", "d": "5/2016"}, {"title": "empty value cloned input element changed type hidden lost", "body": "corner case indeed happened works pre filled input field page load input field changed eg clone element change hidden type look cloned val everything fine clone value original input work change value original empty hand js everything else like val cloned input field value original input page load empty course fiddle change cloned type works expected fails conditions met original input non empty value attribute original input cleared page load type clone changed hidden happens tested firefox", "num": "3125", "d": "5/2016"}, {"title": "bug jquerydata read differs data using kebabcase objectnotation", "body": "storing data using syntax trying overwrite read key get initial set value reading return fact returns using works fine test case", "num": "3124", "d": "5/2016"}, {"title": "shim focusinfocusout browsers", "body": "description amp handlers attached one input amp second one order events fired jquery order mandated spec followed ie edit ie following spec though fires amp synchronously asynchronously fixed edge events fired synchronously browsers spec also mandates focus lost amp gained event fires chromesafari following edge following firefox nt support events yet ongoing work currently polyfilling event everywhere except ie since ie differs implementation obsolete browser sounds bad let thing different shim everywhere link test case", "num": "3123", "d": "5/2016"}, {"title": "weirdness", "body": "sure report posting page two builds shown git builds sure supposed looks inconsistent also builds point redirect", "num": "3120", "d": "5/2016"}, {"title": "getjson contenttype header missing", "body": "trying use getjson set contenttype header eg contenttype applicationjson least trying invoke aspnet asmxweb service method receive error whereby jqxhrresponsetext set request format unrecognized url unexpectedly ending see also related would expect accordance clear http rfc specs bug jquery bug microsoft aspnet ideally would still good jquery feature also option able pass settings block instead similar get method", "num": "3119", "d": "5/2016"}, {"title": "csp error jquery", "body": "csp enabled web application allowing unsafeline styles jquery library encounter error goes browser console jquery library handle fallback method innerhtml possible application functional lots false positives console request library proactively check allow use innerhtml rather relying exception path address encountering chrome windows machine content security policy configuration results warning contentsecuritypolicy defaultsrc self stylesrc self refused apply inline style violates following content security policy directive stylesrc self either unsafeinline keyword hash nonce nonce required enable inline execution jquery line content looks like js see take shortcut use innerhtml typeof value string amp amp rnoinnerhtmltest value amp amp wrapmap rtagnameexec value tolowercase edit mgol fixed markdown code formatting readable description link test case", "num": "3117", "d": "5/2016"}, {"title": "bug clone cloning textarea select options firefox", "body": "although marked closed nt work correctly firefox comments", "num": "3115", "d": "5/2016"}, {"title": "plugin age verification problems", "body": "age verification plugin following problems looking mobile device check box phones key board finish submit age nt work click form fields enter day month birth actual form drop screen accessible mean try log site wwwnwweedfindercom phone", "num": "3114", "d": "5/2016"}, {"title": "jqueryeventprops", "body": "removed still mentioned docs snippet change intended breaking suggest pointing users", "num": "3112", "d": "5/2016"}, {"title": "regression focusin handling firefox", "body": "description cursor missing misplaced input box focusin handler attached returning handler affected firefox using see emberjsemberjs link test case courtesy serabe codepen uses jquery also breaks works alright jquery", "num": "3111", "d": "5/2016"}, {"title": "finds elements object satisfy filter function", "body": "hello wondering would good idea summit pr allows grep filter object well remove need something like grep objectkeys options function k return options k group something would love feedback", "num": "3110", "d": "5/2016"}, {"title": "jquery versioned", "body": "small installed jquery via npm npm install jquery resulting version jqueryjs line mislabeled", "num": "3109", "d": "5/2016"}, {"title": "return incorrect value", "body": "method return position element relative closest ancestor element positioned therefore example css properties element set returned position element move ancestor element positioned exist ie ancestor elements default position relative element incorrectly returned example result note lost issue lost another issue offset fixed used result method called method returns ancestor element positioned found mistakes think return case means base coordinates means ancestor element found also method return coordinates relative document case also method returns incorrect coordinates ie ancestor element really example result note added issue lost another issue offset fixed used result method returned method ignores offset therefore offset ie returned value incorrect strange say included calculation think might affect scripts exist return value method changed least fixed even fixed case use check whether returned issue affects method setter uses", "num": "3107", "d": "5/2016"}, {"title": "ensure support common touch pointer event properies", "body": "two plugins found mess event properties might popular rather waiting people report problem let sure added relevant properties particular time remove pagexy still way ahead size", "num": "3104", "d": "5/2016"}, {"title": "remove jqueryeventfix performance bottleneck", "body": "every native event go copy normalize properties go object passed handlers tension minimizing number items copied performance reasons versus making available directly users wo nt forced get via see discussion", "num": "3103", "d": "5/2016"}, {"title": "make jquerywhen always async", "body": "see discussion making blocker moment provide pull strong motivation deal feel free close", "num": "3102", "d": "5/2016"}, {"title": "adding element name nodetype using append prevents subsequent elements added parent", "body": "append input element form using append method name new child element nodetype ie html element property indicating type elements subsequently added parent subsequent append methods nt raise error never gets added dom created simple jsfiddle demonstrates issue also created version test case elements created using native js methods rather jquery issue occur using native code tried using jquery alpha reproduced issue chrome version firefox issue occur ie", "num": "3101", "d": "5/2016"}, {"title": "always synchronous possible", "body": "iic jquery compatible callbacks always executed context eg continue executed synchronously whenever possible eager double checking kept eager behavior discovered unless single argument hope get abcd given promised already resolved called dreaded adbc longer eager get worse though console acdb acceptable behave exact way fwiw personally disagree promisea rule hope jquery keeps behavior eager except comply gives us eager version could correct semantics callbacks return values investigate looks related", "num": "3100", "d": "5/2016"}, {"title": "custom build ajax functionality", "body": "like create custom build using following modules version need fullest internet explorer support anybody provide working example", "num": "3099", "d": "5/2016"}, {"title": "ajax status without data response considered request success", "body": "currently case ajax request server responds status code send data response considered error expectation considered success trigger handler ajax object", "num": "3098", "d": "5/2016"}, {"body": "test cases would greatly appreciated unlikely performance issue since regexp string simple plus manually triggered events nt tend fired hundreds times per second check cheap though seems like worth", "d": "5/2016"}, {"body": "maybe moving condition morph condition true false instace fail check morph morph anyway thinking possible namespace morph like", "d": "5/2016"}, {"body": "tried debug code understand filled method explain seems never different events tests defined initially", "d": "5/2016"}, {"body": "years ago let see remember original ticket actually two things sortof related one calls handlers event bubbling tree appropriate stopped two calls dom method name handler called eg call method currently focused focusable calling dom method trigger events happen problem already called handlers nt want call property nonempty process calling corresponding dom method event example method called events particularly tricky potentially fire one call focus moves made complex several browsers support events use simulate currently calling dom methods final step may end causing simulated event need avoid like event also ignored looks like unit test using test case ensuring event bubbles tree bug trying fix general events notorious hard test several places given firefox nt work browserstack due window focus issues", "d": "5/2016"}, {"body": "thanks reply next weekend reread explanation try understand works try think mean simulate case define unit test try optimize process basically move morph structure great thing even help performance possible without break things avoid branch namespaced events", "d": "5/2016"}, {"body": "pr", "d": "5/2016"}, {"body": "discuss changing milestone breaks angular test suite", "d": "5/2016"}, {"body": "thanks report however duplicate fixed upcoming jquery decided change code might depend shape output method wanted avoid breaking changes please test jquery issue resolved report regressions might find", "d": "5/2016"}, {"body": "see however perhaps consider right rounding either consistently round nearest integer consistently floor would nt see good reason consistently ceiling currently chrome unpredictably picks next previous integer might rounded might rounded", "d": "5/2016"}, {"body": "unpredictably picks next previous integer might rounded might rounded jquery uses get values behave describe browser bug report relevant browser vendor browsers round various direction eg chrome differently android note even jquery wo nt get fractional values everywhere browsers return fractional values includes virtually modern browsers eg ie always rounds edit fixed info", "d": "5/2016"}, {"body": "jquery uses offsetwidthoffsetheight get values behave describe browser bug report relevant browser vendor browsers round offsetwidth various direction eg chrome differently android nt half point jquery supposed eliminating differences browsers", "d": "5/2016"}, {"body": "nt half point jquery supposed eliminating differences browsers yes always tradeoffs consider eg would reject patch makes small improvement takes big performance hit sometimes also possible align browsers patch would huge trying keep size jquery relatively small case nt plan updates jquery lines exception possible critical issues development focused jquery issue wrt rounding ie android browser amp ios round values everywhere else get fractional values", "d": "5/2016"}, {"body": "nt half point jquery supposed eliminating differences browsers would eliminate difference numbers give ones browser providing us via apis supposed represent browser layout engine decided lay page note constraint pixelperfect layout browsers differences necessarily bugs issues like around ages see blog post john resig reasons jquery done switching changing could introduce breaking changes decade worth existing code already exists currently chrome unpredictably picks next previous integer might rounded might rounded chrome nt giving reasonable values file bug chrome however keep mind issues mentioned blog post table columns seems perfectly reasonable browser return column widths order total exactly", "d": "5/2016"}, {"body": "link jquery ui bug tracker mentioned jquery ui readme address jquery ui nt use sass less though css handwritten see source", "d": "5/2016"}, {"body": "test case web site need help fixing site start stackoverflow jquery forum open ticket specific test case", "d": "5/2016"}, {"body": "seems duplicate let continue unless please comment amp reopen", "d": "5/2016"}, {"body": "thanks report", "d": "5/2016"}, {"body": "expected change covered upgrade guide however selector like input valueabc used always select value attribute change made property user example typing text input jquery behaves correctly consistently earlier versions jquery would sometimes use property used attribute want find input concrete value may limit selection via also make sure nt use part code executed often performance reasons makes whole selector skip native", "d": "5/2016"}, {"body": "mgol thanks lot clear explanation sorry misunderstanding searched lot nt see note thanks clarification", "d": "5/2016"}, {"body": "delay must coming validation plugin jquery core please use forums stack overflow plugin issue tracker help", "d": "5/2016"}, {"body": "ref note idl attributes methods value input defined default one defined value see definitions spec changing changed required behavior", "d": "5/2016"}, {"body": "dmethvin thanks fast response explanation played around little bit maybe explain following behaviour fear correct spec understand atm var input test inputval something var beforetypechangevalue inputget getattribute value inputattr type hidden var aftertypechangevalue inputget getattribute value beforetypechangevalue test aftertypechangevalue something type change gives default value even though value property changed far good type change attribute nt still attribute changed attribute nt touched looks like attribute synced property type change know probably nothing jquery still interested like sorry ot", "d": "5/2016"}, {"body": "way tell jquery give example try standard dom methods see thing happens spec means table references property internal state typehidden specifically says use attribute note jquery setsgets value property gettingsetting value attribute often thing various compat rules", "d": "5/2016"}, {"body": "correct nothing jquery still understand browsers behave though firefox chrome safari seems correct var input documentgetelementbyid test inputvalue something var beforetypechangevalue inputgetattribute value inputsetattribute type hidden var aftertypechangevalue inputgetattribute value beforetypechangevalue test aftertypechangevalue something using instead values type change seems something property value indeed changes property understand correctly", "d": "5/2016"}, {"body": "spec says using attribute suspect logic behind need hidden input dynamic state since users modify directly changing type fly breaking assumption likely many people encountered case earlier nt even allow change input types people avoid code", "d": "5/2016"}, {"body": "fixed jquery dictating everything stored camelcase", "d": "5/2016"}, {"body": "yup main issue", "d": "5/2016"}, {"body": "shim everywhere voting yes", "d": "5/2016"}, {"body": "previous art links including comprehensive tests", "d": "5/2016"}, {"body": "one problem thx dmethvin amp ie fire synchronously amp asynchronously contrary spec means shimmed amp ie change sync async", "d": "5/2016"}, {"body": "rather different event order async event", "d": "5/2016"}, {"body": "light information tend agree dmethvin mess", "d": "5/2016"}, {"body": "wpt currently lacks test synchronicity", "d": "5/2016"}, {"body": "sad think even would get test right sob anything close ticket maybe firefox get everyone agree order implementation kind like edge order tbh", "d": "5/2016"}, {"body": "anything close ticket think least put comments source document sequence api pages", "d": "5/2016"}, {"body": "documented order events well defined code depend document actual order jquery uses seems like saying order supported would able change major version plus ca nt make order happen ie without turning async", "d": "5/2016"}, {"body": "dmethvin sounds good add guarantee happen contract promise", "d": "5/2016"}, {"body": "moved", "d": "5/2016"}, {"body": "dmethvin clever guy", "d": "5/2016"}, {"body": "think go", "d": "5/2016"}, {"body": "added", "d": "5/2016"}, {"body": "thanks", "d": "5/2016"}, {"body": "hi dennisvm opened issue instructions able see", "d": "5/2016"}, {"body": "would check allowed though initial check always log warning console", "d": "5/2016"}, {"body": "tomjahncke provide link test case guessing html inline styles usually better guess ask test case indicated link test case issue template", "d": "5/2016"}, {"body": "thank quick replies dmethvin attempting provide test case find places html using style instead class addressed remaining times get csp warning related independent angular library using going reach angular library assistance able create simple example demonstrate issue library content closing issue nothing jquery thank quick reply patience submitting issue", "d": "5/2016"}, {"body": "definitely html sent jquery nt following csp policy set page would cause issues something jquery internally open new ticket test case", "d": "5/2016"}, {"body": "seems alreadyknown bug firefox reasons fixing jquery still valid lot work rare case would comment ticket see whether fixed meantime possible copy value right", "d": "5/2016"}, {"body": "hassle end textarea select situations nt work chosen jquery nt want deal browser issues end jquery like javascript beginning claiming browsers fix problems seems way making bugfix", "d": "5/2016"}, {"body": "thanks quick answer highly appreciated", "d": "5/2016"}, {"body": "update firefox guys say waiting fix jquery", "d": "5/2016"}, {"body": "update firefox guys say waiting fix jquery comment firefox guy nt say added firefox bug metabug collecting issues affecting jquery", "d": "5/2016"}, {"body": "ok read issue gets reported jquery interpreted jquery fix however hope gets fixed jquery firefox nt make progress since years jquery wants api developers hiding browser specifics", "d": "5/2016"}, {"body": "ps baszero take fix long reported yes please firefox fix kinds comments bug trackers nt constructive firefox large project many thousands open bugs like help contribute patch fix issue happy help get started send email miket mozillacom thanks", "d": "5/2016"}, {"body": "thanks agree comment constructive rather contribute jquery mozilla believe fix belongs", "d": "5/2016"}, {"body": "note per spec currently written clonenode textarea supposed copy modified value firefox safari following spec chrome edge see also spec issue", "d": "5/2016"}, {"body": "even reason change since ticket references appropriate external tickets nt plan implementing change counter spec close ticket spec agrees behavior makes sense revisit", "d": "5/2016"}, {"body": "hi help us understand improve process text box typed read would helped direct right place", "d": "5/2016"}, {"body": "read kind confusing mark nt sure meant comment mark seen", "d": "5/2016"}, {"body": "okay need work question asking nt anything repo sounds like need find owner age verification plugin file issue could ask question stackoverflow", "d": "5/2016"}, {"body": "yea remove site completely nt work keeping people logging every time back keyboard age verification form drops completely gone view", "d": "5/2016"}, {"body": "api site request closing duplicate issue quite old though good reminded us change needed thanks", "d": "5/2016"}, {"body": "confirmed thanks report", "d": "5/2016"}, {"body": "test case using dev version jquery", "d": "5/2016"}, {"body": "first bad commit cc markelog", "d": "5/2016"}, {"body": "jquery fine perhaps need backport workaround test well", "d": "5/2016"}, {"body": "mean broken well", "d": "5/2016"}, {"body": "check sounds like blocker", "d": "5/2016"}, {"body": "yeah get imo", "d": "5/2016"}, {"body": "currently fix landed master branch ie sure constitutes new release marking", "d": "5/2016"}, {"body": "also landed master fix mainly branch since regression", "d": "5/2016"}, {"body": "landed", "d": "5/2016"}, {"body": "think confusing though", "d": "5/2016"}, {"body": "denote apply maybe better name soon wo nt need label", "d": "5/2016"}, {"body": "jquery builtin utility methods primarily meant serve needs jquery internally exposed since useful others since using feature like one describe could done plugin even independently jquery nt meet bar adding new features something like may also want look lodash got great set methods filtering data", "d": "5/2016"}, {"body": "sure installed correctly see correct results", "d": "5/2016"}, {"body": "ignore tomorrow friday hooray npm update installed jquery", "d": "5/2016"}, {"body": "think offsetparent return document null case document means base coordinates null means ancestor element found behaviour already defined spec deviate though lot issues", "d": "5/2016"}, {"body": "jquery nt behave cssom specification think fixed", "d": "5/2016"}, {"body": "sgtm", "d": "5/2016"}, {"body": "would great way make every property original event available jquery one overhead regards number properties possible without proxies unfortunately", "d": "5/2016"}, {"body": "proxy pretty slow course defineproperty slow ideally able use native prototype nt work browsers tried drawbacks approach faster smaller old code guess progress", "d": "5/2016"}, {"body": "ideally able use native prototype nt work browsers tried could share browsers problematic", "d": "5/2016"}, {"body": "strange day ca nt type either jsbin jsfiddle codepen chrome gives illegal invocation edge gives invalid calling object firefox gives typeerror get type called object implement interface event thought sure one three actually worked last time tried object really host object guess expected", "d": "5/2016"}, {"body": "saw pr noticed issue add well based title issue probably safe leave new properties", "d": "5/2016"}, {"body": "conflicted far go trying avoid setting hook api concrete could find prevent immediate pain people using plugins people using pointer events using pep adding pointerid wo nt help take advantage pep would like see need figure get event object hacking business", "d": "5/2016"}, {"body": "sorry long delay got buried inbox people using pointer events using pep adding pointerid wo nt help take advantage pep would like see definitely help people using pep would nt take advantage inside pep allow users use directly long loaded pep page small section pep readme using pep jquery show simple example cares coordinates special work however two common pointerspecific properties people check love see included seems like minimum requirement since allow users determine events pointer defer listing properties work require using jquery api docs specifically version dependent changes time direct impact pep zero code changes docs changes indirect impact developer ergonomics real want push pointer events much reduce friction much possible love see included core create plugin adds properties users weigh pros cons decide want benefit accessing properties directly expect become issue implementations longer behind flag every browser except safari properties exposed automatically users add pep get support safari certain properties wo nt exist point may want include properties plugin directly pep", "d": "5/2016"}, {"body": "important realize jquerywhen calls analogous calls analogous thanks replies like point really analogous currently returns wrapped promise nt wrap existing promises argument reliance unwrap secondary thenables seems apply least much one argument single one mean say gotten abdc example instead acdb could understand reasoning disagree decision currently justification behavior seems reversed abcd synchronous behavior secretly hoping adbc asynchronous behavior would secretly disapprove abdc inconsistent behavior single argument vs multiple single promise treated specially like would disapprove acdb inconsistent behavior single promise treated differently illogically current behavior object think clearly bug currently closing ask naively two different methods could would would coerce sole argument promise coerces via need could keep synchronous behavior intact given promises method available", "d": "5/2016"}, {"body": "state would execute asynchronously seems returns correct result adbc asynchronous behavior would secretly disapprove would spirit spec line implementations two different methods guess could consider adding new method definitely", "d": "5/2016"}, {"body": "like point really analogous currently returns wrapped promise nt wrap existing promises fixed argument reliance unwrap secondary thenables seems apply least much one argument single one focus fixing alreadybroken singleargument case certainly valid point nt implement nt want totally destroy access secondary thenables trick use analogous case nt work resolution value array closing ask naively two different methods could would intend later coerces via need could keep synchronous behavior intact given promises method available nt see happening promises resolve thenables", "d": "5/2016"}, {"body": "state would execute asynchronously seems state returns correct result sure follow would expect result mozilla doc states promiseresolve value method returns promise object resolved given value value thenable otherwise returned promise fulfilled value would expect equivalent corresponding state resolved pending adbc asynchronous behavior would secretly disapprove would spirit spec line implementations spec implementations worry handlers run asynchronously state promise methods talk synchronous behavior using jquery would still asynch line implementations even abcd case", "d": "5/2016"}, {"body": "fixed sure made clear returns exact object new promise returns different object nt even could keep synchronous behavior done intact given promises state method available nt see happening promises resolve thenables indeed would special case jquery promises method thenables might mistaken think possible maintain synchronous behavior promises etc fully promisesa compliant otherwise rewrite combines synchronous sometimes asynchronous validations elegantly see end complex combination promises comprised solely synchronous checks asynchronous one somewhere genuine use case elegant solution purely asynch promises cry", "d": "5/2016"}, {"body": "mozilla doc states promiseresolve value method returns promise object resolved given value value thenable otherwise returned promise fulfilled value would expect equivalent corresponding state resolved pending promises threestate pendingfulfilledrejected additional concepts settled pending resolved either settled locked match state another thenable either case ignoring resolvereject attempts resolved state completely independent resolved promise may pending fulfilled rejected jquery deferreds threestate pendingresolvedrejected unfortunate resolved state maps fulfilled fair first rate state pending execution context stack fully clears methods talk synchronous behavior using jquery would still asynch line implementations even abcd case right deferred deferred nt unwrap thenables requested work around deferred behavior better track sure made clear returns exact object new promise returns different object nt even still returns new object get point suitably distinguished could reconsider jquerywhen always returns new deferred decision sure functionality worth size though indeed would special case jquery promises method thenables tries guarantee promisesa compatibility ca nt blindly passes eg jquery deferred could pass deferreds would require way identifying eg changing factory inheritance model otherwise rewrite combines synchronous sometimes asynchronous validations elegantly see end complex combination promises comprised solely synchronous checks asynchronous one somewhere genuine use case elegant solution purely asynch promises cry describe exactly need us may well wrong tool job especially given deferred still sometimes synchronous", "d": "5/2016"}, {"body": "promiseresolve promisefromotherrealm still returns new object get point mmm think went far analogies confusing would propose eliminate looks analogues also state resolved next tick also wo nt would propose analogie map states looks clear seems different name thing describe exactly need us good discussion though alphas betas right think need make consistent", "d": "5/2016"}, {"body": "right think need make consistent word consistent get us nowhere many ways consistent method like disjoint things even marcandre mentions would need special case jquery deferred order get output behavior wants another way say input nt handled consistently smilingimp closing ask naively two different methods said completely agree plan two methods separate two behaviors trying accomplish already prepared code input good help us decide additional methods need would glorious ship get feedback missed describe exactly need us right question rewrite bit hyperbolic solution avoid rewrite nt even need inside jquery file could small plugin retains whatever need old behavior better worse async behavior developers going expect future going confuse people things differently even people think better", "d": "5/2016"}, {"body": "really appreciate consideration replies even though known jquery contributor smile rate promiseresolve jquerywhen state pending execution context stack fully clears believe incorrect state fulfilled meant used jquery resolved sorry confusion state pending next tick consequence browsers asynch api anyways would execute exactly moment written promise synchronous api matter wish would execution time native promises ie next tick using instead would also lead execution time executes synchronously ie immediately describe exactly need us tldnr short code like change returns promise behaves exactly like currently gladly provide pr ok quite true like execute immediately also longer think desire api compatible native looks like introduce equivalent good wish additionally jquery maintains synchronous api would fulfill jquery promises thenables soon possible combination already fulfilled jquery promises yield already fullfilled promise note exactly currently except believe special treatment jquery promises implication asynch api since fulfilled promises still executes next tick moreover special treatment jquery promises jquery api similar special treatment native promises note already special treatment outputs acb like much hope change output using consistent cab want", "d": "5/2016"}, {"body": "looks analogues also state resolved next would propose analogie definitively resolves scalar like resolve array", "d": "5/2016"}, {"body": "thanks much elaboration marcandre promise synchronous api matter wish would execution time native promises ie next tick using instead would also lead execution time executes synchronously ie immediately wish additionally jquery maintains synchronous api would fulfill jquery promises thenables soon possible combination already fulfilled jquery promises yield already fullfilled promise note exactly currently except possible would match deferred migration treatment thoughts dmethvin markelog", "d": "5/2016"}, {"body": "wrote analogie equvivalent even used different output fine possible would match deferred migration treatment thoughts dmethvin markelog would purpose make faster guy especially browser environment besides really easy make plugin really oppose though would want make close standard possible make output predictable", "d": "5/2016"}, {"body": "quick search bluebirdqwhen ca nt find anything like thought would favour deprecating make friendly also reading spec promise promise represents eventual result asynchronous operation returns promise asynchronous seems would would moving although open interpretation spec nt seems ideal", "d": "5/2016"}, {"body": "seems would would moving although open interpretation spec nt seems ideal spec states always run callback asynchronously would change agree compatible spec", "d": "5/2016"}, {"body": "markelog missing point speccompliant backwards compatible deferred pretty much maintained synchronicity likewise multiargument question noargument singleargument", "d": "5/2016"}, {"body": "agree compatible spec would compatible spec would moving away spirit practise implementations point changing behaviour deferreds opposite would treat method legacy legacy could deprecated future eventually replaced native promises would move away spec means would harder harder pretty much maintained done synchronicity could synchronous still sometimes could asynchronous case could always async since promises deferred computations least perceived way whole point making always async give users predictable behaviour async possible async operations oppose logic beginning wrong community adopted liked different behaviour seems story yeah could would compatible spec nt see point", "d": "5/2016"}, {"body": "possible would match deferred migration treatment thoughts dmethvin markelog suppose could treat like confusing api deprecate seal cellar cask amontillado case could value backcompat consistency spec compliance sets stage remove support via migrate", "d": "5/2016"}, {"body": "dmethvin seems radical solution plenty legitimated cases appropriated personally nt find confusing like nt perceive confusing since proposition ticket adhere logic every implementations right transitive state understandable since pretty big rewrite internal logic confusing resolving ticket intendented would solve consistency issue without introducing new quirks", "d": "5/2016"}, {"body": "would treat method legacy legacy could deprecated future eventually replaced native promises one possible avenue solution embrace synchronous api async one wrong community adopted liked different behaviour found original thread decided everyone agrees behavior well defined community wasis quite split synch asynch reason asynch behavior choice seems less error prone although nobody pointed actual real life error caused synch evaluation moreover nt good usecase presented synchronous api time sadly cost preventing legitimate uses underestimated imo", "d": "5/2016"}, {"body": "nt think want make break marcandre use case much right different way plus break many usages even point synchronous sometimes resolves array values sometimes like sometimes like sometimes takes multiple ticks resolve inputs sometimes question explicitly documentation already specifies lot special cases save work docs compatibility issues making continue work way special cases need expand explanations happens single thenable mix multiple thenables deferreds luckily looking multiple deferreds seems much less likely depended synchronous one possible avenue solution embrace synchronous api done pipe async one case jquery today although like resigned coexistence embrace smilecat everyone agrees behavior well defined community wasis quite split synch asynch perhaps still good place litigate point would nt say would still favor deprecating since many crazy exceptions make hard use consistently", "d": "5/2016"}, {"body": "closed", "d": "5/2016"}, {"body": "never worked never sorry naming node properties already exist never good idea", "d": "5/2016"}, {"body": "okay confused likely fault setting existing property name equal name another property node trying reuse existing property node another purpose ie action trigger browsers turn name attribute actual node property something", "d": "5/2016"}, {"body": "oh explained many times many different occasions recent although better read spec", "d": "5/2016"}, {"body": "ok thank link basic rule never use known idl property name actual content attribute name element constructing html understood sort cheers", "d": "5/2016"}, {"body": "see also explains tries detect problems", "d": "5/2016"}, {"body": "discuss want make async sync agree arguments nt affect", "d": "5/2016"}, {"body": "important realize calls analogous calls analogous unfortunate similarity led shared function name jquery distinct although remains eager generalcase necessarily reliance unwrap secondary thenables nt want introduce exception really would introduce inconsistency also disagree promisesa insufficient justification abandon compatibility demanded long", "d": "5/2016"}, {"body": "know rightly railed several times lazy dig implementation special case one argument rather plain value return argument accepting type ables arguments would make behavior even bizarre passed able need convert meet api contract right means always hidden async inside tearyourhairout behavior edit said", "d": "5/2016"}, {"body": "always async right", "d": "5/2016"}, {"body": "jquerywhen always async right answer discuss irc seems motivation make call always async regardless arguments opened different issue", "d": "5/2016"}, {"body": "hi firstly right place questions best place forums jquery irc channel second version support ie lt need custom build created latest third custom build instructions documented readme", "d": "5/2016"}, {"body": "data type specify request success data converted please answer questions issue template future", "d": "5/2016"}, {"body": "dmethvin nt specify datatype picked default value also response data rails server response looks like sending ajax request save data expecting anything response except headers", "d": "5/2016"}, {"body": "headers probably specifying response json data type needs parsed parsing fails guess triage forum stackoverflow actually determine bug open new ticket fill information issue template", "d": "5/2016"}, {"body": "fix versions files state version", "d": "5/2016"}, {"body": "beruic source map file means uses version source map spec ie latest one fine unless talking sth else", "d": "5/2016"}, {"body": "good work guys mai timmy willison notifications githubcom wrote closed via receiving authored thread reply email directly view github", "d": "5/2016"}, {"body": "cdnjs slim files still header", "d": "5/2016"}, {"body": "beruic mean files nt remove republish files already published elsewhere think something like forcepush public repo github pretty disruptive many cases would even work cdns set long expiration dates cached files browsers proxies pull cache regardless whether file updated removed fix committed release process sure problem happen future got new release coming next couple days", "d": "5/2016"}, {"body": "hey anseki wanted confirm problem exist values browser calculates correct remove calculation proposed problem unless browser nt support", "d": "5/2016"}, {"body": "think native event object correct updated code jsfiddle least seem correct current firefox chrome ie", "d": "5/2016"}, {"body": "awesome thanks confirmation", "d": "5/2016"}, {"body": "thank care smiley sorry english poor send pr later way think tests contain cases element positioned affected element positioned relative ie element nt result value include anyway try write tests", "d": "5/2016"}, {"body": "issue nt seem actionable seems requires research move roadmap", "d": "5/2016"}, {"body": "move roadmap done", "d": "5/2016"}, {"body": "labelling behavior change since potential throw unexpected errors case event delivered page lifecycle pr looks good think land objections lands add note upgrade guide", "d": "5/2016"}, {"body": "behavior change seems bit much since affects invalid input definitely favor including fix", "d": "5/2016"}, {"body": "thought cry discussion specifically pointed wanted know cases start throw nt one better safe sorry add note upgrade guide nobody complaining changed behavior nt tell", "d": "5/2016"}, {"body": "definitely", "d": "5/2016"}, {"body": "fixed", "d": "5/2016"}, {"body": "thank fixing", "d": "5/2016"}, {"body": "got external report well far understand regression added needs review label might want", "d": "5/2016"}, {"body": "fixed", "d": "5/2016"}, {"body": "sorry guys missed boat yes happily accept pr", "d": "5/2016"}, {"body": "mmh installed still got error adding external folder etc worked", "d": "5/2016"}, {"body": "appear fixed getting error w reference directory named exists", "d": "5/2016"}, {"body": "yeah fixed correctly everything extras array copied directly final directory nt preserve directory structure making folder appear without necessary directory wrapper reopening amp marking blocker", "d": "5/2016"}, {"body": "good way testing final structure ok", "d": "5/2016"}, {"body": "thought working maybe local copy wrong tough make automated test going jqueryrelease working nt touch", "d": "5/2016"}, {"body": "problem copied content sizzledist externalzizzledist compiled ok", "d": "5/2016"}, {"body": "latest uncompressed jquery worked webpack adding last line", "d": "5/2016"}, {"body": "problem error jquerysrcselectorsizzlejs module found error resolve file directory externalsizzledistsizzle", "d": "5/2016"}, {"body": "fix next patch please use github reaction feature original post issue", "d": "5/2016"}, {"body": "probably nt best solution worked wanted minimal change without affect code dependencies changed inside around line width svg widthbasevalvalue svgwidth height svg heightbasevalvalue svgheight", "d": "5/2016"}, {"body": "moved roadmap", "d": "5/2016"}, {"body": "dom spec making increasing use event listener options passive late last year invokeonce last month delegation likely soon think get board trend adding final argument deprecating opening avenue could expressed though actually implementing would require significant amount complexity registering updating runallthethings handler", "d": "5/2016"}, {"body": "though actually implementing would require significant amount complexity registering updating runallthethings handler messy part major change looking way satisfy sooner jquery later need least separate per unique combination optionscapture point becomes easier one per jquery event especially land jbedard loweroverhead code likely change privatenotprivate internal data structure well known used dev tools report jquery handlers event", "d": "5/2016"}, {"body": "clear plugin mentioned already lets take advantage passive event listeners long always want events particular type particular element either passive nonpassive thanks dave agree looks like enough ensure people nt blocked reading jquery event customization support better understand interim clarify would happen code thinking pattern probably even better supported framework agnostic way perhaps need jqueryspecific plugin eg wicgeventlisteneroptions propose creating generic library fires events named implemented passive listeners could even go far wicgeventlisteneroptions library makes touch listeners page passive default actually given jquery push pointer events maybe listeners added jquery always passive jquery users required annotate special elements page exactly pointer events even short term could perhaps global option enable new touch nt block scrolling mode stepping stone full transition pointer events scottgonzalez wdyt describe use cases see get going think really need hear end developers using jquery trying get perf benefit passive touch listeners code cc tylerbrandt optimizely works cnn", "d": "5/2016"}, {"body": "using thirdparty library image carousel using jquery manage use native javascript inconsistent implementation create event listeners think agree ideal also gets messy listener need thing would play ability create namespace events like idea adding options argument seems like would closely resemble match native implementation enough information use case", "d": "5/2016"}, {"body": "would touchstartnopreventdefault play ability create namespace events multiple namespaces event asking thirdparty library would need include plugin add someone could write shim takes extra arg essentially thing matter api approach discussion regarding mixing event types still applies first one attach jquery event specific element defines whether nopreventdefault ca nt mix element", "d": "5/2016"}, {"body": "rbyers interim clarify would happen code document touchstartnopreventdefault handler document touchstart handler done order second handler would also ignore preventdefault since two handlers would multiplexed created first one done reverse order would effect", "d": "5/2016"}, {"body": "even short term could perhaps global option enable new touch nt block scrolling mode flag globally changes behavior generally becomes nightmare plugin developers ca nt tell behavior expect arschmitz jquery mobile calls originate expect indirect uses existence would problematic global flag", "d": "5/2016"}, {"body": "feel like position misconstrued scottgonzalez proposed interface adding passive listeners would observed options parameter would valuable even without passive support since better matches addeventlistener type callback options would willing tolerate observable effects depend upon registration order could reattach passive dispatchers upon nonpassive listener registration maybe automatically go passive event type employ solution must privilege first registration", "d": "5/2016"}, {"body": "scottgonzalez jquery mobile call response older versions current ones however working adopting hammerjs replace gesture events polyfills extent calls preventdefault prevent scrolling needed hammer use jquery longer wo nt issue used would really like see support added event listener options passive events general though jquery mobile always battled issues scrolling performance android devices would directly help cases problem writing maintaining plugin need dmethvin suggested use mobile need would really prefer see core", "d": "5/2016"}, {"body": "done involves major rewrite event system breaking changes way affect internals nt see happening least jquery knows occur looking ways satisfy need access passive event listeners via jquery sooner year would willing tolerate observable effects depend upon registration order though definitely happen correct full implementation native options like suggestion turns polyfill essentially assuming spec gets far enough nt get screwed shipping something changes later points longer delay delivering flag globally changes behavior generally becomes nightmare plugin developers ca nt tell behavior expect right already global behavior makes blocking default takes lines code like plugin make nonblocking always used people want caveat quick solution mentioned ca nt mix options eventelement combination think way complex specialeventhook code essentially defining new event needed ca nt tell discussion far whether needed current use cases", "d": "5/2016"}, {"body": "introduce new syntax events elem clicknamespace passive function hello", "d": "5/2016"}, {"body": "much opposed introduce new jqueryspecific syntax standardized behavior", "d": "5/2016"}, {"body": "agree try align spec much possible cutting corners browser apis clumsy", "d": "5/2016"}, {"body": "see point one alternative ground breaking changes", "d": "5/2016"}, {"body": "also future proof nonboolean options", "d": "5/2016"}, {"body": "see change made stable upgraded latest release time writing however still experiencing bug feel issue better explains bug simply asking hidden element getting scroll position returned would expect see jsfiddle replication using", "d": "5/2016"}, {"body": "billy fiddle using jquery switched behavior nothing changed also note according api docs explicitly state hidden elements supported input note jquery support getting offset coordinates hidden elements accounting borders margins padding set body element possible get coordinates elements set excluded rendering tree thus position undefined", "d": "5/2016"}, {"body": "patch going next jquery migrate detect fix cases still situations selector complex regexp fix seems handle cases reported past months", "d": "5/2016"}, {"body": "jquery migrate released fixes problem unquoted selectors cases reported", "d": "5/2016"}, {"body": "since became backcompatible recently longer possible suspect close", "d": "5/2016"}, {"body": "targeting might possible strong feelings keeping issue open", "d": "5/2016"}, {"body": "see also", "d": "5/2016"}, {"body": "issue nt entirely clear nt really things eg going close markelog replies concrete info reopen", "d": "5/2016"}, {"body": "apply special fixes events looking like nt test events least tests nt anything point ticket provide tests event specifically property", "d": "5/2016"}, {"body": "upgrade guide says need attach errors names use method need attach events names use method", "d": "5/2016"}, {"body": "zowers thanks report fixed find mistakes please report issue tracker jquery library upgrade guide written markdown", "d": "5/2016"}, {"body": "going happen need update upgrade guide otherwise think close ticket put roadmap good discussion", "d": "5/2016"}, {"body": "pushed onetime code change clear end update lands sizzle ticket closed update sizzle", "d": "5/2016"}]