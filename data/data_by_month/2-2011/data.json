[{"title": "rubylike accessors model", "body": "add ruby like accessors model class declare properties readablewritable get rid repetetive", "num": "251", "d": "2/2011"}, {"title": "qunit include messed", "body": "looks like last commit update qunit append replace see", "num": "250", "d": "2/2011"}, {"title": "backbonecontroller options", "body": "would possible store initial parameters sent constructor backbonecontroller much like works backboneview backbonemodel strange controllers method accept argument rest grabbing parameters", "num": "249", "d": "2/2011"}, {"title": "generally enable validation", "body": "need enable validation call think validation enabled default", "num": "247", "d": "2/2011"}, {"title": "previous attribute returns wrong previous attribute value", "body": "backbone underscore reproduce following code backbonemodelextend initialize function thisbind change foo function newfoo whatever b backbonemodelextend initialize function thisget bind change state function newstate log b astate changed aprevious state newstate javascript console new b new b aset state hello getting output cause problem set foo whatever call event handler seems lead loss information", "num": "246", "d": "2/2011"}, {"title": "contentwindow error line", "body": "hi line backbonejs thisiframe hide appendto body contentwindow error line error unable get value property contentwindow object null undefined", "num": "245", "d": "2/2011"}, {"title": "view events removed extend", "body": "extending view events defined original events get overwritten example onfooclick wo nt get triggered problem connected use extend mistaken perspectives implementing deep mergeextend general backbone", "num": "244", "d": "2/2011"}, {"title": "post data applicationxwwwformurlencoded mime type", "body": "notice backboneemulatejson true make request applicationxwwwformurlencoded mime type nt want serialize json model parameter like post data content share imgtype upload pic retcode styleid cause upload picture form computer post server thanks", "num": "243", "d": "2/2011"}, {"title": "url reversing", "body": "url parsing backbonehistory already construction urls still mostly string concatenation lead possible misprints sometimes hard determine url constructing especially upon url refactoring need find urls change simply hard propose solution adding method historycontroller selfdescriptive url name save misprints case url found get exception", "num": "242", "d": "2/2011"}, {"title": "make defaults hash attribute accept functions instead simple data types execute function creation new model", "body": "useful making default timestamp instance createdat new date something like", "num": "241", "d": "2/2011"}, {"title": "make private", "body": "unless misunderstand function always return false using public api perhaps function would best documented andor made private spent time confused issue read bb source thought thanks reading", "num": "240", "d": "2/2011"}, {"title": "improve error handling consistent arguments error handlers", "body": "error handling could improvement backbone arguments passed error callback consistent makes difficult determine inside error handler caused error also additional information passed user error success handlers would useful sorry long posting done lot valuable debugging wanted get writing nt lost also want describe scenarios detail modelsave called set run attributes passed set calls validate validate fails returns error object set calls optionserror model error object triggers error event model error object save options object scenario two different error handler signatures used initial validation succeeds modelsave wrapper error success handlers assigned original optionserror optionssuccess wrappers call original optionserror optionssuccess existed error wrapper triggers error event optionserror exist assuming sync fails error wrapper called either calls original save optionserror method triggers error event however error wrapper one parameter even though jquery ajax error callback receives three arguments jqxhr textstatus errorthrown jqxhr passed error wrapper passes model jqxhr enhanced save options back backbone user error handler would nice textstatus errorthrown also provided user error handler also note options passed error handler optionserror optionssuccess overwritten wrapper methods original method use callback reason expect might happen wrapped success calls modelset wrapped error could trigger error event initial validation succeeds modelsave sync successful wrapped success handler called takes new data returned server calls modelset set method turn calls validate validate fails set fails causes optionserror called error event triggered unfortunately jqxhr object provided wrapped success handler get passed modelset modelvalidate fails nt know jqxhr object pass error handler course point calling wrapped error handler original error handler could pose problems logic added wrapped error handler future see objects passed error handlers scenarios different makes difficult write error handlers want first foremost believe error callbacks receive consistent arguments certain arguments nt available null values would passed however since many possible arguments might available suggest combining single object perhaps something like although certainly might overkill another option jashkenas discussed documentcloud multiple error handlers could validationerror syncerror methods passed options save addition could sync error validate error events triggered approach may complicate things much might simpler passing massive object error handler expecting user write code handle every situation lastly would good also make sure success arguments consistent information user might need instance modelsave following wrapped success method created however jquery calls method success handler ajax passes three arguments would useful pass objects user onsuccess handler even better way also pass modelset modelvalidate fails passed error handler think everything discovered dealing error callbacks sorry write novel hopefully useful tauren", "num": "239", "d": "2/2011"}, {"title": "question use javascript framework backbone", "body": "hello read readme backbone understand backbone intention encapsule model behaviour provide full set functionalities like widgets effects etc need get features frameworks wondering use javascript framework backbone incompatibilities specifically wondering use mootools amp dojo", "num": "238", "d": "2/2011"}, {"title": "question use javascript framework backbone", "body": "hello read readme backbone understand backbone intention encapsule model behaviour provide full set functionalities like widgets effects etc need get features frameworks wondering use javascript framework backbone incompatibilities specifically wondering use mootools amp dojo", "num": "237", "d": "2/2011"}, {"title": "question modelsave calls error callback function successful update", "body": "hi using modelsave method pass attributes hash options hash contains success function error function model response callbacks works fine model new meaning post success function gets called success error calling error callback function however call modelsave second time time backbone uses put method save server successful calls error callback function instead success callback response passed error method responsetext ok puts server side rails send nocontent back client working designed something wrong hints greatly appreciated thanks babu", "num": "236", "d": "2/2011"}, {"title": "collectionsave", "body": "great collections method would issue single request modified objects collection", "num": "235", "d": "2/2011"}, {"title": "possible problem jquery changes ajax", "body": "problem geting along model using", "num": "234", "d": "2/2011"}, {"title": "modelvalidate validate based results xhr request", "body": "like add serverside step model validation see way possible model validated based return value validate return value validation fails return value succeeds nt asynchronous nonblocking way delay return validate xhr request completed instance assume account signup form gives live feedback username available type username ui updated show username field valid invalid onblur handler would set new value model whenever username changed modelvalidate would local sanity checks validate username server via xhr request nonworking example validate would need provide callback sort xhr step could part validation perhaps something like callback would given return value value returned validation succeeded parameters would passed callback obviously might mean significant changes modelperformvalidation logic would need support getting validation response via callback might also affect places codebase set save would nt valuable feature better way accomplish", "num": "233", "d": "2/2011"}, {"title": "backbone cleanup prevent memory leaks", "body": "example view removed dom event handlers unbound", "num": "231", "d": "2/2011"}, {"title": "seo backbonejs", "body": "since backbonejs applications generate pages dynamically seo optimization web crawlers execute javascript code could see empty pages without content", "num": "230", "d": "2/2011"}, {"title": "event bubbling", "body": "want event bubbling mechanism backboneevent often create hierarchy views delete event child parent also want centralize change handling models owner collection permodel closure somewhat wasteful cases event bubbling help views introduce parent optional property bubbling collections think collection parent holding models", "num": "229", "d": "2/2011"}, {"title": "backbonehistory working", "body": "experiencing weird bug backbone history create controller start history module click link ex examplecom home hash value change url second glitch appear hash value reset event fired asked glitch hash reset cause back button fail", "num": "228", "d": "2/2011"}, {"title": "update put send delta", "body": "understanding upon update whole updated object sent payload avoid currently something like every changed event better way handle", "num": "227", "d": "2/2011"}, {"title": "updating models based nested json objects", "body": "consider case say want change cat without setting whole foo object hacking done acheive current version think something like following would nt hard implement could considrered", "num": "226", "d": "2/2011"}, {"title": "documentation enhancements", "body": "general would nice backbone site would format links properly underline hover currently links spotted hovering everything mouse collectionadd says collection needs model attribute work raw data example works without one docs backbonemodelextend mention subclassing nothing actually add example shows submodelextend usage", "num": "224", "d": "2/2011"}, {"title": "broken link site", "body": "thought let know link site broken correct link links actual project", "num": "223", "d": "2/2011"}, {"title": "collectioncreate validating appropriately", "body": "according documentation using create method collection instantiate instance model save model add model set created practice noticing validate method model called item created remotely investigation within backbone shows model instantiated sent server prior validation expected behavior would validation would occur sent server possibly letting model handle server interaction documentation convenience create new instance model within collection equivalent instantiating model hash attributes saving model server adding model set successfully created returns model false validation error prevented model created order work set model property collection backbonejs inline comment near line create new instance model collection model created server added collection", "num": "222", "d": "2/2011"}, {"title": "allow prefix controller routeshistory general", "body": "far tell backbone nt provide way prefix routes urls look like like make sure prepend prefix routes calls way could baked backbone", "num": "220", "d": "2/2011"}, {"title": "unwanted string substitutions occur saving model default backbonesync implementation", "body": "using jquery substring contained one model attributes substring replaced numbers vary respectively string substitution occurs ajax call called default backbonesync implementation specifically occurs line using jquery substring replaced similar affected version jquery nt notice bug upgraded see bug action go quietwritecom currently use jquery start new writing type body click save button nothing appear happen caused js error refresh page see substitution occurred", "num": "219", "d": "2/2011"}, {"title": "add url attributes loadingfinished events", "body": "hi scanned existing tickets found seem along lines like implemented thought add use case cases managed hack functionality would great correct way handling first eventscallbacks collectionsmodels fetching content server simply broadcast loadingfinished callback go fetch content sever facilitate ui feedback indicate ajax events happening secondly way storing hash inside modelscollections translated url attributes making fetch server moment overwritten url method actually quite happy would great hash gettersetter eg collectionseturlattributes perpage page set would translated seturlattributes could also callback event associated sam", "num": "218", "d": "2/2011"}, {"title": "painless way sync ror server", "body": "trying use backbone ror project found small problem json format let say post model following attributes title string body text standart data format use ror required something like post title title body body insted bb gives title title body body would like ask painless way extend model let say namespace like modelname defaults attributes", "num": "217", "d": "2/2011"}, {"title": "routes wait controller fully initialised run", "body": "ran problem app currently using backbonejs basically load data initialize function controller routes rely data loaded maybe design flaw code please point example showing address everything works fine go page wait data load trigger route trigger route data loaded example someone bookmarks page fragment problems page worked around problem using code see gist simplified actual code page wonder approach could useful built backbone routes would automatically wait initialize complete initial approach incorrect could avoided problem somewhere else", "num": "214", "d": "2/2011"}, {"title": "mailing list", "body": "mailing list used discussion best practices general advice general consensus use githubs issues system discussion", "num": "213", "d": "2/2011"}, {"title": "collectionfetch broken", "body": "hi started looking backbonejs today realized rails adds root node serializing model json rails able get collectionfetch work see request runs return json able parse length always ca nt iterate objects investigate problem downloaded tested rails backbonejs tutorial wanted modify index route use collectionfetch instead manually iterating json data creating backbone models changed controllersdocumentsjs index function var documents backbonecollectionextend model document url documents var documents new documents documentsfetch consolelog documents consolelog documentslength consolelog documentsat new appviewsindex documents documents using backbonecollection correctly spent time reading various places gather work documentslength returns even though click objectlink firebug says length see models attribute populated model straight forward var document backbonemodelextend url function var base documents thisisnew return base return base basecharat baselength thisid json returned body testing createdat id title another test body testing createdat id title test thoughts thinking trying get work collection require url property running fetch even given model turn url defined anyway avoid use getset parameters looking way expose json attributes use models pojo ie modelname instead modelget name like able working json jquery regards daniel", "num": "212", "d": "2/2011"}, {"title": "unset fires change event even nt attribute object", "body": "successive calls unset attribute model without setting atrribute value calls fire change events unset call even though nothing changed makes sense unset would follow set behavior triggering change calls fired previous value attribute differs current one", "num": "209", "d": "2/2011"}, {"title": "question behavior selfpropagating extend function", "body": "hi trying make sense extend internal inherits function see possible another level inheritance model layer nt quite get expected behavior class methods backbonemodelextend classmethod function consolelog classmethod invoked aclassmethod classmethod invoked b aextend question nt bclassmethod work bclassmethod typeerror result expression bclassmethod undefined function misunderstanding extend supposed work propagated backbonemodel model thanks greger", "num": "208", "d": "2/2011"}, {"title": "add indexjs", "body": "using backbone serverside nodejs context would great", "num": "207", "d": "2/2011"}, {"body": "updated whenever point release backbonejs", "d": "2/2011"}, {"body": "connected pull request", "d": "2/2011"}, {"body": "already setting default function returns hash attributes", "d": "2/2011"}, {"body": "thorough analysis personally making server give rpcish responses form vs allows directly patch chrome model ie use vanilla update attributes response allows listen display errors would vladimir", "d": "2/2011"}, {"body": "vladimir thanks feedback approach sounds intriguing although seems unrestful degree clear exactly returning backbonemodel structure model attribute contains real model information perhaps could show full json sample happens server simply respond result since serverside validations failed want display error message next form field seems would need get back array unless something missing solution", "d": "2/2011"}, {"body": "hi nerian got intention correct backbone currently light dependency either jquery zeptojs want use mootools dojo legwork port jquery pieces nt hard old version mootools adapter available", "d": "2/2011"}, {"body": "nice seems quite simple run tests", "d": "2/2011"}, {"body": "open testtesthtml browser page looks like", "d": "2/2011"}, {"body": "babu guessing error handler running model validate failing understanding following steps happen modelsave modelset executed attributes passed save instance modelsave name john run modelset name john modelvalidate executed within modelset validate fails set fails save fails error handler passed save would called without ajax sync call made assuming model validates set sync called save get successful response response passed set update model new data server set call validate new data validate fails set fails causes save fail error handler get called case betting validate fails step backbone expecting updated data response nt get attempts update model empty data validate method fails causes save fail call error method may need return model json put api make work alternatively could add parse method model would massage response something validate nt tested might worth trying create new issue regarding similar topic might want check", "d": "2/2011"}, {"body": "hi tauren thanks response nt validate method model object however indicated may put method returning empty response tried return model json put method worked thanks rails using respondwith model update controller method nt return anything response body status changed render json gt modeltojson returns json backbone working expected thanks explanation babu", "d": "2/2011"}, {"body": "make custom validate model perform additional validation hands made whole backbone async given jquery introduced promises much useful way deal async stuff promises calls normalized would nt matter whether sync async", "d": "2/2011"}, {"body": "thanks custom validate model yet far tell way add async process without async support baked backbone using jquery deferredspromises well think backbone needs async support well uses jquery promises happens zepto users personally think async support critical understanding suggestion different way make custom validate would allow", "d": "2/2011"}, {"body": "think general thought seo matters web pages applications application marketing web page seo", "d": "2/2011"}, {"body": "guess link could help", "d": "2/2011"}, {"body": "replicated issue sample page demonstrates problem gist", "d": "2/2011"}, {"body": "came across issue one projects believe caused permission denied reference thisiframelocation controllerrouting sections backbone taking thisiframelocation allows hashchange events work correctly lose history support looking source ben alman jquery hashchange plugin think fix would set documentdomain iframe didnt get time test make fix project working history support wasnt essential", "d": "2/2011"}, {"body": "quick debug seems iframe location getting set first time window hash changes iframe window hash sync next time two hash locations polled iframe hash still unset backbone seeing back button invocation resetting window hash back value iframe hash ie blank historyjs might good place find fix starting line iframe opened closed soon created order add initial history state append iframe documentbodyappendchild iframe create initial history entry iframecontentwindowdocumentopen iframecontentwindowdocumentclose backbonehistory subsequent hash changes seem work still need save location opening closing iframe appropriate points savelocation logic little coupled noniframe stuff need teasing apart probably need sort history support project currently working try get fix tests next couple weeks", "d": "2/2011"}, {"body": "thanks tips followed three suggestions", "d": "2/2011"}, {"body": "great thanks link hunting", "d": "2/2011"}, {"body": "thanks fixed link", "d": "2/2011"}, {"body": "confirm behavior may similar problem mentioned", "d": "2/2011"}, {"body": "similar issue describing concerns validate called nt called sent server current workaround instantiate new instance model apply new attributes using modelsave success callback calling modelset response adding model collection", "d": "2/2011"}, {"body": "believe ticket duplicate anyway rails control behavior toplevel node json setting activerecord baseincluderootinjson false see", "d": "2/2011"}, {"body": "looking solutions first solutions add small helper ror project like indicated another way use create method instead create like showed last like use small extension backbonejs extension take anybody knows better solutions pls give note", "d": "2/2011"}, {"body": "look bootstrapping data since need right away example", "d": "2/2011"}, {"body": "case data json stream makes sense separate request html cached aggressively data nt change often use similar approach bootstrapping example load data initializing controller starting history thanks hint", "d": "2/2011"}, {"body": "like stick github issues time poor experiences past google groups spam control etc feel free ask questions instant discussion ask irc", "d": "2/2011"}, {"body": "using setting rails change behavior without issue", "d": "2/2011"}, {"body": "found setting investigating see json posted root nodes original code working ca nt seem get working collectionfetch", "d": "2/2011"}, {"body": "sure exactly going wrong still giving trouble feel free drop irc help debugging putting example somewhere public online second question ca nt expose json attributes directly access prefer", "d": "2/2011"}, {"body": "thanks note taken stab fixing issue test", "d": "2/2011"}, {"body": "looks like right fix thanks", "d": "2/2011"}, {"body": "javascript prototypes nt support inheritance classlevel properties instancelevel properties expected behavior could start manually copying class properties fragile thing calling way go using instance method nt care using different object entirely", "d": "2/2011"}, {"body": "yeah eventually understood nt work expected solved using class helper augment works similar extend return new constructor function introduces new prototype though linked original override methods old prototype classconstructor methods appended thogh little hacky works us rack middleware automatically generates backbonemodels activerecord classes support validators wanted able extend classes application code function augment extra methods still allowing us call original methods need overrides", "d": "2/2011"}, {"body": "sure thing added", "d": "2/2011"}, {"body": "hmmm nt add remove together models change length stays think wontfix unless got really compelling use case sleeve add remove ca nt handle", "d": "2/2011"}, {"body": "right keep looking previous fix sent nt working way fires working development version differs lot head know bad assumption header files said case take empty object nt prevent either version", "d": "2/2011"}, {"body": "feel spending much time sure wo nt last point replacing line actually prevent happening problem called calls internally calls forced least times come definitive solution make pull request", "d": "2/2011"}, {"body": "krisjordan submitted pull request bug validations used merged", "d": "2/2011"}, {"body": "great discussion post hn article linking consensus relying current javascript bugs lack thereof nt great way secure json parserbreaking prefixes betteryet requiring xhr headers way go", "d": "2/2011"}, {"body": "looks like header solution nt secure least according latest rails security fix impact certain combinations browser plugins http redirects used trick user browser making crossdomain requests include arbitrary http headers specified attacker attacker utilise spoof ajax api requests bypass built csrf protection successfully attack application users running affected release upgrade apply patches immediately guessing referring various types http request splitting", "d": "2/2011"}, {"body": "sure case could link quote closest thing found glancing commit quickly quite sure purpose changes cve references nt public yet help either", "d": "2/2011"}, {"body": "thanks idea mind clarifying use case exactly modeling helpful client get significantly sync server sure another user nt changed server state meantime", "d": "2/2011"}, {"body": "afraid events arbitrary strings particular specified format addition nt want get habit supporting either multiple singular arguments every function closing one", "d": "2/2011"}, {"body": "actually use modified version flash uploader uploadify order get multiple document uploads browsers nt much backbone except server response creates new document model polls updates document ready server responds complete attributes document model view updates polling stops", "d": "2/2011"}, {"body": "one projects uploading backoffice backoffice targeting modern browsers use xhr upload formdata implemented jquery ajax transport handle xhr uploads directly set model attribute file object way working default backbone sync ps juste info server side use rails carierwave", "d": "2/2011"}, {"body": "thought wanted moment realised binds definition view state app point eg object must instantiated view defined temporal coupling never nice especially order classes defined personally write simple wrapper function view calls desired object method object passed view instantiation", "d": "2/2011"}, {"body": "code lets specify menu system app completely client side thing written coffeescript lets say things like menuinfo optmenu pages ioids id ioidbuttonsitecleaner text sitecleaner events click gt ioidsforsitecleanertrue displayioids false id ioidbuttonreplacer text replacer events click gt ioidsforsitecleanerfalse displayioids false still little hacky atm moreso app menu system p needs improvement nonetheless menu created ie menuopt ioids call delegateevents updated events gets information like think perhaps worthwhile feature even necessarily encouraged", "d": "2/2011"}, {"body": "thanks idea calling definitely allow override previouslydefined routes patched backbone give spin let know think", "d": "2/2011"}, {"body": "update looks perfect local version backbone patched like time encountered issues", "d": "2/2011"}, {"body": "thanks note patched throw error attempt start history one time", "d": "2/2011"}, {"body": "link already fixed master deployed shortly thanks note", "d": "2/2011"}, {"body": "documentation reflects recent release next version goes updated match api", "d": "2/2011"}, {"body": "afraid actually one line backbonejs added provide nice coffeescript support property nt intended used manually whereas javascript write something like coffeescript write", "d": "2/2011"}, {"body": "ok thanks another reason give coffeescript try", "d": "2/2011"}, {"body": "also come across couple personal use cases would like able insert callbacks save method modified model save function trigger events save request sent save successful response received watched view allow indicate model currently saved juggy done also using save event record copy attributes returned server check send attributes updated comes saving model use cases like seems like backbone could benefit set eventscallbacks similar provided rails models would allow model hook part save process would flexible bindtrigger system would also easily allow multiple callbacks would also nice callbacks called save could cancel save way rails however looks complicated add current architecture nt essential make useful features also would like say big thank backbone made development app much easier really fun work great job", "d": "2/2011"}, {"body": "yes share options object going share callbacks nt think special behavior backbone handling differently", "d": "2/2011"}, {"body": "case closed", "d": "2/2011"}, {"body": "nathanstitt wrote something similar solution belive basically except shortcut sync method prevent single sub models sync themself server json representation created jackson straight java classes also single sub elementmodels list write setupchild setupchild function parent type name var result new type parentget name resultname name resultparent parent parentbind change name function resultset parentget name example domain setup would look something like plan backbonemodelextend url function return thisget baseurl planhtml id thisget id initialize function bindall extsetupchildlist pagelist pages extsetupchild page singlepage extsetupchild metadata metadata look link code json string like could write code like simulate ajax call server backbonesync function method model success error success preloadjson tried pull isolated working code codebase pasted someone intressted", "d": "2/2011"}, {"body": "adding pushstate support backbone app like certainly solution everybody fits needs pretty well let know need help", "d": "2/2011"}, {"body": "want add vote getting pushstate support built backbone also like see better explanation currently dismissed mentioned briefly docs least make optional us want fan hashbased state would nt use", "d": "2/2011"}, {"body": "integrating tackle bugsincompatibilities browsers degrades hashes browsers looks like good stepping stone new history api", "d": "2/2011"}, {"body": "nice idea afraid agree tauren sticking light dependency approach time framework adapters rarely compatible example probably nt behave way specific patch enables support another framework nt take many lines code ala zepto integration feel free send patch otherwise maintaining fork good idea really nt difficult upstream patches apply cleanly", "d": "2/2011"}, {"body": "documentation nt demonstrate custom overridden version nt need override cases nt method", "d": "2/2011"}, {"body": "duplicate addressed minute", "d": "2/2011"}, {"body": "issue raised several times taken initial stab non attribute support override permodel basis globally models note still proxied property models keep public api consistent able true name", "d": "2/2011"}, {"body": "cool awesome actually transformations example mongodb objectids ids unwieldy work urls etc convert use model id able set id field directly objectid really appropriate however certain cases ids objectids helpful thank", "d": "2/2011"}, {"body": "hi jeremy still plan putting want martin", "d": "2/2011"}, {"body": "putting solution documentation would really nice awesome framework way", "d": "2/2011"}, {"body": "someone using backbone rails app standard style wants put together paragraph detailing best way get things integrated glad drop faq homepage", "d": "2/2011"}, {"body": "news issue also tried use validate function ca nt really get head around get called twice somehow understandably explained jashkenas still ca nt see good reason behavior besides keep good work backbone really enjoy working", "d": "2/2011"}, {"body": "think overriding tojson server side suggested zmbmartin way go guess something like def tojson options supermerge id gt id end mongoid guess method mongoid document module", "d": "2/2011"}, {"body": "issue raised several times taken initial stab non attribute support override permodel basis globally models", "d": "2/2011"}, {"body": "would one go sorting one field ascending another descending simple cases agree sortby style convenient somewhat limited perhaps could made switch sort mechanisms automatically based arity comparator function use standard javascript sort api passed comparator function expects arguments otherwise use sortby maybe could implemented underscore make transparent backbone", "d": "2/2011"}]