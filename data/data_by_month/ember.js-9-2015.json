[{"title": "component scope component block incorrect", "body": "believe scoping actions curly components incorrect canary canary jsbin illustrates component yielded component block scope changed canary beta release cc wycats chancancode", "num": "12409", "d": "9/2015"}, {"title": "node version info date emberjscom getting starting page", "body": "emberjs getting starting page older version node recommended compared version recommended embercli getting start ed page", "num": "12406", "d": "9/2015"}, {"title": "emberisempty returns false passing empty string", "body": "hi using ember emberisempty returning false passing empty string", "num": "12405", "d": "9/2015"}, {"title": "select component nightmare idea", "body": "sourcecode ugly ununderstandably complicated component complicated lot parameters content selection labelpathwhat component unusable want use helpers label value example need translations usage approach code selectcomponent optioncomponent lines also usage woud much dynamic compared existing solution selectcomponentjs import embercomponent ember export default embercomponentextend selected null changed function event thisset selected eventtargetvalue init function thissuper arguments thison change thischanged selectcomponentemblem say want create pr", "num": "12403", "d": "9/2015"}, {"title": "error attempting register unknown factory", "body": "using embercli generated application adapter serializer edited adapter serializer extend jsonapiadapter jsonapiserializer respectively run generated unit test get following error looks like failure happening moduleformodel step even first line code actual test executed environment reproduce problem clone app ember new cd ember g adapter application ember g serializer application gt edit appadaptersapplicationjs extends dsjsonapiadapter like import ds emberdata export default dsjsonapiadapterextend gt edit appserializersapplicationjs extends dsjsonapiserializer like import ds emberdata export default dsjsonapiserializerextend browser navigate see please advise thanks advance", "num": "12402", "d": "9/2015"}, {"title": "explicit array index syntax nt work htmlbars loops", "body": "would expect following twiddle would printed times fact worked recent version ember think could wrong", "num": "12400", "d": "9/2015"}, {"title": "set computed property component outside inconsistent behavior", "body": "basic idea try pass component property handled inside component computed property jsfiddle example shows realworld application approach list items component items selected header component checkbox selectunselect items communicate controller boolean property worked ember ember least behavior changed select items unselect one items get unselected ember ember correct expected behavior previous behavior convenient point view workaround get behavior newer versions ember", "num": "12385", "d": "9/2015"}, {"title": "embercomputedfilterby embercomputednotempty breaks use returned value observes bind ui", "body": "summary object property value hasvalue computed property calculated value object b list objects computed properties based hasvalue using embercomputedfilterby notempty make change objects hasvalue true first time make change b anyhavevalue property set correctly observer function also watching anyhavevalue observer function calls get anyhavevalue second time change value hasvalue still true b anyhavevalue becomes false still true removing thisget anyhavevalue observes function makes problem go away though nt help app bind ui property need able evaluated dependencies change difficult explain purely words code reproduces var item emberobjectextend value hasvalue embercomputedgte value var itemlist emberobjectextend items itemswithvalue embercomputedfilterby items hasvalue true anyhavevalue embercomputednotempty itemswithvalue showstate function comment next line things start work properly consolelog anyhavevalue thisget anyhavevalue observes anyhavevalue var row itemlistcreate rowget items pushobject itemcreate consolelog rowget anyhavevalue false none rowget items set value consolelog rowget anyhavevalue true rowget items set value consolelog rowget anyhavevalue still true consolelog line observes function shows incorrectly false rowget items set value consolelog rowget anyhavevalue still true remains broken note original complex code app worked properly ember upgrading ember app started failing investigation bug reduces code like", "num": "12380", "d": "9/2015"}, {"title": "feature request allow pass computed property emberon", "body": "hi know new syntax firing observer certain event actually workaround issue cp encountered situation would like pass intuitively wish would work cp compued important part think nt cause property computed nt logs use observer another property b computed property referenced somewhere else template code simple twiddle", "num": "12379", "d": "9/2015"}, {"title": "updatedat createdat returns undefined", "body": "ember app simple model route data returned server json api format go path returns value returns protected thanks", "num": "12376", "d": "9/2015"}, {"title": "icajax async testing", "body": "hi got simple seeming headscratcher simple ajax form component like js import ember ember import ajax icajax export default embercomponentextend tagname form snip submit e epreventdefault snip acceptance test like js test surfaces errors function assert visit test let component andthen function component find myform missing something creating promise nt seem set meaning nt wait form submit return thanks", "num": "12374", "d": "9/2015"}, {"title": "emberrunonce running several times method anonymous function", "body": "good jsfiddles pretty clear behaviour confusing nt fit docs tested ember note arr foreach loop impact created show clear example want use function method want nest inside without writing still another cp emberrunnext method available tend use everywhere app different kind confusing behavior storefilter remember well case use function method property string make work", "num": "12369", "d": "9/2015"}, {"title": "nested routes ca nt find top level loading substates", "body": "according loading substate guide define apptemplatesloadinghbs slow loading route able find however happening nested routes nested routes seem look far route initiated transition consider example three routes contains asynchronous model hook foo foobar router terms foobar foobarbaz foobarbaz transitioning index foo triggers loading substate transitioning index foobar triggers loading transitioning index foobarbaz triggers loading transitioning foo foobar trigger loading transitioning foo foobarbaz trigger loading transitioning foobar foobarbaz trigger loading enabling resolver logging shows search loading substate stops source route example going foo foobar stops search fooloading going foobar foobarbaz stops search foobarloading based substate guide would expect entire route hierarchy traversed top level loading template found otherwise would need put loading templates every level route hierarchy", "num": "12367", "d": "9/2015"}, {"title": "broccolisourcemapconcat", "body": "pulling latest nomboming causes build break error seems bug created issue project workaround remove latest version install compatible version nice screenshot", "num": "12366", "d": "9/2015"}, {"title": "broccolisourcemapconcat", "body": "pulling latest nomboming causes build break error seems bug created issue project workaround remove latest version install compatible version", "num": "12365", "d": "9/2015"}, {"title": "error calling method npobject firefox", "body": "monitoring system application reporting occasional errors method error message specific firefox happens browser happens sporadically users unfortunately nt able replicate however stack trace figure comes ie line file firefox exposing window objects interface assuming including even sure bug emberjs firefox given little information bug sure much issue worth thought post anyway case someone else encountered similar issues knows", "num": "12364", "d": "9/2015"}, {"title": "ca nt extend linkcomponent", "body": "issue similar except solution provided results error understand extending possible way make params available", "num": "12363", "d": "9/2015"}, {"title": "promise proxy mixin exceptions catchable", "body": "relates issue proxied fail handler nt called exception rethrown promiseproxymixin nt caught application causing error handling acceptance tests fail promisearray experiencing issue linked related issue rethrown exceptions promiseproxymixin catchable application level thrown error reads uncaught return type console jsfiddle example", "num": "12361", "d": "9/2015"}, {"title": "docs unclear usecases", "body": "docs properties nt clear never used terminal used terminal see", "num": "12360", "d": "9/2015"}, {"title": "results dynamically set null", "body": "got template correctly renders change dynamically renders demo thx alexspeller", "num": "12358", "d": "9/2015"}, {"title": "properties leaked components", "body": "jsbin example see description using component context template component rather context adjacent know deprecated unable find correct way outside example several components share surrounding template example heavily simplified like dry usage properties passed template across components follow pattern would great could instead", "num": "12357", "d": "9/2015"}, {"title": "throws assertion failed calling set destroyed object", "body": "documentation errortolerant form emberset blow part chain undefined null destroyed open console see assertion error", "num": "12356", "d": "9/2015"}, {"title": "objectproxy private mean exactly", "body": "docs see objectproxy marked private use daytoday return route async paint resolve update template private mention keep people nt library authors thisshould throw dep warning kind using ember beta nt see warnings errors using arrayproxy", "num": "12355", "d": "9/2015"}, {"title": "bodyparser contenttype applicationvndapijson", "body": "appears needs bodyparser middleware read reqbody bodyparser like json api media type applicationvndapijson content type generated jsonapiadapter required json api spec post request contenttype applicationvndapijson reqbody empty without bodyparser reqbody undefined seems like bug please advise", "num": "12352", "d": "9/2015"}, {"title": "routetransitionto working queryparams", "body": "ca nt seem make route transition addition queryparams example simply fill import ember ember export default emberrouteextend aftermodel model transition transitionqueryparamsfooparam return thistransitionto queryparams fooparam bar internal route transitions reported follows transition clearly attempted aftermodel hook never completes initially thought issue route parameters nested routes eventually got pretty simple test case shows feature working get results whether use beforemodel aftermodel", "num": "12349", "d": "9/2015"}, {"title": "actions caught item controller", "body": "may discovered another bug closely related jsbins contain something like ember action caught item controller loop one would expect ember action bypasses item controller goes directly route controller unless behavior deprecated think may regression working broken filed separate issue seems likely two separate causes since introduced different versions feel free close duplicate need", "num": "12347", "d": "9/2015"}, {"title": "provide documentation protecting ember apps xss attacks bound style attributes", "body": "working deal xss vulnerabilities brought attention ember bound styles cause warnings say bound attributes need properly escaped multiple issues listed remove warning could find lot information ember guides related protecting actual app started escaping css attributes could never tell actually successful lot resources showing css vulnerabilities never able get execute javascript resources showing xss attacks happen style attributes created jsbin someone theoretically access computed style property never able get javascript execute warning something theoretical vulnerability protecting app theoretical attack something ca nt reproduce using modern browser protection old browsers something wrong reproducing attack would really like would example possible xss attack could look like ember proper escaping prevented let know taking discussion another site stack overflow thanks", "num": "12346", "d": "9/2015"}, {"title": "new logo", "body": "sorry say way ember logo sucks nt inspire confidence imho think replace something represents ember really even blueprint eiffel tower image main page better job actual logo", "num": "12343", "d": "9/2015"}, {"title": "actions broken using item controller", "body": "user stackoverflow discovered ember introduced bug item controllers far tell two jsbins code uses item controller first action caught controller everything works fine second action goes unhandled causing error thrown gist code tested seems still", "num": "12340", "d": "9/2015"}, {"title": "doc beta registry container reform", "body": "land two weeks following docs lacking x initializer docsguides must updated accept argument x instance initializer docsguides must updated accept argument x guides must audited emberjsguides x requires deprecation guide entries relevant items main guidance existing today blog post beta also links rfcs prs please tag prs", "num": "12336", "d": "9/2015"}, {"title": "way route based subdomain", "body": "example helpdomaincom routes help route path", "num": "12335", "d": "9/2015"}, {"title": "bootstrapselect", "body": "ember version emberarrayfilter line bootstapselect calls method host object nt define host objects causes error know nt supported chance guys add check object method series", "num": "12333", "d": "9/2015"}, {"title": "public methods private object embermap", "body": "wanting call keys values map seems pretty innocuous get support public keys values methods rather needing inspect map object keys", "num": "12332", "d": "9/2015"}, {"title": "observing array using working", "body": "reproduced", "num": "12329", "d": "9/2015"}, {"title": "observing nested objects properties arrayproxy fails using works explicit index", "body": "observing nested objects properties arrayproxy fails using works explicit index like arrayproxy fires correctly property changes using concrete index content nt using content neither using ember version see demo jsbin open dev tools console toggle checkbox clicking following logged issue nt logged using observing objects properties nt work", "num": "12328", "d": "9/2015"}, {"title": "broken childviews support", "body": "property trigger observers new views added code implemented workaround redefining component note difference ember implementation usage instead", "num": "12327", "d": "9/2015"}, {"title": "component documentation misses lifecyclehooks", "body": "embercomponent currently documents following events see didinsertelement willclearrender willdestroyelement willinsertelement stated events currently undocumented didupdateattrs willupdate didupdate didreceiveattrs didrender", "num": "12326", "d": "9/2015"}, {"title": "issue complex righttoleft language", "body": "found emberjs cute tried demo emberjscom home page name want learn ember typed text persian text english gets reverse name \u0627\u06cc\u0644\u062f\u0631\u0645\u06cc name \u0627\u06cc\u0644\u062f\u0631\u0645\u06cc want learn ember name ilderemi name imeredli want learn ember", "num": "12324", "d": "9/2015"}, {"title": "embercollectionview looses controller binding rendering child view", "body": "put example behavior basically problem collectionview initially rendered bound controller however child view added collection collectionview childview lose controller binding looks like recent regression release display behavior suspect issue introduced pr", "num": "12322", "d": "9/2015"}, {"title": "deprecate embermerge favor objectassign", "body": "embermerge similar purpose objectassign think good idea deprecate createuse polyfill opened issue since sure ember policy polyfills differences embermerge merge contents two objects together first object objectassign copy values enumerable properties one source objects target object plan deprecate embermerge createadd polyfill objectassign update ember code base suggestionsopinions thanks", "num": "12320", "d": "9/2015"}, {"title": "docs dsrestserializer normalize normalizesave normalizeresponse etc", "body": "suspect methods serializers commonly used given change pre ed finding solid examples hard new users specifically docs methods address difference method universal save responses provide example fixing common json responses without root key different id key common andor populating model fields save response show populate model fields response empty outgoing save eg rendered text clarify requirements output matter root key single object pluralized root key need pluralized array response docs show nonplural vs plural keys nt matter pluralize time relative newcomer discoverable trialanderror nt ideal", "num": "12319", "d": "9/2015"}, {"title": "inner component action sent wormhole component instead outer component", "body": "use modal dialogs app outer component inner component inside wormhole inner component sends action action used fired outer component since pr action fired wormhole causes error note error inner component wormhole defined outer component template action works fine componentwormhole controller template fiddle reproduces issue changing ember dependency fixes issue", "num": "12317", "d": "9/2015"}, {"title": "bump morphrange better error messages", "body": "pending gives better error message something attempts bind function worst throw best throw", "num": "12316", "d": "9/2015"}, {"title": "query params maping different controllers", "body": "following structure reports controller buyer controller app transition reports reportsbuyer receive ember v version node npm os linux", "num": "12308", "d": "9/2015"}, {"title": "checkboxes checked value interaction", "body": "twiddle replication click control checkbox control checkbox still checked even property false unclicked checkbox copy control checkbox unchecks correctly issue binding value seems overwritten mutation property step see control checkbox unchecks property set rechecks point ember guess default helper property still trying set use case want create checkboxes check read checkedness helper property fire action without setting checked", "num": "12307", "d": "9/2015"}, {"title": "makedictionary could faster", "body": "always", "num": "12304", "d": "9/2015"}, {"title": "canary link component longer binds href", "body": "working bisect component nt appear trigger computed properties fired hook consequence property bound component broken commit prior linkto cleanup work landing known work base fork started cleanup", "num": "12302", "d": "9/2015"}, {"title": "classnamebindings updated", "body": "text nt change canary text becomes green underlined timeout may related previous report sure", "num": "12300", "d": "9/2015"}, {"title": "ember isarray returns false array proxy", "body": "returns false ember greater noticed one change replacing isarray function", "num": "12298", "d": "9/2015"}, {"title": "currentwhensplit function", "body": "upgrading seeing issue using argument helper resulting error twiddle demonstrates problem seems occur regardless defined note problem nt persist set directly string template need able set dynamically", "num": "12296", "d": "9/2015"}, {"title": "radio buttons render text input", "body": "tiny example course renders fine rendering minimal example dynamically via component results text input instead upgraded ember problem exist", "num": "12295", "d": "9/2015"}, {"title": "jquery version", "body": "particular reason using jquery default using application without bugs cheers", "num": "12293", "d": "9/2015"}, {"title": "data actions input component nt update nearby label", "body": "written component contains input helper put ember twiddle look shows label getting length greater zero initial render class click text field click ember correctly inserts class label something wrong input helper data actions miss understood part setup getset computed application level quantity allow set defaults based variables required kept simple use valuechange action component report internal value change back application level update quantity", "num": "12291", "d": "9/2015"}, {"title": "add deprecation modifying properties inside didinsertelement hook deprecations guide", "body": "issue mentioned following deprecation mentioned deprecations guide like request someone knowledgeable reasons behind deprecation add guide least meantime explain", "num": "12290", "d": "9/2015"}, {"title": "toggleproperty set properties component default value", "body": "trying implement nested components ember getting strange behavior use function inside action handler first component looks like javascript import ember ember export default embercomponentextend false hello default text changehello function thisset hello text set init actions thistoggleproperty second one javascript import ember ember export default embercomponentextend data dosomeimportentstuff function var data name text set bool false name text set bool true component creates two buttons names text set click button text changes text set execution function called action handler remove function remove setting everything works expected ie text buttons stays always text set function set back properties something wrong behavior action seen", "num": "12287", "d": "9/2015"}, {"title": "emberinjectservice doesnt respect singleton flag", "body": "singleton service instantiated initializer singleton flag inside component ca nt get singleton service instead gives new instance use emberinjectservice", "num": "12284", "d": "9/2015"}, {"title": "support usage app instances test helpers", "body": "previously discussed embercliembercli desirable able use app instances acceptance tests avoid recreating entire application calling every test currently use get functionality mostly working testing environment lose ability properly use test helpers since bound application rather app instance applies helpers use instancespecific info eg accesses container fixed proper way fix initial thought rerouted use called within context test update point new app instance sure correct thoughts cc stefanpenner petethepete", "num": "12277", "d": "9/2015"}, {"title": "ever possible outlet default content aka template inheritance", "body": "something like ever possible natively template inheritance come would great feature apptemplatesindexhbs always stays outlet default paragraph always render page unless child route renders inside overrides outlet ps used looks like component block form example referring standard outlet use case index route like display default content route child routes override content currently render inside outlet", "num": "12273", "d": "9/2015"}, {"title": "readonly bound boolean value input helper ember", "body": "ember version define controller template expecting rendering writable field isreadonly false renders html like simplified essentially readonly text field worked expected ember found behavior changed least intentional", "num": "12271", "d": "9/2015"}, {"title": "routerender outlet fails application level called lower level route", "body": "recent issue application highlighted believe issue routerender commands called different routes fiddle shows issue application route child route dummy modal outlet application level child route first button shows modal modal outlet run child route subsequent call show modal whether application modal button fail without error call action application route failure persistent even modal closed contrast resetting application modal loaded occurs application route modal button succeeds whether application modal level modal button used possible switch modal indefinitely soon modal rendered child route calls render modal fail presume unintended even displaying modals calling routerender different levels usual practice nt recall failure upgraded ember thanks help", "num": "12268", "d": "9/2015"}, {"title": "memory leak transitioning inverse block", "body": "tried make reproduction simple possible basically inside statement transition inverse leak bunch related morphs dom fragments reproduction heap snapshot see hiding thing cleaned rendered templates deleted coresponding items list compare statement without inverse much cleaned list removed thanks rwjblue batting one back forth pain reproduce", "num": "12267", "d": "9/2015"}, {"title": "deprecation code nt need throw errors browsers", "body": "new chrome works fine something like following work cc teddyzeenny", "num": "12266", "d": "9/2015"}, {"title": "memory leak element component handlebars attribute", "body": "appears present least far back separate memory leak mentioned earlier today fixed sample app repro instructions readmemd github based research looks like whenever dom element component attribute made using handlebars expression entire component gets leaked route transitions example leak inside component template inside component template tidbits element handlebars attribute inside component tried putting span route leaks nt happen amount leaked proportional element count component affected element count containing route seems indicate rendered component leaked route first noticed app repro app repro toy app", "num": "12265", "d": "9/2015"}, {"title": "enable multiple dynamic keys get", "body": "currently believe helper limited one dynamic key case multiple dynamic keys path eg current workaround use multiple nested get propose get helper use remaining params individual keys almost acts like concat helper allowed current implementation", "num": "12263", "d": "9/2015"}, {"title": "promiseproxymixin seems wrong docs", "body": "ca nt say mistake docs maybe something wrong docs seems resolved content automatically appear part object docs js assuming following json firstname stefan lastname penner properties accessible proxy proxyget firstname gt stefan proxyget lastname gt penner get content via property means edit ember version", "num": "12261", "d": "9/2015"}, {"title": "ca nt specify class attribute tagless components", "body": "tagname specified empty string error thrown whenever attempt define class property component logical classnamebindings wo nt work tagless component think preventing developers overwrite property named class mistake", "num": "12258", "d": "9/2015"}, {"body": "srsgores seems like internally ember uses instead idea", "d": "9/2015"}, {"body": "still nt explain getting converted", "d": "9/2015"}, {"body": "thanks reporting definitely issue recent removal template locals done around enabling legacy flags make work properly test suite passes dig bit tonight", "d": "9/2015"}, {"body": "issue elementaction keyword using", "d": "9/2015"}, {"body": "created failing test working fix tonight", "d": "9/2015"}, {"body": "current release embercli issued warning using node wait update docs warning resolved release version", "d": "9/2015"}, {"body": "good thanks", "d": "9/2015"}, {"body": "sure empty string hidden whitespace quick test ember twiddle shows reports true", "d": "9/2015"}, {"body": "hmm seems like test specifically test passing branch provide jsbin showing issue track going", "d": "9/2015"}, {"body": "code avatarurl coming api blank emberisblank returns true check empty returns false model represents league momentum export default dsmodelextend embervalidations admins dshasmany user async true maxteamsize dsattr number stepsperpoint dsattr number nameen dsattr string namefr dsattr string descriptionen dsattr string descriptionfr dsattr string sloganen dsattr string sloganfr dsattr string lingual dsattr string avatarurl dsattr string blank string benefit dsbelongsto benefit async true returns avatar absolute url return string avatarabsoluteurl embercomputed avatarurl function let relativeurl thisget avatarurl absoluteurl null", "d": "9/2015"}, {"body": "jpoiri going guess empty string string containing whitespace returns true string contains whitespace whereas return true string content fact isblank simply isempty check whitespace javascript whitespace emberisblank true emberisempty false completely blank string emberisblank true emberisempty true", "d": "9/2015"}, {"body": "ok thanks clarification", "d": "9/2015"}, {"body": "understand examples nt really done emblem templates completely agree absolutely horrible reason deprecated removed", "d": "9/2015"}, {"body": "rwjblue select helper core deprecated infavor following approaches using htmlhtmlbars directly using special purpose select addons typically attempting make specific scenarios ergonomic light closing misunderstood please provide clarification explore", "d": "9/2015"}, {"body": "stefanpenner thank awesome", "d": "9/2015"}, {"body": "although surprising javascript works enumerate sparse arrays javascript really represents hood implemented javascript leak user land inbound access sparse array index value first seems like array undefined values actually case array prealloc without values access index end undefined actually true lot represents hole given slot value undefined slightly quirky understandable javascriptism hope explanation helps appear like bug going close issue misunderstood please clarify reopen needed", "d": "9/2015"}, {"body": "stefanpenner think extremely weird behavior also nt think something differently js odd worked previously coming ended give desired behavior", "d": "9/2015"}, {"body": "stefanpenner fwiw underlying problem handlebars nt simple iterators case getting rating api want use count output ratings stars really need handlebars know done writing custom helper seems like basic building block nt written every developer needs", "d": "9/2015"}, {"body": "denisovlev think proper way achieve effect define computed property two components depend sure exactly setter function gets called example something passing binding parent controller overwriting computed property think might depending undefined behavior older versions ember broke note example also works move inside", "d": "9/2015"}, {"body": "xtian thank response define computed property idea item inside item list gets wrapped defined order pollute model header panel component may rendered rather far list generally work different lists know much inside lists general without header point view strange behavior fact change computed property calls setter computed property certain pass binding inside component handle computed property undefined behavior convenient way connect components otherwise works reliable obscures logic application solution send action sibling child component sent controller able call action another component pass inside component whole context controller parent component register object component controller seems best idea couples tightly different parts application kind event bus ember way makes logic complex feels like right way imo worth considering", "d": "9/2015"}, {"body": "ca nt wrap model proxy higher application method nt feel like right way since header implicit dependency sideeffect list component added somewhere else application seems like confusing architecture since little indicate relationship two components nothing preventing another component clobbering binding computed property implementation imo build ui easily using data actions pattern", "d": "9/2015"}, {"body": "since observers synchronous consuming cps sets race conditions cached value observer gets installed invalidate cached value observers ember generally low level primitive set flags schedule work easiest way use would use emberrunonce would schedule work one time asynchronously recompute value worked complex bookkeeping still free race conditions given trying make work removed complex code trying make work partially succeeding simply force cps recompute complex dependency graphs synchronously", "d": "9/2015"}, {"body": "okay live wrap observes emberrunonce use computed properties know still seems like bug break actual value property reading observer maybe needs documented somewhere runtime warning something", "d": "9/2015"}, {"body": "would recommend getting computed property need add extra work requires bonus works today fan adding orthogonal features caveats unique implementation teach potential traps", "d": "9/2015"}, {"body": "yeah sure works observer maybe could also work cp worth close issue think would like approach also would nt require create another method illusion would worth behavior understand closed", "d": "9/2015"}, {"body": "init actually call afterinit happens init changes within broadcast unexpected costly change events one typically wants merely initial state object primed specific way init also init nt provide ordering assurances especially inheritance involved lead tricky bugs hard work around issues using init less error prone deterministic performant also worth noting allowing cp remain lazy advantages forcing eager compute typically result anti patterns encouraging behavior sugar seems like footprints gun although appears add symmetry cp observers symmetric observers really low level unwieldy concepts primarily intended framework low level integration foreign libraries code typically recommended app code", "d": "9/2015"}, {"body": "understood thanks information", "d": "9/2015"}, {"body": "maybe question emberjsdata", "d": "9/2015"}, {"body": "depending serializer attributes may get camelized yes likely question better asked stackoverflow appear like bug bug emberdata repo", "d": "9/2015"}, {"body": "wrote answer couple hours ago forgot press comment gcorbel defaults dasherized attribute relationship members use customize behavior", "d": "9/2015"}, {"body": "sounds like good question ask stackoverflow", "d": "9/2015"}, {"body": "ok opened smells bit like ember testing bug stack overflow post gets resolved bug close", "d": "9/2015"}, {"body": "seems working expected random promises currently part test promise chain nonobvious would work since tests also written using promises would likely cause deadlocks constantly plans make returning promises actions handlers automatically opt test promise still needs fleshed implemented", "d": "9/2015"}, {"body": "im going close works expected future features planned improve situation", "d": "9/2015"}, {"body": "ok bummer anyone knows example acceptance test component like love example", "d": "9/2015"}, {"body": "passing anonymous function receives new function time prevents check possible since getting legitimate new function believe covered runloop guide sure open issue guidewebsite repo", "d": "9/2015"}, {"body": "totally makes sense docs updated", "d": "9/2015"}, {"body": "looks like issue introduced", "d": "9/2015"}, {"body": "opened issue suggestions fix maybe free cycles test new undestanding related functions gladly give feedback submission", "d": "9/2015"}, {"body": "also reference api docs accurate", "d": "9/2015"}, {"body": "extra comment ensure confusion api docs", "d": "9/2015"}, {"body": "thanks api docs would replaced testing would time learning ember rails testing framework testing website first know overburdened everything day less suffocated certainly add fork embersync localstorage adapter may useful big issue ls believe especially new guys testing ember performance wih ls adapter", "d": "9/2015"}, {"body": "ok got sorry docs correct anonymous function case dealt unfortunately looking doc function without checking scheduleonce technically docs correct replacing function docs would helped case realized method must properly work nonanonymous function sorry waste time", "d": "9/2015"}, {"body": "code reproduce", "d": "9/2015"}, {"body": "otherwise would need put loading templates every level route hierarchy", "d": "9/2015"}, {"body": "nt according routing substate guide ember traverse base application route hierarchy ember try find loading route hierarchy foobarslowmodel transition starting foobarslowmodels sibling foobarloading fooloading loading considering also loading event routing substate guide states loading handler defined specific route event continue bubble transition parent route providing route application opportunity manage seems imply loading event specifically bubbles entire route hierarchy target route route application unreasonable assume resolver perform resolution path looking loading route perform intermediate transition however clearly happening demonstrated resolver logging sample code provided routing guide code clearly disagreement consumer framework applies common sense seems intent guide correct error code", "d": "9/2015"}, {"body": "otherwise would need put loading templates every level route hierarchy nt understand seems like poor design constraint ember need copypaste loading screen every route even loading screen effectively component ca nt define loading screen root hierarchy done seems like resolver able heavy lifting guides seem indicate hence bug", "d": "9/2015"}, {"body": "agreeing mikepost experiencing unexpected behaviour least according guides well small jsfiddle illustrate matter well", "d": "9/2015"}, {"body": "mikepost guides correct issue guides repo locks fix guides seem indicate however expectation guides may correct repo example loading template top route transition beginning route loading template transition beginning route without loading template nt behavior rendering loading template guides ember try find loading route hierarchy foobarslowmodel transition starting foobarslowmodels sibling seem indicate one loading template top route tree route gt child gt grandchild would work says says try find loading route loading template also nt say generate loading route route loading template nt even know magic happens based example want transition route tree need provide loading template level", "d": "9/2015"}, {"body": "transition beginning route without loading template nt behavior rendering loading template agree current behavior question code bug guide wrongmisleading posit sensible thing define single top level loading template used entire application thus bug would code based slack conversations far one possesses point view bug exists consensus needhelp channel current behavior broken bug filed says try find loading route loading template also nt say generate loading route route loading template nt even know magic happens good point updated example repo include explicit loading route result unchanged", "d": "9/2015"}, {"body": "mikepost created embertwiddle example twiddle uses pods default question code bug guide wrongmisleading think perhaps guides completely clear regarding use loading template bug ember try find loading route hierarchy foobarslowmodel transition starting foobarslowmodels sibling foobarloading fooloading loading wording around sibling think routing transitions embertwiddle example fooloadingtemplatehbs file utilized transitioning applicationindex foobar applicationindex foobarbaz foo foobar foo foobarbaz fooloadingtemplatehbs file utilized transitioning foobar foobarbaz hence need put loading template level routing transitions begin basically everywhere embertwiddle example believe would feature request resolve path loading template anywhere transition start end perhaps write rfc issue see feature request docs", "d": "9/2015"}, {"body": "locks perhaps clarity needed guides regarding loading templates see example twiddle links one loading template loading template nested structure", "d": "9/2015"}, {"body": "thanks reporting", "d": "9/2015"}, {"body": "duggiefresh perhaps tracked embercli project instead emberjs one think", "d": "9/2015"}, {"body": "pixelhandler fyi turned issue emberjsbuild", "d": "9/2015"}, {"body": "u create duplicate issue gh", "d": "9/2015"}, {"body": "first inclination sounds like ff issue although mentioned without info nt know", "d": "9/2015"}, {"body": "zulaica perhaps use beta release maybe feature flag", "d": "9/2015"}, {"body": "inclined believe bug cc rwjblue asking fix curious agree zulaica provide quick jsbin make easy diagnose even better failing test pr", "d": "9/2015"}, {"body": "stefanpenner quick jsbin try submit failing test tomorrow", "d": "9/2015"}, {"body": "ya bug fixed betacanary prior nt really possible many issues existed use link variant nt think regression suggested solution use betacanary take advantage refactoring done make possible", "d": "9/2015"}, {"body": "acalfo true tried another example well however sure bug intended design marked private disagree public powerful mixin", "d": "9/2015"}, {"body": "appears issue jquery promises broken changing code first make rsvp well behaved promise library wrap jquery one appears solve issue misunderstand please clarify reopen", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "bookmarked whenever need reminder", "d": "9/2015"}, {"body": "jamesarosen true helpful clarify", "d": "9/2015"}, {"body": "lolmaus guess work around use ifelse rather condition use case seems like attr bound default condition determines value attribute sure first rendering fixed browser js appears example mucking value breaks shows empty attr want attr binding present based condition seems reliable use ifelse define component sets attribute binding based property component", "d": "9/2015"}, {"body": "pixelhandler helper nt help see example", "d": "9/2015"}, {"body": "seems work attributes href href definitely bugged", "d": "9/2015"}, {"body": "lolmaus meant using else template instead relying conditional value assignment html attribute seems like gamble expect value assignment attribute indicate whether attribute present empty missing present value expected browsers behave accordingly", "d": "9/2015"}, {"body": "suspect may related special cased reflected", "d": "9/2015"}, {"body": "pixelhandler would result code duplication gets really burdensome link content complex", "d": "9/2015"}, {"body": "danwang example bin appear time behavior expected see added show happening layout parent template child use appears shadow childvalue current scope controller seems would best explicitly pass values component properties avoid shadowing properties appears controller defining picked layout template avoid using templatename components sounds like refactoring needed partial works great may avoid repeating variable assignments", "d": "9/2015"}, {"body": "agreed like use entirely block partials exist ember unable use solution", "d": "9/2015"}, {"body": "xrxr indeed looks like bug still simple workaround use examples show case tolerant set destroyed object work code nt seem support claim docs either see either docs wrong implementation nt support docs", "d": "9/2015"}, {"body": "points issue chain may refer path though documentation say deprecated test deprecated comment", "d": "9/2015"}, {"body": "might relevant", "d": "9/2015"}, {"body": "workmanw awesome find thank", "d": "9/2015"}, {"body": "toranb yeap use emberobjectproxy time time especially bufferproxy related things", "d": "9/2015"}, {"body": "mean open issue ember cli repo", "d": "9/2015"}, {"body": "maybe need read routing guide adding makes behave expected", "d": "9/2015"}, {"body": "yeah believe working intended", "d": "9/2015"}, {"body": "mikepost correct need use reload model hooks value query param changes", "d": "9/2015"}, {"body": "work around set target action manually item controller unsure change semantics appear aligned context shifting works", "d": "9/2015"}, {"body": "prior behavior seems like bug noncontext shifting foo bar bar foo actions block absolutely target thing action outside block exactly contexttarget outside block", "d": "9/2015"}, {"body": "rwjblue agreed behavior wanted public api trick closing", "d": "9/2015"}, {"body": "older browser quirky css implementations allowing scripts external resources loaded even unexpected restyle page considered vulnerability could vector clickjacking merely disrupt ui users basic dos sorts another vector information leak could also used inconjunction another vector example consider day font vulnerability another forcing unintended fontload could tl dr security nt guarding obvious vectors also mitigate potential vectors strategy successful limiting impact given operation scope intended anything beyond avoided reality software complex impossible prevent vectors opportunity take full advantage", "d": "9/2015"}, {"body": "mostly agree stef said problem allowing arbitrary css older browsers execute javascript crosssite scripting xss leads sorts bad stuff like steal sessions etc modern browsers like stef alluded problem redressing attacks make site look like something else confuse phish user nt big problem xss fixed answer title documentation stef working security documentation ember css definitely part stay tuned front", "d": "9/2015"}, {"body": "great thank quick responses appreciate focus mainly xss sessions cookies used application better idea need protect app look forward security documentation worked looks like question kinda place gon na close issue correspond one particular bugfeature thanks taking time address", "d": "9/2015"}, {"body": "colinlgray take security quite seriously although may lack docs system really designed safe clientside system time goes plug holes also aim give developers framework secure thing first lack nice userland docsguides something mentioned working pretty hefty undertaking hope something comprehensive lands", "d": "9/2015"}, {"body": "rodfersou unfortunately would difficult disappoint young programmers getting ember immediate change smile mention companies linkedin yahoo groupon mcgraw hill conde nast happy participate ember ecosystem logo thanks constructive criticism would suggest starting platform x sucks would like motivate changes project future cheers", "d": "9/2015"}, {"body": "emberconf vid might offer perspective defense hamster mascot", "d": "9/2015"}, {"body": "mixonic machty thank", "d": "9/2015"}, {"body": "agreed regression quick look changelog would guess related", "d": "9/2015"}, {"body": "tells offending commit confirmed commit works expected unfortunately familiar enough code know fix hopefully good starting point somebody", "d": "9/2015"}, {"body": "glad see issue getting love think bugs root cause please let know anything help team looked pretty extensively would love help testing anything else", "d": "9/2015"}, {"body": "cc dgeb also sent bat signal docs team", "d": "9/2015"}, {"body": "initializer docsguides must updated accept application argument instance initializer docsguides must updated accept applicationinstance argument seems correct documented", "d": "9/2015"}, {"body": "registry methods must made public methods doc methods application make public unsure container registry absolutely made public made small subset functionality public mixin see proxy mixins seem appropriately documented marked please double checkconfirm chance absolutely may missed something", "d": "9/2015"}, {"body": "deprecated method registryproxy flagged deprecated property deprecated calling methods never documented either public private would document suggesting add documentation mention deprecated requires deprecation guide entries relevant items agreed", "d": "9/2015"}, {"body": "submitted screenshots ensure proper linkages docs", "d": "9/2015"}, {"body": "updated confirming robert feedback property deprecated calling methods applicationregistry never documented either public private would document suggesting add documentation emberapplication registry mention deprecated shows public suggesting registryproxy likely public", "d": "9/2015"}, {"body": "shows registryproxy public suggesting registryproxy likely public added add link properly update", "d": "9/2015"}, {"body": "changed class level methods still", "d": "9/2015"}, {"body": "guides must audited ran guides far see nt using initializers anywhere want per locks remember correctly locks confirm", "d": "9/2015"}, {"body": "acorncom rather heavily documented ideally chance docs improve front", "d": "9/2015"}, {"body": "mixonic indeed stand corrected defense believe changes nt yet deployed live site made comment", "d": "9/2015"}, {"body": "mixonic opened guides issue docs team want reference checklist due way guides versioning currently work may pull request pending merge soon released", "d": "9/2015"}, {"body": "acorncom updated thanks", "d": "9/2015"}, {"body": "feature guides documentation needs land released documented fact believe current contract new features without documentation documented guides probably blocker", "d": "9/2015"}, {"body": "michaelrkn train stops one stuckouttongueclosedeyes either remove feature get guides updated api documentation addressed pr notated week get done need volunteer dancers", "d": "9/2015"}, {"body": "future changes like get issue opened guides repo sure us knew coming happened browsing noticed docs mention", "d": "9/2015"}, {"body": "sorry chime willing help needed", "d": "9/2015"}, {"body": "dgeb take", "d": "9/2015"}, {"body": "michaelrkn ok", "d": "9/2015"}, {"body": "nullvoxpopuli outside scope ember router browser treats subhuman reference ip address dns full domain including subdomain necessary browser load website loaded path used ember router anything url domain", "d": "9/2015"}, {"body": "would possible say page load transition particular route based current subdomain like xmysitecom gt routex ymysitecom gt routey", "d": "9/2015"}, {"body": "nullvoxpopuli could use redirect applicationroute appear bug rather question typically recommend stackoverflow geared qa feature requests rfc process", "d": "9/2015"}, {"body": "branch target pr affect would love land fix time track submit pr", "d": "9/2015"}, {"body": "different experience ca nt polyfill please use foreach enumerate", "d": "9/2015"}, {"body": "nothing appears consuming makes everything work appears working expected", "d": "9/2015"}, {"body": "also redundant observing superset", "d": "9/2015"}, {"body": "stefanpenner consuming", "d": "9/2015"}, {"body": "case aggressive optimization observer observing computed property enough trigger consumption", "d": "9/2015"}, {"body": "simpler example", "d": "9/2015"}, {"body": "stefanpenner valuesdidchange consuming allvalues yes fires already consumed changes", "d": "9/2015"}, {"body": "stefanpenner takeaway observe computed property unless computed property consumed elsewhere", "d": "9/2015"}, {"body": "stefanpenner takeaway observe computed property unless computed property consumed elsewhere yes correct think schr\u00f6dingers computed properties consumed state undefined state change notification possible laziness invariant actually quite nice results single caveat discussed", "d": "9/2015"}, {"body": "stefanpenner correct way going get work", "d": "9/2015"}, {"body": "devinus call", "d": "9/2015"}, {"body": "believe might related", "d": "9/2015"}, {"body": "yes also thought referencing issue issue", "d": "9/2015"}, {"body": "kuzirashi nt believe observing nested properties supported instead supported property object object see note works one level deep use nested forms like todos eachownername todos eachowner eachname", "d": "9/2015"}, {"body": "note works one level deep use nested forms like todos eachownername todos eachowner eachname actually meant say cant work", "d": "9/2015"}, {"body": "kanongil creating pull request fix ember believe correct use required triggering observers", "d": "9/2015"}, {"body": "believe intend childviews observable overhead supporting possible cases quite tricky", "d": "9/2015"}, {"body": "well unfortunate used work pre excepting changed behavior without deprecation notice afaik documented normal property restriction could modify directly", "d": "9/2015"}, {"body": "kanongil even childviews array observable worked tried call notifyproperty childviews parentview changed even still bugs blessed way really array observing container view way nt breaking edge casing general better future proof app would derive hierarchy state derive state component hierarchy", "d": "9/2015"}, {"body": "krisselden exactly desire derive state viewcomponent hierarchy makes natural fit application suspect others well case use handle dpad focus navigation parent view determines next focusable child view gain focus key presses", "d": "9/2015"}, {"body": "documentation underway hooks part angle bracket component feature believe chancancode working though could mistaken", "d": "9/2015"}, {"body": "yes try submit pull request feedback soon understand reason hooks attrs property docs intentional considered publicfinalized yet primarily usable without glimmercomponentangle bracket components anyhow docs writing done time glimmer component nt think expect major changes resolved soon", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "hmm nt personally much experience rtl languages ember app though sure done well perhaps others experience chime maybe examples", "d": "9/2015"}, {"body": "ca nt reproduce issue", "d": "9/2015"}, {"body": "found emberjs cute tried demo emberjscom home page name want learn ember typed text persian text english gets reverse browser os version ember", "d": "9/2015"}, {"body": "ok firefox google chrome problem firefox nightly firefox os windows server build", "d": "9/2015"}, {"body": "html emberjscom website sets lang browser supposed treat english lefttoright sounds like browser firefox playing nice building web pageapp righttoleft audience needs locale configured properly browser needs support locale emberjs issue shown emberjs site optimized one locale sure team supporting localization ember website documentation significant effort would best treat emberjscom website one optimized english sure firefox problems", "d": "9/2015"}, {"body": "thanks everyone", "d": "9/2015"}, {"body": "agree points closing duplicate tricknotes working", "d": "9/2015"}, {"body": "searching embermergeobjectassign issues emberassign caught attention thanks", "d": "9/2015"}, {"body": "elithrar issue emberjsdata project emberjsemberjs project also perhaps join documentation channel embercommunityslackcom chat let know need clarity", "d": "9/2015"}, {"body": "move", "d": "9/2015"}, {"body": "may regression", "d": "9/2015"}, {"body": "address existing issue either repo generally sure lack warningerror shows today", "d": "9/2015"}, {"body": "takes branch errors", "d": "9/2015"}, {"body": "released tasks todo next x update morphrange htmlbars x pull htmlbars write regression test ember", "d": "9/2015"}, {"body": "needs included updated htmlbars version released updated", "d": "9/2015"}, {"body": "tiny modules updated todo list", "d": "9/2015"}, {"body": "hello stefanpenner two three prerequisites completed left write regression test within ember repo got enough plate nt mind closing issue long give hint regression test would look like rose tulip thanks", "d": "9/2015"}, {"body": "duggiefresh thanks believe sufficient try template resulting error rather useless p", "d": "9/2015"}, {"body": "pertinax assertion clear app define query param parent child work prior version ember perhaps make embertwiddle example showing working code", "d": "9/2015"}, {"body": "pixelhandler understand error means example app", "d": "9/2015"}, {"body": "aldhsu using default action helper checkbox intercepts click behavior mention also bind event think looking note accomplishes thing", "d": "9/2015"}, {"body": "thanks xtian solves issue define event explicitly future action helper template expected click default prevented helper emberjs guide default action helper listens click events triggers action user clicks element however actually preventing default click original twiddle see event undefined action intended behaviour", "d": "9/2015"}, {"body": "constructed twiddle bit surprised results called result event default action helper nt work expected event passed action helper click specified also nt work little surprising event passed template specified click works surprising given event passed action helper onchange specified works expected event passed", "d": "9/2015"}, {"body": "aldhsu yeah intended actions higherlevel abstraction event handlers nt receive dom event using normal helper style nt realize action would receive event using style makes sense action function explicitly set callback event typically want interact dom events create component bind events js import component embercomponent import embereventedon export default componentextend click ev handler click function ev", "d": "9/2015"}, {"body": "thanks clarification xtian", "d": "9/2015"}, {"body": "largely delete shape costly appears like improvement w benchmark code js var assert require assert function makedictionary parent var dict argumentslength objectcreate parent dict dict null delete dict dict return dict function makedictionarynodelete parent var dict argumentslength objectcreate parent dict dict null return dict var proto objectcreate null without always still end new emptyobject constructor object constructor value undefined enumerable false writable true function emptyobject emptyobjectprototype proto function makedictionarywithemptyobject var dict new emptyobject dict dict null delete dict dict return dict function makedictionarywithemptyobjectnodelete var dict new emptyobject dict dict null return dict assert makedictionary assert makedictionarynodelete assert makedictionary null assert makedictionary assert makedictionarywithemptyobject assert makedictionarywithemptyobjectnodelete require doyouevenbench name makedictionary fn function return makedictionary name makedictionarynodelete fn function return makedictionarynodelete name makedictionary null fn function return makedictionary null name makedictionary parent fn function return makedictionary name makedictionarywithemptyobject fn function return makedictionarywithemptyobject name makedictionarywithemptyobjectnodelete fn function return makedictionarywithemptyobjectnodelete", "d": "9/2015"}, {"body": "nice benchmarking planning submitting pr notating details issue make sure nt loose track", "d": "9/2015"}, {"body": "noting details get cross browser numbers first good submit pr", "d": "9/2015"}, {"body": "chrome safari version version", "d": "9/2015"}, {"body": "stefanpenner yes great dictionary like objects nt know perf increase nice using objectcreate null enum types ember side", "d": "9/2015"}, {"body": "commit breaks linkto assuming tests still pass including ones inspect attribute appears insidious bug cc wycats", "d": "9/2015"}, {"body": "make reproduction jsbin submit failing test pr test suite indeed pass seems odd linkto href completely busted", "d": "9/2015"}, {"body": "repro inspect anchor note nt literally simple possibly could click link still works gets fired imagining tests still continue pass also maybe forced lazy evaluation computed property accessing attr show time tests", "d": "9/2015"}, {"body": "mobile atm test also", "d": "9/2015"}, {"body": "works works current beta channel", "d": "9/2015"}, {"body": "thank", "d": "9/2015"}, {"body": "submitted writeup fix", "d": "9/2015"}, {"body": "looks like works", "d": "9/2015"}, {"body": "xtian thanks checking likely fixed", "d": "9/2015"}, {"body": "confirmed jsbin nt work earlier yesterday likely fix also app saw problem first works thanks", "d": "9/2015"}, {"body": "believe duplicate already fixed latest release beta build try link issuepr later", "d": "9/2015"}, {"body": "think pr", "d": "9/2015"}, {"body": "looks like fixed canary", "d": "9/2015"}, {"body": "awesome thanks checkingconfirming", "d": "9/2015"}, {"body": "fix back ported rwjblue", "d": "9/2015"}, {"body": "dhaulagiri sure commit fixes opposed backporting someone tracks safe enough immediate release", "d": "9/2015"}, {"body": "try look super familiar ember code base blocking issue upgrade though try make time", "d": "9/2015"}, {"body": "rwjblue would like us chat class issue meeting today need stance upgrade blocking bugs undermine ease upgrade goals obviously fix want make sure everyone understanding aligned", "d": "9/2015"}, {"body": "also fixed difference seems particular case object wheres gt presumably string", "d": "9/2015"}, {"body": "quick glance suggests leaking", "d": "9/2015"}, {"body": "ya leaking potentially others", "d": "9/2015"}, {"body": "wycats hinted quick check confirms instead direct attrs interaction solve issue calls replace example js import getvalue emberhtmlbarshooksgetvalue var currentwhen getvalue attrs currentwhen", "d": "9/2015"}, {"body": "dhaulagiri spare cycles", "d": "9/2015"}, {"body": "stefanpenner provided get guidance needed happy leg work early next week", "d": "9/2015"}, {"body": "closed", "d": "9/2015"}, {"body": "thanks dhaulagiri", "d": "9/2015"}, {"body": "jerel quick way someone see emulated nt personally pc", "d": "9/2015"}, {"body": "ought help", "d": "9/2015"}, {"body": "jherdman curious anything quicker installing perhaps web based really nt want install", "d": "9/2015"}, {"body": "pixelhandler screenshot result code far tell resulting html correct compared versions guessing something element created timing type added perhaps guess", "d": "9/2015"}, {"body": "pixelhandler free trial browserstack offers", "d": "9/2015"}, {"body": "likely came", "d": "9/2015"}, {"body": "eddflrs yeah would cool could group fund browserstack ember debugging community", "d": "9/2015"}, {"body": "jerel yeah browsers display correctly either way", "d": "9/2015"}, {"body": "appear caused ember trying set element dom temporary workaround implemented component put template works", "d": "9/2015"}, {"body": "kennedytedesco think past series jquery use older browser support support older browsers offhand idea plan use version jquery default dependency appaddon developer free change", "d": "9/2015"}, {"body": "pixelhandler yes thought forgotten change core dependencies smile issue important stand open closing", "d": "9/2015"}, {"body": "works fine valuelength replaced value", "d": "9/2015"}, {"body": "confirm list deprecations pending addition deprecations guide list large checklist issue emberjswebsite issues", "d": "9/2015"}, {"body": "rwjblue deprecations add issue made comment request added", "d": "9/2015"}, {"body": "handling deprecation currently using implementation instead cases", "d": "9/2015"}, {"body": "thanks furkanayhan solution currently using definitely removes deprecation interested hear reasoning behind deprecation well officially recommended alternatives", "d": "9/2015"}, {"body": "bratukham looks like using set data seems introduce race condition forked example without using init set data would expected name passed dname hello prop renders properly example using init appear passed value hello changed init usage click data used hello value", "d": "9/2015"}, {"body": "pixelhandler problem data coming changed little bit rendering possibility race condition actually expected bahavior ember race conditions used", "d": "9/2015"}, {"body": "really understand twiddle trying make clearer step step explanation error state happens", "d": "9/2015"}, {"body": "services general singleton default would expect single instance share reproduction jsbin embertwiddle", "d": "9/2015"}, {"body": "jsbin", "d": "9/2015"}, {"body": "orgil rwjblue yeah appears problematic cloned jsbin example also logged equality check injected service instance service found via container lookup however change service use init method works works breaks", "d": "9/2015"}, {"body": "possible set array property without init due array nature shared instance", "d": "9/2015"}, {"body": "sure indeed bug far see reregistering service class different name registry fetching instance respectively however point view container instances plural singletons scope name see jsbin", "d": "9/2015"}, {"body": "thriqon nt know intended documented intended behavior whole point ca nt access singleton instance emberinject even passed registry name always returns new instance works pull container name jsbin", "d": "9/2015"}, {"body": "well access singleton instance use correct name registering service class new name effectively giving constructor two names name singleton instance intuitively expect", "d": "9/2015"}, {"body": "registering service class new name effectively giving constructor two names name singleton instance intuitively expect yes registering get whole new thing seems working intended theory people want alias things could explore feature anyways closing appears working expected", "d": "9/2015"}, {"body": "one idea make test helpers available app rather global would simplify solve existing issues cc teddyzeenny", "d": "9/2015"}, {"body": "mean registering app instance test helpers currently get registered app indirectly via property eg", "d": "9/2015"}, {"body": "stefanpenner keep helpers application instance applicationinstance instances instead also changed receive app instance instances instead application instance try provide better feedbacksuggestions evening", "d": "9/2015"}, {"body": "applicationinstance instances instead yes continue global helpers rather clear creation new instance mashes globals previous ones also important people delete appinstances leak like mad", "d": "9/2015"}, {"body": "applicationinstance instances instead also changed receive app instance instances instead application instance maybe also start discouraging use globals", "d": "9/2015"}, {"body": "sounds like two parts move test helpers use applicationinstance instead application deprecate somehow discourage use global helpers picturing unfolding like js module acceptance test thisapp applicationcreate beforeeach thisinstance run thisapp buildtestinstance creates instance registers test helpers aftereach run thisinstance destroy run thisapp destroy test test assert gt thisinstancevisit route click button deprecation make sense also backcompat assuming using instances instead app test helpers break bunch stuff", "d": "9/2015"}, {"body": "ya similar picturing", "d": "9/2015"}, {"body": "could always enable shorthand gt", "d": "9/2015"}, {"body": "could bundle way mirrors component integration tests cause would huge", "d": "9/2015"}, {"body": "timevans", "d": "9/2015"}, {"body": "timevans something like maybe plan start work either weekend monday stefanpenner thoughts backwards compatibility important maybe two methods registering test helpers one uses applicationinstance old one application", "d": "9/2015"}, {"body": "sounds right line current test helpers another option would nt care long provides consistency would wonderful able things", "d": "9/2015"}, {"body": "functionality already effectively create another child route called index index chains deeply route exists", "d": "9/2015"}, {"body": "hey bravely ok say following routes right renders way effectively indexhbs page contain content child route render outlet like outlet index page also contain default content wondering explained lines", "d": "9/2015"}, {"body": "one template want route render default render go show route", "d": "9/2015"}, {"body": "bravely ok cool try thanks", "d": "9/2015"}, {"body": "possible related", "d": "9/2015"}, {"body": "ltouro thanks closed", "d": "9/2015"}, {"body": "andrewjmc create second jsfiddle example working forked appears behavior", "d": "9/2015"}, {"body": "ah perils working train saved version final version code lacks necessary handlers different routes tablet try produce example previous successful version tomorrow", "d": "9/2015"}, {"body": "sorry delay jsfiddle ember open modal application route find merrily switch modal open child route able switch", "d": "9/2015"}, {"body": "find works ember nb close fails application level opened child route behaviour failing render without error clearly wrong however whether intended render fail error succeed clear would seem sensible ember agnostic route command render template disconnect outlet came", "d": "9/2015"}, {"body": "related seeing similar issue", "d": "9/2015"}, {"body": "seems similar conceptually definitely exactly issue fixed", "d": "9/2015"}, {"body": "bead random mind dump follows solution ensure template last yielded need clear morph rendering fix working tests", "d": "9/2015"}, {"body": "fixes upstream", "d": "9/2015"}, {"body": "try master appears related cherry picked branch travis done able bower install save ember get fix source rwjblue", "d": "9/2015"}, {"body": "think might fixed leak used combine strings", "d": "9/2015"}, {"body": "sounds exactly like give try", "d": "9/2015"}, {"body": "thanks thorough bug report please confirm latest builds indeed fixed able use latest builds channel get fix", "d": "9/2015"}, {"body": "thanks everyone coincidence got pred today narrowed end", "d": "9/2015"}, {"body": "nested seem okappropriate seem wrong", "d": "9/2015"}, {"body": "rwjblue im curious path variation disallowed", "d": "9/2015"}, {"body": "rwjblue seems like would nice shorthand deep key paths reads better something nested gets even using concat option makes brain go ick multiple params seems logical perhaps others feel differently", "d": "9/2015"}, {"body": "rwjblue nt like get act like emberget hand something easy asttransform better solution future", "d": "9/2015"}, {"body": "mmun", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "use helper", "d": "9/2015"}, {"body": "btecu helper used need dynamic member lookup much like js examples template equivalent equivalent heard typically used dealing polymorphic models often dynamic forms", "d": "9/2015"}, {"body": "mmun rereading everything sounds like feel least support currently allowed would enable use mean asttransform", "d": "9/2015"}, {"body": "nt work sad forget ast transform misunderstood problem agree work", "d": "9/2015"}, {"body": "mmun believe mentioned intro description currently disallow key include period see", "d": "9/2015"}, {"body": "simple removing assert nt see anything else holding back periods multiple dynamic keys could handled function maybe changing line something like would allow either realize multiple dynamic keys option nt popular ya trying figure could enabled", "d": "9/2015"}, {"body": "fully addressed", "d": "9/2015"}, {"body": "could show create object proxy", "d": "9/2015"}, {"body": "js var proxy emberobjectextend emberpromiseproxymixin create promise emberrsvppromiseresolve hello settimeout function consolelog proxyget contenthello consolelog proxyget hello undefined", "d": "9/2015"}, {"body": "orisomething seems working expected proxy would", "d": "9/2015"}, {"body": "exactly dspromiseobject defined emberdata", "d": "9/2015"}, {"body": "thank feel stupid disappointed", "d": "9/2015"}, {"body": "adding attribute would normally affect standard tagged component element result error used tag less component also add assertion detect event handlers ie click function root component help prevent situations folks fully understand tagless component expect events andor element attributes somehow work element", "d": "9/2015"}, {"body": "rwjblue nt warning enough errors limiting folks understand tagless components experimenting react past months ca nt help think tagless components de facto solution would recommended way implement example seems component tagnames inherit views behaviors namely default action", "d": "9/2015"}, {"body": "upcoming feature allow us remove special scenarios mostall current js api managing component element example added component js definition used way would recommended way implement example sure question questions something generally better suited stack overflow see errors attempting introsetup going go ahead close issue happy reopen demonstrate bug though demo", "d": "9/2015"}, {"body": "strange thanks time provide details whenif replicate issue", "d": "9/2015"}, {"body": "acalfo see one jsfiddle example assigned promise two results returns one promise referenced arrays since code creates one promise seems correct function failure executed", "d": "9/2015"}, {"body": "thanks response realize terrible job showing problem updated fiddle better job trouble even though handling error promise keep getting error console uncaught undefined open console run fiddle see talking", "d": "9/2015"}, {"body": "sorry raise issue plugin using causing issue plugin modifying target key controller resetting back", "d": "9/2015"}, {"body": "problem glad got figured", "d": "9/2015"}, {"body": "ah chance missed", "d": "9/2015"}, {"body": "thanks teddyzeenny correct case explicitly reloaded model trigger setupcontroller another time currently eg import ember ember export default emberrouteextend model function params gets called initial load refresh explicitly reload model server return thisstorefindrecord mymodel paramsmymodelid reload true setupcontroller function controller model gets called initial load refresh thissuper controller model actions refreshroute function thisrefresh", "d": "9/2015"}, {"body": "bjubinville perhaps put code embertwiddle jsbin check older version see setupcontroller called past nt", "d": "9/2015"}, {"body": "pixelhandler", "d": "9/2015"}, {"body": "favor reverting put time fixing issue one described", "d": "9/2015"}, {"body": "rwjblue curious view deprecations would classnames applied application view like import ember ember export default emberviewextend classnames corewrapper", "d": "9/2015"}, {"body": "tomoguisuru see comment directly suggested using addon nonhacky way today", "d": "9/2015"}, {"body": "stefanpenner symbol implementation proposed public api private public maybe move rfc issue", "d": "9/2015"}, {"body": "private internal", "d": "9/2015"}, {"body": "fixed stefanpenner review see eligible backporting", "d": "9/2015"}, {"body": "take care backport", "d": "9/2015"}, {"body": "indirectly definitely bit ended overriding application adapter return custom type response nt pass felt clunky compared able directly grab status far removed example docs making underlying http status making available within top level make testing status codes much simpler", "d": "9/2015"}, {"body": "anyone else runs issue currently extending resolve routes sitting next renderable components follows added benefit requiring prefix routablecomponent routes defined templates issue closed works well routable components implementation likely change rfc implemented", "d": "9/2015"}, {"body": "thanks following providing solution", "d": "9/2015"}, {"body": "possibly related", "d": "9/2015"}, {"body": "nt closed merged rwjblue", "d": "9/2015"}, {"body": "seems good thanks", "d": "9/2015"}, {"body": "runspired asakusuma app issue coming undefined error removed function runspired hinted route transitions successful using ember sure else could provide assist issue please let know", "d": "9/2015"}, {"body": "ryanlitalien figure way fix issue tests still pass would awesome tried change mentioned weeks ago broke tests", "d": "9/2015"}, {"body": "also experiencing issue render work fine forces glimmer rerender old elements removed obviously bad", "d": "9/2015"}, {"body": "also definitely labeled glimmer regression", "d": "9/2015"}, {"body": "additionally present even use", "d": "9/2015"}, {"body": "suspect initially reported issue related one memory leak bugs fixed causing ifelse torn properly traversing truthy falsey blocks", "d": "9/2015"}, {"body": "upstream fixing pr description issue confirmed reported issue jsbin working without error", "d": "9/2015"}, {"body": "looks like another scenario reported noslouch need dig also reopening", "d": "9/2015"}, {"body": "rwjblue definitely happening", "d": "9/2015"}, {"body": "rwjblue information seems like passing index component within like noslouch example well", "d": "9/2015"}, {"body": "jsbin array numbers iterated via component created using iteration index components click button underlying array numbers swapped another array numbers triggering rerender rerender assertion triggered two items exist following walk happening initially rendered create components new entry added used new entry added used new entry added used new entry added used new entry added used new entry added used click change frequency templating layer begins processing new list items new entry added used new entry added used previously rendered item reused item iterated prior iteration already rendered new entry added used previously rendered item reused item iterated prior iteration already rendered new entry added used see actually told ember create two elements id assertion correctly telling digging tracking actually happening nt something fix unless completely throw away rerender optimizations added", "d": "9/2015"}, {"body": "stefanpenner like close call", "d": "9/2015"}, {"body": "thank clear explanation ember internals use case runspired brings comment form elements labels taking advantage html native clicklabelandfocusinput behavior labels inputs matching attributes situation ended resolving rendering frequency displaying based another property seems like asking performance lags maybe glimmer handle", "d": "9/2015"}, {"body": "need avoid using element created never update believe warningassertion somewhere try change item reused likely cause issue used similarly walk however use something object yielded roughly guaranteed avoid type conflict underlying object reused still needhave value point technique asking attribute value input technique works perfectly well use something based object yielded basis reuse rendering engine example could something like assuming thing yielded object primitive javascript apphelpersidentityforjs import ember ember export default emberhelperhelper function object return emberguidfor object", "d": "9/2015"}, {"body": "rwjblue agreed although suspect may cause upgrade pains feels like big footprints gun relying dynamically toggling id settling correctly unintended hazard apologies past exposed hazard", "d": "9/2015"}, {"body": "noslouch example exactly wondering nt element reused trying create element id", "d": "9/2015"}, {"body": "also solved using eg", "d": "9/2015"}, {"body": "update hunch correct using solves problem guessing longer tries tie element previous elements array rwjblue", "d": "9/2015"}, {"body": "also using seems much faster case", "d": "9/2015"}, {"body": "rwjblue stefanpenner still possible create pr deprecation remove functionality mmun written remove beta", "d": "9/2015"}, {"body": "far late preparation ember", "d": "9/2015"}, {"body": "also experiencing issue jquery sortable ember controller action sort given item attribute filename sorts array properly computed property position array updates accordingly ui actual sequence items dom changed seems sortable plugin something interferes helper keeping track whether items need rendered commenting sortable function allows controller action changing array sort order reflected dom", "d": "9/2015"}, {"body": "think similar issue nt know needs issue maybe jsbin shows issue observerscomputed properties component gets value nt triggering changes value seems happen value object workaround using different nonobject property trigger observerscomputed properties instead ember", "d": "9/2015"}, {"body": "ping wycats help us issue", "d": "9/2015"}, {"body": "shipit", "d": "9/2015"}, {"body": "workaround issue ca nt use disabled property text needs selectable copyable although chrome allows selectcopy text disabled input field firefox", "d": "9/2015"}, {"body": "lazloman works pass undefined instead false readonly", "d": "9/2015"}, {"body": "opened fix embertesthelpers", "d": "9/2015"}, {"body": "upgraded ember test helpers nt resolve problem think use fork necessary still", "d": "9/2015"}, {"body": "previously failing test added switchflyembertesthelpers confirming rendered component integration test test passes canary test blimmer submit pr tests show failing try jump figure else might needed", "d": "9/2015"}, {"body": "spent time trying figure written test nt failing could nt figure however make simple project shows still failing current emberqunit using current embertesthelpers maybe missing something nt obvious looking minutes failing tests branch code easy repro steps change bowerjson ember emberqunit embertesthelpers change ember still fails message", "d": "9/2015"}, {"body": "rwjblue fix incoming beers", "d": "9/2015"}, {"body": "see raytiley thanks working figure issue fix", "d": "9/2015"}, {"body": "wonder already update", "d": "9/2015"}, {"body": "possibly related", "d": "9/2015"}, {"body": "also getting error upgrading even using query param aliases normal properties noticed occurs set query params used work fine controller js queryparams period preset default date range preset past days period day setdatesfrompreset init observer preset function setdatesfrompreset const preset thisget preset const period reportcontrollerdatepresetqueryparams preset", "d": "9/2015"}, {"body": "karanjthakkar find solution upgrade components broken using rerender everywhere switch readonly editonly modes", "d": "9/2015"}, {"body": "kushdilip used new syntax event publishing rerender dom", "d": "9/2015"}, {"body": "karanjthakkar paste snippet something implement helper nt find event component code triggers dom rerender", "d": "9/2015"}, {"body": "ping rwjblue going make", "d": "9/2015"}, {"body": "pr less work initial render removes double looping removes cases", "d": "9/2015"}, {"body": "also note emberperformance suite used numbers suffers issue causes embermetal debug build ember created issue track makes comparisons using emberperformance ember versions bit since includes etc statements", "d": "9/2015"}, {"body": "pr update emberperformance tests work gathered raw caveat data spreadsheet", "d": "9/2015"}, {"body": "quick numbers performance test closed", "d": "9/2015"}, {"body": "issue ember component like interestingly attributebinding breaks event handlers eg never fires removing makes events work", "d": "9/2015"}, {"body": "ah get happening make sure nt related concatenatedproperties bug resolved upgraded problem attributebind overrides unique id added presumably binding event handlers workaround relevant issue", "d": "9/2015"}, {"body": "demo jsbin seems working properly branch", "d": "9/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "fix able bind seems break event handlers eg click handler try adding click handler example eg alert notice nt fire attributebindings includes drop try change css styling target class instead id could still see square notice handler works", "d": "9/2015"}, {"body": "think one closed", "d": "9/2015"}, {"body": "woo skeate smile", "d": "9/2015"}, {"body": "issue ever find solution", "d": "9/2015"}, {"body": "would go something like want render error template errors get white screen", "d": "9/2015"}, {"body": "heading away unable look detail given problem fires looks like ember data error suspect unrelated report", "d": "9/2015"}, {"body": "also ran issue safari accidentally defined property twice model get error browser took tweaking code get appear initially failed silently", "d": "9/2015"}, {"body": "runspired thanks workaround used application didtransition hook coffeescript route emberrouteextend actions didtransition gt emberrunschedule afterrender gt formattitle formattitle gt urlsplit windowlocationhrefsplit", "d": "9/2015"}, {"body": "see also", "d": "9/2015"}, {"body": "final workaround code allow components passed data different property keys controller instance controller property data wants use model router property key matter component need fixed property key always used controller foo instead dynamically find would really prefer ember support internally controllers components", "d": "9/2015"}, {"body": "please provide jsbin demo workaround disabled enabled", "d": "9/2015"}, {"body": "lolmaus jsbin demo", "d": "9/2015"}, {"body": "awesome looks like generalized addon", "d": "9/2015"}, {"body": "rwjblue henrymazza much thought think incorporated actions better ember based code trying make party libs events easy possible use often see attempts emulating actions via events coming party components nt break jquery based eventing semantics given prevalent", "d": "9/2015"}, {"body": "knownasilya rebase hope alright liked documentation provided mixonic nt know mergedproperties feature crystal clear reading", "d": "9/2015"}, {"body": "triplecurly use discouraged prototypal training team recent emberjs training session chicago may still need helper", "d": "9/2015"}, {"body": "internal helper think would generally someone wanted document feature flag exposing public api", "d": "9/2015"}, {"body": "rolling custom helper also quite trivial", "d": "9/2015"}, {"body": "course done strikes one things everyone anyway maybe framework default", "d": "9/2015"}, {"body": "everyone definitely nt believe needed yet example even everyone needed need make nice addon share wink", "d": "9/2015"}, {"body": "decorators spec stable enough rwjblue project great step right direction classes decorators builtin ember would dramatically improve developer experiences mention morale", "d": "9/2015"}, {"body": "anywhere ember guides api difference explained ca nt seem find sort entry", "d": "9/2015"}, {"body": "kurtrmueller try googling without mentioning ember tons info", "d": "9/2015"}, {"body": "guess demo app pretty important case stuck problem getting facebook see meta tags head change dynamically go new news item got al working noticed idd fb run javascript defaults standard og description etc kinda stuck probably looking something like working demo would come handy", "d": "9/2015"}, {"body": "wwwprerenderio combined help waiting fastboot land packages feature demos enough help way", "d": "9/2015"}, {"body": "add duizendnegen suggestion embercli heroku buildpack supports prerenderio config current setup works fine still ca nt wait fastboot though", "d": "9/2015"}, {"body": "duizendnegen dankjewel defiantly help way find prerenderio already setting test docker ill post findings someone wants use docker setup flow", "d": "9/2015"}, {"body": "let us know", "d": "9/2015"}, {"body": "unfortunate bug user expects work spend much time tracking issue", "d": "9/2015"}, {"body": "knownasilya paste sample code qpcp properties", "d": "9/2015"}, {"body": "machty sure exactly case working", "d": "9/2015"}, {"body": "closing recursion removed", "d": "9/2015"}, {"body": "solution skoryky nt work wrap refresh emberrunonce avoid transitionaborted error js router code actions queryparamsdidchange function emberrunonce thisrefresh", "d": "9/2015"}, {"body": "skoryky workaround worked ember thanks guys", "d": "9/2015"}, {"body": "update even changing value controller url updates couple ms goes back old value even controller new value variable", "d": "9/2015"}, {"body": "case anyone find via google issue basically solved edge case remain query param nt set controller serialize var animalscontroller embercontrollerextend queryparams mycat mycat null deliberately set illustrate issue export default animalscontroller", "d": "9/2015"}, {"body": "definitely fixed new similar memory leak arisen symptoms similar yogananthan including leaked dom trees proportional size templates involved github demo follow readmemd setup instructions checkout commit watch leak big component every transition stackoverflow post encouraged post instead", "d": "9/2015"}, {"body": "arthare open new issue sure test latest also", "d": "9/2015"}, {"body": "k", "d": "9/2015"}, {"body": "updated fixed guess", "d": "9/2015"}, {"body": "fixed arthare", "d": "9/2015"}, {"body": "issue using ember including id dynamic route linkto call solved eg linkto homeindex id tagname li", "d": "9/2015"}, {"body": "alexzielenski example fix nginx", "d": "9/2015"}, {"body": "joshuairl sorry two years ago nt remember though judging response seems nt touch nginx config instead defined resource paths forwards slash prefix instead used", "d": "9/2015"}, {"body": "lol issue horrid deploying cap nt include dist directory commit horrible sent iphone sep pm alex zielenski notifications githubcom wrote joshuairl sorry two years ago nt remember though judging response seems nt touch nginx config instead defined resource paths forwards slash prefix instead used reply email directly view github", "d": "9/2015"}, {"body": "hot css loading well weppack", "d": "9/2015"}, {"body": "css reloading already possible", "d": "9/2015"}, {"body": "requirejs amd reload anything js css html part point requirejs easily asynchronously load files anytime development", "d": "9/2015"}, {"body": "views gone new ember way", "d": "9/2015"}, {"body": "implementation missing embercomputeddynamicalias", "d": "9/2015"}]