[{"title": "svg tag incorrectly converted unless inside", "body": "vuejs version reproduction link steps reproduce use multiple components define svg drawing include element one components include tag expected image correctly draw actually happening image appear seems vue replacing element unclosed element attributes happens even element inside recognized svg tag eg template situation happen inside element environments use case electron causes issues since valid svg element dom autoclose containing svg tags opening also cause fail since longer element defined instead text node containing trailing whitespace template workaround wrapping element directly element wherever appears however unexpected would required forces odd contortions compared using unwrapped tag eg attributes need appear tag instead tag attributes need appear", "num": "3197", "d": "6/2016"}, {"title": "item shorthand item item", "body": "many times using something like would useful feasible shorthand", "num": "3196", "d": "6/2016"}, {"title": "xlink href svg disappear bug", "body": "vuejs version reproduction link steps reproduce load page soon vue activated arrowdown svg icon inside disappears expected expect icon remain behaviour correct browsers chrome edge firefox actually happening icon xlink href svg icon vue trying te rerender reason fails know ugly workaround however required render xlink href svg source html sdffsdfsd counter hallo new windowvue el site data function return counter button position relative paddingright svg height width fill currentcolor position absolute right top webkittransform translatey mstransform translatey transform translatey", "num": "3195", "d": "6/2016"}, {"title": "input value changes jq code vmodel variable nt changes", "body": "html vuemodel value input value changed model value nt changed model value auto updated js code change input value js new vue data value one el vue settimeout function input val two run code", "num": "3194", "d": "6/2016"}, {"title": "vmodel value nt change select value jqueryui", "body": "two select display select created jqueryui real select hidden jqueryui problem bind real select display select change real select value also change see console value nt change force show real select change value mouse value change work select jqueryui", "num": "3192", "d": "6/2016"}, {"title": "bug", "body": "vuejs version reproduction link steps reproduce click get button expected js error actually happening consoleerror vue warn msg vm formatcomponentname vm vuejs line typeerror valueindexof function optionselected valueindexof getvalue option gt", "num": "3191", "d": "6/2016"}, {"title": "vfor make browser stack overflow", "body": "vuejs version gt reproduction link open demo link click show button see browser stops working use code ok", "num": "3190", "d": "6/2016"}, {"title": "let vue dontt warm unknown custom element", "body": "component use custom element making wo nt effected style vue always warm unknown custom element ignore without runing", "num": "3189", "d": "6/2016"}, {"title": "propssync invalid", "body": "parent data nt defined mprop run thismpropxxxx parent run thispropxxxx child sync invalid \u61c2\u4e2d\u6587\u7684\u8fd8\u662f\u7528\u4e2d\u6587\u56de\u6211\u5427", "num": "3188", "d": "6/2016"}, {"title": "ca nt process prop single letter", "body": "vuejs version reproduction link steps reproduce use hyphenated prop single letter eg testprop demo way get prop child component expected way get hyphenated prop single letter actually happening prop like testprop get testprop get testprop amp function langjs update fix case", "num": "3187", "d": "6/2016"}, {"title": "click method variable unable invoked table tag td", "body": "", "num": "3186", "d": "6/2016"}, {"title": "vue webpack hot reload", "body": "vuejs version reproduction link steps reproduce clone repo npm install npm run dev updating component trigger webpack hot reload update component click another view back updated expected hot reload component actually happening web pack push happening components update live require manual reload extra originally using template provided time working original vue version npm auto downloads sure would anything", "num": "3185", "d": "6/2016"}, {"title": "vpre textarea breaks sometimes", "body": "vuejs version reproduction link expected textareas text inside actually happening first textarea text second textarea empty literal attribute", "num": "3184", "d": "6/2016"}, {"title": "props validation fails vue warn component initialized proper propsdata", "body": "made universal component modal used inline component via service works fine warns invalid props runs step propsdata used later step compilepropsjs think propsdata also source validation along element attributes version jsfilddle see console version problem", "num": "3183", "d": "6/2016"}, {"title": "image upload", "body": "please ignore", "num": "3182", "d": "6/2016"}, {"title": "parse dom string component", "body": "", "num": "3180", "d": "6/2016"}, {"title": "using vmodel component element prop always string", "body": "vuejs version reproduction link steps reproduce open console read warning expected special value prop passed component element template shuold contain boolean value since parent passes boolean actually happening suspicion think something whith comment", "num": "3179", "d": "6/2016"}, {"title": "bug", "body": "worked sucessful chrome firefox failed remove tabletd directive worked successful also bug entry key vuedirective tabletd function value var entry valueentry var el thisel elinnerhtml entryname new vue el demo data gridcolumns name power griddata name chuck norris power infinity name bruce lee power name jackie chan power name jet li power", "num": "3178", "d": "6/2016"}, {"title": "vuejs bug", "body": "vuejs version vuejs reproduction link steps reproduce define empty arr define element element leave blank space assign arr data expected actually happening", "num": "3176", "d": "6/2016"}, {"title": "vue watch objectassign", "body": "code first question equal emit vue watch second question watch object inner key add new key also emit vue watch thanks html date javascript new vue el editor data commentslist ready const comments title content title content", "num": "3175", "d": "6/2016"}, {"title": "import paperscript", "body": "import paperscript vue thanks lot paper use example create paperjs path draw line var path new path give stroke color pathstrokecolor black var start new point move start draw line pathmoveto start note plus operator point objects paperscript us much pathlineto start", "num": "3174", "d": "6/2016"}, {"title": "update vuejs model value jquery trigger take effect", "body": "vuejs version reproduction link steps reproduce update select dom value jquery vmodel take effect expected actually happening", "num": "3173", "d": "6/2016"}, {"title": "establish consistent naming convention hooks vue", "body": "lifecycle methods transition system prefixes camelcase seem preferred instead consistency also probably accessible vue nonnative english speakers perhaps renamed", "num": "3172", "d": "6/2016"}, {"title": "feature allow binding via vtext content script tag", "body": "support jsonld based microdata would nice able set content script tag use case using vuejs render breadcrumb microdata example working tag example jsonld google docs breadcrumbs microdata html context type breadcrumblist itemlistelement type listitem position item id name books image type listitem position item id name authors image type listitem position item id name ann leckie image type listitem position item id name ancillary justice image", "num": "3171", "d": "6/2016"}, {"title": "tab key nt work", "body": "hi using problem calling tab key event keyup works keys tab key code nt call event handler please take look one thanks", "num": "3170", "d": "6/2016"}, {"title": "components registered locally parent set", "body": "create toplevel component registers one multiple components locally property set localcomponents nt seem instance set created small fiddle demonstrate problem see count dispatched message received missing something", "num": "3169", "d": "6/2016"}, {"title": "child component lifecycle fired", "body": "alert fired import component parent", "num": "3167", "d": "6/2016"}, {"title": "bug audio tag src disappeared", "body": "bug complex nt know project work well use today update found strange problem try many times sure bug existence know easy reproduce try write jsfiddle demo show thanks", "num": "3166", "d": "6/2016"}, {"title": "change work using vue jquery", "body": "use pick item variable changed see hidden input method b wo nt run new vue data methods b function consolelog", "num": "3165", "d": "6/2016"}, {"title": "child component getting registered global component", "body": "dont know missing something following code working let nav vueextend template require templatesnavnavhtml components item name item template require templatesnavitemhtml vuecomponent nav nav says vue", "num": "3164", "d": "6/2016"}, {"title": "make nest components", "body": "want collapse collapseitem vue working right way fix", "num": "3163", "d": "6/2016"}, {"title": "", "body": "\u6bd4\u5982 \u8fc7\u4e00\u4f1a\u8fd9\u4e2a\u503c\u53d8\u6210", "num": "3162", "d": "6/2016"}, {"title": "referencing dynamically created components", "body": "idea reference dynamically created components components created based json tree object inner object unique ids want way associate ids components imagine category within another category nt know exact number therefore need reference component id possible way", "num": "3161", "d": "6/2016"}, {"title": "global variable without reactivity", "body": "sometimes need define global variable data share vue method always define kind variable vue property according understanding variable defined property converted reactive variable ui render scenario variable data share related ui method define global variable without reactivity vue example export default data return selecteditem mothods chooseitem item thisselecteditem item never used render ui define", "num": "3160", "d": "6/2016"}, {"title": "read property removechild null", "body": "vuejs version steps reproduce jsfiddle description app use render list attribute insert duplicate value error occurred trying replace array new objects", "num": "3159", "d": "6/2016"}, {"title": "init lifecycle hook renamed beforecreate consistency increased clarity", "body": "new lifecycle hooks natural pairs exception name also cause confusion nothing actually initialized point lifecycle resolve issues thinking renaming thoughts", "num": "3158", "d": "6/2016"}, {"title": "broken global transitions", "body": "option effect transitions globally registered work fine inline transition objects though repro", "num": "3157", "d": "6/2016"}, {"title": "uncaught error transition", "body": "use vuerouter using back button would error scene example url url become click back data page rendered reported", "num": "3156", "d": "6/2016"}, {"title": "vonce vfor nt seem play nice together", "body": "vuejs version reproduction link steps reproduce run fiddle expected iterated item type displayed actually happening items lost returns look deeper could give hint clarify expected behavior somehow would great", "num": "3155", "d": "6/2016"}, {"title": "link image", "body": "", "num": "3154", "d": "6/2016"}, {"title": "add server side render example vue", "body": "please add server side render example version express koa plain http server docs introduce amp last date", "num": "3153", "d": "6/2016"}, {"title": "resolve module sassloader set style lang scss", "body": "resolve module sassloader set style lang scss thought two different things", "num": "3152", "d": "6/2016"}, {"title": "add classes logic methods section", "body": "vuejs methods united methods section uneasily methods one component divide methods implements classes example", "num": "3151", "d": "6/2016"}, {"title": "vmodel\u7528\u5728select\u4e0a\u9020\u6210\u9875\u9762\u5047\u6b7b", "body": "\u7cfb\u7edf mac \u6d4f\u89c8\u5668 chrome bug\u63cf\u8ff0 \u5f53\u67d0\u4e2a\u9875\u9762\u7684vmodel\u7528\u5728select\u4e0a \u76f4\u63a5\u6253\u5f00\u8fd9\u4e2a\u9875\u9762 \u4e0d\u4f1a\u6709\u95ee\u9898 \u4f46\u662f\u4ece\u5176\u4ed6\u9875\u9762\u8df3\u8f6c\u5230\u8fd9\u4e2a\u9875\u9762 \u5219\u51fa\u73b0\u6d4f\u89c8\u5668\u5047\u6b7b\u5d29\u6e83", "num": "3150", "d": "6/2016"}, {"title": "dynamic components question", "body": "like app javascript new vue el app data cartdata currentview home components order order orderdetail orderdetail cart cart var order vuecomponent order props cartdata var cart vuecomponent usercart props cartdata var orderdetail vuecomponent orderdetail props cartdata html file question give prop components thank", "num": "3148", "d": "6/2016"}, {"title": "request nt traverse frozen objects", "body": "application stores large number plain objects array using prevent vue making items array reactive whenever replace array new frozen array vue tries traverse items anyway since array reactive property parent object believe traversal caused following able fix problem adding line immediately inside isa iso objectisextensible val return addition valob var depid valobdepid comparing js profiles withwithout line gives dramatic increase speed since frozen wo nt getters anyway look instead maintaining fork wanted see reason nt added core", "num": "3147", "d": "6/2016"}, {"title": "watch global variable update", "body": "graph want dynamically show id user selection node graphics implemented based user click set windowcurrentnode user selected node set data vue component see windowcurrentnode changed vue component updated someone point wrong thanks much john", "num": "3146", "d": "6/2016"}, {"title": "vshowvif nt work property name starts underscore", "body": "vuejs version reproduction link steps reproduce click toggle button show elements expected vshowvif work regardless whether property starts underscore ca nt find mention docs prohibition use variables underscore beginnin nt know behavior actually bug feature actually happening vshowvif ignores properties names starts underscore", "num": "3145", "d": "6/2016"}, {"title": "vue component refer vueify dev environment", "body": "hi followed example nesting tree component vueify dev manner unfortunately vuejs always complain let recurs tree item component accessible within component itemvue file component defination modelname open itemvue import item itemvue export default props model data function return open false components item computed isfolder function return thismodelchildren amp amp thismodelchildrenlength methods toggle function thisisfolder thisopen thisopen changetype function thisisfolder vueset thismodel children thisaddchild thisopen true addchild function thismodelchildrenpush name new stuff root vue instance init root html", "num": "3144", "d": "6/2016"}, {"title": "tell author fails system karma start configkarmaconfjs", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "3143", "d": "6/2016"}, {"title": "page component watch throw error whole vue hung", "body": "page component watch throw error whole vue hung reproduce scene", "num": "3142", "d": "6/2016"}, {"title": "vue text input number modifier displays nan value", "body": "vuejs version nt checked previous releases reproduction link steps reproduce type letter input field expected nt display nan value", "num": "3140", "d": "6/2016"}, {"title": "vue updating data click event depending browser", "body": "vuejs version reproduction link steps reproduce chromefirefox behave one way ie behave different way chromefirefox click check box changing false true state vue update rowselected value true click event ie click check box changing false true state vue update rowselected value true click event thing going true false states", "num": "3139", "d": "6/2016"}, {"title": "\u591a\u4e2a\u540c\u540d vue hot reload \u5c06\u4ea7\u751f\u9519\u8bef", "body": "vuejs version reproduction link happening \u82e5\u5728\u9875\u9762\u4e2d\u5f15\u5165\u4e24\u4e2a\u540c\u540d\u7684 vue \u7136\u540e\u901a\u8fc7 webpackhotmiddleware \u548c webpackdevmiddleware \u914d\u7f6e hot reload hot header \u4e5f\u4f1a\u88ab\u52a0\u8f7d\u4e3a \u6211\u5c1d\u8bd5\u4fee\u6539\u5176\u4e2d\u7684\u67d0\u4e2a\u6587\u4ef6\u540d\u4e3a reload", "num": "3138", "d": "6/2016"}, {"title": "template syntax error avoid using javascript keyword property name", "body": "template syntax error contains javascript keyword vuejs version steps reproduce use expected works normal actually happening", "num": "3137", "d": "6/2016"}, {"title": "null prop value interpreted value rather null meaning default isnt used", "body": "hi vuejs version reproduction link break occurred upgrading worked expect happening previously defining prop value component either json object null depending whether defined case prop value null vue would default using defined prop default component rather explicitly null however opposite happening null sent prop value prop value remains null rather recognised null loading default value sure intended change thought id highlight broke app cheers lee", "num": "3135", "d": "6/2016"}, {"title": "version use activate make browser stack overflow", "body": "vuejs version reproduction link destroy project complicated demo multiple occurrences problem version know bug problem appears", "num": "3134", "d": "6/2016"}, {"title": "multiple vue instance bug", "body": "vuejs version vuejs reproduction link steps reproduce first read barcarlog assign barcarlog baoma expected foo object update actually happening foo object also updated", "num": "3133", "d": "6/2016"}, {"title": "pass adapted data parent component child component", "body": "hi playing vuejs serval time question discuess due single data flow design philosophy directly passing reference data child component props good practice everything become easy child component manage parent datastate second way adapt data parent component child component example got child component prop named info requires data like name test age class parent component pass data like singlename test singleage class computed property work reference object elegant way manage nt want use custom event deconstruct data three prop name age class", "num": "3132", "d": "6/2016"}, {"title": "get one element vuenexttick pushing items binding array", "body": "vue version want use zeroclipboard lib vue get issue got three items asychronous http request push bingding array named secrets follow vuenexttick callback get one element get three elements html js var app new vue el appversionsecrets data secrets ready function var self secrets secretsforeach function item var secret new secret itemname itemvalue itemenabled selfsecretspush secret consolelog selfsecretslength vuenexttick function zeroclipboardconfig swfpath zeroclipboardswf", "num": "3112", "d": "6/2016"}, {"title": "export defalut function ca nt work", "body": "component function named foo another component use component import foo like foo get error console warnnings read property el undefined create record hot module keeps track construcotr instnaces views component directives routerviews param string id param object options exportscreaterecord function id options typeof options function options optionsoptions typeof optionsel string amp amp typeof optionsdata object makeoptionshot id options map id component null views instances support options function still get optionsel optionsdata nt support function first", "num": "3111", "d": "6/2016"}, {"title": "vshow warn used template tag", "body": "noticed nt revising docs sure worth throwing warning", "num": "3110", "d": "6/2016"}, {"title": "style work using sass npm run build", "body": "vue chinese post inputstyle display inlineblock padding lineheight fontsize border solid fff boxshadow borderradius color textalign right use", "num": "3109", "d": "6/2016"}, {"title": "transition freezing browser", "body": "vuejs version steps reproduce install vuejs install vuerouter create main app component routerview create transition used fade one opacity set transitionmode outin happen inout create new components switch expected fade component actually happening started notice upgraded yesterday sudden would click different views spa chrome tab would freeze much deliberation determined transitionmode outin remove transitions change inout would completely stop using hackernews vuerouter example set vuejs version sudden worked transitionmode outin slowly upgraded vuejs version checking everything every version worked got one thing noticed would go immediate freeze intermittent removed vmodel tag", "num": "3108", "d": "6/2016"}, {"title": "dynamically create modal notification", "body": "use wepack vueloader development project sometimes want create modal button modal must inserted body component best practice solution", "num": "3107", "d": "6/2016"}, {"title": "vif velse working table dynamically created td", "body": "hi beginner vuejs nt seem work properly guessing might bug created table predefined td like example everything works fine instead taking prop name value vegeta shows vif prince vegeta text however moment dynamically try create multiple td using second vfor tag velse td seems break although td vif statement works td velse nt display data array anymore see example bug stuff totally wrong googled check issues could nt fine answer created issue edit using version vue", "num": "3106", "d": "6/2016"}, {"title": "vel specified dom referred owner component vm els", "body": "hi according vuejs documentation vel give great way refer dom use vel someid works root vm available parent component vm instance code code root vm access slot wrapped comp component via vm elscouldnotavialbleincomp comp vm instance accessed bug something wrong", "num": "3105", "d": "6/2016"}, {"title": "select vmodel stuck endless loop", "body": "hi came across something weird upgrading latest release tried everything nt able reproduce jsfiddle sorry problem vmodel select element reason app gets stuck loop paginate page select tag vmodel snooped around vue source found problem lies line handle vmodel select initial value edge cases ie fix commit link comment line return nexttick thisforceupdate commit everything works smoothly using vueify vuerouter vueresource vuejs version reproduction link nt able reproduce", "num": "3104", "d": "6/2016"}, {"title": "anyway slot support vbind name", "body": "like title slot work vbind name anyway html use vbind work anyway", "num": "3103", "d": "6/2016"}, {"title": "vmdataprop \u884c\u4e3a\u6709\u70b9\u5947\u602a", "body": "vuejs version reproduction link demo steps reproduce press reset button expected alert actually happening alert test", "num": "3100", "d": "6/2016"}, {"title": "use vdata prefix special attributes like key transition ref", "body": "scanning vue template find vue specific attributes easier scan identify usually follow prefix always irked used place able memorize single exception special attributes believe better special prefix know long discussions binding syntax surpassed multiple issues prefix used propose using prefix attributes looks long use shorthand example snippet html", "num": "3099", "d": "6/2016"}, {"title": "custom events", "body": "vuejs version reproduction link steps reproduce press dispatch event button expected alert handled actually happening alert handleit run change back behaves expected", "num": "3098", "d": "6/2016"}, {"title": "call phone click element", "body": "hi try use vuejs render code seems like trigger", "num": "3096", "d": "6/2016"}, {"title": "vfor\u91cd\u590d\u6e32\u67d3\u5927\u91cf\u6570\u636e\u6027\u80fd\u95ee\u9898", "body": "", "num": "3095", "d": "6/2016"}, {"title": "template option work vueify dev environment", "body": "hi trying use vue component follows define vue component vue file component template refer backend rendered html referred component defination via template option component inserted html delivered backend issue seems template option work case following code fragment html scanned compiled vue complains follows give clue whether bug", "num": "3094", "d": "6/2016"}, {"title": "select option dom nt change change option data pure", "body": "vuejs version reproduction link expected two selects select first one want second one update dates immediately actually happening browsers nothing wrong pure change first select second select option dom update", "num": "3093", "d": "6/2016"}, {"title": "docs", "body": "x full change log x upgrade guide x update vuejsorg reflect changes x highlevel guide using x documentation package x highlevel guide using ssr x documentation package x vuerouter docs x vuex docs", "num": "3092", "d": "6/2016"}, {"title": "maybe bug", "body": "vue srccompilererrordetectorjs define regexp type const test string like value return false raise error", "num": "3091", "d": "6/2016"}, {"title": "ignore custom html components", "body": "searching web think hopefully answer set ui framework uses custom html tags css nt vue attached would like vue ignore nt skip lines warnings debug console possible create empty component one", "num": "3090", "d": "6/2016"}, {"title": "page jump", "body": "submit request page login see response network page jump login query parameters including account password idea danger", "num": "3089", "d": "6/2016"}, {"title": "vuemixin change computed", "body": "use version want wirte plugin may use vuemixin way implement localstoragegetitem localstoragesetitem want localstoragexxx responsive view like cachejs computed databut response", "num": "3088", "d": "6/2016"}, {"title": "one nested loop outer loop inner loopboth two different json object loophow get index value outer loop inner loop", "body": "one nested loop outer loop inner loopboth two different json object loophow get index value outer loop inner loop nested loop two vforsouter loop one json object inner loop another json objectbecause loop json object ca nt alias name index use index outer inner loopit leads name index loops ca nt get index outer loop innerloop var vm new vue el selectcontainer data dataobject aa ee ff bb cc dd cc result \u5185\u5c42\u5faa\u73af\u7d22\u5f15\u503c inner loop index value \u5916\u5c42\u5faa\u73af\u7d22\u5f15\u503c outer loop index value \u5185\u5c42\u5faa\u73af\u7d22\u5f15\u503c inner loop index value \u5916\u5c42\u5faa\u73af\u7d22\u5f15\u503c outer loop index value \u5185\u5c42\u5faa\u73af\u7d22\u5f15\u503c inner loop index value \u5916\u5c42\u5faa\u73af\u7d22\u5f15\u503c outer loop index value \u5185\u5c42\u5faa\u73af\u7d22\u5f15\u503c inner loop index value \u5916\u5c42\u5faa\u73af\u7d22\u5f15\u503c outer loop index value get index outer loop value number one inner loop wo nt get different index value loop want ask get correct index value outer loop inner loop", "num": "3087", "d": "6/2016"}, {"title": "sometime need force update eg use filter momentformnow format time", "body": "find optimal way solution filter dataalarms force update bad implementation", "num": "3086", "d": "6/2016"}, {"title": "bind name child component parent component", "body": "define variable switcher component use attach switcher parent", "num": "3085", "d": "6/2016"}, {"title": "error evaluating expression occurs ie browser", "body": "error evaluating expression ietesthtmltxt", "num": "3084", "d": "6/2016"}, {"title": "get parent component props", "body": "get component npm raw html tags cause try define component inside want get isopened props", "num": "3083", "d": "6/2016"}, {"title": "ignoring reactivity certain data properties", "body": "imagine within component got property references jquery selector pluginin case use jquery datatable initializationconfiguration plugin done within components saves state plugin local property vuejs magic see property modified vue js extra getters setters set etc cases would like tell vue js ignore reactivity property essentially extra stuff necessary cases", "num": "3082", "d": "6/2016"}, {"title": "possible bug vif transitions duplicating component", "body": "tried posting vue discussion forum first never got confirmation email whipped demo showing problem vue click login open component click close toggle wo nt actually toggle click close duplicate toggle make new component saw simmilar issue sure duplicate caused misnamed transition rather fixing name prevents duplication happening bug reason behavior odd bug track expected complicated simple typo eventually found", "num": "3080", "d": "6/2016"}, {"title": "rangeerror form method post", "body": "reported simple app html vuecomponent app template new vue el body throws changing form method something input name something seems work fine", "num": "3079", "d": "6/2016"}, {"title": "serverside rendering vtext vhtml nt work well", "body": "hi try use rendertostring elements vtext vhtml nt work well code reproduce javascript import vue vuedistvuecommonjs import compiletofunctions vuepackagesvuetemplatecompiler import createrenderer vuepackagesvueserverrenderer const rendertostring createrenderer let compiletemplate options gt const res compiletofunctions optionstemplate preservewhitespace false objectassign options res consoleassert typeof optionsrender function delete optionstemplate return options let foo vueextend compiletemplate template data function return text foobar rendertostring new vue compiletemplate template components foo foo err res gt consolelog res output bug feature seems resolved fix good send pullrequest", "num": "3078", "d": "6/2016"}, {"title": "selected status select element set selected option removed", "body": "hello sure bug found behavior application unfortunately legacy application rendered server vue attributes attached via jquery onload event reason render whole select element vue repeater one vue computed variable removes active selectbox option another select select trigger changed event second computed variable get recalculated replicated behavior following jsfidle try switch second select box option switch first one second checkbox second option use watcher enable checkbox right however switch first select box option get removed second select box correctly selection changed unfortunatelly second model observer triggered checkbox stays enabled incorrect mistaken use vue bug", "num": "3076", "d": "6/2016"}, {"title": "documentation htmlnumbers instead symbols", "body": "documentation code intags shows instead problem appears everywhere see ie", "num": "3075", "d": "6/2016"}, {"title": "update loop syntax arrays objects deprecate index key", "body": "deprecating deprecated favor explicit named indices keys syntax bit magical limitations nested loops bonus two fewer points syntax newcomers learn new array syntax switched order arguments consistent javascript new object syntax switched order arguments partly consistent many common object iterators lodash index available object iteration visual purposes table striping", "num": "3073", "d": "6/2016"}, {"title": "array primitive values nt binded", "body": "vuejs version reproduction link example example steps reproduce click buttons modify array booleans expected reactive data updated actually happening data nt updated seems vue nt changind reactive data arrays primitive data booleans case array defined like wo nt updated workaround case use like nt bug mentioned docs", "num": "3072", "d": "6/2016"}, {"title": "possible regression changing property prop arrays objects render", "body": "reproduced situation passing computed array objects prop child component trying change property prop yield render update latest version version clicking button name changed test version clicking button data updated change rendered could never worked wrong way apologies", "num": "3071", "d": "6/2016"}, {"title": "\u5173\u4e8e error evaluating expressio \u7684\u95ee\u9898", "body": "\u5f53\u4ee3\u7801\u91cc\u62a5\u4e86\u5f88\u591a\u8fd9\u4e2a\u9519\u8bef\u4ee5\u53ca\u9891\u7e41\u8bbe\u7f6enonexistent path vm \u5728 mac \u7684 chrome google chrome helper g \u4e0b\u9762\u8d34\u4e0a\u4e00\u4e9b\u62a5\u9519\u4ee5\u53ca\u6d3b\u52a8\u76d1\u89c6\u5668 \u7684\u622a\u56fe help", "num": "3070", "d": "6/2016"}, {"title": "twoway bind always tip error", "body": "use twoway bind compontent always tip error vue warn prop value expects twoway binding type use valuesync run try set type", "num": "3068", "d": "6/2016"}, {"title": "vue compontent export complite scope object", "body": "use vue write many compontent vue use compontent repeat like vfor doest way get root compile scope get compile scope value must define props whether vue export compile scope get root scope", "num": "3067", "d": "6/2016"}, {"title": "use vbind obj", "body": "api document two question first use last note mode class style support array objects sentence document wrong example", "num": "3065", "d": "6/2016"}, {"title": "multiline html interpolation fails", "body": "minimal viable example huge deal often preferable since preformatted text would preserve line breaks beginning end code block", "num": "3062", "d": "6/2016"}, {"title": "server render rendertostream", "body": "hi try use rendertostring rendertostream works well nt know deal backend template rendertostream better performance rendertostring component real application seems easy apply existed framework express hope example show us use rendertostream real", "num": "3061", "d": "6/2016"}, {"title": "update cdn links latest pinned versions", "body": "since jsdelivr latest alpha branch repos referencing cdn links jsfiddles containing links updated pinned versions jsfiddles also referencing versions vue nt appropriate fixed necessary updates include x jsfiddle links x jsdelivr links may even ideal jsfiddles strategy similar code contents directly embedded url way linked code examples could kept version control programmatically updated appropriate versions vue testing bit nt able get working jsfiddle sponsors maybe could ask", "num": "3060", "d": "6/2016"}, {"title": "", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "3059", "d": "6/2016"}, {"title": "add alias vmodel", "body": "please add alias vmodel like click bind suggestion example", "num": "3058", "d": "6/2016"}, {"title": "insert template nested component", "body": "hey guys new vuejs english poor hope see want express okay department tree use official render ityeah work welland got users information backend vueresource want render users information department item clickedhere goal code treeviewvue users information template like insert users information template department item dynamically better ways achieve thanks", "num": "3057", "d": "6/2016"}, {"title": "view nt update model update", "body": "vuejs version reproduction link steps reproduce check first checkbox left table check first checkbox right table expected expect generate result two version check first check box right table checkbox bellow checked actually happening generates different results two version try version check first checkbox right checkbox bellow checked expect", "num": "3055", "d": "6/2016"}, {"title": "bug inline templates", "body": "vuejs version reproduction link steps reproduce click toggle expected true displayed bold actually happening uncaught typeerror read property null note remove element works correctly problem nested nodes inside vif inline templates", "num": "3054", "d": "6/2016"}, {"title": "nested components tree structure communication problem", "body": "got json data structure represents file system root folder nested folders folders inside nested folder limitation depth folder vue example structure want help issue face lt li class gt lt span class active selected click select class gt lt span classtitle gt modelfoldername lt span gt lt span gt lt ul styledisplay block gt lt item vfor model modelfolders model model gt lt item gt lt ul gt lt li gt want able select folder components change active state remove active class one folder selected tried dispatch broadcast doesnt inform component change happened basically need inform component change folder component clicked way", "num": "3052", "d": "6/2016"}, {"title": "feature chain event listeners html", "body": "would make sense chain event listeners associated expression evaluated whole group events occurs sure much good idea useful would people see several cases could applied seems code could become cleaner simpler maintain basic syntax could including ideas may flawed chaining events symbol could used instead easier see shorter syntax multiple modifiers event type events triggered user releases least one keys presses completely related issue thought would make sense include multiple event groups issue event group fires happen ones match current state maybe nt run default presence new modifier eg could even another symbol like negation operator one could use benefits questionable complexity probably better judge hope ideas useful way even spark thanks attention", "num": "3051", "d": "6/2016"}, {"title": "feature mouse event listener modifiers", "body": "first like thank everyone contributed absolutely wonderful library reading docs key modifiers example wondering would worth kind thing mouse buttons would make handling much simpler since events available left button default would ones well without need repetitive checking js code instance say hello bye draggable possible downside guess would become synonym nt sound bad viable thanks advance", "num": "3050", "d": "6/2016"}, {"title": "editing dom inside vue instance devtools stops vue binding altogether", "body": "steps reproduce open devtools traverse edit html add something anywhere inside counter stops", "num": "3049", "d": "6/2016"}, {"title": "existing class removed", "body": "vuejs version reproduction link example using working expected example using working expected steps reproduce add class element also binding toggle class expected class removed actually happening class remains div", "num": "3048", "d": "6/2016"}, {"title": "reuse component template without globally registering", "body": "would like declare component reuse template self contained json treeview right way found register globally want supposed loaded dynamically something like exist way", "num": "3047", "d": "6/2016"}, {"title": "vhtml scoped css feature", "body": "want render html server like scoped css style defined available div content element like html sysc show sth cool build setup install dependencies npm install serve hot reload npm run dev build production minification npm run build run unit tests npm run unit run tests npm run run tests npm test detailed explanation things work checkout guide docs vueloader think write render html sysc show sth cool build setup install dependencies npm install serve hot reload npm run dev build production minification npm run build run unit tests npm run unit run tests npm run run tests npm test detailed explanation things work checkout guide docs vueloader wish u add feature", "num": "3045", "d": "6/2016"}, {"title": "vuejs flex bug", "body": "got problem vuejs using code html html js run got element like html ios right android browser broken like html want get prefixed properties sorry english poor", "num": "3044", "d": "6/2016"}, {"title": "tree example bug", "body": "well know issue repeat want report issue note today new distvuejs file releases updated project get error code execute push operating vue warn error component render found component warn vue warn error failed execute insertbefore node node new node inserted child node found issue search found tree example still bug hope infomation useful fix thanks", "num": "3043", "d": "6/2016"}, {"title": "transition exception vuerouter keepalive hotreload", "body": "every vue seems break hotreloading vuerouter keepalive routes error uncaught typeerror read property vtrans null digging looks like vm el empty insert function null passed crashes applytransition callstack follows javascript function applytransition el direction op vm cb el null direction op vm vuecomponent router router el null parent null root null children cb undefined var transition elvtrans function beforewithtransition el target vm cb applytransition el function use transitions yet idea might happens switch routes hotreloading changes", "num": "3042", "d": "6/2016"}, {"title": "issue nested vfor loop", "body": "hello nt know bug unfortunately nobody could help items click one call method display content vif property nested vfor works well first time next get message uncaught typeerror read property raw undefined basically want display current content click item hide others playing visible boolean property whole code simplified project test odd hope could help thank much", "num": "3041", "d": "6/2016"}, {"title": "recursive components problem vuecomponent respect name prop defined options", "body": "jsfiddle vuejs version latest treejs appjs js var tree require tree registered tree component different name eg add namespace cause error vuecomponent nstree tree registered vuecomponent nstree vueextend tree works fine new vue el body data list value foo value bar children value baz apphtml throws error using works fine verbose need tell users component need call must register name internal name", "num": "3039", "d": "6/2016"}, {"title": "submit form javascript nt trigger event modifier", "body": "vuejs version reproduction link steps reproduce submit form javascript nt trigger event modifier actually happening event modifier triggered default event bug web extension auto login filling form nt seems work vuejs form", "num": "3038", "d": "6/2016"}, {"title": "registration refs call appendto another way add refs dynamically", "body": "let consider case tooltips added via directive eg following code inside hook directive definition js var tooltip vueextend var objtooltip new tooltip thisobjtooltip mount appendto body ca nt know advance structure app uses plugin assume belongs root vue instance children lets assume need get access one tooltips via root way define refs case place definition may reasonable let opportunity define name call eg via third parameter may provide way link components parent child conversely", "num": "3037", "d": "6/2016"}, {"title": "\u5982\u4f55\u5728typescript\u4e2d\u8c03\u7528vue\u7ec4\u4ef6", "body": "vue", "num": "3036", "d": "6/2016"}, {"title": "support modifying components dynamicly", "body": "scenario need fetch remote data get collection components render current page want change components attribute created lifecycle main component assuming main component renders lots sub components expected code import form jquery export default data function return items components methods function loaddata function var get apicomponents function list var components var items listforeach item function components itemtype itemcomponent itemspush itemtype mecomponents components meitems items created function thisloaddata", "num": "3035", "d": "6/2016"}, {"title": "vmodel breaks selectionstart", "body": "vuejs version reproduction link go demo folder open indexhtml steps reproduce input something input field put cursor middle text hit backspace virtual keyboard expected text removed cursor position actually happening text removes end string attribute changed somehow vuejs ps test input elements iteverything work well", "num": "3029", "d": "6/2016"}, {"title": "", "body": "vuejs version reproduction link jsfiddle steps reproduce run jsfiddle using ie expected working correctly tables ie actually happening ie rendering table correctly browsers including ie works correctly bug reproducable table tag rendering used lists etc works correctly", "num": "3028", "d": "6/2016"}, {"title": "question event binding component", "body": "code nt work get log failed resolve directive click nt know", "num": "3026", "d": "6/2016"}, {"title": "approach implement reusable vuejs spinner directive", "body": "hi guys sorry posting question posted forum reply considering approach implement vuejs spinner directive wrap spinjs reused anywhere needed like use way scenario ajaxcomponent execute ajax operation spin triggered show ajax finished spinner disappear think implement functionality best approach know maybe vspin directive listen custom event triggered ajaxcomponent ajax started seems directive listen event right proposal aprreciated", "num": "3025", "d": "6/2016"}, {"title": "component use vbind sync", "body": "hi version obviously faster tried use valuesync component contains text input value cant sync back parent vue instance data get work version component still two way binding need change binding syntax thanks", "num": "3024", "d": "6/2016"}, {"title": "bug filter pluralize", "body": "html js output think output link bug filter pluralize jsbin link", "num": "3023", "d": "6/2016"}, {"title": "array set removing item dom", "body": "vuejs version reproduction link steps reproduce use multidimensional array primitive values expected value change dom update actually happening value changes removed dom whilst exists array", "num": "3022", "d": "6/2016"}, {"title": "optionally use proxy instead gettersetter properties", "body": "nt seen discussed recently proxy object could understand greatly simplify vue data binding code currently supported current version every major browser except current safariios getting updated matter weeks wwdc right around corner safari tech preview supports proxy big benefits see simpler internal binding code ability detect new properties would longer needed modifications original object need made quite universal propose making optional configuration vm instance lot game work electron vue ability detect new properties would simplify code quite bit electron features client always known nt worry different browser support suspect given browser usage days proxy support could nt default certainly could used majority users would even possible make default fall back gettersetters proxy nt supported issues aware developer might relied new property detection regardless feel feature would send message vue heading future useful people accept breaking older browsers", "num": "3020", "d": "6/2016"}, {"title": "javascript forloop issue data object", "body": "hi guys using forloop check items data component want check value first console ready hook component thisitems return ob observer ca nt iterate length value supposed edit strange jsbin working real code even though copied logic real code using laravel elixir compile javascript version vue jsbin value return console real code dump consolelog parentitems", "num": "3019", "d": "6/2016"}, {"title": "bug error value watched chinese input tag", "body": "songname new vue el editor data songname hello input word chinese see miracle like", "num": "3018", "d": "6/2016"}, {"title": "", "body": "\u5bfc\u81f4\u8bfb\u53d6src\u7684img\u518d\u6b21\u6e32\u67d3\u4ece\u800c\u89e6\u53d1\u56de\u8c03\u9020\u6210\u65e0\u9650\u5faa\u73af\u7684\u60c5\u51b5 template", "num": "3017", "d": "6/2016"}, {"title": "examplestreeindexhtml add one child", "body": "error console code branch distvuejs built npm", "num": "2994", "d": "6/2016"}, {"title": "comment inside template treated string sometimes", "body": "vuejs version regression reproduction link expected comments invisible actually happening comments visible sometimes trigger appears absence solid siblings comments text nodes solid comment appears treated text node", "num": "2993", "d": "6/2016"}, {"title": "watcher value update problem", "body": "vuejs version reproduction link steps reproduce set new value twoway prop watcher function set back old value immediately expected value parent component child component set back old value actually happening prop value child component remains new value wrap set back old value expression settimeout fix temporary", "num": "2992", "d": "6/2016"}, {"title": "string property controls valuated", "body": "vuejs version hi trying implement header control web application allowing special controls also allowing customize control title strange thing declare component inside html code passing header string string updated really nt understand issue please look jsfiddle example let know thanks advance matteo", "num": "2991", "d": "6/2016"}, {"body": "nonroot component inline props immutable every time parent rerenders local value overwritten inline value mutating props antipattern guaranteed work", "d": "6/2016"}, {"body": "see", "d": "6/2016"}, {"body": "thanks figured someone must brought could nt find", "d": "6/2016"}, {"body": "repro nt show source code", "d": "6/2016"}, {"body": "attached source", "d": "6/2016"}, {"body": "hello thank interest project please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem thank", "d": "6/2016"}, {"body": "second time today please use forum gitter", "d": "6/2016"}, {"body": "hello monkong thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum gitter", "d": "6/2016"}, {"body": "bug error appears initialized emtpy tring data use array vfor initialize empty array instead vfor nothing complain working version wiht", "d": "6/2016"}, {"body": "ok havbe correct reason initial value though initializing empty array would better problem initial value since attribute array working jsfiddle still bug technically reopen issue evaluate improve mabe vuewarn dev mode", "d": "6/2016"}, {"body": "please provide minimal repro example jsfiddle post please", "d": "6/2016"}, {"body": "provided example good enough think first impression essentially issue seems top size data simply much alternative working code commented example works wrapper element element vfor since higher priority element ca nt stop thirdlevel loop occurring wrapperelement without vif variations break", "d": "6/2016"}, {"body": "linusborg pointed higher priority using together basically looping every possible field entire data structure field also results thousands unnecessary nested fragments limitation compilation best practice always separate different elements eg using wrapper element problem", "d": "6/2016"}, {"body": "know cause want know problem version history examples", "d": "6/2016"}, {"body": "iirc priority vif vfor changed previous version vif higher priority changed made impossible vif reference individual items vfor", "d": "6/2016"}, {"body": "duplicate", "d": "6/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile question need define parent", "d": "6/2016"}, {"body": "used interpolate plain html nt process bindings", "d": "6/2016"}, {"body": "thanks bug fixed reinstall vueloader work properly", "d": "6/2016"}, {"body": "works perfect ty", "d": "6/2016"}, {"body": "hello usage question encourage ask forum gitter try use issue tracker bug reports feature requests", "d": "6/2016"}, {"body": "fixed also introduced small breaking change component directly emit value instead also means emitting value native event need", "d": "6/2016"}, {"body": "thanks quick fix like change fits usual procedure passing emittingdispatching events today", "d": "6/2016"}, {"body": "ok got remove entry key work successful", "d": "6/2016"}, {"body": "well trying write element component directive course issue wink", "d": "6/2016"}, {"body": "hi thanks reporting issue looks like template parsing bug give go evening one beat improved repro", "d": "6/2016"}, {"body": "welp grin", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "crossjs said deep watch use option please read manual also forum gitter better fits questions like", "d": "6/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "6/2016"}, {"body": "sorry", "d": "6/2016"}, {"body": "jquery event system native browser event vue nt know jelement suggest read", "d": "6/2016"}, {"body": "also get stuck please ask forum gitter sure lot folks help", "d": "6/2016"}, {"body": "tks", "d": "6/2016"}, {"body": "actually since transition system renamed would make sense rename really sure one fact sounds lot like part hesitation fully recommend", "d": "6/2016"}, {"body": "good point think take pass hooks across different parts lib ensure consistent naming convention", "d": "6/2016"}, {"body": "bit offtopic farstretched always wondering convention vue options well namely adjective plural noun singular noun verb", "d": "6/2016"}, {"body": "sounds good major patterns think seeing verb simple past eg verb infinitive eg prefix verb infinitive eg think would best convention settle think option also seems generally moving towards feels nicest may also one fully accommodate every situation places hooks may exhaustive almost midnight lifecycle methods transition system custom directives", "d": "6/2016"}, {"body": "phanan good point could good time also set explicit rules follow naming component options looking api think might reverseengineered rules seeing noun use noun accept many things use plural eg accept thing use singular eg noun something use verb infinitive eg boolean option use adjective eg current exceptions verb simple past perhaps conjugated present perhaps", "d": "6/2016"}, {"body": "fair big proponent renaming things unless warning try use oldstyle name warning pop use arbitrary name case might handled custom code", "d": "6/2016"}, {"body": "thorough evaluation current directive hooks context farreaching campaign consistency couple areas confusion noticed possible solutions end confusions updated directive interface actually referring updates two separate things could cause confusion first triggered directive value updated second triggered component updated times called called also runs instancecomponent lifecycle hook renaming hooks make context actually updated clear could useful consistency lifecycle verbs within component lifecycle hook point access data nothing mounted onto dom yet understanding also case hook use verb instead consistency similarly cleanup might happen hook may also good use verb preference changes concepts create update destroy mirrored directives leaves mount conspicuously missing despite waiting element document part one common use case directives see among others convenience may good complete set hook mounting simplified something like possible solution assuming prefix verb infinitive pattern possibilities new", "d": "6/2016"}, {"body": "simplesmiler think right arbitrary renames pretty annoying want sure anything renaming nt new name feels better actually makes vue api clearer intuitive case directives since work quite differently used changing hooks might actually alleviate confusion users wo nt expect behavior quite big changes take new arguments longer instances longer called initial existing lifecycle methods would change move prefix verb infinitive pattern lifecycle methods already changed thinking existing vue users would basically learn scratch anyway transition system already follows pattern changes would necessary advantage consistent names especially new users little experience probably guess name hook right time whether component lifecycle directives transitions whatever else think might worth", "d": "6/2016"}, {"body": "worried among people debug things half hour find use old name hook grinning", "d": "6/2016"}, {"body": "like avoid big naming changes sake api continuity goal consistency changes possible see right feels inconsistent hook custom directives transitions think fix could settle following present tense verb indicates user implementing hook perform specified action past tense verb indicates action performed framework hook exposed timing camelcase prefixed verb also indicates action waswill performed framework hook exposed timing purposes based rules changes would reason changed first place due boolean hook however think determine need appearing transition simply testing presence either actual hook", "d": "6/2016"}, {"body": "implemented branch", "d": "6/2016"}, {"body": "already works need specify vue filters without attribute obvious reasons allows types", "d": "6/2016"}, {"body": "thanks see mean fwiw nt seem parsing vtext though template jade template part vue file compiled vueloader nt investigated yet pipeline breaking", "d": "6/2016"}, {"body": "try prevent default cause keyup tab default event already took place", "d": "6/2016"}, {"body": "thank sleewoo method works another relevant question user nt press tab button use mouse select things else instead catch event together tab key", "d": "6/2016"}, {"body": "question qa site like stackoverflow vue forum issue asking think event need", "d": "6/2016"}, {"body": "yerkopalma right also works thanks help", "d": "6/2016"}, {"body": "local component option using wrong give template instead", "d": "6/2016"}, {"body": "giving localcomponent template seems add correctly childcount however content nt rendered even also give rootcomponent template take component register globally seems work fine", "d": "6/2016"}, {"body": "lukasknuth pass component constructor instead instance option like following code", "d": "6/2016"}, {"body": "well feel stupid thanks ktsn still feel documentation explicitly state used localcomponents could send pullrequest vueorg repository", "d": "6/2016"}, {"body": "hello awakeningj thank interest project please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem thank", "d": "6/2016"}, {"body": "make sure also reinstall using", "d": "6/2016"}, {"body": "sorry maybe mistake also strange try modify already solved like work lrcdata lrcblockindex work", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "many jquery plugins including dispatch jquery events native dom events listens native dom events chain call", "d": "6/2016"}, {"body": "native element use component name", "d": "6/2016"}, {"body": "im sorry simplified name post github components using compounded named case one really using", "d": "6/2016"}, {"body": "provide jsfiddle reproduction", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "registered alongside used scope", "d": "6/2016"}, {"body": "nt means endup two global components arkitem able exist without according docs var child vueextend var parent vueextend template components available parent template mycomponent child would able example isnt examples isnt working", "d": "6/2016"}, {"body": "everything parent template compiled parent scope everything child template compiled child scope javascript var child vueextend var parent vueextend template components available parent template mycomponent child work template use case following template compiled parent template note child inside parent template need", "d": "6/2016"}, {"body": "means externally outside template cant invoke child would need global component access parent parent example workflow would impossible right example must global component two child exactly mattering parent want differentiate would go like case global components way way shirnk global components element child within name outputting im child outputting note using name places", "d": "6/2016"}, {"body": "milewski try use wo nt let specify templates components prohibit use slots", "d": "6/2016"}, {"body": "sorry mistake", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "mlyknown", "d": "6/2016"}, {"body": "\u4e0d\u8981\u7528 issue \u6a21\u62df \u53ef\u4ee5\u7528 \u6765\u89e6\u53d1", "d": "6/2016"}, {"body": "sorry \u5230 google\u6ca1\u641c\u5230", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests specified contributing guidelines thanks", "d": "6/2016"}, {"body": "hello njleonzhang thank interest project however usage question encourage ask forum gitter issue tracker exculesively bug reports feature requests", "d": "6/2016"}, {"body": "duplicated value officially supported trigger error vue look console line subsequent behavior therefore unpredictable prone problems", "d": "6/2016"}, {"body": "implemented", "d": "6/2016"}, {"body": "please open issue vuerouter repo instead also reproduction", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "talking vueify need install well", "d": "6/2016"}, {"body": "yes going use need install generally solve errors", "d": "6/2016"}, {"body": "phanan set", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "classes unnecessary goal divide methods simply put separate file", "d": "6/2016"}, {"body": "besides please use forum andor gitter questions", "d": "6/2016"}, {"body": "phanan thank wrote questions gitter bobody answer", "d": "6/2016"}, {"body": "hello thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "6/2016"}, {"body": "posva click go bar delete vmodel test good delete transitionmode outin also good", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "lincenying nt think problem related transition ignored anyway issue related repsacby said item yet inserted dom nexttick keeps calling forceupdate", "d": "6/2016"}, {"body": "sorry nt focused enough bug already fixed shipped next version", "d": "6/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "6/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks question please read reactivity depth section guide reactive data source", "d": "6/2016"}, {"body": "root level properties start underscores reserved vue internal prototype methods", "d": "6/2016"}, {"body": "use recursive components like register globally see recursive component", "d": "6/2016"}, {"body": "thanks hero quickly explain close issue first time see github refresh itselft close issue", "d": "6/2016"}, {"body": "add another note phanan answer nt register components globally instead component vue shortcut name component", "d": "6/2016"}, {"body": "thanks telling us fails system unfortunately ca nt really deduce anything else information care provide bit details", "d": "6/2016"}, {"body": "bug uncaught error user logic", "d": "6/2016"}, {"body": "added ability use handle error instead throwing", "d": "6/2016"}, {"body": "efficient great novices usually handle errors place data returned server abnormal time entire page vue components lose jobs encountered two examples throw warning frame level avoid best course thanks", "d": "6/2016"}, {"body": "looks like bug", "d": "6/2016"}, {"body": "different browsers trigger events different orders something vue change vue responsible normalizing behavior listening event instead", "d": "6/2016"}, {"body": "fixed \u4ee5\u540e\u6b64\u7c7b\u95ee\u9898\u8bf7\u5230\u5bf9\u5e94\u7684 repo \u5f00", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "think intentional special value replaced default want default send cc phanan recall mentioning", "d": "6/2016"}, {"body": "thanks simplesmiler wondered might case got ta love breaking changes sure would send undefined currently send either jsonencoded php array null change null something else would send undefined send string fails prop expects array plus would compile string anyway even nt fail could send empty array obviously stays empty array doesnt fallback default prop value feel null would made sense bridging php js", "d": "6/2016"}, {"body": "something like like", "d": "6/2016"}, {"body": "ok thank seems explicitly set opposed set php callback sent string latter case causing vue squawk former like example works fine recognised js undefined", "d": "6/2016"}, {"body": "fyi previous misbehavior treating fixed commit", "d": "6/2016"}, {"body": "duplicate", "d": "6/2016"}, {"body": "hi checked bin object remains expected", "d": "6/2016"}, {"body": "interesting looks like bug", "d": "6/2016"}, {"body": "working expected gets new value assigned changed assignment assignment", "d": "6/2016"}, {"body": "ealvespt still called happening", "d": "6/2016"}, {"body": "simplesmiler hmmm indeed nt noticed interesting edit noticed use computed property components works expected", "d": "6/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile question passing data child props way go modify child components either use two way bindings emit events child component catch parent child computed prop work better post repro forums gitter", "d": "6/2016"}, {"body": "posva maybe nt make clearbut thanks anyway wayi tried several times nt receive confirm email forums also searched trash email using gmail would bother check server log see going thanks", "d": "6/2016"}, {"body": "hughgr need make github email public settings auth", "d": "6/2016"}, {"body": "export component constructors returned vueextend functions", "d": "6/2016"}, {"body": "theoretically directive ignored sure worth special case", "d": "6/2016"}, {"body": "common issue people nt think need", "d": "6/2016"}, {"body": "please post issue corresponding vuecli template repo also make sure installed", "d": "6/2016"}, {"body": "repo fixed", "d": "6/2016"}, {"body": "caching issue sorry", "d": "6/2016"}, {"body": "volodymyrrudyi example using shows issue resolved", "d": "6/2016"}, {"body": "hello usage question encourage ask forum gitter try use issue tracker bug reports feature requests question put modal element template toggle code", "d": "6/2016"}, {"body": "simplesmiler thanks good answer want dynamically create modal modal instance inserted documentbody", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "simplesmiler thanks share problems define component template app clone dom append body good thanks", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "simplesmiler jonagoldman ok done see", "d": "6/2016"}, {"body": "fundon clone dom append body exactly lose reactive bindings experience issues follow forum", "d": "6/2016"}, {"body": "problem executed design change case try tag", "d": "6/2016"}, {"body": "thanks prograjkamal explanation", "d": "6/2016"}, {"body": "must use lowercase id html caseinsensitive", "d": "6/2016"}, {"body": "point mention root cause issue please help whether scenario root vm instance refer couldnotavailabeincomp div elemenet say access comp vm els verify test using vuedev tool chrome true update document really costs several hours figure thanks", "d": "6/2016"}, {"body": "also please note dom element attached vel couldnotavailabeincomp comp template transcluded content matter thanks", "d": "6/2016"}, {"body": "getting exact issue rolled back everything working", "d": "6/2016"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests specified contributing guidelines thanks", "d": "6/2016"}, {"body": "thank", "d": "6/2016"}, {"body": "\u4f60\u628a \u6539\u4e3a \u5728\u4f60\u66f4\u65b0\u5b50\u7ec4\u4ef6\u7684 props filter \u88ab\u91cd\u65b0\u8d4b\u503c\u5927\u6982\u5728\u4e0b\u9762\u7684\u5730\u65b9", "d": "6/2016"}, {"body": "\u5982\u4e0a\u6240\u8ff0", "d": "6/2016"}, {"body": "nt really see practical disadvantage using nonprefixed special attributes really want keep vue related attributes different always use", "d": "6/2016"}, {"body": "experience found disadvantages nonprefixed attributes scanning vue templates known code written read many times special prefix vue specific attributes stand easier identify especially vue specific attributes start really irks scan vue template got remember attribute vue attribute adding vue specific atrributes future likely many vue attributes future may likely take string value instead js expression cases require add another special attribute naming things hard especially using global namespace using prefix make easier add vuespecific attributes beginner pitfalls beginner definitely fall like write stead one special attribute transition would go simplicity attributes may come find better prefix ps clearly hack work", "d": "6/2016"}, {"body": "many come really true want limit number special attributes currently nt plans adding anymore ones serve clear purposes remember already using custom elements make clear plan change currently work", "d": "6/2016"}, {"body": "want limit number special attributes currently nt plans adding anymore really commend effort foresight software developers fortune tellers never know edge cases overlooked maybe reading much think reluctance add special attributes direct consequence vue specifc prefix prefixes adding new one easy without consider polluting global scope interference already existing htmlsvg attributes increasing numbers concede experienced hence know better vue still alpha situation occurs new special attribute required please consider adding prefix instead", "d": "6/2016"}, {"body": "removing events obj parent trick think events obj childmsg key overwriting method bind template", "d": "6/2016"}, {"body": "changed example note using template event name turned lowercase browser part template parsing restrictions avoid using uppercase letters event names nt limitation", "d": "6/2016"}, {"body": "ahh makes sense thanks guys", "d": "6/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile may handy", "d": "6/2016"}, {"body": "make sure element id present vue instance rendered otherwise need provide reproduction", "d": "6/2016"}, {"body": "thank proposal figured move template section advance works thanks", "d": "6/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "6/2016"}, {"body": "found spaces line javascript may affect malfunction", "d": "6/2016"}, {"body": "removing need repro label since jsfiddle provided", "d": "6/2016"}, {"body": "solve seo question guidelines vue docs inside vueserverrenderer", "d": "6/2016"}, {"body": "also need serverrenderer", "d": "6/2016"}, {"body": "hello give details please jsfiddle would helpful", "d": "6/2016"}, {"body": "ah yes indeed fixing", "d": "6/2016"}, {"body": "closed via", "d": "6/2016"}, {"body": "hmm probably need extra config option something like", "d": "6/2016"}, {"body": "yeah would nice property like components ignoredelements guess config makes sense something component able", "d": "6/2016"}, {"body": "already implemented ship", "d": "6/2016"}, {"body": "perfect", "d": "6/2016"}, {"body": "little context could probably helpful app github forum something else", "d": "6/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile", "d": "6/2016"}, {"body": "duplicate", "d": "6/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile use syntax html index itemmessage", "d": "6/2016"}, {"body": "could use directive instead filter check gist hope helps", "d": "6/2016"}, {"body": "please ask questions forum gitter", "d": "6/2016"}, {"body": "pespantelis thanks better solution hack solution want use another tag work correct", "d": "6/2016"}, {"body": "could try instead", "d": "6/2016"}, {"body": "pespantelis thank worried many data show many setinterval run may lead performance problems", "d": "6/2016"}, {"body": "pespantelis update solution one setinterval javascript import vue vue import moment moment vuedirective momentago update time thiselinnerhtml moment time fromnow unbind stopautoupdate momentagokey var intervaltimes funs function runautoupdate intervaltimes return run consoleinfo moment run intervaltimessetinterval function var key funs funskey function stopautoupdate key key return delete funs key isemptyobj funs clearinterval intervaltimes function isemptyobj obj var key obj return false return true", "d": "6/2016"}, {"body": "pespantelis still problem use vuerouter setting keepalive mode inactive component still keep update", "d": "6/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile question pass data prop possible access property really used inside type component keep mind makes component harder reason", "d": "6/2016"}, {"body": "got itthanks", "d": "6/2016"}, {"body": "maybe describe issue exactly find solution reading readme doc use vref direction", "d": "6/2016"}, {"body": "hello please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described also please include version used", "d": "6/2016"}, {"body": "good idea created jsbin template ok firefox failed ie", "d": "6/2016"}, {"body": "need wrap tag", "d": "6/2016"}, {"body": "pespantelis thank works fine", "d": "6/2016"}, {"body": "seems ie removes inside pespantelis said nt need wrap", "d": "6/2016"}, {"body": "posva right maybe ie removes template node", "d": "6/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "6/2016"}, {"body": "nt include set property hook eg", "d": "6/2016"}, {"body": "technically bug root cause wrong transition name vue waits event determine transition ended since matching css classes applied transition triggered thus transition essentially never ends preventing vue removing element autotimeout however still rather hard detect misspelled transition name", "d": "6/2016"}, {"body": "believe bug element attributes property returns collection attribute nodes using input field named attributes replaces contents property demo vue uses property thought hard even impossible change error message inform conflict believe ok also reason want set field named attributes could interpolate attribute", "d": "6/2016"}, {"body": "exactly pespantelis described unfortunately way workaround vue part recommended solution avoid using input names also native dom element properties", "d": "6/2016"}, {"body": "thanks reporting issue fix involves changes fixed additional refactoring", "d": "6/2016"}, {"body": "watcher enables checkbox variable changed switch first dropdown variable changed hence watcher triggered correctly suggest reset variable first dropdown changes", "d": "6/2016"}, {"body": "thank example try implement similarly however sure changed first dropdown used relevant selected option element removed dropdown model change triggered imho dom model sync", "d": "6/2016"}, {"body": "fixed triggering dom event dropdowns options removed works time expression removes option recalculated fire change event vue get notified change relevant property needs updated recalculation triggered would nice would happen automatically would handled framework pressure anyone close issue working example anyone interested trying solve something similar", "d": "6/2016"}, {"body": "sorry old documentation somewhere fault", "d": "6/2016"}, {"body": "would supported", "d": "6/2016"}, {"body": "simplesmiler nt think feasible provide seamless migration build like upgrade due much underlying implementations changed deprecation warnings mostly used features simulated", "d": "6/2016"}, {"body": "believe simulated adding optional parameter defaults build build work build using syntax give warnings switch order use default build build using parameter encourage new syntax default mark feature deprecated certainly look like elegant prefer seamlessmigration build nt problems facing certain seamless migration possible workarounds many find acceptable", "d": "6/2016"}, {"body": "prograjkamal hmm good idea toggle incompatible interfaces using flags would definitely make migration build feasible", "d": "6/2016"}, {"body": "nothing primitive values per se reactivity caveat due limitations javascript", "d": "6/2016"}, {"body": "use normal data property general bad idea mutate objects created within computed properties since objects temporary recreated every time computed property recomputed case expect mutation work computed property returning original data objects reference instead creating new ones", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "\u597d\u7684 \u56e0\u4e3a\u4e1a\u52a1\u9700\u8981\u9891\u7e41 set nonexistent path", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "ok \u56e0\u4e3a\u6211\u53d1\u73b0\u5728 safari thanks", "d": "6/2016"}, {"body": "chrome \u7684 devtools vue", "d": "6/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile normal two way binding achieved modifier", "d": "6/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile", "d": "6/2016"}, {"body": "question component rely values implicitly provided compilation scope said pass whole parent prop explicitly make sure define prop component", "d": "6/2016"}, {"body": "hi thank question first use usage data binding bound object value attributes defined reactive data eg option computed properties therefor need define property option computed properties etc last note mode class style support array objects checked example codes found nt defined codes work code", "d": "6/2016"}, {"body": "hello usage question encourage ask forum gitter try use issue tracker bug reports feature requests question use case dynamic list attributes unknown upfront eg props attributes depending type component classstyle talking", "d": "6/2016"}, {"body": "thank much ask questions right place later", "d": "6/2016"}, {"body": "think better done think actually meant double brackets agree newline already handled correctly doublebracket expression consistency sake handled correctly triplebracket expression", "d": "6/2016"}, {"body": "simplesmiler realworld case encountered attributes making line longer actually everything added splitting multiple lines much nicer also mean triple brackets since code passed highlightjs", "d": "6/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile example using express need example", "d": "6/2016"}, {"body": "removed cdnjs since usage", "d": "6/2016"}, {"body": "done", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "come level smile use events bindings many times use said create directive adds element directives", "d": "6/2016"}, {"body": "use shorthands almost always used arguments nt think shorthands nonargument usage makes sense", "d": "6/2016"}, {"body": "hello usage question encourage ask forum gitter try use issue tracker bug reports feature requests question put expanded variant template directly tell vue show conditionally", "d": "6/2016"}, {"body": "computed property manual changes ignored", "d": "6/2016"}, {"body": "bug mapped array different objects computed property mutating derived objects cause changes temporary lost whenever source data changes", "d": "6/2016"}, {"body": "looks like problem", "d": "6/2016"}, {"body": "fixed feel free reopen issue persist next alpha release", "d": "6/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile use variable passed children items click set variable state depend variable", "d": "6/2016"}, {"body": "maybe help", "d": "6/2016"}, {"body": "fyi deprecated props behavior scott", "d": "6/2016"}, {"body": "please see template structure included first post pass data inner item componemt problem child items componemts directly childs parent vue instancethey childs childs childs instances need clarification", "d": "6/2016"}, {"body": "think introduces whole new layer two implicitly unreadability mention combine two events like event receive event event", "d": "6/2016"}, {"body": "think events would nothing logical key presses would needed dospecialstuff see idea heading like making interactive programs certainly mixing matching events would handy however agree phanan placing html suggested nt clean phanan way mix match events introduce cleanly html currently scott", "d": "6/2016"}, {"body": "phanan could made explicit idea events would passed array another object first example shows probably right assertion honest question best current alternatives currently possible something cleaner html best think associating function probably one listener eg checking combinations within calling appropriate functions html becomes cleaner solution whole counting js code seems much verbose least current way simplifying could least shorthand like would preserve current behavior offer extra complexity even thankful could clarify good things please tell getting wrong", "d": "6/2016"}, {"body": "go simple inside handler check event etc determine action", "d": "6/2016"}, {"body": "agree phanan implementation unreadable confusing eye solution help within handler allowing much flexibility", "d": "6/2016"}, {"body": "ok thanks", "d": "6/2016"}, {"body": "yes good potential event interface like suggestions made also questionsuggestion along lines stream interface", "d": "6/2016"}, {"body": "expected replaced different dom node vue way track", "d": "6/2016"}, {"body": "duplicate wontfix want class controlled vue nt put static class first place", "d": "6/2016"}, {"body": "sorry searching hard enough found componentname property solved", "d": "6/2016"}, {"body": "likely wontfix vue scoped css relies compiletime transformation template uses purely runtime data use something like nest styles div", "d": "6/2016"}, {"body": "solution nt work tag nt like maybe add something like use complied", "d": "6/2016"}, {"body": "cevio autoprefixer checks styles ckeck different browsers browser puts value able work necessary code simplified", "d": "6/2016"}, {"body": "finico said prefixes styles automatically current browser actual issues eg prefix please report", "d": "6/2016"}, {"body": "finico simplesmiler thanks help alreay resolve problem thanks much", "d": "6/2016"}, {"body": "ca nt reproduce list detailed steps lead mentioned error", "d": "6/2016"}, {"body": "look gif got thanks hard work vuejs changed life", "d": "6/2016"}, {"body": "thanks repro fixed branch", "d": "6/2016"}, {"body": "hi thank reporting seem vuerouter issue please report issues", "d": "6/2016"}, {"body": "hi nt mean instead second loop appears working fixed", "d": "6/2016"}, {"body": "boss thank much", "d": "6/2016"}, {"body": "hi thank reporting use options please see document think resolve way jsfiddle url", "d": "6/2016"}, {"body": "think something fixed since expected behavior reasonable", "d": "6/2016"}, {"body": "means specified component included option register component global id option", "d": "6/2016"}, {"body": "kazupon component published npm github author nt know name users use outside use internal use think check whether defined", "d": "6/2016"}, {"body": "fenivana thanks explanation oh see try fix issue", "d": "6/2016"}, {"body": "kazupon thanks really like quick response vuejs team awesome", "d": "6/2016"}, {"body": "closed via", "d": "6/2016"}, {"body": "hello bug please see cloned jsbin modifications notice inside onsubmit log triggered however direct communication resolve use case programmatic execution form interaction call onsubmit method see", "d": "6/2016"}, {"body": "relying template reactive updates set remember unregister vm removed however manually instantiating child components part recommended best practice especially consider using proper component instead", "d": "6/2016"}, {"body": "\u81ea\u5df1\u89e3\u51b3\u4e86 hellots use strict import component vueclasscomponent var vselect require vueselect export interface hello extends vuejsvue component template require hellohtml components vselect export class hello data return selected null options foo bar baz hellohtml vselect", "d": "6/2016"}, {"body": "try set method see reactivity depth", "d": "6/2016"}, {"body": "renshine pass data event sub component loop people suggest using vif loop list instead using preserved", "d": "6/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile take look", "d": "6/2016"}, {"body": "hello thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described cloned repo tested chrome works well next time provide simple repro people ca nt go whole application help", "d": "6/2016"}, {"body": "thanks feedback provide ghpages link soon impossible reproduce bug codepen jsfiddle due pianojs nature", "d": "6/2016"}, {"body": "see case may due pianojs great create repro without pianojs", "d": "6/2016"}, {"body": "posva hi codepen repro steps reproduce insert text first input select text click button near input looking forward response", "d": "6/2016"}, {"body": "thanks found bug update resets values caching taking back actually solves issue sure test though may write test ps tomorrow going sleep", "d": "6/2016"}, {"body": "nt internet yesterday hope able evening", "d": "6/2016"}, {"body": "finally got internet back trouble creating test breaks unit test try today test although overkill calling blur method input nt behave way actually fix came setting input value nt changed blur basically adding conditions", "d": "6/2016"}, {"body": "browser removes elements vue get access following html spec allowed direct children element browser dependet behaviour ca nt fixedchanged least branch vue use virtual dom templates free us limitations workaround move fuctionality component use turn element component", "d": "6/2016"}, {"body": "use like", "d": "6/2016"}, {"body": "teddyzhu correct scenario generally used elements loop one element time", "d": "6/2016"}, {"body": "linusborg know thought using option like list ul example use tbody tag allowed mre one time table teddyzhu updated fiddle link like linusborg said need loop two table rows time vfor tr option unfortunately", "d": "6/2016"}, {"body": "anyone bump issue working fiddle replaced tag please feel free close issue", "d": "6/2016"}, {"body": "already", "d": "6/2016"}, {"body": "hello usage question encourage ask forum gitter try use issue tracker bug reports feature requests question tried code works without issues", "d": "6/2016"}, {"body": "well answer implement directive rather component also better turn things around let ajax component import use spinner component instead wrapping spinner component around ajax component", "d": "6/2016"}, {"body": "simplesmiler thanks advice implemented according proposal works great", "d": "6/2016"}, {"body": "twoway props deprecated", "d": "6/2016"}, {"body": "english uses plural form", "d": "6/2016"}, {"body": "looks like bug meantime work around", "d": "6/2016"}, {"body": "bug seems way accomplish", "d": "6/2016"}, {"body": "thanks clarifying pespantelis", "d": "6/2016"}, {"body": "pespantelis entirely correct bad", "d": "6/2016"}, {"body": "biggest problem proxy way simulate consistent behavior browsers support way maintain reference consistency observed objects point proxies create separate copy original object copy fail cases try compare js var obj var proxy new proxy obj handlers obj proxy false introduces complexity accessing nested properties always need careful whether value retrieved real one proxy otherwise lead obscure bugs rely comparators imo even annoying use also wo nt make internal binding code much simpler intercept manipulations small part reactivity system proxies installed directly object ca nt makes nogo", "d": "6/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "6/2016"}, {"body": "provide information bug please read contributing guidelines next time ps first time", "d": "6/2016"}, {"body": "trust obvious number friends confirmed sorry forgot tell use vue", "d": "6/2016"}, {"body": "provide page repro bug maybe need install chinese input software english thanks", "d": "6/2016"}, {"body": "still explaining happens matter trust", "d": "6/2016"}, {"body": "sorry look gif", "d": "6/2016"}, {"body": "function oncompositionend e etargetcomposing false trigger etarget try comment line line bug fixed", "d": "6/2016"}, {"body": "dist files date please wait actual release filing bugs", "d": "6/2016"}, {"body": "\u4e3a\u4ec0\u4e48\u4e0d\u662f pricelist width width \u5b8c\u5168\u6ca1\u5fc5\u8981\u7528 set", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "\u521d\u59cb\u58f0\u660e\u4e3a \u4e0d\u5c31\u884c\u4e86", "d": "6/2016"}, {"body": "\u597d\u5427 \u4f46\u6211\u89c9\u5f97\u6570\u636e\u91cf\u4e00\u591a", "d": "6/2016"}, {"body": "current dist file date please wait util actual release", "d": "6/2016"}, {"body": "give go evening fairly easy fix", "d": "6/2016"}, {"body": "hello astragit thanks report provided reproduction fiddle provide correct version fiddle missing exernal vuejs file library template component nest without clear reasonrelation issue seems unfinished kind see refer really conclusive anyways think happening code kind gets ahead runs circle set prop trigger twoway sync propagate value item parent also set immediatly afterwards original object prop kind race condition change twoway prop triggers event update parent element time update said parent element d\u00edrectly trigger downwards update prop result depends reactive update event fires beause reactive updates async first direct update succeeds happens synchroneously parent object number property stack done reactive update parent twoway prop comes along changing first change already triggered rreactive event downwards changing prop first guessobservation bottom line ttwoway bindings bitch debug especially tinker sides binding time setting done everything behaves normally nt think bug simply sideeffect antipattern working twoway bindings", "d": "6/2016"}, {"body": "thanks detailed answer put two vuejs scripts version commented switch versions see different result understand good practice use twoway props way wonder code works well version maybe related watcher invocation order fix introduced", "d": "6/2016"}, {"body": "presumably ca nt tell first glance", "d": "6/2016"}, {"body": "watcher queue different watch expression order like order set last watch run", "d": "6/2016"}, {"body": "yeah seems case ok closing issue judging edgecase sideffect reactivity entirely preventable manipulating two sides binding time one nt anyways", "d": "6/2016"}, {"body": "close issue please comment think reopened", "d": "6/2016"}, {"body": "please forget issue found solution basically since passing fixed string property binding changing value need call string parameters component following way matteo", "d": "6/2016"}, {"body": "hello dsonet thank much report continue pull request", "d": "6/2016"}, {"body": "hi linusborg fyi updated reproduction case also new fix", "d": "6/2016"}, {"body": "local debugging found changing line solved issue see nt break existing functionality separate related issue ie select element moved either element descendant moved element within dom even code change reset present issue displaying first option instead blank eg html test", "d": "6/2016"}, {"body": "thanks would hoped block would immediately fire everything done loading coming angular background kind works angular feature request personally prefer writing directive controllers controllers time even jquery write plugins underneath regular code also mean time might good idea document explicity overlooked guide andor api", "d": "6/2016"}, {"body": "thany define things locally instead globally", "d": "6/2016"}, {"body": "could work thanks go try", "d": "6/2016"}, {"body": "wo nt implemented vuejs core nt want endorse deep class inheritance use obviously super verbose easily write helper shorten something like", "d": "6/2016"}, {"body": "hi softomatix wrote vuesuper might helpful", "d": "6/2016"}, {"body": "sorry keep answering closed thread really like known vue using classes besides nt want endorse deep class inheritance agree deep inheritance god thing encourage really good argument using classes directly times ago wrote something static properties would problem native classes else could problem could found solution would possible vueextend type class parallel make natural integration typescript wrote single strange thing vue really like rest lot bl", "d": "6/2016"}, {"body": "druppy classes awesome also", "d": "6/2016"}, {"body": "ok interesting read understand reason better guess vueclasscomponent enable static type checking ts fake data types class declaration rest could good idea reconsider inheritance case", "d": "6/2016"}, {"body": "weepy possible etc handlers vue render function", "d": "6/2016"}, {"body": "voronianski", "d": "6/2016"}, {"body": "thanks figured ing data using template prop", "d": "6/2016"}, {"body": "seems default value causes problem set transition xxxx xxxx anthing removed normally", "d": "6/2016"}, {"body": "let take look", "d": "6/2016"}, {"body": "sorry delay checked nt work priority bind priority since using bind param directive get applied attribute longer exist", "d": "6/2016"}, {"body": "strange see jsfiddle link originals quastion working priority working priority explanation clear", "d": "6/2016"}, {"body": "priority f gets converted default priority think avoid priorities lt default value gets applied", "d": "6/2016"}, {"body": "since reproduction provided within week assume issue needs investigation close still problem please provide reproduction reopen issue", "d": "6/2016"}, {"body": "since reproduction provided within week assume issue needs investigation close still problem please provide reproduction reopen issue", "d": "6/2016"}, {"body": "\u4f60\u7528vue\u5199\u7684\u9875\u9762\u6253\u5305\u540e\u590d\u5236\u5230express\u7684public\u76ee\u5f55\u5c31\u884c\u4e86", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "pc\u7aef\u7279\u6b8a\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\u53e6\u5916\u4e00\u4e2a\u95ee\u9898", "d": "6/2016"}, {"body": "implemented", "d": "6/2016"}, {"body": "thinking believe replacing instance something users simply avoid makes reactive properties vm instance indeterministic prohibited users always trigger changes setting proxied property vm instead particular use case wontfix since pretty straightforward workaround", "d": "6/2016"}, {"body": "nt tell writing template way", "d": "6/2016"}, {"body": "nt use interpolation inside attributes otherwise browser try fetch vue even changes", "d": "6/2016"}, {"body": "feeling adventurous today wanted see much effort would take migrate unfortunately since possible use simple interpolation anymore would go something simple", "d": "6/2016"}, {"body": "inline templates work binding expressions", "d": "6/2016"}, {"body": "way get working nt mind saying regression lovely syntax got us used yes know assume interpolation removed performance reasons hope worth uglier syntax", "d": "6/2016"}, {"body": "oskarkrawczyk assume want end something like dom expression would render version proper fact", "d": "6/2016"}, {"body": "simplesmiler understood think spoiled bit", "d": "6/2016"}, {"body": "dynamically insert component like", "d": "6/2016"}, {"body": "bind values attribute depend expression example expect next result", "d": "6/2016"}, {"body": "nervgh right place ask question use ternary expression", "d": "6/2016"}, {"body": "simplesmiler thanks answer try say objectsyntax useful cases work expect", "d": "6/2016"}, {"body": "nervgh object syntax applicable attributes take list strings native attributes attribute components would way detect child side whether meant send list strings proper object", "d": "6/2016"}, {"body": "deprecated nt break really common design patterns ca nt think able simple components handling form fields without simple components different form field types eg textbox component template also complex component lists provides ui add remove elements arrays data structure use components eg like note components two props node data structure edited component responsible providend ui editing node massive static data structure contains typesfields hierarchy stuff like work without seems would severely complicate things create sort messaging system components subcomponents somehow communicate parent subcomponent parent figure part data structure modify really hope missing something looks like saying using components create editors parts data structure antipattern whaat far thing used vue guessing think removing feature encourage people write cleaner code maybe effect people many people write much nastier code work around limitation modifying state useful thing computers please continue make easier", "d": "6/2016"}, {"body": "jasonwoof work custom components component simply needs expose prop named emit event value needs synced parent eg see example", "d": "6/2016"}, {"body": "thanks explanation link stuck remove nt see advantage disadvantages example linked shows achieve thing either see disadvantages vmodel method requires significant boilerplate subcomponent side complicated learn etc pass one value vmodel multiple props nt see switching vmodel makes anything clearercleaner cases indication parent child component easily modify parent state syntax prop template would even argue clear thing pass objectsarraysetc props mutable child component ca nt shield programmers able change state child components case assume common seems like introducing stumbling block removing thing makes passing string values works passing object values makes code simpler consistent always data props writable child side matter data type new vuejs days ago see far vuejs valuable mainly two things easy dom manipulation templates automatic valuedata change propagation including triggering template changes least discovered far seems removing makes difficult get vuejs consistently second", "d": "6/2016"}, {"body": "jasonwoof explicit vs implicit side effects outside components scope makes difference long term maintainability", "d": "6/2016"}, {"body": "one could argue people simply learn use experience far different people tend rely much create code later hardly debug design decision force people right beginning example sync value parent child well decide hey value changes need something parent create function nice later realize watcher seems fire nt want ca nt really tell ca nt really put anywhere trace behaviour much hard thinking realize really want something happen value changed parent child grandparent try find way differenciate scenarios function somehow realize makes simple thing complicated end someone tells us remove sync throw away use oneway prop emitted event handle situation code becomes simpler explicit simple reason data flows becomes easier debug bug found quickly move becomes even crazy sync one level deep anti pattern seen forums gitter chat removing forces people write clear explizit maintainable code start code wo nt stay simple enough long time", "d": "6/2016"}, {"body": "ok thank explaining good hear problem trying solve seriously doubt help though make people ca nt easily break patters like people far worse things work around limitations reminds lot abstraction abstractions get us much trouble make code hard read hard debug etc ca nt fix taking away ability make abstractions pretty much thing makes programming possibleuseful solution language framework level teaching advice learning encourage people make things overly abstract sounds like talking design philosophy many cases great philosophy keep mind coding imposed limitation programmer thinks limitation stops needs going work around result problems trying avoid worse people going stop trying mutate parent state children ca nt force people thing complicated enough would work around problem passing parent objectarray key child modify guess last bit hit heart trying get across personally see lack problem work around use framework bet lot people approach perhaps goes without saying makes little angry people try impose design philosophies would much rather build things go terribly wrong learn use systems purposely withhold power fear might use badly", "d": "6/2016"}, {"body": "ps sorry ca nt help one comment leave guys alone programmers write code debug happens every programmer every language every framework programmers become better programmers make mistakes make code fix learn write things differently future please nt dumb framework everybody attempt make programmers abstract corner make stuff little bit confusingcomplex becomes mess ca nt debug", "d": "6/2016"}, {"body": "jasonwoof nothing dumbing preventing users common pitfalls ensuring better maintainability definition part job framework made decision based first hand experience designing using framwork observing user behavior various use cases antipattern discorage users using provide guidence idiomatic solution free disagree based personal opninion find arguments hardly convincing", "d": "6/2016"}, {"body": "people going stop trying mutate parent state children ca nt force people sure wo nt force may edge cases might still nessessary still access pass prop etc quite frankly much convient ing event time wo nt attractive sugar also etal part official guide users use actively working around suggested best practices free nt encourage behaviour consequently framework encourage similar behaviour providing magical syntactic sugar like feel feature misused scenarios opposed best practices framework seeks establish", "d": "6/2016"}, {"body": "\u5c24\u5927", "d": "6/2016"}, {"body": "compatibility look like vuerouter", "d": "6/2016"}, {"body": "changes needed compatible hoping better incorporate router vue", "d": "6/2016"}, {"body": "blakenewman get boilerplate template together vuecli ca nt seem get working", "d": "6/2016"}, {"body": "currently change changes needed vueloader make compatible currently used experimentation dependencies large scale applications updated", "d": "6/2016"}, {"body": "eta beta release candidates", "d": "6/2016"}, {"body": "evertt alpha due week beta follow documentation completed maybe support core extending libraries vuerouter ect release candidate beta proven successful", "d": "6/2016"}, {"body": "blakenewman thank quick concise complete response best", "d": "6/2016"}, {"body": "workaround vue", "d": "6/2016"}, {"body": "hi jsx already usable", "d": "6/2016"}, {"body": "reohjs would personally see real step backwards vue support jsx scott", "d": "6/2016"}, {"body": "reohjs evan stream last night mentioned could made plugin imagine goes beta would nt take long someone create happy core jsx plugin sounds like great idea", "d": "6/2016"}, {"body": "happy core", "d": "6/2016"}, {"body": "yeah plugin however seen templates lot benefits standard components", "d": "6/2016"}, {"body": "jsx compilation easy achieve plugin think function would replacement", "d": "6/2016"}, {"body": "providing interface create custom vmodel modifiers way replace way filters seems already used parse user input example parsing formatting simple independent specific data property using modifier would allow parsingformatting reused much less boilerplate setting computed property individual data property creating new component input type want parsingformatting applied", "d": "6/2016"}, {"body": "hi currently working plugin support vuejs directive using wondering migrate code since deprecated directives longer instances better approach directive javascript import languages srcpluginstranslatelanguages import translateutils srcpluginstranslateutils const translatedirective terminal true params translaten translateplural paramwatchers translaten function thistranslate isplural function return translaten thisparams amp amp translateplural thisparams bind function thisboundtranslate thistranslatebind thismsgid thiselinnerhtmltrim thistranslate languageseventemitteron languageslanguagechangedeventname thisboundtranslate unbind function languageseventemitterremovelistener languageslanguagechangedeventname thisboundtranslate translate function let n thisisplural parseint thisparamstranslaten let translation translateutilsgettranslation thismsgid n thiselinnerhtml thisvm interpolate translation export default translatedirective", "d": "6/2016"}, {"body": "throwing short words since new vue say happy see reduction api general underthehood helpers javascript really powerful already computed properties plus reactive features framework almost everything achieved kudos next release", "d": "6/2016"}, {"body": "kemar familiar gettext would simply extend vueprototype translate method", "d": "6/2016"}, {"body": "ability register assets array syntax removed working alpha wondering intentional ie know shorthand looks similar scenarios array syntax useful", "d": "6/2016"}, {"body": "see mention wondering easy would make vue nativescript talk", "d": "6/2016"}, {"body": "something along lines nativescript vue would either weex mentioned quasar scott", "d": "6/2016"}, {"body": "longer generic child component inform parent eventchange nt seem fit pattern global bus vuex use case use range slider search filters range slider component generic child several different search filters currently use range slider finished sliding parent knows trigger search based change", "d": "6/2016"}, {"body": "jrenton inline listeners", "d": "6/2016"}, {"body": "great job guys point view changes say best approach create component tree based one way flow much simple easy debug maintain without data truthness would inverse proportional far top component", "d": "6/2016"}, {"body": "want say makes happy", "d": "6/2016"}, {"body": "expected added list release curious issue still open", "d": "6/2016"}, {"body": "zephraph yes continuously updating list make updates api nothing huge far occasional breaking changes previous alphas", "d": "6/2016"}, {"body": "case used event dispatching past stuck vuex parent component list child components child dispatching event value changed parent able something reaction change tried array child values vuex store thing child component know getter action element array needs update far see vuex provide functionality dynamically get trigger mutuation value wrong would best way handle case without event dispatching", "d": "6/2016"}, {"body": "removed would tell direct child something particular thing happens would scenario data actually changed reactive props nt seem fit could use prop pass timestamp random data watch prop child seems strange global event bus would require generation unique ids child reacting events parent instance parent component child parent listen using inline listener anything way round could pass instance emitter via prop child sound terrible", "d": "6/2016"}, {"body": "gwildu actions take arguments pass item id along action instead making item component fetch corresponding item store fetch list parent pass item data item component prop items locally unique ids generate one item created received api time cuid good enough", "d": "6/2016"}, {"body": "fergaldoyle due parent always knowing children put child get reference child vm either call method directly however would advise rethinking architecture case events flowing make component really hard reason", "d": "6/2016"}, {"body": "playing around vuejs noticed snabbdom pass render function get headlinea paragraph vuejs get way modify text content inside", "d": "6/2016"}, {"body": "dubcanada pass children", "d": "6/2016"}, {"body": "right would make sense thanks", "d": "6/2016"}, {"body": "hi question transition system vue rather proposal nt see plans vue vue often encountered need detect transitionanimation set would end using settimeout hacky ugly way agree question vue way detect end css transition use transition combined vshowvif possibly via event would happy see something like next vue release thanks hearing", "d": "6/2016"}, {"body": "sqal transition hooks", "d": "6/2016"}, {"body": "dubcanada supported next release omitting data creating element", "d": "6/2016"}, {"body": "thanks fergaldoyle simplesmiler hint emit aware parent able listen events emitted child course makes sense listen nonbubbling event", "d": "6/2016"}, {"body": "hi bit background working webgl would like interfaces surface means need render interface example canvas convert content canvas texture working angular react vue vue makes sense reading react came across reactcanvas project interesting thing instead transforming virtual dom real dom nodes draw canvas vue also using virtual dom wondering something like done well", "d": "6/2016"}, {"body": "hello clarification removing generic workflow handling props generic component might look like going recommended way tracking prop basic case seems surely relies parent component returning value prop component gets reflects recent change mean need something like seems like lot boilerplate handle passing changing value notifying parent value changed tracking change internally case change nt propagated back parent missing bit vue magic reactivity also chance lot props handle could get quite complicated could almost see working wrappercomponent children access order mutate directly wrappercomponent handling propscomputedwatches", "d": "6/2016"}, {"body": "towerful exactly mean tracking value want setter style instead explicit power oneway flow parent decide apply change requested child mark child hold apply change later eg checking back server", "d": "6/2016"}, {"body": "simplesmiler using computed property allows bind template use setter amp getter contained place makes easy go see functionality value gets updated opposed different ways access value mutate value within component scattered throughout code using explicit way within model using setters seems like object going cluttered type methods template opposed actual methods guess applies user selects option component component relies value show selected relying parent component passing back component able unless user selects option trigger component display update manually seems moving away vue reactivity internal value track template react use settersgetters wrap property track internal changes amp raise external events watch property update internal value changed externally perhaps struggling get head around new way", "d": "6/2016"}, {"body": "towerful nt one scott", "d": "6/2016"}, {"body": "towerful seems describe essentally components act like inputs user changes value ui want change reflected bound data immediatly types components use comonents myinputvue export default props value special prop received vmodel makes interface real elements custom input components essentially identical twoway binding complex components receive multiple props simple custom inputs abstract discourage using becomes hard reason situations parent decide value receives child data implicitly changed like provide example solvabel vmodel approach still beneftis using may better foundation discussion abstract theory", "d": "6/2016"}, {"body": "oh miss definitely op even discussion comments ago feel bit stupid could original post updated make little clear used component linusborg top head think case component would work missed part original post even complicated object components would matter nesting components reenforces single responsibility components makes lot sense", "d": "6/2016"}, {"body": "towerful using thing synchronous way crosscomponent data flow inherently asynchronous watcher queue demo seen confuse lot people oneway flow makes explicit props synchronous forces rely synchronous trying trick way around cluttered methods simple cases always complicated cases good thing method adjust state keep consistent eg trigger updates manually segway next point moving away reactivity nt agree statement simple cases nt need magic make child pick value updated complicated cases props would use explicit really part reactivity escape hatch trigger manual updates expressed computed good one react changes synchronously like computed using heavily may find data updates taking ticks propagate ever stumbled upon directly nested know talking handler provides better escape hatch letting complicated model changes applied synchronously simultaneously asynchronously child expresses intent making sure child receive updated values next tick receive inconsistent state", "d": "6/2016"}, {"body": "see", "d": "6/2016"}, {"body": "\u6709\u9053\u7406", "d": "6/2016"}, {"body": "\u5982\u679c\u60f3\u81ea\u52a8\u5c06\u7528\u6237\u7684\u8f93\u5165\u8f6c\u4e3a number nan nan \u5219\u8fd4\u56de\u539f\u503c \u4e0a\u9762\u7684demo\u662f\u52a0\u4e86number\u4f1a\u505a\u4e00\u4e2anumber \u548c", "d": "6/2016"}, {"body": "addressed ships", "d": "6/2016"}, {"body": "sorry buzz reading clue update vmodel update checkbox javascript tried document code like vmodel updated accordingly without jquery", "d": "6/2016"}, {"body": "flyyang directly update model never change element variables manually", "d": "6/2016"}, {"body": "way filters really nice vue always build customised components without filters available takes time library provide flexibility also faster convenient way things including filters would nt stop people building components would allow faster development existing functionality fits needs time always compromise api surface conveniency balance found vue already great one getting rid filters seems step back right point balance library becomes smaller codebase boilerplate every projects use grows bigger filters really deprecated maybe would good provide alternative able specify parser formaters vmodel directives easy way filters able write part example provided without filters one also write props value watch value thisfocused thissetdisplayvalue ready thissetdisplayvalue methods oninput emit input target value thisparse elvalue onfocus thisfocused true onblur thisfocused false thissetdisplayvalue setdisplayvalue elvalue thisformat thisvalue flexibility also code result", "d": "6/2016"}, {"body": "aristidesfl filters nt deprecated battle partially lol going limited used text interpolations see scott", "d": "6/2016"}, {"body": "thanks smolinari referring particularly filters though", "d": "6/2016"}, {"body": "simplesmiler wow know reference component specified inside prop thought reference predefined component inside", "d": "6/2016"}, {"body": "simplesmiler thought accepts string definitely docs looks really helpful situations", "d": "6/2016"}, {"body": "addressed vue", "d": "6/2016"}, {"body": "hei nablex find", "d": "6/2016"}, {"body": "already implemented", "d": "6/2016"}, {"body": "sweet also backported", "d": "6/2016"}, {"body": "rpkilby unlikely see", "d": "6/2016"}, {"body": "anyone else looking vue syntax", "d": "6/2016"}, {"body": "hello evan also affected think build following simplified component generic component called named array logic ids ie component iterate inject name made fiddle example would like use component working slots injected without way achieve thanks advance", "d": "6/2016"}, {"body": "anxolin check", "d": "6/2016"}, {"body": "think overly complex edge use case seems better wrap slot element works elementtext content alike programmatically inspect modify slot content using functions", "d": "6/2016"}, {"body": "yukulele looks still support multi placeholder template string fix hope fix thanks", "d": "6/2016"}, {"body": "works thank", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "vbind class\u4e5f\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5382\u5546\u524d\u7f00\u4e48", "d": "6/2016"}, {"body": "vue csp", "d": "6/2016"}, {"body": "problem type transformations conversion value back string straightforward eg date transformer programmatically set bound value object way vue know display text input box back similar concepts twoway filters type transformations also definition makes view sync underlying state take use case instead implicit magic conversions let sync user actually inputs underlying value source truth build derived values separately based value example perform transformations need send server persistence use computed properties based bound value need display elsewhere different format", "d": "6/2016"}, {"body": "take use case instead implicit magic conversions let sync user actually inputs underlying value source truth build derived values separately based value preface upon rereading unclear talking removing directive argument applied sort transformation form data stored model numeric inputs simple use cases may sufficient cases preferred however use case fields rare case admittedly got since need perform math operations user input would end significantly computed properties operations code save server would annoying complex merger computed properties underlying data object agree principal let sync user actually inputs however contention user presented field user intention input number vue store number user nt know spec number inputs weird asked number input number fine work somewhere specifying transform two way filter something like nt want define computed properties write code try merge computed properties another object turn json send server feels like inelegant solution compared frameworks use case numeric inputs little pedantic could apply logic values check boxes truefalse vs string values date fields radio buttons etc time large number properties need special handling run problem nt think use computed property scales well lot sanguine felt like clear path forward elegance used rest framework", "d": "6/2016"}, {"body": "morgul still available conversion number string straightforward case arbitrary types eg date", "d": "6/2016"}, {"body": "argument api uses iso format serialize dates clientside data model deserializes date strings native objects application code expects interact objects perform transformations need send server persistence use computed properties based bound value need display elsewhere different format oneoff type transformation fine morgul said problematic scale latest project dealt lot dates lieu type transforms used twoway filters point made switch using momentjs updating filter incredibly simple template changes required still filter dry change readwrite functions contrast using computed properties would painful new date input would require additional boilerplate setting twoway computed prop computed properties nt dry updating would require globally updating computed property probably huge issue practice definitely prone error thoughts type transformations also definition makes view sync underlying state would disagree view representation underlying state type transformation simply transforms unrepresentable type date object something representable date string programmatically set bound value date object way vue know display text input box back similar concepts twoway filters type transformations definitely similar twoway filters however seem like would much simple intentionally minimal api makes sense transforms vmodel directive modifier otherwise complicate template syntax modifier syntax permit additional arguments template would keep transforms simple get input value produce output value similar filters agree vue nt provide builtin transforms except number possible api js vuetypetransform date render value return value valueisoformat parse value return value new date value undefined", "d": "6/2016"}, {"body": "fyi already possible using prop html text div swapped transition changed also work simulated using dummy html text trigger transitions manipulating array work case nontrivial replicate exact behavior want avoid introducing conflicting apis given around corner think recommendation using workaround", "d": "6/2016"}, {"body": "small example fiddle sure set transition classes based example", "d": "6/2016"}, {"body": "nirazul familiar animated list plugin looks like may forgotten", "d": "6/2016"}, {"body": "implemented see works alpha", "d": "6/2016"}, {"body": "took figure simple little trick make work", "d": "6/2016"}, {"body": "thing happening tags firefox", "d": "6/2016"}, {"body": "gangwolf addressed", "d": "6/2016"}, {"body": "\u8fd9\u662f\u4e0d\u662f\u8fd8\u662f\u7531\u4e8e\u540c\u65f6\u7ed1\u5b9a\u4e86 vmodel \u548c value\u5f15\u8d77\u7684\u554a", "d": "6/2016"}, {"body": "loading text animation news topic thanks", "d": "6/2016"}, {"body": "yeah rjoo solution saved day", "d": "6/2016"}, {"body": "looks like looking making systemjs plugin vue components", "d": "6/2016"}, {"body": "think would valuable add ability interpolate string evaluating expression method works well objects nested level found way bind dynamically maybe add modifier binding clear mustaches example maybe gettersetter function passed disclaimer read spec may addressed", "d": "6/2016"}, {"body": "bhoriuchi computed property use computed property setter", "d": "6/2016"}, {"body": "simplesmiler tried computed properties twoway binding ill give shot thanks tip update simplesmiler issue running using computed property way pass arguments computed property inside getter even point component background use case creating form builder uses json object build forms config object less dimensional array objects rowsforms form config object model field path string field set order use computed property would need able determine component using component binding rowform index order look model path config object currently working using preinitialized dimensional array called bind form model watch object changes update parent data object dislike approach requires preinitialize array dynamic field addition need levels nesting using form builder component another component needs set object looks something like path string would look like update changed using multidimensional array plain object key names used deep watch keep data sync parent still think interoplated bind would beneficial", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "using vuejs try emit event global like u recommend trying something like eventemitteremit myevent mymessage component componentbvue like events myevent function msg consolelog msg use events componentb get event", "d": "6/2016"}, {"body": "maaarkin register listener bus like also issue closed github issues reserved feature proposals bug reports please consider opening thread community forums forumvuejsorg", "d": "6/2016"}, {"body": "following example bit verbose unless data set parent pass prop set data prop default useless missing", "d": "6/2016"}, {"body": "careful using bootstrapdatepicker attempt using changedate event lead endless loop could figure resolve need change jquery datepicker implementation", "d": "6/2016"}, {"body": "hi guys way achieve vue fiddle nt work anymore version wondering new way", "d": "6/2016"}, {"body": "enchufadoo async components", "d": "6/2016"}, {"body": "simplesmiler think loads code component trying render component dinamically example provided achieve currentview changes component changes understand seen many people postscomments say achieved using still nt seen working example ca nt event get work simplest code wondering possible", "d": "6/2016"}, {"body": "simplesmiler realized achieve using vif thanks", "d": "6/2016"}, {"body": "enchufadoo well question nothing original topic wink correct way", "d": "6/2016"}, {"body": "others searching following jquery code used force vue update data value hidden field changed generally external plugin library", "d": "6/2016"}, {"body": "noticing integration components firefox extremely slow keeps spitting error spinning works fine webkit browsers small set stuff rendering", "d": "6/2016"}, {"body": "using anyway like versions behind tue jun pm paperscissors notifications githubcom wrote noticing integration components firefox extremely slow keeps spitting error spinning works fine webkit browsers small set stuff rendering receiving modified openclose state reply email directly view github mute thread", "d": "6/2016"}, {"body": "robertleeplummerjr built complete version need fixed mediumjs version available repository enable modes inline", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "franzskuffka mind adding ghpages branch us fall love", "d": "6/2016"}, {"body": "oh dumb use ghpages comprehensive guide", "d": "6/2016"}, {"body": "nice", "d": "6/2016"}, {"body": "done", "d": "6/2016"}, {"body": "tears beauty", "d": "6/2016"}]