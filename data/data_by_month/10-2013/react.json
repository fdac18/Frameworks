[{"title": "run tests", "body": "", "num": "456", "d": "10/2013"}, {"title": "testing apps built react", "body": "looking pointers test applications built react could nt find anything think would really helpful page docs explaining test apps built react documenting best practices found tests repository looks like unit tests core library applicable testing custom components etc questions supposed test model react components supposed use acceptance tests automated something like selenium nice way unit test react components pointers would greatly appreciated", "num": "455", "d": "10/2013"}, {"title": "reactrenderdocumenttest crashes ios safari", "body": "", "num": "454", "d": "10/2013"}, {"title": "make controlled component option", "body": "currently advantage think using uncontrolled components lightweight syntax reactlink made wonder nt better way currently proposal keep controlled controlled sugar realize bit magic considering currently need explain reason deviating dom provide addon another build benefits uncontrolled components might seem bit backward anyway feel pros outweigh cons new format still two options similar controlleduncontrolled benefits controlled component", "num": "452", "d": "10/2013"}, {"title": "update top level api docs completeness", "body": "running x x x x x x x x x x deprecated mentioned x x", "num": "449", "d": "10/2013"}, {"title": "docs nav header behaviour different screen sizes", "body": "large screen sizes nav fixed smaller ones obviously intentional fine except noticed recent implementation page anchors nav bigger screens hide anchor", "num": "447", "d": "10/2013"}, {"title": "make jsx transformer string quoting configurable", "body": "hello guys first great project tweaked linter plugin sublinter use react tools transform jsx code linting small issue though code generated use double quote strings thus enforcing single quote string produce error enforce single string transformer jsx reactdom var react require react moduleexports reactrendercomponent foo documentgetelementbyid example generates null foo instead desired null foo js jsx reactdom var react require react moduleexports reactrendercomponent null foo documentgetelementbyid example", "num": "445", "d": "10/2013"}, {"title": "synthetic enterleave events type", "body": "enterleaveeventplugin nt explicitly set event type synthetic events inherit type native event probably best set type events dispatching thanks marclar reporting irc", "num": "444", "d": "10/2013"}, {"title": "react throws rendering html tags inside windows app", "body": "using react javascriptbased windows app html tags cause error thrown mounting example audio tag shown causes following error javascript runtime error unable add dynamic content script attempted inject dynamic content elements previously modified dynamically might unsafe example using innerhtml property add script malformed html generate exception use tostatichtml method filter dynamic content explicitly create elements attributes method createelement information see hugely pressing issue probably offer way using windowtostatichtml available", "num": "441", "d": "10/2013"}, {"title": "ship", "body": "unless comes really quickly since likely change master nontrivial breaking ways soon going use track prs commits merged x x x x x x explicitly taking changes behavior default prop usage", "num": "439", "d": "10/2013"}, {"title": "reactlink nt work input type range", "body": "ca nt provide fiddle since nt support yet get error uncaught invalidstateerror attempt made use object longer usable works fine types inputs", "num": "437", "d": "10/2013"}, {"title": "components able listen tap events", "body": "question use touch events react answer use commonjs git clone edit reactdefaultinjectionjs include tapeventplugin npm install grunt add reactinitializetouchevents true code right place sucks instead think either put tapeventplugin addons create reactmobile build default", "num": "436", "d": "10/2013"}, {"title": "document selection composition events reference page", "body": "nt right", "num": "432", "d": "10/2013"}, {"title": "mixins nt available custom proptype validations", "body": "writing custom validation function would like able access mixins shared validation behavior given following mixin goal would could following var hello reactcreateclass mixins mymixin fails instance possible autobind proptype functions jsfiddle code slightly modified reference also tried following surprised failed context var hello reactcreateclass mixins mymixin", "num": "431", "d": "10/2013"}, {"title": "allow namespacing refs", "body": "great one could namespace references backing instances returned render silly example javascript var editor reactcreateclass componentdidmount function thisrefshasownproperty syntax var lang thisrefssyntax var editor thisrefssyntax lang editorprettify colorize render function return", "num": "430", "d": "10/2013"}, {"title": "use right document iframe selection events", "body": "use directly bunch might right thing event occurring right split", "num": "427", "d": "10/2013"}, {"title": "jade", "body": "dom code written jade easy way use jade react", "num": "424", "d": "10/2013"}, {"title": "dynamically creating svg", "body": "svg nodes created properly created dynamically even add wrappers others later lazily checks necessity wrapping decides wrap browsers let create tag instead ideas change facilitate", "num": "421", "d": "10/2013"}, {"title": "remove passing lifecycle methods", "body": "referring think remove passed two reasons unnecessarily touching dom makes separation react dom harder something seen discussed inconsistent lifecycle methods since adding due reason way stay consistent remove two methods makes adding new arguments harder future", "num": "416", "d": "10/2013"}, {"title": "perhaps warn writing bad proptypes spec", "body": "instead end silently ignoring prop type ends undefined maybe could warn undefined use fancy magic newer browsers warn accessing unknown properties", "num": "415", "d": "10/2013"}, {"title": "document dangerouslysetinnerhtml guides reference", "body": "", "num": "413", "d": "10/2013"}, {"title": "add link warning doc pages", "body": "relevant irc log", "num": "408", "d": "10/2013"}, {"title": "make site work", "body": "simple making sure include polyfills document", "num": "406", "d": "10/2013"}, {"title": "rename module", "body": "simple easy first task someone tackle could help get know parts code base thoughts alternative names", "num": "405", "d": "10/2013"}, {"title": "get rid sanitize dependency docs", "body": "osx nt ship ruby would nt big deal would rather make everybody jump hoops able contribute documentation see contributing right even using sanitize nokogiri dependency requires ruby think probably something could done projects fix feel free take path dependency introduced", "num": "401", "d": "10/2013"}, {"title": "multiple owners refs", "body": "component rendering free return whatever wants given props including children one thing may want mutate input component instance including attaching ref best practices wrt modifying component instances passed either via props children fiddle seems reasonable want owners content although original ownercreator full control output rendering ideally would expect react support ability access component via refs seems like multiple ownersrefs reasonable solution", "num": "399", "d": "10/2013"}, {"title": "refs nt rendered confusing errors", "body": "talking paulshen ref behavior see ref component rendered dom ref never gets attached owner would expect would return valid unmounted react component would throw unmounted component", "num": "398", "d": "10/2013"}, {"title": "getinitialstate returning something weird followed setstate world worst error message", "body": "see return string call get amazing error message", "num": "397", "d": "10/2013"}, {"title": "jsx esprima transform report correct line number windows line endings", "body": "file windows line endings line numbers traceback incorrect", "num": "395", "d": "10/2013"}, {"title": "jsx tool report file syntax error occurs", "body": "similar issue impossible determine file syntax error since filename reported console", "num": "394", "d": "10/2013"}, {"title": "jsxtransformerjs nt report filename syntax error traceback", "body": "makes basically unusable nontrivial project people nt using production still fix bug newbies people using hackathons", "num": "393", "d": "10/2013"}, {"title": "jsx tool logspew bash windows", "body": "works windows run bash works logspew", "num": "392", "d": "10/2013"}, {"title": "jsx tool work windows cmdexe", "body": "running arguments windows shell reacttools node get throw er unhandled error event error spawn enoent errnoexception processchildprocesshandleonexit", "num": "391", "d": "10/2013"}, {"title": "svg children nt update", "body": "jonase reported issue irc updates x attributes inside nt move rect around repro master click anywhere screen move rect doesnt cc sebmarkbage", "num": "390", "d": "10/2013"}, {"title": "syntheticevents attributes null svg events", "body": "jonase reported issue irc broken master repro click square expand event see fields including nativeevent null", "num": "389", "d": "10/2013"}, {"title": "error message returning null render hard understand", "body": "says reactcompositecomponentrender valid reactcomponent must returned nt obvious people means especially result nullundefined perhaps could better message", "num": "388", "d": "10/2013"}, {"body": "relies benjamnpopulist amp benjamnpopulist", "d": "10/2013"}, {"body": "internally use reacttestutils sure exposed build", "d": "10/2013"}, {"body": "area active exploration development totally right obvious even us unfortunately best way test react components vjeux mentioned reacttestutils best offer right", "d": "10/2013"}, {"body": "nt feel strongly uncontrolled forms think pretty convenient want rely browser submit rather read js really really really additional magic like implicit many us already lot times looking bug react app need look stateful components easily identified see lot downsides lot upside", "d": "10/2013"}, {"body": "replacement current though get argument listing states already linking addon nt imply nt really bother", "d": "10/2013"}, {"body": "way explicit", "d": "10/2013"}, {"body": "yeah agree saying maybe dropping would nt much problem since probably place used thing prompted suggest", "d": "10/2013"}, {"body": "yeah bothering pull request", "d": "10/2013"}, {"body": "companies enforce double quoted strings know maybe could option though", "d": "10/2013"}, {"body": "yea making option probably would nt terrible though maybe would even better respect original quoting way nt deal quotes however use output always uses double quotes would need add additional processing cc jeffmo", "d": "10/2013"}, {"body": "sure exactly mean since original quoting case", "d": "10/2013"}, {"body": "ah true thinking prop values child values child case yea original quoting preserve think go path though", "d": "10/2013"}, {"body": "nt even parse right think", "d": "10/2013"}, {"body": "thanks spicyj tiny detail option would great though", "d": "10/2013"}, {"body": "spicyj used", "d": "10/2013"}, {"body": "btw one option remove trailing white spaces left jsx would nice", "d": "10/2013"}, {"body": "think fix trailing whitespace issue independently argue big ends", "d": "10/2013"}, {"body": "yeah also little weird turns spaces", "d": "10/2013"}, {"body": "could actually log console funny things log objects event objects reused pooled sometimes see reused values console happens sounds like actually confirmed logging mistake", "d": "10/2013"}, {"body": "nt confirm enterleaveeventplugin code certainly nt set type calls syntheticmouseeventgetpooled native event believe chrome inspector also fine see properties immediately screenshot confusion results expanding object later", "d": "10/2013"}, {"body": "yea single line logging see correct time logging expanded object lies", "d": "10/2013"}, {"body": "yes two separate handlers get log messages logging", "d": "10/2013"}, {"body": "thanks confirming", "d": "10/2013"}, {"body": "nt use createelement elements instead", "d": "10/2013"}, {"body": "alternatively suppose setinnerhtmlunsafe would trick", "d": "10/2013"}, {"body": "cool ship fix", "d": "10/2013"}, {"body": "ship", "d": "10/2013"}, {"body": "could make fiddle using starting point thanks", "d": "10/2013"}, {"body": "", "d": "10/2013"}, {"body": "looks like selecteventplugin getselection accesses selectionstart range input throws exception nt text input specified dom spec cc joshduck", "d": "10/2013"}, {"body": "fact looks like happens even make custom onchange handler meaning hard use range selectors react", "d": "10/2013"}, {"body": "updated jsfiddle links upgraded nt working get fiddle link", "d": "10/2013"}, {"body": "older versions", "d": "10/2013"}, {"body": "thanks lot reporting roll next release", "d": "10/2013"}, {"body": "problem thanks quick turnaround next release", "d": "10/2013"}, {"body": "reactmobile build", "d": "10/2013"}, {"body": "note current workaround make mixin available globally use directly fairly new reactjs source idea level effort enhancement request seeing reasonable workaround viewing high priority request", "d": "10/2013"}, {"body": "makes sense pretty simple fix change", "d": "10/2013"}, {"body": "made patch project works great open pull request", "d": "10/2013"}, {"body": "gets job done slight modifications", "d": "10/2013"}, {"body": "modify example specifically show done existing implementation case adds tight coupling render code instance sometime future remove instances throw error modify code places depend kind tight coupling specific case may able remove code still references instances remove makes complicated assumed issue considered might well implement namespacing references", "d": "10/2013"}, {"body": "nt think considered saying could loop check word nt optimal thing nt looping refs manipulate components trying", "d": "10/2013"}, {"body": "nothing happened recently would nt count yet convinced want make sort change refs using string nt need complicated logic nt need actually parse use somebody want use period string let also nt really guarantee period real separator might actually intended parsed actually parsed problem would get parsed longer add anything else would nt totally obvious keeping simple keep surprises minimum difference refs components nt implied semantics fact simple namespacing follows naturally everything claimed namely html component assume function scope since transform fact nothing stopping writing transformed js using namespaces props much imply anything quotes string stay string based inclined wontfix would actually suggest maybe going opposite direction storing list refs object maybe namespace iterating object instead refs seeing value exists something like options js var syntaxrefs syntaxjavascript syntaxhtml syntaxcss syntaxc maybe var refs syntax html syntaxhtml c syntaxc var editor reactcreateclass componentdidmount function syntaxrefsforeach function ref ref thisrefs var editor thisrefs ref editorprettify colorize render function return", "d": "10/2013"}, {"body": "charuru jade parses strings like templating engines react nt since hood htmllike tags desugared function calls nt think two work together", "d": "10/2013"}, {"body": "chenglou thanks aware would nt possible box kind preprocessing think feasible pointless think", "d": "10/2013"}, {"body": "would like write parser allows write jade js desugars plain js guest think likely prove difficult one advantage jsx right added simple semantics top existing js parser esprima use convert vanilla js could probably make work though personally convinced worth effort regardless wo nt adding support feel free explore", "d": "10/2013"}, {"body": "", "d": "10/2013"}, {"body": "oh sorry", "d": "10/2013"}, {"body": "also makes annoying add new useful arguments ever", "d": "10/2013"}, {"body": "ops added", "d": "10/2013"}, {"body": "let warn anything function maybe", "d": "10/2013"}, {"body": "somehow assumed intentional polyfills nt included feel silly", "d": "10/2013"}, {"body": "eh really intentional never bothered looking back bit silly us say work prove", "d": "10/2013"}, {"body": "ok guys nt blame story post related meanwhile replied paul maybe help stuck thanks support work accomplished", "d": "10/2013"}, {"body": "hmm would appear wo nt possible long use jsxtransform site could fix nodelist array issue wo nt nt try make changes esprima make work think mostly using reserved words keys guess turn bug include polyfills make sure things works well possible provide warnings using problem", "d": "10/2013"}, {"body": "basically tell wrong jsxtransform compatible reactjs compatible right", "d": "10/2013"}, {"body": "correct tested zip emailed online", "d": "10/2013"}, {"body": "thanks zpao remove server wish downloaded srcs would recommend add non jsxtransformed example git tutorial maybe thanks paul spicyj help", "d": "10/2013"}, {"body": "", "d": "10/2013"}, {"body": "probably add whatever returned fact object", "d": "10/2013"}, {"body": "invariant things", "d": "10/2013"}, {"body": "one pattern likely something actually needs fixed", "d": "10/2013"}, {"body": "think mixed file save unix line endings fixed", "d": "10/2013"}, {"body": "bet actually needs fixed", "d": "10/2013"}, {"body": "relatively easy inline tags", "d": "10/2013"}, {"body": "believe fixed change svg attributes sure marked right", "d": "10/2013"}, {"body": "good go", "d": "10/2013"}, {"body": "nevermind chrome inspector bug values actually", "d": "10/2013"}, {"body": "actually chrome bug since event pooled instance actually cleaned time expand initial rendering shows details read wrote right away expansion nt got confused back yungsters explained", "d": "10/2013"}, {"body": "oh maybe want replace null something meaningful user like pooled instance", "d": "10/2013"}, {"body": "picking one", "d": "10/2013"}, {"body": "sweet think big win definitely keep us date progress", "d": "10/2013"}, {"body": "closing need keep general issue around", "d": "10/2013"}, {"body": "going remove event entirely caller internally ca nt find github need make use mutations future use observers instead events", "d": "10/2013"}, {"body": "problem one windows computers one nt use develop stuff checked dependencies particularly looking path variable turns requires one binaries mingw copied mingw folder added c mingwbin c path works perfectly set tools need tried fresh windows installation nothing drivers nodejs reacttools mingw", "d": "10/2013"}, {"body": "skipped went straight", "d": "10/2013"}, {"body": "shipped boom", "d": "10/2013"}, {"body": "ok think close based", "d": "10/2013"}, {"body": "think mostly covers let figure else needs happen make animations react good possible", "d": "10/2013"}, {"body": "oh guess transitiongroup handles without restructuring bit", "d": "10/2013"}, {"body": "actually think pretty reasonable transitiongroup", "d": "10/2013"}, {"body": "future x frag even", "d": "10/2013"}, {"body": "since changed docs issues still relevant update details reopen", "d": "10/2013"}, {"body": "fix coming soon cc jeffmo", "d": "10/2013"}, {"body": "based lack movement discussion associated pr going wontfix comes though open discussing", "d": "10/2013"}, {"body": "based discussion pr let wontfix", "d": "10/2013"}, {"body": "nt think going", "d": "10/2013"}, {"body": "currently looking amending done experimentation good results current implementation basically removes whitespace broken newline remaining whitespace collapsed single space properly retains whitespace produced code basically code arbitrarily spread multiple lines without whitespace produced explicit whitespace within line produces single space ie keeps whitespace gt n gt gt sn gt gt gt n gt ss code text output current rules seem intuitive except last one seems like produce whitespace middle perhaps would easy fix things consider perhaps change implementation acceptable remaining compatible important", "d": "10/2013"}, {"body": "agree seem pretty reasonable except last one would nt personally find keeping newlines two tags helpful though least worth considering removing inconsistent html", "d": "10/2013"}, {"body": "personally perhaps kind biased always run preprocessor similar html whitespace would otherwise creep everywhere causing unwanted spacing appear randomly personally nt know anyone would ever want newline translate whitespace consistent html whitespace would kept asis css whitespace pre etc ever want behavior seems like reasonable solution intentionally horrible example along code currently produces patch note reactrendercomponent x w fix produces following code intentionally mirror structurenewlines original code removed needed thought perhaps whitespace two w kept asis ie produce seeing probably intentional well would simple fix well gt reactrendercomponent reactdomdiv null x reactdomspan alt color w jsxtransformer currently produces lot opinion unintended whitespace resulting newlines well separated whitespace one would perhaps expect gt x l z w w x reactrendercomponent reactdomdiv null x reactdomspan alt color w l", "d": "10/2013"}, {"body": "cc jeffmo", "d": "10/2013"}, {"body": "like going agree proposed next step whitespace contain newline collapsed hopefully since react yet would still within range acceptable compatibility breakages given proper writeup docs", "d": "10/2013"}, {"body": "think onboard conceptually think set rules least intuitive come thus far sounds like everyone else board lets man whitespace bitch", "d": "10/2013"}, {"body": "fyi pull request detailed information available", "d": "10/2013"}, {"body": "something could provide codemodrecast script tweaked thispropschildren always array sometimes array huge headache ig since every callsite manually tested want make sure nt test every callsite look whitespace sure", "d": "10/2013"}]