[{"title": "make delegate events async", "body": "app making delegating events took render time settimeout function thatdelegateevents managed render things screen second faster reason otherwise submit pull request", "num": "766", "d": "11/2011"}, {"title": "historynavigate allow setting state object", "body": "currently history calls empty state object crucial allow caller set state object least using available would sensible default take additional parameter", "num": "764", "d": "11/2011"}, {"title": "modelset triggering setting values attributes", "body": "called setting attributes values", "num": "763", "d": "11/2011"}, {"title": "model fires change event even though nothing changed", "body": "looks like bug backbone model might introduced following issue resolved usecase scenario create apple object initialization set state attribute silently call set object pass args state zero point change event fired code javascript fruit model fruit backbonemodelextend initialize function thisset state silent true create new fruit object var apple new fruit change event triggered however thischanged true set state appleset state nothing changed silent thischanged previously set true fire change event seen line alreadychanging amp amp optionssilent amp amp thischanged thischange options", "num": "757", "d": "11/2011"}, {"title": "use history root option", "body": "trying heavily customized routing decomposing fragment several fragments matching calling callbacks manually final goal modify backbone able nest routers order handle complicated states contribute people interested code working current release backbone fails last repo version line wondering use history root option point automatically removing root first part fragment nt see practical use case resulted unexpected behaviour took quite debug", "num": "756", "d": "11/2011"}, {"title": "accept functions delegateevents", "body": "delegateevents accepts string name method call callback checking method variable function use pointersfunctions events assignations", "num": "754", "d": "11/2011"}, {"title": "use requirejs", "body": "line amp amp typeof require undefined require underscore use requirejs argument amp amp typeof require undefined require underscore function underscore underscore", "num": "753", "d": "11/2011"}, {"title": "wrong check objectivity backbonecollectionget method", "body": "found problem following method use strings types argument method one passes string parameter someid check someid id null returns true typeof someid id undefined need change check something like isobject id idid id", "num": "752", "d": "11/2011"}, {"title": "router amp history issues", "body": "hello trying get routing working sample html function var pagecontroller backbonerouterextend routes index index users users index function thisnavigate index users function thisnavigate users navigate function alert navigating appendto content new pagecontroller menu function bind click function backbonehistorynavigate thisinnertext backbonehistorystart pushstate true root sandbox backbonehistorynavigate index index users without pushstate true option backbonehistorystart chome load navigates index callback nt called links click navigates appropriate urls callbacks index users nt called ff load navigates index callback nt called links click always navigates callbacks called add pushstate true option backbonehistorystart chome load navigates index callback called links click navigates urls callbacks index users called ff load navigates index callback nt called links click always navigates callbacks called routing simply nt work wrong ps also asked", "num": "751", "d": "11/2011"}, {"title": "nt models call unbind modeldestroy method invoked", "body": "hi current implementation backbone model destroyed wo nt unbind event handlers makes handle suscriptions manually example views listening models nt could nt cause memory problems models garbagecollected could submit modification consider interesting", "num": "749", "d": "11/2011"}, {"title": "backbonemootools", "body": "backbonemootools lose fn backbonerouter", "num": "748", "d": "11/2011"}, {"title": "mobile back button working backbonejs jquerymobile", "body": "using navigate method triggerroute true page navigates fine new page history updated hitting back button android device nexus history pops navigation happen pass false triggerroute call backbonehistoryloadurl back button work sort erratically navigate method comment urlencoding fragment advance trigger event reading several posts seems using navigate method right way update history code snippet ergetapp getcontroller navigate home true ergetapp getcontroller navigate home backbonehistoryloadurl known routing issue jquerymobile backbone combination", "num": "745", "d": "11/2011"}, {"title": "collections model", "body": "anyone issues able use setup backbonecollectionextend model mymodel mymodel never gets initialized browsers works", "num": "744", "d": "11/2011"}, {"title": "global events ajax startstoperrorsuccess", "body": "trying implement global ajax loading indicator new backbone project able find builtin events hook displaying hiding loading indicator would helpful backbone fired events ajax start ajax stop ajax error ajax success using native collectionfetch etc methods", "num": "741", "d": "11/2011"}, {"title": "add namespace support backboneevents", "body": "add ability namespace events like jquery allows group events well oneoff event namespaces anonymous function event binding unbinding", "num": "740", "d": "11/2011"}, {"title": "validation execute successful save", "body": "javascript var user backbonemodelextend urlroot users validate function attrs return attrsvalid false error message var u new user id valid true uset valid false error function consolelog arguments shows following arguments model instance error message options good shiny usave null error function consoleinfo arguments server responds nothing json expect success would say error least error callback gets executed arguments model instance model instance options happens request sent handled callback triggered calls validates fails whatever reason nt matter callback executed weird raise success error time suppose success validation", "num": "737", "d": "11/2011"}, {"title": "backbonehistory documentation", "body": "short documentation backbonehistory lots examples like", "num": "735", "d": "11/2011"}, {"title": "todos sample bug accidentally works", "body": "see", "num": "734", "d": "11/2011"}, {"title": "api catalog events inaccurate change change attribute parameters", "body": "currently reads change model collection model attributes changed change attribute model collection specific attribute updated collection passed second argument events instead read something like change model options model attributes changed change attribute model newvalue options specific attribute updated", "num": "732", "d": "11/2011"}, {"title": "calling clear nt set changedattributes contain removed attributes", "body": "", "num": "730", "d": "11/2011"}, {"title": "ability completely unbind events view dynamic situations", "body": "hitting issue nt found good solution page extremely dynamic load views may bind elements may also create view create different view recreate first one issue though event handlers persist find event firing twice flow would viewa viewb vewa causes newest view double fire events feels like completely dynamic pages application would want ability completely destroy unbindallevents given view cant seem figure known solution something others feel needed could code provide pull request others want one note view multiple views would expect unbind subviews well thanks", "num": "728", "d": "11/2011"}, {"title": "circular references views", "body": "started playing around backbonejs planing use coming project right backbone views resulting circular references view object reference dom element object dom element references callback functions call dom events callbacks properties view object bound view object results viewobject domelement eventcallback viewobject many cases may problem case large table rows plan implement cells separate view object would result objects never garbage collected easy way resolve problem problem overseen anything", "num": "725", "d": "11/2011"}, {"title": "model validation prevents setting attributes cases", "body": "given following model trying set attribute silently failed validation work inconvinient", "num": "724", "d": "11/2011"}, {"title": "initialize versus constructor", "body": "would want use initialize would want use constructor documentation make look like synonyms source shows handled differently", "num": "720", "d": "11/2011"}, {"title": "handle deletion relational data", "body": "suppose collection modelperson person many bikes modelperson holds collection modelbike destroy modelperson destroy would called modelbike held beong person would result shitload unnecessary requests way overload destroy avoid", "num": "719", "d": "11/2011"}, {"title": "spacing consistency", "body": "consistency sake functions written either function bla function bla", "num": "718", "d": "11/2011"}, {"title": "models data validated collection resets", "body": "use validation initiates lot validation requests load data server think optionssilent amp amp modelvalidate amp amp modelperformvalidation attrs options model false", "num": "715", "d": "11/2011"}, {"title": "collection binding late model constructor", "body": "backbonejs great useful single page app found issue ca nt use thiscollection modelset method code modelconstructor collection binding modelset javascript backbonemodel function attributes options thisset attributes silent true options amp amp optionscollection thiscollection optionscollection think binding collection move thisset", "num": "714", "d": "11/2011"}, {"title": "uncaught typeerror undefined function line backbonejs", "body": "sorry english well new backbonejs try use creating simple example manage view without data yet code int fiddle error shown run chrome get error console uncaught typeerror undefined function extenddelegateevents backboneview child anonymous function fextenddeferrederesolvewith eextendready caddeventlistenerc try search error ca nt get anything fix thanks", "num": "713", "d": "11/2011"}, {"title": "setting click touchstart events dynamically view", "body": "got dilemma maybe easy solution perhaps one could extend way backbone sets events view crossdevice app mouseusers well tablet use helps swap click events touchstart touchclient allow certain click events creates less responsive ui like able set events dynamically without write lot conditional blocks one could include possible events events object mute later handlers nice nip things bud simple workaround modification backbone parses events object strings var clicktouch click modernizrtouch clicktouch touchstart var fooview backboneviewextend initialize template etc events would great use nt work reason clicktouch titlespan titleclick titleclick etc", "num": "712", "d": "11/2011"}, {"title": "method extend", "body": "running code get uncaught typeerror object function javascript method extend wrong", "num": "711", "d": "11/2011"}, {"title": "backbonecollectionget id randomly returns undefined", "body": "hey spent time bug fixing code realized backbonecollectionget id sometimes randomly returned undefined coding image viewer app set three collections one current item one upcoming items one hidden buffering images models thing want get first element collection pass another collection code itemtoreturn sometimes randomly undefined even collection model specified id model id id integer model btw seems backbonecollectionat index works properly codebase working code figured proper way solve problem hopefully issue helps guys make backbonejs better best milan", "num": "708", "d": "11/2011"}, {"body": "advantage selectors scoped benefit using cases probably working expected second argument added call might break something quite sure jquery handling calls first argument selector second argument also provided usecase makes sense tl dr use directly edit said might make sense add drop second argument passed support passing nonselector argument usage even tho cases probably better faster call directly", "d": "11/2011"}, {"body": "actually work", "d": "11/2011"}, {"body": "add shesek wrote write way round jquery function used either search dom elements create dom elements used searching dom elements", "d": "11/2011"}, {"body": "yep think would actually better fail fast notion creating new dom element context another one nt make sense new element nt actually present dom yet", "d": "11/2011"}, {"body": "thanks creating issue provide detailed use case empty jsfiddle template set backbon get started", "d": "11/2011"}, {"body": "nope current behavior correct model perspective first undefined called became change", "d": "11/2011"}, {"body": "defies expectations little bit well consider cases var new backbonemodel mset name joe silent true nt fire change event mset name joe fires change event var new backbonemodel age mset name joe silent true nt fire change event mset age fires change event expect setting attributes silent mean never fire change event caused operation opposed fire change event next time setwithoutsilent change called understand saying model perspective change seems unexpected choose stick current behaviour proper way setting attribute never firing event setting value directly attributes hash seems correct lose correct previousattributes behaviour manually setting seems little bit whack thanks much", "d": "11/2011"}, {"body": "choose stick current behaviour proper way setting attribute never firing event ignore event nt care particular change changes always happen silent way saying yet", "d": "11/2011"}, {"body": "point root option automatically removing paths resolve relatively mount pushstateenabled backbone app somewhere root host example could backbone app living navigate pushstateenabled route route triggered", "d": "11/2011"}, {"body": "ok got thanks", "d": "11/2011"}, {"body": "accept direct function nt reference instance view nt make much sense see", "d": "11/2011"}, {"body": "makes sense sorry open ticket next time use forum", "d": "11/2011"}, {"body": "afraid nt understand asking", "d": "11/2011"}, {"body": "afraid looks like nt tried nt think javascript", "d": "11/2011"}, {"body": "nope javascript collect garbage stop referencing views models listening one another gc like propose change please submit test demonstrates real memory leak", "d": "11/2011"}, {"body": "afraid nt backbonemootools take request elsewhere", "d": "11/2011"}, {"body": "nt heard one would nt exactly surprised think lots folks trouble integrating jquery mobile also afraid ca nt diagnose without smartphone jquery mobile app come change future think made let us know", "d": "11/2011"}, {"body": "stackoverflow link resolution noticing render method getting called twice windowhistoryback look see code known issue solution", "d": "11/2011"}, {"body": "trailing comma example consider using code quality tool jslint jshint", "d": "11/2011"}, {"body": "ah yea noticed copied code without checking nt problem thanks anyway", "d": "11/2011"}, {"body": "could also aspect programming afaik almost everything need starting point access modelcollection invoked jqhxr nt know zeptoender hook end events trivial follow idea glad see results", "d": "11/2011"}, {"body": "via jquery global ajax events also take advantage deferred objects issues fetch", "d": "11/2011"}, {"body": "true want hook ajax requests need models collection events vlucas talks way bind inside modelcollection view act little simplicistic job ps sure bind complete event jquery moved apis little much", "d": "11/2011"}, {"body": "wookiehangover acutally tried first luck sure never firing could nt get jquery global ajax events even anything bound wanted show object put outside block etc luck hence feature suggestion thanks yuchi example code look function bit ideas comments getting something like backbone could see used things well", "d": "11/2011"}, {"body": "personally like idea opinion counts much see little use cases let feature enters bb code base edit comment fallacious make jsfiddle test interested understanding happening", "d": "11/2011"}, {"body": "horrible working one", "d": "11/2011"}, {"body": "yuchi thanks nudge right direction played bit determined may actually bug jquery related jsonp datatype using full url instead path probably related fact nt actually ajax point remote script include jsonp path works jsonp full url work even domain", "d": "11/2011"}, {"body": "yep jquery ajax events better sort thing comprehensive", "d": "11/2011"}, {"body": "submit pull request would consider inclusion backbone", "d": "11/2011"}, {"body": "addressed", "d": "11/2011"}, {"body": "nope events delegated thru jquery zepto events handled backboneevents", "d": "11/2011"}, {"body": "moment backbone events named arbitrary strings desirable adding namespaces would make true anymore worth add namespaces namespacing sake useful terms backbone models views add good use case would come handy reopen", "d": "11/2011"}, {"body": "jashkenas well first rather specific usecase namespace events allows easily bind unbind events anonymous functions specific narrow use case broader context allows group events easy manipulation since backboneevents supposed generic mixin handled little broadly models views namespacing events allows things like triggering unbinding whole set events", "d": "11/2011"}, {"body": "yep well aware works jquery whole variety bubbling dom events thousands html elements handful specific events models views glad take look patch feel like cooking one still need good examples would come handy backbone app landing", "d": "11/2011"}, {"body": "actually really sure bug think something wrong", "d": "11/2011"}, {"body": "right name global instance name history class docs correct agree totally confusing", "d": "11/2011"}, {"body": "clear backbonehistory becomes available instantiate least one controller", "d": "11/2011"}, {"body": "nt quote page load application finished creating routers sure call route initial url later routers created routes set properly call begin monitoring hashchange events dispatching routes", "d": "11/2011"}, {"body": "would say key part documentation history serves global router per frame handle hashchange events pushstate match appropriate route trigger callbacks nt ever create one use reference backbonehistory created automatically make use routers routes part apparently read remember", "d": "11/2011"}, {"body": "imo would replace created instantiated", "d": "11/2011"}, {"body": "yeah look way till commits issue get straightened", "d": "11/2011"}, {"body": "jquery handle", "d": "11/2011"}, {"body": "element unbind handle issue mentioned want entire view theviewel unbind still doesnt work would theviewel unbind delegateevents theviewcid problem unbind child views thus app would traverse child views manually unbind well", "d": "11/2011"}, {"body": "take look think implementing baseclass views noop destroy method callextend", "d": "11/2011"}, {"body": "thanks relevant response solution something mind feels like something rolled backbone also one thing noticed thisunbind nt instead thisel unbind delegateevents thiscid tested thisunbind still events defined events object view firing", "d": "11/2011"}, {"body": "little bit preamble backbone leverages delegate events reduce amount overhead associated binding tons events even bind multiple events single view think bound one event views root element concern circular references domelements backbone view handlers since view handlers properties view object reference back view object new different view take look jquery object time way selector find tons socalled circular references unfortunately accurate going see performance issues view instances dom elements events needing deal high numbers elems suggest parent view attached entire table list whatever rely event bubbling capture events individual cells rows little bit work instantiating individual views row performance benefits pretty obvious fwiw also good use case data attributes able preserve references dom nodes backbone classes eg", "d": "11/2011"}, {"body": "okay already wrote irc get saying asume circular references real problem cases contrast case limited amount views created still think issue possibly leads memory leaks fine", "d": "11/2011"}, {"body": "laszlokorte referring old internet explorer bugs caused references dom js bugs longer issue addressed backbone create references dom js objects", "d": "11/2011"}, {"body": "thank reply aware circular references problem anymore", "d": "11/2011"}, {"body": "could though logic would get little complicated catch setting null topic exists", "d": "11/2011"}, {"body": "namelessjon really making sure validation logic mean", "d": "11/2011"}, {"body": "thanks guys nt come mind", "d": "11/2011"}, {"body": "runs backbone sets structure called inside structure function basically need augment anything backbone sets structure use need augment anything backbone sets structure use", "d": "11/2011"}, {"body": "thanks makes sense mark closed looks like want update documentation", "d": "11/2011"}, {"body": "making explicit documentation", "d": "11/2011"}, {"body": "also raised similar question pauluithol author backbonerelational library encountered memory management issues lifecycle cached models backbonestore trying release model attributes backbonearticulation wookiehangover also relation pull request memory management hooks also suggested could bigger discussion terms hooks party library writers would put hooks memory management topics review enhanced backbonejs bigger interdependent community party plugin writers", "d": "11/2011"}, {"body": "provide detailed test case describing empty template get started", "d": "11/2011"}, {"body": "already consistent exception noops one line handlers appear code base every functional expression already formatted", "d": "11/2011"}, {"body": "thanks ticket could provide detailed test case behavior describing empty test case get started", "d": "11/2011"}, {"body": "good catch test case described behavior get context purpose overriding set example thanks ticket", "d": "11/2011"}, {"body": "thanks test case project cloud storage system api return user files array filecollection file amp directory create filemodel attribute path create new file set file path directory need decide file whether new file created client put code filemodel set method thanks help", "d": "11/2011"}, {"body": "remove events property view error", "d": "11/2011"}, {"body": "need include jquery backbone nonerroring example code note jquery backbone underscore included jsfiddle interface inlined html", "d": "11/2011"}, {"body": "timeglider thanks ticket good news behavior already supported events property may also defined function returns events hash make easier programmatically define events well inherit parent views", "d": "11/2011"}, {"body": "thanks sam glad know give try meanwhile know sample somewhere", "d": "11/2011"}, {"body": "problemo quick example", "d": "11/2011"}, {"body": "thanks much sam", "d": "11/2011"}, {"body": "anyway javascript literal object notation use expression keys following valid even following correct last case put inside expression js literal object notation keys must strings single double quote literals follows rules variable name please note json thing also requires double quotes", "d": "11/2011"}, {"body": "make sure load underscorejs load backbone", "d": "11/2011"}, {"body": "korsosm thanks ticket created test case code unable reproduce results talking test case seems inaccurate please fork post back updates", "d": "11/2011"}, {"body": "jasmine specs want test route definition portion route defined simply create spy handler navigate route verifying arguments expected note need eliminate anonymous functions want effectively good idea anyways discretely test given route definition value named var router var playlistroute function user permalink secret thisroute w sets w w playlist playlistroute specs characterize regular expression correctly passing arguments playlistroute describe playlist route function beforeeach function spyon playlistroute routernavigate mesetspermalinksecret true call playlistroute function expect playlistroute tohavebeencalledwith permalink secret works jasmine manualspecrunnerhtml setup sure using unit testing ninja edit wanted update add nt normally use routernavigate router specs simply call route handling function directly assert expected behavior see comment details", "d": "11/2011"}, {"body": "davemo thanks input done similar route testing using sinonjs mocking qunit", "d": "11/2011"}, {"body": "davemo use similar approach unfortunately nt work well context route function different cane set expectation coffee class appusersettingsrouter extends backbonerouter routes accountsettings accountsettings accountsettings gt consoleinfo accountsettings gets called describe usersettingsrouter gt router null beforeeach gt jasmineajaxusemock router new appusersettingsrouter call accountsettings gt spyon router accountsettings routernavigate accountsettings true expect routeraccountsettings tohavebeencalled fails accountsettings proxied spies related workaround would add another method router pass call really like would", "d": "11/2011"}, {"body": "dnagir using jquery suggest looking vertebrae plugin testing pretty much exactly written", "d": "11/2011"}, {"body": "tbranyen sure would help rewrite spec nt care persistence ajax show please", "d": "11/2011"}, {"body": "dnagir oh snap dude looking code seeing something totally different would love blame coffeescript one p backbone internally tests simply setting variable flag checking also entirely sure testing something provided backbone internally", "d": "11/2011"}, {"body": "want test backbone internals rather make sure correctly define routes router mediator views want test part ideally though like test correct data passed views navigation occurs", "d": "11/2011"}, {"body": "dnagir would nt directly call routernavigate test testing backbone internals ensure routing works advertised true unit testing approach would call routeraccountsettings verify behavior inside function works expected set two different tests follows describe usersettingsrouter gt router null beforeeach gt jasmineajaxusemock router new appusersettingsrouter describe route definitions gt defines route accountsettings gt verifies routes defined expected expect routerroutes toequal accountsettings accountsettings describe accountsettings gt logs stuff via consoleinfo gt spyon console info routeraccountsettings expect consoleinfo tohavebeencalledwith accountsettings gets called benefit clear nt test internals backbone integration test isolate units functionality test discretely", "d": "11/2011"}, {"body": "right probably much better approach additionally something like work testing single route definition coffee defines route accountsettings gt routepresent routerroutes chain pluck accountsettings compact value expect routepresent tobetruthy", "d": "11/2011"}, {"body": "nt think validations dependent savespecific options put state model instead good use case fact needed please add ticket", "d": "11/2011"}, {"body": "well using pass mode flag abstractly validation context eg use case would properly done adding state model suggest much simpler agnostic way getting functionality equivalent eg etc also general programming standpoing since already parameter sweat pass client good practice since nonbreaking change much resistance btw ask comments issue please nt close nullfies discussion updates unless want add contributors reopen issues", "d": "11/2011"}, {"body": "ok thanks use case change committed", "d": "11/2011"}, {"body": "workaround works great sadly slash omitted url becomes ugly routes different root something like ends looking like one routes triggered example new route triggered back forward buttons work url wrong seems like bug chance something wrong going open stackoverflow question report back got bottom", "d": "11/2011"}, {"body": "router web app seems working hope help tested push state browsers hoping fallback nicely hash urls oldies example anchor sorry nt trimmed irrelevant content questions drop comment gist", "d": "11/2011"}, {"body": "thanks lot man looks helpful", "d": "11/2011"}, {"body": "yeah pretty cool", "d": "11/2011"}, {"body": "ran issue well specific use case using media queries provide responsive interface screen sizes views elements nt respond media queries wrote function listen resize events rerender page need rather reference render individual views thought would call rather reference backbonehistory would best router refresh reload method", "d": "11/2011"}, {"body": "issue ansman show routes problem leading slash automatically removed history getting hash default root", "d": "11/2011"}, {"body": "making clear also perhaps winning performance src along way", "d": "11/2011"}, {"body": "", "d": "11/2011"}, {"body": "doublemeaning bind confusing teaching backbone devs especially since functionbind part ecmascript eventbinding use different word aligning jquery would great since web devs familiar", "d": "11/2011"}, {"body": "confirmed", "d": "11/2011"}, {"body": "tbranyen informed backbonejs supports nt clearly documented anywhere need fix tagging ticket documentation", "d": "11/2011"}, {"body": "agreed documentation comments code indicate emulatehttp trigger header parameter emulatehttp triggers header", "d": "11/2011"}, {"body": "looking code seems model stores reference first collection added however added collections collection attribute changed therefore possible one super collection items builds url add items smaller collections pretty easily sound right", "d": "11/2011"}, {"body": "seems like general good approach would write method mostly delegates returns array attribute objects call instead thoughts", "d": "11/2011"}, {"body": "logic would ever want run collectionreset json directly answer never seems reasonable call parse free first rev top head thinking untested thoughts", "d": "11/2011"}, {"body": "sugar underscore absolutely coexist mostly due fact underscore avoids modifying native objects burden sugar undertaken let put way sugar coexist even prototype bottom line overwrite methods already exist important point completely understand backbone based underscore however needs basic tools lifting required underscore provides exposes methods externally plus devs use application logic well course sugar thing backbone could easily based underscore first higher profile underscore also streamlined think well backbone based perhaps ideal situation backbone would define methods needs internally underscore specialty plus backbone app benefit ability use underscore methods well hand bit overhead incurred including whole library always tradeoff bottom line definitely use together without issues", "d": "11/2011"}, {"body": "using zepto problem using zepto change jquery problem disappears", "d": "11/2011"}, {"body": "using jquery back", "d": "11/2011"}, {"body": "unscene hit exact bug routers instantiated lines like perhaps bug routers created correctly", "d": "11/2011"}, {"body": "submitted pull request rejected feel free cherrypick change fork", "d": "11/2011"}, {"body": "problem saved going rabbit hole", "d": "11/2011"}, {"body": "u idea whats causing code exactly issue code something like var tmparray modelget myarray tmparraypush item modelsave myarray tmparray binding modelbind change myarray wont trigger", "d": "11/2011"}, {"body": "never exactly figured one solution create another attribute sake changes update field well trigge view", "d": "11/2011"}, {"body": "also works", "d": "11/2011"}, {"body": "sorry noob would place code pnbv atinux", "d": "11/2011"}, {"body": "code need executed document loaded put anywhere page need jquery ready event document ready function code handle events", "d": "11/2011"}, {"body": "please take account using pushstate makes sense also serverside representation state location way covered user refreshes page makes silly bookmark said may need use event delegation capturing link urls application uses topmain view instead router", "d": "11/2011"}, {"body": "sure need serverside representation state indeed backbone js catch url page loaded problem", "d": "11/2011"}, {"body": "yep meant want urls instead hashes opinion nt make sense one hand application hides address bar lives inside native app nt make sense different urls think may confusion rational behind history api", "d": "11/2011"}, {"body": "opinion two main use cases backbone stateful application webkit webview inside native application address bar refresh back buttons need hashes urls b browser hiding address bar one entry point use hashes stateful application serverside fallback stateless application stateful mode browser application state maps urls multiple entry points ready use urls pushstate popstate", "d": "11/2011"}, {"body": "appreciate thoughts pr", "d": "11/2011"}, {"body": "yeah sure seems complex expect backbone perhaps comparator could used really needed pluggable way define identity sun nov saimon moore lt reply replygithubcom wrote appreciate thoughts pr reply email directly view github", "d": "11/2011"}, {"body": "chance spine backbone merge one project think frameworks lot gain", "d": "11/2011"}, {"body": "doubt spine essentially fork complete rewrite backbone different style entire point interesting bits done differently artellectual curious hear ticket specifically think backbone could gain spine", "d": "11/2011"}, {"body": "jashkenas curious backbonejs nt written coffeescript like spine batman many modern frameworks", "d": "11/2011"}, {"body": "jashkenas think terms features would nt gain much mean almost feature sets would gain maccman core contributor would invaluable project feel many implementations frontend mvc rite need merge make merged ones stronger team think lot things still need work terms frontend mvc side things example solid localstorage implementation thats smart enough cache data server sync data back server properly offline access still keeping data real time basic things like need focused activerecord frontend mvc could say think combined effort help reach goal faster edit explore surfaces javascript mvc probably nt know talking cents form experience far", "d": "11/2011"}, {"body": "paulmillr backbone nt written coffeescript predates extracted documentcloud written javascript artellectual feature sets good bit different spine removes collections makes model class responsible aggregating every model instance patten think common fallacy applied clientside backbone relies underscore extremely useful functions manipulating model data spine nt dependency spine mobile framework building iosstyle applications backbone entirely ui agnostic maccman core contributor backbone would grand also great folks exploring pushing clientside patterns different directions think say definitively combined effort would nt get us closer activerecord frontend mvc entirely scope backbonejs plans push things direction", "d": "11/2011"}, {"body": "jashkenas backbone would essentially fit better back end technology like rails spine strives framework interacting headless backend", "d": "11/2011"}, {"body": "artellectual nt actually want activerecord frontend mvc headless backend", "d": "11/2011"}, {"body": "ah understood btw tried document cloud nice app got", "d": "11/2011"}, {"body": "intended behaviour ids hash update well get work something new silently saved", "d": "11/2011"}, {"body": "many backbone tutorials still refer refresh think doc updated order explain refresh renamed reset", "d": "11/2011"}, {"body": "tchak implemented jquery ajax transport handle xhr uploads directly set model attribute file object way working default backbone sync sample code", "d": "11/2011"}, {"body": "another use case save events would helpful model successfully saved model b needs fetch update server side changes asave may happen many places making success callback bfetch impractical course ways work around limitation simple bind event would much easier", "d": "11/2011"}, {"body": "still fuzzy issue affecting people would seem problem reusing dom element multiple views creating new view element instead rerendering old view correct", "d": "11/2011"}, {"body": "use case yes parent view child views inherited functionality something like inherited parent set existing dom element inheriting views binding dom element moved solution referenced solved rather setting set adjust render method insert dom rather setting new content sure either approach conceptually better worse former nt really work might expect something subset people trying given people attached issue perhaps documentation change alleviate", "d": "11/2011"}, {"body": "think former case expect binding parent view element events binding child view element duplicates events would expect events called twice", "d": "11/2011"}, {"body": "nt duplicate events problem ran multiple children added removed events children sticking around banging original issue filed change functionality much earlier version backbone earlier version events element unbound versus specific view worked nt perhaps others chime different situations", "d": "11/2011"}, {"body": "issue updaing app number pages home search results booking predefined structure number div id used switch pages recreate views passing id el option go search results back home home view recreated dom element double events causing weird bugs", "d": "11/2011"}]