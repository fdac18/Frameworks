[{"title": "doc explain empty function emberisempty", "body": "", "num": "15558", "d": "7/2017"}, {"title": "asyncawait model hooks fail tests", "body": "given model hook uses calls statement fail acceptance test visiting route error happen rewriting using promises understand correctly root issue seems native promises integrate ember run loop reported thought creating issue would help others getting bitten find reported elsewhere workaround possible replacing native promise tests rsvp one add eg making sure configured make babel transpile asyncawait using native asyncawait eg chrome always lead failing tests", "num": "15556", "d": "7/2017"}, {"title": "maximum call stack size exceeded mandatorysetter", "body": "get following exception callstack looks like upper three functions repeating reason still trying set directly calls object calls idea constellation occurs also nt able reproduce twiddle used case using ember also occurred ember remember correctly nt occur ember", "num": "15555", "d": "7/2017"}, {"title": "error compile error modifier", "body": "one templates line property isbuttondisabled set controller keep getting error ember cli please mine wrong", "num": "15554", "d": "7/2017"}, {"title": "cachefor returns wrong value aliased properties", "body": "aliased properties etc return consumed object try get cached value embertwiddle js export default embercontrollerextend appname ember twiddle aliased embercomputedalias appname init thissuper arguments consolelog thiscachefor aliased consolelog get thisget aliased consolelog thiscachefor aliased expected output actual output", "num": "15545", "d": "7/2017"}, {"title": "images templates missing prepend url", "body": "hi upgrade ember project latest version images assets display template used work isadmin enviromentjs file production environment production emberclibuild images missing idea", "num": "15541", "d": "7/2017"}, {"title": "error events fired twice", "body": "example uses mirage problem fact independent mirage looking developer tools one see error thats responded mirage without mirage gets thrown browser appears twice log statement error handler however fires realworldapp handler somehow also firing twice whats going expected error thrown twice console cause handler fired twice whenever say fired twice means stack trace error exact appearances console verified handler attached twice realworld app", "num": "15537", "d": "7/2017"}, {"title": "controller init hook called query param resolution", "body": "similar issue changes refactor routes lookup controllers query params made causing issue app sure remediate problem route query params route question controller hook runs setup controller prior hook run route question hook run part query param resolution route linked causing unintended side effects something need figure way refactor around something else", "num": "15534", "d": "7/2017"}, {"title": "ember debug classcallcheck issue", "body": "emberdebugjs contains two emberbabel amd modules one one without causes", "num": "15533", "d": "7/2017"}, {"title": "setting backing value oninput action nt trigger textarea value update newlinerelated change", "body": "sorry confusing title repro text box try following emberenter emberenter clarity typed nonwindows since textarea value backed property action runs would expect result first would represents text caret second would second one works expected first leaves caret second despite oninput removing newlines confirm console output twiddle second case demonstrates immediately add another nonnewline character newline problem demonstrated first example rectified try first example hit enter bunch times end notice textarea value rectified nonnewline character typed also try typing placing caret hitting enter see issue type nonnewline character rectified seems like despite action always setting property textarea value property backs nt updated newline changes interesting aside paste behaves expect caret stays first line try macos make sure right string copied trailing chars additionally arbitrary copied strings multiple newlines behave would expect temporary workaround enter", "num": "15531", "d": "7/2017"}, {"title": "behavior around changed", "body": "controller injected user nt specified ember result injection empty controller actively generated behavior throws error solution find predicament create said controller restore previous behavior adding issue case bites someone road immediately close", "num": "15527", "d": "7/2017"}, {"title": "thisset nt return value returned computed property", "body": "twiddle demonstrating issue found piece code behind issue isdescriptor computed property currentvalueset obj keyname value else currentvalue undefined amp amp object typeof obj amp amp keyname obj amp amp typeof objsetunknownproperty function unknown property objsetunknownproperty keyname value else currentvalue value change else let meta peekmeta obj propertywillchange obj keyname meta return value imo instead returning value passed function collect value various set functions called let valueset value isdescriptor computed property valueset currentvalueset obj keyname value else currentvalue undefined amp amp object typeof obj amp amp keyname obj amp amp typeof objsetunknownproperty function unknown property valueset objsetunknownproperty keyname value else currentvalue value change else let meta peekmeta obj propertywillchange obj keyname meta return valueset bug working designed", "num": "15526", "d": "7/2017"}, {"title": "active route", "body": "storing order return route later point expected returns route set correct state current observed behavior calling another route returned route url changes however wrong links class example version ember alpha", "num": "15518", "d": "7/2017"}, {"title": "action handler get ignored production", "body": "mysterious reasons action handler completely ignored production temp solution onclick action actionname cases like asyncbutton working", "num": "15517", "d": "7/2017"}, {"title": "slow embererror constructor", "body": "heard grapevine error handling slow using current versions eg looking constructor main offender probably call used format stack trace lazily access property like builtin error objects since year formats traces eagerly could fairly expensive would explain sudden slowdown error handling code looking reenabling lazy formatting soon also noticed call constructor collects stack trace three times call explicit maybe possible avoid useless work current versions enough call also filter relevant frames cc hashseed bmeurer stefanpenner", "num": "15516", "d": "7/2017"}, {"title": "getowner inconsistent behavior devprod", "body": "factory typesafe enumerations js export default function typesafeenum ids klass ids array ids assert ids must array length gt idslength gt klass klass emberobject return arrayproxyextend container null lt note line originally remind consumers provide one ember created one things passed everything worked fine ember development test mode everything continued work fine emitted warnings hit production blew instance removing fixed problem concerns ember core object classes differing behavior devtest vs prod especially since nt even warnings devtest concerned change behavior something weird devtest environments caught problem upgrade", "num": "15507", "d": "7/2017"}, {"title": "getting classcallcheck function error", "body": "canary seeing following error production nt reproduction trace maybe couple classcallcheck rsvp nt stripped sourcemaps enabled production see rsvpjs var allsettled function enumerator emberbabelinherits allsettled enumerator enumerator", "num": "15506", "d": "7/2017"}, {"title": "quest internals prefer generic array methods prototypeextensions", "body": "supersedes stale x addarrayobserver x removearrayobserver x x x pushobject pushobjects reorg public api etc docs tests goal merely decouple internals observable based prototype extensions hopefully give us flexibility make future call prototype extensions general also eases pain using ember prototype extensions disabled accomplished without breaking semver anyway todo x merge enumerable nativearray x merge mutableenumerable mutablearray deprecate enumerable bugfix release deprecate mutableenumerable bugfix release", "num": "15501", "d": "7/2017"}, {"title": "controller init method called model method application route", "body": "issue ember app breaking upgrading method controller particular route executed method route bunch featuresflags check methods set application model working expected gt gt controller route loaded till ember", "num": "15495", "d": "7/2017"}, {"title": "getowner sometimes returning undefined", "body": "related perhaps appears sometimes returns work around", "num": "15492", "d": "7/2017"}, {"title": "beta onfulfillment function", "body": "stepping stack traces seems rsvp catch logic may changed little versions", "num": "15490", "d": "7/2017"}, {"title": "read property isinteractive undefined", "body": "hey guys running issues upgrading app tests reopens certain modules stub perhaps allowed error hit rather bizarre first got hit error exactly emberwormhole describe stub suggested bug got new error tracing shows comes line somehow environment nt recognized wonder fix lookup intended used many thanks", "num": "15489", "d": "7/2017"}, {"title": "propertiesmethods added emberobject using reopen unless object subsequently created", "body": "hello noticed dynamically adding propertiesmethods existing emberobject class using reopen propertiesmethods show tinkering found arbitrary object class type must constructed propertiesmethods added previously constructed objects class type example reopen example documentation works fine const myobject emberobjectextend name object myobjectcreate oget name object myobjectreopen say msg consolelog msg myobjectcreate hello logs hello osay goodbye logs goodbye unless remove construction const myobject emberobjectextend name object myobjectcreate oget name object myobjectreopen say msg consolelog msg myobjectcreate hello osay goodbye typeerror get typeerror osay function", "num": "15488", "d": "7/2017"}, {"title": "firefox bug data binding html component cause selected option rendering wrong", "body": "hey guys experiencing wired data binding bug happened firefox bind properties tag ember computed property computed value updated selected index even number displayed value dropdown would always first value instead actual selected value also tried vanilla js works fine someone help take look thanks advance reproduce please open firefox ember twiddle vanilla jsbin", "num": "15484", "d": "7/2017"}, {"title": "beta negative integer literal causes null reference positional params", "body": "ember beta component invocation like throws exception change negative one positive number exception goes away exception seems first positional parameter case string literal replaced null reference positional arguments handled glimmer stack trace reproduction repo", "num": "15480", "d": "7/2017"}, {"title": "infinite rendering invalidation detected option increase limit disable check entirely", "body": "emberelementquery addon code js const eqresizehandler gt scheduleonce afterrender thisequpdatesizes next thisequpdatesizes used work flawlessly resizing browser tab causes app carsh infinite rendering invalidation detected problem happens window several seconds amount time movement required app crash arbitrary sometimes crashes almost instantly sometimes takes like seconds crash tried replacing increasing timeout unreasonably large values still crashing even sure crash caused code lines seem cause js let loops function loopend current next let lt rendererslength renderers isvalid loops gt loops todo something better renderers destroy throw new error infinite rendering invalidation detected loops return backburnerjoin null k loops backburneron end loopend see three problems code considers infinite loop appear ten loops ten quite small number certain use cases obviously enough example js max call stack larger inifinite loop detected code chooses crash app sob addon used work without issue thing crashing reason code applied closure way override sure perfect reasoning small magic number chosen user able increase number use case produces many loops user able opt arbitrary crashing", "num": "15479", "d": "7/2017"}, {"title": "glimmer component manager todo", "body": "getting glimmer component manager run ember means must clean things ember env always uses instead deferring manager definition ember glimmer application correctly x allow glimmer subclassed x update ember glimmer master x permit template ember got ta like", "num": "15473", "d": "7/2017"}, {"title": "read methods properties details router class", "body": "api ember website problem go documentation router class click method property example map method info shown reading source code page info shown maybe problem layers javascript properly handling style display none show", "num": "15471", "d": "7/2017"}, {"title": "bug closure actions ca nt receive primitive numbers", "body": "found ca nt pass decimal negative numbers closure actions anymore reproductions twiddle repo", "num": "15470", "d": "7/2017"}, {"title": "upgrading ember app throwing random different errors safari", "body": "hi upgraded ember everything works great chromefirefox app safari broken previous ember release worked perfectly getting errors like ownerlookup function ownerlookup viewregistry main ownerlookup undefined null object evaluating misinitialized undefined object evaluating emberdefaultgetowner lookup undefined object evaluating emberutilsgetowner container happen randomly page load click link idea might problem ember worked safari well", "num": "15468", "d": "7/2017"}, {"title": "deactivate called parent route going child route promise model loading template", "body": "twiddle given following route route async model template navigate parent route gets called appears introduced stepped router changes introduced could gather extra transition called due presence loading route", "num": "15466", "d": "7/2017"}, {"title": "need target information thrown", "body": "need enhancement version include target triggered something similar help currently tracking error logs thrown client would help us eliminate bunch errors logs occur due actions defined unhandled since user visits route rfc change", "num": "15465", "d": "7/2017"}, {"title": "missing sourcemaps", "body": "get error upgrading building app two problems supplied source maps missing build obviously warnings break ci related think reason files contain reference sourcemap end file seems new least published npm package files added indexjs really missing tmp tree tries read put pr together exporting files way go given sure", "num": "15464", "d": "7/2017"}, {"title": "form component bound id submit input form attribute nt handle submit event", "body": "one uses component tagname combination form attribute input uses attribute wo nt handle forms submit event gets rendered correctly one clicks method form component wo nt get called attribute element following according mdn form element input element associated form owner value attribute must id element document attribute specified element must descendant element attribute enables place elements anywhere within document descendants form elements input associated one form example twiddle shows two forms first one uses named input second one nt one clicks second input text changes one clicks first input whole page changes form action gets triggered without calling components submit method sure misunderstood input attribute bug ember", "num": "15461", "d": "7/2017"}, {"title": "tests hanging project successfully built", "body": "trying upgrade ember massive project ran another issue process running hangs projects built looking nothing log verbose output whats happening something special try solve issue nt happen browser cli ember emberdata", "num": "15454", "d": "7/2017"}, {"body": "ember leverages handlebars syntax offers different set helpers builtin standard handlebars setup believe looking helper see guides api docs", "d": "7/2017"}, {"body": "thanks info looks like requires parameter string integer following workaround suggested approach", "d": "7/2017"}, {"body": "yes believe recent versions properly handle numbers inputs helper", "d": "7/2017"}, {"body": "yep listed changelog", "d": "7/2017"}, {"body": "thanks look forward change", "d": "7/2017"}, {"body": "ha reviewed implementation actually certain handling functions", "d": "7/2017"}, {"body": "agreed seems like docs bug nt think want get business distinguishing empty function bodies", "d": "7/2017"}, {"body": "nkgm mind submitting pr updating docs", "d": "7/2017"}, {"body": "problem fact trying avoid returning zeroarg functions", "d": "7/2017"}, {"body": "provide reproduction", "d": "7/2017"}, {"body": "sorry nt able maybe figuring mandatory setter help narrow cause saw something module called nt able figure", "d": "7/2017"}, {"body": "need reproduction", "d": "7/2017"}, {"body": "mandatory setter used property watched development mode development assertion", "d": "7/2017"}, {"body": "know whether ember twiddle release build", "d": "7/2017"}, {"body": "ctusch create fresh app via publish repo would great starting point us debug", "d": "7/2017"}, {"body": "wait would property watched failed attempt reproduce error", "d": "7/2017"}, {"body": "locks comment says failed attempt", "d": "7/2017"}, {"body": "error message telling ca nt handlebars expressions position value attribute like assuming boolean value since issue tracker focused bugs framework likely get better faster answers post stack overflow visit channel ember community slack see around", "d": "7/2017"}, {"body": "surprised marked honest cachefor computed props aliases aliases using cache meta flag nt actually cache values", "d": "7/2017"}, {"body": "think expected behavior default done", "d": "7/2017"}, {"body": "public api ever distinguish computed properties aliases created assumed aliases specialcase implementation performance outwardly behave computed properties", "d": "7/2017"}, {"body": "uses namespace internally different", "d": "7/2017"}, {"body": "seems like work around moving sensitive code route hook avoiding issues controller called unexpectedly", "d": "7/2017"}, {"body": "dhaulagiri fine aware every time hook called hook also called case called", "d": "7/2017"}, {"body": "think ok case thanks kumkanillam reminder", "d": "7/2017"}, {"body": "actually seems correct file bower seems offender", "d": "7/2017"}, {"body": "hmm bower seems fine wtf", "d": "7/2017"}, {"body": "ya ca nt actually figure file coming", "d": "7/2017"}, {"body": "stefanpenner issue trying fix basically uses prod since module already required time loaded subsequent definition prod version clobbers proper debug build version", "d": "7/2017"}, {"body": "also able reproduce twoway bound textarea helper getter setter property", "d": "7/2017"}, {"body": "thanks rondalesc", "d": "7/2017"}, {"body": "question behavior change recently", "d": "7/2017"}, {"body": "bug behaviour changed pre match javascript setters semantics following code let set hola value return consolelog ahola logs check jsbin thank", "d": "7/2017"}, {"body": "stefanpenner wrote recently piece code expecting would return value set value passed know much computed property setters return value set serabe bad thanks taking time clarify based answer verified doc matching said", "d": "7/2017"}, {"body": "alexspeller thanks taking look", "d": "7/2017"}, {"body": "probably related", "d": "7/2017"}, {"body": "active link classes get properly restored call calling", "d": "7/2017"}, {"body": "send reproduction repo thank", "d": "7/2017"}, {"body": "schuay believe usage purely cosmetic reasons remove", "d": "7/2017"}, {"body": "x remove capturestacktrace x remove duplicate super call require quick test ensure nt foobar anything", "d": "7/2017"}, {"body": "call super explicit errorcall message kinda funny bitrot time clean", "d": "7/2017"}, {"body": "also stack trace stuff provide deprecations get hit quite abit wonder log deprecation sans stack provide via console message enable stacks thoughts rwjblue", "d": "7/2017"}, {"body": "bit confused chrome branch seems like dead code least current versions arguments property error objects might also easier use extract relevant info rather expensive calls see", "d": "7/2017"}, {"body": "way formats lazily", "d": "7/2017"}, {"body": "bit confused chrome branch seems like dead code least current versions arguments property error objects ya code look funky suspect needs tlc looking", "d": "7/2017"}, {"body": "provide deprecations get hit quite abit wonder log deprecation sans stack provide via console message enable stacks likely via", "d": "7/2017"}, {"body": "schuay nt seem available", "d": "7/2017"}, {"body": "schuay errorpreparestacktrace nt seem available ah method must implement forgot p", "d": "7/2017"}, {"body": "might also easier use errorpreparestacktrace extract relevant info rather expensive regexppreplace calls see thoughts", "d": "7/2017"}, {"body": "thanks reporting good news fixed duplicate fixed master branch backport beta backport release deployed moments ago", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "jamesarosen issue jsc jit bug hard tell exact scenario addressed workaround please give go nt resolve comment w reproduction possible reopen", "d": "7/2017"}, {"body": "please give go next days hope", "d": "7/2017"}, {"body": "jamesarosen keep us posted", "d": "7/2017"}, {"body": "reproduction click make error button twiddle get rid trycatch watch console see actual stack trace production build debug build", "d": "7/2017"}, {"body": "whomever going fix think babel issue ember build rsvp build add possible also reason reverted classes rsvp", "d": "7/2017"}, {"body": "ember twiddle nt support newer versions ember created demo app screenshots links", "d": "7/2017"}, {"body": "sure without details reproduction believe due change made tried ensure pr description explains rationale change general never guarantee controllers would created specific order related route structure pr definitely fixing number bugs edge cases prior behaviors also one situations good fix happened accidentally break subtle behavior app relying apologize sadly believe need refactor logic case", "d": "7/2017"}, {"body": "commented pr text wo nt fixed reasons specified afraid one rare cases fix edge cases offer support slack help refactor yet use slackin app sign thank sorry", "d": "7/2017"}, {"body": "thanks rwjblue serabe explanation appreciate", "d": "7/2017"}, {"body": "reproduction", "d": "7/2017"}, {"body": "reproduction", "d": "7/2017"}, {"body": "see reproduction production build", "d": "7/2017"}, {"body": "need know problem production builds anyone reproduction production build", "d": "7/2017"}, {"body": "people confirmed affects production builds via error logs", "d": "7/2017"}, {"body": "still would like production build reproduction also confirmed existing reproduction webkit nightly affected", "d": "7/2017"}, {"body": "bisected checked cherry picked commit parent seems improved jit jit deopting late point returning undefined peekmeta", "d": "7/2017"}, {"body": "versions safari checked version problem webkit nightly revision fixed", "d": "7/2017"}, {"body": "stefanpenner checked release safari webkit fixed", "d": "7/2017"}, {"body": "master green merged beta running release running cc rwjblue", "d": "7/2017"}, {"body": "yes upgraded issue", "d": "7/2017"}, {"body": "think rsvp particularly line think need check passed sure error stack leads lines", "d": "7/2017"}, {"body": "stefanpenner please review specifically seems assume actually passed custom promise subclasses bug rsvp somehow assuming first arg always present", "d": "7/2017"}, {"body": "stefanpenner nt think rsvp behaving incorrectly gist reproducing issue native inherited rsvp inherited promise behaving way rejecting inherited null run node", "d": "7/2017"}, {"body": "bekzod agree nt believe rsvp offender although surprised upgrading causes downstream issue dont time root cause analysis one issue embers code fix guy cut new beta", "d": "7/2017"}, {"body": "general strongly recommend occur first class type instantiated caveats addition one mentioned fixing performance constraints unfortunately odds thanks opening issue though much appreciated", "d": "7/2017"}, {"body": "forgive topic issue really really interesting", "d": "7/2017"}, {"body": "confirm bug happens even positions though trying debug firefox dev tools really crappy", "d": "7/2017"}, {"body": "made happened odd continue tomorrow", "d": "7/2017"}, {"body": "firefox needs use selected property appending child options attribute nt seem work via attribute via prop", "d": "7/2017"}, {"body": "dup", "d": "7/2017"}, {"body": "although good know related actions helpers also affected", "d": "7/2017"}, {"body": "thanks saw issue nt sure covered case notice negative agree sat jul pm miguel camba notifications githubcom wrote although good know related actions helpers also affected receiving mentioned reply email directly view github mute thread", "d": "7/2017"}, {"body": "closing dup thank", "d": "7/2017"}, {"body": "sure going added cycle jerking window like minute app nt crash never reached time within another try reaches almost instantly dies", "d": "7/2017"}, {"body": "nested element query components added app wo nt even start emphasize used work flawlessly check introduced", "d": "7/2017"}, {"body": "right lolmaus believe removing solve problem", "d": "7/2017"}, {"body": "lolmaus really need try separating separate method call", "d": "7/2017"}, {"body": "looping loop agree configurable nt low happens invalidate rendering render call emberset hook didinsert update render rare need redoing render loop times quite lot lock browser", "d": "7/2017"}, {"body": "building element query addon component detects size changed must update html classes css recalculate happen flash unstyled content component size changes content styled previous style every element query component must recalculate parent element query component updated", "d": "7/2017"}, {"body": "ok measure another pass gt seems excessive", "d": "7/2017"}, {"body": "easy hit button phone", "d": "7/2017"}, {"body": "ok measure another pass said causes flash unstyled content", "d": "7/2017"}, {"body": "seems fix brand new api page thank", "d": "7/2017"}, {"body": "thanks although halffixed read info methods properties links nt work goes first method addobserver happens firefox mine ubuntu chrome works well versi\u00f3n build oficial bits ubuntu also difference watching page firefox chrome maybe related problem links method listing chrome appears two columns think good one firefox appears one column right space wasted serabe try click map method firefox accesing router page link posted", "d": "7/2017"}, {"body": "scrolling fixed please open issues repository like style difference browsers repository bugs framework thinking way better inform contributors file issues suggestions welcome thank time feedback", "d": "7/2017"}, {"body": "breaking emberconcurrency builds testing beta", "d": "7/2017"}, {"body": "specifically emberconcurrency breakage due following hbs pressandholdbutton press perform incrementby release cancelall incrementby decrease pressandholdbutton pressandholdbutton press perform incrementby release cancelall incrementby increase pressandholdbutton raw primitives causing breakage helper casts task closure action", "d": "7/2017"}, {"body": "also breaks liquidfire test suite anybody wants easy test case run dummy app visit", "d": "7/2017"}, {"body": "problem routes app work nt impression routes return unresolved promise beforemodel hook ones fail tried debug route beforemodel hook embergetowner returns object afterwards routeparamsfor embergetowner returns undefined still route instance", "d": "7/2017"}, {"body": "pieterv provide code", "d": "7/2017"}, {"body": "run first reported bug emberbootstrap addon seem cause able reduce reproduction varunsudhakar made bare minimum still uses external dependency embercpvalidations nt think root issue comes however able reproduce without cc offirgolan recorded following piece showing reproduction using repo enter bunch characters occurance exception seems really deterministic happens less randomly case see meta object component also properties seem return although still valid component dom also happens safari mac version ember", "d": "7/2017"}, {"body": "case also appears affect development builds test production builds work fine", "d": "7/2017"}, {"body": "occurring production builds safari osx ios seems happen trigger number actions inputs quickly cpu usage also abnormally high", "d": "7/2017"}, {"body": "found failing development least helped thanks simonihmig two issue debug flag incorrectly replaced meta file one debugger counter missing added think issue fixed person understands debug striping process locks", "d": "7/2017"}, {"body": "spotting issue image explain debug mishandled", "d": "7/2017"}, {"body": "normal behavior leftover curly braces nt instead", "d": "7/2017"}, {"body": "deployed ember yesterday got ratelimited sentry number events logged plan allows events minute various errors showing starting yesterday rolled back ember errors dropped errors happening production deployment made test deployment reversion still ember manage reproduce errors safari locally frustratingly enough information provide help figure happening let know", "d": "7/2017"}, {"body": "upgrading app ember ember unusable safari simonihmig comment best describes reproduction steps app also uses may may coincidence", "d": "7/2017"}, {"body": "record mentioned yet seems fix ready awesome debugging work thanks krisselden amp stefanpenner", "d": "7/2017"}, {"body": "looks like hit gnarly safari jit issue luckily able work around also seems like safari already fixed issue good thing backports pending release", "d": "7/2017"}, {"body": "want add pretty easy work around using action instead", "d": "7/2017"}, {"body": "issue", "d": "7/2017"}, {"body": "think issue relates rather", "d": "7/2017"}, {"body": "definitely issue perhaps addition embercli", "d": "7/2017"}, {"body": "rwjblue able confirm exporting sourcemap files right path go forward see first comment bit confused case able provide quick pr hopefully", "d": "7/2017"}, {"body": "cancel figured issue start called testhelperjs upgrade thank", "d": "7/2017"}, {"body": "hi stefan upon investigating closely bug seems likely caused js error breaks ember functionality rather something ember code works expected time raises doubts race condition thanks checking issue close", "d": "7/2017"}, {"body": "closing ember seems working expected op alternative resolution feel free reopen otherwise", "d": "7/2017"}, {"body": "sorry twiddle running correct fixed issue bug please let know try workaround project", "d": "7/2017"}, {"body": "recent versions ember confirmed tweak handling assertions message calculated assertions predicate falsey example transpiled code debug builds looks like js function addobserverforcontentkey content keyname proxy idx loc loc gt idx var item objectat content loc item true amp amp typeof item object amp amp emberdebugassert using observe array content array must return object typeof item object see calculating message eg ing actually needed completely alleviate issue", "d": "7/2017"}, {"body": "thanks looks great", "d": "7/2017"}, {"body": "facing issue sideloading relationship field app throws modified twice single render", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "thanks exactly", "d": "7/2017"}, {"body": "feature flag local lookup landed", "d": "7/2017"}, {"body": "using module unification feature flags run issue using linking routes autogenerated controllersroutes example generated error adding empty routescontroller files autogenerated objects acts workaround routes traced back present autogenerated route throws error getqpmeta", "d": "7/2017"}, {"body": "shall close issue marked wontfix", "d": "7/2017"}, {"body": "rwjblue fix backportable still found", "d": "7/2017"}, {"body": "specific fix obvious fixed due large architectural refactor glimmer aka nt identified bug fixed someone time dig specific version glimmervm fix would definitely appreciate help", "d": "7/2017"}, {"body": "cbou satisfy curiosity tell us need support strict xhtml parsing glimmerhandlebars parser based parsing spec kind would nt surprised incompatibilities love know working", "d": "7/2017"}, {"body": "migrating app written xhtml nt know reason xhtml nt want remove xhtml later sure nt notice incompatibilities", "d": "7/2017"}, {"body": "chance pr merged glimmerjsglimmervm", "d": "7/2017"}, {"body": "seems partial polyfill weakset features used internally suggest implementing computed macro uses set suggested", "d": "7/2017"}, {"body": "addressed", "d": "7/2017"}, {"body": "referencing", "d": "7/2017"}, {"body": "since listeners store dependent keys passed function like gt funcemberobserves foo hence subsequent usage function would overwrite gt funcemberobserves bar hence two solution assert using function different create wrapping function inside observeron time already populated might complex solutions probably worth narrow usecase p happy implement either solutions stefanpenner", "d": "7/2017"}, {"body": "stefanpenner understand deprecate pr given information closing issue according contributing document thank", "d": "7/2017"}, {"body": "hi sorry replying sooner getting another opportunity try update dependencies application still running issue serabe work twiddle see ca nt reproduce locks coming seems like core router method unsure would affecting anyone tips tracking certainly appreciate", "d": "7/2017"}, {"body": "getting exact error outside tests inside application trying inject autogenerated applicationcontroller nested subcontroller", "d": "7/2017"}, {"body": "stefanpenner reason keep open", "d": "7/2017"}, {"body": "followup issue fixed", "d": "7/2017"}, {"body": "believe things working properly number addons running test suites without issue", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "fixed thank", "d": "7/2017"}, {"body": "cibernox ping", "d": "7/2017"}, {"body": "u ping next week one verge collapse jul pm sergio arbeo notifications githubcom wrote cibernox ping receiving mentioned reply email directly view github mute thread", "d": "7/2017"}, {"body": "know simulaci\u00f3n en diferido de ping", "d": "7/2017"}, {"body": "closed", "d": "7/2017"}, {"body": "done", "d": "7/2017"}, {"body": "affected unlikely changed point", "d": "7/2017"}, {"body": "created last thing know consensus reached core someone would update topic find anything notes", "d": "7/2017"}, {"body": "serabe conversation issue think addon requested transition plan current users would great land pr still unclear particular issue tracking perhaps superseded", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "seeing", "d": "7/2017"}, {"body": "fixed thank", "d": "7/2017"}, {"body": "update", "d": "7/2017"}, {"body": "discussed believe resolved", "d": "7/2017"}, {"body": "yes resolved found way one recent ember releases though ca nt say one specifically fixed", "d": "7/2017"}, {"body": "lrdiv also happening good catch v destructure ember precisely override native otherwise changed name something like declaration usage went right way would nt call bugbug either agree pretty much everything wrote stuckouttonguewinkingeye", "d": "7/2017"}, {"body": "kellyselden still issue", "d": "7/2017"}, {"body": "longstanding pr bug rebased still broken", "d": "7/2017"}, {"body": "bcardarella sorry lack movement seeing issue agree weird halffollow spec dash constraint constraints existing library encodes custom elements spec rules reuse would open pr issues warning use one reserved names nt think hard error backwardsincompatible change", "d": "7/2017"}, {"body": "closed", "d": "7/2017"}, {"body": "funny thing updated like week ago ember issue able work around previous time fixed", "d": "7/2017"}, {"body": "cwarny tried initializing property corresponding query param eg", "d": "7/2017"}, {"body": "duplicate closing thank", "d": "7/2017"}, {"body": "guys need help error shows try use model property belongsto another one created blank project still shows thing wrong also backend using net core json api net core following instructions ui render broken point however data loads see desired values js hbs template error get assertion failed modified modelprofilecontactprofile twice single render rendered template fuelsemberinternalprofiletemplatehbs modified template fuelsemberinternalprofiletemplatehbs unreliable slow ember longer supported see details ps tried using embercomputed method get property seems work required update also discovered data loads fine inside helper directly template", "d": "7/2017"}, {"body": "lbarsukov maybe related backtracking rerender caused relationships jsonapi response property set issue started ember data try using emberdata see solves problem", "d": "7/2017"}, {"body": "danieldewit thumbs master actually works need happy", "d": "7/2017"}, {"body": "seems fix kellyselden confirm please thank", "d": "7/2017"}, {"body": "nope problem still exists update twiddle", "d": "7/2017"}, {"body": "seems moved fastboot repo", "d": "7/2017"}, {"body": "imo core glimmer question glimmer implement tag omission compliant browser html handling", "d": "7/2017"}, {"body": "krisselden update thank", "d": "7/2017"}, {"body": "reproductions issues found", "d": "7/2017"}, {"body": "currently running app hitting exact issue according sentry even though code includes workaround", "d": "7/2017"}, {"body": "issue also fix chrome well versions chrome could run sure issue", "d": "7/2017"}, {"body": "workmanw yeah pretty sure apparently users still running old chrome versions fact derived browsers sogou explorer opera chromium dragon showing similar behavior according sentry logs", "d": "7/2017"}, {"body": "feel pain customers enterprises lock users specific versions chrome never let upgrade possible issue resurfaced way say certainty time workaround resolve issue us", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "specific versions", "d": "7/2017"}, {"body": "chrome opera chromium sogou explorer chrome chrome chrome far common one reason", "d": "7/2017"}, {"body": "krisselden provide info still problem making list routing problems one thank", "d": "7/2017"}, {"body": "serabe nt directly related routing basically suggesting need register default template still need make sure keep import setting property folks extend custom components", "d": "7/2017"}, {"body": "got hit today also use case need abort transition show confirmation popup model dirty ideas handle", "d": "7/2017"}, {"body": "ended saving flag controller target route use deside whether block transition beforemodel hook target route downside controllers need defined explicitly otherwise resolver starts throwing errors", "d": "7/2017"}, {"body": "hi janwerkhoven explain implemented solutions", "d": "7/2017"}, {"body": "app relies series modals shown top page manage would render page modals templatesapplicationhbs outlet outlet modalparent outlet parentsomemodalthisrender outlet modal routesparentsomemodal rendertemplate function thisrender parentsomemodal application outlet modal routesparentsomemodal export default emberrouteextend modals injectservice aftermodel thisset modalscomponentname somemodalcomponentname servicesmodalsjs componentname null componentsmodalwrappercomponentjs modals injectservice componentname computed modalscomponentname function return thisget modalscomponentname templatesapplicationhbs outlet modalwrapper component componentname modalwrapper beauty ever step along way route service component easier write tests works like charm", "d": "7/2017"}, {"body": "janwerkhoven would like use something similar like ruby rails design namelayout ember want login path load applicationhbs template currently since login loaded inside one put understand use want could help possible", "d": "7/2017"}, {"body": "halleyrv meaning things always page want sometimes nt put applicationhbs source confusion move things applicationhbs something like loggedinhbs instead use route structure like", "d": "7/2017"}, {"body": "hi use thanks prompt response use indicated login longer application design enter desktop path loading different design case friend show content written dashboardhbs happens could help children codes approuterjs import ember ember import config configenvironment const router emberrouterextend location configlocationtype rooturl configrooturl routermap function thisresource login thisroute amigo path function routes go thisroute dashboard export default router appapplicationhbs amigohbs new design templates dashboardhbs", "d": "7/2017"}, {"body": "halleyrv need move route controller template correspondingly route case controller go", "d": "7/2017"}, {"body": "thanks lot kumkanillam janwerkhoven could solve place solution multi template layout ember user users problem want login template different template routes inherit another template login template steps first approuterjs create import ember ember import config configenvironment const router emberrouterextend location configlocationtype rooturl configrooturl routermap function thisroute login thisroute layoutapp path function thisroute welcome export default router layoutapp put new template route important path tell routes take root inside directory applicationhbs file create file called layoutapphbs important since template file routes create layoutapp name route layoutap put content template apptemplateslayoutapphbs applicationhbs put online route login inherit template applicationhbs routes example welcome inherit template layoutapp", "d": "7/2017"}, {"body": "another one working solution", "d": "7/2017"}, {"body": "hi ember issue still seems present", "d": "7/2017"}, {"body": "experiencing issue currently using ugly workaround found stackoverflow please dont shame", "d": "7/2017"}, {"body": "also walked trap calling momentjs recursion order wait seconds updating moment strings disabling recursion set acceptance tests hopefully run long anyway ideal would add parameter would mark unblocking tests otherwise would keep central list timer ids date seems error prone think", "d": "7/2017"}, {"body": "nt know different issue replaced one think considered bug recently hit problem tests time call recursively sets another like use stay within framework instead switching like another comment says codepaths branch based testing vs testing generally bad sign", "d": "7/2017"}, {"body": "aprescott unfortunately current testing api design simply limited way definitely change without semver violation indeed tricky problem solve regardless free hand suggest using emberlifeline polltask provides testable polling mechanism instead loop running forever blocking tests must manually tick polling task test think emberconcurrency similar api considering one future", "d": "7/2017"}]