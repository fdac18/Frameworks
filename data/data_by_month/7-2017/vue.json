[{"title": "binding undefined property produces unexpected results", "body": "version reproduction link steps reproduce define object one property eg create two tags one bound existing property eg one undefined property eg easier debugging add data template eg run browser edit text boxes notice changing box tied undefined property nt update data box tied defined property changed expected expected changing text boxes immediately modify data either warning error console telling binding undefined property allowed actually happening changing text box tied defined property modifies data immediately changing text box tied undefined property nothing text box changed", "num": "6258", "d": "7/2017"}, {"title": "", "body": "vue", "num": "6257", "d": "7/2017"}, {"title": "outin transition issue async components block", "body": "version reproduction link steps reproduce open click b button expected previous component disappear component b appears actually happening components b visible simultaneously see also issue", "num": "6256", "d": "7/2017"}, {"title": "vif vshow work vue laravel spark", "body": "fixed", "num": "6255", "d": "7/2017"}, {"title": "issue vue guide vue two things call name", "body": "version reproduction link steps reproduce find place issue guide doc put forgive guide components custom events demo code demo code two things call name variable name make new learners confusing screenshot orange mark event red mark event handler completely different things called name logic code component inside event triggered event handler event handler use triggered vue instance event event triggered vue instance event handler confused maybe someone understand many new people understand two things different perhaps following code clearer html total expected see steps reproduce actually happening see steps reproduce", "num": "6254", "d": "7/2017"}, {"title": "vif stops working axios http client receives status code", "body": "hi trying use vue axios interface api server server returns error status code session expired authorization fails internal errors happens server want display error message user know something happened following javascript code function side methods block following html code warning server returned error likely session expired please refresh page try code quite straightforward somehow alert message nt display intentionally send http axios", "num": "6253", "d": "7/2017"}, {"title": "dt dd without end tags went wrong", "body": "version reproduction link steps reproduce write without end tags turns template except dom template example html title details title details expected dom tree become html title details title details actually happening dom tree became html title details title details", "num": "6252", "d": "7/2017"}, {"title": "vuejs build generates corrupt urls", "body": "build vuejs website locally runs perfectly deploy production run npm run build copy contents dist webserver visit website see blank website viewed generated html css conclude something wrong going build process first indexhtml contains links javascript files urls start bad idea means website must deployed root website everybody wants fix suggestion replace assetspublicpath conficindexjs assetspublicpath fixes indexhtml css files real mess starts found url like url staticimgpathtofile css file css files directory staticcss images static img means url nt url staticimgpathtofile either url staticimgpathtofile url imgpathtofile quiet urls generated css files make absolutely sense ever using plugins default way start vuejs project means vuejs box ca nt used production please fix url generated files next time learn test releasing unusable code", "num": "6251", "d": "7/2017"}, {"title": "null propagation view model binding", "body": "problem feature solve decreases amount bloat code like null checking nested properties example need bind value ok null need introduce additional prop view model return write code view proposed api look like could look like null propagation c ie null checks would done behind scenes compiled render function", "num": "6250", "d": "7/2017"}, {"title": "limit number loops loop", "body": "", "num": "6249", "d": "7/2017"}, {"title": "update vue got errors", "body": "need help", "num": "6248", "d": "7/2017"}, {"title": "", "body": "problem feature solve \u6bd4\u5982 messsage message \u7b49\u6548 message \u4f20\u9012\u7684\u662fnumber \u662f\u4e2abool \u662f\u5426\u53ef\u4ee5\u8003\u8651\u7c7b\u4f3creact jsx \u4e0e proposed api look like", "num": "6247", "d": "7/2017"}, {"title": "avoid changing textarea user types", "body": "version reproduction link steps reproduce textarea used user starts typing property updated causes css setting overridden expected height set property actually happening set property", "num": "6246", "d": "7/2017"}, {"title": "vue detected jsp loaded struts", "body": "version reproduction link steps reproduce sample heading firstname", "num": "6245", "d": "7/2017"}, {"title": "issue question idn vuejs rewrite url relative somewhat like absolute", "body": "dealing vuejs aspnet cor application code somewhat like however later code try get return strange kind normal behavior", "num": "6243", "d": "7/2017"}, {"title": "\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u7684slot\u548cvfor\u95ee\u9898", "body": "version reproduction link steps reproduce expected \u53ef\u4ee5\u6b63\u786e\u7684\u663e\u793a\u8bc4\u5206 actually happening \u8bc4\u5206\u65e0\u53cd\u6620\u6216\u8005\u5206\u6570\u4e0d\u6b63\u786e", "num": "6242", "d": "7/2017"}, {"title": "sync modifier support object properties", "body": "problem feature solve sync modifier support object properties example myobj object foo bar property feature could use update value proposed api look like currently need use format new feature becomes simple clear especially object many properties", "num": "6241", "d": "7/2017"}, {"title": "wheel event delta values", "body": "version reproduction link steps reproduce message method onwheel evt consolelog evt expected wheel target deltax deltay deltaz actually happening wheel target buttons clientx clienty layerx layery", "num": "6240", "d": "7/2017"}, {"title": "router \u52a8\u6001 view", "body": "vue\u6709\u52a8\u6001\u7ec4\u4ef6 \u5bf9\u5e94\u4e00\u4e2a \u6211\u662f\u60f3\u5982\u679c\u53ef\u4ee5\u52a8\u6001\u7684\u8bdd \u5c31\u53ef\u4ee5\u8fd9\u6837", "num": "6239", "d": "7/2017"}, {"title": "", "body": "good afternoon everyone english good understand trying use vmoney table error chrome vue warn may infinite update loop component render function vue page component looks like anyone know error find solution thank", "num": "6238", "d": "7/2017"}, {"title": "allow adjusting width vnavigationdrawer", "body": "problem feature solve moment vnavigationdrawer api seems way adjust width reason request kind possible adjust width hand moment even react data changes binding data small screens menu open close properly would useful feature api work like rest vuejs proposed api look like thinking simple reactive width property vnavigationdrawer needs behind screens", "num": "6237", "d": "7/2017"}, {"title": "bound property input field type date reset using setinterval", "body": "version reproduction link steps reproduce please see fiddle using chrome expected expect bound property reset actually happening bound property input type date reset using setinterval", "num": "6236", "d": "7/2017"}, {"title": "vfor add prop uniquekey generates unique key automatically", "body": "problem feature solve business system many key object used many data operate use object key advocated wondering prop automatically helpful proposed api look like html", "num": "6235", "d": "7/2017"}, {"title": "vfor directive fails props binding", "body": "version reproduction link steps reproduce set vue instance child component pass props along child component use vfor property expected complain setting default value actually happening error typeerror early lifecycle app mount later display property working around behavior check variable however prevent vfor directive erroring", "num": "6234", "d": "7/2017"}, {"title": "vue filter error", "body": "version reproduction link steps reproduce codepen please open commened html error appear vue broken expected please fix actually happening error function defined appear use vue filter vtext tested get error", "num": "6233", "d": "7/2017"}, {"title": "remove binding event single element", "body": "remove binding event single element", "num": "6232", "d": "7/2017"}, {"title": "input \u5728\u4f7f\u7528 model\u53cc\u5411\u7ed1\u5b9a\u65f6\u65e0\u6cd5\u66f4\u65b0\u6216\u5ef6\u8fdf\u66f4\u65b0", "body": "version reproduction link steps reproduce git \u9879\u76ee\u4e2d\u5b58\u5728\u6bd4\u5bf9\u622a\u56fe \u4ee5\u53ca\u7f16\u597d\u53f7\u7684\u91cd\u73b0\u6d41\u7a0b\u53ca\u6548\u679c \u51fa\u73b0\u7684\u95ee\u9898 \u622a\u56fe\u4e2d \u4e0b\u65b9\u8f93\u5165\u6846\u5448\u73b0\u7684\u5185\u5bb9 \u6548\u679c\u90fd\u4e0d\u76f8\u540c vue\u5bf9\u8c61\u4e2d\u7684\u503c expected \u53ea\u58f0\u660evue\u7ed1\u5b9a\u5bf9\u8c61\u4ee5\u53ca\u65d7\u4e0b\u4e00\u5c42\u7684\u5b50\u5bf9\u8c61 \u4e0d\u7528\u58f0\u660e\u5b50\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027 \u63d0\u9ad8\u517c\u5bb9\u6027\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u5e76\u6539\u53d8vue\u5c5e\u6027\u4e2d\u7684\u53d8\u91cf actually happening \u5982\u679c\u4e0d\u63d0\u524d\u58f0\u660e\u5c5e\u6027 \u5219\u65e0\u6cd5\u4f7f\u7528\u53cc\u5411\u7ed1\u5b9a \u63a7\u4ef6\u8d4b\u503c\u65e0\u6cd5\u8d4b\u7ed9\u5c5e\u6027 \u53ea\u505c\u7559\u5728\u8f93\u5165\u6846\u4e2d \u672a\u907f\u514d\u53cd\u9988\u8fc7\u957f\u88ab\u5173\u95ed\u8bf4\u660e\u8bf7\u89c1git\u4e2dreadme", "num": "6231", "d": "7/2017"}, {"title": "input \u5728\u4f7f\u7528 model\u53cc\u5411\u7ed1\u5b9a\u65f6\u65e0\u6cd5\u66f4\u65b0\u6216\u5ef6\u8fdf\u66f4\u65b0", "body": "question differences problem number questions said big see accept use shorter text explain problem thanks version reproduction link steps reproduce \u9879\u76ee\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c \u8fd9\u6b21\u63d0\u4ea4\u5305\u542b\u81f3\u5c11 \u5176\u4e2d\u4f7f\u7528\u4e86 \u7b2c\u4e09\u65b9\u975evue\u7ec4\u4ef6\u7684\u7b2c\u4e09\u65b9\u65e5\u5386\u5e93 \u5176\u4e2dvue\u5e93\u5f15\u7528 \u81ea\u8eab\u9879\u76ee\u4e2d lib min \u5e94\u8be5\u662fmin \u91cd\u73b0\u6b65\u9aa4 \u4ee5\u53ca\u7f16\u597d\u53f7\u7684\u91cd\u73b0\u6d41\u7a0b\u53ca\u6548\u679c \u51fa\u73b0\u7684\u95ee\u9898 \u622a\u56fe\u4e2d \u4e0b\u65b9\u8f93\u5165\u6846\u5448\u73b0\u7684\u5185\u5bb9 \u6548\u679c\u90fd\u4e0d\u76f8\u540c vue\u5bf9\u8c61\u4e2d\u7684\u503c expected \u53ea\u58f0\u660evue\u7ed1\u5b9a\u5bf9\u8c61\u4ee5\u53ca\u65d7\u4e0b\u4e00\u5c42\u7684\u5b50\u5bf9\u8c61 \u4e0d\u7528\u58f0\u660e\u5b50\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027 \u63d0\u9ad8\u517c\u5bb9\u6027\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u5e76\u6539\u53d8vue\u5c5e\u6027\u4e2d\u7684\u53d8\u91cf actually happening \u5982\u679c\u4e0d\u63d0\u524d\u58f0\u660e\u5c5e\u6027 \u5219\u65e0\u6cd5\u4f7f\u7528\u53cc\u5411\u7ed1\u5b9a \u63a7\u4ef6\u8d4b\u503c\u65e0\u6cd5\u8d4b\u7ed9\u5c5e\u6027 \u53ea\u505c\u7559\u5728\u8f93\u5165\u6846\u4e2d \u5b9e\u9645\u5e94\u7528\u9879\u76ee\u4e3a \u5347\u7ea7 \u4e2d\u88ab\u5176\u5f3a\u5927\u7684\u517c\u5bb9\u6027\u4ee5\u53ca\u6613\u7528\u6027\u6298\u670d \u6539\u8d77\u6765\u6bd4\u8f83\u8d39\u52b2 \u4f46\u662f\u4e0a\u8ff0\u4e24\u4e2a\u95ee\u9898\u57fa\u672c\u4f7f\u8fd9\u6b21\u5347\u7ea7\u5931\u8d25 \u5728\u6211\u4eec\u9879\u76ee\u4f7f\u7528\u4e2d \u5b58\u5728\u5927\u91cf \u4f8b\u5982 vmodel \u58f0\u660e\u65f6 \u4f8b\u5982\u8fd9\u6837 vuedata test \u8fd9\u6837\u5728\u4f7f\u7528\u65f6\u5b8c\u5168\u4e0d\u7528\u58f0\u660e\u5c5e\u6027 \u4e14\u4f1a\u5728\u8fd0\u884c\u65f6\u88ab\u81ea\u52a8\u521b\u5efa\u5e76\u6b63\u5e38\u4f7f\u7528 \u8fd9\u79cd\u7528\u6cd5\u4f7f\u7528\u65b9\u4fbf\u800c\u4e14\u907f\u514d\u4e86\u5f88\u591a\u9ebb\u70e6 \u800c\u4e14\u8fd9\u6837\u5373\u4f7f\u4e00\u4e2a\u51e0\u5341\u4e2a\u5bf9\u8c61\u7684\u957f\u9875\u9762 \u540e\u53f0\u4fee\u6539\u7f16\u8f91\u6240\u7528\u7684\u9875\u9762 \u4e5f\u53ea\u9700\u8981\u58f0\u660e\u5f88\u5c11\u4e00\u90e8\u5206\u5373\u53ef\u4f7f\u7528 \u7684\u65f6\u5019 \u5982\u679c\u4e0d\u58f0\u660e\u4e00\u7ea7\u5bf9\u8c61\u5219\u4f1a\u62a5\u9519 \u540e\u671f\u53d1\u73b0\u4e0d\u58f0\u660e\u5c5e\u6027\u4e5f\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528 \u5373\u4e0a\u8ff0\u95ee\u9898 \u8fd9\u79cd\u7528\u6cd5\u662f\u6211\u4eec\u89c9\u5f97\u5728\u4ee3\u7801\u5f00\u53d1\u4e2d\u6700\u7701\u4e8b\u7684\u4e00\u79cd \u5927\u5927\u51cf\u5c11\u4e86\u4e00\u4e2a\u9875\u9762\u7684\u5f00\u53d1\u65f6\u95f4 \u4ee5\u53ca\u5927\u5927\u589e\u52a0\u4e86\u5bb9\u9519\u7387 \u975e\u5e38\u60ca\u8273vue\u53ef\u4ee5\u8fd9\u4e48\u4f7f\u7528 \u800c\u4e14\u8fd9\u79cd\u7528\u6cd5\u5728\u4e0d\u786e\u5b9a\u53c2\u6570\u5c5e\u6027\u65f6\u5c24\u5176\u597d\u7528 \u5c24\u5176\u662f\u4f8b\u5982\u5f39\u7a97\u5c01\u88c5\u5e93\u7b49\u4e0d\u80fd\u786e\u5b9a\u5b50\u5bf9\u8c61\u7684\u65b9\u5f0f \u65e5\u671f\u63a7\u4ef6\u5b8c\u5168\u662f\u6539\u5b8c\u65f6\u624d\u53d1\u73b0\u7684\u95ee\u9898 input\u7684value\u6539\u53d8\u4f46\u662f\u5c5e\u6027\u672a\u6539\u53d8 \u5e0c\u671b\u80fd\u63d0\u5347\u517c\u5bb9\u6027 \u540c\u6837\u4e5f\u662f\u4e3a\u4e86\u51cf\u5c11\u5f00\u53d1\u91cf\u548c\u66f4\u6539\u91cf \u671f\u5f85\u56de\u590d \u8c22\u8c22 \u5982\u6709\u7591\u95ee\u53ef\u8054\u7cfb wangyan chocyacom \u6216 woderpg sinacom \u6216 \u8bf7\u5907\u6ce8", "num": "6230", "d": "7/2017"}, {"title": "get already render dom mounted funtion tutorial say", "body": "version reproduction link steps reproduce example like project faced issue expected obtain already render dom actually happening get render dom please help also import component get dom parent template right away help solved settimeout function exactly right issue solved getting dom object use nexttick whenever use functionthe dom computed agianthat want", "num": "6229", "d": "7/2017"}, {"title": "laravel vuetified real time starter app using vue js", "body": "laravel around corner building spa never easy vue js everyone always trouble setting first real time app instead experimenting set ive already done put one piece starter app compose laravel laravel passport laravel echo server laravel echo vue vue router vuetify perfect spa realtime application using favorite frameworks easy install using vscode bonus get specific linting auto fix error code future ill add way customize save state vuetify components back end thats purpose vuetified service provider like please star share", "num": "6228", "d": "7/2017"}, {"title": "vfor key\u62a5\u9519", "body": "version reproduction link steps reproduce found expected \u5e0c\u671b\u5728\u5b89\u88c5\u7684vue\u7684\u65f6\u5019 \u58f0\u660e\u7ed9\u7528\u6237 \u5728\u7f16\u8bd1\u7684\u65f6\u5019\u7ed9\u7528\u6237 \u91cd\u65b0\u5b89\u88c5\u7684\u65f6\u5019 \u5c31\u9ed8\u8ba4\u5b89\u88c5\u5230nodemodule\u91cc\u4e86 \u800c\u7528\u6237\u5374\u4e0d\u77e5\u9053 actually happening \u9879\u76ee\u62a5\u9519 \u51fa\u73b0\u7ea2\u8272\u8b66\u544a console\u91cc\u9762 found", "num": "6226", "d": "7/2017"}, {"title": "version update vue warn data property onclose already declared prop use prop default value instead", "body": "instance messageboxalert message title options gt typeof message object options message title undefined message undefined else options options return messagebox merge type alert title message options export default props visible default false message default title default", "num": "6225", "d": "7/2017"}, {"title": "vue warn data property onclose already declared prop use prop default value instead", "body": "vue warn data property onclose already declared prop use prop default value instead", "num": "6224", "d": "7/2017"}, {"title": "attribute key looks invalid", "body": "version reproduction link steps reproduce indexhtml item button x behind expected list items left actually happening list items left bind attribute key component item vfor reuse component instance", "num": "6222", "d": "7/2017"}, {"title": "save", "body": "", "num": "6221", "d": "7/2017"}, {"title": "checkbox array model nt work array value", "body": "version reproduction link steps reproduce create bind array using expected toggling checkbox addremove array array actually happening toggling checkbox adds contents array array checkbox toggled contents added many times clicked", "num": "6219", "d": "7/2017"}, {"title": "nonscoped styling components applied switching routes", "body": "version reproduction link steps reproduce vuejs documentation scoped css mentions include scoped nonscoped styles component built example application used two single file components instead string templates example rendering expected tried apply scoped nonscoped styles components first one second one idea whole body background switch choosing specific route styles ok change depending route nonscoped ones screenshots chrome dev tools initial application load non routed yet background white ok default one route choosing route style body applied correctly say first component switching routes loading second component background changes new color looks like chrome dev tools current style overwritten components elements correctly rendered content scoped styling switches keep background elements relevant component rendered correctly changes chrome dev tools last view unchanged words looks like style stacked previously overwritten properties updated expected behaviour following comment stackoverflow tried style vue container result expected nonscoped styling applied parent independently routing actually happening one styling taken account overwritten reachable anymore issue initially asked stackoverflow", "num": "6218", "d": "7/2017"}, {"title": "optin virtual dom", "body": "problem feature solve lot complex ui elements generally reside outside vfor virtual dom may hypothetically helpful looking ui frameworks provide extensibility degree freedom would see without virtual dom pretty much none relates rendering lists proposed api look like option render vfor virtual dom implying virtual dom absent elsewhere entirely optin", "num": "6217", "d": "7/2017"}, {"title": "vmodel work components using vbind attrs von listeners", "body": "problem feature solve following discussion given component template following currently work problem component expects value events dom passed listener instead proposed api look like option make smarter since think unlikely anyone want use dom perhaps used components could check argument passed listener use instead option make smarter maybe nonenumerable property could added eg help detect uses cases object passed used element listeners relevant could wrapped throwing away data someone wants access eg instead luck however modifiers also supported object syntax could fix making disable automatic wrapping behavior thoughts strategies implications considering definitely open alternatives", "num": "6216", "d": "7/2017"}, {"title": "validate numbersonlyfield get set", "body": "version reproduction link steps reproduce observe type text second field tab notice numbersonly validation nt happen tab last field type something expected prefer numbersonly validation happen typing field actually happening validation occur nonnumbers field updated may issue vue welcome info best way numbersonly validation text field", "num": "6215", "d": "7/2017"}, {"title": "build issue", "body": "updated noticed reviewing newest updates thought bring attention", "num": "6214", "d": "7/2017"}, {"title": "empty scopedslots", "body": "version reproduction link steps reproduce click jsfiddle see console expected example actually happening working", "num": "6212", "d": "7/2017"}, {"title": "vonce whitelist additional directives", "body": "problem feature solve single child parent requires reactivity use parent element must apply siblings reactive elementcomponent instead would nicer could whitelist reactive children element component additional proposed directives whitelists usually better strategy especially security blacklists proposed api look like ideally would able html static text nonstatic text static text static text html static text nonstatic text static text static text additional directives proposed valways takes precedent always excludes elementcomponent children vnever takes precedent never excludes elementcomponent children vexclude exclude specific elementcomponent children vonce", "num": "6211", "d": "7/2017"}, {"title": "vue \u5f02\u6b65\u7684\u7ec4\u4ef6\u53ef\u4ee5\u547d\u540d", "body": "problem feature solve \u53ef\u4e0d\u53ef\u4ee5\u50cfwebpack proposed api look like requireensure gt resolve require comoptionvue option require historyindexvue resolve xxxx", "num": "6210", "d": "7/2017"}, {"title": "select element ca nt rendered correctly vue ie", "body": "version reproduction link steps reproduce open link see select element doest rendered correctly expected second option \u83dc\u5355\u4e8c select element view actually happening third option \u83dc\u5355\u4e09 select element still view use settimeout solve problem want know happened", "num": "6209", "d": "7/2017"}, {"title": "select options rendering components", "body": "version reproduction link steps reproduce create component produces tags templates reused select box expected select options component rendered select box actually happening select box empty white space would expect options", "num": "6208", "d": "7/2017"}, {"title": "property syntax mixture", "body": "problem feature solve currently writing custom component properties require validation others require validation would nice could mix array object syntax declare kinds properties easier javascript props items type object required true proposed api look like ideally would like following work javascript props items type object required true", "num": "6207", "d": "7/2017"}, {"title": "rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter", "body": "version reproduction link steps reproduce rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter expected rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter actually happening rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter", "num": "6206", "d": "7/2017"}, {"title": "rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter", "body": "rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter", "num": "6205", "d": "7/2017"}, {"title": "flash\u5d4c\u5165\u540e\u5c5e\u6027allowfullscreen\u65e0\u6cd5\u5168\u5c4f\u95ee\u9898", "body": "version reproduction link steps reproduce embed allowfullscreen true \u4f1a\u88ab\u8f6c\u6210embed allowfullscreen allowfullscreen \u5bfc\u81f4flash\u65e0\u6cd5\u5168\u5c4f expected \u5e0c\u671b\u589e\u52a0\u5bf9\u5c5e\u6027\u4e0d\u5904\u7406\u7684\u6307\u4ee4 actually happening isbooleanattr\u8fd9\u4e2a\u6570\u7ec4\u91cc\u9762\u6709\u5bf9allowfullscreen\u7684\u5904\u7406 embed allowfullscreen true \u4f1a\u88ab\u8f6c\u6210embed allowfullscreen allowfullscreen \u5bfc\u81f4flash\u65e0\u6cd5\u5168\u5c4f", "num": "6202", "d": "7/2017"}, {"title": "discussion best way create hoc", "body": "version reproduction link steps reproduce searching right way implement hoc vuejs could nt found suitable example link known hoc implementations nt work expected implement hoc vuejs want know implement hoc reactjs way expected hocs simply renders components passed parameters hocs containing slots events render normally actually happening element rendered missing rendered order differs basecomponent hoc implementations work event handlers", "num": "6201", "d": "7/2017"}, {"title": "add preservewhitespace percomponent basis", "body": "problem feature solve take component preservewhitespace enabled vuetemplatecompiler get rendered page mark would resort sort css get around instead renders markdown would instead like ability preservewhitespace enabled default ability override percomponent basis option could disable component would render html html markdown proposed api look like envisioning maybe new top level property exported function within singlefile vue component eg", "num": "6200", "d": "7/2017"}, {"title": "first letter disapears textarea vmodellazy input", "body": "version reproduction link steps reproduce anything typed textarea vmodellazy input event checking etargetvalue first letter typed disapears textarea also happens using keydown event expected typed message appear normally textarea actually happening first letter disappears text area", "num": "6199", "d": "7/2017"}, {"title": "create npm package project containing vuex module", "body": "problem feature solve integration vuex modules npm proposed api look like wondering properly library components would like publish rely store state vuex module register vuex module store someone installed packaged npm getting components hooked creating plugin big deal unfortunately seem hook like registering vuex modules someone provide example repository perhaps guide right direction perhaps wrong even assume would viable someone else import vuex module case would love hear asking gitter stackoverflow yield results since pretty indepth question something similarly also asked resolved though", "num": "6198", "d": "7/2017"}, {"title": "vuecli \u5373\u4f7f\u662f\u65b0\u9879\u76ee \u70ed\u4fee\u6539\u6837\u5f0f\u6587\u4ef6\u62a5\u9519", "body": "vue init webpack npm npm run dev wait compiling pm usersyinxulaidesktopdesignjsmactntnodemodulesenhancedresolve keystartswith typeerror read property startswith undefined storagepurge usersyinxulaidesktopdesignjsmactntnodemodulesenhancedresolve storagepurge usersyinxulaidesktopdesignjsmactntnodemodulesenhancedresolve cachedinputfilesystempurge usersyinxulaidesktopdesignjsmactntnodemodulesenhancedresolve eventemitterwatcheronce usersyinxulaidesktopdesignjsmactntnodemoduleswebpack eventemitterg emittwo eventemitteremit eventemitterontimeout usersyinxulaidesktopdesignjsmactntnodemoduleswatchpack ontimeout tryontimeout timerlistontimeout npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm run dev npm err node npm err npm npm err code elifecycle npm err mactnt dev npm err exit status", "num": "6197", "d": "7/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected \u6839\u636e done done actually happening done done html message js new vue el app data message hello vuejs methods test function alert done function var count var dfd deferred var task function alert count count count gt dfdresolved return dfdpromise function var count var dfd deferred var task function alert count count count gt dfdresolved return dfdpromise", "num": "6195", "d": "7/2017"}, {"title": "select vmodel triggers change event options changed", "body": "version reproduction link steps reproduce dynamically change tag triggers change event actually chosen option nt changed expected trigger change event actually happening triggers change event change behaviour intruduced", "num": "6193", "d": "7/2017"}, {"title": "invalid prop type check failed prop value expected string number got symbol", "body": "version reproduction steps reproduce use symbol value expected symbol type ok actually happening symbol type ok", "num": "6192", "d": "7/2017"}, {"title": "sometimes wrong", "body": "version reproduction link steps reproduce expected \u6b63\u786e\u7684\u73af\u5883\u5224\u65ad actually happening \u9519\u8bef\u7684\u73af\u5883\u5224\u65ad", "num": "6191", "d": "7/2017"}, {"title": "much recursion hit injecting vuebased mixins", "body": "version reproduction link steps reproduce define component uses mixins define provide properties wrapped vue component eg foo bar define component b inside uses inject add foo bar properties expected foo bar available component b actually happening get much recursion exception", "num": "6190", "d": "7/2017"}, {"title": "single file component templates share script file", "body": "separate component code template cases code multiple templates therefore like reference code unfortunately second imported template gets rendered twice way first template srcjsviewloadingspinnervue transition name spinspinner vbind duration enter leave div vif loading class spinner divwrap div vif loading class scanner divouter divinner export default props loading div divrow divbox spinner loading loading divrow divbox scanner loading loading box position relative width height import spinner loadingspinnervue import scanner loadingscannervue export default components spinner scanner data function return loading true created function", "num": "6189", "d": "7/2017"}, {"title": "wechat safari render blank page navigate back ios", "body": "version reproduction link steps reproduce build test project scroll index page bottom click link click back button see blank page actually page contents select scroll page contents show useragent iphone cpu iphone os like mac os x khtml like gecko nettypewifi languagezhcn iphone cpu iphone os like mac os x khtml like gecko expected \u70b9\u51fb\u6d4f\u89c8\u5668\u8fd4\u56de\u540e\u5e94\u8be5\u80fd\u6b63\u5e38\u663e\u793a render complete page navigate back actually happening render blank page navigate back", "num": "6188", "d": "7/2017"}, {"title": "support plain objects vfor keys", "body": "problem feature solve quite frequent need abstract vfored element tree component example go extremely useful building higher older components ie components glues components predefined interfaces used natural objects always come identity automatically unique best suited keys says primitive therefore patch object creation system javascript manually give every object created id property number automatically increases every time new object created duplicate identity object already counter global every object created potentially passed vfor patched havoc utterly destroys usefulness vfor convenience abstraction code reuse also breaks tunes existing code seems much easier implement vfor supports identity objects keys rather patching object system javascript ensure every object duplicated unique primitive make vue happy much easier tons code broken primitive check needs complete unnecessary redesign complexity increases dramatically pleeease support plain objects ie objects created object literal absolutely primitives diff algorithm needs nothing difficult implement us invaluable proposed api look like support objects vfor keys simple yet useful", "num": "6187", "d": "7/2017"}, {"title": "data \u4e2d\u7684\u503c\u5982\u4f55\u7ed1\u5b9a\u591a\u79cd\u6570\u636e\u7c7b\u578b", "body": "version reproduction link steps reproduce expected actually happening", "num": "6186", "d": "7/2017"}, {"title": "works wrong", "body": "version reproduction link steps reproduce import vuecomp adgeneratorvue var ad vueextend vuecomp var ad new ad el documentcreateelement div data data expected work data prop component instance ad actually happening props data instance undefined run npm vue upgrade problem happens", "num": "6185", "d": "7/2017"}, {"title": "invalid expresson internet explorer attribute contains tab characters", "body": "version reproduction link steps reproduce using component contains object property splitting object across multiple lines pug template internet explorer fails compile template error message invalid expression experimenting trying fix issue found removing tab characters cause component successfully render probably due htmlencoded characters tabs among others ca nt nt decoded eval render ie renders ie examples correctly render chrome firefox expected bound prop containing object evaluated actually happening ie string evaluated contains tab characters characters may similar effect", "num": "6184", "d": "7/2017"}, {"title": "vue defined", "body": "version reproduction link steps reproduce document", "num": "6183", "d": "7/2017"}, {"title": "refskey return undefined hot reload", "body": "version reproduction link reproduction link need hot reload steps reproduce use vue file vue export default name test mounted setinterval gt consolelog refstest run edit file change save watch console expected hot reload display width actually happening hot reload return width use function event listener even destroy", "num": "6182", "d": "7/2017"}, {"title": "table width binding update automatically", "body": "version reproduction link steps reproduce input box filled default simply click button expected first table cell width bound grows automatically method triggered change data property cell width bound property also change actually happening dom update performed unless uncommenting statement must manually call vm perform force update feature bug", "num": "6181", "d": "7/2017"}, {"title": "\u56f0\u6270\u5f88\u4e45 \u6c42\u52a9 property method tojson defined instance", "body": "warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsflexboxflexboxvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsflexboxflexboxitemvue nodemodulesvux vuxsrccomponentsflexboxflexboxvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsbadgeindexvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsbadgeindexvue nodemodulesvux vuxsrccomponentsflexboxflexboxitemvue nodemodulesvux vuxsrccomponentsflexboxflexboxvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsflexboxflexboxvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsflexboxflexboxitemvue nodemodulesvux vuxsrccomponentsflexboxflexboxvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous", "num": "6179", "d": "7/2017"}, {"title": "input type checkbox nt work array model falsevalue", "body": "version reproduction link steps reproduce create bind array using add property expected toggling checkbox toggles string array actually happening toggling checkbox adds string array nt remove", "num": "6178", "d": "7/2017"}, {"title": "set comments true nt work", "body": "version reproduction link steps reproduce msg export default comments true data return msg hello vuecli comments true comment gone expected see link actually happening use vuecli comment gone", "num": "6177", "d": "7/2017"}, {"title": "support cucumberjs chioce unit test ui test", "body": "problem feature solve know mocha good unit test toolbut think cucumberjs better mochai nt idea integration cucumber karmacan support cli teach integration proposed api look like see", "num": "6176", "d": "7/2017"}, {"title": "exception thrown using static mixins provider", "body": "version reproduction link steps reproduce define component uses mixins define provide properties eg foo bar define component b inside uses inject add foo bar properties expected foo bar available component b actually happening exception thrown", "num": "6175", "d": "7/2017"}, {"title": "much recursion hit injecting vuebased mixins", "body": "version reproduction link steps reproduce define component uses mixins define provide properties wrapped vue component eg foo bar define component b inside uses inject add foo bar properties expected foo bar available component b actually happening get much recursion exception", "num": "6174", "d": "7/2017"}, {"title": "circular dependency using webpack", "body": "version reproduction link steps reproduce copy code link barebones vuejs project add necessary dependencies packagejson start node open browser developer console go site hosted node find errors like typeerror read property undefined expected errors code correct afaict otherwise need errors please word user knows concretely wrong rather open issue well bug report actually happening get vague message something called mountbefore hook property undefined readable simply want use vuejs able locally define themes combination proven rather difficult far", "num": "6173", "d": "7/2017"}, {"title": "input value change changing data", "body": "version reproduction link steps reproduce type something input changed click button expected input value actually happening input value change", "num": "6172", "d": "7/2017"}, {"title": "higher", "body": "", "num": "6171", "d": "7/2017"}, {"title": "error compiling template even though one root element", "body": "version reproduction link steps reproduce tag root element put tag child element expected render template correctly actually happening error compiling template message component template contain exactly one root element", "num": "6170", "d": "7/2017"}, {"title": "vuefor\u5728\u548cwatch\u914d\u5408\u4f7f\u7528\u65f6\u8868\u73b0\u5f02\u5e38", "body": "version reproduction link steps reproduce \u5728codepen\u94fe\u63a5\u4e2d \u6709\u8be6\u7ec6\u8bf4\u660e \u8fd9\u4e2a\u95ee\u9898\u53d1\u751f\u5728watch\u4e00\u4e2a\u53d8\u91cf\u53d8\u5316 \u4e14\u8fd9\u4e2a\u53d8\u91cf\u7531vfor\u6253\u5370\u7684\u65f6\u5019 \u4f1a\u51fa\u73b0\u65e0\u53cd\u5e94\u7684\u60c5\u51b5 \u81ea\u5df1\u5206\u6790\u539f\u56e0\u53ef\u80fd\u51fa\u5728vfor\u4e3a\u4e86\u4f18\u5316\u6027\u80fd\u7b49\u5f85\u53d8\u5316\u7ed3\u675f\u518d\u8fdb\u884c\u6e32\u67d3 \u800cwatch\u7684\u5b58\u5728\u5bfc\u81f4\u65e0\u6cd5\u89e6\u53d1\u6e32\u67d3 \u778e\u5206\u6790\u7684 \u89c1\u7b11 \u6682\u65f6\u89e3\u51b3\u529e\u6cd5\u662f\u5148\u5728watch\u4e2d\u7528\u4e00\u4e2a\u53d8\u91cf\u5148\u5b58\u8d77\u6765 \u5f53\u6240\u6709\u53d8\u5316\u5b8c\u6210\u540e \u4e00\u5e76\u89e6\u53d1\u6e32\u67d3 \u8be6\u89c1watch\u4e2d\u7684valinfixed \u7b2c\u4e00\u6b21\u63d0\u4ea4issue \u5f88\u591a\u5730\u65b9\u4e0d\u4e13\u4e1a \u89c1\u8c05 \u5e0c\u671bvue\u8d8a\u505a\u8d8a\u597d expected vfor\u80fd\u6b63\u5e38\u6e32\u67d3 actually happening vfor\u6ca1\u6709\u4efb\u4f55\u53cd\u5e94 \u8fd9\u4e2abug\u51fa\u73b0\u5728\u4efb\u4f55\u60c5\u51b5 \u5df2\u7ecf\u5728codepen\u4e2d\u590d\u73b0", "num": "6169", "d": "7/2017"}, {"title": "aria tag gets removed entirely false", "body": "use screenreader visit accordion dropdown need ariaexpanded false init vue automatically removes ariaexpanded tag entirely false way keep ariaexpanded tag false value ariaexpanded removed false", "num": "6168", "d": "7/2017"}, {"title": "velse vfor", "body": "problem feature solve python presumably languages nifty forelse pattern lets provide fallthrough condition loop iterations example concise simplifies fairly common case like see something similar vue templates directive something anyone else would care take shot implementing proposed api look like completed would able use conditional like", "num": "6167", "d": "7/2017"}, {"title": "optional prop passing child components", "body": "problem feature solve tldr would like way bind value child component value passed child component prop tag native dom node child component nt take prop name nothing happens value nt written dom place would really help follows list template like mycomponent number different components prop nt one nt prop named might get emitted dom like browser serialising kinda pointless really bad performance kind unsatisfying know solve ensuring components might use prop named callback whether use however component know props might need take feels like code smell proposed api look like couple ideas could solved problem think unique perhaps adding propsdata prop would solve problem general solution modifier could added passes value child component property given name child component nt prop native dom node modifier results noop name suggestions concerned way optional props passing either two solutions offer interested hear think feature general thanks considering", "num": "6166", "d": "7/2017"}, {"title": "vue single file component multiple top level templates", "body": "problem feature solve simplify put wrapper around conditional templates consider table view different layout whether rows none try running search search results block results currently wrap template different element within say div template cause multiple top level elements found side effect putting div page may desired example block wanted different element id class would easily readible necessarily even possible way works last template found evaluates true drawn currently case multiple top level templates created without executing conditional checks proposed api look like try running search stock results block results would draw page load gets populated draw template", "num": "6165", "d": "7/2017"}, {"title": "vmodel binds id input radio dynamicly appears first time", "body": "version reproduction link steps reproduce click one radio list example second item id attribute radio element appears first time console bind value attribute radio id attribute appears time expected id attribute radio appears time actually happening id attribute radio appears first time vuejs version chrome version", "num": "6164", "d": "7/2017"}, {"title": "using refs computed ok access mounted otherwise always undefined", "body": "version reproduction link steps reproduce uncomment hook run expected always actually happening uncomment everything works fine reactive uncomment would keep still accessing lead reactive", "num": "6163", "d": "7/2017"}, {"title": "vueserverrender servercachekey option error tip", "body": "version reproduction link steps reproduce link demo learn vue ssr clone npm install modify servercachekey options appvue string npm start localhost expected error tip show terminal nothing actually happening nothing rendered browser error tip terminal nt know happened need much time debug think source code vueserverrenderbuildjs throw error nt know nt", "num": "6162", "d": "7/2017"}, {"title": "uncaught typeerror read property state undefined", "body": "version reproduction link steps reproduce srcappauthservicesauthjs need import store import store store error occurred uncaught typeerror read property state undefined turns wasted lot time trying understand problem realized one vuex modules loaded called auth several tests discovered inside import file store modules srcappstorejs following problem occurred import store auth auth always returns error even though changing address authindexjs duplicated file authindexjs new name authtestejs keeping code identical files changed import import store auth authteste made work without understanding happens decided report problem remove import store file srcappauthservicesauthjs application returns normal operation vuex also works normally even load auth module expected load vuex modules application work actually happening uncaught typeerror read property state undefined", "num": "6161", "d": "7/2017"}, {"title": "support promise rendertostring vueserverrenderer", "body": "problem feature solve renderrendertostring function return nothing async function need return response callback lead bug koa wrap function return promise let work something like function render renderer let resolve const promise new promise r gt resolve r serverget async ctx gt const res await render renderer ctxstatus ctxbody res maybe renderrendertostring return promise better proposed api look like", "num": "6160", "d": "7/2017"}, {"title": "allow ternary vbind type vmodel", "body": "problem feature solve common show password pattern today use vifvelse consider allowing ternary expression returns one allowed proposed api look like", "num": "6158", "d": "7/2017"}, {"title": "documentactiveelement microsoft edge", "body": "problem feature solve bug current version microsoft edge causes unspecified error accessing documentactiveelement inside iframe two calls accessing activeelement vue code base one triggering ms edge issue one projects believe issue introduced reported ms edge bug microsoft going release fix future release see meantime wondering could wrap activeelementent calls try catch work around seems like ie similar issues past snippet sample code provided issue based workaround implemented jquery ui see would nt surprised similar issues still lurking ms browsers implementing workaround vue help avoid issue current ms edge ms browser versions similar issues proposed api look like", "num": "6157", "d": "7/2017"}, {"title": "variable synchronization local memory", "body": "problem feature solve want open vue web app want define variables custom attribute save local memory update opened browser tabs proposed api look like simple define variables attribute local memory sync", "num": "6155", "d": "7/2017"}, {"title": "dynamic textarea value updating", "body": "version reproduction link steps reproduce create dynamic element expected value textarea set changes actually happening nothing happens first created text area empty even text value", "num": "6154", "d": "7/2017"}, {"title": "scoped slots infinite update loop binded data", "body": "version reproduction link steps reproduce open console run expected infinite loop actually happening second sortpagecontrol generates infinite update loop console vue warn may infinite update loop component render function found understand list getter sortpagecontrol produces additional watchers something like problem", "num": "6153", "d": "7/2017"}, {"title": "lifecycle created commit mutation logger", "body": "version reproduction link steps reproduce lifecycle created commit mutation logger vuedevtool expected logger first init actually happening lifecycle created commit mutation logger", "num": "6152", "d": "7/2017"}, {"title": "report syntaxerror appjs", "body": "version reproduction link steps reproduce eval eslintdisable nwebpackrequire nconst hotclient webpackrequire nnhotclientsubscribe function event n eventaction reload n windowlocationreload n n nn sourcemappingurldata applicationjson expected work fine actually happening create vuecli devclientjs seem compatible", "num": "6151", "d": "7/2017"}, {"title": "html block comments amp single quotes parsed correctly", "body": "version reproduction link steps reproduce using new property vue instance understand block comments also errors single quotes used within inline comments particularly annoying drupal development debugging templates since template debug output done using block comments contains single quotes see codepen example typical drupal comment block output expected comments rendered correctly within outputted html actually happening vuejs fails render instance throws exception trying parse comments believe would happen using drupal development debugging turned using vue", "num": "6150", "d": "7/2017"}, {"title": "dom didt sync data", "body": "version reproduction link steps reproduce click fetchdata expected dom show true click actually happening dom show false always", "num": "6149", "d": "7/2017"}, {"title": "dom didt sync data", "body": "version reproduction link steps reproduce click fetchdata expected dom show true click actually happening dom show false always", "num": "6148", "d": "7/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected actually happening", "num": "6147", "d": "7/2017"}, {"title": "vue amp vuetemplatecompiler different behavior amp compile contents pre tag", "body": "version reproduction link steps reproduce using highlight codes vue files covert normal codes pairs upgrade code pre tag compiled inline formats works well seems amp different behavior pre tag compilation contents pre tag also see html demos tested demo bash git clone install vuetemplatecompiler npm install npm run dev works well html contents demo bash install vuetemplatecompiler npm vue vuetemplatecompiler npm run dev demo code inline html contents compare two html contents seems removed expected codes pre correct format actually happening codes pre inline", "num": "6146", "d": "7/2017"}, {"title": "transition erases classname unexpectly part enteractiveclass already present component", "body": "version reproduction link steps reproduce make component template like html hello make visible expected transition class added removed transition ends need leave original class nested vnode actually happening class removed original vnode also removed property course using class names overlap transitions avoid problems however think better process recalculating rendering original vnode last tick transition", "num": "6145", "d": "7/2017"}, {"title": "included", "body": "problem feature solve rationale excluding bindings else would bind attributes wrapped elements proposed api look like consider component vue export default name field say like bind class element true expect able like wanted go current behavior could instead vue export default name field computed divattrs return attrsclass inputattrs const attrs attrs return attrs would suggest nt overwrite existing attributes currently done attributes also would ideally prevent attributes passed root element set", "num": "6144", "d": "7/2017"}, {"title": "supports vuecomponent require", "body": "problem feature solve seems common users trying uses like supported uses else receive error like failed mount component template render function defined proposed api look like parameter try identify using instance get property automatically fallback error avoided guess done like", "num": "6143", "d": "7/2017"}, {"title": "date input accept date object initial value", "body": "version reproduction link steps reproduce use date object vmodel input typedate expected date input use provided date value actually happening date input shows mmddyyyy blank state", "num": "6142", "d": "7/2017"}, {"title": "wiki quite outdated", "body": "version reproduction link steps reproduce open wiki page see vue almost expected uptodate information link updated resources actually happening see outdated information remove vue almost block add link vuejs documentation site instead change roadmap side link think would give better feel people evaluating product wiki updated would provide pr possible wiki", "num": "6140", "d": "7/2017"}, {"title": "bug input vue variable update triggered", "body": "version reproduction link steps reproduce ask issue closed posva writed vue listen back setting value directly dom element true see evan write commented jul work please return previous issue solution expected type ok actually happening type evan write commented jul vue detect changes directly setting value input elements design know external lib changed input value manually trigger change event input element notify vue sync value back model", "num": "6138", "d": "7/2017"}, {"title": "remove every error reportingdebugging provideinject allow require flag inject", "body": "problem feature solve found vue checks inject value throw warn development null think reasonable case use provideinject mixin maintain zindex popper component standard zindex tip dialog without mixin difficult maintain zindex tip dialog provideinject mixin tip dialog index nothing extra css case inject zindexbase necessary first popper component use zindex latest vue throw warn javascript export default provide return zindexbase thiscalczindex inject zindexbase props zindex type number default computed calczindex thiszindexbase return thiszindex return thiszindexbase thiszindex calcstyle return zindex thiscalczindex proposed api look like inject value accept object", "num": "6137", "d": "7/2017"}, {"title": "transition mode property accept default", "body": "problem feature solve transition mode defined accepts either outin inout default valuewhen transitioning dynamic components sometimes needed switch three modes proposed api look like modedefault switch simultaneous mode", "num": "6136", "d": "7/2017"}, {"title": "vue variable updated", "body": "version reproduction link steps reproduce vue variable updated resive change message expected type ok actually happening type", "num": "6135", "d": "7/2017"}, {"title": "ssr contextrenderstyles returns empty string", "body": "version reproduction link steps reproduce webpack config rules test css loader vuestyleloader cssloader html import commoncss export default name app context styles property contextrenderstyles returns empty string client side works fine nt know missed please help \u7684\u7ed3\u679c\u662f expected contextrenderstyles gt body actually happening contextrenderstyles gt", "num": "6134", "d": "7/2017"}, {"title": "\u7ec4\u4ef6\u5b9e\u4f8b\u66f4\u65b0\u5f15\u8d77\u5176\u4ed6\u540c\u7ec4\u4ef6\u5b9e\u4f8b\u4e00\u540c\u66f4\u65b0", "body": "version reproduction link steps reproduce \u91cd\u73b0\u95ee\u9898 \u6309\u94ae\u8fdb\u884c\u91cd\u73b0 expected \u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u7ec4\u4ef6\u5b9e\u4f8b\u89e6\u53d1\u66f4\u65b0\u65b9\u6cd5 actually happening \u540c\u4e00\u4e2a\u7ec4\u4ef6\u7684 \u591a\u4e2a\u5b9e\u4f8b \u6709\u5d4c\u5957\u5185\u5bb9\u7684 \u90fd\u89e6\u53d1\u4e86\u66f4\u65b0\u65b9\u6cd5", "num": "6133", "d": "7/2017"}, {"title": "input typetext element disabled vue file", "body": "version reproduction link steps reproduce npm run dev expected want render search input element page actually happening displayed page always disabled ca nt enter text click reflect readonly disabled attributes falsei use chrome test", "num": "6132", "d": "7/2017"}, {"title": "resolve local components distributed slots", "body": "version reproduction link steps reproduce register component single slot locally registered component accessible parent pass element component content slot initialize vue instance expected element resolved component accepts slot registered actually happening resolved vue searches scope instance nt registered component element trying create component many local components reduce name collision simplify structure view making expressive like since elements distributed parent slots would make sense least try resolve context parent would make components much modular independent", "num": "6131", "d": "7/2017"}, {"title": "native eventsfunctional components eventstopimmediatepropagation cancel event loop", "body": "version reproduction link steps reproduce create functional component create event handler calls put context event handler array component handler place component handler first index allowing component handler first chance stop propagation using functional component parent component bind listener event eg execute event expected functional component handler called first since first array functional component handler execute call kill event loop actually happening execution order preserved correctly parent component handler still invoked additional handlers bound use case starts creating link component respect property continues various components create cohesive ui component api would beneficial way cancel vue event loop nt know way around source well enough imagine vue internally tracks event handlers given node intercepts native event first invokes callbacks natively bound callbacks get invoked callbacks bound vue invoked", "num": "6130", "d": "7/2017"}, {"title": "parent component updates whenever child props change wasteful", "body": "version reproduction link steps reproduce create parent component child component make child prop variable make parent modify value prop attribute every second keep variables related parent view unchanged make parent consolelog whenever view updates ie set parent beforeupdate consolelog expected nt consolelog happening every second actually happening consolelog happening every second parent view gets updated every second takes cpu resources update component view even actual html nt changed entire vdom needs recalculated therefore believe behaviour wasteful considered bug imagine updates child props happened times second parent component view contained nonchanging variables", "num": "6129", "d": "7/2017"}, {"title": "scoped styles working ssr", "body": "version reproduction link steps reproduce color red important expected red color actually happening wont see red loading server insted load page throught router see", "num": "6128", "d": "7/2017"}, {"title": "key warning nt shown transition keys", "body": "version reproduction link steps reproduce add key binding transition expected get warning actually happening vue issues warning avoid using nonprimitive value key use stringnumber value instead however key bound boolean property", "num": "6126", "d": "7/2017"}, {"title": "vue support von drop von paste", "body": "version reproduction link steps reproduce drag file red box normal work black box using expected work like trigger vue object method like event actually happening triggered go may standard least jquery support", "num": "6125", "d": "7/2017"}, {"title": "variable updated triggering outside triggered onclick", "body": "version reproduction link steps reproduce update input jquery get results selectizejs plugin onchange function value val value trigger click trigger change see updating variable vue use value give true variable haw must send message update variable without onclick function clear simple best way get variable plugin expected update variable actually happening change variable haw must send message update variable without onclick function clear simple best way get variable plugin", "num": "6124", "d": "7/2017"}, {"title": "trigger vuejs update variable outside", "body": "update hidden input jquery plugin selectizejs resive result value plagin js plagin make onchange function value val value trigger click trigger change see updating variable vue use function trigger click value give true variable haw must send message update variable without onclick function approach clear best way thank", "num": "6123", "d": "7/2017"}, {"title": "want get value change success dontt know happened", "body": "version reproduction link steps reproduce good first failed slid expected value current value beforevalue previous value actually happening value identical beforevalue changed", "num": "6122", "d": "7/2017"}, {"title": "way programmatically pass props args new vue instance keep updated", "body": "problem feature solve trying integrate vue meteor blaze working rendering vue components blaze templates would like programmatically create vue instance pass props args would equivalent object keyvalues would mapped props keys among props set element attributes otherwise important part also able update afterwards props args change allowing call function update would great proposed api look like propose could function could provide reactive function would used populate props args keys returned function props would become args alternatively could function could run update props args imperative way", "num": "6121", "d": "7/2017"}, {"title": "allow suppression warnings individual basis", "body": "problem feature solve warnings generated compile time may design eg component lists rendered vfor explicit keys project generates enough warnings warnings author might care could missed warnings disabled completely using silent flag allows allornothing approach would nice able disable certain warnings perhaps something simple ignoredwarnings option config type state warning could given unique reference maybe enough warnings matter might something nice future proposed api look like", "num": "6120", "d": "7/2017"}, {"title": "offer listen helper wrap calls instance lifespan", "body": "problem feature solve often add several event listeners various things created function remove beforedestroy function mixin helps ton every case cases keep track event listeners specific instance cleaned correctly could built bonus points used commonly used eventemitters save lot time ease use tracking weird bugs due left bound events proposed api look like vue instance need worry cleaning event instance destroyed", "num": "6119", "d": "7/2017"}, {"title": "sync", "body": "hallo need sync modifier emit update event construction works well twoway binding vue export default data return internalvalue thisvalue props value", "num": "6118", "d": "7/2017"}, {"title": "\u6c42\u7ec4\u4ef6\u4e2d\u52a8\u6001\u7f16\u8bd1\u6a21\u677f\u7684\u65b9\u6cd5", "body": "problem feature solve proposed api look like \u7136\u540e\u8fd9\u6837\u5c31\u5f97\u5230\u4e86vue\u7f16\u8bd1\u540e\u7684html\u4ee3\u7801", "num": "6117", "d": "7/2017"}, {"title": "\u80fd\u5426\u7ed9\u81ea\u5b9a\u4e49\u6307\u4ee4\u589e\u52a0\u8bbe\u7f6evmodel\u7ed1\u5b9a\u7684\u53d8\u91cf\u7684\u65b9\u6cd5", "body": "problem feature solve proposed api look like", "num": "6116", "d": "7/2017"}, {"title": "props registered functional component remain contextdataprops", "body": "problem feature solve currently props registered functional component appear result used wrapper component like props shared functional component passed get around adding missing props anticipate behavior encountered user noticed discrepancy confused must admit also confused first proposed api look like perhaps always match rare cases users nt want transparent wrapper components explicitly create sanitized data object change could technically change rendered results existing applications think worst case might extra attributes added root elements breaking change exactly", "num": "6115", "d": "7/2017"}, {"title": "multiple return slots components", "body": "problem feature solve imagine following usage component create formcomponent cform use cdialog would wire buttonscontent returnslots cform buttonscontentslots cdialog kind component composition seems possible way simulate proposed api look like define template multiple return slots", "num": "6114", "d": "7/2017"}, {"title": "vue slot grab inner content semantic code sides slot usage", "body": "problem feature solve allow element become slot properties rather nested within element want problem current solution example want make tag slot element within may cause styling desired semantically makes little sense want class style attributes across application inside template proposed api look like stock currently work way work moment cause nested tag made nt semantic", "num": "6113", "d": "7/2017"}, {"title": "vmode \u5728 \u4e0a\u7684\u8868\u73b0\u5f02\u5e38", "body": "version reproduction link steps reproduce b c selected slct new vue el slct data slct mounted function var settimeout function thatslct \u901a\u8fc7watch slct \u53d1\u73b0 \u5b83\u88ab\u6539\u4e86\u4e24\u6b21 \u7136\u540e\u53c8\u88ab\u6539\u4e3aundefined \u7b97\u662fbug\u5417 expected \u521d\u59cb slct \u88ab\u6539\u4e3aundefined \u6216\u8005\u5f53\u6539\u53d8slct\u65f6\u4e0d\u88ab\u6539\u53d8\u6210undefined actually happening \u672a\u51fa\u73b0\u671f\u671b\u7684\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00 \u5f53\u65e0\u9009\u9879\u88ab\u9009\u4e2d\u65f6 select\u7684\u503c\u90fd\u88ab\u6539\u6210undefined \u6216\u8005\u5f53\u65e0\u9009\u9879\u88ab\u9009\u4e2d\u65f6 \u90fd\u4e0d\u6539\u8d4b\u4e88select\u7684\u503c", "num": "6112", "d": "7/2017"}, {"title": "vue runs watchers call print", "body": "version reproduction link steps reproduce tested chrome work computer browsers available test would interested hear behaviour browsers set vue instance uses matchmedia modify values printing page trigger page print using print function expected mediaquerylistener captures print change updates values vue calls appropriate watchers redraws printed page sees redrawn images actually happening mediaquerylistener captures print change updates values user gets printed page without redrawn data vue calls watchers print finished issue calls print blocking chrome least seems mean promises vue using nexttick nt execute print exits however javascript run print calls stuff inside media query listeners couple thoughts resolve perhaps vue use media query listener detect case change update loop appropriately expose vueforceticknow function calls queued watchers immediately perhaps bit evil could force redraw hand inside media query listener vm forceupdate looks like asynchronous also nt execute anything inside media query listener perhaps behaviour forceupdate synchronous", "num": "6111", "d": "7/2017"}, {"title": "code within mounted executed component within conditional", "body": "version reproduction link steps reproduce create two components page within conditionals expected conditions true expect component mount run inside mounted actually happening first component runs mounted outside conditions mount expected", "num": "6110", "d": "7/2017"}, {"title": "weex vue click call twice", "body": "version reproduction link steps reproduce first must set weex development environment clone project switch branch run visit chrome click mobile device toolbar web developer tools click text expected click function call twice actually happening call work vue today reinstall packagejson auto upgrade modify script reproduce problem use code compare two differences", "num": "6109", "d": "7/2017"}, {"title": "\u4e00\u4e2a\u5c0f\u5c0f\u7684\u5efa\u8bae", "body": "\u53ef\u5426\u628arefjs const refs vm refs \u6539\u6210 const refs vm root refs", "num": "6108", "d": "7/2017"}, {"title": "child element removed beforedestroy parent component called vif", "body": "version reproduction link steps reproduce open click click see happen console expected consolelog show size element actually happening got width height child element removed document beforedestroy called intended", "num": "6106", "d": "7/2017"}, {"title": "vuejs work nwjs", "body": "version reproduction link steps reproduce required expected nwjs window show test actually happening msg appear", "num": "6105", "d": "7/2017"}, {"title": "vhtml issue", "body": "thinking error able pass email bodies full html think give vue issues comes using vhtml error get way use valid pair separator", "num": "6104", "d": "7/2017"}, {"title": "consistent behavior edit props", "body": "problem feature solve child component edit props throw error console without object arrayi feel weirdmember ask ca nt edit type object array thati think edit object array two way bindingthat bad know object array reference typebut wish consistent behaviori two suggest edit props throw error nt throw errorbecause edit number string nt reactive parent componentso know emit want parent component bind child component edit value featurei feel half edit propssome type edit type ca nt editso wired proposed api look like see description", "num": "6103", "d": "7/2017"}, {"title": "listeners return empty object none assigned", "body": "problem feature solve unlike empty return empty object empty returns undefined biggest inconvenience would nice quality life change writing concise code proposed api look like instead write", "num": "6102", "d": "7/2017"}, {"title": "directives inside transitions unbound leave transition ends", "body": "version reproduction link steps reproduce fiddle click button fade component click fade component expected simple directive turn text red directive unbound leave transition finishes text red end leave transition actually happening directive unbound beginning transition text longer red duration leave transition ran issue transitioning modals custom directives inside unbinding removed elements page resulting jarring transition able work around polling inside unbind function see directive inside transition performing unbind actions transition finishes", "num": "6101", "d": "7/2017"}, {"title": "render template", "body": "hello trying render template inside template luck possible ps template dynamic thanks", "num": "6100", "d": "7/2017"}, {"title": "allow defining optional inject dependency default values", "body": "problem feature solve case components work standalone children would nice able provide default values provided dependencies would also avoid warning missing inject case one expected use case proposed api look like inject array key string string symbol name string symbol default", "num": "6097", "d": "7/2017"}, {"title": "initialize options data", "body": "problem feature solve like able pass data attribute component initializing like import thecomponent thecomponentvue thecomponentthedata myglobaldate component would look like data optionsthedata unfortunately seems like options initialized late point data based proposed api look like options initialized data would work please let know already good way tried number ways best come data like date rootthedata seems better pass variable component tied root", "num": "6096", "d": "7/2017"}, {"title": "problem ssr rendering scoped css seems ssr nt set", "body": "version reproduction link steps reproduce check fork set itemlistvue style scoped site still looks fine element get correct example upgrade vue wo nt get hard refresh cause server side rendering failing somehow expected work vue actually happening nt added elements breaks scoped styling", "num": "6095", "d": "7/2017"}, {"title": "", "body": "vuecomponent autosync function resolve reject require comautosyncvue resolve requireensure function var rulebox require componentruleboxjs \u89c4\u5219\u6d88\u606f\u901a\u77e5 ruleboxinit rulbox", "num": "6094", "d": "7/2017"}, {"title": "inject option mixin longer works", "body": "version reproduction link steps reproduce create mixin sets option create component uses said mixin use component context corresponding expected data provided context correctly injected component uses mixin option set actually happening data provided injected component uses mixin unless option specified directly component mixin use pattern specifying options mixins extensively provides really useful mixins specifying relationships different components component using mixin would example child would use mixin parent vue however longer works option mixin ignored", "num": "6093", "d": "7/2017"}, {"title": "laravel version mismatch vue fiasco", "body": "version reproduction link steps reproduce composer global require laravelinstaller laravel new myapp cd myapp yarn yarn run dev expected work actually happening module build failed error vue packages version mismatch vue vuetemplatecompiler pls", "num": "6092", "d": "7/2017"}, {"title": "laravel version mismatch vue fiasco", "body": "", "num": "6091", "d": "7/2017"}, {"title": "cant install windows commit", "body": "version reproduction link steps reproduce cmd npm init npm vue expected correct installation vue npm actually happening error c nodescriptspine npm vue vue postinstall c nodescriptspinenodemodulesvue node buildinstallhooksjs throw err error find module c nodescriptspinenodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn optional skipping optional dependency fsevents nodemoduleschokidarnodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os ar ch npm warn pine description npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs vue npm err node npm err npm npm err code elifecycle npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err c nodescriptspinenpmdebuglog windows c nodescriptspine npm v c nodescriptspine node v", "num": "6090", "d": "7/2017"}, {"title": "cant install windows commit", "body": "hi found commit change method post install c nodescriptspine npm vue vue postinstall c nodescriptspinenodemodulesvue node buildinstallhooksjs throw err error find module c nodescriptspinenodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn optional skipping optional dependency fsevents nodemoduleschokidarnodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os ar ch npm warn pine description npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs vue npm err node npm err npm npm err code elifecycle npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err c nodescriptspinenpmdebuglog npm node windows thanks lot", "num": "6089", "d": "7/2017"}, {"title": "npm install vue error", "body": "failed vue postinstall script node buildinstallhooksjs", "num": "6088", "d": "7/2017"}, {"title": "install vue failed", "body": "", "num": "6087", "d": "7/2017"}, {"title": "postinstall script error installing", "body": "version reproduction link steps reproduce folder deploying npm expected install vue correctly actually happening error find module workspacegithubvuessrnodemodulesvuebuildinstallhooksjs", "num": "6086", "d": "7/2017"}, {"title": "support props", "body": "problem feature solve support props like jsx beacuse use dynamic component like want use vfor generate components nt know expand props proposed api look like", "num": "6085", "d": "7/2017"}, {"title": "setter nt invoke computed property object", "body": "version reproduction link steps reproduce open jsbin link edit form inputs output view see console view setter nt invoke console output editing inputs expected setter need worked object computed properties actually happening setter works scalar computed properties see example read reactivity depth documentation understand apply case without using methods", "num": "6083", "d": "7/2017"}, {"title": "could export namespace typescript definition js", "body": "problem feature solve using vscode write javascript using tag add intellisense instead import require work vue proposed api look like make work vue told need add end file without intellisense js work vscode working sample nt know would impact anything work case use tag get vue need intellisense solution guided thread", "num": "6082", "d": "7/2017"}, {"title": "could export namespace typescript definition js", "body": "using vscode write javascript using tag add intellisense instead import require make work vue told need add end file without intellisense js work vscode", "num": "6081", "d": "7/2017"}, {"title": "", "body": "getting error last two day two day working fine done thing project throwing error amp project worked also throwing error anybody please help", "num": "6080", "d": "7/2017"}, {"title": "allow extending iterating custom objects vfor", "body": "problem feature solve working fully integrating vue meteor managed implement fully except vue integrates minimongo mongodbcompatible clientside reactive datastore one run mongodb queries clientside database receive cursor ideally one could use cursor directly vue see potential improvements vue could allow iterating custom objects like minimongo cursor plugin could register custom object way detect minimongo already provides facilities make reactivity work better knows inform consumer documents moved order documents changed instead vue figure comparing new array documents previous array documents documents minimongo fixed known keys using cursor default used one downside minimongo every time request objects even cursor get copies objects referentially nonequal proposed api look like potentially better ways integrate minimongo support reactivity hooks think simplest general way would vue allow registering postprocessors computed fields case plugin would check returned value instance cursor run convert cursor array prevent vue replacing values getters registering way configure default key iterate case could check postprocessor cursor set default key iterate", "num": "6079", "d": "7/2017"}, {"title": "assigning computed property without setter fail", "body": "problem feature solve computed property getter setter set noop try assign computed property nothing happens hide programming errors proposed api look like would suggest production instead noop warning function would assigned setter warning message would printed one tries assign value computer property alternatively output computed property without setter could configured without setter readonly property", "num": "6078", "d": "7/2017"}, {"title": "stop template engine render block", "body": "problem feature solve way stop template compiling rendering block parent instance instead let another instance template engine job like template engine using tag case want use many instances inside page might nested note ca nt use components page divided fragments rendered different places proposed api look like nt know exact clean way thinking something like verbatim", "num": "6077", "d": "7/2017"}, {"title": "custom directive inserted hook nt fire transition used binded element", "body": "version reproduction link steps reproduce create custom directive uses hook apply directive element wrapped toggle visibility element expected hook fire like hook actually happening hook nt fire spent like couple hours debugging custom directive vuebar thought issue code unfortunately think issue vue workaround though wrap element directive another element get transitioned like example reproduction", "num": "6076", "d": "7/2017"}, {"title": "", "body": "problem feature solve \u4f8b\u5982 \u53ef\u4ee5\u6307\u5b9a\u6e32\u67d3\u5230a proposed api look like \u4f8b\u5982 \u53ef\u4ee5\u6307\u5b9a\u6e32\u67d3\u5230a", "num": "6075", "d": "7/2017"}, {"title": "element replaced surrounded vif", "body": "version reproduction link steps reproduce first click alert shown click show button changes variable view rerendered input nothing click input nothing happens happens vif element remove one vif everything works intended expected alert shown every time input clicked actually happening clicking show alert thrown clicking input breaks js plugins like pikaday replaces input element new one", "num": "6073", "d": "7/2017"}, {"title": "dynamic prop array reactive replacing prop new array parent scope", "body": "version reproduction link steps reproduce wait milliseconds replacing array new data ajax simulation expected child component rerender data dynamically bind parent array parent change actually happening child component rerender data array", "num": "6071", "d": "7/2017"}, {"title": "vm root vnode undefined", "body": "version reproduction link steps reproduce expected root component actually happening", "num": "6070", "d": "7/2017"}, {"title": "strange behavior input type number", "body": "version reproduction link steps reproduce want build input digital code woks fine enter times val vue model display expected think bug actually happening nt know", "num": "6069", "d": "7/2017"}, {"title": "nested transition groups keyvalues accessible", "body": "version reproduction link steps reproduce click one list items console warn value available transition groups uncomment ul see accessible expected accessible actually happening accessible also wonky things working correctly nested transition groups example function child transition group posva find workaround wrapping child transition group template though expected steps accomplishing nested transition groups", "num": "6068", "d": "7/2017"}, {"title": "data passed prop functional component still remains parent dependency", "body": "version reproduction link steps reproduce run amp click buttons look console logs expected funcitems object property changed one corresponding component rerendered actually happening whole parent component rerendered inspite depend changed property directly even worse combined known behavior think worth mentioning docs using functional components items ironically lead performance degradation note personal use case wonder try create actually rewrite knockout hierarchical table like item must aligned rest visual flexibility ca nt use wrap corresponding levels nested illegal html ca nt use components need single root hope change day attach expanded flags raw data good acceptable time user clicks expand collapse group section whole table rerenders tried wrap group items functional component nt help current issue good solutions", "num": "6067", "d": "7/2017"}, {"title": "working", "body": "version reproduction link steps reproduce see minimal reproduction links works expected longhand works model prop named something expected automatically wire prop expression actually happening value passed prop getting default value instead guess binding component mounted", "num": "6066", "d": "7/2017"}, {"title": "transition different performance vif vshow", "body": "vif enter \u5143\u7d20\u4e0e leave\u5143\u7d20\u7684transition name \u4e0d\u4e00\u81f4 vshow \u4e0b\u662f\u4e00\u81f4\u7684 html export default props name type string label computed visible return thisname parentcurrentname transition return parenttransition created parentaddtab throw new error tab use without tabs parentaddtab", "num": "6065", "d": "7/2017"}, {"title": "access", "body": "vue constructor options properties exposes component see vueloader used inject method also need inject options constructor however typescript complains property quick fix would add options static property vue except technically static property shared across vue instances", "num": "6064", "d": "7/2017"}, {"title": "vmodel \u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u67d0\u79cd\u65b9\u5f0f\u4fdd\u6301dom\u7684\u9ed8\u8ba4\u503c", "body": "version reproduction link steps reproduce \u5728\u4e00\u4e9b\u6bd4\u8f83\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b input\u53ef\u80fd\u4f1a\u5b58\u5728\u9ed8\u8ba4\u503c \u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u67d0\u79cd\u4fee\u9970\u7b26 \u4f8b\u5982 \u6765\u4fdd\u6301dom\u5143\u7d20\u7684\u9ed8\u8ba4\u503c expected \u521d\u59cb\u9875\u9762\u4e2d \u4f7f\u7528vmodel\u7ed1\u5b9a\u540e vmvalue \u5f97\u5230input\u7684\u9ed8\u8ba4\u503c actually happening \u521d\u59cb\u9875\u9762\u4e2d \u4f7f\u7528vmodel\u7ed1\u5b9a\u540e vmvalue \u4e3a\u7a7a\u5b57\u7b26\u4e32 inputvalue \u7b49\u4e8e\u7a7a\u5b57\u7b26\u4e32", "num": "6063", "d": "7/2017"}, {"title": "vue component nt seem work razor partial view", "body": "example component resides partial view razor tags partial view nt seem get rendered component rendered string server templating engine wo nt work eg lt div gt lt form aspcontroller home aspaction index gt lt form gt lt div gt razor tag nt get rendered partial view component however normal view seem get rendered", "num": "6062", "d": "7/2017"}, {"title": "\u6ca1\u4e8b\u4e86 \u6211\u81ea\u5df1\u641e\u9519\u4e86", "body": "\u662f\u6211\u81ea\u5df1\u641e\u9519\u4e86", "num": "6061", "d": "7/2017"}, {"title": "error installing vue directly git using npm", "body": "trying install vue directly github would expect install succeeds like get error vue postinstall usersusertemptestnodemodulesvue node buildinstallhooksjs throw err error find module usersusertemptestnodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn enoent enoent file directory open usersusertemptestpackagejson npm warn test description npm warn test repository field npm warn test readme data npm warn test license field npm err darwin npm err argv install npm err node npm err npm npm err code elifecycle npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err usersusertemptestnpmdebuglog versions current vue commit note could use web interface create issue could host reproduction involves npm", "num": "6059", "d": "7/2017"}, {"title": "error installing vue directly git using npm", "body": "trying install vue directly github would expect install succeeds like get error vue postinstall usersusertemptestnodemodulesvue node buildinstallhooksjs throw err error find module usersusertemptestnodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn enoent enoent file directory open usersusertemptestpackagejson npm warn test description npm warn test repository field npm warn test readme data npm warn test license field npm err darwin npm err argv install npm err node npm err npm npm err code elifecycle npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err usersusertemptestnpmdebuglog versions current vue commit note could use web interface create issue could host reproduction involves npm", "num": "6058", "d": "7/2017"}, {"title": "history \u6a21\u5f0f\u4e0b\u53ef\u4ee5\u4f7f\u7528 hash", "body": "problem feature solve history \u6a21\u5f0f\u4e0b\u5237\u65b0\u9875\u9762 hash \u4f1a\u4e22\u5931 proposed api look like \u5982\u4f55\u4fdd\u7559 hash", "num": "6057", "d": "7/2017"}, {"title": "vue filter dont work vhtml", "body": "version reproduction link steps reproduce create component create filter return html register vuefilter use filter vhtml render original html filter expected render html returned filter actually happening error found userspaulodeveloperworkspacesnodegohcwebappsrccomponentshealthchecklistvue userspaulodeveloperworkspacesnodegohcwebappsrcappvue way works", "num": "6056", "d": "7/2017"}, {"title": "filter dont work vhtml", "body": "hi im trying filter value way today works im using component thanks", "num": "6055", "d": "7/2017"}, {"title": "weird promise uiwebview ios gt", "body": "version detail like source code comments described promise became weird uiwebview ios gt input textarea element use vmodel input event create twoway binding scroll page time typing page events respond except native eventsunder circumstances ca nt solve problem welli think settimeout recovers easily promise doesso settimeout avoid hanging javascriptcore scrolling event queue blocked relevant timeupdate event audio video also similar situation wkwebview performs well situation opinion case used vuecli standard mode correct way solve problem btw anyone tell two lines relace vueesmjs line", "num": "6054", "d": "7/2017"}, {"title": "modify effect render function", "body": "version reproduction link steps reproduce open browser devtool inspect element dropdown menu click dropdown button watch dom parent got new class show nothing happand click outside dropdown menu show removed parent class click dropdown menu close means remove show parent class expected attribute added dropdown button actually happening nothing happend attribute inserted dropdown button javascript panel line two attrs added static attr rendered line add difference related thisisexpand described reproduce steps nothing happend digging infomation console vnodedataattrs inconsistent vnodeelmattributes vnodedataattrs vnodeelmattributes dom anything missed document know vnode use modified reuse", "num": "6052", "d": "7/2017"}, {"title": "weird behaviour vfor", "body": "version reproduction link steps reproduce simply uncomment one line code work expected need one line code actually happening nothing", "num": "6051", "d": "7/2017"}, {"title": "failed resolve filter", "body": "use filter vue like template parse like filter params set vurloader", "num": "6050", "d": "7/2017"}, {"title": "vuelangaugeserver issue vscode code snippet contains says hav also replace two components vanishes doesnt display please suggest use explain difference possible thanks", "body": "", "num": "6049", "d": "7/2017"}, {"title": "unexpected click event propagation across different div elements class", "body": "version reproduction link steps reproduce best look codepen reproduction gist create two divs assign classes class different classes must class attribute control visibility using flag kind one shown true false give one divs click handler sets flag true put clickable cancel element inside different click handler sets flag false put click handler div observe clicking cancel buttonelement click handler also ends calling click handler previously hidden div open console see log fired unexpectedly expected clicking cancel buttonelement inside one div also trigger click event div hidden actually happening click event one div somehow propagating click handler previously hidden div codepen reproduction first example illustrates unexpected broken behavior whereby cancel button click event also propagating click handler div hidden second example shows behavior fixed passing calling strange unexpected even necessary third example shows omitting attribute divs also fix behavior obviously workable solution illustrates strangeness issue", "num": "6048", "d": "7/2017"}, {"title": "", "body": "problem feature solve proposed api look like vue data", "num": "6047", "d": "7/2017"}, {"title": "safari input placeholder overlaping macos x", "body": "version reproduction link steps reproduce push button set data expected placeholder changes data works chrome firefox actually happening data overlaps placeholder safari mac os x", "num": "6046", "d": "7/2017"}, {"title": "ref attribute directive named vref", "body": "problem feature solve maybe attribute directive named obviously vuerelated seems like classic html attribute eyes proposed api look like behave like alias good enough", "num": "6045", "d": "7/2017"}, {"title": "attribute directive named", "body": "maybe attribute directive named obviously vuerelated seems like classic html attribute eyes alias good enough", "num": "6044", "d": "7/2017"}, {"title": "allow seeing specific props changed watching deep object", "body": "problem feature solve allows watching object instead either watch field independently parse newval oldval arrays find one changed thinking third parameter watch function shows field called update proposed api look like instead guess better yet", "num": "6043", "d": "7/2017"}, {"title": "nicer syntax default scoped slot", "body": "problem feature solve use scoped slots lot seems extra superfluous adds extra noise proposing placed component course would sacrifice prop called scope would think worth proposed api look like", "num": "6042", "d": "7/2017"}, {"title": "improvement declarable events may require listener", "body": "problem feature solve sometimes would useful component would know consumer registered event listener example autocomplete input might ask suggestions like nobody listening event component stuck proposed api look like see two ways solve preferred make events declarable similar props javascript vue component definition props value new optional emits declaration emits suggest like notation currently easy way know events emitted component also would conflict current way extra information useful b add function vue instance allows check listeners", "num": "6040", "d": "7/2017"}, {"title": "move hook transitiongroup", "body": "problem feature solve currently build great jsonly transitions way hook vue move functionality hookcallback would extremely handy allowing custom js handle flip items need move hook would ideally receive array elements moving array calculated positionsoffset vue already builds css flip vue needs callback based quick look code add much weight since vue already collecting data possibly related seems distinct proposed api look like methods", "num": "6038", "d": "7/2017"}, {"title": "instructions match vif velse resulting inconsistent bind life cycles binding el", "body": "version reproduction link steps reproduce \u4f7f\u7528\u81ea\u5b9a\u4e49\u6307\u4ee4 \u5728bind\u751f\u547d\u5468\u671f\u6253\u5370\u81ea\u5b9a\u4e49\u6307\u4ee4 javascript tried add debug info imgsrc amazing el nt match use vif change velse result rightdoes involve component reuse use vif company velse expected bindingexpressionselfiebannershare touchend actually happening bindingexpressionselfiebannervote touchend", "num": "6037", "d": "7/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected \u7ea2\u8272\u6846\u6846\u6709\u52a8\u6548 actually happening", "num": "6036", "d": "7/2017"}, {"title": "\u6307\u4ee4\u914d\u5408vif velse \u5bfc\u81f4bind\u751f\u547d\u5468\u671fbinding\u548cel\u4e0d\u4e00\u81f4\u95ee\u9898", "body": "version reproduction link steps reproduce \u4f7f\u7528\u81ea\u5b9a\u4e49\u6307\u4ee4 \u5728bind\u751f\u547d\u5468\u671f\u6253\u5370\u81ea\u5b9a\u4e49\u6307\u4ee4 javascript expected bindingexpressionselfiebannershare touchend actually happening bindingexpressionselfiebannervote touchend", "num": "6035", "d": "7/2017"}, {"title": "vfor loop binding data using function updated", "body": "version reproduction link steps reproduce want binding data dynamically vfor loop components updated changes expected need updated changes actually happening change", "num": "6034", "d": "7/2017"}, {"title": "component render times", "body": "version reproduction link steps reproduce try load component load times shows expected expect renderload component one time actually happening component actually loads times", "num": "6033", "d": "7/2017"}, {"title": "render component times shows", "body": "try render component load times", "num": "6032", "d": "7/2017"}, {"title": "", "body": "version reproduction link expected actually happening", "num": "6031", "d": "7/2017"}, {"title": "ios page nt render", "body": "version reproduction link steps reproduce open link iphone ios vue application wraps big article ios dies expected page shown actually happening page nt render error occurred message", "num": "6030", "d": "7/2017"}, {"title": "use parameter access vue instance may better use", "body": "problem feature solve special es directly associated scope lives found always need declare variables keeping vue instance calling subobjects thinking maybe calling vue instance parameter better way proposed api look like example methods", "num": "6029", "d": "7/2017"}, {"title": "nested transitions engaging javascript leave hooks child component using vif", "body": "version reproduction link steps reproduce click toggle button toggle vif flag parent console parent leave callback triggered child leave callback work case enter callback expected child leave hook callback triggered actually happening parent leave callback triggered child leave callback vshow leave callback child parent getting triggered case vif parent leave callback triggered", "num": "6027", "d": "7/2017"}, {"title": "provide first class support splitting code base modules", "body": "problem feature solve coming angular one feature really miss use modules divide code base logical units technically still vue providing router component ts import vue vue import routes routes export const lazymodule vuecomponentoptions render r gt consolelog rendering return r routerview created function routeraddroutes routes work think would intuitive clear separation vue component module specifically module would provide render method proposed api look like good work toward end also testing previous example module ultimately think could expect basic support vue allow vue router vuex extend", "num": "6026", "d": "7/2017"}, {"title": "transition enter working specific strange scenario", "body": "version reproduction link steps reproduce open jsfiddle watch sec numbers animating entering click add see numbers animated expected open jsfiddle watch sec numbers animated correctly click add see numbers animated correctly actually happening difference jsfiddle consolelog thishpos line reason mixing consolelog thishpos thishpos left makes class animationenterto removed enter animation fired sorry nt additional info stuck error hours ca nt understand consolelog could bug animation", "num": "6024", "d": "7/2017"}, {"title": "vif render nt velse", "body": "version reproduction link steps reproduce first set vif element without velse select element js nextsibling previoussibling text dom expected would expect vif return return anything actually happening vif return nt velse requires leave image dom", "num": "6023", "d": "7/2017"}, {"title": "mounted relaying information instances", "body": "version reproduction link steps reproduce create two instances make one really work create element bind instance dom left without element bind vue create functionsconsolelog second make run expected opinion element bind instance available run option allow run actually happening even binding element function runs causing lot problems working electron vue since bundling one js file working dynamic elements need make functions work page mounted problem relays consolelog functions listeners windows electron bundle causing major performance drop makes functions available vue instances", "num": "6021", "d": "7/2017"}, {"title": "vmodel support variables bind simple types", "body": "try use vmodel binding array objects property results take like", "num": "6020", "d": "7/2017"}, {"title": "typeerror read property length undefined", "body": "version reproduction link steps reproduce working vuejs upgraded unable get length array exist within array unable get length inside vuejs function template hide comments commentreplieslength view commentreplieslength comments expected expecting get length array actually happening getting error typeerror read property length undefined", "num": "6018", "d": "7/2017"}, {"title": "find way extend builtin directive", "body": "problem feature solve mean make become perhaps build new proposed api look like vuedirectiveextend srclazy", "num": "6017", "d": "7/2017"}, {"title": "vueset changing data watch invalid", "body": "version reproduction link steps reproduce click click updated handlecomponentpostdata execute expected data update executed actually happening vueset updated new properties added watch triggered updating properties data", "num": "6016", "d": "7/2017"}, {"title": "use different style vuefor", "body": "li vfor item index list style li index gt li want use different style want result li li write code ca nt get result", "num": "6014", "d": "7/2017"}, {"title": "component property default returns undefined set mixin computedmethod result", "body": "version reproduction link steps reproduce create mixin method computed property add mixin component set component property default result mixin computed property method expected mixin methods computed properties available component prop default evaluated allowing component use mixin logic default properties actually happening appears mixin added prop default evaluated leading property defaulted undefined locale property component defaults browser locale setting wanted move code pulls browser locale mixin use multiple components need localization along related utility methods localization would also allow swap default locale logic quickly number components example wanted move ssr navigation object available", "num": "6013", "d": "7/2017"}, {"title": "add string type getter computed option", "body": "problem feature solve simple code sometimes need alias deep link keys like think convenient way like proposed api look like", "num": "6011", "d": "7/2017"}, {"body": "sure understand problem use nt want components stay around aware options", "d": "7/2017"}, {"body": "draw interface based schema nested json components switched others say input widget validated phone number string number components stay alive long user editing tree schema changes commonly tree builds different nested input widgets old ones stay behind inactive state point reusing inactive components anymore schema might require different widgets data random example point phone number temperature widget lingering node requires geographical coordinate object data builds interface user interacts interface part consists keepalive widgets different possible swappable representations data changes interface changes components get destroyed inactive components linger point nt make sense keep typespecific components node nt allow types anymore either way nt possible query component keepalive active", "d": "7/2017"}, {"body": "schema changes commonly tree builds different nested input widgets old ones stay behind inactive state point reusing inactive components anymore schema might require different widgets data state want keep right keep mind component destroyed wrapping component gets destroyed either way nt possible query component keepalive active looks strange use makes imperative instead declarative using makes declarative", "d": "7/2017"}, {"body": "toplevel component pulls data component template never gets replaced nt think installed helpful vue devtools noticed list dead background components extensive schema testing understand point declarative versus imperative templates largely static wrapper component nt see obvious way drop reload least toplevel perhaps one could create wrapper wrappers nt sit directly toplevel component without way destroy inactive children", "d": "7/2017"}, {"body": "think making clear check example use make drop components", "d": "7/2017"}, {"body": "think made case clear difficulty adapting usecase sorry trying patience main typeswitching widget keepalive input data validation switch types change interface validate input according provided models component related data rightfully play around main loads different schema might might need respective inactive component context changed data value worthless long context use include relevant widget components hence drop unnecessary ones depending loaded schema included widgets still old state data since nt get reset model underneath changed nt notice way tell kill reset pristine state guess solution find way exclude components longlived toplevel components might change context significantly data trees change inactive components get destroyed components tree rebuilds", "d": "7/2017"}, {"body": "well old state intentional use activated deactivated hooks change", "d": "7/2017"}, {"body": "expected behaviour syntactic sugar reactive property vue nt know something changed nt render component known caveat way around vue requires declaring data property component", "d": "7/2017"}, {"body": "would really useful could warning console wasted hours tracking learning vuejs", "d": "7/2017"}, {"body": "kichik track rootlevel methodsprops used template declared nested ones triggers error nt way current reactivity system vue drop support internet explorer change reactivity possible exactly specific caveat information official tutorial", "d": "7/2017"}, {"body": "familiar reactivity system yet solution non ie still useful enabled nonproduction builds browsers", "d": "7/2017"}, {"body": "kichik solution complete rewrite reactivity system smile considered unless drop ie support", "d": "7/2017"}, {"body": "bad thanks thoroughly explaining", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hi thank submitting issue right repository repost vuejsvuejsorg", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "normal behavior close html tags", "d": "7/2017"}, {"body": "kocal according html specs selfclose scenario nice catch mysticatea", "d": "7/2017"}, {"body": "quote specs dt element end tag omitted dt element immediately followed another dt element dd element dd element end tag omitted dd element immediately followed another dd element dt element content parent element", "d": "7/2017"}, {"body": "well works expected closings would make sense support vue actually asks omit element closings vue vue warn error compiling template tag matching end tag tag matching end tag tag matching end tag tag matching end tag found even work sure want add support considering pretty different existing ones impossible predict tag going returned component compiling template want support correct behaviour", "d": "7/2017"}, {"body": "sure thought vuejs supports autoclosing opened issue deprecated feature wo nt fix problem found rewriting vueeslintparser report html syntax errors eslintpluginvue case syntax error", "d": "7/2017"}, {"body": "technically even errors sincd vue template compiler shows error console even working expected think need support disable vue errors code like work expected html suggest supporting html specific closings officially need find evan thinks", "d": "7/2017"}, {"body": "ah sorry found behavior reports lacking end tags errors added looks going deprecation please feel free close issue", "d": "7/2017"}, {"body": "mysticatea still changed moment works differently html specification according specs possible inside", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "vuecli issue vue core issue wrong repo template designed work box deploy root deploying nonroot modify root deployment eg also solves relative path problems using relative publicpath simply wrong please learn webpack maybe read issue reporting guidelines learn open constructive issues opening one", "d": "7/2017"}, {"body": "likely vue add aditional nonjavascript syntax optional chaining stage nt think considered yet", "d": "7/2017"}, {"body": "currenly stage proposal ecmascript actually similar functionality requested past stance extend template expressions non javascript syntax case helper method achieves already multitude options available like lodash add functionality core solved better libs already advice would use lodash something similar add prototype helper filter instances", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "please read warning message telling possible mistake checked", "d": "7/2017"}, {"body": "thanks found problem caused picker components mintui information", "d": "7/2017"}, {"body": "vs", "d": "7/2017"}, {"body": "realised problem vue really sorry womanfacepalming", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "working intended slot name appear look console need use scoped slots pass components render functions", "d": "7/2017"}, {"body": "use without directive arguments", "d": "7/2017"}, {"body": "javoski seems clear use like code right especially object many properties", "d": "7/2017"}, {"body": "wheel onwheel event", "d": "7/2017"}, {"body": "please stop adding comments edit original post jsfiddle instead works expected", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "\u56e0\u4e3a\u4f60\u5e94\u8be5\u9075\u5b88\u63d0issue\u7684\u89c4\u5219 \u4f60\u7684\u8fd9\u4e2a\u95ee\u9898\u4e0d\u662f\u5d4c\u5957\u8def\u7531\u89e3\u51b3\u7684\u5417", "d": "7/2017"}, {"body": "\u6216\u8005\u6211\u9700\u8981\u7684\u529f\u80fd\u662f\u8fd9\u6837\u7684 routerview \u600e\u4e48\u624d\u80fd\u5177\u6709 component \u7684\u7279\u6027 eg component slot currentview", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "think wrong repository", "d": "7/2017"}, {"body": "see", "d": "7/2017"}, {"body": "ah see dynamically needed use vueset target key value instead particpantspush date thank time", "d": "7/2017"}, {"body": "use keep mind always required vue", "d": "7/2017"}, {"body": "posva see issue using index key key give data objects unique id keyed properly posva know show list nt need many edit things", "d": "7/2017"}, {"body": "vvpvvp point vue know developer wants work unique key example time looking vue know wanted", "d": "7/2017"}, {"body": "nickmessing want vfor question use normal example wrote common table component used vfor list data operate staffs nt know data key prop key completely used object key advocated nt use key problem expected see issus", "d": "7/2017"}, {"body": "thought forcing use key nt always need keys need unique keys objects probably kind id nickmessing said vue guess guess using index", "d": "7/2017"}, {"body": "posva thought missing point using index key key nt want force use key nt use something wrong link steps click add twice click last line click click first line delete", "d": "7/2017"}, {"body": "told use index generate unique id every object case need trying tell", "d": "7/2017"}, {"body": "hi vvpvvp posva said generate key workaround eg", "d": "7/2017"}, {"body": "vvpvvp point vue infer unique key vue already infer key based index operations like add delete elements list really generate unique simply counter could trick", "d": "7/2017"}, {"body": "kingwl understand question difference generate vue generate vue yes nt know want told key data use vfor need edit data thing else could please generate unique keys us", "d": "7/2017"}, {"body": "vvpvvp calm friend generate unique keys complex cover case hard generate unique key user imo behavior normal try improve got advice", "d": "7/2017"}, {"body": "vue generate unique keys nt know add delete items super easy add id without using hash use incrementing id", "d": "7/2017"}, {"body": "told add key resolve", "d": "7/2017"}, {"body": "imo feature supporting object type keys constructive likely implemented future see know unique key must attached item object automatically generated inside vue may cause problems users unaware really feel troublesome generate unique ids objects write common util function achieve similar workaround kingwl provided much lighter may lead performance test app js const uniquekeyprop uniquekeyprop const keyprefix keyprefix datenow let uid const isobject val gt val null amp amp typeof val object const genuniquekey obj gt isobject obj uniquekeyprop obj return obj uniquekeyprop const value keyprefix uid objectdefineproperty obj uniquekeyprop value return value return obj vuemixin methods genuniquekey html demo", "d": "7/2017"}, {"body": "default vue uses index items since thing without guess developer wants vue wo nt generate unique keys point developer needs provide unique keys vue ca nt guess also vue mutating objects would wrong opinion data nt field could used unique keys something right ask backend team", "d": "7/2017"}, {"body": "posva super easy add id ugly easy add id simple demos easy add id complex datas complex system data nested structure nested nested nested finally good nt need key know vue mechanism changed wonder way handle helpful tips vfor problems adjacent element directive used nt add key also problem kingwl english good maybe words readability sorry also peaceful", "d": "7/2017"}, {"body": "ugly easy add id simple demos easy add id complex datas complex system data nested structure nested nested nested nt fields data make unique make relations objects finally good nt need key want default behavior use index note nt need looping html standard elements", "d": "7/2017"}, {"body": "wrote slowly complete answer always new answer javoski kindly function wrote problem vue ca nt change datas define also ca nt change data used ui components like table component wrote ui toolkit used kind function maybe hard really nt like way", "d": "7/2017"}, {"body": "akryum nt want answer many times index useful please read demo link steps click add twice click last line click click first line delete", "d": "7/2017"}, {"body": "vvpvvp answering part comment know issue resolved provide unique key item data", "d": "7/2017"}, {"body": "let move discussion discord server forum people able help insights specific project vvpvvp thanks", "d": "7/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "7/2017"}, {"body": "expected ca nt use filters vue directives change", "d": "7/2017"}, {"body": "vue filters used inside mustache interpolations vbind expressions latter supported filters primarily designed text transformation purposes complex data transforms directives use computed properties instead use method instead", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "try", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "\u60a8\u597d \u5173\u4e8e objectobserve\u5e9f\u5f03\u5bfc\u81f4\u7684\u540e\u671f\u6dfb\u52a0\u7684\u5c5e\u6027\u65e0\u6cd5\u68c0\u6d4b\u5237\u65b0\u8fd9\u70b9\u5df2\u7ecf\u660e\u767d\u4e86 \u867d\u7136\u8fd8\u662f\u66f4\u559c\u6b22\u54ea\u79cd\u66f4\u7075\u6d3b\u7684\u7528\u6cd5 \u90a3\u5173\u4e8e\u7b2c\u4e09\u65b9\u63a7\u4ef6\u95ee\u9898 \u662f\u5426\u662f\u80fd\u591f\u89e3\u51b3\u7684\u5462 \u8c22\u8c22\u60a8\u7684\u56de\u590d", "d": "7/2017"}, {"body": "\u597d\u597d\u8bfb\u4e0b\u6587\u6863 usage question issue let close", "d": "7/2017"}, {"body": "please nt create issue twice gets closed", "d": "7/2017"}, {"body": "vue \u8fd9\u662f\u56e0\u4e3a\u4f60\u6240\u7528\u7684\u63d2\u4ef6\u5728\u9009\u62e9\u65e5\u671f\u540e\u6ca1\u6709\u89e6\u53d1 input \u5143\u7d20\u7684 datepicker \u5c31\u53ef\u4ee5\u5411\u4e0b\u9762\u8fd9\u6837\u4f7f\u7528\u4e86 vue", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow repo way big ever find real bug boil using smaller template like take look", "d": "7/2017"}, {"body": "question differences problem number questions said big see accept use shorter text explain problem thanks", "d": "7/2017"}, {"body": "html message itemname itemage js new vue el app data message hello vuejs list methods chooseform thisgetsomeinfor methods getsomeinfor actural ajax request use settimeout function settimeout gt consolelog thislist name age name age name age name age name age mounted function thischooseform obtain already render dom height consolelog documentgetelementsbyclassname inforlist offsetheight also obtain already render dom height using nexttick nexttick gt consolelog documentgetelementsbyclassname inforlist offsetheight", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow code works expected data empty height happens vue calls method calls calls starts timer call stack gets cleared back timer nt finsh yet still emptry array height adds next function end event queue timer still nt finish stack gets completely cleared event loop pulls first thing added event queue call stack executes timer still nt finish list still empty height still time vm pulls function event queue event loop pulls event queue call stack executes want get height need wait moment example links find call stack event loop work modern javascript vms", "d": "7/2017"}, {"body": "nickmessing nice answer thanks lot thanks patience detailed", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "key unique primitive value also documented expected value", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "code running successfully today update version", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "messageboxalert message title options gt typeof message object options message title undefined message undefined else options options return messagebox merge type alert title message options", "d": "7/2017"}, {"body": "issue comes simple html file codes listing follow todo var template lt div id todolistexample gt lt ul gt lt item vfor todo index todos vbind index index vbind title todo von remove remove gt lt item gt lt ul gt lt div gt var item template lt li gt mytitle lt button von click remove gt x lt button gt lt li gt data function return mytitle thistitle props title index methods remove function emit remove thisindex new vue el app template template data newtodotext todos methods addnewtodo function thistodospush thisnewtodotext thisnewtodotext remove function index thistodossplice index components item item", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow using index key scenario wo nt work need use unique keys example element removed elements takes place use key work", "d": "7/2017"}, {"body": "thank much big help", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "yes expected vue rather webpack insert remove styles seem think injected head component renders never removed common pattern extarct css single css file production would result", "d": "7/2017"}, {"body": "styles injected head component renders never removed linusborg thank believe means case initially route component rendered nothing injected first component rendered route switch injected second component rendered route switch injected overwrites previous route switches inject anything component already rendered last used therefore stays authoritative one therefore fallback binding outside container class current component also updated question details feel free make answer interested delete mine case", "d": "7/2017"}, {"body": "vdom already optin ui framework responsibility make easy customise vues provide scoped slots props make customisable", "d": "7/2017"}, {"body": "sure understand problem conclusion virtual dom optional", "d": "7/2017"}, {"body": "css frameworks find difficult provide options well port components something virtual dom basically good lists small portion css framework fact deal component table", "d": "7/2017"}, {"body": "would say first question nt care works automatically least nt require another abstraction accomplish basically work close would work component literal values huge part problem nt able solve cases want use enum constants know nt exist js typescript using similar convention js module option values always string thus solution would work types value props literalsexpressions proposal maybe would possible make work similar smart enough warn direct prop mutation really needed way getting prop attributes allowed get access nonprop ones", "d": "7/2017"}, {"body": "robertbcolton example would work hint", "d": "7/2017"}, {"body": "nickmessing thanks much seem work ca nt seem make following work without vue warning directly mutating prop vue key export default props items type object required true value methods update event consolelog eventtargetvalue emit input eventtargetvalue ideally would nt want want add another data section similar would seem redundant way achieving simple component without getting verbose", "d": "7/2017"}, {"body": "robertbcolton github issues asking questions time online official chat try stack overflow forum", "d": "7/2017"}, {"body": "first impulse got try using got little sad nt work would amazing feature imo two options inclined agree first seems simpler far understood", "d": "7/2017"}, {"body": "victoram could experiment implementing option component like simple example", "d": "7/2017"}, {"body": "sure desirable first added make easier pass things parent component child component improve situation hoclike components making work goal original discussion secondly somehow make work use component element component feels like essentially recreated intercomponent twoway bindings originally dropped vue good reason yes hood technically still sending events updating parent happened hood never problem made data flow harder follow recreate weekness allowing seamless chain many components nested element form feels like would", "d": "7/2017"}, {"body": "linusborg think might misunderstand proposal state syncing components used parent component check example issue description agreed work another issue comment suggested like avoid state maintained parent child use case proposal nt related feature request", "d": "7/2017"}, {"body": "oh right sorry misunderstood completely", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow see ways use inputs numbers", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "thats normal guess nonminified build statements would removed minified uglifyjs production use removed", "d": "7/2017"}, {"body": "okey dokey", "d": "7/2017"}, {"body": "using scoped slot syntax instead pass normal slot course scopedslotsdefault empty please read documentation nt help ask forumvuejsorg chatvuejsorg", "d": "7/2017"}, {"body": "rather takes precedence think adding something like would much", "d": "7/2017"}, {"body": "kind api freeze except useful additions new features syntax sugar generally category think", "d": "7/2017"}, {"body": "agree nt seeing syntax sugar really something new achieved moment personally think nit picking nodes render vue vue scope much edge case really performance issues could solved fr doub actually add fr", "d": "7/2017"}, {"body": "well since vueloader already caches static child trees purely static parts template already rendered", "d": "7/2017"}, {"body": "actually thinking cases author component unsure context component appear", "d": "7/2017"}, {"body": "linusborg sure tried quickly using vuecompile wo nt add robertbcolton point using situation", "d": "7/2017"}, {"body": "posva question referring actually user component using vonce prevent", "d": "7/2017"}, {"body": "posva see template generate static render function html text hello imo costs implementing feature heavily outweigh benefits", "d": "7/2017"}, {"body": "segmentfault \u4e0a\u6709\u4eba\u63d0\u4e86\u540c\u6837\u7684\u7591\u95ee", "d": "7/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "7/2017"}, {"body": "seems problem indeed sure already fixed nt released yet though", "d": "7/2017"}, {"body": "posva nt find code dev pr fixed problem", "d": "7/2017"}, {"body": "element tags except striped automatically browser according html spec use attribute avoid see html js var brokenexample new vue el brokenexample template", "d": "7/2017"}, {"body": "api proposed cause syntax error javascript use declare validation prop", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "think", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hello thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow discord chat happy help", "d": "7/2017"}, {"body": "fwiw took look personal interest work cases edited example since closest solution edit still issue slots investigating", "d": "7/2017"}, {"body": "might solved slots hardcoded trivial solve", "d": "7/2017"}, {"body": "seems solution along method lbogdan createelement way taking slots like take scopedslots however still lot effort create hoc lot remember pass react render wrappedcomponent props", "d": "7/2017"}, {"body": "thought simple solution let know missing something", "d": "7/2017"}, {"body": "based examples given linusborg lbogdan minimal hoc implementation handle components slots javascript const hoc wrappedcomponent gt props typeof wrappedcomponent function wrappedcomponentoptionsprops wrappedcomponentprops render h const slots slots const scopedslots objectkeys slots map key gt scopedslots key gt slots key blocka mentioned still lot effort create hoc vuejs", "d": "7/2017"}, {"body": "seems pass test course would adjust depending whether wrappedcomponent constructor object need pass slots events props", "d": "7/2017"}, {"body": "still lot effort create hoc vuejs apart issue slots due fact vue complex api react scenario disadvantage admire reacts minimal api kinds use cases vue designed slightly different deign goals hocs nt come easily react fairly trivial create helper function wraps initial setup nt", "d": "7/2017"}, {"body": "well really depends end goal understand goal hoc somehow change decorate original component wrappedcomponent add inject props methods event listeners etc much like mixin really smile variant changes component definition nt change way instantiated", "d": "7/2017"}, {"body": "blocka goal hocs often get state eg redux vuex inject wrapped component props would work approach", "d": "7/2017"}, {"body": "linusborg right knew good true forgetting something obvious", "d": "7/2017"}, {"body": "think good example implementing real use case hoc vue", "d": "7/2017"}, {"body": "vue hocs would awesome plus since almost always brought vue vs react debate perhaps official repo could created develop vuehoccreator package way could work robust supported implementation", "d": "7/2017"}, {"body": "btw got better way use createelement parent component instead hoc make child resolve slots correctly", "d": "7/2017"}, {"body": "cute reason official tool nt keep reinventing code sun jul pm thorsten l\u00fcnborg notifications githubcom wrote btw got better way use createelement parent component instead hoc make child resolve slots correctly receiving mentioned reply email directly view github mute thread", "d": "7/2017"}, {"body": "sorry coming official solution yet glad think cute though solution perfect either problems sort ie scoped slots wo nt work latest trick edit oh never mind work official solution probably done least would expect thorougly thought tested", "d": "7/2017"}, {"body": "okay played around way make easier look happy api rough idea sketch able anything able take care copying props component swapping witht parent proper slots resolving add name second argument provided example renders component passes props attrs listeners normal slots scoped slots nt useful course fun happens second argument simple component object want write render function course want extend props attrs listeners use helper create render function like default one described merge pass parent want write render function use helper transform object proper array pass comments wanted", "d": "7/2017"}, {"body": "like expected behavior works event fire textarea loses focus specific repro code type character event fired get executed caused rerender rerender vue render value textarea still empty till event never fired process", "d": "7/2017"}, {"body": "looks like template compilation adding many things edit think jkzing right happening render", "d": "7/2017"}, {"body": "closing working expected edge case though workaround putting texarea component", "d": "7/2017"}, {"body": "vue repository vuex repository essentially style question one better documentation design vuex extension vuex documented plugin interface answered question forum assume close wrong place", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "\u8fd9\u662f webpack", "d": "7/2017"}, {"body": "problem resolved latest version enhancedresolve", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "imo issue", "d": "7/2017"}, {"body": "sorry", "d": "7/2017"}, {"body": "deferred done \u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a promise", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "looks like regression", "d": "7/2017"}, {"body": "event triggering beginning well nt", "d": "7/2017"}, {"body": "error message reproduction pleaser provide code leads error likely nt define symbol allowed type prop", "d": "7/2017"}, {"body": "see", "d": "7/2017"}, {"body": "return plain objects provide recommend taking look provide inject", "d": "7/2017"}, {"body": "used work stopped working problem occurs trying recursively merge objects add smarts detect object clone properties thanks", "d": "7/2017"}, {"body": "posva meaning behind note note provide inject bindings reactive intentional however pass observed object properties object remain reactive took mean reactive objects default behavior could used implemented", "d": "7/2017"}, {"body": "jasonsanjose means pass objects observed injected properties become reactive", "d": "7/2017"}, {"body": "posva thanks clarification give try", "d": "7/2017"}, {"body": "would also like chime received issue trying upgrade regression unhelpful error message made really hard track also anything weird copypasting mixin project edit created", "d": "7/2017"}, {"body": "use elementui elupload compoent veevalidate happens wrong info maximum call stack size exceeded mergedata", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "use mixin instead sharing script", "d": "7/2017"}, {"body": "apologies using issue helper definitely another issue thanks quick reply take look mixins thank", "d": "7/2017"}, {"body": "could please remove images make smaller include steps reproduce well description bug please bonus points english", "d": "7/2017"}, {"body": "hi solution elements disappear rendered set scrolltop number let browser dispatch scroll event show like", "d": "7/2017"}, {"body": "thanks solution", "d": "7/2017"}, {"body": "duplicated", "d": "7/2017"}, {"body": "\u6211\u671f\u671b\u7684\u6548\u679c\u662f\u6570\u7ec4\u5b57\u7b26\u4e32\u5bf9\u8c61\u53ef\u4ee5\u81ea\u7531\u8f6c\u6362", "d": "7/2017"}, {"body": "used method buttons check value html", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank specific reason provided reproduction link reproduction vue repository", "d": "7/2017"}, {"body": "nt see could anything since ca nt access attribute value ie", "d": "7/2017"}, {"body": "instantiate vue app inspect element ie elattributes vbind settings result component alpha worksinie false nt know display markdown tab characters still perfectly preserved later manually instantiate app get error invalid expression meanwhile firefox exactly except component successfully renders manually inspect element replace tabs spaces instantiate app successful something evaluating string contains tabs ie like", "d": "7/2017"}, {"body": "unfortunately nothing linusborg said error unrelated vue happens vue even gets parse template", "d": "7/2017"}, {"body": "strange since returns exactly string firefox ie saying vue uses different method access attribute values would return different values ffie", "d": "7/2017"}, {"body": "saying error unrelated vue happens vue runs btw runs fine", "d": "7/2017"}, {"body": "try explain confusion produced new example html eliminating variable pug template renders ff ch ie renders ff ch ie reiterate particular ie ie dozens users found issue due bug reports missing field first example render second example difference two tab characters edit first example remove tabs one one moment remove final tab component render correctly still something considered relevant vue would able point toward part source code reads attribute values", "d": "7/2017"}, {"body": "il reopen take closer look maybe related template parsing", "d": "7/2017"}, {"body": "guessing instead using domnodes vue uses innerhtml tested indeed return different value ff ie versus whereas using elattributes vbind settings returns value case tab characters could still decoded understand issues", "d": "7/2017"}, {"body": "ok thanks explanation makes sense thought error ie vue generating error nt know get error ie", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "7/2017"}, {"body": "happens still running clear beforedestory vue export default name test mounted thisinterval setinterval gt consolelog refstest beforedestroy clearinterval thisinterval", "d": "7/2017"}, {"body": "see", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "comment needs inside root element preserved", "d": "7/2017"}, {"body": "thank effect", "d": "7/2017"}, {"body": "ah forgot mention docs option works using full build inbrowser compilation work single file components", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "personally never used cucumber issues questions like posted please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted discord chat forum stackoverflow thanks", "d": "7/2017"}, {"body": "think new featurei want cli new choice cucumberjs", "d": "7/2017"}, {"body": "kinanson vuecli initialises project whatever template want want option available clone vuejstemplateswebpack make template support anyway vue issue locking conversation", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "bug report usage question please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted discord chat forum stackoverflow thanks", "d": "7/2017"}, {"body": "got nonanswer apparently", "d": "7/2017"}, {"body": "add online demo", "d": "7/2017"}, {"body": "bind value domprops actually attrs think already fix test could anyone help test", "d": "7/2017"}, {"body": "jsx transform issue see nickmessing think would make sense treat necessary attributes domprops default babelplugintransformvuejsx", "d": "7/2017"}, {"body": "next hours sorry offtopic please merge pr", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "minimal repro", "d": "7/2017"}, {"body": "exected behaviour tag child blocks parsed see one root element html limitations ps information available", "d": "7/2017"}, {"body": "complete list elements close available", "d": "7/2017"}, {"body": "hello working intended find explanation smile", "d": "7/2017"}, {"body": "thanks much", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "want keep use string instead boolean", "d": "7/2017"}, {"body": "nt work false argument variable", "d": "7/2017"}, {"body": "stringify variable", "d": "7/2017"}, {"body": "ktsn genius thanks", "d": "7/2017"}, {"body": "reference requested past", "d": "7/2017"}, {"body": "rpkilby ask filing prs smile thanks heads close dupe", "d": "7/2017"}, {"body": "purpose preventing binding showing dom use new option", "d": "7/2017"}, {"body": "sure quite looking along right lines want disable one binding rather whole lot really confused behaviour initially using like suggest changed reported seemed decided nt expected work child components", "d": "7/2017"}, {"body": "apologies modifier would indeed make work components disables dom attribute fallthrough seems solve exact issue unless want rely behavior cases experience quite rare time use affected dom attributes want pass suggest make props bind explicitly child components", "d": "7/2017"}, {"body": "ah cool good know going insane spot weird inconsistency though fiddle demonstrate reported issue nt see docs nt affect solve need thanks much bikeshed would nice somehow behaviour could controlled parent user rather child needing know might ignore stuff probably matter taste", "d": "7/2017"}, {"body": "already series top element template achieve exact example work reason template ca nt multiple root elements second template root level wrapped", "d": "7/2017"}, {"body": "actually asking multiple toplevel elements component something useful right currently requires nontrivial changes vdom implementation support something falls within obviously nice area focus revisit working substantial improvements vdom future", "d": "7/2017"}, {"body": "click one radio list example second item id attribute radio element appears first time console bind value attribute radio id attribute appears time dont understand mean elements seem work great styles applied correctly log printed ot console item click exactly wrong edit maybe want", "d": "7/2017"}, {"body": "linusborg please follow steps open console click one items serveral times see different log find differences first log others first log id others", "d": "7/2017"}, {"body": "however understood problem id seems disappearing expect id converted string issue use vmodel wrong unset id vale every radio selected since id vue ca nt bind id attribute please see pen provided previuos reply correct usage additional questions using vmodel radio inputs offer support forumvuejsorg chatvuejsorg", "d": "7/2017"}, {"body": "linusborg problem add value itemname input radio see logs nt know", "d": "7/2017"}, {"body": "vmodel still still wrong want show pen", "d": "7/2017"}, {"body": "linusborg replace vmodel itemid vmodel itemname problem still existam use vmodel wrong delete vmodel ok please give similar example usage thank", "d": "7/2017"}, {"body": "please look example still wrong need answer questions issue bug usage problem side alrady suggested please post question forumvuejsorg chatvuejsorg happy help forum", "d": "7/2017"}, {"body": "reactive", "d": "7/2017"}, {"body": "simplesmiler know reactive reactive", "d": "7/2017"}, {"body": "explanation hook cached value change keeps still key autocache", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "error add proper error handling", "d": "7/2017"}, {"body": "symptoms suggest recursive import let take look check going", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow sharing whole repo valid reproduction", "d": "7/2017"}, {"body": "posva understand opened task thought error report due checks made solution needed solution new vue decided open issue nickmessing even take look actually problem recursive import solution work still find explanations form presents error simple way import store inside script work normally still believe bug know vue webpack still investigating", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "maybe use", "d": "7/2017"}, {"body": "like considering somehow similar api pass callback get promise", "d": "7/2017"}, {"body": "suppose supported", "d": "7/2017"}, {"body": "whoops sorry missed", "d": "7/2017"}, {"body": "oh check console", "d": "7/2017"}, {"body": "switching input types lead strange behaviors format model value nt match type", "d": "7/2017"}, {"body": "javoski yes list textlike inputs mentioned description ps works value string example", "d": "7/2017"}, {"body": "another way clearly current release avoid ternary example written vuejs codestyle guide better try use simple expressions components attributes move complex ones callback functions", "d": "7/2017"}, {"body": "bug edge going fixed soon reason us add workaround meantime much easier use patched version meanwhile break something could provide repro using vue please", "d": "7/2017"}, {"body": "ms issues prefer write like test work fine", "d": "7/2017"}, {"body": "hi posva thanks looking following link triggers issue edge project supported ie nt quick access machine link might even trigger code path ie may fail load earlier sounds like benvirus reproduced ie maybe provide link sample code monkey patch using benvirus snippet change pushed edge leave implement workaround ie said would surprised also issue ie since quick google search returns long history issue ms browsers", "d": "7/2017"}, {"body": "mean minimal repro use", "d": "7/2017"}, {"body": "unable reproduce jsfiddle sure suspect may related jsfiddle wraps document around yet another iframe dynamically loaded order things evaluated state inside iframe seems hard predict triggering ms edge bug outside vue trivial basically accessing inside iframe minimal repro report filed ms ok feature request rejected ms bug thought would nt hurt ask workaround happy dive deeper need feel free close ticket implementing workaround nt look like priority would nt blame reject thanks", "d": "7/2017"}, {"body": "oh nt worry simple html file enough well bugs affects matter", "d": "7/2017"}, {"body": "tried simple vue examples unable trigger bug minimal app hard isolatereplicate state triggers application javascript stack trace browser croaks general error console console link code causes points function able see first repro link posted interested pasting simple html vue code code used ms bug report link provided sorry ca nt provide targeted repro html html consolelog xxx documentactiveelement", "d": "7/2017"}, {"body": "sorry concrete feature request support question please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted discord chat forum stackoverflow thanks", "d": "7/2017"}, {"body": "maybe related seems modifier nt working properly", "d": "7/2017"}, {"body": "also using render function working great example", "d": "7/2017"}, {"body": "think nt work attr", "d": "7/2017"}, {"body": "nt know works nt plain attr find using makes work", "d": "7/2017"}, {"body": "issue related using", "d": "7/2017"}, {"body": "regression though", "d": "7/2017"}, {"body": "yeah also break things using", "d": "7/2017"}, {"body": "confused manage reproduce consistently think really need use though repro first input component nt update changes works vue", "d": "7/2017"}, {"body": "mutating method copy array calling", "d": "7/2017"}, {"body": "broke world couple years sure mutating method alone", "d": "7/2017"}, {"body": "runnable reproduction please provide small repository similar demonstrates issue lifecycle created commit mutation logger vuedevtool nt understand sentence sorry", "d": "7/2017"}, {"body": "asked issue please use forums chats ask questions", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "7/2017"}, {"body": "sure caused problem changed devclientjs file var const stupid", "d": "7/2017"}, {"body": "looks need small changes", "d": "7/2017"}, {"body": "read docs", "d": "7/2017"}, {"body": "freezing js process loop", "d": "7/2017"}, {"body": "use instead", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "virtual dom", "d": "7/2017"}, {"body": "\u56e0\u4e3a\u4f60\u5728computed \u91cc\u5f15\u7528\u4e86\u554a \u8fd9\u4e0d\u5c31\u662f\u76f8\u5173\u5417", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "jkzing", "d": "7/2017"}, {"body": "zoroweb", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow need visible class put directly attribute since toggle visibility anyway current code removed end transition style removed though end turns something actually bugs gladly take look repro without semantic ui plain css", "d": "7/2017"}, {"body": "special merge behaviors typically used explicitly styling root element child component implicitly passing might result unexpected layout results due nesting obvious user want component expose way style nonroot element exposing dedicated props purpose eg cases suggest exposing datadriven props manage styling inside component", "d": "7/2017"}, {"body": "implicitly passing might result unexpected layout results due nesting obvious user could nt said attributes well eg nesting may obvious user definitely nt obvious nt handled way attributes alone caused unexpected layout results using wrapper component would expect regular html attributes passed wrapped element", "d": "7/2017"}, {"body": "reasoning meant passing generic nonstyling related attributes almost always styling related actually noted docs probably make prominent talking expected result user talking user component provided user framework authoring components nt think good idea encourage user directly style component via classes inline styles said prefer pure data props manage styling inside component example could user component nt even need know class", "d": "7/2017"}, {"body": "personally think focus support since nonstandard likely completely replaced", "d": "7/2017"}, {"body": "agree nickmessing adding really nt bad imo", "d": "7/2017"}, {"body": "need use computed property moment date inputs widely supported something probably skip date widely supported", "d": "7/2017"}, {"body": "okay guess using vue datepicker library currently best option", "d": "7/2017"}, {"body": "hi right wiki nt maintained anymore guess could even deactivate dont use kind documentation website", "d": "7/2017"}, {"body": "yeah wiki disabled", "d": "7/2017"}, {"body": "vue even reach year", "d": "7/2017"}, {"body": "dude showed forum triggering real dom event works like hour ago jquery whatever god knows behind scenes seem work agreed concern aim compatible vanillajs first foremost close lock issue discussion continue forum", "d": "7/2017"}, {"body": "also request ask default injections maybe could consider together", "d": "7/2017"}, {"body": "showcase problem minimal jsfiddle looks ilke looking default values jkzing said keep issue opened instead", "d": "7/2017"}, {"body": "yes issue considered together purpose avoid warning missing inject", "d": "7/2017"}, {"body": "simply pass", "d": "7/2017"}, {"body": "empty string", "d": "7/2017"}, {"body": "using quick fix fiddle", "d": "7/2017"}, {"body": "please see updated link", "d": "7/2017"}, {"body": "listens event detect changes nt trigger event", "d": "7/2017"}, {"body": "yes send documentqueryselector input nametype trigger change", "d": "7/2017"}, {"body": "nt need nt use jquery using vue following would recommend read vue guide particular handling user input might misunderstanding vue used", "d": "7/2017"}, {"body": "use jquery plugin working project select list time plugin make many operation want resive result plugin setting value hidden input variable clean simply way work vue massege accepted state must change value jquery plagin trigger vue update variable work vue update variable", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow vue listen back setting value directly dom element", "d": "7/2017"}, {"body": "please see bug reports writed solved make work may bug nt please help solve problem", "d": "7/2017"}, {"body": "ask", "d": "7/2017"}, {"body": "html export default name app case context styles contextrenderstyles returns empty string contextrenderstyles \u7ed3\u679c\u4e00\u6837\u662f empty string", "d": "7/2017"}, {"body": "reproduction runnable please provide actual repo", "d": "7/2017"}, {"body": "repo npm run prod run server product mode ssr appapp component scoped style src appcss import testcss client side works fine server side contextrenderstyles empty renderer creation code servicesssrjs use apicontrollersindexcontrollerjs", "d": "7/2017"}, {"body": "ok looked setup using essentially component also root component ssr css injected component hook however created root instance render starts injected css never got registered need make root component wrapper js app new vue router extends app store app new vue router store render h gt h app", "d": "7/2017"}, {"body": "thank much lt work like charm king god maestro emperor code meister vuejs forever xd", "d": "7/2017"}, {"body": "\u8fd9\u662fexpected", "d": "7/2017"}, {"body": "jkzing hard got time please translate robotic translate crazy smile", "d": "7/2017"}, {"body": "jkzing", "d": "7/2017"}, {"body": "nickmessing basic idea click \u6d4b\u8bd5\u4e00\u4e0b fiddle hooks get called children like", "d": "7/2017"}, {"body": "jkzing oh told expected behaviour see close issue", "d": "7/2017"}, {"body": "nickmessing yes could close", "d": "7/2017"}, {"body": "iixxoo \u5f3a\u5236\u91cd\u65b0\u6e32\u67d3 \u6307\u7684\u662f\u91cd\u65b0\u751f\u6210\u4e86vdom", "d": "7/2017"}, {"body": "jkzing thank", "d": "7/2017"}, {"body": "dom", "d": "7/2017"}, {"body": "\u591a\u4e2a \u5b9e\u4f8b \u7684data \u4e2d\u53ef\u80fd\u5b58\u5728\u6570\u636e", "d": "7/2017"}, {"body": "\u5982\u679c\u4f60\u7684\u903b\u8f91\u4f1a\u56e0\u4e3a updated hook", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "hook", "d": "7/2017"}, {"body": "bug components resolved based component template used need expose user register together component using", "d": "7/2017"}, {"body": "vue wrapping functions one function register instead listeners simply wrap listeners function instead pushing array", "d": "7/2017"}, {"body": "imagine jsx pass data child components rerender parent component way around see example actually used method expected behaviour", "d": "7/2017"}, {"body": "provide actual reproduction hackernews repo running using scoped styles renders styles server eel scenario working please fork repository edit demonstrates issue", "d": "7/2017"}, {"body": "caused bug resolved upgrade", "d": "7/2017"}, {"body": "boolean string number technically warning asks still look see boo leans fine", "d": "7/2017"}, {"body": "fyi turn boolean number prepending guess adding warning enough could also make check vaule boolean", "d": "7/2017"}, {"body": "online code prevent default wrong event problem paste please provide reproduction new issue", "d": "7/2017"}, {"body": "linusborg thank much got another problem actually problem vuematerial bind clicking dropping would try paste next", "d": "7/2017"}, {"body": "would problem ask forumvuejsorg", "d": "7/2017"}, {"body": "usage question bug please ask question chatvuejsorg forumvuejsorg", "d": "7/2017"}, {"body": "bug may vuejs process message", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "bug even providing valid repro link please ask kind consulting questions forumvuejsorg would glad help", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "question bug report also related party library please make sure follow issue report requirements", "d": "7/2017"}, {"body": "nt possible autorun blaze data affect vue instance update", "d": "7/2017"}, {"body": "yes could see easy way determine one props attrs updating needed", "d": "7/2017"}, {"body": "wrap component inside vue instance example", "d": "7/2017"}, {"body": "yes assigns defined target component props get mapped automatically", "d": "7/2017"}, {"body": "want set attributes", "d": "7/2017"}, {"body": "oh support nonprop attributes could still bound reactive value would like fully support vue", "d": "7/2017"}, {"body": "point root tag inside component le dim juil mitar notifications githubcom \u00e9crit oh support nonprop attributes could still bound reactive value would like fully support vue receiving commented reply email directly view github mute thread", "d": "7/2017"}, {"body": "user set attributes without developer component knowing see description rationale would like support blaze well possible big deal vue would function would allow programmatically set update props attrs like template language would easy", "d": "7/2017"}, {"body": "generally use nonvue libraries likely write least one vue component wrap expose features props events point using vue components blaze anyway", "d": "7/2017"}, {"body": "think needed could directly use vue components least aiming package", "d": "7/2017"}, {"body": "nt get fr already programmatically create vue instances sharing object state allow reuse data multiple instances needed trigger functions things change use watchers missing", "d": "7/2017"}, {"body": "would programmatically create component would equivalent without knowing props component accepting become attributes", "d": "7/2017"}, {"body": "templates render functions access available props diff pass", "d": "7/2017"}, {"body": "trickier seems use render function modify anymore get warning afterwards toplevel component anymore", "d": "7/2017"}, {"body": "still nt see missing", "d": "7/2017"}, {"body": "sorry comment bit rude modify props pass feel like nt dug enough problem time looks like understand average user asked forum discord get help", "d": "7/2017"}, {"body": "worries know sometimes hard communicate online also understand background asked anything forum think good enough grasp vue code read currently possible nt feel questions would need answer course maybe missed something issues using forum try login get ca nt log mitar ip address different issue working blaze integration vue current code issue relates could create nice api render vue components blaze templates ideally wanted support something like following syntax blaze puts arguments object passes code would include vue values reactively change code rerun new object new value allows one push updated values vue component instance two questions know values props args somebody using code push new values instance even care developer using syntax care care using push new values given getting new object new values one approach would ask developer specify props args asking pass arguments something like would prefer developer tried two approaches one wrapping component one without wrapping component code something like object works two issues know props attrs could inspect component options figure manually would require duplicate code already existing vue would great could pass object vue figures update props attrs change without recreating whole component maybe component keeps important state form loose existing user input tried something like throws warning one changing nonroot props directly moreover idea change attributes similar way second approach tried want update props works alternatively suspect could setting values object directly might propagate vue yet tried issue approach know pass attrs manually filter props attrs working wondered api would match template api vue figures one prop one attr maybe instead could vue would split needed augment object detect changes observe provide method think doable without help vue issue think simpler maybe complicating though easier way", "d": "7/2017"}, {"body": "every warning cared warnings exist nt btw warning would gone production", "d": "7/2017"}, {"body": "nt see good reason support ignore warnings", "d": "7/2017"}, {"body": "vforkeys warning really good certainly save time debugging later case problem", "d": "7/2017"}, {"body": "thank consideration agree warnings important observed situation thought might miss warnings console flooded warnings less falsepositives think situations vfor key warning would useful example vfor accepts parameter type array object number string case iterating collection objects nt necessarily know keys object ahead time get around injecting guid field object data loaded iterating array arrays string number would able address warning missing key either way understand edgecase thanks responses vue awesome", "d": "7/2017"}, {"body": "quick addition proposed api api wraps instead", "d": "7/2017"}, {"body": "events already cleaned point", "d": "7/2017"}, {"body": "misunderstood html listeners functions called directly take example time click create new component adds event emitter destroys previous components yet despite destroyed emit listeners still hit emit event button", "d": "7/2017"}, {"body": "um could done via mixins reason make particular case inside vue nt use deal kind situation frequently", "d": "7/2017"}, {"body": "must know least handful vue devs attach event listeners created store somewhere remove one destroyed functions considering one vuejs big points ease use common patterns larger apps always binding events different sources html templates would huge pain relief larger apps could always keep applying mixins considering html templates already clean things automatically sounds logical api event listeners also way clean things automatically", "d": "7/2017"}, {"body": "fiddle really different attaching events another source linked vue instance calling function way normal clean make clear listeners setup cleaned instance destroyed without event ok memory leaks etc note", "d": "7/2017"}, {"body": "fiddle really different attaching events another source yup point example global event bus want component listen event must created function destroyed function event bus may passed via prop imported module ref anywhere usual case seen common work using event bus common pattern sure could call different vue instance functions common pattern know people already simple function wrap nicely within vue makes life bit easier larger apps", "d": "7/2017"}, {"body": "using external event emitter even though vue instance responsible handling suggest create plugin mixin post link", "d": "7/2017"}, {"body": "posva mixin first message thread works fair people see use similar lot code seen applies events forget clean without noticing bugs leaves behind built would help number people", "d": "7/2017"}, {"body": "specific case nt know think super common using instance event emitter useful small projects larger projects use vuex incrementing size vue small projects second thought cool add mixin docs could submit pr", "d": "7/2017"}, {"body": "sure thing specifically would fit familiar repo", "d": "7/2017"}, {"body": "think go", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow vue provide template compiler package well", "d": "7/2017"}, {"body": "maybe project help jaweii", "d": "7/2017"}, {"body": "lovermaker thanks tried vuep compile template", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow unfortunately depends jquery plugin", "d": "7/2017"}, {"body": "current behavior untouched explicitly passed via passed template actually passed removed functional component resolves prop", "d": "7/2017"}, {"body": "yeah guess wondering props removed added always identical", "d": "7/2017"}, {"body": "honestly idea trying", "d": "7/2017"}, {"body": "imagine dialog component named cdialog template like used like problem far component defines content buttons like cform form creates contentblock buttonsblock could nt simply create use like buttonsdiv cform would end maintag cdialog instead footertag solve problem idea would multiple returnslots maybe vue already way simply nt found yet", "d": "7/2017"}, {"body": "splitting sub components like give user use fill content dialog component allow customisation", "d": "7/2017"}, {"body": "instead using one single component fill different slots use different components one slots", "d": "7/2017"}, {"body": "ok thank idea think would work case try", "d": "7/2017"}, {"body": "fyi referring something like", "d": "7/2017"}, {"body": "two small remaining problems order order elements resulting htmlcode ca nt controlled cdialog case big problem use flexbox reorder css solve general case replacement cdialog component let call cpage ca nt change code cform cpage needs work dialogbody etc dialogbody render differently cpage cdialog would need something like dispatching parent optionsname dialogbody bit cumbersome seem problem usecase think solution works", "d": "7/2017"}, {"body": "complexifying things quite lot maybe render functions appropriate suggest ask questions forum discord server gitter stackoverflow", "d": "7/2017"}, {"body": "desired end result", "d": "7/2017"}, {"body": "alternatively way make slot ignores wrapper element would still semantic provide outermost element lost rest injected slot perhaps signifying lose top level way indicate", "d": "7/2017"}, {"body": "demonstrates problem trying solve", "d": "7/2017"}, {"body": "generated html", "d": "7/2017"}, {"body": "alexbowers use tag vue render children vnodes simply pass title prop", "d": "7/2017"}, {"body": "sqal use slot template tag work top level nothing else template though correct still nt semantic allowing child slot rendered children nodes", "d": "7/2017"}, {"body": "use case header bar site may title subtitle buttons breadcrumbs etc would like passed semantic way possible", "d": "7/2017"}, {"body": "please edit title actually requesting", "d": "7/2017"}, {"body": "sorry sure title came changed", "d": "7/2017"}, {"body": "want explain provide examples need something like discord provide", "d": "7/2017"}, {"body": "sqal said want semantic using component put inside tag problem approach user must specify classes solution create sub components like sbheadertitle user nt care original style still able adds personal opinion sqal said semantics matters page rendered developed always use meaningful names like title", "d": "7/2017"}, {"body": "posva sqal provided nt solution solves problem though would example modal header button body content way valid html ie tags within", "d": "7/2017"}, {"body": "creating subcomponents html valid surely means slots effectively useless right circumstances slot wo nt work sub component always work use slot", "d": "7/2017"}, {"body": "creating subcomponents html valid surely means slots effectively useless right circumstances slot wo nt work sub component always work use slot create sub components like sbheadertitle user nt care original style still able adds replaced state style typo", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "\u7f51\u901f\u592a\u6162 \u7ec8\u4e8e\u77e5\u9053\u600e\u4e48\u8fde\u63a5\u4e86 \u8fd9\u91cc\u662f\u94fe\u63a5", "d": "7/2017"}, {"body": "fyi also happens situations eg", "d": "7/2017"}, {"body": "\u521d\u59cb\u503c n\u548cslct \u4e0d\u7b26\u5408\u8981\u6c42 \u4f46\u90fd\u4fdd\u6301\u4e86\u521d\u59cb\u503c \u548c aa \u5f53\u6539\u53d8 n\u548cslct \u65f6 \u4e24\u4e2a\u503c\u4ecd\u4e0d\u7b26\u5408\u8981\u6c42 \u4f46 n \u4fdd\u6301\u4e86\u8d4b\u7ed9\u7684\u503cbb \u800c slct \u5219\u88ab\u5f3a\u5236\u6539\u4e3a\u4e86 undefined \u6211\u60f3\u8bf4\u7684\u662f \u65e2\u7136\u9009\u9879\u4e2d\u90fd\u6ca1\u6709\u5408\u9002\u7684\u503c \u4e3a\u4ec0\u4e48\u521d\u59cb\u53ef\u4ee5\u5b58\u5728 \u4f46\u6539\u53d8\u540e\u5c31\u4e0d\u80fd\u5b58\u5728\u4e86 \u88ab\u5f3a\u884c\u6539\u6210\u4e86undefined \u8fd9\u4e5f\u548c vmodelnumber \u8868\u73b0\u4e0d\u4e00\u81f4 \u503c\u6ca1\u6709\u88ab\u5f3a\u884c\u6539\u4e3aundefined", "d": "7/2017"}, {"body": "hi jstcodes using set value found tag ca nt change behivor may bind another varible tag eg make watcher watch changes non value set value changes remains label unchang", "d": "7/2017"}, {"body": "hi plasmatium \u611f\u8c22 \u8be5\u65b9\u6cd5\u53ef\u4ee5\u4f5c\u4e3a\u51b3\u89e3\u95ee\u9898\u7684\u65b9\u6cd5\u4e4b\u4e00 \u5728\u9879\u76ee\u4e2d\u5f02\u6b65\u83b7\u53d6 slct \u548c option\u9009\u9879\u96c6\u65f6 \u6211\u5c06 select\u7684\u8d4b\u503c\u653e\u5728\u4e86\u4e24\u4e2a\u5f02\u6b65\u64cd\u4f5c\u4e4b\u540e\u8fdb\u884c\u4e5f\u53ef\u4ee5\u907f\u514d \u53ea\u662f\u51fa\u73b0\u4e86\u8fd9\u4e2a\u95ee\u9898\u6709\u70b9\u7591\u60d1 \u65e2\u7136 \u90a3\u53ea\u80fd\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u6765\u907f\u514d\u4e86 thank", "d": "7/2017"}, {"body": "print blocking think much however easily fixable userland creating custom print function", "d": "7/2017"}, {"body": "hi posva unfortunately nt quite work reliant laying stuff javascript depending screen dimensions need read dimensions element inside css media query listener callback like see printed page nt show updated value soon close print preview text updates width measured page print preview looked css usecase could find solution hence bit layout javascript ouch", "d": "7/2017"}, {"body": "hmm well force update sure expose public api though edge case", "d": "7/2017"}, {"body": "ah yep works agreed seems overkill make public api thanks much help david", "d": "7/2017"}, {"body": "vue reusing elements components possible unless tell otherwise", "d": "7/2017"}, {"body": "sorry false report appreciate help linus", "d": "7/2017"}, {"body": "call twice gif call gif", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "got kind similar situation got two components parentcomponent childcomponent parentcomponent deleted vif condition met triggers beforedestroy parentcomponent seems remove dom elements within parentcomponent thus childcomponent beforedestroy childcomponent triggered childcomponent looks something dom nt anymore nt childcomponents beforedestroy triggered first better approach solve problem", "d": "7/2017"}, {"body": "zhangdroid bartdonninger troubled problem many days", "d": "7/2017"}, {"body": "actually expected element longer dom triggers fortunately specific scenario need get element size append back document element compute sizes removing", "d": "7/2017"}, {"body": "posva thanks reply still got trouble try build vue version reactoverdrive need get size position component destroyed way get thanks", "d": "7/2017"}, {"body": "zhangdroid please use forum chat questions alternative consider instead", "d": "7/2017"}, {"body": "zhangdroid hey buddy trying build vue version reactoverdrive", "d": "7/2017"}, {"body": "report way generic please try narrow least error stack trace", "d": "7/2017"}, {"body": "html html msg javascript var appnew vue el app data msg test consolelog vue consolelog app el console", "d": "7/2017"}, {"body": "nt see element id vue could mount", "d": "7/2017"}, {"body": "linusborg", "d": "7/2017"}, {"body": "yeah sorry missed read mobile anyway run code test never used nwjs ca nt verify", "d": "7/2017"}, {"body": "ok problem really vue issue need use full build vue default runtime build nwjs libs required run separate background page different main window use vue mounts instance element background page instead fix need pass vue preselected element main window", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "seems error happen development environmentthis error disappear production environment", "d": "7/2017"}, {"body": "realyalso throw production", "d": "7/2017"}, {"body": "first detect prop mutation direct binding detecting mutation inside arrayobject prop value adds much overhead perf complexity really worth also mutating toplevel prop binding leads scenario mutated value gets reset parent updates directly mutating nested values without changing binding problem although still recommended valid usage", "d": "7/2017"}, {"body": "expected behavior unlikely change would technically breaking piece vdom transitioned destroyed moment leaving transition starts unfortunately polling solution might necessary workaround directives mutates dom directly", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "ditto request typically find overriding injected property data order provide default", "d": "7/2017"}, {"body": "also feature currently components nested within parents provide info children warning always pops root component nt provider injected property specific use case nested layout splitters", "d": "7/2017"}, {"body": "realized pass data attribute directly closing", "d": "7/2017"}, {"body": "issue revert back", "d": "7/2017"}, {"body": "turns bug fixed", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "sorry introduced fault try fix", "d": "7/2017"}, {"body": "worries reverted meantime harm done", "d": "7/2017"}, {"body": "also happens trying extend component implements syntax guess issue", "d": "7/2017"}, {"body": "frandiox yes root cause fixed get merged sorry", "d": "7/2017"}, {"body": "fixed customize merge strategy inject option make workaround kinda like", "d": "7/2017"}, {"body": "please upgrade", "d": "7/2017"}, {"body": "others version lock vue pkg", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "please update", "d": "7/2017"}, {"body": "okay thanks", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "thanks qucly solution great make npm download", "d": "7/2017"}, {"body": "upgrade", "d": "7/2017"}, {"body": "review historic changes pacjkage saw error previos revisio expect inside try itand tell us", "d": "7/2017"}, {"body": "yes solved using using npm vue solved great", "d": "7/2017"}, {"body": "hi compiling got error c throw new error error vue packages version mismatch vue vuetemplatecompiler may cause things work incorrectly make sure use version using vueloader gt simply update vuetemplatecompiler using vueloader lt vueify reinstalling vueloadervueify bump vuetemplatecompiler latest object c modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object c solve must uninstall vuetemplatecompiler reinstall vit version vue npm uninstall vuetemplate compiler npm vuetemplatecompiler completed solved installation compilation thanks", "d": "7/2017"}, {"body": "take closed issue", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "release fix error", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "got error ps node npm", "d": "7/2017"}, {"body": "got error temporarily changed npm err darwin npm err argv npm err node npm err npm npm err code elifecycle npm err errno npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output", "d": "7/2017"}, {"body": "got error npm node zcdll zcdllinfisa npm install nodesass install node scriptsinstalljs cached binary found vue postinstall node buildinstallhooksjs throw err error find module functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn optional skipping optional dependency fsevents nodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os linux arch npm err code elifecycle npm err errno npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script npm err probably problem npm likely additional logging output npm err complete log run found npm err", "d": "7/2017"}, {"body": "got error node version", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "node neither works", "d": "7/2017"}, {"body": "nt work", "d": "7/2017"}, {"body": "npm err linux npm err argv install vue npm err node npm err npm npm err code elifecycle npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err homejgurepostrdmonfrontnpmdebuglog", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "node npm yarn fails", "d": "7/2017"}, {"body": "vue postinstall hometonytestnodemodulesvue ode buildinstallhooksjs throw err error find module hometonytestnodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup got error", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "entire thing reported fixed realtime", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "happy make pr deletes script commiting publishing npm unless already working", "d": "7/2017"}, {"body": "vue", "d": "7/2017"}, {"body": "jounqin thank sad story", "d": "7/2017"}, {"body": "lavyun works please close issue", "d": "7/2017"}, {"body": "working expected setter work setting value jsbin", "d": "7/2017"}, {"body": "nt think necessary many users successfully using current vue types vscode maybe ktsn octref idea either way actionable", "d": "7/2017"}, {"body": "hmm nt think add current declaration seems expose vue typings global namespace declaration intentionally written module usages shipped via npm would suggest declare local declaration file project expose vue types global ts vueglobaldts import vue require vue export vue export namespace vue", "d": "7/2017"}, {"body": "thank suggestion", "d": "7/2017"}, {"body": "seems wrong import vue vue files see sample setup", "d": "7/2017"}, {"body": "octref know could use npm prefer using use vue global variable instead happen use plain javascript want intellisense way importing possible javascript vscode get intellisense jsdoc comment prefer", "d": "7/2017"}, {"body": "vetur covers sfc nt much plan supporting html file imports vue cdn like general jsinhtml support open issues vscode", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "source issue", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "call install please ask questions forum gitter next time", "d": "7/2017"}, {"body": "realizing probably postprocessor good idea would one using computed filed others could use expect cursor maybe preprocessor would suitable", "d": "7/2017"}, {"body": "difference", "d": "7/2017"}, {"body": "issue asking allow iteration custom objects arraylike things especially able specify multiple things maybe better integrate reactivity object could inform vue values changed like order modified one particular item array changed others maybe allow custom conversion arraylike array object rest code explain key use iterate way help make plugins allow developers return object convert arraylike array instead asking developers pass arraylike objects could also seen sugar top", "d": "7/2017"}, {"body": "post processors something done directly inside computed property really nt see gain registering way configure default key iterate case could check postprocessor cursor set default key iterate prefer explicit setting unlikely happen", "d": "7/2017"}, {"body": "post processors something done directly inside computed property really nt see gain yes would mostly sugar one manually convert arraylike object every time make query similar blaze works people used prefer explicit key setting unlikely happen understand general magic tricky case minimongo pretty clear key", "d": "7/2017"}, {"body": "case going pass adding postprocessors computed properties something extra api worth cost keep mind added plugin parses computed properties add extra post process", "d": "7/2017"}, {"body": "keep mind added plugin parses computed properties add extra post process wanted hear link example plugin", "d": "7/2017"}, {"body": "one issue also realizing postprocessing maybe best approach wrote realizing probably postprocessor good idea would one using computed filed others could use expect cursor maybe preprocessor would suitable way preprocessing", "d": "7/2017"}, {"body": "aware using mixin hook transforms object way preprocessing would computed property", "d": "7/2017"}, {"body": "would computed property note part computed property also used purposes", "d": "7/2017"}, {"body": "wo nt add something already something working vfor amp comp", "d": "7/2017"}, {"body": "think would result lot code due way current virtual dom works still something similar transform vue apps custom elements app scoped shadow dom", "d": "7/2017"}, {"body": "nt solve problem unless use ignoredelements vue config", "d": "7/2017"}, {"body": "avoid mixing templates like instead mount instance injs template string onto empty element either way nt think add api use case way niche", "d": "7/2017"}, {"body": "ps \u7c7b\u4f3c\u95ee\u9898\u8bf7\u81f3", "d": "7/2017"}, {"body": "see", "d": "7/2017"}, {"body": "expected behaviour input recreated specific situation due way vdom diffing works make vue better aware specific elements", "d": "7/2017"}, {"body": "tried adding input nt work nested div appears attribute needs level vif otherwise still replaced probably documented feel stupid trying", "d": "7/2017"}, {"body": "expected behaviour render function reacting data property prop changing working version edit explanation nt clear mean changing value parent prop changing data still linked old reference set property normal component rerender", "d": "7/2017"}, {"body": "stands placeholder represents component parent vdom tree root component parent vdom tree", "d": "7/2017"}, {"body": "maybe need", "d": "7/2017"}, {"body": "looks like check reason behaviour expected ps another potential case", "d": "7/2017"}, {"body": "ok bug vue per html nest inside template gets reformatted browser passed vue template parser would work using purestring template probably avoid regardless", "d": "7/2017"}, {"body": "argh sorry nt think also limited aspect", "d": "7/2017"}, {"body": "thanks taking look amp posva due respect nt trying nest inside attempt common practice nesting inside especially navigations understand limitation may due order events vue control still feel like maybe something worth addressing posva workaround wrapping child template nt difficult least bit significant reason avoiding alternatively potentially way bypass browser reformatting using sort vue custom element setting attribute child eg appreciate", "d": "7/2017"}, {"body": "limitation html problem wont appear compiling templates using vue files tue jul chase giunta notifications githubcom wrote thanks taking look amp posva due respect wasnt trying nest inside attempt common practice nesting inside especially navigations understand limitation may due order events vues control still feel like maybe something worth addressing posva workaround wrapping child template nt difficult least bit significant reason avoiding alternatively potentially way bypass browser reformatting using sort vue custom element setting tag attribute child eg child appreciate receiving mentioned reply email directly view github mute thread", "d": "7/2017"}, {"body": "get around use string template instead indom template see difference logs", "d": "7/2017"}, {"body": "design functional components rerendered every time something affects changes even something unused parent component idea functional components nt cached nt track dependencies toggle button look console always improve docs vuejsvuejsorg repo suggestions please tell us opening issue thoughts even better directly open pr", "d": "7/2017"}, {"body": "yeah looks like fact makes directive bound differently nt working correctly either using instead fix issue render function generated transforms directive pair thanks reporting", "d": "7/2017"}, {"body": "thanks also like add thing happening elements prop likewise dropped", "d": "7/2017"}, {"body": "faster ever", "d": "7/2017"}, {"body": "would also like point run fiddle get following console window vue", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "current userland fix", "d": "7/2017"}, {"body": "declared dts intentionally since actually undocumentedprivate api", "d": "7/2017"}, {"body": "making hoc since vue requires props declared front need grab wrapped component done without reaching options", "d": "7/2017"}, {"body": "may consider exposing definition future closing since easy workaround", "d": "7/2017"}, {"body": "wanted point ktsn relying", "d": "7/2017"}, {"body": "javascript data \u4e2d\u7684\u503c\u4f5c\u4e3a source truth \u6240\u4ee5\u5e94\u5f53\u5c3d\u91cf\u4ee5\u5728 js", "d": "7/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted discord server gitter chat room forum stackoverflow thanks", "d": "7/2017"}, {"body": "\u662f\u6211\u81ea\u5df1\u641e\u9519\u4e86", "d": "7/2017"}, {"body": "previous attempt opening issue", "d": "7/2017"}, {"body": "branch contains development code may stable would even install branch install package skip npm postinstall script needed bu main purpose repository used dev environment package", "d": "7/2017"}, {"body": "use fork repo without publishing important one provide dependency directly git fork inside sure define git dependency", "d": "7/2017"}, {"body": "want install fork anyway remove postinstall repository needs script development process remove obviously", "d": "7/2017"}, {"body": "suggest removing hook fork hook necessary enforcing workflow main repo alternatively take pr makes hook noop repo installed via npm instead local development", "d": "7/2017"}, {"body": "issue effects command git directly wtvuepurenpminstallbug npm install vue save vue postinstall workspacestestingvuepurenpminstallbugnodemodulesvue node buildinstallhooksjs throw err error find module workspacestestingvuepurenpminstallbugnodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn vuepurenpminstallbug description npm warn vuepurenpminstallbug repository field npm err code elifecycle npm err errno npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script npm err probably problem npm likely additional logging output npm err complete log run found npm err ok wtvuepurenpminstallbug npm install vue save npm notice created lockfile packagelockjson commit file npm warn vuepurenpminstallbug description npm warn vuepurenpminstallbug repository field vue added package", "d": "7/2017"}, {"body": "confirm working fresh installation laravel immediately run outputs error message previous comment adding tag continue installation without warningserror", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "fyi script renamed causes normal installs fail well", "d": "7/2017"}, {"body": "anyone bandage trying get fresh laravel install working", "d": "7/2017"}, {"body": "say told glad got resolved finally", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "documentation clear matter works inside mustache interpolations vbind expressions way works call function declared object edit realized use syntax", "d": "7/2017"}, {"body": "sqal said", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "design vue", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "reopen even though meeting issue standards since assume meant discussion start see solve goal issue quite clear", "d": "7/2017"}, {"body": "first thank reopening think would good thing could solve problem better solution avoid problem except using directives could discussedif problem could solved next release better solved problem using setinterval updating audio time lazy avoid problem using vmodelbut need know data updates real time need use settimeout input event cumbersome elegant", "d": "7/2017"}, {"body": "description clear saying scrolltype together queue stops working altogether ie nothing updates anymore use promise whenever available microtask queue gets flushed earlier timer queue ideally want fallback uiwebview ios gt tricky part reliable way detect environment empty hack seems work cases never run case described please try provide reproduction steps answer question yes", "d": "7/2017"}, {"body": "answer yes prepared demo tests time everything seems right realized misunderstandingunlike time removed library used think might libraries indirectly cause problem team leader found removed project solve problem one conditions decides whether use native mobile phone testers tested undefined rewritten requires promise polyfill browser carelessness nt keep looking reason great sorry taken valuable time thank reply", "d": "7/2017"}, {"body": "cool good know maybe file issue babel regarding polyfill behavior", "d": "7/2017"}, {"body": "meanwhile created simple reproduction always red toggle color expected see console devtools infomation", "d": "7/2017"}, {"body": "similar parent update slot content vdom reference leading vdom patcher updating dom short treat slot content immutable entity modify accordingly eg", "d": "7/2017"}, {"body": "thank simplesmiler much similar react purecomponent references path certain variable object new one made happen tried also worked thank much", "d": "7/2017"}, {"body": "plasmatium correct safer always clone new node internal helper likely expose future versions", "d": "7/2017"}, {"body": "iterating object see documentation cf", "d": "7/2017"}, {"body": "hi modified observed variable trigger rerender add new member modify variable invoke setter vue watch add new member would invoked getter related document could found add new members observed object observed object member new members would add observer automatically modified would triggered rerender assign new value find member changed rerender triggered triggered watcher next tick means code line executed rerender may try code find rerender triggered modified variable watch responsible add new member kind modified", "d": "7/2017"}, {"body": "see", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "pass argument filter please read docs", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "solve issue", "d": "7/2017"}, {"body": "please follow issue reporting guiddlines issue reported vetur", "d": "7/2017"}, {"body": "vue reusing elements conditions may need add div like vue click click cancel ref", "d": "7/2017"}, {"body": "closing jkzing right", "d": "7/2017"}, {"body": "schema", "d": "7/2017"}, {"body": "prsth version fiddler vue seems ok env amp steps update latest version works well anyone else could help check", "d": "7/2017"}, {"body": "reproduce either safari either way like safari issue rather related vue anyway", "d": "7/2017"}, {"body": "things start contain js expressions others like contain text like html attributes intended make things consistent", "d": "7/2017"}, {"body": "thank clarification", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "reserved attributes little value changing imo", "d": "7/2017"}, {"body": "thank answer see", "d": "7/2017"}, {"body": "cases expose api", "d": "7/2017"}, {"body": "sure find issue app feel like app pretty ugly create many watchers instead one object watcher thanks taking time look", "d": "7/2017"}, {"body": "create generic userland helper exposes api want implementing core would complex due arbitrary depth objects", "d": "7/2017"}, {"body": "specifically used avoid ambiguous use scoped slot vs props agree bit verbose imo necessary ensure always instantly notice scoped slot read code later", "d": "7/2017"}, {"body": "something like feel api verbose", "d": "7/2017"}, {"body": "yep think shortcuts like props javascript simple documentation really emits suggest simple suggest event must bound emits suggest true props style emits suggest required true argument documentation amp validation emit emits suggest required true args name term type string required false default name callback type function required true", "d": "7/2017"}, {"body": "could also offer shortcut describe", "d": "7/2017"}, {"body": "thoughts ping posva chrisvfritz defcc linusborg", "d": "7/2017"}, {"body": "thinking thing", "d": "7/2017"}, {"body": "actually pass function prop event handler easier check whether exists case declare prop instead use", "d": "7/2017"}, {"body": "tend agree fnlctrl already passing callbacks props adding enw api increase api surface code size fo library little gain recently discussed api added unless feature sufficient use large group people ca nt implented currently available options reasonable effort think feature request falls category useful useful enough similar thing achieved", "d": "7/2017"}, {"body": "guess problem really want target request standardised documented way describe events component emits moment one rely component authors either describe events code comments external documentation often find scanning source code components figure events consume another benefit documentation generators could pull information terms functionality priority mentioned fnlctrl alternative ways pass callbacks wanted point useful case emitter definition selfsatisfaction", "d": "7/2017"}, {"body": "whole point events decoupled nt care whether listener many listeners documentation seems whole different issue nt think responsibility api yes nice somewhat selfdocumenting code adding api code self documenting seems wrong approach really care events usage components probably document regardless users nt really care would nt use api even exists", "d": "7/2017"}, {"body": "agree long nt add much value documentation purposes worth thanks help thoughts topic", "d": "7/2017"}, {"body": "sorry fault", "d": "7/2017"}, {"body": "sorry still valid repro need extract problematic code think make runnable jsfiddle otherwise see issue seen", "d": "7/2017"}, {"body": "available vue vue option", "d": "7/2017"}, {"body": "nt affect results", "d": "7/2017"}, {"body": "ah think finally understand problem missing documented porovide actually runnable reproduction problem happy new working version", "d": "7/2017"}, {"body": "thank add key every element use directive velse work", "d": "7/2017"}, {"body": "\u7248\u672c\u592a\u65e7 \u91cd\u73b0\u6253\u4e0d\u5f00 debug", "d": "7/2017"}, {"body": "\u8bf7\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u7684repro", "d": "7/2017"}, {"body": "\u4ee5\u540e repro link", "d": "7/2017"}, {"body": "yes maybe could check context via bot check try", "d": "7/2017"}, {"body": "ok sorry first time use", "d": "7/2017"}, {"body": "tried add debug info imgsrc amazing el nt match use vif change velse result rightdoes involve component reuse use vif company velse", "d": "7/2017"}, {"body": "element reused rerender process exactly one dom element directive bind hook call one time look sure expected add keys work around", "d": "7/2017"}, {"body": "valid reproduction ca nt run please respect maintainers time provide something actually debugged", "d": "7/2017"}, {"body": "bleekbless see component fiddle", "d": "7/2017"}, {"body": "know loading times", "d": "7/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue especially adding repro thanks", "d": "7/2017"}, {"body": "likely problem device powerful enough already lags computer imagine opening phone vue even binding anything removing seems yield result unfortunately nothing manage provide minimal repro much html even take look happily take look otherwise probably related amount html using", "d": "7/2017"}, {"body": "remove vue initialization page loaded fine works iphone ios iphone ios nt nt think related device works even ios maybe somehow related vue creates virtual dom", "d": "7/2017"}, {"body": "may straw broke camel back", "d": "7/2017"}, {"body": "page contains extremely large amount markup mount vue entire page mount part need interactivity", "d": "7/2017"}, {"body": "tried mount need interactivity stuck dividable parts example list products quite complex markup product around lines html need interactivity", "d": "7/2017"}, {"body": "would huge breaking change ca nt happen probably wont happen dont think problem actually exists say found always need declare variables keeping vue instance calling subobjects specificaly subobjects referring experience arrow functions solve problems nicely", "d": "7/2017"}, {"body": "nt agree always need declare variables keeping vue instance always need declare variables maybe need lambda linusborg said would huge breaking change", "d": "7/2017"}, {"body": "special es directly associated scope lives would correct say directly associated execution context libook would easier us help provided examples need assign variable within vue instance variable needed within example provided javascript methods thisisamethod const vm vmaproptie value javascript methods thisisamethod thisaproptie value places trip async callbacks array methods like map etc usually get around using arrow functions binding function explicitly set value might help", "d": "7/2017"}, {"body": "use manipulate component instances using instances classes using new keyword good old functions passing argument would make sense functional oriented approach reuse functions well maybe missing libook", "d": "7/2017"}, {"body": "would great someone could provide example passing argument would advantageous current approach using thanks", "d": "7/2017"}, {"body": "ca nt done due breaking change easily implement", "d": "7/2017"}, {"body": "thank help yes example good enough use arrow function time arrow function replacement function always use functions names make huge complicated programs simple clear sometimes use objects maybe programs heavy yes heavy dashboard complicated features well idea completely break whole design vue may bad idea", "d": "7/2017"}, {"body": "also facing issue workaround", "d": "7/2017"}, {"body": "expected behavior controls outer transition nothing trigger hooks inner transition inner transition constant child never toggled trigger regardless using", "d": "7/2017"}, {"body": "patrickhousley hello experience angular please try describe exactly module example usecase", "d": "7/2017"}, {"body": "imo framework like vuereact idea trying think almost everything way prefer composite components rather", "d": "7/2017"}, {"body": "jkzing looking would agree think really looking could handled honestly really want way cleanly split app pieces router already component level routes still loaded statically making lazy loading large chunks app little problematic", "d": "7/2017"}, {"body": "patrickhousley take look vue async components vuerouter lazy loading vuex async modules merged yet ssr pwa results handy mechanism code splitting high performance know lot gets really easy use get practice", "d": "7/2017"}, {"body": "guess related vue rendering mechanism instead clearly see even put consolelog change value vue instance already changed", "d": "7/2017"}, {"body": "made temporary fix wrapping content getposition delay solves problem somehow see remove animationmove class problem disapears exemplo test variable happens", "d": "7/2017"}, {"body": "suppose nt like little digging accessing cause rerender rendering function remove class fired class added try find way get fixed", "d": "7/2017"}, {"body": "btw try get work around wrap better idea", "d": "7/2017"}, {"body": "comments necessary actually make things consistent blake pointed also use refs instead btw", "d": "7/2017"}, {"body": "thanks opening issue adding option vue constructor mount automatically want control mounts remove property call result way run checks mounting", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "usage questions please use", "d": "7/2017"}, {"body": "valid repro part project like question bug report please either reduce scope minimal repro ask via channels instead", "d": "7/2017"}, {"body": "trick data empty component mounted get asynchronously need additional guard", "d": "7/2017"}, {"body": "shortand actual directive part vuetemplate processed compile time runtime lazy load recommend making custom component like need help please ask forum stack overflow gitter prefer gitter always someone online willing help", "d": "7/2017"}, {"body": "nickmessing suggested use component instead custom directive", "d": "7/2017"}, {"body": "use deep true watcher", "d": "7/2017"}, {"body": "jounqin thanks much", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "guess really want", "d": "7/2017"}, {"body": "knowledge behaviour ca nt access computed properties props", "d": "7/2017"}, {"body": "mixins resolved instance created creation props resolved computed properties much often computed properties rely props rather way around behavior going change changing would breaking affected whether propscomputed defined mixins use case nt understand need prop default value use value directly", "d": "7/2017"}, {"body": "thanks quick response explanation makes sense reason noticed issue use mixin glad see behavior specific mixins jsfiddle example minimal example issue real use cases calendar control locale date properties default values involve logic would convenient locate mixin create components rely similar logic workaround simple enough component use computed property defaults mixin computation rather expecting via prop default key documentation nt cover limitation prop default see send pr enhance section", "d": "7/2017"}, {"body": "create pr chinese version description wish suggestion", "d": "7/2017"}, {"body": "feel like rather use original way understandable string one", "d": "7/2017"}, {"body": "dsonet opinion function original way u meant better data need transform string like getter alias javascript component computed breadcrumb rootviewbreadcrumblist class demo extends vue get availablebreadcrumb return rootviewbreadcrumblistfilter breadcrumb gt breadcrumbstatus clear also u better", "d": "7/2017"}, {"body": "rather prefer computed properties would get context argument could nt add magic makes shorter", "d": "7/2017"}, {"body": "like way proposed nick think added little change string syntax much magic though however trying create aliases could achieved plugin transforms computed properties take account new alias property still go nick syntax instead string one though", "d": "7/2017"}, {"body": "like nickmessing suggestion also concerning makes harder infer types statically deriving property using string path", "d": "7/2017"}, {"body": "like nickmessing idea separate issuepr also need accompanying typing updates ideally merged pending ts typing pr going implement string shorthands obvious disadvantages strings syntax highlighting auto completion type inference error messages", "d": "7/2017"}, {"body": "actually able achieve nickmessing proposed see", "d": "7/2017"}, {"body": "javoski work nickmessing nice job ur good way minimal magic string computed like watches alias mean feature way sad wish u think app bigger data really need short alias like watches option maybe use setter use vuex root data enough cases user nt need know vuex concept", "d": "7/2017"}, {"body": "\u5148\u8bf4\u4e0b\u6211\u7528 vue \u5927\u90e8\u5206\u5f00\u53d1 vue \u7684\u65f6\u5019\u6211\u662f\u4e0d\u4f7f\u7528 vuex \u56e0\u4e3a\u6211\u89c9\u5f97\u5176\u5b9e flux \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u628a\u9700\u8981\u5168\u5c40\u5904\u7406\u7684\u6570\u636e\u653e\u5230 \u7684 javascript import data store new vue data \u6240\u4ee5\u8fd9\u91cc data \u6ca1\u6709\u7528 function \u7684\u8bdd\u5185\u5bb9\u5927\u6982\u8fd9\u6837 javascript import storea storea import storeb storeb export default storea storeb storeajs export default list active storebjs export default list \u5728\u5b50\u7ec4\u4ef6\u64cd\u4f5c\u7684\u65f6\u5019\u5c31\u662f\u6700\u5f00\u59cb\u63d0\u5230\u7684\u65b9\u5f0f \u867d\u7136\u7edf\u4e00\u8bbe\u7f6e\u4e00\u4e2a getter setter \u6211\u89c9\u7684 \u5bf9\u4e8e computed \u7684\u610f\u4e49\u5c31\u548c \u91cc\u7684\u89e3\u6784\u4e00\u6837 syntax highlighting auto completion type inference error messages \u4f46\u6b63\u5982 alias \u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a \u5e76\u4e0d\u662f \u6b63\u5982 \u4f55\u4e0d\u8ba9\u6709\u4f7f\u7528\u573a\u666f\u7684\u4eba\u66f4\u723d\u5462 \u6700\u540e\u5e0c\u671b vue \u8d8a\u6765\u8d8a\u597d\u7528", "d": "7/2017"}, {"body": "working according tests anyway really want feature write plugin may tested function parsepath", "d": "7/2017"}, {"body": "javoski work", "d": "7/2017"}, {"body": "thanks reporting nt happening indeed nt dig workaround moment specifying transitiongroup element", "d": "7/2017"}, {"body": "vuejs", "d": "7/2017"}, {"body": "\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417", "d": "7/2017"}, {"body": "reject issues nonenglish language", "d": "7/2017"}, {"body": "yes make simple solution add command method like", "d": "7/2017"}, {"body": "xavescor sorry poor english still think chinese necessary", "d": "7/2017"}, {"body": "problem english poor", "d": "7/2017"}, {"body": "reasoning adding feature well explained trivial write plugin purpose thought add comment regarding general philosophy new features vue stage already decently sized api surface say bigger wanted opinion size lib grown since release really try keep api surface size small general take somewhat conservative stance new features proposed api value subjective cosmetic stylistic pass proposed api functionality cleanly implemented userland without hacks pass unless strongly needed significant majority user base ie seen raiseddiscussed multiple times proposed api added value justify added code size complexity maintenance cost pass example requires significant chunk code internal changes deal niche use case need think twice rule nt affect fixes correctness though cc vuejscollaborators", "d": "7/2017"}, {"body": "principle totally agree quite subjective considered cosmetic stylistic case consider quite fundamental especially considering vue seems intend promote certain coding styles linusborg wrote another issue constant declarations part every modern programming language using instead mutable data often possible considered fundamental modern programming creating nonconstant data via data computed properties nonobvious initialisation code sensible solution problem using plugins often possible also possible lots things part vue api talking features people need features single right implementation exits like vuex routing etc yes plugin better option everybody need constant fields somewhere code also quite straight forward needs lines implement wo nt require significant chunk code using plugin always requires additional work also need know plugin exists", "d": "7/2017"}, {"body": "many things solve without need vue internals created hook creating plugin feature needs integrated core however could documented please feel free create issue pr", "d": "7/2017"}, {"body": "take parameter filter function also think better support context take advantage style example code like clearer simpler", "d": "7/2017"}, {"body": "cited populated component rendered reactive think use dynamical referring components try use", "d": "7/2017"}, {"body": "might something case change populated initially unexpected", "d": "7/2017"}, {"body": "actually call function generate string attribute full reactive support although somehow difficult even possible change child component add new data parent event child tell parent change although may pollute code", "d": "7/2017"}, {"body": "\u6709\u89e3\u51b3\u7684\u65b9\u6848\u6ca1", "d": "7/2017"}, {"body": "thanks franckfreiburger try reproduce issue mac windows ok please provide information mean reload page", "d": "7/2017"}, {"body": "windows node tested latest google chrome amp firefox cloning demo modified add tag run first time page loaded issue happens issue happens page reload using google dev tools pause script execution issue markup dev tools elements tab foobar continue script execution markup become foobar data network tab seems correct initial http get request contains foobar note issue happens instead", "d": "7/2017"}, {"body": "thanks got trying look", "d": "7/2017"}, {"body": "franckfreiburger seems bug according specification single newline may placed immediately start tag pre textarea elements element contents intended start newline two consecutive newlines thus need included author line break immediately following pre tag ignored vue html compiler seems try fix", "d": "7/2017"}, {"body": "sure preferred think could help situations although using still make arrays disposing components destroy array destroy components inside may result empty arrays take look example pay attention console output", "d": "7/2017"}, {"body": "thanks lot information demo problem bit deeper string refs fine normally use asis cases callback refs far powerful especially cases use templates let say develop kind extension library vue lack callback refs may really show stopper facebookreact switched string refs callback ref moreover vue possible use refs templates functional components would require callback refs react possible cases nonfunctional component may possible simulate behavior callback refs using unique generated ref names additional logic certain lifecycle methods would really ugly cases slow powerful feature allow ref callback would open vue really interessting new possibilites", "d": "7/2017"}, {"body": "general say lowlevel component libs render functions preferred templates getting awkward work agree following would valuable disabling default behavior auto applying bindings found props attributes root element related problem affect bindings well exposing easier way inherit external bindings component onto inner element nt necessarily root ideally consistency templates render functions", "d": "7/2017"}, {"body": "ia kie like vue simple tools", "d": "7/2017"}, {"body": "want say pr excellent", "d": "7/2017"}, {"body": "releases note combining allows us simplify component like seems nice quite true since kind components designed work vmodel far know vmodel wrapping component working box example forward vmodel wrapping component onto input example simplest way found maybe functional component working along template would straightforward", "d": "7/2017"}, {"body": "kind components designed work vmodel far know vmodel wrapping component working box would think vmodel syntax sugar prop event listener attr props thus easily passed suppose thing would require knowledge child options would child changed defaults true would possible read depending circumstances", "d": "7/2017"}, {"body": "sure syntaxic sugar mean could confusing read combining allows us simplify component like actually based example ca nt pass listeners directly achieve control eg use von input emitinput eventtargetvalue anyways pr valuable good job", "d": "7/2017"}, {"body": "alexandrebonaventure works slightly differently components elements dom events provide event object callbacks component events provide value directly result work bound value dom event object think correct would desirable work sure best place solve would ideas maybe nonenumerable property could added eg help detect uses cases object passed listener could wrapped one downside throwing away data someone wants access example luck however modifiers supported object syntax could fix making disable automatic wrapping behavior linusborg thoughts feasibility edge cases missing", "d": "7/2017"}, {"body": "oh see referring vmodel rral form elements thinking components cantshouldnt use props anyway without pr advanced apps rather uncommon use though achievable", "d": "7/2017"}, {"body": "linusborg want make sure page given component template would nt expect code work", "d": "7/2017"}, {"body": "would expect work way understood alexandre referring vmodel element component eventually works mutating local state", "d": "7/2017"}, {"body": "trying say chrisvfritz explained latter post english native language sorry", "d": "7/2017"}, {"body": "linusborg problem latest release still considered antipattern triggers warning mutating state extremely useful working value property something string take example combo component trying use enums imported library values select options vue key export default props items type object required true value example one lists use items parent use combo component trying make work days still getting really frustrated problem eventtargetvalue always string evaluated like", "d": "7/2017"}, {"body": "linusborg alexandrebonaventure robertbcolton opened issue focus future discussion problem", "d": "7/2017"}, {"body": "think quite difficult express pure templates would suggest using render functions sophisticated use cases like", "d": "7/2017"}, {"body": "ericwangqing thread might interest", "d": "7/2017"}, {"body": "rayrutjes thanks lot", "d": "7/2017"}, {"body": "close issue wo nt changed made internal note long list", "d": "7/2017"}, {"body": "annoying hoc must declare props wrapped components two annoying things props normalized sometime array sometimes string keep reimplementing function every project maybe core somewhere component either object literal work figure kind component dealing branch accordingly get props react get props sent hoc directed wrapped component", "d": "7/2017"}, {"body": "blocka understanding correctly situation facing discussing fyi", "d": "7/2017"}, {"body": "blocka already", "d": "7/2017"}, {"body": "jkzing skimmed discussion nt see directly relevant situation referring apologize advance contrived example see order work props need defined component returned hoc example pretty simple wrappedcomponentprops dealing mixing hoc props wrappedcomponent props things get pretty hairy reasons explained earlier", "d": "7/2017"}, {"body": "peeking around seems undeclared props hangout still little awkward seems work considered stable api", "d": "7/2017"}, {"body": "oh sorry wrong relevant", "d": "7/2017"}, {"body": "kingwl could make pr revert behaviour", "d": "7/2017"}, {"body": "linusborg going try tomorrow", "d": "7/2017"}, {"body": "problem working components", "d": "7/2017"}, {"body": "support objects defining iteration protocols instead relaying inheritance could check object defines iterator use iterate would probably break backwards compatibility could done already", "d": "7/2017"}, {"body": "mitar said comments ago vfor using drop support old browsers actual implementation works differently nt think good idea support new iteration support", "d": "7/2017"}, {"body": "reference implemented support iterators meteor vue fork see breaking anything would already implemented call", "d": "7/2017"}, {"body": "mitar evan call looks like decided part point view support code work newer browsers", "d": "7/2017"}, {"body": "hm good question nt know existing vue code uses nt want use", "d": "7/2017"}, {"body": "iteration protocol ensure iterator rewound like generators means break render function called also arraylikes generally nt simply read values memory extra work nt repeated render said nt think would need able iterate arraylike custom object directly instead need array representation underlying values e g computed property always native array possibly builtin iterable supported", "d": "7/2017"}, {"body": "iteration protocol ensure iterator rewound like generators obtain new iterator object want iterate iterate call many times want happens manually obtain iterator use js syntax", "d": "7/2017"}, {"body": "tanmichael another option might wrap vue module store object temporary variable assign require vue restore could work assigned top level scope vue imported first time aware internal framework variable moved behaviour change anytime precise something like create file follows js const windowcopy window window undefined const vue require vue window windowcopy moduleexports vue instead importingrequiring directly use", "d": "7/2017"}, {"body": "closing due lack actionable items", "d": "7/2017"}, {"body": "trying resolve maybe long", "d": "7/2017"}, {"body": "think issue also occurs tab still active hidden getting following adding several elements transition group docs state enterto class removed transition finishes", "d": "7/2017"}, {"body": "yunyu could please check issue related situation", "d": "7/2017"}, {"body": "jkzing actually yeah seems affect well transitions put enteractive class nt work ones enterto move example issue", "d": "7/2017"}, {"body": "yunyu thanks already quite clear reproduce", "d": "7/2017"}, {"body": "nt appear fixed yet still pending release async component transition bug demo", "d": "7/2017"}, {"body": "clingor sure jsfiddle works nicely", "d": "7/2017"}, {"body": "fiddle work correctly code example github repo still exhibits behavior could helper library maybe something code example simple created demonstrate issue franckfreiburger would vuejs changes require update", "d": "7/2017"}, {"body": "put issue jsfiddle without loader take look", "d": "7/2017"}, {"body": "schrieb chris lingor notifications githubcom nt appear fixed yet still pending release async component transition bug demo receiving subscribed thread reply email directly view github mute thread", "d": "7/2017"}, {"body": "culprit steps reproduce see click b button", "d": "7/2017"}, {"body": "posva able reproduce", "d": "7/2017"}, {"body": "franckfreiburger open new issue thanks btw", "d": "7/2017"}, {"body": "would technically require much complex analyzing template structure sure worth achieve equivalent html", "d": "7/2017"}, {"body": "implementation process complex temporarily use warning instead compilation error allow first child node root element btw used component root element vue nonfirst child node discarded think warning treated way ok think may use instead root elements wrapper", "d": "7/2017"}, {"body": "still quite sure plugins would nt enough use case maybe try explain chinese", "d": "7/2017"}, {"body": "thanks", "d": "7/2017"}, {"body": "case somebody still interested could recursion thing figured solve two lines dom manipulation jquery hooked custom rows lifecycle events could look like table template row template best solution code clean works bet could quite easily without jquery jquery project anyway nobrainer took several hours tinkering decided like moves dom element child row correct location table initially mounted destroy ensures sub elements removed needed correct parent child hierarchy dom gets destroyed", "d": "7/2017"}, {"body": "lucastheisen post help also", "d": "7/2017"}, {"body": "posva would component definition like actually throws exception try namespace ps actually warning nt see raised", "d": "7/2017"}, {"body": "sebestenyb done global component definition suppose register component locally", "d": "7/2017"}, {"body": "partially implemented however syntax introduced primarily making easier proxy events components modifiers syntax introduce much runtime complexity supported", "d": "7/2017"}, {"body": "yeah resolve problem cherrygeqi", "d": "7/2017"}, {"body": "ppxialetsgo workaround provided centaur works obviously individual case suggest vuejs team pay attention posva", "d": "7/2017"}, {"body": "franzskuffka encountered similar problem using vue wrap google maps overlayview elements initially nt set attribute wrapping node used overlayview dom nodes rendered google map randomly wrongly got rerendered underlying observed array changed new items pushed existing items array got new items pushed realized need set help vue map dom nodes data array first tried use type uuid item value encountered error issue mentioned situation similar mounted dom node wrapper component got tampered required google maps api specifically root node style property changed changed appropriate ones display map correctly based item changed use pojo value issues solved dom nodes updated correctly underlying array change longer seeing exception mentioned issue guess pojo instance object passed around value initially used string reference helped work around issue", "d": "7/2017"}, {"body": "thank bump actually issue super easy resolve currently tackling similar issue information might valuable", "d": "7/2017"}, {"body": "throws vue warn avoid using nonprimitive value key use stringnumber value instead warning", "d": "7/2017"}, {"body": "hhmmmm", "d": "7/2017"}, {"body": "tested latest version works expected closing", "d": "7/2017"}, {"body": "since valid alterantive strategy seems proposed close new feature nt seem offer tangible benefit", "d": "7/2017"}, {"body": "removed recursion next function async test falling benchrmarks nt use asynccomponents currently scope stacktraces looks nicer see performance improvement sadly difference using nodejs results btw generate dynamic data every loop sure nashorn nt optimize whole scripts loop see results better nodejs sure benchmarks correct simply nashorn optimizes code well loading benchmarks rendertostring complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time", "d": "7/2017"}, {"body": "ca nt find optimized code repo", "d": "7/2017"}, {"body": "still feel extra composition model greatly muddles structure program makes mental model complex although proposed solution may make certain use cases bit manageable really convinced tradeoff", "d": "7/2017"}, {"body": "nudge", "d": "7/2017"}, {"body": "use watch dependent whether component rerendered", "d": "7/2017"}, {"body": "problem also without chinese input keeps triggering blur saw trigger etargetselectionstart sometimes thinking creating data keeps moment click input see type something delete complete fire something correct keep trying", "d": "7/2017"}, {"body": "arrayhuang try binding others events like", "d": "7/2017"}, {"body": "hybrid strategy land raw render perf increase depending much template stringified due hybridness performant pure string templates pretty close scenarios renderfunctionbased components involved also note talk raw render perf means benchmarking render call terms requests per second real app many aspects involved raw render perf small portion overall time xiaogaofudao nothing nuxt nuxt wrapper top vue improvements benefit nuxt well", "d": "7/2017"}, {"body": "vue native webview implementation greater", "d": "7/2017"}, {"body": "feature request open quite time nt gotten much traction far also nt come across wish functionality places forum chat sure large enough use case personal experience directives tend rather small ever since functionality scope reduced vue therefore tend close request reopen enough people express need", "d": "7/2017"}, {"body": "use way", "d": "7/2017"}, {"body": "ends answer yes", "d": "7/2017"}, {"body": "entirely sure actionable imo pure statebased transitions really manipulating state variables javascript responsibility vue core easing curves spring animations etc doable userland thus done userland", "d": "7/2017"}, {"body": "completely forgot posting project back", "d": "7/2017"}, {"body": "trouble using makes sense index dependent number items array changed splicing middle key property bound id item nt going change eg todo example docs uses key probably fine twoway binding changed prevent confusion raise new issue", "d": "7/2017"}, {"body": "todo example docs uses index key probably fine twoway binding changed prevent confusion raise new issue examples already use tha change would make sense would willing submit pr source", "d": "7/2017"}, {"body": "yes bound identifier data structure fine markup look like works one way two way", "d": "7/2017"}, {"body": "kgrosvenor issue using index key using id property works fine make sure tested example docs modified illustrate problem first replaced text output input bound directly property still worked removing items list problem comes binding data property nt get properly updated list spliced", "d": "7/2017"}, {"body": "linusborg happy make changes docs require adding complexity example", "d": "7/2017"}, {"body": "way use checkbox call cause global calls used php blade views", "d": "7/2017"}, {"body": "vinayakkulkarni ran decided add vue class checkboxes handled semantic global call becomes remember add labels label click events pass correctly", "d": "7/2017"}, {"body": "guess unexists value int typed property null instead empty string", "d": "7/2017"}, {"body": "closing nt much actionable items community come decent solutions getting two work together likely guide official unit test util published", "d": "7/2017"}, {"body": "used good stuff mentioned together search ui components library took us time put everything together working well issue far need compile cjs build prior testing vue components use rollup vue preprocessor plugin mentioned thread amp jest snapshots cristian carlesso inspired us lot current setup", "d": "7/2017"}, {"body": "sorry letting sit reply probably late ultimately think type applike navigation really begs dedicated cardstack based touchaware navigation solution still largely designed around nested boxes desktop navigation model builtin transition system really meant fireandforget state toggle animations adding would nt answer root problem", "d": "7/2017"}, {"body": "check element list solves issue still consider issue though think hack necessary", "d": "7/2017"}, {"body": "good way default value adding disabled option always open improve docs vuejsvuejsorg pr closing since documentation issue change breaking change revisit next major release though", "d": "7/2017"}, {"body": "linusborg vue replaces elements added events replace elements give explanation", "d": "7/2017"}, {"body": "gcystar vue controls dom way never rely domelements mutate dom directly times want achieve done vueway need information please ask forum stack overflow gitter prefer gitter always someone online willing help", "d": "7/2017"}, {"body": "hi guys join conversation cause burning brains trying figure making news site fetches data wordpress api using wordpress client upload news naturally made dynamic routes name news post like wwwmywebsitecomnewsanewstitle problem one requirements users able copy paste link facebook get right preview news post image title short description first tried hands vuemeta plugin work see meta tags updating inspect page paste link facebook nt get preview news post lot googling guess facebook crawler wait site run javascript code update metadata reading og tags right information showing right solution problem use ssr render news posts another way zero experience ssr", "d": "7/2017"}, {"body": "leocirculo either use ssr prerendering since using wordpress prerendering may best way go", "d": "7/2017"}, {"body": "userland solution documented alternatively community solutions nuxt also handles", "d": "7/2017"}, {"body": "trying wake dead image want wrapper custom component shows loading spinner slot slot container spinner removed event emitted component occupies slot slot child parent template looks something like mounted function emit loadstatuschange template template txt usage something like order slot child fulfill parent interface emit event turn spinner inactive one argue using parentemit per suggestion complicates issue need take consideration life cycle components example slot child emits event mount slot container register earlier phases mount child mounted parent container case event fired missed parent passed hurdle find odd situation want remove spinner slot container usually mounted thats whole point need code trickery parent order see clear spinner event received parent component mounted long story short order get full slot power believe sort mechanism introduced js expect means short experience vue thoughts welcomed", "d": "7/2017"}, {"body": "ilyasemenov way enough enables interpolation undefined syntax html undefined message undefined const nodelimiter replace function const app new vue el app delimiters nodelimiter nodelimiter data message hello vue result hello vue created pr", "d": "7/2017"}, {"body": "alfajpn good point nt pay attention happens result call since simply concatenated construct regexp returning nonmatching regexp work updated example correspondingly", "d": "7/2017"}, {"body": "way set something like something like", "d": "7/2017"}, {"body": "news feature", "d": "7/2017"}, {"body": "seems work started february", "d": "7/2017"}, {"body": "know thats workaround could use css transitiondelay mode use class mode use class eg scss slideritem display inlineblock amp sliderenteractive amp sliderleaveactive transition opacity amp sliderenteractive transitiondelay amp sliderenter amp sliderleaveto opacity", "d": "7/2017"}, {"body": "unlikely happen due sheer complexity likely introduce much extra code relatively noncritical use case behavior transition modes multiple items vague hard define even implement probably ship separate plugin instead part core", "d": "7/2017"}, {"body": "seems little traction virtual list use case imo designed also cached components already extent controlled via props", "d": "7/2017"}, {"body": "gdomiciano suggested probably would also work much faster", "d": "7/2017"}, {"body": "version", "d": "7/2017"}, {"body": "got around documentqueryselectorall textfield foreach el gt new vue el data function return value said things markup like error messages also want bind model similar point markup becomes little strange aim maybe like original poster try find framework combines template syntax way binding vue progressive enhancement ssr ideals allow sites built fall back js actually makes little sad vue js claims allow progressive enhancement states wont pickup initial model values markup thus contradicting statement", "d": "7/2017"}, {"body": "working solution component bootstrap based also using veevalidate enjoy vue component definition vuecomponent boostinput props gridlayout txtidentifier txttype txtlabel txtval txtvalidation txtplaceholder helpblocktext maxlength parentmodel model prop parentmodel event update parentmodel data function return templaterender null modelvalue typeof thistxtval undefined thistxtval render h return h div thistemplaterender thistemplaterender mounted function var compiledtemplate vuecompile errorsfirst txtidentifier thistemplaterender compiledtemplaterender methods change function newvalue emit update parentmodel newvalue using component html another alternative way framework push could something like", "d": "7/2017"}, {"body": "simplest workaround using", "d": "7/2017"}, {"body": "custom modifiers agree tobei input typedate work automagically", "d": "7/2017"}, {"body": "also issue blocking issue inline script escaped update plan insert script page rendered html", "d": "7/2017"}, {"body": "metekabak hello use", "d": "7/2017"}, {"body": "tupengtongxue since version work version", "d": "7/2017"}, {"body": "metekabak use lodash util", "d": "7/2017"}, {"body": "using lodash already suggested new syntax thanks anyway", "d": "7/2017"}, {"body": "hello toilal hit problem lodash function using vuejs another workaround could use replacing array method lodash function mutate array", "d": "7/2017"}, {"body": "would love helpers something like already", "d": "7/2017"}, {"body": "prograjkamal curious decided execute reasoning behind", "d": "7/2017"}, {"body": "sagv vfor adds extra params ie item index scope vdirectives use hence executed first note nt put vfor vifvshow tag use nest vfor vifvshow shown jsfiddle", "d": "7/2017"}, {"body": "set different name id vue file", "d": "7/2017"}, {"body": "aymkdn works", "d": "7/2017"}, {"body": "examples trying compose mixin approach pourly designed yet place mixin need reach vmdata elements extends common behavior posible instead define private object mixin share behavior data component mixin", "d": "7/2017"}, {"body": "case helps might new vue could nt get static example working static value coming vuex store property seems always lag commit behind example updated classes whenever store changes", "d": "7/2017"}, {"body": "bensmeets probably nt work use inside template never", "d": "7/2017"}, {"body": "tnx sqal tried behaviour nt update class span", "d": "7/2017"}, {"body": "sqal doh found issue safari updating devtools chrome everything works fine seems either safari combination vue dom safari makes showing actual dom inspector", "d": "7/2017"}, {"body": "works controller html", "d": "7/2017"}, {"body": "solution", "d": "7/2017"}, {"body": "small update come ifwhen vue decides drop legacy browsers move evergreen ones instead reactivity alexsandroxpt use computed function returns", "d": "7/2017"}, {"body": "nickmessing try map nt work computed array length value always", "d": "7/2017"}, {"body": "probably solution want lack reactivity changes get propagated vue mentioned earlier sets maps observable vue order use either computed properties methods watchers template expressions etc need create serializable replica structure expose vue naive example uses simple counter providing vue information set updated data mysetchangetracker myset new set computed mysetaslist using tell vue property depends gets reevaluated whenever changes return thismysetchangetracker amp amp arrayfrom thismyset methods add item thismysetadd item trigger vue updates thismysetchangetracker illustrates kinda hacky working method making nonobservable data reactive still real world cases ended serialized versions setsmaps eg probably want store modified versions setsmaps localstorage thus serialize anyway artificial countershacks involved personally think fair solution problem definitely deserves official documentation otherwise impossible justify nonhacky way dealing vue internals", "d": "7/2017"}, {"body": "alexsandroxpt sorry wrong computed hacky inca said another hacky solution would using method example fiddle", "d": "7/2017"}, {"body": "thank nickmessing inca work fine", "d": "7/2017"}, {"body": "noirbizarre resolve end", "d": "7/2017"}, {"body": "mentioned acklenx mixing original properties computed property good solution lead unnecessary computations original property changed showcase fiddle property depends properties however computed even another property originalc changed simple usecase extending computed property looks totally fine organic getting fullname user component data things used accomplished filters ago since really preferred way well regular methods extending user would good spot given large components represent pages multiple users storing fullnames flat structure cumbersome another reallife usecase actually brought namespace properties passed outside modules vuex state example stated issue nested properties methods would provide flexibility distinguish common outside properties direct component ones", "d": "7/2017"}, {"body": "would line rubyrails conventions well global config would plus", "d": "7/2017"}, {"body": "nt think interested line backend technology personally see benefit adding support even casing existing camelcase amp kebabcase enough use cases adding another one like valid reason", "d": "7/2017"}, {"body": "well coffeescript really like rubyrailscoffeescript coding standard probably would nt hard vue look props available determine prop defined assigning finds", "d": "7/2017"}, {"body": "sorry sounded rude nt mean following html javascipt coding standards vue nt follow coding standards since affiliated", "d": "7/2017"}, {"body": "want use submit event form", "d": "7/2017"}, {"body": "hi please explain limitation got vue html dom allows set values hidden inputs meant provide twoway binding react tu userinput hidden fields ca nt user input consequently nt make much sense vmodel hidden input use", "d": "7/2017"}, {"body": "vinayakkulkarni thanks code snippet clue get semantic calendar plugin work vue js", "d": "7/2017"}, {"body": "using modified version bootstrap datepicker created small component usage", "d": "7/2017"}, {"body": "ah guess tried way semantic calendar nt work", "d": "7/2017"}, {"body": "using semantic calendar datepicker listening picker change event updating underlying property works dates chosen picker made directly user input element field properties come prop rather binding individually mutating field prop value key would nt considered best practice props events purists could something similar using custom input component calling code use vmodel native form element html moduleexports name fieldinputdate props field mounted function const f refsvaluefield const fdata thisfield refswrapper calendar type date today true onchange function date text mode fdatavalue text return true", "d": "7/2017"}, {"body": "hope solve someone problem use vue ref username onclick function access like", "d": "7/2017"}, {"body": "alexsasharegan would like know answer question", "d": "7/2017"}, {"body": "works vueloader files", "d": "7/2017"}, {"body": "see thank suppose part confusion results use term string template documentation seems inconsistent following implies templates defined string literals however following defines string template singlefile component seems though number individuals confused perhaps docs could changed kind clear confusion", "d": "7/2017"}, {"body": "also work templatecompiler included full build vue compiles string templates render functions code used vueloader basically issue op browser parsing html vue chance read using inline templates", "d": "7/2017"}, {"body": "string templates probably defined kind like template defined dom could confuse people templates dom string templates easy get right", "d": "7/2017"}, {"body": "deprecated package would love see vue core team supporting custom elements ecosystem", "d": "7/2017"}, {"body": "niluanxy", "d": "7/2017"}, {"body": "kristofferdarj drop calls behaves much reasonably otherwise operations strict inverses fixed point see comment stabilizing expect leads f changes c changes f problem seeing see vue docs ideas round shown values elements integers", "d": "7/2017"}, {"body": "believe people come around post still years later wrote article medium describing optimally setup typescript vue using webpack starter", "d": "7/2017"}, {"body": "typings vueutil recommended use vueutil", "d": "7/2017"}, {"body": "managed programmatically mount vue component element well pass props anyone tell appropriate strategy seems work components nt show vue dev tools big deal datatables provides callback function createdcell allows manipulate td node figured would hand dom control datatables create table go back vue manually mounting vue components callback code letting datatables take control table dom applicabilityicon vue file go back vue code mounting component programmatically", "d": "7/2017"}, {"body": "please see", "d": "7/2017"}, {"body": "working", "d": "7/2017"}, {"body": "gijovarghese given answer stack overflow general syntax incorrect need assign instance variable start using assigning anything try use methods look working example", "d": "7/2017"}, {"body": "nickmessing know actually helped july", "d": "7/2017"}, {"body": "ergonomicus initial issue vue vue please tell browsers behave wrong using simple opposite ternary example", "d": "7/2017"}, {"body": "nickmessing talking whether use ternary thing provided working example vue pointed right direction got desperately googleing around solution might help others future", "d": "7/2017"}, {"body": "ergonomicus good point sorry rude", "d": "7/2017"}, {"body": "took example expanded use case wrong would expect preselected", "d": "7/2017"}, {"body": "guilhermeaiolfi use object designed strings", "d": "7/2017"}, {"body": "sure used working pre selecting using vif", "d": "7/2017"}, {"body": "guilhermeaiolfi fiddle without object gets converted string used object use example possible context", "d": "7/2017"}, {"body": "please nt use github issues questions questions support please use discord chat room gitter chat room official forum issue list repo exclusively bug reports feature requests", "d": "7/2017"}, {"body": "guilhermeaiolfi using nt need hardcode attribute however need aware must strictly equal value order get selected updated fiddle", "d": "7/2017"}, {"body": "example version", "d": "7/2017"}, {"body": "try code still work", "d": "7/2017"}, {"body": "endoplasmic solution also work", "d": "7/2017"}, {"body": "njleonzhang ya edited comment say others stumble bit clear", "d": "7/2017"}, {"body": "endoplasmic great dependence implementation", "d": "7/2017"}, {"body": "njleonzhang example work side", "d": "7/2017"}, {"body": "xiaolp endoplasmic provided sample", "d": "7/2017"}]