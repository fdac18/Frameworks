[{"title": "reacttestutilsrenderintodocument resources clean documentation", "body": "want request feature report bug featuredocumentation current behavior almost none documentation actually use method ca nt find find answers questions website know facebook either render component dom test destroyed clean tools use get container pass additional component trees like popovers best ways test nt parts left component unmounted current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior nice see information people met memory leaks tests also help establish good practices writing tests versions react browser os affected issue work previous versions react", "num": "10330", "d": "7/2017"}, {"title": "invariant messages nt extracted", "body": "sure see messages beta bundles like understand", "num": "10328", "d": "7/2017"}, {"title": "prevent extension synthetic event", "body": "based discussion support putting custom data synthetic events maybe make clearer", "num": "10327", "d": "7/2017"}, {"title": "dynamic create child element classname update correct", "body": "code like var myapp reactcreateclass getinitialstate function return ch b c onclick function thissetstate ch c function thisrefsaclassnamewuwu thisrefsavalue render function return thisstatechmap function obj index consolelog haha wuwu return reactdomrender documentgetelementbyid main first click change button change second child classname click redux button formitem one child classname must haha classname think may bug vdomrender fix problem", "num": "10326", "d": "7/2017"}, {"title": "exportimport components state components", "body": "hello yrs old new react native trying export component interact another component exactly sytanx according rules also want share state component another export component well thanks", "num": "10325", "d": "7/2017"}, {"title": "documentation add version information", "body": "please list need node gt machine description npm install g createreactapp creating new application document want know required version running command", "num": "10324", "d": "7/2017"}, {"title": "documentation improve tutorial example code write", "body": "tried tutorial delete files src folder new project think good example code example misunderstanding remove src directory thank", "num": "10323", "d": "7/2017"}, {"title": "custom field event cleaned", "body": "want request feature report bug bug current behavior custom field event clean data appear event fired current behavior bug please provide steps reproduce possible minimal demo problem via similar template current behaviour reload click yellow area alert hello click green area alert hello reload click green area alert undefined expected behavior expect clicking yellow area always alert hello clicking green area always alert undefined versions react browser os affected issue work previous versions react got problem sure affect earlier version", "num": "10322", "d": "7/2017"}, {"title": "error null captured error warning due crossorigin issues", "body": "three points discussion due environments like codesandbox show react caught error warning let consider skipping useful look like bug looks like separate error draws attention away real error case probably print js stack related issue pass error boundary caught seems error boundaries intuitively something like read break falsy values like proposal always wrap primitives objects pass boundary", "num": "10321", "d": "7/2017"}, {"title": "uncaught typeerror thisupdaterenqueuecallback function using setstate callback", "body": "want request feature report bug bug beta version current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template component used pretty simple piece code js dosomemore gt stuff dosomething value gt thissetstate value thisdosomemore firing dosomething causes error expected behavior expect thisdosomemore function called thissetstate thisdosomething versions react browser os affected issue work previous versions react version react tested several versions confirm bug also appears bug appear", "num": "10320", "d": "7/2017"}, {"title": "dangerouslysetinnerhtml bug", "body": "hi guys found bug copied pasted image custom textarea got difference thisstatetext innerhtml values correct nt know fix reproduce chrome version official build ubuntu lts", "num": "10319", "d": "7/2017"}, {"title": "using instead still experimental means", "body": "documentation page using arrow function instead marked experimental still considered experimental", "num": "10318", "d": "7/2017"}, {"title": "finesse signature componentdidcatch react", "body": "want request feature report bug improvement new feature current behaviour believe proposed name little confusing expected behavior nutshell proposal changing signature naming conventions often halfjokingly labelled one difficult things computer science think could easily tweak signature componentdidcatch lifecycle method introduced react heavily inspired principles covered famous clean code book robert c martin particularly like idea solid naming conventions basically guess function sort variable dealing literally reading names yes every software developer world associate term catch trycatch construct first question came mind came across something along lines catch think could avoid confusion make new method bit intuitive renamed either renamed second argument something would better indicate expecting string eg find term info used recent blog post little vague immediately obvious whether meant string maybe object forget actual functionality new method seems great ca nt wait opportunity implement projects versions react browser os affected issue work previous versions react react", "num": "10317", "d": "7/2017"}, {"title": "react unstablerendersubtreeintocontainer always return instance", "body": "want request feature report bug bug current behavior using reactmodal library tested react beta throws error try close modal reason calls expects instance back sometimes null closing trying read state get null reference error use api like works component never tries read use like get error tries read current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior always return instance modal librarly works close versions react browser os affected issue work previous versions react react beta works previous versions", "num": "10310", "d": "7/2017"}, {"title": "reactdomrender unstablerenderintocontainer nt return instance called update", "body": "want request feature report bug bug current behavior reactdomrender reactdomunstablerendersubtreeintocontainer longer return created react component instances current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior steps thiscomponentref instance created null react beta entirely possible something different clear versions react browser os affected issue work previous versions react react beta chrome osx thanks", "num": "10309", "d": "7/2017"}, {"title": "server rendering warnings vague", "body": "want request feature report bug feature current behavior server rendering react dom hydrating different structure react rightly warns inconsistencies first saw warnings sure exactly going wrong warnings receiving warning find matching warning find matching warning expect server html contain last error catch problem serverrendering inconsistencies client render intentional moment testing things unpure render functions expected behavior explicit rendering inconsistency server client versions react browser os affected issue work previous versions react react", "num": "10307", "d": "7/2017"}, {"title": "serverrendered html polluted empty datareactid attributes", "body": "want request feature report bug bug feature current behavior using new react serverrendering using regular package method html dom output created root element attribute elements attribute every single html element ends consuming lot bytes large pages seems like potentially might necessary new client rehydration could least reduced size since appears serve real purpose besides binary marker point quote beta release notes server rendering use markup validation anymore instead tries best attach existing dom warning inconsistencies see new streaming serverrenderer well nt managed take look yet expect two methods rendering output versions react browser os affected issue work previous versions react nodejs react edit quickly illustrate talking better extra characters html element rendered react small example app characters", "num": "10306", "d": "7/2017"}, {"title": "react build deploy firebase error", "body": "want request feature report bug report bug current behavior deploy build firebase get error current behavior bug please provide steps reproduce possible minimal demo problem via similar template get error uncaught syntaxerror unexpected token lt deploy react build firebase createreactapp project npm firebase firebase init npm run build work get firebase deploy first deploy work try change code appjs npm run build get new firebase deploy open browser chrome firefox ie get error uncaught syntaxerror unexpected token lt fixed issue expected behavior get right mainjs deploy firebase versions react browser os affected issue work previous versions react error ie chrome firefox", "num": "10304", "d": "7/2017"}, {"title": "uncaught typeerror read property func undefined", "body": "bug webpack nodemodulesreactrouterlibinternalproptypesjs code var react require react var func reactproptypesfunc var object reactproptypesobject var arrayof reactproptypesarrayof var oneoftype reactproptypesoneoftype var element reactproptypeselement var shape reactproptypesshape var string reactproptypesstring uncaught typeerror read property func undefined react object contains proptypes dependencies babelplugintransformobjectassign babelpolyfill babelruntime bootstrap chartjs cheerio createreactclass enzyme eventsourcepolyfill hardsourcewebpackplugin imgloader immutable jquery jszip mixpanelbrowser moment mssignalrclient proptypes react reactaddonstestutils reactcookie reactdaypicker reactdom reactdropzone reactflexslick reactmixpanel reactredux reactresizedetector reactrouter reactrouterredux reactslick reactsmooth reactsortablehoc reactstockcharts reacttooltip reactvirtualized recharts redboxreact redux reduxdevtoolsextension reduxthunk sassloader slickcarousel superagent toastr webpackdevmiddleware devdependencies babelcli babelcore babelloader babelpluginreactdisplayname babelplugintransformobjectassign babelplugintransformruntime babelpresetreact babelpresetreacthmre babelregister bundleloader chartjs cheerio cleanwebpackplugin colors compression compressionwebpackplugin copywebpackplugin crossenv cssloader enzyme eslint eslintpluginimport eslintpluginreact eslintwatch eventsourcepolyfill expect exposeloader express extracttextwebpackplugin fileloader jsdom jsonloader mocha nock nodesass npmrunall oneskyutils open reactaddonstestutils reduximmutablestateinvariant reduxmockstore rimraf sassloader styleloader urlloader webpack webpackcleanobsoletechunks webpackdevmiddleware webpackhotmiddleware", "num": "10302", "d": "7/2017"}, {"title": "react server renderer breaks style object prod mode", "body": "bug react beta server renderer reported react beta thread renderer throws exception included nodeenv given file indexjs const react require react const reactserver require reactdomserver const reactcreateelement div classname signlink id signlayoutlink style position absolute consolelog reactserverrendertostring run get weirdly dev mode throw error", "num": "10299", "d": "7/2017"}, {"title": "react keep report error component found", "body": "want request feature report bug report bug current behavior component notfound react keep report error current behavior bug please provide steps reproduce possible minimal demo problem via similar template import react react export default function app return hello expected behavior report error versions react browser os affected issue work previous versions react react", "num": "10298", "d": "7/2017"}, {"title": "react rc", "body": "third react rc available public testing installation instructions rc published npm tag next regular npm installs continue use release install rc use react mean react first release ships rewrite react core previously codenamed fiber rewrite goals remove old internal abstractions age well hindered internal changes let us ship requested features like returning arrays render recovering component errors readable component stack traces every error enable us start experimenting asynchronous rendering components better perceived performance initial react release mostly focused compatibility existing apps enable asynchronous rendering yet introduce optin async mode later react expect react make apps significantly faster slower love know see improvements regressions javascript environment requirements react depends collection types map set support older browsers devices may yet provide natively eg corejs babelpolyfill polyfilled environment react using corejs support older browsers might look like js import import import react react import reactdom reactdom reactdomrender hello world documentgetelementbyid root react also depends even test environments simple shim testing environments would points interest complete rewrite react expect work existing code fixed deprecation warnings introduced beta work third party libraries relied deprecated unsupported apis may need updates work correctly new release good time file issues libraries problems tell us broke something particularly interested hearing performance differences notice nt expect massive changes would love know improvements regressions please report server renderer completely rewritten offers streaming mode reactdomserverrendertonodestream reactdomserverrendertostaticnodestream server rendering use markup validation anymore instead tries best attach existing dom warning inconsistencies anymore server renderer code still new likely issues please report hydrating server rendered container explicit api use instead reviving server rendered html keep using clientside rendering react native follows different release cycle update beta future release already using alpha release yet using fiber breaking changes error handling previously runtime errors used put react broken state produce cryptic errors react fixes introducing special kind components called error boundaries error boundaries catch runtime errors component tree log display fallback ui instead uncaught error component error boundary tree whole component tree unmounted helps avoid nasty bugs ui corrupted due error means need add error boundaries app handle errors gracefully react limited undocumented support error boundaries different method name used called renamed learn new error handling behavior scheduling lifecycle return called inside lifecycle method work around either use new portal api refs calling null longer triggers update allows decide updater function want rerender calling directly render always causes update previously case regardless calling setstate render callback second argument fires immediately instead components rendered replacing always happens previously could fire first cases previously changing ref component would always detach ref component render called change ref later applying changes dom safe rerender container modified something react worked previously cases never supported emit warning case instead clean component trees using see example lifecycle longer receives param see shallow renderer longer calls dom refs available also makes consistent get called previous versions either shallow renderer implement anymore packaging anymore even commonjs environments react reactdom precompiled single files flat bundles previously relied undocumented react internals work anymore let us know specific case issue try figure migration strategy build anymore compatible addons published separately npm singlefile browser versions need deprecations introduced removed core package available shallow renderer see blog posts instructions migrating code automated codemods names paths singlefile browser builds changed emphasize difference development production builds example js known issues server renderer crashes production inline styles fixed fixed server renderer nt yet support returning arrays strings components fixed server renderer still renders somewhat unnecessarily fixed shallow renderer pass fixed fixed issue older browsers fixed cases reported instead real error fixed report google crawler render page using link fixed popular third party libraries work yet eg enzyme please report issues thread updates released july released july fix crash server rendering released august fix strictmode function scope problem better error log messaging crossorigin handling shallow renderer improvements edgecase context bugfix single point entry server rendering etc released august warn unresolved function child remove datareactid datareactchecksum whitelist new test renderer api features disabled via feature flag minor updates slightly reduce bundle size release fix bugs related unmounting error boundaries enable new fiber reacttestrenderer api methods previously disabled behind feature flag released september fix error fxfactorial bvaughn improve error message reactdom loads without react aweary warn nesting subtree inside sophiebits nt warn casing ssr nonhtml ns sophiebits throw error warn mistaken loading prod dev react bundles flarnie reset instance vars calling commit phase lifecycles acdlite warn event listener function aweary fix bug react roots would cause error acdlite allow passing unknown attributes dom components nhunzaker others fix bug elements defaulted first option even disabled aweary nhunzaker released september fix bug react npm packages would throw exception startup browsers supporting natively sophiebits released september report bad dead code elimination react devtools gaearon fix false positive warning hydrating svg ssr gaearon add warning nonlowercase custom attributes gaearon fix memory leak gaearon remove deprecated entry point shallow renderer gaearon remove undocumented methods gaearon add official api without unstable prefix gaearon repeat polyfill twice gaearon", "num": "10294", "d": "7/2017"}, {"title": "document non interaction native synthetic events", "body": "trying find react event handlers able prevent event handlers document hours searching experimenting stumbled across issue explains unfortunately documentation gives impression react events work exactly like native events apart wrapping synthetic events could therefore interact please document case", "num": "10284", "d": "7/2017"}, {"title": "asyncawait lifecycle functions need executed order", "body": "request feature current behavior expected behavior asyncawait lifecycle functions need executed order need executed still pending chrome", "num": "10278", "d": "7/2017"}, {"title": "unable fix proptypes moved separate package", "body": "one modules use reactnativespinkit started throwing error updated rn went file causing error nodemodulesreactnativespinkitindexjs made changes described migrating reactproptypes even tried automatically applying changes jscodeshift ran however still getting warning want help project use wrong code code", "num": "10277", "d": "7/2017"}, {"title": "update docs example babel jsx allows elements attribute values", "body": "resolved via babel work example added react documentation would jsx depth appropriate", "num": "10276", "d": "7/2017"}, {"title": "pass classname classnames module", "body": "hi usually situation write code like seems simple elements need dynamic classes gets tedious pretty hard read propose following thing attribute evaluated running classnames rendering html means attribute allow types would become much simpler write code guys think", "num": "10271", "d": "7/2017"}, {"title": "reactdomrender callback return top level element", "body": "nt see way obtain top level element new async previously would return top level component third argument callback pass rendered component callback think bug top level component returned callback", "num": "10266", "d": "7/2017"}, {"title": "invalid unknown prop warnings ssr", "body": "run fixturesssr test harness terminal following warning logged ssr behavior match clientside behavior warn valid attribute", "num": "10265", "d": "7/2017"}, {"title": "safari instanceof checks fail", "body": "see bug safari instanceof checks incorrectly fail rendering player component internal renders jsx video tag result safari constructor correct instanceof checks fail expected behaviour first two return true tips work around safely breaking component third party library instanceof check video element", "num": "10263", "d": "7/2017"}, {"title": "getting reference component instance snapshot testing", "body": "app currently stacked provider followed parent appcontainer component followed actual component using snapshot testing load component call methods gives instance provider component get instance mycomponent able call methods tried js const tree renderer create gives error able resolve context see way pass context help", "num": "10261", "d": "7/2017"}, {"title": "change data obj array use setstate", "body": "obj like want change g idea", "num": "10260", "d": "7/2017"}, {"title": "setstate change obj k v", "body": "obj k v thisstate obj want change k use setstate thissetstate thx", "num": "10251", "d": "7/2017"}, {"title": "html input tag maxlength bug", "body": "met problem follow want render input tag value react component mounted set maxlength attribute input confusing value length maxlength display without split see demo anyone help", "num": "10250", "d": "7/2017"}, {"title": "implement new feature flexible component attr definition", "body": "want request feature report bug want feature current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react latest", "num": "10246", "d": "7/2017"}, {"title": "doubts getfielddecorator form", "body": "", "num": "10243", "d": "7/2017"}, {"title": "visit home page styles project load", "body": "routes import export default class extends reactcomponent import export default class extends reactcomponent like code visit homepage load still visit normal", "num": "10242", "d": "7/2017"}, {"title": "babelreactoptimize still value react", "body": "occasionally found plugin says things optimize react want get answer confirmation react team whether optimization still valuable example transformreactpureclasstofunction would definitely write purecomponent instead function could react team clarification thanks lot", "num": "10240", "d": "7/2017"}, {"title": "integrating jquery plugin webuipopover dom events firing due unable change state component", "body": "trying add plugin react component click event button written following code enable popover openpopover webuipopover url popovercontent trigger manual closeable true openpopover webuipopover show popover opening content showing inside popover content react components events firing due unable change state particular component someone please give suggestion thanks", "num": "10233", "d": "7/2017"}, {"title": "cursor input element onfocus uses stoppropagation firefox", "body": "want request feature report bug bug current behavior onfocus event handler element calls stoppropagation cursor element well selection shown firefox bit steps reproduce create element call stoppropation onfocus event handler jsfiddle expected behavior expected cursor selection text visible element seen chrome edge versions react browser os affected issue work previous versions react seen issue react firefox windows", "num": "10232", "d": "7/2017"}, {"title": "question keep single setstate call", "body": "guaranteed calling trigger single rerender better practise pass keep single call", "num": "10231", "d": "7/2017"}, {"title": "fr allow refs sfcs", "body": "want request feature report bug feature current behavior refs sfc currently work expected behavior taking ref sfc equivalent calling simply return highest dom node rendered output", "num": "10230", "d": "7/2017"}, {"title": "element unrecognized", "body": "want request feature report bug bug current behavior tag incorrectly reported invalid html element chrome version current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior similar react tag valid html element versions react browser os affected issue work previous versions react react report error", "num": "10226", "d": "7/2017"}, {"title": "changing local copy state method automatically changes state well", "body": "want report bug least think assigned value state say x local variable method making change variable calling setstate change value state say changes value x well exactly change local variable using setstate change value x using change value yet x changes well exactly way changed local variable earlier initialised using x demo problem clicking button changes numbers rendered using state test clicking button invokes method value x stored variable arr whose first indexed spliced setstate called passing object changing value state temp test updated well value arr using react version chromium running ubuntu lts", "num": "10220", "d": "7/2017"}, {"title": "enable set fontfamily press start", "body": "want request feature report bug bug current behavior setting fontfamily press start fontfamily style property set current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior would like see fontfamily property set press start chrome debugger versions react browser os affected issue work previous versions react last react version chrome mac nt know worked", "num": "10218", "d": "7/2017"}, {"title": "incorrect data compositionend event typing korean", "body": "reproduce go open developer console switch microsoft korean ime standard settings switch korean input put cursor contenteditable div type qwerty keyboard typed input field result developer console list composition events contents data attribute logged however data first event wrong \uc5ec \uc5ec\ub974 see screenshot see wrong trying thing seen screenshot plain nonreact input field emits event proper data occurs latest version react also seen behaviour older versions example causes problems draft js", "num": "10217", "d": "7/2017"}, {"title": "automatic passing html attributes classname id etc props composed component", "body": "want request feature report bug feature current behavior consuming react component libraries frustrating creators specifically handle html attributes passed props outermost container given component regard specific problem best libraries consistent interface applying custom components mediocre libraries provide hardcoded components support custom worst libraries provide neither hardcoded support custom categorizations certainly meant indicator usefulness quality library whole plenty libraries find extremely useful wellmade lack simple interface contrary plenty libraries passed due poor design areas support nice way example minimal example initial render popular infinite list view anonymized avoid fingerpointing jsx resulting html html notice nowhere found component honor passed container really need wrap component resulting additional markup places jsx jsx resulting html html makes total sense disallow arbitrary props automatically applied resulting container however html attributes seems extremely counterproductive automatically current behavior bug please provide steps reproduce possible minimal demo problem via similar template na expected behavior na\u00efve approach would automatically apply html attribute composed component outermost container probably ideal better solution would automatic prop passthrough default allow developers override specific see fit benefits twofold libraries lack interfaces like would immediately improved without developer needing anything would still allow prescient developers curate interface way choosing conclusion admittedly nt great solution mind also first time opening react issue hope provokes thoughtful discussion feels like constructive happy provide additional examples problem curious people similardifferent thoughts thanks versions react browser os affected issue work previous versions react versions", "num": "10216", "d": "7/2017"}, {"title": "catch errors render methods", "body": "want request feature report bug feature current behavior component render method throws error leaves react inconsistent state subsequent renders attempt update inconsistent component result errors like read property gethostnode null proposed behavior react could catch error render method set inconsistent state flag rethrow afterwards react update previously rendered component flag set could discard unmount existing component perform fresh render container empty versions react browser os affected issue encountered inconsistent state problems", "num": "10215", "d": "7/2017"}, {"title": "reactdomserver rendertostring fails array type children", "body": "react alpha allows returning array render function server renderer expects children always react elements source fiddle react", "num": "10212", "d": "7/2017"}, {"title": "split svg property configs separate module", "body": "instead supporting directly require people write const svg require reactdomsvg could avoid sending svgdompropertyconfig maybe files unknown upfront would good investigate potential benefits cc sebmarkbage acdlite gaearon nhunzaker jquense aweary", "num": "10209", "d": "7/2017"}, {"title": "renderintodocument render document", "body": "render document whatsoever creates lot issues components listen global events document would great revert behavior function add additional function render isolated div needed", "num": "10206", "d": "7/2017"}, {"title": "unmountcomponentatnode trigger componentwillunmount components mounted unstablerendersubtreeintocontainer", "body": "want request feature report bug sure intended behavior like feature current behavior componentwillunmount get called portal element mounted unstablerendersubtreeintocontainer unmountcomponentatnode called current behavior bug please provide steps reproduce possible minimal demo problem via similar template please check example expected behavior example expect componentwillunmount called interval timeout cleared versions react browser os affected issue work previous versions react google chrome official build cohort stable tried react version", "num": "10205", "d": "7/2017"}, {"title": "components rendering order", "body": "composite component like javascript const const b const c return b c wonder ok write like hope render correct order embed thanks", "num": "10204", "d": "7/2017"}, {"title": "time upgrade license mit", "body": "reference apache foundation bans use facebook bsdpatents licensed libraries like reactjs", "num": "10203", "d": "7/2017"}, {"title": "implement additional async apis preparation", "body": "x similar currently call except updates batched flushed end batch regardless whether nested inside x optin subtree async mode x static flag class components x component type items considering minor releases decided ship commit phase version fires even deep set state subtree replaces global host configs passive versions", "num": "10202", "d": "7/2017"}, {"title": "feature request deferred async shouldcomponentupdate", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10199", "d": "7/2017"}, {"title": "uncontrolled radio fix breaking master", "body": "sure seems caused issues production us need either revert find way fix forward right master broken sync fixing break things", "num": "10196", "d": "7/2017"}, {"title": "update codepen examples use latest react", "body": "iirc currently probably leave using since breaks update anyway", "num": "10193", "d": "7/2017"}, {"title": "react codepen found show loading", "body": "help example codepen working show loading", "num": "10192", "d": "7/2017"}, {"title": "consider relicensing al rocksdb done", "body": "hi apache software foundation legal affairs committee announced socalled facebook bsdpatents license longer allowed used direct dependency apache projects lead lot upset frustration apache community especially projects requiring similarlylicensed code direct dependencies chief rocksdb however apache software foundation received word rocksdb relicensing code dual apache license gpl licenses user reactjs asf toplevel project apache couchdb please consider relicensing reactjs similar terms otherwise many asf projects stop relying building react previous bug suggested mention lacker issue asking licensing questions thank kindly consideration", "num": "10191", "d": "7/2017"}, {"title": "settle heuristicapi choosing hydration", "body": "used either purely clientside content serverside rendered content clientside empty container first render serverside hydrate currently use datareactid determine hydrate clear could theory hydrate patch safe current hydration model initial dom call intending clientside render hydration end nt patch attributes see four possible solutions always patch attributes differ would really slow hydrate normal hydration mode slow initial render nonssr tree continue use heuristic hydrating kind extra meta data html present add serverrenderer change one meta data needed one per element comment attribute introduce explicit api hydrate ssr hydration callsites updated introduce option keep option warning one major version make nonbreaking change allows people incrementally upgrade leisure", "num": "10189", "d": "7/2017"}, {"title": "make uses reactdebugcurrentframegetcurrentstack reentrant", "body": "realized refactor use reactdebugcurrentframe decoupled stack frame error messages reentrant fiber reentrant renderers might synchronous server renderer atm add tests warnings renderers calling serverrender within client render update setreset callsites use pushpop instead account", "num": "10188", "d": "7/2017"}, {"title": "cloneelement children ref dom gt dom dom null componentdidmount", "body": "want request feature report bug report bug current behavior cloneelement children ref dom gt dom dom null componentdidmount js class app extends reactcomponent render return class test extends reactcomponent componentdidmount consolelog thisdom console show null const children content gt return content reactdomrender documentgetelementbyid container however replace gets dom node correctly current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior component instance dom node instance imo versions react browser os affected issue work previous versions react using react", "num": "10183", "d": "7/2017"}, {"title": "firefox error permission denied access property target", "body": "want request feature report bug bug current behavior certain events firefox trigger following error note raven wrapping call nt think relevant specific line code happens suggests could due iframe crossorigin issues iframes embedded although nt able reproduce error current behavior bug please provide steps reproduce possible minimal demo problem via similar template unfortunately able reproduce though happened separate users since firefox upgrade june helps reported similar error ago ravenjs fixed using trycatch expected behavior errors versions react browser os affected issue work previous versions react react firefox windows osx think issue new firefox new behavior react", "num": "10181", "d": "7/2017"}, {"title": "unknown prop tag", "body": "want request feature report bug bug current behavior notice document ontouchforcechange valid event div however get warning logged console unknown prop tag current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior warning versions react browser os affected issue work previous versions react chome macos", "num": "10177", "d": "7/2017"}, {"title": "devonly requires fb bundles", "body": "see starts js var invariant require fbjslibinvariant eventlistener require fbjslibeventlistener react require react warning require fbjslibwarning executionenvironment require fbjslibexecutionenvironment require fbjslibcamelizestylename var hyphenatestylename require fbjslibhyphenatestylename memoizestringonly require fbjslibmemoizestringonly require proptypes var emptyfunction require fbjslibemptyfunction containsnode require fbjslibcontainsnode focusnode require fbjslibfocusnode getactiveelement require fbjslibgetactiveelement shallowequal require fbjslibshallowequal require proptypescheckproptypes notice nt probably use prod need mechanism express module pure side effects rollup dce", "num": "10176", "d": "7/2017"}, {"title": "server renderer nt include event code", "body": "since currently share injection server renderer includes lot unnecessary clientonly code cut", "num": "10172", "d": "7/2017"}, {"title": "npm like repository free react component created shared community nonissue", "body": "sorry starting react npm like repository free react components created shared community", "num": "10170", "d": "7/2017"}, {"title": "bug radio button fires onchange event one time", "body": "want request feature report bug bug current behavior radio button fires onchange event option current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo code expected behavior radio button fire onchange event whenever value changed versions react browser os affected issue work previous versions react current latest version", "num": "10168", "d": "7/2017"}, {"title": "reactchildrenmap want add key", "body": "use reactcssmodules use key components added let use key first look key components added something extra", "num": "10166", "d": "7/2017"}, {"title": "testutilssimulate event compositeinstance throw early", "body": "help found bug exception typeerror read property reactinternalinstance undefined function getclosestinstancefromnode node node internalinstancekey return node internalinstancekey testing undefined variables also calling function initially reported trying find wrong backtrace promise using react react dom", "num": "10165", "d": "7/2017"}, {"title": "feature suggestion publish react also code", "body": "want request feature report bug feature current behavior react published npm code expected behavior publish react also entry point packagejson motivation performance leverage targeted client native es features part angular package format", "num": "10164", "d": "7/2017"}, {"title": "use amd module react", "body": "project use html css js project modules defined amd like image need rewrite project react sure use module directly react use like using require xxx image important problem one help", "num": "10159", "d": "7/2017"}, {"title": "import amd module react project", "body": "project use html css js project modules defined amd like image need rewrite project react sure use module directly react use like using require xxx image important problem one help", "num": "10158", "d": "7/2017"}, {"title": "incomplete documentation creating web components", "body": "hey documentation creating web components react quite cool works really nice html however component created way unstyled documentation cover add css web component using css end mainhashcss file selectors components create web component css must encapsulated component components dom lives shadow root stylable outside would cool could show way account", "num": "10155", "d": "7/2017"}, {"title": "request build", "body": "entirely sure whether correct place request apologies wasting time integrating react large legacy webclient jumping hoops render comment nodes great joy noticed merged allows us remove hacks however merged latest alpha build created love get alpha build published", "num": "10152", "d": "7/2017"}, {"title": "tutorial concepts without", "body": "tutorials exception advanced guides assume react without tutorial still uses jsx react without jsx tutorial still uses would simple react demo look like compare vue introduction starts simple examples drop webpage", "num": "10147", "d": "7/2017"}, {"title": "hoc onclick nt work without adding new element", "body": "want request feature report bug bug current behavior button clicked wo nt alert current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo link expected behavior onclick event hoc triggered add element event moved element work perfectly javascript const hoc wrappedcomponent gt return class abc extends reactcomponent render return nt want add element component versions react browser os affected issue work previous versions react react", "num": "10146", "d": "7/2017"}, {"title": "remove unstablerenderintocontainer", "body": "hunch want remove accomplishes thing remember adding bunch complexity would nice get rid committing support another release cycle", "num": "10143", "d": "7/2017"}, {"title": "problem solve itplease help", "body": "write function href another web function openpage windowlocationhref function useful wrong npm run build window defined dont know", "num": "10141", "d": "7/2017"}, {"title": "fiber infinite recursion mounting lifecycle", "body": "app intentionally bug app app component returns calls componentdidmount componentwillreceiveprops nt bad user code issue raises regression behaviour react compared react renders directly get react nothing renders app never loads browser spinning forever think react stuck infinite recursion presume fiber nature async fact things never ends makes hard investigate isolate source problem large codebase sort maximum call stack fiber context migrated app latest react native recently weird freezing case app completely unresponsive button works could still native actions like scroll scrollview however even rn devtool menu action working like inspector probably involves js react stuck recursion loop case issue calling lifecycle wrong logic reason code used work past creates recursion loop", "num": "10140", "d": "7/2017"}, {"title": "unknown dom property autocomplete spec says htmlinputelementautocomplete autofocus", "body": "want request feature report bug bug current behavior get warning unknown dom property autocomplete mean autocomplete use works fine misleading name dom property react implies dom property named differently really current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior accepts rejects error message claim name dom property see mention dom property called idl documentation htmlinputelement see mention claim react property name mapped onto differentlynamed dom property use wording good coming wordings js typeof documentcreateelement input autocomplete string typeof documentcreateelement input autocomplete undefined versions react browser os affected issue work previous versions react issue exists least", "num": "10139", "d": "7/2017"}, {"title": "fiber infinite loop error thrown render", "body": "want request feature report bug bug current behavior using react alpha recent versions iirc whenever error thrown inside render react fiber goes infinite loop screenshot current behavior bug please provide steps reproduce possible minimal demo problem via similar template unfortunately minimal repro case yet wanted flag goes beta nt think anything special weird recursive calls similar tried stepping within loop inside fiber internals user code involved expected behavior react throws error stops versions react browser os affected issue work previous versions react repros works fine react", "num": "10137", "d": "7/2017"}, {"title": "base component context overriden child context", "body": "want request feature report bug bug might feature current behavior base component defines context type extending component also defines context base component context overriden child context current behavior bug please provide steps reproduce possible minimal demo expected behavior component defined context versions react browser os affected issue work previous versions react tested amp versions nt test", "num": "10136", "d": "7/2017"}, {"title": "dispatchevent inputtextarea ignored", "body": "want request feature report bug bug current behavior method effect inputtextarea elements current behavior bug please provide steps reproduce possible minimal demo problem via similar template v working v working expected behavior method results event handled versions react browser os affected issue work previous versions react using latest chrome browser worked stopped working still working usecase old tests happily remove support", "num": "10135", "d": "7/2017"}, {"title": "animationdelay applying", "body": "using react style appear applying specific working trying debug problem jsx import react component react import pageloadingindicatorcss export default class pageloadingindicator extends component render let points let duration seconds let durationperbit duration points let bitwidth points let height return bitwidth width animationdelay animation upon inspection rendered html looks like html", "num": "10134", "d": "7/2017"}, {"title": "support inheritance", "body": "recall discussing supporting inheritance react components unfortunately ca nt find discussion github search know react repository owners functional programming lovers respect people think functional programming good many usecases best approach every use case please nt ask use case try handle way prefer code way fine never problems scalabilityreadabilitymaintainabilityextendibility code past years least never chose php building web servers try change php even though websites much smaller facebook another thing open source great library like react considering huge user base also take responsibility users relation work respect people nt force things expect politicians follow rule also follow place make decisions affect many others hate politicians use media brainwash people raise votes populistic methods strongly believe react developers unconsciously excitement thing advertising functional programming things like redux wonder make poll today ask many agree support basics oo wo nt vote another thing framework forces specific coding style may good framework one nt force coding style avoids forcing much possible much better another thing agree problems described inheritance usecases none problems apply natural thing using inheritance ca nt believe trouble went past year react nt support inheritance many many times reached point stop frontend project till js supports compiling python c browsers run people communities still projects oo come write good frameworks frontend developers bet reading tempted respond please describe usecase tell without inheritance stop complaining believe avoid asking questions wanted ask composition ask know composition nt make sense much inheritance ask please support inheritance react remember dirty full parentheses code people writing add support classes react said improve code readability ok lets support inheritance bring readability codes written react default values set class inherited subclasses still changeable subclasses done passing props component compose render method sometimes makes sense simply inherit sometimes passing callback props taking care extra work gain disclaimer like many many others appreciate good things react aggression natural reaction passive aggression forcing others things way prefer explain problem tell solve way responses troubles adopt patterns patterns force framework btw took time wrote improve reactjs", "num": "10130", "d": "7/2017"}, {"title": "ca nt scroll top", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10128", "d": "7/2017"}, {"title": "node allowed due devengines setting packagejson", "body": "want request feature report bug featureupdate current behavior currently following node versions allowed value executing script error expected behavior unless reason allowing version yet could update", "num": "10127", "d": "7/2017"}, {"title": "let stop attribute blocking", "body": "write jsx html get react prevents attributes appearing dom means react always play nice elements whose behaviors defined jquery angular etc apis whose routines read dom example could use jquery angular define routines observe attributes render webgl scene separate canvas author wants animate sphere able angular jquery routine find required attributes please uplift limitation nt limit web", "num": "10126", "d": "7/2017"}, {"title": "curried onblur handler triggered anymore using production mode", "body": "want request feature report bug bug current behavior switching mode examples defined curried handler suddenly stops working seems something number arguments current behavior bug please provide steps reproduce possible minimal demo problem via similar template react partially working react fully working react fully working also works fine mode react partially working expected behavior whatever correct usage handler function might end least behavior stay across different build modes versions react browser os affected issue work previous versions react working fine", "num": "10125", "d": "7/2017"}, {"title": "consistency parameter names comment", "body": "comment named componentinstance function parameter different name wrapperinstance mounts component inserts dom param reactcomponent componentinstance instance mount param domelement container dom element mount param reactreconciletransaction transaction param boolean shouldreusemarkup true insert markup function mountcomponentintonode wrapperinstance container transaction shouldreusemarkup context", "num": "10121", "d": "7/2017"}, {"title": "using native dom events react events", "body": "react element inner inside outer click event handlers outer react element inner html js documentgetelementbyid outer addeventlistener click function consolelog outer click class inner extends reactcomponent handleclick consolelog inner click render return reactrender documentgetelementbyid outer click react element inner expect inner element click handler triggered first outer element click handler happens reverse direction ie outer element click handler gets triggered first inner element click handler gets triggered know react event system native dom events propagate react events triggered propagate correct way achieve expected behavior note code example working large code base please keep mind answering", "num": "10120", "d": "7/2017"}, {"title": "tic tac toe tutorial", "body": "hi middle tutorial found naming variable xisnext clear x next supposed display instead x thank", "num": "10119", "d": "7/2017"}, {"title": "fr support style string set via csstext", "body": "want request feature report bug feature current behavior style prop must always object expected behavior style prop could optionally accept css string would set hood via", "num": "10118", "d": "7/2017"}, {"title": "error stops components rendering without error message console feedback", "body": "feels like bug faulty code trying bind undefined function forgot pass parent however error thrown well took figure problem past minutes tried reproducing error different data without luck even copied minimal amount source files another project error thrown nt know else want investigate setup branch described behavior observed home root provide information since nt really spent time trying replicate success expected behavior would throwing error obviously idea previous versions react encounter nt updated react meantime version shown using latest chrome windows", "num": "10117", "d": "7/2017"}, {"title": "multiple clicks needed nonanchor element onclick padding safari", "body": "want request feature report bug bug current behavior mobile safari versions desktop safari nonanchor element requires two click trigger element contains multiple commenttext nodes clicks second later text nodes either element padding element set natively element thanks malash worked around either padding element ensuring element contains one text node adding single top level element inside element multiple text nodes within instead eg instead current behavior bug please provide steps reproduce possible minimal demo problem via similar template seen fiddle first yea span one text node one click works second yea first text node span padding one click works nah second text node span padding needs two clicks third fourth yeah markup span multiple text nodes padding one click works note need zoom make sure hitting nah mobile reproduce behaviour sensitive exact area hit note desktop ensure clicking text seeing cursor nah items seeing cursor work expected behavior text nodes trigger click handler first click versions react browser os affected issue work previous versions react current react desktop safari mobile safari ios use agent thanks scottlyttle stellah", "num": "10116", "d": "7/2017"}, {"title": "runtime issue typeerror internalinstance null may need refresh page", "body": "bug due version incompatibility react reactdom certain versions managed fix issue using compatible react reactdom versions react reactdom current behavior react codebase work years recently encountered run time typeerror internal instance null errors cachebuster help would point generic windowonerror function following error message browser following error occurred typeerror internalinstance null may need refresh page file line number expected behavior runtime errors versions react browser os affected issue work previous versions react version encountered issues react reactdom", "num": "10112", "d": "7/2017"}, {"title": "render gets date state set componentwillreceiveprops using updater function", "body": "either bug documentation implementation according setstate doc need refer previous state one must use updater function problem updater function used change state state updated function called result gets new props old state called state really updated illustrates problem observed problem react", "num": "10111", "d": "7/2017"}, {"title": "tutorial starter code", "body": "starter code tutorial linked final code codepen starter code", "num": "10110", "d": "7/2017"}, {"title": "mouseenter event triggered cursor moves disabled button", "body": "bug mouseenter event triggered cursor moves disabled button see example expected behavior trigger mouseenter event react latest chrome macos", "num": "10109", "d": "7/2017"}, {"title": "reactdom error messages cryptic", "body": "reactdom throws error jest tests using testutils error messages cryptic makes harder us developers understand problem example one typeerror read property reactinternalinstance undefined ca nt put something readable instead like parent node tag name etc would extremely useful using test code btw js oncancel fired done gt const component testutilsrenderintodocument", "num": "10108", "d": "7/2017"}, {"title": "react server render error hard debug", "body": "want request feature report bug feature current behavior like using react server render error occurs like using document window object node environment error log hard find line broken error info like picture current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior server render error occurs error message see line broken versions react browser os affected issue work previous versions react react", "num": "10104", "d": "7/2017"}, {"title": "improve error forgotten extend reactcomponent", "body": "forget extend get following error example would nice dev could check exists provide better warning along lines believe would happen reactcompositecomponentjs", "num": "10103", "d": "7/2017"}, {"title": "would reordering slow passed index key prop", "body": "already question issue havent answered ps already read documentation bondarewicz said bit indistinct", "num": "10102", "d": "7/2017"}, {"title": "setstate callback called null instead undefined", "body": "want request feature report bug bug current behavior react callback function optional parameter function called passed value null previously react function called value undefined change breaks default parameters feature javascript discovered behavior working react native project hence example using view amp text current behavior bug please provide steps reproduce possible minimal demo problem via similar template import react component react export default class mycomp extends component componentdidmount thissetstate val gt consolelog val expected behavior callback function called undefined versions react browser os affected issue work previous versions react broken behavior observed react alpha react native replicated issue react react native working expected", "num": "10100", "d": "7/2017"}, {"title": "add default property modules", "body": "want request feature report bug feature current behavior code causes deprecation warnings works babel use babel works synthetic import support babel using use typescript work unless set true tsconfigjson packages work fine react deprecated warnings get tripped babel copies object expected behavior work without needing set done providing property possibly adding versions react browser os affected issue work previous versions react react chrome os x node work previous versions since deprecation warning added", "num": "10098", "d": "7/2017"}, {"title": "propstypes nt show kind warning error wrong props windows running app osx everything works fantasticwhy", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10093", "d": "7/2017"}, {"title": "reacttestrenderershallow setstate callback never called", "body": "want request feature report bug bug following current behavior callback second argument never called current behavior bug please provide steps reproduce possible minimal demo problem via similar template js import shallowrenderer reacttestrenderershallow const renderer new shallowrenderer rendererrender const instance renderergetmountedinstance instancemethodthatcallssetstate gt callback passed setstate second argument within methodthatcallssetstate never called shallow renderer code follows js updaterprototypeenqueuesetstate function enqueuesetstate publicinstance partialstate callback callername typeof partialstate function partialstate partialstate publicinstancestate publicinstanceprops thisrenderernewstate extends publicinstancestate partialstate thisrendererrender thisrendererelement thisrenderercontext see callback ignored deep renderer callback used expected behavior callback called versions react browser os affected issue work previous versions react react nt know worked", "num": "10089", "d": "7/2017"}, {"title": "failed compile error line num variable defined noundef", "body": "bug compile code react version steps reproduce create component load dynamically js file introduces new variable hc try use variable compile see error line num hc defined noundef problem define variable global component party script init hc compile due error way skip compile checks know object exists regards", "num": "10087", "d": "7/2017"}, {"title": "build unpkgcom broken", "body": "totally sure whether reported issue project see currently bad build redirects ends like version looks fine", "num": "10086", "d": "7/2017"}, {"title": "nicer formatting ssr validation", "body": "new validation issues warn first difference found html hydration scenario ideally instead queue differences end commit issue single warning nicely formatted diff instead warning add warn calls global buffer array map set whatever inside prepareforcommit issue currently batched warnings single message format message terms jsx diff nicely formatted way relevant nodes parent child changes irrelevant child content replaced ellipsis eg strategy wo nt yield perfect results asynchronously hydrating gets interrupted another tree flush warning actual hydrating particular tree flushed might show partial diff case probably warning", "num": "10085", "d": "7/2017"}, {"body": "long time ago nt feel strongly", "d": "7/2017"}, {"body": "regardless facebookreact interest using sri tags think would still beneficial projects hardcoded available via api well via unpkg optin approach similar cdnjs", "d": "7/2017"}, {"body": "would like know invariant message nt extracted could provide jsfiddle demo", "d": "7/2017"}, {"body": "quick check possible see bigger ui form libraries afaik extending events done though may case anymore reactbootstrap one point libraries though certainly breaking change fix hence caution", "d": "7/2017"}, {"body": "good point want research problem putting data events get recycled likely confusing users even source bugs either way", "d": "7/2017"}, {"body": "yeah take look definitely agree good idea prevent extensions want make sure surprised change enough heads adjust", "d": "7/2017"}, {"body": "nt warning also stop pooling instead", "d": "7/2017"}, {"body": "huh totally forgot added warning", "d": "7/2017"}, {"body": "formitem code", "d": "7/2017"}, {"body": "react support mutating attributes dom nodes via refs already specified react example changing dom node already method things might behave unexpectedly general avoid using ui logic useful imperative operations eg setting focus integrating third party libraries hard say clear attempting hope helps", "d": "7/2017"}, {"body": "muramsudheer react code repo better go raise issue btw answer question import react react import proptypes proptypes class example extends reactpurecomponent render return export default example pass component state component using props export component want use file module go docs try understand examples given", "d": "7/2017"}, {"body": "hi muramsudheer welcome react community type question better suited stack overflow react native discord chat github issues generally bugs featurerequests specific react", "d": "7/2017"}, {"body": "run node use last version scripts supported node createreactapp creating new react app using node project boostrapped old unsupported version tools please update node higher better fully supported experience notice appear think fair say still use node although result outdated version", "d": "7/2017"}, {"body": "happy take pr adding note though", "d": "7/2017"}, {"body": "think fair say still use node although result outdated version think good happy take pr adding note though make pull request next time thank", "d": "7/2017"}, {"body": "think ever meant supported mutate event object probably freeze development", "d": "7/2017"}, {"body": "hmm freeze pool maybe", "d": "7/2017"}, {"body": "gaearon thanks reply use case custom event field event delegation use traditional event delegation pattern abstraction react use react component props instead dom data attribute store data react event handler got dom object instead react component field event parameter know component clicked without appending custom data event object misunderstand anything react better solution custom field handle event delegation patter", "d": "7/2017"}, {"body": "trouble understanding trying provide small example representative real world use case react people usually rely bubbling pass data instead component handle event possibly notify parent components callback pass data callback eg data might based event parts might based component props hardcoded", "d": "7/2017"}, {"body": "gaearon thanks quick reply trying avoid passing function children components passing function grandchildren difficult maintain change component middle break chain avoid unnecessary rerender manual mistake passing function props like decoupling parent component children component parent container nt need care props children component children component nt depends function outside need put data event example nt need pass hander nt need pass handler props pass completely avoid unnecessary rerender dependency parent component children component nt need know children component handle onclick event nt need run function outside cleaner method defined class know ways solve problems feel like event delegation like also clean easy maintain may also good pattern implement react support", "d": "7/2017"}, {"body": "passing function grandchildren difficult maintain change component middle break chain effort write written would argue actually helps maintenance every connection explicit move components around accidentally lose connection often happens logic relying delegation avoid unnecessary rerender manual mistake passing function props like sure need event delegation solve bind function constructor use class property syntax decoupling parent component children component already coupled logic think trying avoid reflecting coupling code coupling still implicit react apps preferable keep relationships components explicit even cost writing code understand coming pattern intentionally discouraged react please use oneway data flow pass callbacks work beginning keeps data flow explicit helps find bugs later", "d": "7/2017"}, {"body": "huge fan magical behavior automatically wrapping also takes us away trycatch semantics fail probably hit infinite loop error instead fix build proper hoc done", "d": "7/2017"}, {"body": "tend agree sebmarkbage automatic wrapping thisstateerror fail probably hit infinite loop error instead fix nt likely scenario error would propagate next boundary eventually root sure infinite loop comes play think use custom error crossorigin errors edit nevermind nt mean thought since devonly behavior match trycatch semantics", "d": "7/2017"}, {"body": "ah right bubbling happen agreed correctly differentiate null trusted null throw nullundefined pass custom error former case", "d": "7/2017"}, {"body": "another similar report clear yet caused issue", "d": "7/2017"}, {"body": "assume serving scripts file might trigger", "d": "7/2017"}, {"body": "stack trace visible react package reactdom try versions please", "d": "7/2017"}, {"body": "gaearon maybe fail early least warn detect major version mismatch", "d": "7/2017"}, {"body": "oh damn shame indeed version mismatch", "d": "7/2017"}, {"body": "closing since issue discuss warning version mismatch separate issue would like", "d": "7/2017"}, {"body": "fix via", "d": "7/2017"}, {"body": "quite understand behavior expected directly modify expect automatically update source truth example next edit revert changes made pasting solution either leave fully uncontrolled attempt manage via react use something like draftjs controlled rich text editor", "d": "7/2017"}, {"body": "gaearon draftjs great solution chrome plugin grammarly nt work develop chat support support team use grammarly plugin need make custom rich textarea emoji work grammarly", "d": "7/2017"}, {"body": "fair enough saying case controlled approach work render empty react manage lifecycle hooks", "d": "7/2017"}, {"body": "gaearon thank idea remove html entities user paste text buffer", "d": "7/2017"}, {"body": "know sorry sound reactspecific would suggest checking articles examples working sanitizing", "d": "7/2017"}, {"body": "experimental part part nonexperimental way writing would inside", "d": "7/2017"}, {"body": "kovensky see experimental far know stage proposal", "d": "7/2017"}, {"body": "features become non experimental still chance making happened", "d": "7/2017"}, {"body": "shakiba according babel arrow methods like call still stage looks like promoted stage see vs side note stage babel plugin nt seem anything magical arrow methods simply transpiles arrow functions defined within constructor method example", "d": "7/2017"}, {"body": "hope discussion helps close let know questions", "d": "7/2017"}, {"body": "second argument kind intentionally vague quite decided goes yet might add things future went passing object first point subjective people see short others see long pick something went one think parallel reasonable enough", "d": "7/2017"}, {"body": "ok fair enough actually feels like object intending use data type makes perfect sense amended proposal would therefore thanks", "d": "7/2017"}, {"body": "triggered throw anything error example mind accurate name since guarantee catching error could anything could thrown", "d": "7/2017"}, {"body": "aweary overly complicating things little bit understand new lifecycle method correctly meant catch exceptions thrown descendant components like example using statement child component result captured parent according throw statement documentation throws userdefined exception nt matter whether throw error object integer per example matters exception perhaps debatable whether good thing exception type way javascript guess convinces optimal solution would therefore", "d": "7/2017"}, {"body": "love incorporating expected argument name read read words reads component catch error error argument otherwise would read component catch error error similarly notyetdocumented api called flushsync batch reads flush sync batch name argument otherwise would flushsyncbatch batch reads flush sync batch batch", "d": "7/2017"}, {"body": "fairly sure issue", "d": "7/2017"}, {"body": "let track verify fix also fixes example", "d": "7/2017"}, {"body": "seems like issue", "d": "7/2017"}, {"body": "seem related posted small test case errors case reactmodal library calling also expecting instance back going file new bug one seems like", "d": "7/2017"}, {"body": "although weird test cases works always render instead like apparently get instance back former case", "d": "7/2017"}, {"body": "jlongster apparently get instance back former case example fails get instance first render fails since makes render first", "d": "7/2017"}, {"body": "gaearon yes def looks related working reproducible example nt trivial exercise trying extricate relevant bits interestingly everything renders correctly returning instance important actions line", "d": "7/2017"}, {"body": "seanlandsman please provide example recreated example fiddle return object", "d": "7/2017"}, {"body": "file new bug mine might related feel free dupe one", "d": "7/2017"}, {"body": "gaearon great ok take look actually came point jlongster containerfiberchild null getpublicrootinstance take look example try see different mine thanks", "d": "7/2017"}, {"body": "reproduced happens called update eg", "d": "7/2017"}, {"body": "ah great continue see find meantime though pleased managed reproduce", "d": "7/2017"}, {"body": "filed bug still sure related think might never return instance like modal library ever tries access render like componentwillunmount never called nt realize null", "d": "7/2017"}, {"body": "believe issue related fiber tracks scheduled work specifically root call made work scheduled called eventually sets property fiber called already work progress check evaluates work nt scheduled means nt called never set", "d": "7/2017"}, {"body": "sounds correct sure fix think acdlite context", "d": "7/2017"}, {"body": "also slightly related bump problem async mode anyway", "d": "7/2017"}, {"body": "currently force top level renders synchronous mode compatibility case normally legacy mode core issue nt want support reentrant renders render synchronous lifecycle methods return already rendered initially wo nt anything yet idea use cases ideally switch using portals instead perhaps warn use cases recommend switching portals", "d": "7/2017"}, {"body": "sebmarkbage portals way forward sort thing find documentationinformation might used alternatively way get instantiated component later particular use case nt necessarily need immediately point later might acceptable", "d": "7/2017"}, {"body": "portals way forward sort thing find documentationinformation might used mix regular elements eg js reactdomcreateportal domnode", "d": "7/2017"}, {"body": "alternatively way get instantiated component later particular use case nt necessarily need immediately point later might acceptable technically although bit weird note work arrow functions familiar", "d": "7/2017"}, {"body": "ok tried portal approach return something nt instance expect perhaps describe usecase develop gridtable library whereby users supply react components library creates dynamically runtime inserts render within grid optionally users access components runtime invoke methods via api expose example user might supply togglecolorcomponent method called toggle get instance togglecolorcomponent given cell invoke toggle method typically via external input button etc make sense", "d": "7/2017"}, {"body": "seanlandsman nt need component visible yet recommend instead defer work later need visible time recommend using portal tricky part portal api want render something also rendering case recommend manually creating container dom node appending instance", "d": "7/2017"}, {"body": "second option described using hte callback works actually tried used arrow function nt worked trying normal function described gaearon trick sebmarkbage actually need component visible render nt necessarily need access instantiated component immediately point maybe even really really soon afterwards necessarily immediately use callback approach described works fine likely supported mechanism going forward suits us fine trying ensure forward compatibility fiber released thanks help", "d": "7/2017"}, {"body": "seanlandsman note technique nt work well async rendering portals future proof", "d": "7/2017"}, {"body": "ok understand thanks close cigar", "d": "7/2017"}, {"body": "assuming method least since marked unstable nt think fixed probably fine seems little risky though", "d": "7/2017"}, {"body": "original plan special case prerender one level deep eg instantiate class however turned useful distinction really want whole tree rendered safely call get refs instance get also would nt called would nt fully initialized nt see way fully fix without making reentrant however big architectural change goes opposite direction want go fully async", "d": "7/2017"}, {"body": "sounds fine since use cases think fine get instance later ref certainly something warn community though libraries need updated bet huge amount wish way emit kind warning helpful error ca nt think since nt know return value used", "d": "7/2017"}, {"body": "thanks report would like send pr wording feel would appropriate", "d": "7/2017"}, {"body": "understand correctly gzips well huge problem think planned fix pretty sure related", "d": "7/2017"}, {"body": "repository react could please report create react app instead also need live example hard say went wrong without seeing thanks", "d": "7/2017"}, {"body": "lenanesg using old version imports react nt export anymore please upgrade latest stable release downgrade react stable branch", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "dont want return jsx component function export default function app return hello react class export default app extends reactcomponent render return hello wed jul pm \u5468\u5411\u6d9b notifications githubcom wrote want request feature report bug report bug current behavior component notfound react keep report error current behavior bug please provide steps reproduce possible minimal demo problem via similar template import react react export default function app return hello image image expected behavior report error versions react browser os affected issue work previous versions react react receiving subscribed thread reply email directly view github mute thread", "d": "7/2017"}, {"body": "already fix markdown", "d": "7/2017"}, {"body": "react supported version severe known issues please use bug fixed beta try", "d": "7/2017"}, {"body": "regards reactlib reactdomlib anymore even commonjs environments react reactdom precompiled single files flat bundles previously relied undocumented react internals nt work anymore let us know specific case issue try figure migration strategy relying monkeypatches react render suggestions make work used imports thank", "d": "7/2017"}, {"body": "maybe aickin comment feasibility integrating caching solution directly server renderer", "d": "7/2017"}, {"body": "initial react release mostly focused compatibility existing apps enable asynchronous rendering yet introduce optin async mode later react way manually enable asynchronous rendering beta", "d": "7/2017"}, {"body": "verkholantsev afaik option", "d": "7/2017"}, {"body": "trysound could tell option could tell direction start research", "d": "7/2017"}, {"body": "verkholantsev provide info enabling async think ready testing still experimenting internally", "d": "7/2017"}, {"body": "import synteticevent flat bundle", "d": "7/2017"}, {"body": "might interesting tried codebase using install package get error hmr one dependencies using works", "d": "7/2017"}, {"body": "import synteticevent flat bundle currently use case using yarn install package get error hmr one dependencies using npm works need details tell something wrong appreciate could provide reproducing project even fails yarn", "d": "7/2017"}, {"body": "gaearon currently use case ex want pass event parent toggle button want modify event pass parent", "d": "7/2017"}, {"body": "far everything runs smoothly save test cases rendered components depend results dependency errors like app built cra ejected appears place use enzyme tests run equivalent within jest using", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "react enable call api built package like http angular without force use staff like superagent axios", "d": "7/2017"}, {"body": "muhammedmoussa goal react react shipping builtin http client library", "d": "7/2017"}, {"body": "let keep discussion focused beta thanks", "d": "7/2017"}, {"body": "compiled list deprecations removed would helpful checklist upgrading related warning unknown attributes via whitelist still place upgrading start adding dom without warning", "d": "7/2017"}, {"body": "compiled list deprecations removed would helpful checklist upgrading think changes entry points eg shallow renderer test utils moved believe mentioned blog posts related warning unknown attributes via whitelist still place upgrading start adding dom without warning sort air right think make decision shipping next beta", "d": "7/2017"}, {"body": "flat builds interfere scope hoisting app bundlers wondering sure much gain presume bundler would figure statically parts react used app removed probably tall order", "d": "7/2017"}, {"body": "wmertens flat bundle scope hoisted continue hoist basically concatenating modules one file ensuring variable name overlaps fully compatible bundler", "d": "7/2017"}, {"body": "app built cra ejected appears place use enzyme tests run reactscripts test envjsdom coverage equivalent mount shallow within jest using worth enzyme supporting react like previous releases huge refactor underway includes support react", "d": "7/2017"}, {"body": "large application ran perfectly except unit tests depend looks like biggest blocker point", "d": "7/2017"}, {"body": "seems nt work correctly production mode dev works fine js const react require react const reactserver require reactdomserver const reactcreateelement div classname signlink id signlayoutlink style position absolute reactserverrendertostring typeerror function f b erenderdom erender eread objectt rendertostring contextifyscriptscriptruninthiscontext", "d": "7/2017"}, {"body": "server renderer nt yet support returning arrays strings components mean nt support root component ie ssr could really bad break array returns life ssr", "d": "7/2017"}, {"body": "large application ran perfectly except unit tests depend enzyme looks like biggest blocker point flarnie spoke leland enzyme afternoon seems like good spot release staying touch beta", "d": "7/2017"}, {"body": "server renderer completely rewritten offers streaming mode streaming mode specific nodejs ie use apis available node could work environments example people using reactjsnet reactrails react java", "d": "7/2017"}, {"body": "error hit moderately sized app points code open frame looks like reactmodal library lines exactly top file unstable api look tomorrow well might false positive update react reactdom look tomorrow see provide details great work yall", "d": "7/2017"}, {"body": "jlongster code screenshot nt beta stack frames cited must two copies reactdom one new one old might help find", "d": "7/2017"}, {"body": "ah ok thanks check tomorrow computer anymore", "d": "7/2017"}, {"body": "maybe aickin comment feasibility integrating caching solution directly server renderer dmitrif think certainly conceivable implement caching solution server renderer nt think amenable monkey patching renderer basically one file really important fork code hopefully consider contributing back also worth noting preliminary tests renderer faster renderer possible may much need caching", "d": "7/2017"}, {"body": "mean nt support root component ie ssr falconmick believe nt support anywhere tree right known issue believe means get fixed release anyone core team please feel free correct", "d": "7/2017"}, {"body": "think server browseronly apis nodestream browsernode apis naming entry points nt great may change final", "d": "7/2017"}, {"body": "aickin falconmick plan anyone wants work adding happily review pr", "d": "7/2017"}, {"body": "streaming mode specific nodejs ie use apis available node could work environments example people using reactjsnet reactrails react java streaming renderer indeed depend readable api node info streaming api check documentation however note underlying code renderer function output n bytes time could theory call stream api want see code uses function check implementation reactmarkupreadablestream proceedatyourownrisk kind thing though internal class reactpartialrenderer supported api could change moment", "d": "7/2017"}, {"body": "great bug able repro machine filed thanks", "d": "7/2017"}, {"body": "try react beta fiber reactnative project", "d": "7/2017"}, {"body": "aakashbapna instructions coming soon currently think build source try", "d": "7/2017"}, {"body": "also seeing issue regarding server production mode function", "d": "7/2017"}, {"body": "hi opened issue reactvirtualized repo thanks", "d": "7/2017"}, {"body": "also seeing issue comment regarding style server production mode fixed go next beta catch issues believe nt support anywhere tree right known issue believe means get fixed release open pr try react beta fiber reactnative project yet please see post react native follows different release cycle update beta future release already using alpha release yet using fiber", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "got unit tests test data returned reactredux conforms underlying component use use testing function directly anything could moving forwards replicate functionality", "d": "7/2017"}, {"body": "docs new edit", "d": "7/2017"}, {"body": "teasealancs got unit tests test data returned reactredux mapstatetoprops mapdispatchtoprops conforms proptypes underlying component something like trigger proptypes validation failure use output warning override tests throw unexpected errors", "d": "7/2017"}, {"body": "fair enough stubmonkey patch something fundamental leaves bit sour taste mouth", "d": "7/2017"}, {"body": "think actually necessary provides firstclass api running checks fact react uses look warning message get call directly says calling proptypes validators directly supported package use call mentioned proptypes readme absolutely need trigger validation manually call unlike validators function safe call production replaced empty function hope helps", "d": "7/2017"}, {"body": "spicyj right two versions react made sure everything next mostly working still hit error one case use reactmodal library try close modal errors line code error happening reason looks like null unfortunately created small test case try reproduce library works fine independently app nt know fault definitely worked sorry ca nt reproduce small test case wanted report bug case gives context possible bug", "d": "7/2017"}, {"body": "gaearon get introduced swear never saw message p", "d": "7/2017"}, {"body": "teasealancs think right always exist sorry", "d": "7/2017"}, {"body": "fair enough started originally", "d": "7/2017"}, {"body": "jlongster chance could put breakpoints around assignments figure becomes", "d": "7/2017"}, {"body": "errors packages trying use beta releases addons libs", "d": "7/2017"}, {"body": "gaearon found function reactmodal calling returns null stepped call found returning null right stack trace helps checking see child property basically returning returns null reason hope nt false positive wasting time", "d": "7/2017"}, {"body": "gaearon jlongster bet caused changes oh slow", "d": "7/2017"}, {"body": "wbeard reactlib problems reactaddons packages trying use beta releases addons libs packages compatible react already versions use internals think try update addons incompatible react eg need stop using", "d": "7/2017"}, {"body": "jochenberger think issues related code rewritten scratch past issues probably apply jlongster thanks useful let take look probably ask info screenshots want mention longer term going away takes place solves timing issues like understand encounter bug clear yet", "d": "7/2017"}, {"body": "gaearon think actual bug ever want even remotely control machine take look happy let", "d": "7/2017"}, {"body": "gaearon thanks addons temporarily incompatible deprecated", "d": "7/2017"}, {"body": "wbeard addons specifically info happy answer specific questions thread jlongster yes would great free hop dms", "d": "7/2017"}, {"body": "gaearon sorry precise asking using following addons read issue get speed see needs cut", "d": "7/2017"}, {"body": "yes stop using rest keep working plan yet likely time", "d": "7/2017"}, {"body": "worries used devonly middleware come different strategy likely using marks", "d": "7/2017"}, {"body": "wbeard fwiw react beta always emits calls dev capture using performance observer api see proof concept", "d": "7/2017"}, {"body": "gaearon think behavior continue future releases", "d": "7/2017"}, {"body": "wbeard behavior", "d": "7/2017"}, {"body": "gaearon always emits performancemark performancemeasure calls dev", "d": "7/2017"}, {"body": "know start people get inconvenienced add optout api like try keep default", "d": "7/2017"}, {"body": "zyzski open react devtools use search find indeed html element maybe intended use", "d": "7/2017"}, {"body": "lestad ex want pass change event parent toggle button advantage using fact would recommend pass event objects around get pooled read data early pass plain object representing data care", "d": "7/2017"}, {"body": "update published fixes ssr crash please give ssr another test round", "d": "7/2017"}, {"body": "true use reacthotloader latest version react get place obviously reacthotloader uses deprecated references working beta though wondering", "d": "7/2017"}, {"body": "coldi yes rhl depends internal modules exist anymore", "d": "7/2017"}, {"body": "gaearon want emulate event", "d": "7/2017"}, {"body": "lestad specific reason want emulate event could always build mock event object fields intend consume", "d": "7/2017"}, {"body": "reelgood recently switched react beta prod yet experience irregularities yet awesome work react team", "d": "7/2017"}, {"body": "looking forward making switch awesome job", "d": "7/2017"}, {"body": "note still known issues top", "d": "7/2017"}, {"body": "testing working well us main issue lack community solutions documentation around warnings displayed warnings nt provide enough information understand occurring solve posted warning encountered stackoverflow expect server html contain div gt", "d": "7/2017"}, {"body": "support older browsers devices may yet provide natively eg mean lt", "d": "7/2017"}, {"body": "davidfurlong means server rendered html matching markup client create small reproducing example look", "d": "7/2017"}, {"body": "gaearon ah upgrade similar errors react gave first two places stringifyed client server renders differed found errors past insufficient debugging code renders differ one point even modified local compiled react source code truncate diffs sometimes seems necessary client server renders differ libraries nt support ssr thus wrap hoc renders null server thus expect expected behaviour bug", "d": "7/2017"}, {"body": "davidfurlong issue better ssr validation warnings might make final release libraries nt support ssr also render first render eg js componentdidmount thissetstate hasmounted true render return hello thisstatehasmounted amp amp ideal works around problem", "d": "7/2017"}, {"body": "render null server need initial render client could use eg reduxmediaquery manage fri jul pm david furlong notifications githubcom wrote gaearon ah upgrade react similar errors gave first two places stringifyed client server renders differed found errors past insufficient debugging code renders differ even one point modifying local compiled react source code truncate diffs sometimes seems necessary client server renders differ libraries nt support ssr thus wrap hoc renders null server receiving mentioned reply email directly view github mute thread", "d": "7/2017"}, {"body": "support older browsers devices may yet provide natively eg mean lt graingert ie basic support require polyfillying react purposes incorrect let know update instructions top", "d": "7/2017"}, {"body": "anyone else seen one using reactstraps popovers", "d": "7/2017"}, {"body": "please provide small example reproducing", "d": "7/2017"}, {"body": "gaearon one better make staging branch app give", "d": "7/2017"}, {"body": "look stack trace shows files causing issue make sure one one", "d": "7/2017"}, {"body": "gaearon meh try clean per chance super easy way im aware", "d": "7/2017"}, {"body": "rm nodemodules install check fri jul pm clark tomlinson notifications githubcom wrote gaearon meh try clean per chance super easy way im aware receiving mentioned reply email directly view github mute thread", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "actually package im using requires react directly making pr move peer deps thanks pointers though guys", "d": "7/2017"}, {"body": "either confused intimidated bullet point states safe rerender container modified something react worked previously cases never supported explicit error thrown mean guys actively allocating resources validate dom modified something like jquery plugin", "d": "7/2017"}, {"body": "wiredearp means something like browser extension mutates dom outside react awareness case react ca nt function correctly react explicitly errors rather trying possibly failing work warns potentially able function correctly", "d": "7/2017"}, {"body": "bvaughn sounds like people need defend jquery extensions shadow dom similar", "d": "7/2017"}, {"body": "bvaughn wiredearp assuming bullet point refers actually warning error also specifically looks whether root element rendered react container pass example mutated container element react would warn nt affect manual dom mutations may leaf nodes example", "d": "7/2017"}, {"body": "note bvaughn example also nt process second call even though issue warning erroring processing update", "d": "7/2017"}, {"body": "right aweary thought throwing error rather warning cc flarnie context", "d": "7/2017"}, {"body": "aweary fair amount discussion agree behavior either throw error succeed way users expect reach agreement adding warning better leaving silent failure add item revisiting", "d": "7/2017"}, {"body": "observed application reactdomrender called componentdidmount return null instead reference component expected change think presented release notes", "d": "7/2017"}, {"body": "make sure safe side render empty using react leaf node populate div using nonreact plugin still supported", "d": "7/2017"}, {"body": "arendjr render empty using react leaf node populate div using nonreact plugin still supported yes still supported like strategies document supported fix code", "d": "7/2017"}, {"body": "abramobagnara observed application reactdomrender called componentdidmount return null instead reference component expected change think presented release notes list known issues since closed wontfix added list breaking changes", "d": "7/2017"}, {"body": "react finally keep native change events even inconsistent browsers honestly really annoying", "d": "7/2017"}, {"body": "cases error null reported instead real error bvaughn gaearon case errors unless run production build production build works expected development error always stacktrace correct though reproducible minimal example note branch", "d": "7/2017"}, {"body": "michalzalecki could serving react script different host eg cdn would problem", "d": "7/2017"}, {"body": "caub react finally keep native change events even inconsistent browsers plan something like fit might deprecate change behavior", "d": "7/2017"}, {"body": "gaearon saw single file build served locally", "d": "7/2017"}, {"body": "gaearon ah great nice kind stuff", "d": "7/2017"}, {"body": "gaearon installation instructions updated using cdn point cdnjs instead unpkg backends hosted cloudflare really nobrainer documentation update benefits general community moved official js apis cdnjs unpkg standardized consistent cdn location documentation ensures cache remains hot users cdnjs support sri unpkg maintains parity standards additionally since cdnjs standard mainstream js libraries using cdnjscloudflareorg allows reducing headers csp also currently alphasbetas published cdnjs team member update config get working", "d": "7/2017"}, {"body": "virgofx looks like cdnjs currently pulls contain alphasbetas someone might want update cdnjs configuration pull npm rather reactbower repo cdnjs opensource communitymaintained anyone send pull request update react cdnjs config example cdnjs config pulls npm note property", "d": "7/2017"}, {"body": "yes see get cdnjs updated hopefully get documentation updated point well know include cjs umd folders", "d": "7/2017"}, {"body": "general community moved official js apis cdnjs unpkg standardized additionally since cdnjs standard mainstream js libraries using cdnjscloudflareorg allows reducing headers csp context see one could standard third party cdns anything unpkg serving contents npm registry primary distribution channel react consistent cdn location documentation ensures cache remains hot users believe documentation internally consistent use unpkg everywhere cdnjs support sri unpkg maintains parity standards sure standard parity referring welcome raise issue sri unpkg repo find important personally experienced issues sri sure important use docs also currently alphasbetas published cdnjs team member update config get working think would best bring cdnjs maintainers like see alphas react putting cdnjsspecific things react files cdnjs welcome use information npm releases like unpkg today thankful contribute make work said want thread turn discussion different cdns welcome raise another issue feel strongly let keep focused reporting issues trying react beta applications libraries", "d": "7/2017"}, {"body": "putting cdnjsspecific things react packagejson files configured cdnjs end changes required react side", "d": "7/2017"}, {"body": "might consider linking raf example full requestanimationframe polyfill used previously without issues setup requires adding following next map set polyfill imports", "d": "7/2017"}, {"body": "extra work required get react beta cdnjs exactly created unpkg first place zero config let package authors focus improving libraries instead configuring cdns unpkg currently serves requests per day react particular sure cache always hot sri support get added soon possible first time anyone asked", "d": "7/2017"}, {"body": "mjackson extra work required get react beta cdnjs extra work onceoff configuration someone needs update cdnjs load react npm rather bower repo configured cdnjs automatically grabs packages npm soon published", "d": "7/2017"}, {"body": "extra work onceoff configuration someone needs yep thing referring someone publishes lot packages npm work trying avoid unpkg", "d": "7/2017"}, {"body": "mjackson unpkg definitely useful convenient appreciate effort helping community know bunch github threads mention sri last year concern lot transition cdnjs regardless backend still cloudflare really nt matter end thus technical standpoint differences cdnjs unpkg provider cloudflare cloudflare modification header cache expiration days days sri support api web sts support xcontenttype extra headers note yes sri needs api support web ui support backend changes allow buidci fetch values added projects htmlasset refs processing updating config cdnjs options available react team wants move documentation reference", "d": "7/2017"}, {"body": "virgofx read sri spec morning afaict unpkg nt actually need anything support sri sri integrity resource calculated browser see matches value attribute elements words whether use sri completely client use following tags load react unpkg right using sri html also see use working demo one thing guess could make easier people would include readymade tags already include sri value people nt calculate nothing preventing react website including attribute tags use unpkg", "d": "7/2017"}, {"body": "let keep future comments focused react beta interesting discussion though happy continue another issue", "d": "7/2017"}, {"body": "particularly interested hearing performance differences notice nt expect massive changes would love know improvements regressions please report finished installing seeing reduction serverside rendering response times app depending page thanks hard work", "d": "7/2017"}, {"body": "applies documentation especially first paragraph overview short remark page would helpful well", "d": "7/2017"}, {"body": "srittau would like send pr making clearer docs", "d": "7/2017"}, {"body": "react component lifecycle hooks synchronous nt support async hooks rather nt block way fiddle assumes working designed still perform async operations rendering anything meaningful component want although probably things since may called components never end mounting see explanation", "d": "7/2017"}, {"body": "bvaughn thanks", "d": "7/2017"}, {"body": "modified ran would end new copy reactnativespinkit without modifications correct way fix warning would file issue pull request asking release update npm change described case looks like someone already done see issue pull request going close issue nt require action react team", "d": "7/2017"}, {"body": "sorry right however tried running command still produced error even though changes certainly place file", "d": "7/2017"}, {"body": "possible message caused another lib sure", "d": "7/2017"}, {"body": "according logs reactnativespinkit", "d": "7/2017"}, {"body": "personally nt think needs react docs least syntax highlighters like babel plugin sublime nt handle nested elements like without wrapping atom seems okay though nt strong feeling defer others", "d": "7/2017"}, {"body": "also nt feel important enough document note already document pattern form omits curlies", "d": "7/2017"}, {"body": "makes sense thanks", "d": "7/2017"}, {"body": "basically want get rid library move functionality things getting hard read declare component class name creating component", "d": "7/2017"}, {"body": "hi works one maybe two elements need two code gets hard read well mention find names variables basically meaning react currently support adding middleware core need modified thu jul ian howell notifications githubcom wrote basically want get rid classnames library move functionality react things getting hard read declare component class name creating component const xclassname classnames foo bar bars foo return receiving authored thread reply email directly view github mute thread gt victor barbu", "d": "7/2017"}, {"body": "could give example middleware could work", "d": "7/2017"}, {"body": "well honestly nt know codebase react could nt opinion know need", "d": "7/2017"}, {"body": "meant could give example would use would want implemented", "d": "7/2017"}, {"body": "well mentioned types accept", "d": "7/2017"}, {"body": "problem baking react third party components need understand example wants add class keeping helper separate keeps app control turn string baking reactdom makes hard libraries manipulate still passed around", "d": "7/2017"}, {"body": "solution proposing also accepts classname string change would add behavior change current one thu jul dan abramov notifications githubcom wrote problem baking react third party components need understand example wants add bootstrapbutton class keeping helper separate keeps app control turn string baking reactdom makes hard libraries manipulate classname still passed around receiving authored thread reply email directly view github mute thread gt victor barbu", "d": "7/2017"}, {"body": "change would add behavior change current one nt change behavior classname dom nodes intermediary components gaearon pointing example lets look implementation would look safe currently everyone assumes string proposal would mean case may string object array objects strings assuming copy api completely owner needs check type adding class", "d": "7/2017"}, {"body": "ok see point would possible convenience writing less code instance component like proposing convert classname string componenta constructor sees thu jul jason quense notifications githubcom wrote change would add behavior change current one nt change behavior classname dom nodes intermediary components gaearon pointing example lets look implementation would look const button classname props gt safe currently everyone assumes classname string proposal would mean classname case may string object array objects strings assuming copy classnames api completely button owner needs check type classname adding class receiving authored thread reply email directly view github mute thread gt victor barbu", "d": "7/2017"}, {"body": "would conversion happen", "d": "7/2017"}, {"body": "maybe need", "d": "7/2017"}, {"body": "previously reactdomrender would return top level component longer case impression return value still works said component never passed callback referring argument passed mostly historical curiosity would write code either still work bit future proof flexible eg lets access nested components hope helps", "d": "7/2017"}, {"body": "gaearon thank answers true still returns component eslint rules place throw warnings used fashion since future proof suppress manually optimal able pass receive instance component already probably use callback mentioned function rendersomething instance container gt return new promise resolve reject gt try reactdomrender instance container function resolve catch e reject e rendersomething container gt one reference component scenario need tests like avoid extra boilerplate callback gem work arrow functions though", "d": "7/2017"}, {"body": "eslint rules place throw warnings used fashion since future proof enforcing rules fb codebase may long time actually deprecate return value ever sure reasonable keep lint rule enabled codebase causing troubles think come convenient api actually decide deprecate return value ever one reference component scenario need tests like avoid extra boilerplate would recommend keep using return value even eventually deprecate product code pretty sure keep around tests always run synchronously maybe could turn lint rule tests", "d": "7/2017"}, {"body": "gaearon see impression critical also enabled default seems overly pushing move away using fashion anyway going disable corresponding lint rule move thanks", "d": "7/2017"}, {"body": "think time thought would go away sooner sticking even slightly discouraging product code", "d": "7/2017"}, {"body": "hmm seems like spoke soon case seems like would best solution able pass ref receive instance component already probably use callback mentioned minor technical correction receive element instance instance want get access receive element clone different ref js function clonewithref element newref const oldref elementref return reactcloneelement element ref value typeof oldref function oldref value newref value const originalelement could argument const element clonewithref originalelement inst gt inst something component reactdomrender element container", "d": "7/2017"}, {"body": "tell use instance tests usually tests done wrapper eg enzyme calling methods", "d": "7/2017"}, {"body": "ui component uses events need plug dom testing setup let container function renderintodocument element container documentcreateelement div documentdocumentelementappendchild container return reactdomrender element container teardown aftereach gt container reactdomunmountcomponentatnode container container null something like could actually pass props assume change accessing would easy without need clone new ref", "d": "7/2017"}, {"body": "hmm find via advantage via react", "d": "7/2017"}, {"body": "gaearon actually never thought given rendering may asynchronous best way go add use callback notified element rendered kind lookup either using dom query directly via", "d": "7/2017"}, {"body": "gaearon thanks helping consider solved given worse case always clone element new ref really easiest render component inside render function simply pass props arguments need override ref via cloning whatsoever ie", "d": "7/2017"}, {"body": "given rendering may asynchronous best way go add ref use reactdomrender callback notified element rendered yep", "d": "7/2017"}, {"body": "reactdomclientinjection required reactdomserverentry event plugin loaded line validate passed warn think might require reactdomclientinjection reactdomserverentry load event plugin solve problem add follow code reactdomserverentry", "d": "7/2017"}, {"body": "oh see nt want client injection keep server renderer small realize needs event system dev interesting", "d": "7/2017"}, {"body": "injection event system plugin eventpluginhubinjectioninjecteventpluginsbyname simpleeventplugin simpleeventplugin enterleaveeventplugin enterleaveeventplugin changeeventplugin changeeventplugin selecteventplugin selecteventplugin beforeinputeventplugin beforeinputeventplugin found import much less use module ssr", "d": "7/2017"}, {"body": "gzhappysky thanks diagnosing comes think fix", "d": "7/2017"}, {"body": "nt sound related react would suggest ask elsewhere eg stackoverflow nt think work around something like react level since problem browser dom implementation check third party component anything would recommend ask component completely remove check instanceof check even expected work cases example app working across iframes global element", "d": "7/2017"}, {"body": "work js let instance const tree renderercreate use instance", "d": "7/2017"}, {"body": "gaearon thank", "d": "7/2017"}, {"body": "something like setstate thisstate k whatever mean root indexing array k points indexing value stored index array repeat process", "d": "7/2017"}, {"body": "worked use worked thank", "d": "7/2017"}, {"body": "hzwmyproject mutate state better help use less nested state also issue tracker please use stackoverflow questions javascript", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "worked thx trysound another problem like change k", "d": "7/2017"}, {"body": "similar array map method", "d": "7/2017"}, {"body": "helped thx", "d": "7/2017"}, {"body": "hi maxlength works browser inputs better worse react nt anything passes attribute input prevents user typing paste specific length setting value programmatically", "d": "7/2017"}, {"body": "remove properties input work fine moment set properties making react controlled component charge making validations bug side note want go ahead validation simply add call string value setstate way chop input every time type effectively desired validation", "d": "7/2017"}, {"body": "hey odykyi request made facebookjsx requires change jsx spec react utilizes note looks like already open issue request additional feedback clarifications request please direct open issue thanks", "d": "7/2017"}, {"body": "hello suppose using module bundler presumably webpack uses css loader handles type imports normal webpackdevserver bundles whole application exposes bundlejs file bundlejs time visiting page webpack already bundled code triggered cssloader extracts css imports injected page answering question please provides us context modulebundler using example", "d": "7/2017"}, {"body": "using create react app yes css code files concatenated one css file production hope helps question module bundler presumably webpack rather react use issue tracker bugs feature requests react close suggest ask questions like stackoveflow people see", "d": "7/2017"}, {"body": "thanks mehdialouafi used webpack answer helpful way add remove css visiting leaving page", "d": "7/2017"}, {"body": "might help make updates faster cost init time know metric important however plugin consistently buggy babel think babel fixes known issues yet use seems like fine thing note relies symbol polyfilled seems like good idea dangerous code relies enumerating logic run make sure depend code use lint rules prevent adding code seems okay changes semantics somebody could get class optimization breaks code generally unsafe used lot caution think anything similar naming different things hope helps", "d": "7/2017"}, {"body": "thank much reply helps lot transformreactpureclasstofunction mentioned think anything purecomponent similar naming different things transformreactpureclasstofunction benefit except said unsafe used lot caution know function always rerender like component without override willcomponentupdate tell pure component semantics perspective understanding may right say given understanding would use purecomponent instead function cause tell pure component also give performance benefit shallow compare question comes back transformreactpureclasstofunction benefit could say use function", "d": "7/2017"}, {"body": "say given understanding would use purecomponent instead function cause tell pure component also give performance benefit shallow compare data structured way shallow comparison often returns true tree deep yes might better case build whole app though", "d": "7/2017"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources case enough information help provide full reproducing example someone might able take look case bug tracker best place answers get lost", "d": "7/2017"}, {"body": "verified issue occur without react", "d": "7/2017"}, {"body": "yes see jsfiddle", "d": "7/2017"}, {"body": "implementation detail may change future versions current release batched together inside react event handler react batches setstates done react event handler applies exiting browser event handler current version several setstates outside event handlers eg network responses batched would get two rerenders case exists temporary api force batching write calls batched expect remove api future instead batch everything default hope helps", "d": "7/2017"}, {"body": "couple issues would overcome make possibility host specific whereas generic would need convert injected reconciler mounting would probably really tricky error prone react side user side reactdom components return would return components relatively cheap since return instance turn much expensive lookup call could cause performance issues difficult fix opaque developer writing sfcs consider explain well context reasoning behind", "d": "7/2017"}, {"body": "could exist persistent cache property fiber copied diff cost would initial findhostnode call initial tree creation say would highest child node null could text node perhaps dev warning sfc nt return root element add span something stateless nt prevent us able access rendered output orthogonal think", "d": "7/2017"}, {"body": "goal functional components able create fibers future cases think store data associated functional components", "d": "7/2017"}, {"body": "gaearon data stored somewhere tree though right otherwise would nt able diff occurred supporting callback refs sfc would help solve problem since time lookup would need happen initial mount consumer handle reference", "d": "7/2017"}, {"body": "otherwise would nt able diff react diff composite props diffs props host components eg imagine function calls store data still allow express thing", "d": "7/2017"}, {"body": "gotcha callback ref still solve issue believe since point time responsibility maintaining reference consumer", "d": "7/2017"}, {"body": "supported element chrome warning notifies browser simply nt support says react nt ca nt anything", "d": "7/2017"}, {"body": "nt think react issue chrome nt yet support time element", "d": "7/2017"}, {"body": "linking date time input types include timeelement", "d": "7/2017"}, {"body": "linking date time input types include timeelement woops says basic support since chrome", "d": "7/2017"}, {"body": "seems like wrong verify browser becomes htmlunknownelement", "d": "7/2017"}, {"body": "looking page", "d": "7/2017"}, {"body": "syranide someone changed wow timing anyway closing issue warning quite annoying though", "d": "7/2017"}, {"body": "warning generally useful catches common beginner mistake using lowercase elements warning appear every render appears every render deduplicate guess could also special case time since going ship chrome people commonly use assuming works want submit pr consider", "d": "7/2017"}, {"body": "warning generally useful catches common beginner mistake using lowercase elements true warning learnt something new warning appear every render appears every render deduplicate appears every render want submit pr consider guidance files start looking guess could also special case time could elaborate mean", "d": "7/2017"}, {"body": "search codebase fragments warning text find emitted special casing mean mute warning specifically", "d": "7/2017"}, {"body": "nt think react issue chrome nt yet support time element groupsgooglecomachromiumorgforumm noticed couple months ago mentioned twitter time someone pointed chromium issue says nt plans implement moment edit looks like dan pr links newer threads probably safe ignore comment", "d": "7/2017"}, {"body": "fix", "d": "7/2017"}, {"body": "hey far tell seeing expected behavior objects arrays create local variable creating copy value creating another reference original value array nt matter mutate array using reference still mutating exact js thisstatetestsplice since reference value case removing first element array using call trigger new render render new value even though nt call update value via mutation typically recommend mutating lead confusing behavior use nonmutative method like create local copy instead use update value example hope helps", "d": "7/2017"}, {"body": "thank much nt know javascript handles array object assignments references time thinking react issues thank much clearing workaround suggested", "d": "7/2017"}, {"body": "try regular js also show issue react however shows put font family name quotes mdn font family names containing whitespace quoted hope helps", "d": "7/2017"}, {"body": "thanks helps although putting press start without quote works even space different tests wont work without quote space number anyway work around thanks", "d": "7/2017"}, {"body": "reproduce umd locations changed would", "d": "7/2017"}, {"body": "robbertbrak use jsfiddle loads starting point try reproduce later well also key event test site great thanks sharing", "d": "7/2017"}, {"body": "cc flarnie spicyj also might context", "d": "7/2017"}, {"body": "gaearon yes still reproducible react next jsfiddle get issue sorry horrible code fiddle seems jsfiddle babeljsx nt work well together aweary glad help actually got site hellendag referred", "d": "7/2017"}, {"body": "great resource handful open issues related composition events something need look good candidate dom fixtures thanks bringing attention", "d": "7/2017"}, {"body": "additional thanks helpful draftjs project also open issues related composition korean ime particular could hard track issue actually react", "d": "7/2017"}, {"body": "would great way simulate dom fixtures type special layouts", "d": "7/2017"}, {"body": "nt good way simulate without sidestepping exact thing want test first place cc msmania might interested", "d": "7/2017"}, {"body": "could use language keyboard settings osx simulate input settings use", "d": "7/2017"}, {"body": "browser provides rather different events depending browseroskeyboard combo way test properly get real copy set keyboard input proper language example past broken korean input chrome windows trying fix korean input chrome mac would think", "d": "7/2017"}, {"body": "yes gets worse apparently even versions behave example made screenshot see emitted wrong korean character event luckily seems microsoft fixed later versions similarly used bug moved cursor position right event typing korean recently fixed well means hard draftjs right thing relies correct javascript events fired workarounds appropriate one browserosime may work combinations suddenly stop working", "d": "7/2017"}, {"body": "thanks spicyj looping discussion think one know issues let see", "d": "7/2017"}, {"body": "also confirmed data property composition end wrong issue fixed family mentioned comment bug particular issue break behavior react draftjs actual issue know type dufma draft editor text \uc5ec\ub974\ub984 committed expected text \uc5ec\ub984 issue still happens root cause issue fallback logic react go well korean ime fallback logic pick element text compositionstart cache pick element text compositionend diffing cached value build beforeinput event diffed character scenario typing dufma korean ime text compositionstart \u3147 text compositionend \uc5ec\ub974 thus diffed result \uc5ec\ub974 result beforeinput event fired text \uc5ec\ub974 though second character \ub974 committed react use data property composition events probably react trust", "d": "7/2017"}, {"body": "na\u00efve approach would automatically apply html attribute props composed component outermost container probably ideal better solution would automatic prop passthrough default allow developers override specific props see fit benefits twofold honestly propagating props think send pr libraries default maybe nt allow customization purpose think something better handled component creators side rather core react imo passing automatically html attributesprops components default solution first know specific html attributesprops react keep somekind whitelist html props know using nt want keep depending whitelist error prone finally whole point react isolation component outside component restrictive permissive depending use case component defined something solved already component authors without involving core react", "d": "7/2017"}, {"body": "agree bjrmatos example would pass second react pass props would first would class", "d": "7/2017"}, {"body": "passing props core react think would adding special domspecific behavior make sense react native react vr might seem like convenience tricky debug also clear way always tell props example element created outside render method belong component would confusing hoisting element outside component would change props encourage file issues specific libraries pointed commenters congratulations first issue filed close reasons happy answer questions", "d": "7/2017"}, {"body": "thank much reading commenting helped understand better tradeoffs convention configuration nt use react anything web point platforms eg vr particularly important also heartened issue question legitimate sense considered good practice allow bjrmatos definitely send prs libraries know ton ones think agree convention unless said good reason gaearon nt really found resources including official react docs mention important developer usability think worth official stance perhaps section docs best practices creating components thirdparty consumption wondering best place information obviously could write blog post wo nt reach many people", "d": "7/2017"}, {"body": "arguments libraries might want expose way change class name breaks encapsulation makes slightly fragile example less safe library change css styles might unexpectedly clash styles applied via provided class name argument might consumer always able customise third party control appearance sure agree let say true case limited root element believe might necessary customise element component root one could make class names configurable lot props couples third party component callsites strongly html structure seen implementation detail app relies see clear answer tradeoffs believe best let library authors navigate personally opinion customising class name great api would much prefer library offers flexibility via props eg consistent appearance rely without coupling internal dom structure", "d": "7/2017"}, {"body": "gaearon fair enough thank detailed reply guess end day need attribute badly enough wrap component componentelement said attribute extra overhead small compared flexibility mentioned", "d": "7/2017"}, {"body": "yep generally feel", "d": "7/2017"}, {"body": "done next major release react called fiber requested features issue repo good read", "d": "7/2017"}, {"body": "closing duplicate", "d": "7/2017"}, {"body": "yep known limitation fixed would interested implementing", "d": "7/2017"}, {"body": "quite sure yet go code give shot", "d": "7/2017"}, {"body": "hi gaearon interested implementing", "d": "7/2017"}, {"body": "either could try send pr would great code reactpartialrenderer", "d": "7/2017"}, {"body": "gaearon tusharsingh completed send pr view online demo address", "d": "7/2017"}, {"body": "cool happy review pr", "d": "7/2017"}, {"body": "gaearon please review pr completed", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "removed svg injection locally compared build sizes looks like save around gzipped size reduction nt think svgspecific files maybe svgspecific config files could extracted", "d": "7/2017"}, {"body": "thing feels would add api sake attributes still working reason exist fileinit size decrease clear people use svg react get real benefits camel casing dom wrapping components argument composites want read compelling svg wrappers seen wild provide drastically different apis raw svg clear common would read svglike property composite practice", "d": "7/2017"}, {"body": "agree feels like weird api hurts adoption use thirdparty libraries svg components since wait dependencies update release think main issue namespaced attributes nt think anything specifically advantageous attributes least nothing svg specific namespaced attributes like ca nt used directly could handle separately think could still get rid least significantly reduce either continuing special case namespaced attributes providing another way define namespaced attributes", "d": "7/2017"}, {"body": "clear common would read svglike property composite practice common use never pass anything like usually comes abstract record data point might also want use table list something ca nt speak everyone would wager usage low maybe ask could handle separately think could still get rid least significantly reduce svgdompropertyconfig either continuing special case namespaced attributes providing another way define namespaced attributes seems like reasonable tradeoff short updating way jsx works hands tied anyway would favor keeping camelcase names namespaced properties also nt appear properties single word name etc least support presently voting vote approach", "d": "7/2017"}, {"body": "regards namespaced properties jsx already supports fine know projects support inferno svg used typed current way handled react instead allowed others import current way optionally react otherwise support default behaviour", "d": "7/2017"}, {"body": "sure mean namespaces supported aware jsx support namespaces", "d": "7/2017"}, {"body": "gaearon supported need enable react transform plugin", "d": "7/2017"}, {"body": "oh think see mean", "d": "7/2017"}, {"body": "suggest use nt anything except possible eventually remove method altogether suggest use gives flexibility including rendering anywhere like help", "d": "7/2017"}, {"body": "yes definitely thank", "d": "7/2017"}, {"body": "unfortunately expected workaround able explicitly unmount calling new portal api coming react wo nt issue", "d": "7/2017"}, {"body": "yes", "d": "7/2017"}, {"body": "clear react decide order actually call render functions need rely displayed order specify", "d": "7/2017"}, {"body": "please follow discussion", "d": "7/2017"}, {"body": "reactdomreactnativeactiveupdates stable api annoying thing apis always hang renderers universal components ca nt use easily without importing renderers dependency injection something want solve", "d": "7/2017"}, {"body": "would kind difficult implement isomorphic api presumably multiple renderers need add listeners growing set flush together think least requires global mutable state might unnecessarily bloatedslow talked wo nt actually problem used add batching used get less batching use case integrating imperative apis directly directly animation apis controlled components know environment used actually bad idea use generic fluxlike libraries async mode already batched default want use indicator library nt support async mode probably redesigned support legacy thing case downside react renderer implementation longer swappable", "d": "7/2017"}, {"body": "stable activeness call expected stable asyncness subtree flag expected unstable", "d": "7/2017"}, {"body": "makes lot sense thanks long compat mode effectively noop takes meaning opt async", "d": "7/2017"}, {"body": "long compat mode activeupdates effectively noop almost sync mode effect b c batched async mode effect b c task priority", "d": "7/2017"}, {"body": "specifically guarantees flush task work ends unlike nested batchedupdates nt noop", "d": "7/2017"}, {"body": "discussed offline bit ideal behavior b c flush means need multiple levels activeness kind like need multiple levels hiddenoffscreen priority disallow nested since likely edge case", "d": "7/2017"}, {"body": "acdlite example nt nested outside might common", "d": "7/2017"}, {"body": "true common case event handlers right active default anyway nt necessary", "d": "7/2017"}, {"body": "hm active right maybe add list sure eg might need sync default", "d": "7/2017"}, {"body": "oh thought yeah figure", "d": "7/2017"}, {"body": "idibidiart could please provide information request use case", "d": "7/2017"}, {"body": "anymore info breaks imagine instances vs dom node check failing tough guess without repro", "d": "7/2017"}, {"body": "got reports production invariant triggering hard say exactly passed try reproduce tomorrow", "d": "7/2017"}, {"body": "first step would mind rewriting terms public api example instead calling function directly could call make assertions dom getting ref input way likely find broke fiber", "d": "7/2017"}, {"body": "left questions", "d": "7/2017"}, {"body": "definitely rewrite tests though intents purposes changeeventplugin tests already say terms public api visible effect whether change events fire per value", "d": "7/2017"}, {"body": "hmmm see thinking making tests still test implementation details like wrappers use sure correct thing passed argument maybe wo nt help already cover scenarios", "d": "7/2017"}, {"body": "well ca nt hurt p see uncovers anything anyway", "d": "7/2017"}, {"body": "tracked cause", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "gaearon take one done tonight tomorrow afternoon use jsdelivr since cdnjs nt support", "d": "7/2017"}, {"body": "use consistency docs honest think might easier since already codepens", "d": "7/2017"}, {"body": "vinnymac could use unpkg use issue template jsfiddle keeping consistent would nice edit gaearon beat", "d": "7/2017"}, {"body": "gaearon yea good idea saw low hanging fruit thought would cut time feel free", "d": "7/2017"}, {"body": "problem fork fiddles send prs update every link easy get wrong accident", "d": "7/2017"}, {"body": "one", "d": "7/2017"}, {"body": "heard fb interested pursuing draconian possibilities bsdpatents license true actually little difference bsdpatents apache license relicensing make little pragmatic difference facebook change however would make much easier licensecautious downstreamers please consider making change", "d": "7/2017"}, {"body": "lacker longer works facebook little trouble figuring would best route look monday thanks raising", "d": "7/2017"}, {"body": "rocksdb dual apache gpl licensed", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "instead switching license apache license liked many people incompatible andor duallicensing gpl mess would facebook consider changing patent license make termination clause look like patent license grant institute patent litigation entity including crossclaim counterclaim lawsuit alleging work contribution incorporated within work constitutes direct contributory patent infringement patent licenses granted license work shall terminate date litigation filed would satisfy asf people voice opinion company software projects avoid dependencies use relicensing away bsdlike license prefer asf would rewrite software use dependencies lawyers say ca nt use instead persuading every project ca nt use change license", "d": "7/2017"}, {"body": "asking project would consider changing license apache couchdb others switch away react rather lot work real gain nt choice changing license simple rocksdb completed change day", "d": "7/2017"}, {"body": "asking project would consider changing license understood point instead changing license would asf facebook work arrive acceptable patents file btw way related react project facebook inc apart user", "d": "7/2017"}, {"body": "great question need bod asf legal answer point", "d": "7/2017"}, {"body": "dchest specifically company finds necessary avoid already present react license existing patents file point consternation many asf think point request alleviate licensing concerns cause unnecessary roadblocks adoption", "d": "7/2017"}, {"body": "nevets due oracle america inc v google inc avoid discussing specifics licensing decisions public email leave brave souls andor lawyers decided voice opinion saw opposing opinions posted fact issue concerns changing status quo satisfy one organization needs sure others relicensing license written organization sure osiapproved widely used history alienating open source free software projects nt want happen react trying see middle ground changing patents file way satisfy facebook asf", "d": "7/2017"}, {"body": "many people nt use react immutable etc patents file simplest solution would delete facebook repos", "d": "7/2017"}, {"body": "modified gpllike sharealike patents clause", "d": "7/2017"}, {"body": "recent renewed awareness medical research institutes open source license compliance legal review open source software compliance often expressly asks apache license precisely competently constructed includes equitable patent grants since us based universities rely upon patent licensing part legislatively mandated technology transfer initiatives growing far cautious due diligence reason universities software written react may shunned existing projects using react software may asked remove react software software dependency please strongly consider proposal since rexdb work used major universities wish rework use react alternative", "d": "7/2017"}, {"body": "clarkevans thanks contribution discussion said purpose review ensuring compliance protecting lawsuits worthy goal organization doubt effect licenses open source ecosystem considered think effect important simple bsdlike licenses known cause less friction open source projects fact facebook granting additional patent rights separately copyright license causes problems organizations think worth considering fixing problem patent grant instead switching license incorporates example patent license think might work everyone", "d": "7/2017"}, {"body": "dchest lawyer sure consider bsd license independent additional patent grant intent patents file changes intent even facebook blog refers license bsdpatents use standard bsd license paired additional patent grant open source projects brevity call combination facebook bsdpatents license complicated recent revelation gpl enforceable contract please note sufficient dissent open source initiative approved open source license hence nt think view bsd independently additional patent license added since longer assume implicit patent grant apache license may perfect interest unifying licenses far better adding yet another license surely osi would reject facebook bsdpatent license proposed reality might want instead consider react nonfree expressly addition lots people add additional nonfree clauses bsd license propose osi year almost every case license rejected complying open source standards", "d": "7/2017"}, {"body": "note google grpc relicensed part joining cncf explained reasoning", "d": "7/2017"}, {"body": "osiapproved alternatives facebook licensegrant combo also include upl bsdpatent likely compatible apache license possible suggest avoiding inventing yet legal language", "d": "7/2017"}, {"body": "regarding vague fear unnamed people dchest talking establishing clear compatibility current apache license precisely one main reasons gpl concretely writing yet another license people keep track analyze simply silly especially write one incorporates patent language like apache language top bsd model also like apache language except apache license updated based feedback competent legal counsel", "d": "7/2017"}, {"body": "nevets nt think dchest ever said company found anything problematic apache license said tries avoid work completely different uninformed guess company problem apache apart sourced dmitriy", "d": "7/2017"}, {"body": "minio team would like see change happen object storage browser ui based react apache licensed would unfortunate time consuming migrate lieu new information regarding apache incompatibility please consider relicensing react thank consideration", "d": "7/2017"}, {"body": "harshavardhana think misunderstood situation current license incompatible situation apache software foundation lawyers correction policy makers declared projects use dependencies licensed bsdfacebook patent license people filed issue convince facebook relicense many people consider current license patent grant problematic companies also ban react reason however react used many companies nt problems see also", "d": "7/2017"}, {"body": "close dchest lawyers made choice policy decision disallow fbbsdpatent license mixed software foundation releases users nt think anybody expected relicensing change promulgated internal change policy around particular license", "d": "7/2017"}, {"body": "current license incompatible apache discussion roy fielding added comment discussed license facebook legal counsel bsd relies implied patent grants intentionally incompatible apache license", "d": "7/2017"}, {"body": "request relicense made politely met similar politeness gaearon thank dan understanding expectation change apache couchdb part certainly lot hope relicensing achieved hoping dan connect people like understand facebook internal reasoning process expeditious changeofheart around rocksdb licensing", "d": "7/2017"}, {"body": "wohali sure hope comments considered impolite sorry nt intention important note asf opinion highly valued open source community opening issue simple polite request license change fact request caused asf policy position relicense stop using side effect making people fear current license hope facebook asf arrive mutually acceptable terms however would like see compromise form current bsd license plus changed patents file rather also hope asf proposes option pretty much say unsubscribing thread", "d": "7/2017"}, {"body": "give small update going internal discussions week much say would nt optimistic changing react see kindly agreed provide update discussions", "d": "7/2017"}, {"body": "clarify lot conflicting information going around software licensed includes bsdpatents dependencies internal policy asf making people nervous public statement criticism wellrespected foundation lawyers knowledgable open source licenses", "d": "7/2017"}, {"body": "issue understand react license patent grant narrower prohibits patent suits facebook would licenses still compatible sense used together within work however overall license work call apachereact less permissive react patent restrictions apache software foundation policy distribute software licensed whole terms therefore accept react license project would make project license restrictive", "d": "7/2017"}, {"body": "samuelhorwitz think following links might helpful asf legal notice regarding facebook patentsbsdrocksdb license clarification policy means particular project nt believe judgement criticism host dependency license allow software develop exclusively dependent software uses license nesting dependencies varying licenses difficult task potential confusion point projects within apache software foundation leverage react end user downloads react separately alternative ideal given rocksdb license changed given least impression intent behind bsdpatents license similar apache license seems discussion order determine situation resolved potentially adopting different license way rocksdb recently copiesofcopies laid pretty clearly already put together", "d": "7/2017"}, {"body": "request caused asf policy position relicense stop using side effect making people fear current license people fear build software depends react immutable etc many people ca nt use software patents file poisoning open source ecosystem making way dependencies dependencies", "d": "7/2017"}, {"body": "react originally published apache license people may depended license started using react perhaps automattic calypso people generally asking essentially react related projects original license first released know patent implications given original apache license grant facebook react may worth thinking", "d": "7/2017"}, {"body": "also throw graphql relay react native flow discussion also licensepatent format popular react important open source community people using often used together react edit added flow list", "d": "7/2017"}, {"body": "large companies mine adobe ca nt use react pop etc reason love participate project contribute etc facebook heavyhanded patents clause showstopper", "d": "7/2017"}, {"body": "rome also please", "d": "7/2017"}, {"body": "even midsize companies like mine viasat starting disallow use facebook opensource projects reason like build react web native apps seems sensible legal department recommend agreeing facebook asymmetric patent grant", "d": "7/2017"}, {"body": "compiling list google also banned use react internally despite many teams wanted adopt patents nonsense may changed since left ridiculous obstacle project otherwise much encourage community adoption", "d": "7/2017"}, {"body": "new patent grant changed created specifically feedback google last heard lawyers happy", "d": "7/2017"}, {"body": "consideration rest us whose lawyers nt happy poor form", "d": "7/2017"}, {"body": "sure possible nuclear option forking react patents file addition seems like huge waste else people facebook nt want play ball", "d": "7/2017"}, {"body": "steering council member project jupyter opensource project builds jupyter notebook among things wanting use reactimmutable number jupyter repos patents clause fb licenses continue cause problems corporateorganizational users jupyter lot users nt problem already using react many frustrated get lawyers involved assess risk using jupyter use react world opensource become defacto choice many spheres really painful back land talk lawyers jupyter leadership convinced actual problem fb patent clause mere fact generates friction institutional users jupyter huge problem also artificially limiting adoption usage react libraries license", "d": "7/2017"}, {"body": "want drop personal opinion issue personally think open source world public library real life anybody anywhere freely access gain knowledge maybe without obligations give back knowledge return people help sharing knowledge make world better place know optimistic feel love using open source projects return created dozens open source projects licensed mit license seems simplest common option people like without legal backgrounds course would great get something fact already using many open source projects already gain merely trying give back community feel like right thing really hope react license issue nt become facebook realign license certain large organizations like asf google right thing like react projects facebook ca nt help feel like facebook trying get something adding patents clauses even defensive suggested like finding small note popular book public library saying ever read book future maybe people nt need worry still something unpleasant thing consider love react wish everybody freely use without worries", "d": "7/2017"}, {"body": "consideration rest us whose lawyers werent happy poor form excuse replying comment specifically google understand everyone frustrated issue personally frustrated spend time energy emotional wellbeing legal mumbo jumbo preventing people using react would much prefer spend time working together make better reality situation maintainers react people like interacting issue tracker ones making decisions us show different perspectives issue people make decisions appreciate feedback keep discussion open everyone stays civil respectful thanks", "d": "7/2017"}, {"body": "gaearon understood misinterpreted intent comment appreciate clarification efforts", "d": "7/2017"}, {"body": "make sure stays bit grounded patent grant clause apache license substantively different existing facebook patent grant policy certainly using something standardized would good anyone concerned using react today probably equal concern foss software main difference revocation clause facebook lot broad kinds ip lawsuits activate functional distinction pretty small said srsly use something standardized makes life easier sides", "d": "7/2017"}, {"body": "never written comment like project life unsure hitting comment button good idea please take everything say meant respectfully react wonderful ecosystem want best sincerely believe everyone including facebook best personally frustrated spend time energy emotional wellbeing legal mumbo jumbo preventing people using react keep discussion open everyone stays civil respectful goes without saying discussion remaining civil respectful paramount clear situation nt fun anyone including devs amp lawyers facebook contributors react ecosystem course devs like blocked using reactreact native based patents situation said sentiments expressed sentences quoted go core lopsided problematic situation dismissed legal mumbo jumbo frankly frightening react ecosystem snowballed point incredibly important future literally software development software development never important affects real people real ways facebook terrifyingly powerful force technology extension world facebook expands platforms dominant player keeps react central expansions true problems patent situation emerge example facebook dominates vr closed walled garden positioning happen decide one must use react develop facebook vr platform one must forfeit company wide legal standing regards patents vs facebook one powerful companies world order develop dominant platform day microsoft era dominance one forfeit legal patent standing microsoft order create windows application feel like silly worry wart even typing think logically literally situation today finally suggestion tone discussion around issue gets heated discussion silenced chilling passionate software obviously love react would nt many us poured countless hours work thrown nt change extremely complicated situation tons different parties tons different concerns things getting heated absolutely expected care beg everyone keep discussion civil mature suggestion nt discussion silenced project continue absolutely unacceptable status quo troubling thing read", "d": "7/2017"}, {"body": "dismissed legal mumbo jumbo frankly frightening think missed gaeron point dismissing legal problems expressing super frustrating deal arguments time time time nt magic power change anything magical instead weather storm frustration something control personally would suggest leave thread substantial updates thread topic whether react relicensed many platforms twitter medium emailing facebook legal counsel hacker news reddit etc etc express passion put many hours issue company issues tracker poor tool tracking wide ranging discussion topic produce happened past", "d": "7/2017"}, {"body": "mean dismiss issue apologize previous comment reads trying say bug tracker best venue legal discussion especially since us presume lawyers may see thread way say something facebook talking team people software developers like currently keeping issue open inprogress discussion notify updates however always closed issues past initial discussion want silence keeping open forever achieve purpose heard well passed concerns repeating points different threads help move forward creates lot noise stress maintainers already empathetic cause updates happened past updating grant response initial concerns google companies publishing faq dispel common myths happened outside github issues much internal discussion legal team reevaluating decisions every make sure hear voices asking treat respect keep discussion levelheaded wait decision thanks", "d": "7/2017"}, {"body": "gaearon available venue licensing discussion understand may best place discussion open folks like responsive nt know option conversation appreciate internal discussions facebook matter would love open forum facebook legal group engage react community licensing", "d": "7/2017"}, {"body": "csepulv legal team legalus humanus elusive kind typically found natural private office habitat often leaving hunt food provide shelter", "d": "7/2017"}, {"body": "coderanger make sure stays bit grounded patent grant clause apache license substantively different existing facebook patent grant policy certainly using something standardized would good anyone concerned using react today probably equal concern foss software main difference revocation clause facebook lot broad kinds ip lawsuits activate functional distinction pretty small nonlawyer understanding distinction apache says license grants right use anything patented within software terms license coupled attempt bring patent lawsuits regarding anything software lose patents rights granted license whereas argument bsdpatents clause says along lines attempt bring patent litigation facebook rights use potential patents held software lost asymmetry people concerned concerned parties argue saying patents exchange using react since even though patents evil etc etc may legitimate patent claims company wishes make point facebook affiliate fair facebook really doubt stems sort malice defensive measure ridiculous state patent litigation days also nt change legitimate concerns people either anyway lawyer thought clear outside gpl camps anticommercialopensource camps apache license regarded really good commercial open source license explicit symmetric patent grantlitigation protection clause well explicit trademark protection clause generally lacking good licenses mit license modification either expensive done someone lawyer well contributing license ecosystem complexity", "d": "7/2017"}, {"body": "qxqxqxqx think impolite approach issue make fb change would like place demand", "d": "7/2017"}, {"body": "really hope fb reacts community requests comply reactjs related libraries apache license become hinderance using reactjs unreact", "d": "7/2017"}, {"body": "gstein want know concern something wrong means expression apologize", "d": "7/2017"}, {"body": "gaearon first thank responding keeping things constructive please let add maintainer developeroriented piece open source software sympathize desire discuss code features rather licenses said open source software code issue tracker releases key component open source software licensing write may see thread way say something facebook talking team people software developers like feels like simplification many commenters issue want make statement facebook inc company want discuss one important aspect react framework understand software developers like us best people discuss legal details however would nt logical consequence facebook legal team make decisions become active forum nt possible relevant details pertaining piece open source software discussed open incredibly frustrating important aspect open software discussed behind closed doors", "d": "7/2017"}, {"body": "apologize following already brought seems strange much fuss additional grant top widely used licence legal departs corporations mentioned thread worried every project licensed bsd mit worried particular grant going far enough seems grant ok maybe missing something", "d": "7/2017"}, {"body": "maybe missing something general discussion going license without explicit patent grant carries implied one people opinion", "d": "7/2017"}, {"body": "cardamon keeping short ianal yes seems lot discussions including referred missing concept implicit patent grant projects might missing grant explicit see", "d": "7/2017"}, {"body": "cardamon think apache licence would preference bsd mit et al would permissive licence gives grants patents facebook may cover react project apache permissive licence patent grand clause gives users licence related patents facebook holds protecting caught patent infringement difference apache patent grant facebooks bsdpatent licence understand facebook one weighted towards facebook defacto access patents loose licence facebooks possible react ones sue facebook patent infringement apache cancels patent grant sue based patents directly related project licence essentially apache would best companies facebook current licences lot like apache language broader", "d": "7/2017"}, {"body": "mitsuhiko alexanderkjeldaas mattoakes thanks clarifications", "d": "7/2017"}, {"body": "think major concern technology companies evaluating license compliance requires burdensome maybe impossible degree diligence let say cisco frontend developers router division use react router admin interface year half later webex division notices new webconferencing startup call confco appears using compression technique patented sue preliminary injunction discovery learn confco licensed compression code quickfire facebook subsidiary facebook turns around files counterclaim alleging previouslylicensed use react routers infringing patent license terminated brought suit party confco patent assertion arises whole part software technology product service facebook subsidiaries corporate affiliates cisco patent lawyer kind scenario envision read react license understand risk kind systems need put place organization ensure webex lawyers know risk bringing confco suit cardamon mattoakes mitsuhiko alexanderkjeldaas", "d": "7/2017"}, {"body": "team linkedin also legal troubles using react internal projects would love see change front", "d": "7/2017"}, {"body": "hey thanks patience week coming end unfortunately resolution yet still want point real momentum behind discussion internally going meetings next week escalating engineering directors imagine quite busy taking time thought promise specific conclusion clarity land please know people working getting voice heard", "d": "7/2017"}, {"body": "gaearon probably biggest pain point scenario described copiesofcopies possible get clarification", "d": "7/2017"}, {"body": "thanks following hearing us gaearon", "d": "7/2017"}, {"body": "gaearon regardless outcome anyone stands given sort communication issue given attention much appreciated", "d": "7/2017"}, {"body": "great damage community afraid community split future something like might happen one like blame facebook doubt legal right", "d": "7/2017"}, {"body": "great damage community afraid community split future nt think true years react patent clause nothing stopped evolution many big companies serious legal departments using many people using opinion fear could happen people think facebook somekind conspiration plan please nt get wrong believe react community much better place without fear saying community split another probe fear biggest issue people like drama let hope facebook change licensepatent react us finally say conspiration theory world domination plan", "d": "7/2017"}, {"body": "well sure one ca nt foresee future nt patent clause everybody would happy sinister stuff could happen future clause place one really ca nt sure worst happens would consider fear healthy feeling look oracle vs google java saga example", "d": "7/2017"}, {"body": "throw little info fire take anyone curious tl dr lot bad legal advice going around way much paranoia talking js framework takes functions returns almost html nt arm license", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "lawjolla unfortunate reality many lawyers world pretty sure nt agree", "d": "7/2017"}, {"body": "coreydotcom cases lawyers nt agree solution take risk adverse position possible solution understand problem take reasonable position", "d": "7/2017"}, {"body": "perhaps would follow suit defacto standard open source license avoid contention", "d": "7/2017"}, {"body": "coreydotcom apple uses similar terms reply nt address question", "d": "7/2017"}, {"body": "lawjolla argument good one certain scenarios tricky subject small startup without major funding rewriting product strip react trivial small startup may built product use wordpress example wordpress adopts react currently using build gutenberg project planned replacement main editor wordpress could consequences entire wordpress ecosystem commercial wordpress products yes many small businesses many also acquired bigger businesses wordpress adopts react startups product built top wordpress bigger businesses could back acquisitions legal team raises red flag due diligence react clause already know companies shy away react reason strip react would basically mean rewriting point co lang could decide build instead acquiring company wordpress adopts companies shy away wordpress used react major functionality certainly could afford litigation want take risk adverse path sometimes reasonable path much risk hope fb updates license nobody ever find paper tiger", "d": "7/2017"}, {"body": "carlhandcock argument holds companies start ups nt patent portfolio sue facebook people seem keep missing salient point anything happen need sue facebook good patent claim money file suit money take react nt assuming facebook patents protecting react assuredly nt ca nt show lost profits reasonable royalties", "d": "7/2017"}, {"body": "lawjolla also author somehow assumes patents react doubt true besides issue bigger react applies open source libraries use facebook bsdpatents pretty sure numerous patents filed libraries money take react matter money energy time see asf comments asf says nt want sure money mean like beneficial companies uses asf products nonstandard licensing trend continues big companies open source projects open source projects lose true meaning", "d": "7/2017"}, {"body": "joonhocho author nt assume looked reads single person come forward plausible patent", "d": "7/2017"}, {"body": "lawjolla write toothless claim applies react think related patents patents file found facebook repos immutable graphql jest flow hack hiphop etc becoming part dependencies dependencies dangerous file entire free software ecosystem getting damaged nt think addressed every scenario post also large small tech companies seem disagree least nt ready risk", "d": "7/2017"}, {"body": "lawjolla even saying true creating lot friction ecosystem whether paranoia one obvious example thread numerous threads hn reddit github related react bsdpatents past years many companies including big ones shied away using react reason asf currently challenging people trying change hope", "d": "7/2017"}, {"body": "joonhocho ca nt disagree fighting open licenses even rationale couched unfounded paranoia nt bad thing ton bad legal advice ignorant paranoia fact wo nt risk unsurprising", "d": "7/2017"}, {"body": "lawjolla arguments nt addressed immutable graphql jest flow hack hiphop places file appears", "d": "7/2017"}, {"body": "lawjolla missing point outlined example reply impact business acquisition standpoint small business patent portfolio big business interested acquiring small business could patent portfolio opt acquire small business want deal headache since said could strip react write instead acquiring product rewrite strip react anyway fyi lawyer automattic speaking specifically calypso automattic business states patents anyway automattic wordpress open source project many businesses patent portfolios use wordpress lot many rethink wordpress using open source project introduce key functionality written react looks like possibility gutenberg project beta know answer like said small businesses unlikely patent portfolios big businesses use wordpress", "d": "7/2017"}, {"body": "clear tinfoil hat nonsensical hypotheticals rule issue attempts common sense fall confirmationally biased deaf ears good luck react license ufos faked moon landings", "d": "7/2017"}, {"body": "dennis really nt necessary helpful either", "d": "7/2017"}, {"body": "github issue poor venue discuss legal theory also detracts original request would facebook amenable relicensing react something fbbsdpatents vein nt really anything discuss real discussion internal facebook canshould simply wait decision andor explicit request community feedback", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "kideny unfair facebook also dislike patent react facebook repos right facebook develop deploy graphql react native includes also includes patent maybe future repos includes patent big business", "d": "7/2017"}, {"body": "vuejs good choice mitlicensed open source project free simple use", "d": "7/2017"}, {"body": "preact", "d": "7/2017"}, {"body": "cmon people let stay topic", "d": "7/2017"}, {"body": "fwiw company legal department sees issue us moving forward react current licensing scheme suppose depends product", "d": "7/2017"}, {"body": "thread danger closed doubt please stick topic hand incredibly important issue lot us react team us service allowing us continue communicate let try add pointless input may otherwise hinder progress cause us lose channel", "d": "7/2017"}, {"body": "fwiw company legal department sees issue us moving forward react current licensing scheme suppose depends product lot confusion misleading information around issue got worse blew hn reddit news sites react licencepatents situation different today month ago need switch away react already using question whether company allows use react due licencepatents question company lawyers thing happened apache software foundation lawyers said find licence appropriate projects thus apache software foundation instructed projects move away facebook bsdpatents code august affect several asf projects including couchdb cordova superset incubator issue opened bearing nonasf projects even licensed apache licence", "d": "7/2017"}, {"body": "really nt think issue turned opinion poll licensing situation people already use react want due asf change issues issue already discussed death pretty sure one subscribed issue receive updates licensing situation inbox swamped opinions maybe actual discussions usefulness could elsewhere", "d": "7/2017"}, {"body": "issue request relicense complains find reason make getting something value", "d": "7/2017"}, {"body": "issue us couchdb pmc asking facebook would consider changing license apache software license either remove parts project use react port something else nt happen would much prefer continue using react license changed one asf accepts far simpler asl license making demands threats even commenting wider social legal aspects forum fascinating though response really waiting facebook either directly via suitably authorised member react team many excellent comments thread helps see concern felt others one would welcome thread staying closer original goal", "d": "7/2017"}, {"body": "think understated affecting asf projects affects every single open source project uses react either backend front end includes wordpress ca nt expect users projects respect patent rider ca nt release project bsd license dependency x list basically ca nt license project anything facebook license", "d": "7/2017"}, {"body": "victoriafrench strictly true release software license want license nt affect terms react licensed license software applies users software allowed use react license affects use react users use software", "d": "7/2017"}, {"body": "jayandcatchfire true release wordpress bsd used gpl component become gpl developer creates form plugin wordpress also gpl reality use license x without distributing product license chains standard copyright licensing law every attorney tell thing let move motion picture use video clip nontheatrical license use effects cgi template license cc marvel comes uses cgi template marvel release movie theaters nontheatrical license travels chain called chain title applies copywritten work", "d": "7/2017"}, {"body": "victoriafrench completely agree case gpl gpl viral license also wordpress already licensed gpl none software involved discussion react apache foundation software various companies proprietary software gpl license talking apl bsd neither viral licenses patents file nt change", "d": "7/2017"}, {"body": "lawyers apache made decision licenses incompatible facebook lawyers said much according public discusion apache mailing list linked one previous comments request change license always lot speculation license means many differing opinions facebook faq license made clarification post last updated request per comments discussed internally facebook decide soon enough individuals projects companies decide whether good decision use software license many online discussions topic appropriate forums github issue similarly difficulty leveraging react legal reasons pertaining license would great information add issue comments looking change people minds interpret license nt place would caution anyone leveraging legal opinion issue discussion participants facebook employees nobody made official statement clarifying parameters license thread besides many lawyers github accounts", "d": "7/2017"}, {"body": "nevets clarify foundation say licenses incompatible foundation said projects could depend upon components using fbbsdpatents license would introduce requirements overabove course discussion hereelsewhere several lawyers stated licenses incompatible incorporating larger work means two sets requirements fbbsdpatents larger set requirements perfectly acceptable developers software release policy combination acceptable foundation simple", "d": "7/2017"}, {"body": "open source rely patron sympathy revoked hint conflict either open source project openly collaborate keep closed source softening frankenstein license counterproductive extremely dangerous sets precedent accept additional clauses every open source project use suffer tremendously suggestion much cleaner solution everyone clause paper tiger like claim exist project open approached extreme caution scenarios short apologize adding another opinion suggestion relicense seems wellfounded recently decide react reason shame", "d": "7/2017"}, {"body": "active committer apache superset incubating ex facebooker like couchdb caught facebookasf crossfire would like use react build share truly unlimited surprisefree open source software regardless legitimacy true meaning applicability patent clause like facebook play rule everyone else open source space produce standard conditionfree bsd license react largely unaware issue team chose react superset us backtrack either asf react side would extremely counterproductive worse another option might tiptoe around distributing react releases users build software defer liability option personally based limited understanding legal implications think unethical facebook buy sort patent lawsuit immunity popular open source software also related facebook sticks current patent clause like see license metadata changed reflect something makes clear nt good old use package managers import libs recurse dependencies understand tree licensing implications somehow would bubble something important understand research validate lawyers software foundations", "d": "7/2017"}, {"body": "gstein sure mean facebook told compatible foundation members", "d": "7/2017"}, {"body": "johnament think greg referring definition compatibility says two licenses incompatible logical way combine software components two licenses instance cddl gpl classic case since put limits derived work must licensed limits intersection another definition compatibility upstream policy compatibility problem apache nt know better allow dependencies inhibit field use aspects use patents rider bsdpatents incompatible apache policy nothing however says ca nt use apache licensed component together react happy would wind derived work imposes patent behavior users ca nt bring combination back apache suggest project use outside apache policy confines sum agree", "d": "7/2017"}, {"body": "tdunning could let greg comment intentions reading roy comment licenses compatible one another eg could nt dual license code speculatively includes irrevocable claim fbpl includes explicit revocation clause also probably ca nt include roots partial code potentially revocable", "d": "7/2017"}, {"body": "simple johnament said nevets incorrect asserted lawyers apache made decision licenses incompatible lawyers made declaration referenced asf member lawyer let alone one representing foundation foundation said allow fbbsdpatents policy reasons look nt even think lawyers weighed nothing compatibility foundation made assertions declarations compatibility", "d": "7/2017"}, {"body": "apologies stirring pot gstein wrong impression nt made statement without verifying would nice legal team resources like asf would somehow publicly weigh topic", "d": "7/2017"}, {"body": "worries nevets easy enough clarify unfortunately asf provide legal advice crazy thing legal profession lawyer provide advice either unless client covered retainer agreement see commentary lawyers marked opinion second breath tell retain lawyer advice", "d": "7/2017"}, {"body": "downside heuristic like guess nt work text nodes", "d": "7/2017"}, {"body": "personally makes sense sure argument current behavior reduced api footprint afaik case current heuristic actually beneficial callsite aware expects happen prefer simpler behavior explicit apis however may still good idea mark root dev warning emitted issue yet may issue future using dom source truth nice", "d": "7/2017"}, {"body": "add inside refcallback emit well", "d": "7/2017"}, {"body": "expected functional component ca nt get ref replace class get ref instance though dom node believe refs dom documentation section explains covers cases alternative approaches new warning master nt made release yet future warned add ref functional component", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "hey ccorcos thanks issue nt appear standardized event type react synthetic event system best remain inspec html event standard historically nt include platformspecific events ca nt polyfill supported browsers since falls camp really consider whether could include nt mean ca nt use though may little verbose use refs get reference element add event listener remove", "d": "7/2017"}, {"body": "preliminary conclusion decided write babel plugin removes referenced fall whitelist known modules without side effects seems easier hooking rollup", "d": "7/2017"}, {"body": "everybody use npm", "d": "7/2017"}, {"body": "acmoune help", "d": "7/2017"}, {"body": "bjrmatos thanks meant right trysound npm good idea group", "d": "7/2017"}, {"body": "acmoune", "d": "7/2017"}, {"body": "trysound thank", "d": "7/2017"}, {"body": "hey hieudole believe duplicate issue different context resolved next release thanks thanks", "d": "7/2017"}, {"body": "good", "d": "7/2017"}, {"body": "nice", "d": "7/2017"}, {"body": "question", "d": "7/2017"}, {"body": "time close", "d": "7/2017"}, {"body": "yes happy ok", "d": "7/2017"}, {"body": "needs able handle nested arrays like produce flat array need prefix keys general implementation detail problem since keys stack unique hope helps", "d": "7/2017"}, {"body": "binarykitchen mentioned error usually result swallowed error putting react corrupted state nt called undefined node seeing another side effect corrupted state provide example reproducing error please original issue thanks", "d": "7/2017"}, {"body": "mean could technically reason even legitimate bug tell without minimal reproducing example", "d": "7/2017"}, {"body": "instead reproducible example much work debugged deeper line causes error react component button instance reactbootstrap inside click function internal function called code lines turns conditions nt met hence node instance remains undefined", "d": "7/2017"}, {"body": "undefined case sure passing first place sure exists", "d": "7/2017"}, {"body": "ohhh think see issue think methods ever supported passing component instances supported passing dom nodes read docs simulate event dispatch dom node optional event data confusing throw early pass something else though add early invariant thanks reporting", "d": "7/2017"}, {"body": "aaaah right mistake add early invariant check yeah", "d": "7/2017"}, {"body": "btw makes test work bit ugly works", "d": "7/2017"}, {"body": "gaearon binarykitchen take issue ok beginner react looks like great place dive", "d": "7/2017"}, {"body": "sure sounds good", "d": "7/2017"}, {"body": "think need indonesian languange confused", "d": "7/2017"}, {"body": "sounds like duplicate clear performance benefits expecting particular could expand issue would help", "d": "7/2017"}, {"body": "shipping react modules syntax tree shaking issue shipping react also consumer able transpile using part project way browser run arrow functions classes features natively transpiled code better performance debugging", "d": "7/2017"}, {"body": "ah see mean better performance point related benchmarks far aware features still slower mainstream browsers counterparts additionally react really using either classes arrow functions code convinced makes lot difference debugging", "d": "7/2017"}, {"body": "hey kylekai please nt open duplicate issues gaearon gave answer please refer community support resources linked original issue", "d": "7/2017"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources briefly answer really related react use react existing module system including amd", "d": "7/2017"}, {"body": "use amd react fresh react thanks", "d": "7/2017"}, {"body": "react library need use amd react add react existing amd app way add libraries", "d": "7/2017"}, {"body": "however whole page written react ui libarary page component want render model part need use amd module", "d": "7/2017"}, {"body": "said earlier issue tracker bug reports feature requests question please check community support resources question vague hard give specific answer without minimal project information struggling case react library dictate modules loaded please consult support resources bundler using learn make work amd", "d": "7/2017"}, {"body": "get beta soon week nt recommend using alpha severe known issue infinite loop development mode general nt recommend using yet ready public consumption feel experimental", "d": "7/2017"}, {"body": "quadruplejump example without jsx dropped webpage chrome co supports quite fine", "d": "7/2017"}, {"body": "probably add intro paragraph pages links html page minimal example", "d": "7/2017"}, {"body": "hey rohmanhm seeing expected behavior ca nt add event handlers userdefined components like event handlers added host elements like example component would pass handler host element renders like hope helps", "d": "7/2017"}, {"body": "hi aweary thanks quick response explaining help lot", "d": "7/2017"}, {"body": "glad hear need help recommend checking community support resources great resources issue question", "d": "7/2017"}, {"body": "nt allow incremental upgrade path though upgrade calls even third parties since portal api nt exist used time fair assume others might need imo keep release warn", "d": "7/2017"}, {"body": "used time fair assume others might need fair agree", "d": "7/2017"}, {"body": "hi use issue tracker react bug reports feature requests question please check community support resources particular case nothing seems wrong full example reproducing issue would help read", "d": "7/2017"}, {"body": "gaearon thanks deal guidance", "d": "7/2017"}, {"body": "server rendering application defined serverside could result error", "d": "7/2017"}, {"body": "funny hit similar case hours ago internally think need set hard limit recursion used stack overflows stack turned hangs fiber", "d": "7/2017"}, {"body": "gaearon would go detecting fiber suppose look n updates given period circular contexts maybe need something super lowlevel", "d": "7/2017"}, {"body": "thinking somewhere workloop go many iterations acdlite might better ideas", "d": "7/2017"}, {"body": "depends want count limit want limit put check want limit number components worked put work loop think want limit number times commit put check", "d": "7/2017"}, {"body": "seems responsible lot hangs facebookcom seen several instances components failed hit stable states hangs fiber adding limit would let developers easily attach devtools fix problem wont cause total hang users", "d": "7/2017"}, {"body": "would interested helping sending pr", "d": "7/2017"}, {"body": "interested look threshold raise error though number times commit interval", "d": "7/2017"}, {"body": "think yeah interval body", "d": "7/2017"}, {"body": "wonder limit sebmarkbage believes valid use cases iterations sounds right guessing would lead breakages existing code since wo nt ship maybe ok", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "codepodu interest getting fixed quickly going open pr unless respond soonish tell already started", "d": "7/2017"}, {"body": "thanks report react generally uses convention jsx property names duplicate might revisit time future intentional bug", "d": "7/2017"}, {"body": "thanks reporting known issue open source alphas reactdom tracking fix soon", "d": "7/2017"}, {"body": "hey omerts thanks issue extend class properties defined extending class shadow properties defined extended class makes sense classes sugar prototypical inheritance using using javascript classes want inherit base component explicitly include extending component definition like using object spread syntax react could automatically would involve overhead walking prototype chain would require breaking change since people may already relying extending components overwriting base component make sense", "d": "7/2017"}, {"body": "would also add generally recommend using inheritance really confident prefer use yes aweary comment correct", "d": "7/2017"}, {"body": "aweary makes perfect sense thank detailed answer gaearon right could refactor code compose extract pure functions little late", "d": "7/2017"}, {"body": "cc nhunzaker", "d": "7/2017"}, {"body": "oops meant cc jquense", "d": "7/2017"}, {"body": "yes expected unavoidable extent react dedupe change input events nt fire often case even tho intentionally want trigger event react swallowing input value changed use simulatenative helper get behavior looking tho break", "d": "7/2017"}, {"body": "workaround", "d": "7/2017"}, {"body": "guess grey area unclear supported jquense mentioned use meantime feel free file new issue look ways handling", "d": "7/2017"}, {"body": "additional use case affected similarly outline long term workaround well think falls gray area complete transparent dom interoperability always nice hard potentially limiting give reacts model targeting", "d": "7/2017"}, {"body": "jquense btw happens matter value changed probably included info issue understand unexpected event swallowed react value changed including updated example", "d": "7/2017"}, {"body": "need time process use case cypress esp part setters nt really know spec says strongly opinionated case thing seems working code using waits rewrite might turned nonissue wondering wo nt affect ability make integration tests reactbased apps using dom api sorry answered linked thread yet connect dots", "d": "7/2017"}, {"body": "leaving solution future reference checked edge ie ff chrome js function setnativevalue element value const valuesetter objectgetownpropertydescriptor element value set const prototype objectgetprototypeof element const prototypevaluesetter objectgetownpropertydescriptor prototype value set valuesetter amp amp valuesetter prototypevaluesetter prototypevaluesettercall element value else valuesettercall element value use like", "d": "7/2017"}, {"body": "btw happens matter value changed probably included info issue yes also left bit bit hard explain react tracks manual domnodevalue changes well dispatch change event react sees two discreet moments first change change via event input event fires value still react says already know value must duplicate wondering wo nt affect ability make integration tests reactbased apps using dom api nt using something like selenium fires real events ask vs fake ones fire dom comparative tools like cypress nightmare etc use workarounds mimic real browsers behavior something breaks case bug cypress", "d": "7/2017"}, {"body": "dcramer shorthand property includes believe expected behavior would overwrite previous style could include delay property know worked previous react versions", "d": "7/2017"}, {"body": "aweary sure ever worked pardon ignorance realizing working style sheet due order operations translating", "d": "7/2017"}, {"body": "dcramer worries previous discussions warning overlapping styles like see links lot discussions get around either including delay shorthand property explicitly using expanded property like etc", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "hi asked say use inheritance need least know problems running obvious could please clarify exactly working seems bit like philosophical issue really prefer focus specific problems bugs encounter far know inheritance fully supported react rather react opinionated write classes allow use inheritance mixins factories userspace class model different language compiles js class abstraction etc long inherit provide method react trouble recognizing component even inherit deeply hierarchy case experience thanks", "d": "7/2017"}, {"body": "gaearon tried find earlier discussion failed wish github participated filter issues last time discussed remember problems inheriting class inherits far know inheritance fully supported react currently react fully supports inheritance means inherits inherits react features including lifecycle methods work nothing discuss remember vaguely time discussed earlier problem render method called instead instances circumstances try one sure works pointless developers react willing support policy issue run problem using deep inheritance report willing solve respond use composition instead could please clarify exactly working seems bit like philosophical issue really prefer focus specific problems bugs encounter nothing nt work bug problem willing discuss problem details problem complexity forced code ca nt use inheritance react components related immutability redux shallow comparison props reselect performance related things think keywords brought idea mind problem ca nt find somewhere written problems handled easily methods described truth handled easily big complicated component think facebook nt components complicated thing saw facebook messenger think say nt need inheritance facebook codebase also say complicated component messenger nature needs functional design example complicated component talking text editor features like msword implemented react browsers something like tinymce problems need careful use reselect complicated combinations connect createselector passing callbacks etc taking care prop reselect consider need multiple forms complicated component different behaviors composition brings callback passing attention needed take care nt pass big js data structure props using composition pass data props child element one avoided inherit inheritance simply provide basic features base class inherited classes wo nt need take care passing props makes unnecessarily rerender provide good performance sometimes even need forget react automatic lifecycle methods invocation instead setstate store data force render required another situation think better avoid composition use inheritance concerned performance use composition mount components instead one render components instead one shallow compare props components instead one etc lots compositions instead lots inheritance many components rendered simultaneously guess matters currently problem thought summarize saying using composition bigcomplicated components trying keep things performant brings complexity take time reduces performance overhead anyway software like macos google chrome pages linux kernel nt written composition functional programming may best chrome use functional programming handling network packets user interface plugin sandboxing etc react nt written functional paradigms react provides api classes discourages others provide api classes web application always simple store messenger likes sometimes components engines use components provide good performance reason universities still teach oo understand usecases frontend developers fit well paradigms encourage people use usecases nt fit paradigms react wants general solution framework nt force paradigm cause created react overcome problems facebook messenger nature needs functional code nt mean codes written functional qt qml perfect reactive language perfect mean perfect using qtqml write code without checking documentation everything harmony intuition designed years react supports inheritance useful hope reactjs benefit inheritance ofc qml supports composition ask question policy issue run problem using deep inheritance report willing solve respond use composition instead inheritance officially supported opinionated", "d": "7/2017"}, {"body": "forgot thank quick response", "d": "7/2017"}, {"body": "remember vaguely time discussed earlier problem render method called instead bs instances b circumstances try one sure works pointless developers react willing support bug fixable like know policy issue run problem using deep inheritance report willing solve respond use composition instead really depends issue hard discuss abstract specific policies bug reports compete bug reports based perceived urgency hard would fix javascript flexible language support inheritance bit vague covering everything usual patterns believe support complicated metaprogramming might might work happy try provide likelihood something fixed specific cases ca nt find somewhere redux opinionated way writing react code please use redux fit workflow officially prescribe redux anywhere even use much facebook think facebook nt components complicated thing saw facebook lt gt problems need careful use reselect complicated combinations connect createselector passing callbacks etc taking care prop reselect sure related facebook redux facebook project facebook mostly uses flux data management although mostly lean towards immutable approaches diametrically opposite popular solutions ecosystem like mobx embrace mutability perhaps could give try instead said impression facebook complicated components messenger correct complicated components opinion ads creation flow includes interactive forms complex interconnected widgets selecting ad targeting using redux using combination react component local state flux far aware inheritance officially supported opinionated likely issues affecting people using inheritance lower priority issues affecting everyone like inheritance fixing benefits much less people said bugs different bugs cause major distress fixable try fix find time hope answers question give definitive answer try best whenever something hard fix unlikely fixed say future issue reports", "d": "7/2017"}, {"body": "thanks positive response dan write notes future reference think things help someone trying design stack said impression facebook complicated components messenger correct complicated components opinion ads creation flow includes interactive forms complex interconnected widgets selecting ad targeting sure components implemented without concerning performance complicated components meant really cpu hungry nature sure related facebook related facebook write docs responses facebook huge codebase x facebook like sure anyone whole universe codebase smaller facebook think conclusion wrong facebook nt complicated cpu hungry components quoting facebook use react thousands components nt found use cases would recommend creating component inheritance hierarchies redux opinionated way writing react code please use redux fit workflow said year ago building stack started reading medium post message clear guess appropriate discuss redux say relevant decided keep using redux tightly bound huge codebase removing lines code would take around days nt problems writing functional code except js really functional language python c pass functions arguments nt mean functional problem maintaining good performance complicated components using redux components solutions keep code clear scalable extensible using redux complicated components relies using inheritance solutions officially advertise would lead overusing connect reselect complicated extensible code generally nt think code written like easy read think need construct like think twice try avoid use instantiating class instead easy reason class constructor x thisx x readable easy reason conclusion give inheritance another try see react problems report experience close issue", "d": "7/2017"}, {"body": "think conclusion wrong facebook nt complicated cpu hungry components perception correct experience lot components performance critical especially react native spend quite bit effort optimizing getting bit hard talk seem confident saying think enough context since working facebook products redux opinionated way writing react code please use redux fit workflow said year ago building stack believe ever said something like use redux everywhere please point solutions keep code clear scalable extensible using redux complicated components relies using inheritance cool works generally nt think code written like b b c gt b else c easy read nt think snippet easy read either think discussion turning attacking strawman like avoid happy discuss specific issues react support inheritance like avoid debates code style issue tracker", "d": "7/2017"}, {"body": "gave examples think sometimes inheritance better solution composition think attacking strawman started instead discussing cases emphasized facebook components complexity summarize think composition reduces performance compared inheritance specially react framework use bare react happens run whole react lifecycle components shallow compare props components etc case inheritance one component lets eliminate factors focus inheritance vs composition compose one component bare react using redux immutablejs reselect etc bring even overhead use composition overhead mounting etc component close zero could forget performance snapshot using shows mounting small react component takes around lets assume production environment want mount inherited components take seconds try mount composed components take n x seconds mounting maybe tempted respond nt mount components lazy load components etc achieve acceptable performance inheritance go composition add lots complexity code lazy load things maybe even want elements really time lets argue milliseconds number components glad know point view n n x instead anther issue composition need transfer methods composing components composed components keep api available composed component even willing change methods overcome problems mixins complexity classes designed handle inheritance prefer use another thing complexity using redux immutablejs reselect composition need spend time even write code createselectors connects achieve lets avoid attacking strawman discuss issues think using functional paradigms things flow like network packets like data user interface like facebook posts timelines things like perfect must providing robust api reusability best done help object oriented programming functional object oriented used declarative frameworks like qml react think react much better framework supports oo well disclaimer course write reusable code functional programming specially injecting sense objects declarative language like jsx declarative elements work like point reference among flow functional structure brings idea instances functional programming sometimes insisting use functional approaches object oriented avoiding simpler easily readable code overheads programmer cpu side note talk facebook clear productive objection avoid generalizing scope problems deal facebook ui scope problems developers using react deal strongly think avoiding generalization leads better react doubts facebook wwwfacebookcom indeed big project sure nt cover different problems web developer may deal generalization avoided even react developed google know google web applications facebook web applications least order magnitude", "d": "7/2017"}, {"body": "sassanh think core point straying react nt enforce inheritance composition may recommend using composition believe generally useful starting point abstraction react nothing explicitly preventing using inheritance mentioned react api asks extend provide method use whatever abstraction like build top issue tracker meant discussing bugs feature requests specific problems react preventing using inheritance love hear otherwise nt best platform discussing pros cons composition inheritance", "d": "7/2017"}, {"body": "nothing explicitly preventing using inheritance mentioned specific problems react preventing using inheritance love hear cool conclusion give inheritance another try see react problems report experience close issue", "d": "7/2017"}, {"body": "seems working fine", "d": "7/2017"}, {"body": "hi use issue tracker bug reports feature requests appear description react bug little information help question please check community support resources", "d": "7/2017"}, {"body": "wan na send pr add", "d": "7/2017"}, {"body": "gaearon yes sure done", "d": "7/2017"}, {"body": "fixed thanks pr", "d": "7/2017"}, {"body": "react says remove props element um want props come react nt attribute blocker let attributes happy", "d": "7/2017"}, {"body": "thank sending us use case custom attributes working see going close since tracking thanks write", "d": "7/2017"}, {"body": "nhunzaker great hear thanks", "d": "7/2017"}, {"body": "want look happens might bug", "d": "7/2017"}, {"body": "hello started already basic level unfortunately wo nt able continue saturday anybody else wants take please also happy additional hints since working fine either mode likely something one conditions guess", "d": "7/2017"}, {"body": "seem happen master probably reproduce probably fix directly branch", "d": "7/2017"}, {"body": "nt understand three arguments version alpha test seems expected two arguments version work react contract specifies one argument event fill one render function gives us two example two arguments works example three arguments need fill one argument get last curried function seems work", "d": "7/2017"}, {"body": "okay looked seems like need cherry pick branch", "d": "7/2017"}, {"body": "close fixed master add cherry picking todos thanks report", "d": "7/2017"}, {"body": "thank", "d": "7/2017"}, {"body": "thanks noting old code going deleted soon would nt worry", "d": "7/2017"}, {"body": "correct way achieve expected behavior tell trying mixing dom react events ordering important", "d": "7/2017"}, {"body": "working project implement drag drop move items html structure html ul li react elements li elements draggable dropped ul outer div drop empty space uls uls outermost div ondrop events always outermost div element ondrop gets triggered always gets dropped outer div order important", "d": "7/2017"}, {"body": "boopeshmahendran could turn outer element react component", "d": "7/2017"}, {"body": "boopeshmahendran may need manually manage event order using stack something react nt api reordering events based native dom events could use react component parent element like mkuklis said could easier considered using something like reactdnd stable drag drop solution react try use issue tracker bug reports feature requests usage support question like recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "7/2017"}, {"body": "prior step xisnext set state component boolean xisnext indeed expressing next turn played x ternary operator used therefore checks state boolean regard side next take turn could also make ifelsestatement would thing javascript xisnext short form xisnext true squares x else squares", "d": "7/2017"}, {"body": "soerenterh answer correct reference ternary operator close still consider unclear let know rename", "d": "7/2017"}, {"body": "soerenterh gaearon thank reply meant next turn played x display board current turn played good idea rename xisnext yisnext change thank", "d": "7/2017"}, {"body": "guess variable naming text confusing says next player really means current player says next current player eg x one whose mark eg x appear next click", "d": "7/2017"}, {"body": "open naming suggestions fix maybe would better", "d": "7/2017"}, {"body": "maybe whosenext document variable player next move ie players symbol occupy next box clicked think x var name causing confusion", "d": "7/2017"}, {"body": "low priority close people report confusing reopen fix also happy take pr renaming", "d": "7/2017"}, {"body": "somebody else interested feature could take", "d": "7/2017"}, {"body": "duplicate please provide input", "d": "7/2017"}, {"body": "sergeytroinin aweary duplicate concerns wrote originally need able set inline styles case calculate using state like background mozlineargradient thisstategradient background webkitlineargradient thisstategradient background lineargradient thisstategradient return see problem applicable vendorspecific values least workaround suggest", "d": "7/2017"}, {"body": "find exact instructions reproduce problem project never mind misread saying reproduce", "d": "7/2017"}, {"body": "achobanov kind issue almost always caused code swallowing error suggest using pause caught exceptions option chrome devtools try locate source", "d": "7/2017"}, {"body": "one common example happens note code like errors first completely swallowed", "d": "7/2017"}, {"body": "could reproduce observe home two images appear nt think code execution stops trying render post element first time phantom error gaearon understand example happening nt use form catch aweary try", "d": "7/2017"}, {"body": "aweary right pause option selected error thrown jquery one one know causing issue something miss error message also updated repo include instructions also made small edit issue text gaearon clear confusion could replicate issue inside repo home page", "d": "7/2017"}, {"body": "tried fixing jquery error", "d": "7/2017"}, {"body": "idea error look examples whatever happening happening internally since nt use specifically imported point clarify nt problem fixed long time ago curious error thrown though would good report behavior nt think responsible nt find issue worth investigating means close though might helpful write", "d": "7/2017"}, {"body": "achobanov likely error caught unhandled somewhere code path get reports like frequently errors swallowed almost always due user thirdparty code mishandling errors try debug pausing uncaught exceptions walking call stack looking functions calls may wrapped blocks promises clauses nt handle error", "d": "7/2017"}, {"body": "worth released react beta logs errors inside react console development even application code swallows think close hope helps find issue", "d": "7/2017"}, {"body": "huh interesting think could stub handler interactive elements like buttons links work around issue ios safari bubble click events thanks great write want incorporate test case manual dom test fixtures maybe identify started happening", "d": "7/2017"}, {"body": "meet problem using", "d": "7/2017"}, {"body": "thanks malash updated issue description indicate also triggers nt require padding credit scottlyttle stellah tracking write", "d": "7/2017"}, {"body": "temporary fix jsx import react react import style export const getcomponent component gt children rest gt export const span getcomponent span tags usage jsx import span hello world instead hello world", "d": "7/2017"}, {"body": "thanks use cases simple enough could always build content inside string templates instead although little less readable able work around way second suggested workarounds initial writeup may useful others", "d": "7/2017"}, {"body": "think related known webkit bug described mdn mdn provides others pointers behavior", "d": "7/2017"}, {"body": "ghostd initially thought problem affects nonmobile safari well workarounds suggested nt work eg cursor pointer adding onclick iirc using specifying dummy element work workaround work scottlyttle stellah may recall exactly", "d": "7/2017"}, {"body": "unreal easy seetest desktop safari thanks elyobo made test case outside react using generated markup hard bug possible related react wraps text content comments exhausts knowledge problem feels like browser bug stumbled change made handle text nodes comments instead spans", "d": "7/2017"}, {"body": "still issue please provide project reproducing otherwise close enough information dig support using matching versions react exactly version", "d": "7/2017"}, {"body": "good know matching versions react reactdom opened document cryptic runtime error case someone else runs", "d": "7/2017"}, {"body": "thanks appreciated another possible cause kind error earlier error swallow application code react gets confused next render fix", "d": "7/2017"}, {"body": "hey looks like small syntax error interpreted arrow function labeled statement arrow function returning object need wrap brackets parens interpreted arrow function returning object updated version example fix hope helps", "d": "7/2017"}, {"body": "thanks shame", "d": "7/2017"}, {"body": "hmm link thread points starter code believe shows empty tic tac toe field nt actually anything final result working game miss anything", "d": "7/2017"}, {"body": "showing final code every time opened working sorry", "d": "7/2017"}, {"body": "maybe codepen glitch sorry see let us know take another look close", "d": "7/2017"}, {"body": "think mouseout event triggered disabled form elements according react synthetic mouseenter event works based mouseout aint sure possible safely revert detection strategy mouseover would work probably reason implemented like", "d": "7/2017"}, {"body": "tag bug sure ever worked whether possible fix", "d": "7/2017"}, {"body": "done temporary put smth like disabled button doesnt seem work", "d": "7/2017"}, {"body": "gaearon could check pr works good case", "d": "7/2017"}, {"body": "see message like usually means earlier error message code swallowed never gets surfaced point react corrupted state error messages become cryptic fixing react errors unmount tree instead keeping around broken state hard say without complete reproducing example could bug react last times reported turned app code swallowing real exception happy look extract code run reproduce", "d": "7/2017"}, {"body": "closing information provided check pause caught exceptions chrome debugger likely find original error causing", "d": "7/2017"}, {"body": "gaearon happening consolebased unit tests apply browser option pause caught exceptions", "d": "7/2017"}, {"body": "try using node inspect functionality attaches chrome devtools", "d": "7/2017"}, {"body": "hmmm new gaearon examplearticle best", "d": "7/2017"}, {"body": "test runner using wo nt work jest though think node bug", "d": "7/2017"}, {"body": "yeah using jest node bug follow", "d": "7/2017"}, {"body": "reliably issue would expect able reproduce rendering component browser", "d": "7/2017"}, {"body": "also write standalone node script thing test debug", "d": "7/2017"}, {"body": "finding hard understand related react error message appears like node message printed chrome console nothing formatted close let know wrong", "d": "7/2017"}, {"body": "note error much worse compiling classes without", "d": "7/2017"}, {"body": "thanks feature request thejameskyle agree better error would provide better developer experience also looks like fiber get caught infinite loop try render class nt extend might even necessary example demonstrating warned crash freeze browsertab click risk cc gaearon acdlite might right place need outside block since throw error want maintain invariants dev prod", "d": "7/2017"}, {"body": "infinite loop known issue error handling", "d": "7/2017"}, {"body": "fix release", "d": "7/2017"}, {"body": "thanks acdlite know fix address thejameskyle request would better error nonextending classes orthogonal error handing fix", "d": "7/2017"}, {"body": "yeah fixing infinite loop bug would address lack helpful error message good candidate external pr also account", "d": "7/2017"}, {"body": "gon na slow per se going reordering example instead moving would update deeper component hierarchies deeper potentially expensive updates keys way react know something moved rather updated important performance also correctness example earlier local state would preserved although conceptually different items used keys local state would move together item hope helps", "d": "7/2017"}, {"body": "thx answer give example react knowing something moved rather updated important performance", "d": "7/2017"}, {"body": "moving trees around usually cheaper going deep tree updating every single thing inside", "d": "7/2017"}, {"body": "would like submit failing test", "d": "7/2017"}, {"body": "reference jsfiddle running demonstrating callback called", "d": "7/2017"}, {"body": "looks like may affect react native found fix issue fixing reactnativereconciletransactionjs see", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "hey lukescott expand want importing exports react package nt seem necessary default export needs inscope calls nt fail", "d": "7/2017"}, {"body": "typescript fails react nt default export make work either enable synthetic default imports help compatibility node modules suggesting added works modules natively without needing compatibility options", "d": "7/2017"}, {"body": "see looks like typescript expects use importing modules exported modules sure faking manually adding property would good idea incorrectly implies exporting modules", "d": "7/2017"}, {"body": "warnings gone react think live release", "d": "7/2017"}, {"body": "would adding property really faking though gaearon would preferred style typescript react former would nt beneficial compatible rather relying compatibility options", "d": "7/2017"}, {"body": "think longer term style would probably make sense really longer term maybe sebmarkbage disagrees", "d": "7/2017"}, {"body": "simrangrewal please provide information requested issue template unfortunately nt enough information us determine going", "d": "7/2017"}, {"body": "going go ahead close since actual information op follow", "d": "7/2017"}, {"body": "would interested submitting failing test case pr cc bvaughn", "d": "7/2017"}, {"body": "yes absolutely get later today might need help ask", "d": "7/2017"}, {"body": "hmm ok idea test ca nt even find shallowtestrenderer code", "d": "7/2017"}, {"body": "search existing tests importing shallow renderer bet called something like reactshallowrenderertest", "d": "7/2017"}, {"body": "callback second argument never called looks correct unfortunately implementation nt use callback param leedsebooks looking please feel free assign pr failing test review fix", "d": "7/2017"}, {"body": "bvaughn never contributed react mind take stab seems straightforward", "d": "7/2017"}, {"body": "sounds great", "d": "7/2017"}, {"body": "callback bind public instance component renderers reconciler", "d": "7/2017"}, {"body": "elsewhere think explicitly pass function references around way cause lose context familiar code honest would nt expect callback autobound react", "d": "7/2017"}, {"body": "thanks update code bvaughn see", "d": "7/2017"}, {"body": "think example different instance prebind nt exist called render case variety tools manage bindings lexical scope fatarrow functions seeing describe nt binding callback queueing callback called later later part code familiar", "d": "7/2017"}, {"body": "bvaughn comment bit confusing suggest comment support following case callback nt bind called becomes public instance", "d": "7/2017"}, {"body": "makes sense", "d": "7/2017"}, {"body": "yep figured add tests", "d": "7/2017"}, {"body": "bvaughn done see", "d": "7/2017"}, {"body": "question react library per se lint rule enabled create react app create react app repository would appropriate place file problem define variable global component party script init hc compile due error please read using global variables create react app user guide work around lint rule need explicitly say want use global variable makes intent clear ensures really meant use global variable rather made typo forgot import questions please file create react app repository thanks", "d": "7/2017"}, {"body": "oh thanks eslintdisableline trick", "d": "7/2017"}, {"body": "nt need disable though approach suggested one recommend", "d": "7/2017"}, {"body": "got problem define variable like value set external script use instead though thank help", "d": "7/2017"}, {"body": "would set script runs bundle set", "d": "7/2017"}, {"body": "nt end like saw unpkg issues like let assume problem side let know reopen", "d": "7/2017"}, {"body": "looks fine well thanks", "d": "7/2017"}, {"body": "hi sebmarkbage hi wanted work issue could nt understand info gave also beginner react issue suitable docs read get speed codebase", "d": "7/2017"}, {"body": "general guide particular issue probably want test ssr fixture bit messy build react root testing fixture issue certainly easy get right also nt much existing knowledge code base react works ssr", "d": "7/2017"}, {"body": "hey sebmarkbage trying work probably questions overall looks manageable", "d": "7/2017"}, {"body": "minimum giving component broke rehydration would helpful seeing lot checksum mismatches originating library downstream react styledcomponents diff nt always helpful may generic div perhaps css class", "d": "7/2017"}, {"body": "sry guys busy work week trying follow sebmarkbage guide still wip much time one picture two questions sorry total newbie react codebase talk jsx access server rendered dom nodes bit confusing sebmarkbage please elaborate bit sure miss something way catch diff occurrences store array objects containing cloned server dom node different elements iterate array check clone parent nodes addupdate server client elements parent nodes create one string pass warning still miss use cases like one client elementno server element fine stupid something else sorry bit retarded question really unsure familiar codebase yet want deliver something useful cheers", "d": "7/2017"}, {"body": "question silly please send pr review sebmarkbage vacation", "d": "7/2017"}, {"body": "gaearon thanks reply ok polish bit open pr glad get feedback", "d": "7/2017"}, {"body": "talk jsx diffhydratedproperties access server rendered dom nodes yea bit confusing let try clarify existing diff mechanism give passed notice called attributename values passed type attributes react props differ attributes model numbers booleans style objects well strings also different names attributes eg difference attribute show way visualize serverrendering another one additionally format text expect output jsx compatible html compatible example selfclosing tags like encoded imo better visualize developer actually coding transfer format mostly opaque unless happen try inspect fact likely want experiment transfer formats html visualization transfer nicely environments eg imagine react native server rendering similarly text content encoding follow write jsx encoding html transfer format example", "d": "7/2017"}, {"body": "also probably pass relevant fiber element source warnings way add information tree similar warnings component stacks", "d": "7/2017"}, {"body": "gaearon nt one fiber responsible warning often many point batched output could possibly include component stack root parent failed join create whole tree view seems like could get noisy though nt better left dev tools need tree view", "d": "7/2017"}, {"body": "concern always easy find warning referring example would find something like code", "d": "7/2017"}, {"body": "gaearon see comment using displayname possible would dramatically ease finding fragment component hierarchy responsible issue eg instead", "d": "7/2017"}, {"body": "parent least context component stack client side server side one issue showing much context misleading something diffs nt line correctly eg often many different components nested divs consider match type actually part different component show diff part component tree look like bug within component reality actually wrong component rendered higher level eg app rendered branch instead get error like", "d": "7/2017"}, {"body": "hey jenbuska sounds like requesting react begins rendering synchronously call made would likely introduce performance regressions nt work well fiber takes opposite direction embracing asynchronous dynamically scheduled render cycles mind going close since nt change likely made moment try get around managing queue updates outside react render cycles hope helps needing document render whole issue use span display none get around issue rendering invalid elements dom return components nt want rendering dom", "d": "7/2017"}, {"body": "cristianocca safe assume attacker access execution environment data client vulnerable nt know path window object local react component state security obfuscation weak like clientside libraries ca nt make guarantees front", "d": "7/2017"}, {"body": "hey guys similar probelm using prop instead change working thanks bacher selbekk", "d": "7/2017"}, {"body": "bug app took quite narrow regression functionality seems broken version prepared two codepens demonstrating issue one version broken one working reproduce click click click", "d": "7/2017"}, {"body": "cc jquense", "d": "7/2017"}, {"body": "duplicate believe", "d": "7/2017"}, {"body": "thanks think could look", "d": "7/2017"}, {"body": "problem dominputcomponent nt update value tracking bits updatecousins radioscheckboxes easy fix nt moment pr something", "d": "7/2017"}, {"body": "easiest workaround override yes ideally api super clear would look like might look release cycle", "d": "7/2017"}, {"body": "gaearon considered approach breaks devtools traceback example given file run devtools show source location called overriding like calls seen made always even passing errors", "d": "7/2017"}, {"body": "good observation", "d": "7/2017"}, {"body": "implement performance enhance described webgl custom elements add perf comparison forking react disabling string coercion sure get keeping track", "d": "7/2017"}, {"body": "think encouraging custom element authors override setattribute may best approach breaks platform conventions argue instead need pass rich data custom element use property think work done allow done declaratively jsx worth works preact today check property present set otherwise fall back using attribute adopting simple model like sounds appealing", "d": "7/2017"}, {"body": "additional interesting points heard team member parser nt call sets attributes nt care overrode clone node get cloned attributes without calling anything special would occur imperative dom creation", "d": "7/2017"}, {"body": "robdodson think encouraging custom element authors override setattribute may best approach breaks platform conventions sort like saying extending htmlelement classes breaks platform conventions think ability expose interesting usecases bring ideas move web forward possibly one example argue instead need pass rich data custom element use property feasible means one would need write adapter every single framework able pass info properties instead basically impossible standard every framework use react example think work done allow done declaratively jsx might true react like view libs think passing anything property instead attribute nt yet standard wo nt flexible easy make happen across huge landscape frameworks libraries although like idea easily widespreadable like roomtemperature butter property element check property present set overriding custom element simply work everywhere property element check property present set fairly libraryspecific behavior standardized something easy make happen across frameworkslibraries end really react call decide app input coerced string first nt think nt like pattern nt use nt think block developer freedom also hack bring performance notable improvements may worth hack", "d": "7/2017"}, {"body": "parser nt call setattribute sets attributes nt care overrode clone node get cloned attributes without calling setattribute anything special setattribute would occur imperative dom creation good fixed though would inline extensible web manifesto imo noticed custom elements created existing attributes called either parallel mentioned cases manually run preexisting attributes fe custom element constructor", "d": "7/2017"}, {"body": "believe browsers use instead hidden magic would solidify notion extending html elements browsers nt current defeating extensible web manifesto unexplainable magic behind scenes nt way believe argue specs updated maintaining compatibility old apps", "d": "7/2017"}, {"body": "sort like saying extending htmlelement classes breaks platform conventions sorry phrasing little loose guess getting custom elements spec designed let developers extend htmlelement nt know similar designs help folks override builtin pieces like setattribute pointed lead weird edge cases design work put making idea play nice parser feasible means one would need write adapter every single framework able pass info properties instead setattribute basically impossible frameworks encountered already set properties provide syntax let developer default angular pass properties custom element provide syntax want specifically set attribute mentioned preact also prefers properties ember believe vue syntax specifically passing properties elements setattribute standard every framework use react example definitely hear saying seems like practice though libraries already prefer setting properties rich data provide syntax let developer declaratively web standard seem bit de facto one noticed custom elements created existing attributes attributechangedcallback called either believe jsbin example console see corresponding attribute name old value new value believe browsers use setattribute instead hidden magic would solidify notion extending html elements think idea really cool nt get wrong main concern given way parser works today overriding setattribute seems like could cause real issues folks free whatever want elements depending context use might never hit corner cases maybe thoroughly document anyone consuming components would know watch least caution recommending practice custom element authors adopt", "d": "7/2017"}, {"body": "cc gaearon think feature request", "d": "7/2017"}, {"body": "tracked please join discussion intend change class api like tentative plan extend functional api instead making work state lifecycles might", "d": "7/2017"}, {"body": "really takes long time", "d": "7/2017"}, {"body": "takes lot work put major version could release faster would possible specific reason waiting", "d": "7/2017"}, {"body": "yes want find exciting things bring us else", "d": "7/2017"}, {"body": "thanks request colesanderson merged possible caveat error getting valid jsx parsing fails think unlikely jsx spec would updated support syntax unless would provide benefit broader scope issuesfeatures means need use regular function call syntax elements require amp attributes merged server renderer blacklist property markup rendered correctly keep mind serverside rendering valid dom attribute name intention hydrate serverrendered markup amp page react wo nt work though assume amp manage content client might even concern", "d": "7/2017"}, {"body": "opened bug mozilla dont know keep issue open find workaround", "d": "7/2017"}, {"body": "interesting first excellent bug report thank taking time prepare may nothing case close issue mean time look", "d": "7/2017"}, {"body": "dug react code nt find workaround nhunzaker firefox bug assigned hours ago agree close issue wait fix mozilla team", "d": "7/2017"}, {"body": "okay works feel free follow get news", "d": "7/2017"}, {"body": "come problem even added delay calling pagerender phantomjs addition componentdidupdate wo nt fire either", "d": "7/2017"}, {"body": "react phantomjs lastest", "d": "7/2017"}, {"body": "update okay know problem lies something chetonreactsortable input talking inside sortablelist deactivate input focus caret works create isolated example confirm bug react otherwise clear react library bug thanks", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "late squeeze related issue", "d": "7/2017"}, {"body": "sounds good list keeps growing actively working release", "d": "7/2017"}, {"body": "added controllist field list", "d": "7/2017"}, {"body": "causing issues idea version go", "d": "7/2017"}, {"body": "well", "d": "7/2017"}, {"body": "ah start preparing release aweary flarnie documentation preparing release otherwise best copy prior releases take notes", "d": "7/2017"}, {"body": "documentation relevant using release manager branch anymore diverged much goal cherry pick little possible", "d": "7/2017"}, {"body": "still good idea walk document without release manager related bits", "d": "7/2017"}, {"body": "closing merged", "d": "7/2017"}, {"body": "react using checksum validation seems like moot still show diff seems like involves lot dev code want ship production users close feel strongly released please let know take another look", "d": "7/2017"}, {"body": "would like create failing unit test maybe send fix thanks", "d": "7/2017"}, {"body": "probably force codepath jsdom monkeypatching", "d": "7/2017"}, {"body": "tagc seems indicate issue close issue believe issue react really need small example reproducing error investigate", "d": "7/2017"}, {"body": "aweary yeah close", "d": "7/2017"}, {"body": "fixed promises wo nt break", "d": "7/2017"}, {"body": "closing due lack activity", "d": "7/2017"}, {"body": "activity assuming low priority since createclass deprecation warnings wanted circle back thank investigating issue thanks aweary gaearon", "d": "7/2017"}, {"body": "jasoncramfighter sorry lack activity exactly sure want reproduce issue using potentially address ensuring running strict mode like class components", "d": "7/2017"}, {"body": "aweary worries nt sure path forward either waited bit given future direction heading fix would great would nt expect think explanation noted somewhere help anyone else future encounters issue thanks help", "d": "7/2017"}, {"body": "reading expected behavior bodies class declarations class expressions executed strict mode ie constructor static prototype methods getter setter functions executed strict mode class example surfaces error even manually example nothing react could seems like everything works intended", "d": "7/2017"}, {"body": "gaearon aweary guys rock", "d": "7/2017"}, {"body": "gaearon maybe would worth documenting react without page since obvious mutating props using silently fail", "d": "7/2017"}, {"body": "mutating props lot things forbidden strict mode like using undeclared variable would silently fail sound specific react createclass guess could add section recommends add top file", "d": "7/2017"}, {"body": "gaearon right using undeclared variable nt specific react way explicitly freeze intention enforces immutability props specific react introduced case action would nt expect fail outside strict mode mutating object failing silently", "d": "7/2017"}, {"body": "fair enough want send pr", "d": "7/2017"}, {"body": "gaearon understand correctly also affect case loaded via minified using build whole bundle sources internal token named differently dozens false positive warnings console", "d": "7/2017"}, {"body": "super clear mean uglify nt mangle property names generally unsafe", "d": "7/2017"}, {"body": "provide code example would benefit clear want destructure", "d": "7/2017"}, {"body": "suggestion closed worked around using decorators completely different design js import react component react class somecomponenta extends component maybe component adds special flag later life cycle methods class somecomponentb extends component state specialflag true maybe component removes special flag later life cycle methods class container extends component render let specialflag thisfoostate let passedcomponent thispropspassmeacomponent specialflag something special return example simplistic idea make state optional", "d": "7/2017"}, {"body": "oh see generally recommend reaching another component makes coupled tightly", "d": "7/2017"}, {"body": "yes example nt show exactly intent time trying separate template component logic coupling would acceptable case presenter decorator simplified whole process", "d": "7/2017"}, {"body": "especially annoying reduxmobx users dom component state never used app function components since using redux", "d": "7/2017"}, {"body": "sure mean app nt use dom state wo nt problem since would using controlled componenta", "d": "7/2017"}, {"body": "right meant say component state", "d": "7/2017"}, {"body": "guess control closing let know mistaken", "d": "7/2017"}, {"body": "seems like fine uncompressed size grew minified ones", "d": "7/2017"}, {"body": "going close issue nt recent updates enough information us reproduce issue provide assistance mackersd end finding way reproduce let us know", "d": "7/2017"}, {"body": "context users loading multiple copies react commonly causes error theorize may triggered different versions react required libraries depending react libraries update support version may come commonly past least seems common enough worth fixing issues open across various libraries folks issue helping info reproduce debug state plan mvp add warning time multiple copies react loaded link documentation howwhy might happen fix bonus indicate multiple copies react devtools icon add workaround code react work ok even loaded multiple copies might want since allows users continue broken state", "d": "7/2017"}, {"body": "least seems common enough worth fixing issues open across various libraries clear think issue completely fixing error making error message comprehensible fiber stack produced error message linked error page issues linked ones already legible error message fiber nt show message crashes typeerror believe issue fiber parity stack failing gracefully rather crashing internals need add invariant error message fiber code since exists stack code surely could make message better including debugging instructions improve error page adding suggestion error message page making message prominently duplicate react would likely helpful also take stab fixing reducing common extracting separate package shared mutable state think would worth tracking separate issue block beta apologies meant already want make sure page action item making resilient would great seems like work putting invariant", "d": "7/2017"}, {"body": "thanks clarifying fiber nt show message crashes typeerror notice right fixing main blocker improve error message make par refs must owner warning maybe acceptable first step seems reaching point symptom larger problem nt support two versions react running usually done mistake happens add warning better docs around think help even also needed beta release open separate issue edit context looks like fiber load multiple copies react", "d": "7/2017"}, {"body": "think adding warning discussed clear way go legitimate cases independent reacts page eg third party widget control works cross think devtools great idea though", "d": "7/2017"}, {"body": "thanks linking issue great context looks like warning removed added removed point pain point people warning nt open new issue already decided generally support loading two copies react going warn", "d": "7/2017"}, {"body": "think best explanation legitimate cases want agree need warn patterns clearly unsupported devtools seems like best worlds lets know something suboptimal spam console", "d": "7/2017"}, {"body": "fixed longer reproduces", "d": "7/2017"}, {"body": "thanks wdhorton reminding make pr", "d": "7/2017"}, {"body": "seems like fixed", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "enable arity checks need explicit opt", "d": "7/2017"}, {"body": "looks like turned based says flow ship strict function call arity turned flag removed guessing means close going anyone knows reason reopen let know", "d": "7/2017"}, {"body": "nhunzaker next step", "d": "7/2017"}, {"body": "nt think nt work capturing works expected part nt work property reason nt work bit confusing react simulates capturing bubbling phase reality one often toplevel event react walks component tree simulate two phases dom event caught bubbling phase many cases react still simulates phases based problem react fills properties dom event default see bubbling real dom event caught bubbling phase synthetic capture phase react reflected sure whether something fixed guess send pr change event dispatch could consider nt know code well tag bug probably low priority checking seems like rare use case", "d": "7/2017"}, {"body": "far understood event phases simulated correct order capturing phase body target first bubbling phase target body end property nt change value always equals bubbling phase constant correct", "d": "7/2017"}, {"body": "think right although would nt exclude possibility listen capturing phase events nt checked", "d": "7/2017"}, {"body": "hunch first built userland works well people use successfully consider reopening bringing test renderer", "d": "7/2017"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "7/2017"}, {"body": "close seems like corner case caused duplicate packages code nt exist react anyway", "d": "7/2017"}, {"body": "thanks sorry nt follow deduping reacts seems fixed", "d": "7/2017"}, {"body": "agree better document expected cause side effects synchronously update state", "d": "7/2017"}, {"body": "gaearon pr docs", "d": "7/2017"}, {"body": "tracking localization effort", "d": "7/2017"}, {"body": "sounds like nt bug", "d": "7/2017"}, {"body": "hi gaearon like share proposed solution clarify transition storing storing seems unnecessary show entire component updating change last time time entire code shown addition already shown separate snippet agree presumption think make following changes code snippets set initial state remove constructor move move replace finally show newly updated components seems plausible go ahead start working updating tutorial", "d": "7/2017"}, {"body": "sure demonstrate working well let", "d": "7/2017"}, {"body": "error boundaries currently supported server rendering initial error report nothing without seeing example reproduces code nt exist master anymore bug report likely outdated reproduce react betas come soon please let us know", "d": "7/2017"}, {"body": "tagging bug although sure side still needs someone investigate", "d": "7/2017"}, {"body": "back", "d": "7/2017"}, {"body": "real time react fibre launch", "d": "7/2017"}, {"body": "close since followup reproduce let us know", "d": "7/2017"}, {"body": "could nt replicate thanks", "d": "7/2017"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "7/2017"}, {"body": "nt seem actionable close", "d": "7/2017"}, {"body": "know released", "d": "7/2017"}, {"body": "good question brought release umbrella issue", "d": "7/2017"}, {"body": "put queue", "d": "7/2017"}, {"body": "closing due lack response", "d": "7/2017"}, {"body": "issue error given tried install socketio react native used bash windows finally could install package", "d": "7/2017"}, {"body": "need reproducing example works experience", "d": "7/2017"}, {"body": "next steps prs merge", "d": "7/2017"}, {"body": "including time spent library time components", "d": "7/2017"}, {"body": "close part bigger api changes nt ready", "d": "7/2017"}, {"body": "send fix", "d": "7/2017"}, {"body": "gaearon give shot", "d": "7/2017"}, {"body": "oleglustenko pavelsuraba correct context document options suggest use arrow function preserves scope parent closure component use functionprototypebind returns copy function specific context hope helps", "d": "7/2017"}, {"body": "hiroagustin use externs file react", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "fixed tagging followup", "d": "7/2017"}, {"body": "think may issue boolean react set typically still evaluates instance still produce checked checkbox think removing boolean attribute typical practice guess distinction drawn enumerated attributes expect true false boolean attributes examples enumerated attributes things like syranide pointed taking bigger step back think switching passing properties custom elements would really nice sort sidesteps issues nt resolve amp case amp requires attribute instead property", "d": "7/2017"}, {"body": "arindampradhan sorry delay please", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "hey gaearon notice react beta congrats checking see movement beta provide way third parties create renderers", "d": "7/2017"}, {"body": "still list final release", "d": "7/2017"}, {"body": "closing duplicate discussion", "d": "7/2017"}, {"body": "small update released react beta emit cryptic errors like one even application code swallows error react still print console might early try react since ecosystem still preparing error never occur future switch", "d": "7/2017"}, {"body": "ever resolved", "d": "7/2017"}, {"body": "nt", "d": "7/2017"}, {"body": "aweary next step forward removed examples folder think list adequate start also linked footer docs website", "d": "7/2017"}, {"body": "yea fine start think close", "d": "7/2017"}, {"body": "anyone knows react gets released idea also easy migrate existing createreactapp react releases worth using react instead creating streaming movie website like netflix thanks", "d": "7/2017"}, {"body": "anyone knows react gets released idea team nt yet announced settled release date also easy migrate existing createreactapp react releases yes plan one primary purposes releases add deprecation warnings prepare people worth using react instead creating streaming movie website like netflix fine use upgrade released pay attention devmode warning messages things deprecated problems", "d": "7/2017"}, {"body": "updated remaining open issues phases archiving issue still reference open items phase planning future work fiber future releases", "d": "7/2017"}, {"body": "update fixed ignore everything click view old post fyi sections misformatted fixed x reactdom fixes jquense nhunzaker aweary want release x probably ship fix x new warning callback refs stateless functional components x new api deprecations x moved separate package provide codemod want update es classes moved separate package removed oneliner factories moved separate package forgot moving removed forgot moving x moved separate package x deprecate react addons x decide handle umd addons build x fix bug alpha x remove deprecations added x stop appending strings x remove x remove x move separate package x move separate package x move factories separate package x decide addons build x keep addons need work regardless whether react aliased flat bundle case x strip proptypes checkers production build x readd warning calling proptypes directly x reactdom fixes jquense nhunzaker aweary want release x make decision input fix jquense accepted follow work change flarnie link issue related follow work", "d": "7/2017"}, {"body": "thanks rchanou correct missing something looks like remove indentations checkbox lists words click show details dropdowns indentations intentional indented items related previous unindented item maybe nt make relationship clear enough think words click show added confusion people saw details dropdown nt know common use tag github people may used happy make changes fix formatting issues thanks", "d": "7/2017"}, {"body": "flarnie since original post fixed hid fix realize needed fixing thanks", "d": "7/2017"}, {"body": "able return strings component render use alpha w rn thought already possible", "d": "7/2017"}, {"body": "rn use fiber yet react package relevant nt contain reconciler logic helpers like createelement component fiber switch rn fiber time soon nt exact date", "d": "7/2017"}, {"body": "injected via innerhtml execute without react true react script tags injected via executed security reasons although may look like crosssite scripting attack result harmless specifies", "d": "7/2017"}, {"body": "done reasonable steps address problem react devtools users displays distinctive red icon development builds helps people learn difference versions early also creates peer pressure developers notice sites visit report people working seen major sites fix issue within days rolling notice react devtools links website published instructions create production build major bundlers also made prominent installation page create react app continued gain popularity teaches distinction early separate commands also displays permanent notice development mode terminal react beta releases ship filenames make clear nonminified build used production think future might explore ways solve problem feel like move ahead without drastic measures see helps thanks everyone discussion", "d": "7/2017"}, {"body": "thank doubled career opportunities reinvigorated love coding daytoday enthusiasm react native", "d": "7/2017"}, {"body": "might want take look explains react behaves like", "d": "7/2017"}, {"body": "closing duplicate way around issue got attention", "d": "7/2017"}, {"body": "gaearon works looks like behavior get documented caveat since filed main reason left one open anyway thanks finding issue indepth explanation admittedly surprising first logic", "d": "7/2017"}, {"body": "close", "d": "7/2017"}, {"body": "yes think certainly", "d": "7/2017"}, {"body": "small update released react beta emit cryptic errors like one even application code swallows error react still print console might early try react since ecosystem still preparing error never occur future switch", "d": "7/2017"}, {"body": "maciejka particularly plain javascript behavior aweary vote close recommended approach think", "d": "7/2017"}, {"body": "sounds good", "d": "7/2017"}, {"body": "little code aside changeeventplugin relates ie anymore back gutted bunch legacy code beyond release react removes createclass proptypes many parts api overall size much smaller trueadm also done great work bundle together react smarter reduce build size even lots progress sure next step issue beyond work progress made last months going close", "d": "7/2017"}, {"body": "overall size much smaller claim yet also added new features tipped back close old size remove code add room new features", "d": "7/2017"}, {"body": "ack thanks keeping honest", "d": "7/2017"}, {"body": "tried none worked except tweak jkilesc work order imports matter would think entry script polyfills top would different including separate file entry array like babelpolyfill javascript webpackconfigjs entry polyfill pathresolve dirname srcpolyfilljs main plugins new webpackoptimizecommonschunkplugin order array matters names main vendor polyfill minchunks indexjs require require polyfilljs absolutely ensure loaded first require require transpile order libraries seems shift polyfill loaded react go also worked babelpolyfill entry script", "d": "7/2017"}, {"body": "expected work es imports hoisted spec babel follows even put executed later use lint rule protect future", "d": "7/2017"}, {"body": "right exactly ended discovering reason posted solution number one google result may alone lack understanding internals make work trying save next guy couple hours thanks linter rule def getting added", "d": "7/2017"}, {"body": "sure thanks posting nt mean say nt understand issue pointing future readers behavior expected bug either webpack babel", "d": "7/2017"}, {"body": "someone still facing issues moved babelpolyfill end webpack config solution found", "d": "7/2017"}, {"body": "finally best approach understand issue order loading polyfills example provided notsoluckycharm way go", "d": "7/2017"}, {"body": "qborreda solution load webpack users means making main entry array first element array gon na shown", "d": "7/2017"}, {"body": "small update released react beta emit cryptic errors like one even application code swallows error react still print console might early try react since ecosystem still preparing error never occur future switch", "d": "7/2017"}, {"body": "verify fixed least far dom fixtures concerned", "d": "7/2017"}, {"body": "richsoni thanks providing test case incorporated dom test fixtures unable reproduce issue still really fantastic test case thank providing pr addition try", "d": "7/2017"}, {"body": "also thanks filing fantastic issue", "d": "7/2017"}, {"body": "small update released react beta emit cryptic errors like one even application code swallows error react still print console might early try react since ecosystem still preparing error never occur future switch", "d": "7/2017"}, {"body": "chinese v", "d": "7/2017"}, {"body": "moved remaining open items decided archive issue open new umbrella issue individual issues items phases finish release", "d": "7/2017"}, {"body": "think argument part react contract event see arguments bug said get arguments third party library library could adding arguments", "d": "7/2017"}, {"body": "okay thanks change code make assumption", "d": "7/2017"}, {"body": "thanks gaearon", "d": "7/2017"}, {"body": "small update released react beta emit cryptic errors like one even application code swallows error react still print console might early try react since ecosystem still preparing error never occur future switch", "d": "7/2017"}, {"body": "using blacklist imports pretty good example key functionality case mocking component dependency jsx jestmock reactselect gt const createelement require react const reactselect requirerequireactual reactselect const mockedasync props gt createelement async props mockedasyncproptypes reactselectasyncproptypes mockedasyncdefaultprops reactselectasyncdefaultprops reactselectasync mockedasync return reactselect seems like sort mocking could wrapped function library nt get repetitive", "d": "7/2017"}, {"body": "also experiencing right", "d": "7/2017"}, {"body": "provide example consistently reproduces issue using issue template would really helpful stefanfisk jmzo", "d": "7/2017"}, {"body": "closing one might revisit progress made removing attribute whitelist might ways thanks discussion", "d": "7/2017"}, {"body": "help comment really appreciated", "d": "7/2017"}, {"body": "bug explained intentional workaround simple use jest mock third party component causing issues example put top test file imports replace component become string eg component become leaf snapshot like course wo nt actually test makes sense test code libraries exporting multiple components workaround similar want provide different mock something like finally last option mock note return anything adjust match expectations tested code works use jest unfortunately good solutions runners", "d": "7/2017"}, {"body": "thanks lot helpful comment sure explanation helpful many jest noobz like", "d": "7/2017"}, {"body": "mocked party dependency used reactdom finddomnode app somecomponenttestjs jestmock somelibrarylibmockthis gt const mock requirerequireactual mockformockthis return mock test drawback party dependency changes diretory structure etc break", "d": "7/2017"}, {"body": "know lot different ways error occur hope case help someone case error related callback return null props change component unmounted read using calculate position course null value everything fail thing test element passed callback null made error disappears though hard debug kind error react throw error another different cause", "d": "7/2017"}, {"body": "chadoh thanks man saved day", "d": "7/2017"}, {"body": "web living standard since jsx compiled html checked attribute jsx agnostic rendering support html regardless want become standard jsx step provide funding become next html least nt cause issue finally fixed compatibility checked css property browser face jsx going success rendering dom layer bad good point jsx always javascript expressions part got correct", "d": "7/2017"}, {"body": "pasieronen fixed react version", "d": "7/2017"}, {"body": "small update released react beta emit cryptic errors like one even application code swallows error react still print console might early try react since ecosystem still preparing error never occur future switch", "d": "7/2017"}, {"body": "get issue one react using root component get cycle", "d": "7/2017"}, {"body": "hi everyone wanted mention struggled issue turned setting devtool eval also causes issue regardless configuration uglifier whoever struggles also check devtool set sourcemap whatever option cheers", "d": "7/2017"}, {"body": "hey hognogi nt heard setting causing issue would able provide example demonstrating far know nt cause warning great could investigate", "d": "7/2017"}, {"body": "aweary might issue inherent library failed convince webpack actually uglify code inside eval statements maybe uglify loader far concerned eval webpackoptimizeuglifyjsplugin error", "d": "7/2017"}, {"body": "hognogi thanks think makes sense devtool meant use production sounds expected", "d": "7/2017"}, {"body": "experiencing issue first glance src attribute looks suspicious everything works fine removing src attribute img tag took another look html content found case two little separate react widgets page embedded php template script tag included caused error way fixed problem making sure script tag included", "d": "7/2017"}, {"body": "landed", "d": "7/2017"}, {"body": "please provide documentation", "d": "7/2017"}, {"body": "beta add documentation something becomes stable part official release release happened yet", "d": "7/2017"}, {"body": "hitmands documentation nt stable published web checked master", "d": "7/2017"}, {"body": "write code run code chrome output typeerror var nodenametolowercase function think browser bug", "d": "7/2017"}, {"body": "think react beta ships new algorithm end beginning new chapter react basics things place even though exposed yet excited see evolve time", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "updates", "d": "7/2017"}, {"body": "would issue wink", "d": "7/2017"}, {"body": "think gaearon particularly already alias hood supported without warning similarly", "d": "7/2017"}, {"body": "supporting sounds reasonable downside introduces overhead keeping react codebase consistent though mitigated linting tools long nt introduce problem supported browsers would throw accessing problem anymore favor allowing", "d": "7/2017"}, {"body": "side note nt use random keys comment random key prevents react meaningful performance improvement", "d": "7/2017"}, {"body": "living problem discovered node tests cover internal logic really well browser tests even give us enough confidence many browser issues regressions unobservable code need actual human interaction also tedious write understand instead went set manual dom fixtures since react operates dom constrained way change logic often feasible contributors go manual test suite verify changes work intended different browsers already caught several regressions helped move bugfixes without much review bureaucracy think point investing running unit tests browser combination node unit tests manual dom tests seems working well work might include making dom fixtures easier access eg hosting link ci task every pr close", "d": "7/2017"}, {"body": "dom fixtures great thank", "d": "7/2017"}, {"body": "love know dom fixtures thing part testing suite communities could benefit libraries dom tests thanks heads", "d": "7/2017"}, {"body": "hey vvo basically jsdom even javascript interface dom ca nt accurately reproduce every edge case across every browser things take manual user input made little app host test cases manual testing eventually like host publicly prototype think would great could share learned libraries community large also massive backlog things need file mdn much else need run stuff real browser using real user would love hear thoughts share community", "d": "7/2017"}, {"body": "would love hear thoughts share community think everyone would expect library like react tested every browser etc learning dom fixtures project might good talk subject community", "d": "7/2017"}, {"body": "wrap functional components recomposepure const expensivechild children gt return hi children const purechild recomposepure expensivechild codepen", "d": "7/2017"}, {"body": "improved example updated realized best thing use js class purecomponent extends reactpurecomponent render consolecount purecomponent return reactpurecomponent thispropsrender shouldcomponentupdate false pretty cool", "d": "7/2017"}, {"body": "new promise redundant bnayazil calling functions unclear mean case still returning new promise", "d": "7/2017"}, {"body": "days ago new api added dom specification allows abort fetch requests api implemented browser yet created polyfill available npm abortcontrollerpolyfill polyfill essentially thing code posted istarkov allows transition code changes real browser api implemented details", "d": "7/2017"}, {"body": "released react beta deep stack traces think close", "d": "7/2017"}, {"body": "hey need able set inline styles case calculate using state like background mozlineargradient thisstategradient background webkitlineargradient thisstategradient background lineargradient thisstategradient return least workaround", "d": "7/2017"}, {"body": "late party first thought symbols would add unnecessary complexity would nice use symbols rather mathrandom shortid component keys", "d": "7/2017"}, {"body": "closing works design end read information", "d": "7/2017"}, {"body": "gaearon know history react uses flow still valid issue", "d": "7/2017"}, {"body": "typescript dependency used think", "d": "7/2017"}, {"body": "looks like still problem thought reproduce codepen could opened change event never gets chance fire dropdown closes", "d": "7/2017"}, {"body": "duplicates issue closing land", "d": "7/2017"}, {"body": "function mess docs say returns child children throws otherwise suggests pass object like every method give first child docblock function states confirms expected behaviour reality none things instead verifies arguments reactelement", "d": "7/2017"}, {"body": "like see support direct use overlap conversation picked close", "d": "7/2017"}, {"body": "small update released react beta emit cryptic errors like one even application code swallows error react still print console might early try react since ecosystem still preparing error never occur future switch", "d": "7/2017"}, {"body": "anyone looking solution readytouse component use instead normal text input element everything ok", "d": "7/2017"}, {"body": "zeroasterisk read holds number clicks set event synthetized ref", "d": "7/2017"}, {"body": "think sebmarkbage suggestion valid make react component behavior isolate specific use case", "d": "7/2017"}, {"body": "issue building autocomplete make headstails whether fired event lead closing menu works fine react leads warnings fired", "d": "7/2017"}, {"body": "ref callbacks", "d": "7/2017"}, {"body": "nt think anything done bubble react allows bubble using synthetic event system attaches event listener form normalizing event bubbling process using circumvents react way know event sorry", "d": "7/2017"}, {"body": "allowing somehow use case configuration loaded via json several label configuration options specify string displayed something like title displayed use denote case adding parallel would prohibitive dozens settings json content using null useful way distinguish defined versus deliberately omitted", "d": "7/2017"}, {"body": "allow null set proptype required since required p", "d": "7/2017"}, {"body": "jquense thanks super helpful deleted previous comment answer said thing", "d": "7/2017"}, {"body": "jquense allow null undefined one whole problem javascript provided different constructs reason forcing everyone treat proptypes artificial limitation want proptype explicitly allow null mean allow undefined well two distinct cases language designed way purpose pr work around oversight", "d": "7/2017"}, {"body": "want disallow means typo allow means caller explicitly passed point issue understand issue closed recommended switch flow look", "d": "7/2017"}, {"body": "binki one way allow use proptype validator function example permitted proptypes library uses internally check strings one benefit move function outside component call needed guess solution deviates intent proptypes library reason say due code proptypes library actually validating quick check performed wherein properties set isrequired automatically throw error property value words believe required property null erroneous whereas consider valid use case required nulls", "d": "7/2017"}, {"body": "agree reasons stated standard use placeholder mozilla developer network value null represents intentional absence object value null identifier property global object like undefined instead null expresses lack identification indicating variable points object apis null often retrieved place object expected object relevant null allowed least", "d": "7/2017"}, {"body": "jquense removing means probably set default mean setting default initial value component reducer avoid allowing value prop", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "looks like works", "d": "7/2017"}, {"body": "saaammmeeeeee", "d": "7/2017"}, {"body": "gaearon digging old issues see anything closed way forward issue like moved something like reactfuture", "d": "7/2017"}, {"body": "think close", "d": "7/2017"}, {"body": "wrote test case based upon discussion also migrated dom test fixture make sure behavior correct believe everything working intended actually looks like might problem current local build react working separately select option value attribute uses text content value see use cases though please help identify missed select disabled option default select option rendered first option disabled selected value disabled option empty string please select item value attribute uses string children option element select selected disabled option value selected option please select item select value options value please select item selectable default options like please select need value equal valid empty state select way react associate attribute tag know selected going leave open looks like working issue might uncovered bug master build react", "d": "7/2017"}, {"body": "kevenjesus hi helpful provide code snippet achieved since also using modal loads defaultvalue first run second time opening modal set value defaultvalue binding works default understand use ref input type bind values componentdidupdate work handling function appreciate help", "d": "7/2017"}, {"body": "looks like error stack overflow desire better error error state june cc zpao", "d": "7/2017"}, {"body": "closing one favor", "d": "7/2017"}, {"body": "mqliutie clean consolelog android load application", "d": "7/2017"}, {"body": "every time get error method scroll dozens errors react broken state find error code actually blew biggest difficulty causes sort wish react would could stop dead even throw errors since would easier find root cause really viable state anyway nt seem manage wrap functional stateless components would really helpful supported way guarantee dev tool ie dev mode prod would show redbox rendering throws error", "d": "7/2017"}, {"body": "perhaps concern trycatch performance penalty soon obsolete one comment mention recent versions optimize functions containing trycatch blocks answer explains performance penalty avoided moving trycatch wrapper function main function could throw optimized petka antonov optimization killers guide use statements minimal impact must isolated minimal function main code affected js var errorobject value null function trycatch fn ctx args try return fnapply ctx args catch e errorobjectvalue e return errorobject var result trycatch mightthrow void unambiguously tells whether call threw result errorobject var error errorobjectvalue else result returned value", "d": "7/2017"}, {"body": "biggest difficulty causes sort wish react would could stop dead even throw errors since would easier find root cause really viable state anyway yes exactly react reacthotloader nt seem manage wrap functional stateless components would really helpful supported way guarantee dev tool ie dev mode prod would show redbox rendering throws error please read comment pretty much added", "d": "7/2017"}, {"body": "gaearon oh see nice though assume probably end using discovered thread something like dev mode", "d": "7/2017"}, {"body": "nevermind thought made possible display redbox place component failed appears display redbox place root component", "d": "7/2017"}, {"body": "error boundaries nt root mentioned put strategic places eg route handler wrapper important components big enough show useful box nt think good idea show place every individual components components offscreen little show box fact dev probably always want see fullscreen error still nt decided default way show error boxes react bvaughn prototyping point get back release", "d": "7/2017"}, {"body": "look forward exploring bit hopefully soon", "d": "7/2017"}, {"body": "going official name method react", "d": "7/2017"}, {"body": "settled", "d": "7/2017"}, {"body": "gaearon current component childs case unknown source components possibility dismantling important catch children parents", "d": "7/2017"}, {"body": "catches whole subtree component", "d": "7/2017"}, {"body": "catching errors child components supported use new hook react beta try read feature new blog post error handling react think close issue likely feature evolve time love feedback let discuss focused future issues", "d": "7/2017"}, {"body": "\u6d4b\u8bd5\u6d4b\u8bd5", "d": "7/2017"}, {"body": "\u6d4b\u8bd5\u6d4b\u8bd5", "d": "7/2017"}, {"body": "movement last couple years sure worth api churn nt seem like frequentlyrequested change think gaearon nhunzaker wanted make change might worth next major release", "d": "7/2017"}, {"body": "let close inactivity come back organically comes think high priority", "d": "7/2017"}, {"body": "think close returning arrays components supported since react beta try still limitations ssr support ready tracking fix final release thanks everyone feedback", "d": "7/2017"}, {"body": "thank dan", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "gaearon awesome improvement support pure text node", "d": "7/2017"}, {"body": "yes supports returning strings", "d": "7/2017"}, {"body": "thank viniciusdacal tested windows firefox osx safari osx chrome unable reproduce believe fixed", "d": "7/2017"}, {"body": "use example works filtering need use simulation currentelementclick like", "d": "7/2017"}, {"body": "like trying make setup similar know example illustration concept follow best practices example probably best create inline arrow function handle render", "d": "7/2017"}, {"body": "react htmlfor", "d": "7/2017"}, {"body": "resolution years anything move forward", "d": "7/2017"}, {"body": "going close since movement indication scenario common pain point meaning warning probably wo nt useful enough justify", "d": "7/2017"}, {"body": "anyone finds useful written library called reactfrontload lets bind promisereturning function component run component renders server client renders function runs synchronously server render well really final component render blocked resolved asynchronously normal client render run client page serverrendered also options specify finergrain control runs percomponent basis really useful data loading pretty much use case wrote solve try", "d": "7/2017"}, {"body": "jsx return promise returns component", "d": "7/2017"}, {"body": "think conditional rendering would nt approach know data", "d": "7/2017"}, {"body": "joining one think still essential feature react lacks also agree even third party libs may cover subject come directly within", "d": "7/2017"}, {"body": "came implementation", "d": "7/2017"}, {"body": "would also useful checkers like eslint could tell default props needed custom property", "d": "7/2017"}, {"body": "write autoplay", "d": "7/2017"}, {"body": "someone suggest apply autoplay video carousel item active carousels video play", "d": "7/2017"}, {"body": "html css notion inline block elements whitespace inline elements significant nt really altered way processor situtation complicated fact change elements inline block css still correct way would refer list default inline block elements rarely swapped practice never strip whitespace inline text elements default", "d": "7/2017"}, {"body": "closing since tests testing public api specific work eg done tracked separately", "d": "7/2017"}, {"body": "believe resolved definitely covers cases could find move forward new issues particular edge cases discovered", "d": "7/2017"}, {"body": "looks like issue closed verified fixed", "d": "7/2017"}, {"body": "reactnative input property providing something similar deal number input values could really nice addition though would argue happen user land probably need figure bad input handle empty case numbers report probably something else feature worth considering comfortable pushing community", "d": "7/2017"}, {"body": "nhunzaker think reasonable push community nt seem high demand react core let defer userland close", "d": "7/2017"}, {"body": "already internal keys use arrays index array insert new element keys wrong point important note common problem encountered writing list components", "d": "7/2017"}, {"body": "fix hacks", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "solution working pretty well far generating sequential ids simple utility living checksums time inspired jwietelmann said resetting perrequest basis maybe worth saying said much help working component library works best creating entire app utility generate ids let current export default function generateid prefix return export function resetidcounter current root component call resetcounter function server clears id memory time new server render browser nt really reset anything fine working well far", "d": "7/2017"}, {"body": "particularly annoying warning message especially case passing onchange handler everything looks works perfectly development try testing form component tests riddled warnings pretty sure masking crux problem trying solve whats adding pointless case since trying test onchange handler passed text field remove warning still means ca nt write tests handler", "d": "7/2017"}, {"body": "issue attach bogus grommet component provides controlled management custom prop provide prop react complains printing warning even though input fact controlled", "d": "7/2017"}, {"body": "closing since implemented warning would cover situation exampe", "d": "7/2017"}, {"body": "jamescharlesworth problem find solution", "d": "7/2017"}, {"body": "wnr dont know fixed react team yet quick dirty solution manually set attribute value change", "d": "7/2017"}, {"body": "javascript const fieldinput class fieldinput extends component static proptypes onchange proptypesfunc value proptypesoneoftype proptypesnumber proptypesstring constructor args super args componentdidupdate value thispropsvalue value const str thisrawstrsubstr thiscaretposition const index string thispropsvalue indexof str thiscaretposition handlechange ev thisrawstr string evtargetvalue thiscaretposition number evtargetselectionend render return works us usually use mask functions processing raw user input", "d": "7/2017"}, {"body": "going close since recent movement interest introduces potential problem existing test suites performance improvement would likely minimal", "d": "7/2017"}, {"title": "broken webpack tutorial", "body": "submitting current behavior followed webpack tutorial tried npm start resulted several errors starting error atloader find name describe downloaded zip file completed tutorial start test etc think zip file tutorial using set files noticed packagejson tsconfigjson vendorts different stylescss bsconfigjson even mentioned tutorial thing work zip file single png image file angularpng angular icon could open browser would render expected behavior would nice tutorial worked would helpful zip file files mentioned tutorial helpful see one version work putting date file pointer change log would save time trying determine one works minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18438", "d": "7/2017"}, {"title": "moving angular compile app errors page load", "body": "dev environment macbook air os x el capitan angularcli node os darwin ide vscode upgrading angular making numerous recommended tweaks able get app compile successfully however app errors page load two errors unhandled promise rejection set property listeners undefined zone task promisethen value typeerror set property listeners undefined second full error info see console unhandled promise rejection set property listeners undefined zone task promisethen value typeerror set property listeners undefined functionbind createclass createdirectiveinstance createviewnodes createrootview callwithdebugcontext objectdebugcreaterootview createrootview componentfactorywebpackjsonp core componentfactoryboundtomodulewebpackjsonp core applicationrefwebpackjsonp core typeerror set property listeners undefined functionbind createclass createdirectiveinstance createviewnodes createrootview callwithdebugcontext objectdebugcreaterootview createrootview componentfactorywebpackjsonp core componentfactoryboundtomodulewebpackjsonp core applicationrefwebpackjsonp core since error nt point particular file sure go troubleshooting zonejs issue something else reference packagejson file looks like", "num": "18437", "d": "7/2017"}, {"title": "browseranimationsmodule changes behaviour selectdropdowns", "body": "submitting current behavior rather complicated sum situation soposting matter basically programmatically remove option form dropdown dont want selection change case selectdropdown pristine removing option cause select display first option selected one defective plunkr expected behavior dont think selection pristine select change option removed programmatically working plunkr thin difference defective working plunkr working plunkr remove browseranimationsmodule moduleimports bottom file keep tsimport makes seem browseranimaitonsmodule somehow responsible changing behaviour selectdropdown minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18430", "d": "7/2017"}, {"title": "click working mobile", "body": "trying click nothing happens devices mobile works fine desktop", "num": "18429", "d": "7/2017"}, {"title": "documentation difficult scroll mouse windows", "body": "submitting current behavior scroll bar documentation really skinny trouble keeping mouse finally gave read doc tablet instead expected behavior windows scrollbar normal windows scroll bar minimal reproduction problem instructions motivation use case changing behavior environment windows", "num": "18426", "d": "7/2017"}, {"title": "httpclient support hybrid type options", "body": "submitting current behavior httpclient methods nt support options typed eg type supposed accept type signature overloading seems need repeat signature final definition expected behavior httpclient methods work options typed eg minimal reproduction problem instructions typescript function f x string string function f x number number function f x string number function f x string number return x interface x x number string function x x f ax reports error needs line fix think absurd argument type string number assignable parameter type number type string assignable type number motivation use case changing behavior need flexible typing writing app specific wrapper environment angular version edit looks like correctly repeats final signature real implementation none methods etc must missed current workaround would use things", "num": "18424", "d": "7/2017"}, {"title": "angular dynamic input animation reverts animation", "body": "submitting current behavior angular reverts animation styles dynamic input ends expected behavior unless change state expression element animated retain ending styles ends minimal reproduction problem instructions environment", "num": "18423", "d": "7/2017"}, {"title": "tour heroes subjectobservable code requires extra conversion call order compile", "body": "submitting current behavior subjectobservable code tour heroes section compile code compile giving error expected behavior change code thissearchterms asobservable debouncetime code compiles works think expected environment", "num": "18422", "d": "7/2017"}, {"title": "error encountered resolving symbol values statically", "body": "submitting current behavior sure angular bug one running ng serve get following error error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function positi original ts file resolving symbol appmodule c devgit appmodulets simply save file change detection triggers reompilation error gone line following console looks like end ng live development server listening open browser hash time chunk polyfillsbundlejs polyfillsbundlejsmap polyfills kb initial rendered chunk mainbundlejs mainbundlejsmap main kb initial rendered chunk stylesbundlejs stylesbundlejsmap styles kb initial rendered chunk scriptsbundlejs scriptsbundlejsmap scripts kb initial rendered chunk vendorbundlejs vendorbundlejsmap vendor mb initial rendered chunk inlinebundlejs inlinebundlejsmap inline bytes entry rendered error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function positi original ts file resolving symbol appmodule c devgit appmodulets webpack failed compile webpack compiling hash time chunk polyfillsbundlejs polyfillsbundlejsmap polyfills kb initial chunk mainbundlejs mainbundlejsmap main kb initial chunk stylesbundlejs stylesbundlejsmap styles kb initial chunk scriptsbundlejs scriptsbundlejsmap scripts kb initial chunk vendorbundlejs vendorbundlejsmap vendor mb initial chunk inlinebundlejs inlinebundlejsmap inline bytes entry webpack compiled successfully come environment tooling issues node version platform windows", "num": "18421", "d": "7/2017"}, {"title": "month date constructor indexed", "body": "submitting current behavior declaring new date month starts unusual behavior believe output html displayed minimal reproduction problem instructions mycomponentts mycomponenthtml motivation use case changing behavior date constructor take month variable starting", "num": "18420", "d": "7/2017"}, {"title": "tour heroes tutorial issue", "body": "submitting current behavior tour heroes tutorial part routing page configure routes code snippet title srcappappmodulets heroes route expected behavior title must srcappapproutingmodulets heroes route minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18419", "d": "7/2017"}, {"title": "httpobserve exposed well", "body": "submitting current behavior exposed expected behavior maybe exposed minimal reproduction problem instructions na motivation use case changing behavior already might well expose", "num": "18416", "d": "7/2017"}, {"title": "broken link docs", "body": "submitting current behavior go url gives expected behavior redirects new page one minimal reproduction problem instructions motivation use case changing behavior trying learn differences environment", "num": "18415", "d": "7/2017"}, {"title": "custom form controls using customvalueaccessor garbage collecting properly", "body": "submitting current behavior using component implements controlvalueaccessor make custom form component component addedremoved page via ngif directive subscribed form control valuechanges event attempt reset form destroy component causes valuechange subscription fire everytime form control recreated appears formcontrol garbage collected properly nt see way garbage collect manually happen standard form element destroyedrecreatedreset manner happen custom form control destroyedrecreated expected behavior valuechange event fire everytime component destroyed recreated form reset minimal reproduction problem instructions recreated click toggle control see resetting destroying recreating form control causes valuechange event fire standard element behaves expected custom control destroyed recreated also behaves mostly expected though subscription seems always fire twice reason motivation use case changing behavior real use case form requires custom form control toggled read edit mode button throw changes worked around using css classes hide show appropriate element environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18414", "d": "7/2017"}, {"title": "website ui issue webpack documentation", "body": "submitting current behavior website ui issue expected behavior ui smooth hassle free minimal reproduction problem instructions visit motivation use case changing behavior environment", "num": "18413", "d": "7/2017"}, {"title": "aio footer overlaps toc scrolling", "body": "submitting current behavior expected behavior toc staying visible minimal reproduction problem instructions realted motivation use case changing behavior good scrolling environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18411", "d": "7/2017"}, {"title": "docs aio possible xss vulnerability redirecting plnkrco docs noscript", "body": "submitting current behavior reading tutorial section tutorial link view live demo app open link noscript browser extension adds privacyxss protection user sends page throws error console well multiple regarding github resources various sites githubusercontentcom githubappcom expected behavior desired behavior provide xsssafe mode redirecting relevant thirdparty sites minimal reproduction problem instructions reproduce error user must noscript browser extension installed firefox seeing noscript browseragnostic bug producible modern browsers motivation use case changing behavior motivation changing error xss vulnerabilities dealt providing safest mostsecure experience user environment sitespecific angulario reproduced using noscript browser extension modern browseragnostic", "num": "18410", "d": "7/2017"}, {"title": "possible run without server", "body": "possible run without server working cordova hybrid mobile app development recently trying develop mobile app using scripts find project local working ng serve port see mobile app browser going run app android mobile getting indexhtml always showing loading totally one please help project setup", "num": "18409", "d": "7/2017"}, {"title": "showing file may harm computer", "body": "", "num": "18404", "d": "7/2017"}, {"title": "raw params string accepted httpclient httprequest", "body": "submitting current behavior passing option encoded string results type error objects expected expected behavior accepted string instance minimal reproduction problem instructions works expected results compilation error motivation use case changing behavior current behavour regression allowed use encoded strings request options considering object converted string could string beginning example params parsed object backend would possible default implementation makes difference nully values empty strings fixed custom information difference already lost private environment", "num": "18403", "d": "7/2017"}, {"title": "httpclient respecting withcredentials", "body": "submitting current behavior httpclient accepts property setting property nt anything running application chrome nt checked browsers expected behavior would expect request includes allow returned response header cookies set fetch api seems used instead requires set instead withcredentials property would expect httpclient choose correct setting based technology used vs fetch minimal reproduction problem instructions snippets assume cookie based authentication service logging check cookies provided response headers stored browser motivation use case changing behavior would like able use cookie based authentication service environment", "num": "18402", "d": "7/2017"}, {"title": "animation params support math operations", "body": "submitting current behavior previous animation throws expected behavior would expect binding syntax support math operations least string replacement otherwise still impossible make trivial animations reusable support booleans also sounds reasonable instance could allow animation called accept boolean param choose opacity animation opposite without need duplicate code environment", "num": "18398", "d": "7/2017"}, {"title": "httpclient http failure parsing error valid json", "body": "submitting current behavior request throws error trying parse response considered valid json according request const requestoptions objectassign responsetype json observe body httpobserve error expected behavior error thrown response minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18396", "d": "7/2017"}, {"title": "lazy loading feature dysfunctional lazy loaded", "body": "lazy loading feature dysfunctional lazy loaded submitting current behavior lazy loading module parsed loaded start app instantiation seems truly lazy loading expected behavior module parse start app minimal reproduction problem instructions motivationuse case changing behavior behavior performant leading unnecessary code bloat loazy loading framework environment angular version browser tooling issues na others na", "num": "18395", "d": "7/2017"}, {"title": "httpparams null value gets converted null query string parameter", "body": "submitting current behavior parameter set appended null value eg set param null gets converted paramnull expected behavior either param equal empty string omitted params completely minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18394", "d": "7/2017"}, {"title": "ngmoduleinjector exist type", "body": "hi used application integrate social media authentication working trying use getting following error error property ngmoduleinjector exist type typeof nodemodules angularcoresrclinkerngmodulefactory code fileoverview file generated angular template compiler edit suppress suspiciouscode uselesscode missingproperties tslint disable import angularcoresrclinkerngmodulefactory import import socialauthservice import angularcoresrcdiinjector class extends constructor parent super parent get null new return createinternal new return getinternal token notfoundresult token return token return return notfoundresult destroyinternal void export const new help resolve thanks", "num": "18393", "d": "7/2017"}, {"title": "missing documentation set source maps debugging", "body": "submitting current behavior see people suggest look compiled code nt possible due incorrect absent source maps angulario ca nt find info set expected behavior please cover docs setup amp maintain source maps minimal reproduction problem instructions motivation use case changing behavior well imine stackoverflow example environment", "num": "18389", "d": "7/2017"}, {"title": "ngcomponentoutlet allow module injectors addition component injectors", "body": "submitting current behavior ngcomponentoutlet allows user specify injector used instantiating inserting component using ngmodulefactory currently assumes injector passed component injector module injector leads restrictions injector passed ngcomponentoutlet additional services added via module containing component access providers limitation appears introduced pull request occurs assumption expected behavior ngcomponentoutlet either detect allow specification whether injector provided component module injector component injector behavior remain unchanged module injector ngcomponentoutlet attempt retrieve ngmoduleref injector using custom injector retrieves new module injector parent discarding newly added providers motivation use case changing behavior limitation prevents parent component dynamically loading several components different custom providers accessible module level introduces unnecessary complexity users writing dynamically loaded modules providers created via within parent component accessible providers dynamic component component injector tree module injector tree example declare service provider custom module able access additional providers create ngcomponentoutlet injector via providers within component tree access environment", "num": "18387", "d": "7/2017"}, {"title": "getting router data undefined upgrading angular", "body": "hello everyone release new version angular new http module upgrade angular version angularcli angularcli able use new module everything looks fine working development environment machine build production using angularcli notice variable data routes undefined new branch upgrade angularcli test angular angularcli works perfectly assume could something angular details server local code working version version red arrow got undefined solve following assign value routes terms route path data tooling issues platform window", "num": "18386", "d": "7/2017"}, {"title": "uncaught typeerror function", "body": "get weird error reason unable figure source behind js component import component angularcore component selector aapp templateurl acomponenthtml export class acomponent js module import ngmodule angularcore import browsermodule angularplatformbrowser import acomponent acomponentjs ngmodule imports browsermodule declarations acomponent bootstrap acomponent export class amodule js mainjs import platformbrowserdynamic angularplatformbrowserdynamic import amodule appamodule platformbrowserdynamic bootstrapmodule amodule js webpack config var path require path var webpack require webpack moduleexports entry srcappacomponentjs srcappamodulejs srcmainjs resolve extensions js output path dirname filename srcbundlejs plugins new webpackcontextreplacementplugin piece accounts path separators nix windows angular core root src location src module loaders loader babelloader query presets plugins transformdecoratorslegacy test jsx exclude nodemodules devtool cheapmoduleevalsourcemap function root path return pathjoin dirname path", "num": "18385", "d": "7/2017"}, {"title": "use async service angular interceptor", "body": "submitting x feature request current behavior using angular httpclient need modify request response async service httpinterceptor example modifying request export class useasyncserviceinterceptor implements httpinterceptor constructor private asyncservice asyncservice intercept req httprequest next httphandler observable gt input request applylogic output async elaboration request thisasyncserviceapplylogic req subscribe modifiedreq gt const newreq reqclone modifiedreq return nexthandle newreq return observable nexthandle obviously problem return newreq available different problem response need applylogic order update response case angular guide suggests something like adds side effect observable without affecting values stream also scenario nt know modify response without adding complexity asyncservice expected behavior angular interceptor able update request response async meccanism angularjs returned object promise able resolve motivation use case changing behavior need add services information requestresponse information retrived async call environment angular version", "num": "18382", "d": "7/2017"}, {"title": "updating disabled state replacing formgroup", "body": "submitting current behavior try replace formgroup bound template disabled state controls nt updated know use enable disable methods case generating complete formgroups replace using workaround crawls whole abstractcontrols tree runs enable disable methods believe fixed better way inside framework expected behavior properly refreshed dom toggle control state using new instance formgroup minimal reproduction problem instructions open related plunker click two enabled fields button title select nt changed state enabled click two disabled fields button name input nt changed state disabled step value state updated inside connected formcontrol printed values change disabledenabled state propagated dom created second plunker one small change binding controls using formcontrol instead formcontrolname behaves slightly different nt got problems switching state disabled ca nt return enabled state link motivation use case changing behavior need clean way replace formgroups containing formcontrols disabledenabled dom state corresponds formcontrol state environment browser x chrome desktop version x firefox version x ie version tooling issues node version platform windows", "num": "18381", "d": "7/2017"}, {"title": "module found error ca nt resolve gendirappappmodulengfactory", "body": "know question related asked many times think quiet interesting situation trying describe node installed machines running ubuntu ubuntu ubuntu node installed command lines ubuntu ubuntu already new version node installation done common machines version node npm application created angularcli repo githbub application docker machine using repo difference ubuntu ps ubuntu question codes machines command line used get code difference make compilation aot working machine failing another machine thanks", "num": "18380", "d": "7/2017"}, {"title": "async validator working without validatorrequired", "body": "submitting current behavior declare formcontrol without validatorrequired async validator error error error expected validator return promise observable ok expected behavior expected behavior would defining async validators formcontrol without required sync validator motivation use case changing behavior need field without required validation async validation environment", "num": "18378", "d": "7/2017"}, {"title": "hidden working platformserver", "body": "submitting current behavior hidden attribute adding platformserver javascript disabled example spider visiting web page element visible shouldnt expected behavior element marked hidden element hidden everyone platformserver client minimal reproduction problem instructions issue originally raised platformserver server env issue reproduced plunker github repo reproduce step reproduce download code use following commands open problem angular running browser everything working expected go chrome devtool settings disable javascript refresh page folowing error visible hidden browser javascript motivation use case changing behavior seo serving web page users disabled javascript bots spiders environment", "num": "18377", "d": "7/2017"}, {"title": "bindings working properly replacing formarray using setcontrol adding new controls", "body": "submitting current behavior replace formarray instance new instance reactive form using setcontrol view rendered newly inserted controls using insert bound correct value call setcontrol existing controls get removed view form value reset empty array insert controls formarray show view entry form values array created controls nt bind corresponding values adding two controls last two inserted controls show value view change entry form values array three controls inserted first inserted control loses binding reflect changes entry array anymore use push add new controls seems work first sight delete control last second last one bindings getting twisted expected behavior replacing formarray bindings addedinserted controls set correctly formarray nt replaced minimal reproduction problem instructions demo using insert click insert times form display controls showing consecutive values starting bottomup click reset controls removed view values array empty click insert severeal times two uppermost controls display value incorrect numbers displayed start although lowest value values array demo using push click reset click push three times click remove row first row last two inputs display number incorrect motivation use case changing behavior want display editable list formgroups user addinsertremove entries needed list needs clearedrepopulated user selects another item feels wrong keeping initial formarray instance calling removeat every entry clear formarray environment", "num": "18376", "d": "7/2017"}, {"title": "official page find angular plugins", "body": "official page people submit angular plugins helps developers find plugins easily differentiating angularjs hard search web angular ts plugins angularjs dominant world submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18375", "d": "7/2017"}, {"title": "router reusing parent component changing child route", "body": "submitting current behavior use case basic application shell header menu used base screens user logged following angular style guide screens use dedicated module routes declaration routes child routes shell component navigating expected shell component reused case shell component destroyed reinstanciated navigating child routes expected behavior since parent component change navigating child routes expect reused router minimal reproduction problem instructions see repo based angularcli log userpass navigate home screens motivation use case changing behavior since parent component state persisted child route change behavior inconsistent environment", "num": "18374", "d": "7/2017"}, {"title": "table build properly filtering", "body": "got problem filtering table filtering works perfectly fine deleting filter afterwards happen table rebuild planned lines place table anymore tried simplify html code need see please ask simplified typescript code thank help need input please ask", "num": "18373", "d": "7/2017"}, {"title": "animation rotation direction correct certain degrees", "body": "submitting current behavior demo degree rotation would change direction demo similar issue using wildcard could referring issue expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18372", "d": "7/2017"}, {"title": "using type needed injectable class injectable class leads ca nt resolve parameters", "body": "submitting current behavior uncaught error ca nt resolve parameters testcomponent seems possible use testcomponent type servicea testcomponent needs servicea dependency expected behavior okay inject servicea testcomponent minimal reproduction problem instructions moment issue resolving dependencies app nt find mistake rest like local environment execute npm start open browser motivation use case changing behavior would like inject dependencies via constructor using injector instance workaround environment", "num": "18371", "d": "7/2017"}, {"title": "missing class viewsidenav aioshell", "body": "submitting current behavior page menu block overrides container block block style class make page hard read expected behavior separate content block menu block minimal reproduction problem instructions go page environment", "num": "18370", "d": "7/2017"}, {"title": "passing data parent child components", "body": "facing issue passing data child component parent component another child component updating times current scenario scenario child component emit value another sibling component following things emitting variable child component catching variable data parent component emittingpassing data parent children component remove class child component seems working environment", "num": "18368", "d": "7/2017"}, {"title": "urlsearchparams interface page mdn found", "body": "submitting current behavior link urlsearchparams interface mdn returns found expected behavior probably linked environment", "num": "18367", "d": "7/2017"}, {"title": "router navigation triggered twice manual change browser url", "body": "submitting current behavior consider two routes master detail pattern like might want redirect master path particular done like guard typescript injectable export class redirectionguard implements canactivate constructor private router router canactivate thisrouternavigate crisiscenter return false solution work changing url manually browser url bar router triggers two navigation events expected behavior router trigger one navigation event navigating programmatically meaning changing manually url minimal reproduction problem instructions demo component redirection demo guard redirection steps reproduce open one plunker launch preview separated window able change manually url click item crisis list open console clear ouput change url directly browser bar go crisiscenter check console output multiple navigation start event crisiscenter even first redirection repeat test instead changing url click go crisis center home link list see working navigating programmatically motivation use case changing behavior described simple example bug currently use case behaviour difficult deal quite simple feature environment", "num": "18366", "d": "7/2017"}, {"title": "show key info element onmouseover", "body": "submitting current behavior moment highlevel view elements provides key pieces information parent modules names elements types elements expected behavior key pieces information parent modules names elements types elements key information onmouseover minimal reproduction problem instructions open mouse elements motivation use case changing behavior newbie information would speedup selection angular elements familiarisation angular general environment", "num": "18365", "d": "7/2017"}, {"title": "angular typescript array contents updating", "body": "submitting current behavior problem updating contents array angular component array name arr created store values used dataset chartjs chart run function returns array retrieved values data service assign array array declared top page loaded run function displays contents array using click event button output browser console follows array contents thus see retrieved data successfully updated array run another function using click event button retrieves another set data data service assigns data array right away later function contents array see values updated array output browser console follows view content array content still original content output browser console follows content arr array seemed changed part somehow changed separately run function display contents expected behavior running able see change contents array environment html file component line chart docs retrieve temp retrieve humid displayarray refresh component file import component oninit angularcore import dataservice dataservice import basechartdirective component templateurl chartjscomponenthtml export class chartjscomponent arr constructor private dataservice dataservice ngoninit thisarr thisretrievetempdatareturn function retrieves returns array temperature values retrievetempdatareturn var arr new array thisdataservicegetdata subscribe function response consolelog response jsonstringify response var item response consolelog pushing itemtemperature arrpush itemtemperature consolelog array returned arr return arr function retrieves assign temperature array arr array retrievetempdataassign var arr new array thisdataservicegetdata subscribe function response consolelog response jsonstringify response var item response arrpush itemtemperature thisarr arr consolelog array assigned temp thisarr function retrieves assign humidity array arr array retrievehumiddataassign var arr new array thisdataservicegetdata subscribe function response consolelog response jsonstringify response var item response arrpush itemhumidity thisarr arr consolelog array assigned humid thisarr display data chart using arr array dataset chart refreshchart consolelog display thisarr thisdatasets label values data thisarr function display contents array displayarray consolelog array contents thisarr arrays used chart js chart data visualization private datasets label values data private labels red blue yellow green purple orange private options scales yaxes ticks beginatzero true", "num": "18364", "d": "7/2017"}, {"title": "navigate one route another child route internally sidebar component nt work", "body": "submitting current behavior login made simple authenticate successful go dashboard route dashboard controller something like html javascript nt even work tried many solutions check web ca nt find proper answer know relevance please let know asap expected behavior want navigate internally dashboard route component work properly responsive minimal reproduction problem instructions motivation use case changing behavior environment angular latest nodejs", "num": "18357", "d": "7/2017"}, {"title": "aio fix links source path contains symlinks", "body": "paths contain symlinks eg link source generated api docs use unnormalized path lead github nt know symlinks eg upgrrademodule links generated based turn comes dgenipackages either assume could solved using fsrealpath get actual file path without symlinks sure updating existing properties appropriate new property needs added cc petebacondarwin", "num": "18353", "d": "7/2017"}, {"title": "reactive forms valuechanges method fires twice one change input fields", "body": "submitting current behavior enter value input box change event triggers valuechanges observable formgroup click onblur event input box valuechanges observable triggered distinctuntilchanged rxjs method catch either seems happen datatype text inp expected behavior valuechanges subscriber triggered change events onblur events reproduced plunkr steps included plunkr page minimal reproduction problem instructions see error chrome tested browsers valueschanges event firing change blur twice following open console developer tools click input field enter number value digit click anywere afterwards wait see fired event console click anywere page outside input box see fired event motivation use case changing behavior observable outputing object twice reason environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx might others iv checked tooling issues node version platform", "num": "18350", "d": "7/2017"}, {"title": "ca nt return error response httpinterceptor", "body": "submitting current behavior ca nt return error response httpinterceptor expected behavior background java return error code response want error handling return status response also next error minimal reproduction problem instructions environment", "num": "18348", "d": "7/2017"}, {"title": "routerlinkactive applies active class null routerlink", "body": "submitting current behavior using routerlinkactive routerlink null active class applied even using routerlinkactiveoptions set exact true expected behavior null roots active class applied route actually active minimal reproduction problem instructions set routerlink null add routerlinkactive options exact set true see plunker motivation use case changing behavior issue reported null routelink nothing clicked fixed related issue two go hand hand currently way round two ngif cater null routes environment browser x chrome desktop version xx tooling issues node version platform windows", "num": "18347", "d": "7/2017"}, {"title": "set viewencapsulation per module", "body": "submitting current behavior currently set view encapsulation component level meaning want use native shadow dom throughout app add bit configuration every single component expected behavior would great could set module level motivation use case changing behavior simply make life easier make framework bit friendly use", "num": "18346", "d": "7/2017"}, {"title": "testing error httptestingcontroller inconsistent types", "body": "submitting current behavior documentation states also something goes wrong clientside exception gets thrown rxjs operator network error prevents request completing successfully actual thrown following example provided function requires passing resulting error type found within thus unable simulate clientside network errors testing expected behavior either function accepts type input documentation handling updated include type one options still leaves actual type testing desired environment angular version", "num": "18345", "d": "7/2017"}, {"title": "much recursion older versions firefox routing root", "body": "submitting current behavior issue occurs older versions firefox windows bit validated issue occurs firefox windows bit validate issue nt occur firefox windows bit validate issue nt occur firefox ubuntu validated issue nt occure firefox windows bit issue occurs add route maps root angular application path navigating root angular application fails following error displayed browser console angular running development mode call enableprodmode enable production mode error error uncaught promise internalerror much recursion nodemodules angularcompiler compilemetadataresolverprototypecreateproxyclassproxyclass resolvedefinition createviewnodes createrootview callwithdebugcontext debugcreaterootview nodemodules angularcore prototypecreate nodemodules angularcore modules angularcore prototypecreatecomponent stack trace resolvepromise resolvepromise scheduleresolveorreject lt nodemoduleszonejsdistzonejs inner lt oninvoketask nodemoduleszonejsdistzonejs stange thing route configured problem nt occur problem occurs multiple routes configured expected behavior angular route component defined router minimal reproduction problem instructions use angularcli setup new project routing ng new routingtest routing add routes modified routes constant approutingmodule added different routes map appcomponent serve application ng serve disablehostcheck host serve application ubuntu verify firefox browser windows vm open application firefox windows navigate motivation use case changing behavior application broken clients older chrome browsers ca nt force update environment", "num": "18344", "d": "7/2017"}, {"title": "angular lazy routing", "body": "getting error implementing lazy routing angular import ngmodule angularcore import commonmodule angularcommon import httpmodule jsonpmodule angular import routing collectionsrouting import formsmodule angularforms import metadatamodule import collectionscomponent collectionscollectionscomponent import productspipe collectionspipesvegnonvegvegnonvegpipe import selectedcategorypipe collectionspipesselectedcategoryselectedcategorypipe import productsearchpipe collectionspipesproductsearchproductsearchpipe import productsortpipe collectionspipesproductsortproductsortpipe import truncatepipe collectionspipestruncatetruncatepipe import sharedmodule mainsharedmodule import loginmodule loginloginmodule ngmodule imports commonmodule sharedmodule httpmodule jsonpmodule routing metadatamoduleforroot formsmodule loginmodule declarations collectionscomponent productspipe selectedcategorypipe productsearchpipe productsortpipe truncatepipe exports collectionscomponent productspipe selectedcategorypipe productsearchpipe productsortpipe truncatepipe export class collectionsmodule collectionroutingts import modulewithproviders angularcore import routes routermodule angularrouter import collectionscomponent collectionscollectionscomponent const routes routes path component collectionscomponent export const routing modulewithproviders routermoduleforchild routes main routests path collections loadchildren appcomponentscollectionscollectionsmodule collectionsmodule getting id url collections error error component homecomponent part ngmodule module imported please help", "num": "18343", "d": "7/2017"}, {"title": "click events dispatched webworker mode", "body": "submitting current behavior cases click events dispatched actual listeners application running webworker mode using default mode clicks working expected expected behavior click events dispatched webworker mode well minimal reproduction problem instructions found happening one particular case built repo reproduces issue involves webworker project ejected ng cli run please execute motivation use case changing behavior behavior clicks altered switching browser webworker platforms environment", "num": "18342", "d": "7/2017"}, {"title": "hidden working platformserver", "body": "submitting current behavior hidden attribute adding platformserver javascript disabled example spider visiting web page element visible shouldnt expected behavior element marked hidden element hidden everyone platformserver client minimal reproduction problem instructions platformserver reproducible plunker create simple textbox error message hide textbox pristine status valid build platformserver disable javascript chrome visit page error visible motivation use case changing behavior seo serving web page users disabled javascript bots spiders environment", "num": "18340", "d": "7/2017"}, {"title": "lifcycles hooks firing navigated child component via routernavigate method", "body": "experiencing issue angular router navigation use routernavigate rootchild method using webpack packaging app based tutorial setup utilizing modules modules routing get children component issue links used navigate issue detail data arriving source promise flowing children store behaviouralsubjects authguards children see data arriving inside authguards expect however subscription inside child component placed inside ngaftercontentchecked fire precisely lifecycle hooks except constructor firing place subscription inside constructor child fires componen change detection misses subscription dataflow manually run cd inside constructor within subscription get error component properties exist null expected behavior expect lifecycle events fire time component instantiated minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18339", "d": "7/2017"}, {"title": "angular ca nt run ie browser", "body": "current behavior run work ie expoler expected behavior run project chrome safari works nomally use work well pollyfill suggested developers poolyfillts minimal reproduction problem instructions motivation use case changing behavior environment polyfillts bellow import import import import import import import import import import import import import import classlistjs run npm install save classlistjs import webanimationsjs run npm install save webanimationsjs import import import webanimationsjs run npm install save webanimationsjs import zonejsdistzone included angular cli import intl run npm install save intl import intllocaledatajsonpen import typedarrayindex import import import import import blobpolyfillblob import formdatapolyfillformdata problem suggest solve", "num": "18338", "d": "7/2017"}, {"title": "dates firefox android seem work", "body": "sure problem related firefox angular sorry firefox problem could nt find issue related decided inform better evaluated submitting current behavior date property component bind template using datepipe works devices amp browsers tried except firefox android also binding using input nt seem work aswell expected behavior date input binding work platforms minimal reproduction problem instructions open demo device open firefox android see nt even show template motivation use case changing behavior na pretty basic functionality seems work environment", "num": "18337", "d": "7/2017"}, {"title": "formatting error http section tour heroes tutorial", "body": "submitting current behavior information block tour heroes part continues end page heroes http header div tag missing left angle bracket expected behavior information block preceding heroes http terminate header rather continuing document minimal reproduction problem instructions access scroll heroes http section motivation use case changing behavior extended div block makes information follows appear part backend substitution users may skip environment google chrome", "num": "18336", "d": "7/2017"}, {"title": "console error logged angular event binding implementation", "body": "submitting current behavior trying implement event binding getting unexpected error developer tools console code snippet componenthtml component class calling method referenced line along logging message also getting error logged initial analysis side revealed condition check line number mentioned file error generated however trying log condition value code able get tagname property eventtarget able successfully change lower case sure internally able read tagname property eventtarget even though present expected behavior error come console error comes event try use ie click cut copy blur focus mouseover etc minimal reproduction problem instructions reference check console see error logged environment production", "num": "18334", "d": "7/2017"}, {"title": "ngafterviewchecked endless loop", "body": "submitting current behavior ngafterviewchecked execute function endlessly check img portrait landscape give style handling tried ngafterviewinit work expected tried ngafterviewinit work use preloader showing content till items data loaded expected behavior execute endlessly minimal reproduction problem instructions use ngafterviewchecked consolelog execute function motivation use case changing behavior environment", "num": "18332", "d": "7/2017"}, {"title": "child directive inherit parent directive click handler", "body": "submitting current behavior child directive inherit parent directive click handler expected behavior child directive inherit parent directive click handler minimal reproduction problem instructions clicking base button logs click console clicking child button extends base button log click console motivation use case changing behavior environment", "num": "18331", "d": "7/2017"}, {"title": "select comparewith receiving incorrect parameters", "body": "submitting current behavior reactive form select changing options results comparewith function called incorrectly expected behavior comparewith called correct model minimal reproduction problem instructions go change dropdown value click update list button value stays however reselected select comparisons logged console window see regenerated list comparisons go object v object object v string object motivation use case changing behavior form previous inputs impact options specific select user original selection still valid show still selected environment", "num": "18330", "d": "7/2017"}, {"title": "router upgrade work initial state angular", "body": "submitting current behavior similar setup instead using nt work manually invoke directly correctly sets locationsyncing pickup initial state initial event angualrjs already fired manually invoking extra time fixes currently replaced modified version setuplocationsyncnavigatebyurl function setuplocationsync upgrade upgrademodule const router upgradeinjectorget router const url documentcreateelement function hreftorouter href urlhref href routernavigatebyurl urlpathname urlsearch urlhash expected behavior loading angular route initial page load work minimal reproduction problem instructions except invoke directly call drop", "num": "18329", "d": "7/2017"}, {"title": "web workers best practices", "body": "submitting current behavior angular style guide include discussion web workers expected behavior discussion somewhere get web workers play well angular whether best avoid minimal reproduction problem instructions current unofficial examples using web workers angular ionic projects violate angular style guide putting heavy lifting inside page instead placing provider motivation use case changing behavior make sense define web worker inside provider better avoid instead rely reactive solutions like behaviorsubject provider emits ready page displays initial placeholder value meantime environment also started thread topic ionic forum", "num": "18328", "d": "7/2017"}, {"title": "http headers nt work", "body": "submitting code documentation nt work error environment browser x chrome desktop version official build chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform ubuntu", "num": "18325", "d": "7/2017"}, {"title": "get access angular documentation", "body": "hi using angular http service tried read documentation available information angular think good idea remove documentation versions quite lot people depending", "num": "18324", "d": "7/2017"}, {"title": "clearvalidators control nt clear errors", "body": "using reactive forms angular thisformcontrolscodeclearvalidators method clears validators form errors previously set control cleared results failing validations put check errors following reset errors validations completely removed thisformcontrolscodeseterrors null expected behaviour", "num": "18322", "d": "7/2017"}, {"title": "set basehref indexhtml breaks service worker", "body": "submitting current behavior basehref includes indexhtml using service worker breaks expected behavior request minimal reproduction problem instructions motivation use case changing behavior static page host service provider ca nt set indexhtml directory index must request indexhtml explicitly url even set base href works since generated ngswmanifestjson declare start indexhtml default indexhtml treated different resource cached another problem environment", "num": "18321", "d": "7/2017"}, {"title": "model updating template called", "body": "submitting current behavior working angular run problem inasmuch changes model component class reflected view manually call code anything ordinary shown code people ca nt work working either reasons suspect may well bug components application using change detection strategy code component looks like see calling show indicator html http request going currently indicator appear called wait long enough angular updating immediately setting expected value expected behavior expected behaviour indicator appear immediately html called without manually tell angular detect changes calling motivation use case changing behavior need call model changes environment browser chrome mac desktop version tooling issues node version platform mac macos sierra", "num": "18320", "d": "7/2017"}, {"title": "unable set http header authorization", "body": "creating http request header header nt added request using service projectservice skip codes getprojects observable let url apimainurl apiproject return thisrequestheaders map thisextractdata catch thishandleerrorobservable skip codes requestheaders let headers new headers headersappend accesscontrolalloworigin headersappend authorization token localstoragegetitem token let options new requestoptions headers headers return options ngoninit authorizationauthorization hash error details posted question stackoverflow", "num": "18319", "d": "7/2017"}, {"title": "custom pipes stopped working angular", "body": "submitting current behavior attempt use custom pipe never found already tried different scenarios console always shows expected behavior custom pipe found working expected minimal reproduction problem instructions create pipe file inside project import pipe pipetransform angularcore pipe name productfilter pure false export class productfilterpipe implements pipetransform transform products filterterm string products filterterm return products filter items array items match return true kept false filtered return productsfilter product gt productnameindexof filterterm try use pipe added main module declarations environment browser x chrome desktop version xx", "num": "18318", "d": "7/2017"}, {"title": "module need import", "body": "submitting current behavior imports browsermodule appmodule orther module need need import commonmodulemddatepickermodule every module import many times expected behavior import commonmodulemddatepickermodule appmodule motivation use case changing behavior environment code appmodule sharedmodule", "num": "18317", "d": "7/2017"}, {"title": "use angular pipe component", "body": "component base app every component using datatable plugin custom datafilterpipe import like every component error get error error uncaught promise error type datafilterpipe part declarations modules please consider moving datafilterpipe higher module created new module called datafiltermodule import datafiltermodule import module appmodule error get added exported datafiltermodule like good news edit custom filter", "num": "18316", "d": "7/2017"}, {"title": "elements render dom following", "body": "submitting current behavior elements following ngcontainer element within component attribute selector render dom expected behavior elements component template render dom minimal reproduction problem instructions aforementioned plunker tr element content missing row get rendered template tablebodycomponent wrap content ngcontent element rows would show appropriately motivation use case changing behavior use case complicated logic tr elements use varying colspan rowspan want keep separated component keep code clean readable also necessitates use ngcontainer elements handle complexity logic use case actually end multiple tbody elements table repeated using ngforof directive use case work need use attribute selector component representing contents tbody parent element tr elements tbody since permitted parents tr table tbody thead tfoot see element name component selector tag parent element option environment", "num": "18314", "d": "7/2017"}, {"title": "ng build prod fails since today", "body": "submitting current behavior steps following output comes ps projectspackagetest gt ng build prod hash time chunk polyfills kb initial rendered chunk main kb initial rendered chunk styles bytes initial rendered chunk vendor kb initial rendered chunk inline bytes entry rendered error srcmaints module found error ca nt resolve gendirappappmodulengfactory projectspackagetestsrc srcmaints multi srcmaints happens roughly since today noon utc expected behavior production build runs minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18313", "d": "7/2017"}, {"title": "broken link browser support guide", "body": "submitting current behavior browser support page http entry optional browser features broken link maybe httpclient addition modified routes caused break expected behavior http entry browser features polyfilled correct api referenceguide minimal reproduction problem instructions go look last entry table motivation use case changing behavior accurate docs environment na", "num": "18312", "d": "7/2017"}, {"title": "content projection using ngif causes animations work", "body": "submitting current behavior nested components content projection container ngif causes animations animate correctly minimal reproduction problem instructions take following use case tabs component uses ngcontent slot content content rendered active tab focused done ngif tabcomponent tabscomponent compose markup like click second tab animation run tried running component animation seem work change correctly work upon investigation found component animation still getting initialized despite rendered ref tried work around creating body content using reading content tab like parent component tab activated would create view like tabtitle export class tabscomponent contentchildren tabcomponent tabs querylist viewchild tabcontent read viewcontainerref tabcontent activate tab thistabcontentclear thistabcontentcreateembeddedview tabtemplateref resulted result see result complex demonstration plunker environment angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac", "num": "18310", "d": "7/2017"}, {"title": "angular ngcomponentoutlet loads dynamic components route content injected", "body": "submitting current behavior using ngcomponentoutlet directive dynamically load different components component loaded manner ngcontent areas content injected able successfully load different components based widths device however route content targeting ngcontent areas getting loaded according documentation ngcomponentoutlet target optional list projectable nodes insert content ngcontent placeholders able inject static text nodes ngcontent areas component swapped via ngcomponentoutlet however get route content injected expected behavior objective page wrapper component handle responsive needs like different navigation elements smallmediumlarge responsive designs expectation able inject route content different ngcontent areas different parent component dynamically injected based device widths minimal reproduction problem instructions created plunkr demonstrates issue plunkr routes pages amp route uses component dynamically loads component based device width added ability load static content route demonstrate content get loaded ngcontent areas component loaded dynamically route uses component demonstrating content pagetwocomponent gets injected correct ngcontent parent component problem statement static content pagewrapper component gets injected ngcontent placeholders smallmediumlarge components yet route content page motivation use case changing behavior motivation seamlessly handle responsive navigation needs component handle different navigation implementations based device widths think swapping parent components based device widths clean way accomplish close think getting work figure inject route content appropriate parent component ngcontent parent component dynamically loaded based device width yet static content get injected inject route content environment", "num": "18309", "d": "7/2017"}, {"title": "contextual arabic numeric shapping support", "body": "introduction arabic numeric shaping arabic many languages thai bengali classical shapes digits national digits different conventional western digits european national digits semantic meaning european digits numbers form read left right significant digit left difference difference glyphs european digits arabicindic digits arabic user point view arabicindic numerals basic numerals used almost forms documents government documents ids birth certificates driver licenses passports household bills bank statements newspapers calendars road signs menus options arabic numeric shaping options taken consideration implementing national numeric shaping support frameworktechnology options none shaping performed value appears data source national digit shapes determined user language contextual digit shapes determined preceding characters buffer european digits follow strong latin character arabicindic digits follow strong arabic character preceding strong characters base text direction attribute determines digit shaping arabicindic digits rtl context european digits ltr context pseudo sample abc arabic arabic sample abc \u0623\u0628\u062c\u062f sample buffer option ltr context rtl context none ltr contextual national ltr problem statement available frameworkstechnologies lack contextual shaping option national digits contextual digit shaping important feature arabic users expect see arabicindic numerals european numerals mixed english arabic data example document many paragraphs arabic others english arabic paragraphs arabic users expect see national arabicindic numerals english paragraphs arabic users expect see european numerals since mixed english arabic data cases common arabic region case numerals common figure sample communication thread using ibm lotus notes figure sample arabic english list references arabic paragraphs list references names include numerals common arabic users well case arabic users expect see numerals european arabicindic figure sample arabic paragraph users expect see european numerals direct conversion digits latin national fulfil arabic users needs contextual behavior core numeric shaping option needed arabic users point view", "num": "18308", "d": "7/2017"}, {"title": "config nginx run application", "body": "new angular would like put application server docker container running angular application angularcli following steps installation angularcli creation application serving application angular application working correctly want avoid command thinking developing dockerized application running angular application nginx file nginx config nginx building docker image running container identification ip address container open browser issue think npm packages accessible sure wrong exactly say page empty without error message console code obtained using code page obtained use command wrong repo example available github", "num": "18306", "d": "7/2017"}, {"title": "animations animatechild working correctly", "body": "submitting current behavior bug war present angular appears newer version test setup contains two components parent component created destroyed ngif inner child component angular animation assigned components created inner one plays animation ok outer component destroyed disappears inner component finish animation ca nt see childs fade animation nok animatechild outer component make work nt expected behavior finished animation child component destroying parent component minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18305", "d": "7/2017"}, {"title": "click method button added using element ref dosent work", "body": "component template click method never fired also interpolation inner html dosent work tried force change detection using ngzone effect", "num": "18304", "d": "7/2017"}, {"title": "type definition urlmatcher allow return null", "body": "submitting current behavior type definition allow return null expected behavior type definition allow return null according docs tests think defined return null like ts angularpackagesroutersrcconfigts export declare type urlmatcher segments urlsegment group urlsegmentgroup route route gt urlmatchresult null export type urlmatchresult consumed urlsegment posparams name string urlsegment null doc test returns null doc ts function htmlfiles url urlsegment return urllength amp amp url pathendswith html consumed url null const routes matcher htmlfiles component htmlcmp test test using cast runs even function returns null ts const matcher g r gt path return consumed sslice posparams id else return null checkredirect matcher matcher component componenta children path b component componentb urltree gt expecttreetobe minimal reproduction problem instructions created plunker nt work see motivation use case changing behavior create custom url matcher cast like ts function htmlfiles url urlsegment return urllength amp amp url pathendswith html consumed url null const routes matcher htmlfiles component htmlcmp without casting following error occurs environment", "num": "18303", "d": "7/2017"}, {"title": "translation nested html tags", "body": "submitting current behavior try generate translation file html nested tags change internal tags weird tags example html file instagram appears like xlf file generating problem happens deploy app using messages angular aot nested html case font awesome icon dissappears means startitalictext tag absolutely ignored expected behavior internal html tags remain untouched static text least substituted wildcard like kind variable minimal reproduction problem instructions create html element nested html element try first one example generate localization file using see message stored localization file motivation use case changing behavior think fairly common use case want translate text tags also covers case using font awesome icons environment", "num": "18302", "d": "7/2017"}, {"title": "dynamically created modules importing feature modules declarations nt work", "body": "submitting current behavior dynamically created module dynamically components declared imports feature module declarations components component factories dynamic module compiled compilercompilemoduleandallcomponentsasync rendered incorrectly via viewcontainerrefcreatecomponent ie dynamically created component rendered first declared component feature module accidentally rendered instead real case feature module like materialmodule angularmdcweb expected behavior dynamic component declared dynamic module rendered viewcontainerrefcreatecomponent declared component feature module rendered dynamic module import feature module eg materialmodule dynamic component template use components declared feature module minimal reproduction problem instructions try comment exports declarations featuremodule srcstaticts line disable issue see difference motivation use case changing behavior environment", "num": "18301", "d": "7/2017"}, {"title": "animations stagger working route outlet", "body": "submitting current behavior parent component routeroutlet home component rendered router animation working fine components list animations issue refreshed page work fine navigated home never seems work initialization try push pop single item animation works though router animation done querying calling animatechild expected behavior refreshed navigated stagger animation work like animation minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18300", "d": "7/2017"}, {"title": "angularcommon issue openid authorization flow", "body": "submitting current behavior given following code typescript const headers new httpheaders set authorization bearer thisoauthservicegetaccesstoken http accept acceptencoding gzip deflate br acceptlanguage enus en de deat accesscontrolrequestheaders authorization accesscontrolrequestmethod get connection keepalive host origin referer useragent windows nt khtml like gecko http accesscontrolallowheaders authorization accesscontrolalloworigin date sun jul gmt server kestrel http accept applicationjson textplain acceptencoding gzip deflate br acceptlanguage enus en de deat authorization bearer connection keepalive host origin referer useragent windows nt khtml like gecko http accesscontrolalloworigin contenttype textplain date sun jul gmt server kestrel transferencoding chunked xrobotstag noindex nofollow http pong unfortunately code example since apparently sets response first response instead second one expected behavior behavior match old http client implements flow correctly typescript const headers new headers headersset authorization bearer thisoauthservicegetaccesstoken pong minimal reproduction problem instructions motivation use case changing behavior openid connect flows supported consider bug since old client perfectly works scenario environment browser x chrome desktop version chrome android version xx tested chrome ios version xx tested x firefox version safari desktop version xx tested safari ios version xx tested x ie version x edge version tooling issues node version platform windows mac linux others webserver kestrelaspnet core", "num": "18299", "d": "7/2017"}, {"title": "asking form control status throws exception", "body": "submitting current behavior form control validation directive get input input may changed affect validity directive asks form control validity get exception control become invalid changing inputs expected behavior class added without getting exception minimal reproduction problem instructions example form controls name length length defined max allowed length name steps reproduce enter name example abc name control valid step enter length gt example name control becomes invalid want get class invalid wrapping name control get exception issue directive usage write way nt get exception classinvalid formgroupcontrolsnamevalid environment", "num": "18298", "d": "7/2017"}, {"title": "fr routes group", "body": "regression behavior used work stopped working new release bug report x feature request documentation issue request support request gt please submit support request instead see motivation use case changing behavior help organize routes logical groups group route pattern prepended routes groups contained within placeholder arguments group pattern ultimately made available nested routes", "num": "18295", "d": "7/2017"}, {"title": "ngif fail boolean variable", "body": "submitting current behavior simple ngif like boolean change true false component child component visible output watch loading watch false expected behavior case works perfectly minimal reproduction problem instructions strange plnkr works dependencies project works without js error environment", "num": "18294", "d": "7/2017"}, {"title": "interceptors aot", "body": "submitting current behavior using angular angular cli following guidelines angular site added authorization headers timings services using interceptors works fine however compile aot none interceptors run anymore expected behavior interceptors run using aot environment", "num": "18293", "d": "7/2017"}, {"title": "angular router cuts url amp", "body": "submitting current behavior sure exact version started happening come attention longer includes anything eg path show pretty sure change version sure either case nt see mention change changelog bug least undocumented breaking change tested hashbased routing possible hashbasedroutingspecific bug expected behavior route url minimal reproduction problem instructions url fragment set line appts motivation use case changing behavior correctness environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx edit sorry rush forgot add usual required information thanks reminder trotyl", "num": "18292", "d": "7/2017"}, {"title": "httpinterceptor intercepting observable value", "body": "please help resolve following issue tokenprovider service getaccesstoken observable necessary obtains new token using refresh token eg token got expired hour intercept req httprequest next httphandler observable gt const result thistokenprovidergetaccesstoken subscribe accesstoken gt const request reqclone setheaders authorization return nexthandle intercept observable ps noticed people try obtin new access token using refresh token error amp amp seems people know refresh token lifetime refresh token use refresh token get new access token expired", "num": "18291", "d": "7/2017"}, {"title": "working windows environment", "body": "submitting current behavior downloaded installed node modules ran app per testing documentation failed reproduce even initial expected behavior expected behavior per first karma test minimal reproduction problem instructions downloaded actual behavior motivation use case changing behavior quick check see debugging actually looks like environment", "num": "18288", "d": "7/2017"}, {"title": "archivestablenext modes angulario", "body": "angular coming september need solid plan docs versioning lts must keep docs around easy find location speaking petebacondarwin juleskremer proposal add mode feature aio app would three recognized modes stable used angulario next used nextangulario archive used vxxangulario eg mode feature would control four things within app theme colors used within header footer app maybe tbd stable mode would use current angulario palette next mode would use slightly different palette bright maybe red archive mode would use gray color palette redirection marketing urls docs archive next mode marketing pages irrelevant next archived mode appropriate redirect visitor actual documentation redirection happen via location service using historyreplacestate nt interfere critical path tti nt need maintain special firebase hosting config various environments mode activation correct mode activated either postbuildpredeploy time bootstrap time cases understand target environment activating mode predeploy time would allow us better control robotstxt ban crawling next archive app something nt today local development assume default stable mode allow mode changed using query parameter development debugging add robotstxt archived next deployments prevent crawling adjust version picker contain info nextstable archived versions select one appropriately two new entries added version picker next stable archived versions added picker add currently active version selected dropdown default current version also stable next version number appended item dropdown menu example dropdown menu content", "num": "18287", "d": "7/2017"}, {"title": "query parasm", "body": "page loading query params clearing save query parms", "num": "18286", "d": "7/2017"}, {"title": "require least one root component defined html instead requiring", "body": "submitting current behavior list multiple root components angular requires declared html otherwise throws error expected behavior option root module says among listed root components enough least one html motivation use case changing behavior need use angular pages nonspa traditional web application idea user goes server returns html contains page load angular handles component page etc initial thought list page components foo bar root components turns root components must declared html", "num": "18285", "d": "7/2017"}, {"title": "docs angular minimal project setup", "body": "great play ng comes real project setup would prefer start completely blank project well maintained clean one adds stuff needed personally found good docs matter added official angular docs boilerplate something like", "num": "18281", "d": "7/2017"}, {"title": "viewchild viewchildren read multiple directives tokens element", "body": "submitting current behavior using query elements get corresponding directive order simultaneously get multiple directives tokens element single element would add template references like list elements like expect would write directive like directive selector somecomponent class mydirective constructor public elementref elementref self inject routerlink public routerlink routerlink self inject somecomponent public somecomponent somecomponent component selector myapp template class myappcomponent viewchildren mydirective mydirectivelist querylist ngafterviewinit thismydirectivelistforeach mydirective gt consolelog mydirectiveelementref consolelog mydirectiverouterlink consolelog mydirectivesomecomponent see eg expected behavior would nice allow reading list tokens order allow getting multiple directives tokens element simultaneously would allow write eg use eg furthermore would nice able use decorators like etc parameter motivation use case changing behavior sometimes one wants query list elements certain component also get corresponding elementref directives also put element soon list elements dynamic ca nt template references therefore need write directive explained moreover directive needs limited component using still applied content children descendants", "num": "18280", "d": "7/2017"}, {"title": "windowlocationhash cause route event intended purpose navigate anchor", "body": "component simple link navigate subsection page using anchor tags students goto location string void windowlocationhash location works well however route matches students defined instead navigating anchor instead navigates students page course workaround simple use different name anchor tag however seems worth noting project using angular cli angular chrome browser", "num": "18279", "d": "7/2017"}, {"title": "cordova webview routernavigate working offline completely", "body": "using angular v v mvc web applicationcordova app loading den web applicationtablet android ipad ios routing config web application processcomponent click event angular binded click event call navigate advicereportcomponent device online works fine navigate calls device offline navigate calls okay working like app online mode example one navigate usage nt work call seconds call constructor child component removed option skiplocationchange nt helps notice using angular v navigate calls application works offline another issue offline mode code execution constructors child components like reportcomponent life cycle events ngoninit nt call directly delay seconds cordova android webview upgrade angular fixed call issue life cycle events broken routernavigate usage offline mode", "num": "18278", "d": "7/2017"}, {"title": "add scientific number format pipe", "body": "submitting current behavior nt way format number scientific notation expected behavior able format numbers scientific notation ex would new pipe motivation use case changing behavior able format numbers scientific notation", "num": "18276", "d": "7/2017"}, {"title": "routerlinkactive nt work links inner routeroutlet", "body": "submitting current behavior links marked routerlinkactive nt become active placed inside child routeroutlet route change fired clicking link parent routeroutlet expected behavior links become active current route matches route specified routerlink minimal reproduction problem instructions try switch categoriestest category note best tab become inactive motivation use case changing behavior environment", "num": "18275", "d": "7/2017"}, {"title": "urlsearchparams unescape parameters rawquery", "body": "submitting current behavior passing rawquery constructor urlsearchparams reading values via getter methods expect get unescaped values instead api returns escaped value example decoding query expect value read instead api returns expected behavior expect get back unescaped value minimal reproduction problem instructions following testcases shows issue typescript fit make sure url params work expected gt const p new urlsearchparams const value b c \u00e4 pset value expect pget toequal value plnkr reproduce motivation use case changing behavior behaviour symmetric setting value reading vs reading value raw query native urlsearchparams implementation handles correctly environment", "num": "18274", "d": "7/2017"}, {"title": "route param auto change refresh window", "body": "submitting current behavior route param blank string refresh window url auto change refresh url refresh url one time every time refresh url append string expected behavior url keep refresh minimal reproduction problem instructions motivation use case changing behavior router config follow support optional router params using placeholder instead using blank string instead url like follow find optional router param apply case environment", "num": "18273", "d": "7/2017"}, {"title": "throw extraction two different contents id", "body": "submitting x feature request current behavior use custom ids translations multiple elements custom id different contents get one translation extracted eg first one extracted replaced content use translations different source language expected behavior throw error least print warning extract id different contents motivation use case changing behavior avoid errors", "num": "18272", "d": "7/2017"}, {"title": "routing named outlets work properly child routes", "body": "submitting current behavior need named outlets navigation followed official angular docs example ended works fine works fine case need put routes parent route authentication guard work expected typescript routermoduleforroot canactivate path children path secondpage id component secondpagecomponent outlet contentsecond path firstpage component firstpagecomponent outlet contentfirst usehash true enabletracing true using route inside outlet thisrouternavigate outlets contentsecond secondpage pagenumber causes router event navigationstart navigationstart id url contentsecond navigationstart id url contentsecond router event navigationerror navigationerror id url contentsecond error error match routes url segment navigationerror id url contentsecond error error match routes url segment applyredirectsnomatcherror error error uncaught promise error match routes url segment error match routes url segment works feels weird since fails typescript routermoduleforroot canactivate path children path example component firstpagecomponent usehash true enabletracing true router event navigationstart navigationstart id url example navigationstart id url example router event routesrecognized routesrecognized id url example urlafterredirects example state route url path route url path route url example path example routesrecognized id url example urlafterredirects example state routerstatesnapshot works partly fails end typescript routermoduleforroot canactivate path children path home children path firstpage component firstpagecomponent outlet contentfirst path secondpage children path id component secondpagecomponent outlet contentsecond usehash true enabletracing true works fine thisrouternavigate secondpage outlets contentsecond pagenumber works fine thisrouternavigate home outlets contentfirst firstpage fails thisrouternavigate secondpage outlets contentsecond pagenumber router event resolvestart resolvestart id url secondpage urlafterredirects secondpage state route url path route url path route url secondpage path secondpage route url path id resolvestart id url secondpage urlafterredirects urltree state routerstatesnapshot router event resolveend resolveend id url secondpage urlafterredirects secondpage state route url path route url path route url secondpage path secondpage route url path id resolveend id url secondpage urlafterredirects urltree state routerstatesnapshot router event navigationerror navigationerror id url secondpage error error activate already activated outlet navigationerror id url secondpage error error activate already activated outlet routeroutletactivatewith error error uncaught promise error activate already activated outlet error activate already activated outlet feels odd since routing back forth worked without errors expected behavior behave like since behaves like work minimal reproduction problem instructions use code snippets play around example motivation use case changing behavior make named outlets work expected environment edit accidentally posted empty issue closed wrote issue reopened", "num": "18271", "d": "7/2017"}, {"title": "nodemodules automatically installed new app", "body": "current behavior c ng serve angularcompilercli package properly installed error angularcompilercli package properly installed object c modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object c modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require install nodemodules run successfully irritating install manually new app help", "num": "18262", "d": "7/2017"}, {"title": "common httpparams encoding form data", "body": "submitting current behavior using send form data using plus sign parameter correctly encoded expected behavior encoding correct minimal reproduction problem instructions plunker performs bogus http post request form data contains email address containing plus sign environment browser x chrome desktop version", "num": "18261", "d": "7/2017"}, {"title": "docs aio api missing constructor overloads", "body": "submitting current behavior currently documentation api nt display constructor overloads even exist expected behavior overloads displayed api documentation minimal reproduction problem instructions see documentation new httprequest api one constructor descriptor available overloads see via source code", "num": "18258", "d": "7/2017"}, {"title": "docs aio request add links angular subdomains", "body": "submitting motivation believe would helpful add angular subdomains docs well people nt know existence links would nice able access tools angular ecosystem docs website cliangulario mobileangulario universalangulario protractorangulario materialangulario newest addition blogangulario current blog link still points old blog", "num": "18257", "d": "7/2017"}, {"title": "http request status always pending", "body": "submitting current behavior new http request example http get request put pending state seems happen version chrome refreshing page making request issue however sometimes request processed request pending status back server hit expected behavior request hit backend environment browser x chrome desktop version xx tooling issues node version platform mac others", "num": "18256", "d": "7/2017"}, {"title": "docs aio simple deploy working html templates", "body": "simple deploy working specify html templateurl", "num": "18255", "d": "7/2017"}, {"title": "using routernavigate navigate another component invoke oninit method", "body": "hi implementing project angular using version ngversion redirecting app another component doesnt invoking oninit method sample code fblogin const provider facebook thissocialloginserviceonfacebooklogin subscribe response gt thisauthservicesocialsignup provider response subscribe res gt consolelog thisauthservicegettoken consolelog redirecting thisrouternavigate redirecting app another route success http service call current behavior register component constructor private authenticateservice authenticateservice consolelog ok working ngoninit working expected behavior constructor private authenticateservice authenticateservice consolelog ok working ngoninit work checked issue web found articles like saying add scripts nt folders node modules getting import files import please let know missing environment browser chrome desktop latest version", "num": "18254", "d": "7/2017"}, {"title": "router without", "body": "submitting current behavior app custom routing behavior without routeroutlet everything works fine navigating path parameter path another parameter value crashes error typeerror read property component null router function preactivationtraverseroutes expected behavior error able use router without outlets minimal reproduction problem instructions plunkr watch console navigate crisis center hero ok navigate hero heroes ok navigate hero hero navigationerror angular libraries updated version", "num": "18253", "d": "7/2017"}, {"title": "feature add selfprovider", "body": "submitting current behavior currently wa nt add component providers list use forwardref write something like ts const mycontrolvalueaccessorprovider provide ngvalueaccessor useexisting forwardref gt mycomponent multi true component providers mycontrolvalueaccessorprovider export class mycomponent implements controlvalueaccessor expected behavior able create provider without explicitly referencing component like ts const controlvalueaccessorprovider provide ngvalueaccessor useself true multi true component providers controlvalueaccessorprovider export class mycomponent implements controlvalueaccessor minimal reproduction problem instructions na motivation use case changing behavior using selfprovider makes code simpler create generic providers used many components example would need create provider ngvalueaccessor component making components work forms would easier programmers would encourage", "num": "18251", "d": "7/2017"}, {"title": "quick start fail start server", "body": "submitting current behavior trying use stepbystep install quickstart try start server take error says nodemodules appears empty may need run expected behavior following stepbystep quickstart step minimal reproduction problem instructions install nodejs install angular cli npm install g angularcli created new project ng new myapp goes directory cd myapp try start server ng serve open motivation use case changing behavior start learn angular environment", "num": "18249", "d": "7/2017"}, {"title": "language service errors possibly null binding already checked", "body": "submitting current behavior given component language service raises error already checked expected behavior raise error environment", "num": "18248", "d": "7/2017"}, {"title": "replacement resolve amp guard", "body": "submitting current behavior way guard resolve used restrictive many case make complicated simple things expected behavior introduce new concept solve theses common problems example userguardresolver able store data cancel route activation redirect motivation use case changing behavior problem pass parameters resolve guard using multiple times following code work show way pass theses parameters case pass parameters data using guard multiple times problem sometimes want guard stuff resolve resolve stuff guard example make http call guard check stuff want make available component store data sometimes get resolve http call want cancel route activation redirect sure best solution make easier integrate concepts problem way order chain easily guards resolve see example environment", "num": "18247", "d": "7/2017"}, {"title": "found errors zonejs", "body": "ok give attempt set local environment run multipul apps one directory commonshared resources thought post case someone help nots absolutely rare discussion forum directory structure locally use liteserver root hence modified path systemjsconfigjs load zonejs able find components could nt find topic online pointing idea avoid duplicating resources thanks much advance consideration", "num": "18246", "d": "7/2017"}, {"title": "button click event fired view changed focus change", "body": "submitting current behavior button click event fired component view changes user clicking button click event fired particular suppose button click event handler another element shown ngif form control becomes touched first focus form control click button expect fire button click event happens instead focus changes form control touched property evaluates true shows otherwise hidden element button click event never fired click event fired view nt change anymore expected behavior always fire click event execute event handler minimal reproduction problem instructions plunker steps reproduce focus input click button text input shown issue environment", "num": "18244", "d": "7/2017"}, {"title": "attribute directive unable get reference content grandchildren", "body": "submitting current behavior instance specifies pick children components pick direct descendants element decorated directive expected behavior option says tin include indirect descendants minimal reproduction problem instructions run look console log output empty array instead array containing elements add directly underneath found motivation use case changing behavior motivation actual use case scenario complex describe goes something like generic component supports element recycling may contain lists components want run custom actions recycled call give interface mark templates ca nt talk directly nested instances dynamically created however use directive detect item recycled via context property order work directive must able find descendants may nested inside outer component ca nt instantiate directive inside component loses access aforementioned context sure simpler use cases would useful example let say want global builtin search function pages app including highlighting feature want encapsulate highlighting behavior attribute directive mark searchable sections order work require working recursive query environment", "num": "18242", "d": "7/2017"}, {"title": "angular compiler cache issue", "body": "submitting current behavior related tool running inside angularcli project caches contents files inside change refers old contents compiler caches js files metadata different way around complains meaning metadata included correct format tested two simple folders right beside one includes demo angularcli app one primitive ngmodule library linked every time change something library remove whole folder demo reinstall node packages compiler picks works properly took month half realize issue related compiler though exporting lib module correct format based fesm expected behavior every time contents package changes compiler notices changes maybe simple hash minimal reproduction problem instructions download file extract install packages two folders bundle lib run demo go back change one line class name rebundle lib go rerun demo app observe motivation use case changing behavior nothing environment", "num": "18241", "d": "7/2017"}, {"title": "save state complete component", "body": "working application user open multiple person data person details multiple tabs like address work etc want save state person user come back state switching two person example person work tab open switch person perform functionalities come back person still see work tab way save state complete component person display angular", "num": "18235", "d": "7/2017"}, {"title": "templateurl parent directory parsing right", "body": "submitting current behavior component srcfolder defining template templateurl parent folder using relative url like parentcomponenthtml results error unhandled promise rejection failed load srcfolderparentcomponenthtml zone task promisethen value failed load srcfolderparentcomponenthtml expected behavior relative path gets parsed correctly minimal reproduction problem instructions angular project set like since plnkr nt seem acutally use folders ca nt quite repro problem plunk motivation use case changing behavior sharing component templates environment", "num": "18234", "d": "7/2017"}, {"title": "update angulario blog url", "body": "submitting regression behavior used work stopped working new release bug report feature request x documentation issue request support request gt please submit support request instead see current behavior footer angulario links blog expected behavior footer blog link go minimal reproduction problem instructions see footer motivation use case changing behavior angular blog moved environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18233", "d": "7/2017"}, {"title": "custom eventmanagerplugin", "body": "submitting current behavior accessible eventmanagerplugin exports expected behavior allow write custom implementations eventmanagerplugins minimal reproduction problem instructions environment angular version", "num": "18232", "d": "7/2017"}, {"title": "associated docs examples appropriate versions angular", "body": "docs examples currently build also plunkers link version rather version release docs", "num": "18230", "d": "7/2017"}, {"title": "prodaot lazyloadchunk packed together jit ok", "body": "environment packageinfo following current behavior run bundle jit chunk file ok run bundle aot ca nt generate chunk file file mainjs expected behavior aot ok question would like know circumstances lazy load packed together", "num": "18229", "d": "7/2017"}, {"title": "aio clicks radiobutton seen changedetection", "body": "submitting current behavior click radiobutton changes template variable seen bij angular hello name first second selected first selected second export class appcomponent name angular unrelated consolelog something see action plnk added completely unrelated button button clicked view updated expected expected behavior divs ngif become visible corresponding radio selected minimal reproduction problem instructions see plunk code", "num": "18227", "d": "7/2017"}, {"title": "cyclic dependency error httpinterceptor", "body": "submitting current behavior trying example authinterceptor like official doc add authorization header requests ts injectable export class authinterceptor implements httpinterceptor constructor private auth authservice intercept req httprequest next httphandler const authheader thisauthgetauthorizationheader const authreq reqclone headers reqheadersset authorization authheader return nexthandle authreq problem real code needs request server login signin etc inject ts injectable export class authservice constructor private httpclient creates fatal error console expected behavior work common case otherwise interceptors limited use services without http environment", "num": "18224", "d": "7/2017"}, {"title": "form dirty anymore showinghiding disabled select", "body": "submitting current behavior form tabs logic hides shows fields one select disabled form loses dirty state hiding showing select plnkr expected behavior form nt lose dirty state minimal reproduction problem instructions show hidden fields edit input form dirty hide fields show form dirty anymore select disabled motivation use case changing behavior form controls different tabs environment", "num": "18222", "d": "7/2017"}, {"title": "project lazy loaded modules could process aot build reasonable time", "body": "project lazy loaded modules could process aot build reasonable time suggestion would appreciated", "num": "18221", "d": "7/2017"}, {"title": "feature add outdir gendir ngc cli", "body": "submitting description problem big company build environment supply outdir gendir ngc command line since tsconfig json files version control working many different branches output path relies current branch relative current ngc nt seem possible feature request first real solution problem would good solution creating reusable component libraries course since essentially lot people waiting see example meantime use ngc directly well gulp nodesass course therefore able specify outdir gendir would already helpful", "num": "18220", "d": "7/2017"}, {"title": "tour heroes http closed tag", "body": "submitting hi really issue closed div tag tutorial page tour heroes error located section think page look like lower page div style", "num": "18219", "d": "7/2017"}, {"title": "synchronous response body access new httpclient", "body": "commit introduced new httpclient following description new api improves significantly ergonomics features legacy api partial list new features includes typed synchronous response body access including support json body types curios know meant synchronous response body access anyone provide example could nt find anything official docs also mentioning word sources comments thanks", "num": "18218", "d": "7/2017"}, {"title": "variables outside direct scope prevent dead code elimination", "body": "submitting current behavior dead code nt eliminated production builds conditional statement uses variableconstant outside direct scope expected behavior dead code eliminated production build conditional statement always fails even conditional statement uses variables constants outside direct scope minimal reproduction problem instructions using angular cli create new project add following code build using variableconstant within direct scope conditional statement example works expected results statement show main bundle ok variableconstant outside direct scope conditional statement move statement anywhere outside constructor even change const wish results statement show main bundle ok also case using environmental variables exported motivation use case changing behavior dead code show production builds environment", "num": "18217", "d": "7/2017"}, {"title": "angular release schedule doc sync", "body": "submitting current behavior angular release schedule sync expected behavior version expected released happen version happen minimal reproduction problem instructions see motivation use case changing behavior upgrade angular latest discovered bug earlier fixed properly plan next release fix released bump version bug fixed environment", "num": "18215", "d": "7/2017"}, {"title": "routerresetconfig exception invalid configuration route", "body": "submitting current behavior using routerresetconfig versions gt passing empty route exception thrown aot somehow component undefined expected behavior versions lt everything works exception thrown component undefined minimal reproduction problem instructions observe exceptions console component undefined change versions packagejson observe exception thrown component undefined motivation use case changing behavior course small repro exception thrown real application actually breaks navigation environment", "num": "18214", "d": "7/2017"}, {"title": "missing animation triggers report better warning", "body": "", "num": "18208", "d": "7/2017"}, {"title": "entry component scan reports enum references route data internal error", "body": "submitting current behavior enum reference included metadata route example compiler report internal error expected behavior compile correctly minimal reproduction problem instructions application add following imports imported another module", "num": "18207", "d": "7/2017"}, {"title": "disabled binding work multiple radio inputs", "body": "submitting current behavior utilizing directive bind several elements group property honored first radio input element occurrence example build template collection options binding values element first input element correctly honors disabled value whereas remaining input elements result user actually change value selecting different option incorrectly enabled issue clearly demonstrated part plunker expected behavior currently bind instead works correctly however would expect property binding would honor disabled value inputs bound minimal reproduction problem instructions motivation use case changing behavior motivation fix bug documentation specifically instructs consumers angular use property binding leverage consistency value matters adding removing disabled attribute disables enables button value attribute irrelevant enable button writing setting buttons disabled property say angular binding disables enables button value property matters environment", "num": "18206", "d": "7/2017"}, {"title": "min max pipes nt work", "body": "submitting current behavior looks like min max pipes working expected behavior using min max attributes add validators angular forms minimal reproduction problem instructions modified example form minmax validators doe nt work motivation use case changing behavior fix nonworking code environment", "num": "18204", "d": "7/2017"}, {"title": "classic inheritance child component nt update parent property even changedetectorref", "body": "submitting current behavior classic inheritance child component nt update parent property even changedetectorref parent component input radio checked property associated member variable isactivated child component click event thisisactivated thisisactivated nt change checked implement thing parents works expected behavior checked unchecked parent input radio minimal reproduction problem instructions tryed plunker throw another error version nt throw error file navitemts import component oninit input output angularcore component selector navitem template export class navitemcomponent implements oninit input activated isactivated false ngoninit component selector navitemchild template export class navitemchildcomponent extends navitemcomponent implements oninit ngoninit file appts root app component import component ngmodule version angularcore import browsermodule angularplatformbrowser import navitemcomponent navitemchildcomponent navitemts component selector myapp template export class app ngmodule imports browsermodule declarations app navitemcomponent navitemchildcomponent bootstrap app export class appmodule motivation use case changing behavior navitem general one want every component inherit behave like classical inheritance environment", "num": "18203", "d": "7/2017"}, {"title": "passing attributes loading component router using routeroutlet angular", "body": "need pass attributes child component loaded via router using routeroutlet achieve want set hero property second example first example eg passing attributes static components easy eg", "num": "18202", "d": "7/2017"}, {"title": "fix seo angular", "body": "submitting current behavior always search google something angular official name angular end angularjs angularjs results always need add suffix end googling angular service also brings results angular expected behavior searching search engines angular return angular results minimal reproduction problem instructions example search results contain angularjs motivation use case changing behavior want recognized angular never happen people search angular search engines environment", "num": "18200", "d": "7/2017"}, {"title": "angular httpclient throws xmlhttprequest defined node environment angular universal", "body": "submitting current behavior using httpclient throws rendered using expected behavior throw error like original http client minimal reproduction problem instructions motivation use case changing behavior temporary fix use line code top node server environment", "num": "18199", "d": "7/2017"}, {"title": "seo", "body": "create blog seo friendly google spa want know solve", "num": "18198", "d": "7/2017"}, {"title": "ngc reports build error tsc succeeds tsconfig", "body": "reproduction clone run succeeds run fails error change entry aforementioned tsconfig content works also worth mentioning reported file exported member platform", "num": "18196", "d": "7/2017"}, {"title": "form validation warnings non error types", "body": "submitting current behavior currently built way handle warnings validation types formcontrols would like way configure validation functions create errors effect valid state input provide options current validation expected behavior need way easy configure formcontrols formgroups like validators apply existing validator functions warning section validation want warnings utilize awesome features forms like validation state valid invalid pending errors motivation use case changing behavior want abstract validation logic used errors warnings way environment hope explanation good enough nt provide points list ie steps reproduce meaning issue best michael", "num": "18195", "d": "7/2017"}, {"title": "wont build", "body": "sorry wrong repo", "num": "18194", "d": "7/2017"}, {"title": "using mdinput breaks router animation", "body": "submitting current behavior router animation fails due errors query enter page uses material component like mdinput replacing mdinput plain input gets back home gt animation expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18193", "d": "7/2017"}, {"title": "aot issue", "body": "submitting current behavior work developed reducer decorator apps example working ngrx store plnkr works thing cli getting error project error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function position original ts file nt deceived works run project error comes goes sporadically question guys go issue ngrx angular expected behavior error compilation aot minimal reproduction problem instructions working example aot working example aot motivation use case changing behavior large number application using reducer decorator environment angularcli angularanimations angularcdk angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node os linux others", "num": "18192", "d": "7/2017"}, {"title": "height auto animates time child height changes", "body": "submitting current behavior animation parent div height auto child element height pixels child height changes parent animate expected behavior parent animate height every time minimal reproduction problem instructions plunker click buttons couple times motivation use case changing behavior image gallery use case inner element image image couple thumbs user click change larger image images kinds different sizes want quick animation height another image chosen environment", "num": "18191", "d": "7/2017"}, {"title": "create nextangulario add next entry version dropdown", "body": "current behavior master branch docs published aiostagingfirebaseappcom nt advertise anywhere nobody easily find documentation current betarc release expected behavior alias aiostagingfirebaseappcom nextangulario add entry called next version dropdown redirect nextangulario", "num": "18189", "d": "7/2017"}, {"title": "lazy loading webpack generate package", "body": "application little big mb trying use load loading able reduce size package generates webpack use version angular universal guided tutorial implement lazy loading link approutingts import ngmodule angularcore import routes routermodule angularrouter import adminpanelcomponent adminpaneladminpanelcomponent import appwikicomponent appwikiappwikicomponent import authguard guardsauthguard const routes routes path lazy loadchildren lazylazymodule lazymodule path casa loadchildren lazycasamodule casamodule path admin component adminpanelcomponent canactivate authguard loadchildren adminpaneladminpanelmodule adminpanelmodule path component appwikicomponent loadchildren appwikiappwikimodule appwikimodule ngmodule declarations export class approutermodule adminpanelroutingts import ngmodule modulewithproviders angularcore import routes routermodule angularrouter import adminstatisticcomponent adminstatisticadminstatisticcomponent import adminreportcomponent adminreportadminreportcomponent import adminusercomponent adminuseradminusercomponent import adminsearchadvancedcomponent adminsearchadvancedadminsearchadvancedcomponent import authguard guardsauthguard const routes routes path users component adminusercomponent path statistics component adminstatisticcomponent path reports component adminreportcomponent path searchadvanced component adminsearchadvancedcomponent export const routing modulewithprovidersroutermoduleforchild routes adminpanelmodule import ngmodule angularcore import adminpanelcomponent adminpanelcomponent import navwikimodule componentsshared import routing adminpanelrouting import adminwikimodule adminwikiadminwikimodule import adminstatisticcomponent adminstatisticadminstatisticcomponent import adminreportcomponent adminreportadminreportcomponent import adminusercomponent adminuseradminusercomponent import adminsearchadvancedcomponent adminsearchadvancedadminsearchadvancedcomponent ngmodule declarations adminpanelcomponent adminreportcomponent adminusercomponent adminsearchadvancedcomponent adminstatisticcomponent imports routing navwikimodule adminwikimodule export class adminpanelmodule compile generates packages clientjs admin pack missing use frozen repository frozen could solve", "num": "18188", "d": "7/2017"}, {"title": "documentation issue template templateurl", "body": "submitting current behavior documentation alert user templateurl overrides template directive component decorator templateurl default new autogenerated projects expected behavior user notified appropriate action take remove templateurl directive minimal reproduction problem instructions documentation found motivation use case changing behavior new users follow tutorial successfully since go expected template load expected leading user wasting time trying look solution environment", "num": "18187", "d": "7/2017"}, {"title": "tag src url fails", "body": "submitting current behavior issue fully described template file controller file works make template file use embed tag instead div tag nt display anything odd thing change template nt work inspect generated embed browser exactly expected behavior display animation swf file minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18184", "d": "7/2017"}, {"title": "httperrorresponse sent flushed test request contain body", "body": "submitting current behavior flushing response json body error status using httpclienttestingmodule results httperrorresponse null error instead expected body expected behavior error property httperrorresponse contain flushed body minimal reproduction problem instructions execute following jasmine test import testbed angularcoretesting import httpclient httperrorresponse angularcommon import httpclienttestingmodule httptestingcontroller angularcommon fdescribe bug gt let httptestingcontroller let httpclient beforeeach gt testbedconfiguretestingmodule imports httpclienttestingmodule send httperrorresponse error property json body flushed response gt let actualbody resp httperrorresponse gt actualbody resperror would expect test pass fails error probably line instead motivation use case changing behavior fix bug environment", "num": "18181", "d": "7/2017"}, {"title": "provide reactive iterablediffer", "body": "submitting motivation use case changing behavior defaultiterablediffers provides bruteforce implementation iterables optimal small arrays change information lost clearly best choice common scenarios however often declarative applications change information known example might dispatch ngrx action add item list rather maintaining copy list state want feed ngfor change ngfor performance would associated size changes instead list size although could added separately onpush declarative feel seems home core angular culture implementation would substantially simpler scanning arrays changes something like crude untested example could upgraded pr ts assumes immutable iterable export class explicitdiffer implements iterablediffer private last ngiterable export class explicitchanges implements iterablechanges iterable leave current previous indices unset indicate item change todo equal current previous index todo optimize sorting constructor private changes iterable thoughts array changes could use mergemap change things one time sounding like different directive ngfor nt use differs perhaps even better approach since even foring iterable", "num": "18178", "d": "7/2017"}, {"title": "hero editor tutorial plnkr example broken", "body": "submitting current behavior angulario hero editor tutorial click live example link opens broken plnkr page preview window displays loading never loads rest app live example link expected behavior live example load problems minimal reproduction problem instructions steps reproduce go part one hero editor tutorial angulario docs scroll past file structure see sentence done page app look like live example download example click live example motivation use case changing behavior motivation people new angular able see live example follow tutorial confidence environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version na platform mac", "num": "18177", "d": "7/2017"}, {"title": "route issue subfolder relative base path", "body": "submitting bug router prevents applications loading bug exposed combination relative indexhtml browser served subfolder setup steps repro clone repo cd serve ie visit site observed behavior expected behavior app loads intended environment browser x ie version app built", "num": "18176", "d": "7/2017"}, {"title": "httpclient export httprequestinit options", "body": "submitting current behavior httprequestinit defined options exported unlike httpheaders expected behavior httprequestinit also exported meant users set type options within applications motivation use case changing behavior need set new httpclient options type something applications environment", "num": "18175", "d": "7/2017"}, {"title": "docs controlvalueaccessor registerontouched description misleading", "body": "submitting current behavior documentation states however think highly misleading really describe mean forms context think mean control also seems implemented angular function invoked event detected see expected behavior document intent purpose like motivation use case changing behavior documentation clearly define intent implementors interface clearly know purpose invoke function maybe accurate term rather deprecated long term thats proposal environment", "num": "18174", "d": "7/2017"}, {"title": "issue warning enter query used inside enter void gt transition", "body": "element inserted view inner elements queryable using queries rootlevel enter transition kicks definition container inserted therefore rootlevel means animation trigger contains transition transition contains queries throw error since queries return nothing happen animations throw error used inside transition andor query used inside transition", "num": "18173", "d": "7/2017"}, {"title": "routeroutlet nt work lazy router use routeroutlet subrouter", "body": "use routeroutlet custom router directive name use declaration module router work fine declarated exported component shared module component work routeroutlet nt work component inforamtion current behavior routeroutlet nt work component declareted sharedmodulets expected behavior routeroutlet work component declareted sharedmodulets minimal reproduction problem instructions custom rep testing u declarated component shared undeclarated appmodulests u see bug link sidebar inventory motivation use case changing behavior nt wan na make router new component copypasta environment browser x chrome desktop version xx", "num": "18171", "d": "7/2017"}, {"title": "error illegal state symbol without members expected using aot", "body": "submitting current behavior getting error building production aot enabled certain pattern importsexports see error reported error illegal state symbol without members expected got filepath sniptestngaottestsrcappsharedroleco nstantsts name roleconstants members user error srcmaints module found error ca nt resolve gendirappappmodulengfactory sniptestngaottestsrc srcmaints multi srcmaints worked ok work expected behavior ng build prod build correctly without rising error minimal reproduction problem instructions download symbolwithoutmemberserrortestazip npm install ng build prod project contain newly generated project ng new number files added reproduce error sharedconstts exports constant field sharedindexts exports consts intermediatets imports consts exports aggregated data indexts exports intermediate modulets calling routermoduleforroot intermediate intermediate imported changed intermediatets problem manifest anymore motivation use case changing behavior na environment", "num": "18170", "d": "7/2017"}, {"title": "forms inconsistent signature path get geterror haserror methods", "body": "submitting current behavior method accept accept expected behavior using signature minimal reproduction problem instructions personthisformget personname thisformget person name get path arraystring abstractcontrolnull return find path returns true control given path error specified otherwise returns null undefined path given checks error present control geterror errorcode string path string const control path thisget path return control amp amp controlerrors controlerrors errorcode null returns true control given path error specified otherwise returns false path given checks error present control haserror errorcode string path string boolean return thisgeterror errorcode path motivation use case changing behavior environment", "num": "18169", "d": "7/2017"}, {"title": "table cell rendering", "body": "hello team scenario build table dynamically cells table editable also need twowaybinding submit form want table data captured object instead etc submitting form submit form formvalue suggestion", "num": "18168", "d": "7/2017"}, {"title": "docs incorrect variable name noopinterceptor", "body": "submitting current behavior method calls variable nt exist expected behavior call variable small caps import injectable angularcore import httpevent httpinterceptor httphandler httprequest angularcommon injectable export class noopinterceptor implements httpinterceptor intercept req httprequest next httphandler observable gt return nexthandle req minimal reproduction problem instructions motivation use case changing behavior environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18166", "d": "7/2017"}, {"title": "override routerlink directive handle click event", "body": "submitting current behavior default onclick router class called expected behavior able inherit register routerlink directive app motivation use case changing behavior want handle dynamic tab generation routing prefetching resolvers tabs environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx x", "num": "18164", "d": "7/2017"}, {"title": "output method decorator", "body": "submitting x feature request motivation use case changing behavior less boiler plate code hide eventemitter details proposal add output method decorator would lower suitable event emission code currently eventemitter would take optional binding property name usual would lower usesite nt aware whether output binding property method", "num": "18161", "d": "7/2017"}, {"title": "required input parameters", "body": "submitting current behavior regardless whether input parameters component optional aot throw error warning making difficult find mistakes required attribute passed component template runtime username export class usernamecompoennt implements oninit input id string username string constructor private usernameservice usernameservice ngoninit thisusernameservicegetusername id subscribe user gt thisusername username expected behavior aot throw warning error required input parameter passed component minimal reproduction problem instructions motivation use case changing behavior enable catching errors compilation environment", "num": "18156", "d": "7/2017"}, {"title": "allow passing misc data http client options", "body": "submitting current behavior currently using http interceptor pass meta data request interceptor expected behavior able pass random data http interceptor currently options object strongly typed pass extra data proposal would add name needs bikeshedding property type http request options used purpose minimal reproduction problem instructions na motivation use case changing behavior tell caching interceptor cache true meta cache true tell interceptor add request meta skipauthorization true environment", "num": "18155", "d": "7/2017"}, {"title": "proposal httpparams tostring method filter undefinednull value", "body": "submitting current behavior thiscurrentcategory null consolelog new httpparams set category thiscurrentcategory tostring categorynull expected behavior thiscurrentcategory null consolelog new httpparams set category thiscurrentcategory tostring minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18152", "d": "7/2017"}, {"title": "httpclient supporting memory web api", "body": "submitting current behavior old http module supported memory web api using angularinmemorywebapi extremely useful testing development expected behavior new httpclient support memory web api blocking use environment", "num": "18150", "d": "7/2017"}, {"title": "angular aot error typeerror thiscompileranalyzemodulesasync function", "body": "hi trying implement angular application using aot compiler followed article hence downloaded setup files changes created tsconfigaotjson compiling project using command nodemodulesbinngc p tsconfigaotjson throws error typeerror thiscompileranalyzemodulesasync function codegeneratorcodegen codegen objectmain main object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload compilation failed packagejson file name angularquickstart version description quickstart packagejson documentation supplemented testing support scripts build tsc p src build watch tsc p src w build tsc p serve liteserver cbsconfigjson serve liteserver prestart npm run build start concurrently npm run build watch npm run serve npm run build concurrently npm run serve npm run protractor killothers success first preprotractor webdrivermanager update protractor protractor protractorconfigjs pretest npm run build test concurrently npm run build watch karma start karmaconfjs pretest npm run build test karma start karmaconfjs singlerun lint tslint srcts verbose keywords author license mit dependencies angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularinmemorywebapi corejs rxjs systemjs zonejs devdependencies concurrently liteserver typescript canonicalpath tslint lodash jasminecore karma karmachromelauncher karmacli karmajasmine karmajasminehtmlreporter protractor rimraf typesnode typesjasmine repository node version os ubuntu please suggest fix", "num": "18148", "d": "7/2017"}, {"title": "httpobserve exported documented", "body": "submitting current behavior httpobserve ca nt used application code although part public api expected behavior httpobserve usable able example also able know reading documentation pass value observe attribute options minimal reproduction problem instructions na motivation use case changing behavior make development experience better environment", "num": "18146", "d": "7/2017"}, {"title": "newbie hurdle port tutorial", "body": "submitting current behavior following tutorial start hello world type app myapp move hero editor started project get exact page got first tutorial spent lot time thinking browser cache refreshing new project ng serve process nt releasing port rebooting computer nt help killing processes restarting apache etc people suggested simply using new port knew angular cli would nt require eating ports like eventually occur appcomponenthtml file could simply contain content sure enough newbies like would expect expected behavior change default template hero editor clear browser showing old content minimal reproduction problem instructions motivation use case changing behavior show new learners ng serve tool drinking right project environment", "num": "18145", "d": "7/2017"}, {"title": "able open menu ipad device", "body": "submitting current behavior trying open menu using sandwich icon able open nothing happened clicking menu icon expected behavior menu open minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18144", "d": "7/2017"}, {"title": "unable use decorators ngmodule component etc", "body": "submitting current behavior trying upgrade angularjs application angular following docs till manual bootstrapping angularjs application ie trying introduce upgrade version bootstraping ie remove older bootstrap method introduce empty upgrademodule bootstrap via platformbrowserdynamicbootstrapmodule reason try systemjs doesnt seem execute code code one file fails silently browser blank screen errors even kept consolelogs along way sure code even executing point noted code one single file im producing using gulp bootstrapping module definitions imports etc correct order expected behavior expected behavior bootstrap application successfully load angularjs application correctly minimal reproduction problem instructions include basic systemjsconfigjs includes necessary angular angularjs rx libraries introduce empty ngmodule end file angularjs code top new code end manually bootstrap application upgrade module bootstrap angular module first angularjs modules serve application environment", "num": "18143", "d": "7/2017"}, {"title": "doc issues", "body": "type characters list updated makes hard search interfaces link people experiment", "num": "18141", "d": "7/2017"}, {"title": "animationplayer hasstarted returning expected value", "body": "submitting current behavior trying make use animationplayer method looks like always return even pausing resetting player even inside callback still returns expected behavior return player paused resetted finished animating assigned dom element minimal reproduction problem instructions created minimal plunk reproducing issue motivation use case changing behavior think hasstarted return value provide better info player status environment", "num": "18140", "d": "7/2017"}, {"title": "banner advertisement example angulario blocked ad blockers", "body": "submitting believe image blocked simply filename rename might fix current behavior final ad banner bottom nt render browsers using ad blocker expected behavior example shown using ad blocker minimal reproduction problem instructions install visit scroll bottom page", "num": "18138", "d": "7/2017"}, {"title": "docs aio typo ngmodule faqs", "body": "submitting current behavior second sentence last paragraph begins ca nt added app root injector bold emphasis added highlight typo expected behavior ca nt add app root injector bold emphasis added highlight typo motivation use case changing behavior less typo docs happier developers", "num": "18133", "d": "7/2017"}, {"title": "lacks finally method topromise operator", "body": "need execute code end http request regardless whether resolved rejected know making method calling end result would write fewer lines code doubt promise finally method", "num": "18131", "d": "7/2017"}, {"title": "checkbindingnochanges get unwrapped old values checking expressionchangedafterithasbeencheckederror", "body": "submitting current behavior using impure pipes value wrapped example sometimes makes developer mode angular throw error gets wrapped value old value unwrapped value new value even though change simply looked values via chromium debugger expected behavior either unwrap values needed get unwrapped values caller minimal reproduction problem instructions could nt reproduce think happens complex scenario order initialisation component moment data received via observable usual note observables initialized simply bound template via without anything else specific nt see could simpler none usual ways fixing even applied guess problem existed since checks stricter problem shows environment", "num": "18129", "d": "7/2017"}, {"title": "template parse errors directive exportas set xxx", "body": "submitting x bug report current behavior expected behavior use hash symbol declare reference variable minimal reproduction problem instructions environment angular version browser x chrome desktop version", "num": "18126", "d": "7/2017"}, {"title": "problem angulario website", "body": "submitting current behavior angulario website longer loads css formatting desktop using chrome firefox get error file new place post issue please let know started happening yesterday afternoon edt continuing today issues websites expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18125", "d": "7/2017"}, {"title": "aio generic types shown exported function", "body": "example rendermodule source ts expected function rendermodule module type actual function rendermodule module type tried adding functiontemplatehtml luck seems populated functions things like classes parameters", "num": "18123", "d": "7/2017"}, {"title": "call angular functions native javascript angular", "body": "anglarjs use get scope use make native javascript directly call angular functions twoway binding angular could call angular functions twoway binding native javascript android native example web developed angular used android webview needs interact android solution thank attention", "num": "18118", "d": "7/2017"}, {"title": "resolve applicationlevel data", "body": "let say global config loaded urls example manually add resolver urls one one case update global config component capture route data right better way deal", "num": "18117", "d": "7/2017"}, {"title": "app loading issue", "body": "submitting current behavior enabled poly fills make app work still app working enabled poly fills requires following polyfills import import import import import import import import import import import import import requires following ngclass support svg elements import classlistjs run expected behavior poly fills enabled expect app start working current behavior angularcli node os windows angularanimations angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli browser", "num": "18116", "d": "7/2017"}, {"title": "proposal reactive forms accessiblity", "body": "submitting current behavior reactive forms validators reflected input fields problematic accessibility expected behavior common validators reflect validation input field eg validatorsrequired gt motivation use case changing behavior project currently working strict accessibility rules would help angular could provide functionality reflecting defined validators solves described issue proposal idea based around reflect metadata api would appreciate feedback consensus implement pull request add interpretable metadata validators use reflect add metadata validators metadata would similar error object returned validation fails validatorscompose also validatorscomposeasync would aggregate metadata given validators define metadata merged validator eg ts validator requires controls nonempty value accessibilitymeta required true static required control abstractcontrol validationerrorsnull return isemptyinputvalue controlvalue required true null validator requires controls value maximum length static maxlength maxlength number validatorfn const validator control abstractcontrol validationerrors null gt defineaccessibilitymeta validator maxlength maxlength return validator compose multiple validators single function returns union individual error maps static compose validators null null static compose validators validatorfnnullundefined validatorfnnull static compose validators validatorfnnullundefined null validatorfnnull create accessibility interpreter service implement service maps metadata aria validation attributes also compares whitelist allowed attributes based input type eg required true gt required ariarequired maxlength gt maxlength input typetext required true min gt required ariarequired min purpose text inputs create directive form control accessibility implement new directive render appropriate attributes directive resolves formcontrol instance accessibility interpreter service define new selector formcontrolaccessibilty order allow optin scenario eg ts directive selector input formcontrolaccessibilty textarea formcontrolaccessibilty export class formaccessiblitydirective input type string b reuse existing form control selectors could added module eg formsaccessiblitymodule together service order make optin eg ts directive selector input formcontrolname textarea formcontrolname input formcontrol textarea formcontrol export class formaccessiblitydirective input type string open questions happens validators replaced cleared one possible solution would additional eventemitters validator asyncvalidator", "num": "18114", "d": "7/2017"}, {"title": "make responsive google map using agm", "body": "would like markermarkers appear viewport screen size decreases angulargooglemaps hides markermarkers decrease screen dimensions scroll view markers current code using agm responsiveso make responsive markers visible screen without dragging", "num": "18113", "d": "7/2017"}, {"title": "question server side rendering going real feature", "body": "since release noticed docs angulario setting server side rendering gone trying figure universal server side rendering currently production ready seed projects examples showing server side rendering still using beta versions nguniversalexpressengine find another example using angular cli use express engine lazy loaded modules render server display initial document loaded browser us waited long time universal get merged angular core become real feature appear like google putting real feature still illusive topic lots people blogging nt see much officially someone google shed light subject would like know correct way implement server side rendering easy find articles blogs universal angular much universal since merged angular core advertised feature much documented official examples tutorials seeds quick start server side rendering", "num": "18112", "d": "7/2017"}, {"title": "error sass woff module found", "body": "submitting current behavior errors compile minimal reproduction problem instructions error cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss module found error ca nt resolve fontsfontawesomewebfonteot mediastoragedesktopwwwnaturellsrcsass cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss srcsassstylesscss multi srcsassstylesscss error cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss module found error ca nt resolve fontsfontawesomewebfonteot mediastoragedesktopwwwnaturellsrcsass cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss srcsassstylesscss multi srcsassstylesscss error cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss module found error ca nt resolve mediastoragedesktopwwwnaturellsrcsass cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss srcsassstylesscss multi srcsassstylesscss error cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss module found error ca nt resolve fontsfontawesomewebfontwoff mediastoragedesktopwwwnaturellsrcsass cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss srcsassstylesscss multi srcsassstylesscss error cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss module found error ca nt resolve fontsfontawesomewebfontttf mediastoragedesktopwwwnaturellsrcsass cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss srcsassstylesscss multi srcsassstylesscss error cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss module found error ca nt resolve fontsfontawesomewebfontsvg mediastoragedesktopwwwnaturellsrcsass cssloader sourcemap false importloaders postcssloader ident postcss sassloaderlibloaderjs sourcemap false precision includepaths srcsassstylesscss srcsassstylesscss multi srcsassstylesscss expected behavior compile fontawesome using scss stylescss motivation use case changing behavior browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform ubuntu others angularclijson", "num": "18105", "d": "7/2017"}, {"title": "open routing allow component created url injected given location equivalent functionality imperative navigation multiple dynamically named router outlets required", "body": "submitting created dynamic multiple container system working wanted able create arbitrary components based routing system current application url case inject given div aware routing supports one single router outlet however need either multiple dynamically named outlets together ability programmatically inject internal url one outlets reasonably simple method implementing managed adapted code wrote shared github see everything outside dynamiccomponentcreator folder effectively test harness dynamic component creator service takes url string viewcontainerref leans existing routing functionality possible create inject required component vast bulk code copied pasted straight angular source code stood week ago method method avoid pulling necessary diff using decent tool hopefully clear different differences mostly due visibility ts def files different actual source code code createcomponentfromurl method based code routerrunnavigate within angular code terms app navigate page browser load simplenoargs component navigate page message ie put url arg page load singleurlarg component likewise navigate root type urls text boxes create inject given components immediately inside components everything close possible navigated directly although solution come works nt support route guards preactivation etc however would sufficient purposes highly undesirable pull copy much code angular consider adding equivalent functionality angular could allow us due course get rid code much cleaner implementation less complexity app", "num": "18102", "d": "7/2017"}, {"title": "new http package xsrf support", "body": "new package support xsrf box current behavior nt handle xsrf box expected behavior like previous package server sets cookie called client send back header value every request", "num": "18100", "d": "7/2017"}, {"title": "quickstart directions angulario incorrect", "body": "submitting current behavior causes error git bash ng serve open nodemodules appears empty may need run expected behavior browser opens app minimal reproduction problem instructions motivation use case changing behavior download example app clicking link etc includes full nodemodules directory however follow directions nt full nodemodules directory therefore app fails launch environment", "num": "18099", "d": "7/2017"}, {"title": "httpinterceptor intercepted responses nt contain httpresponse", "body": "submitting current behavior code found test suggests calling handle get access events however getting simple object expected behavior per test looks like get could instance circumstances give us type minimal reproduction problem instructions using testing simple express api served locally different port motivation use case changing behavior environment", "num": "18098", "d": "7/2017"}, {"title": "component styles bundling angular prod", "body": "submitting current behavior component style bundling expected behavior component style bundle minimal reproduction problem instructions component build application styles file getting bundle also ca nt see styles running compiled application also tried works compiled application bundle styles instead adds inline way bundle component styles make work building production application created stack overflow motivation use case changing behavior want styles bundled cached users inline environment", "num": "18097", "d": "7/2017"}, {"title": "contenttype header missing boundary parameter posting multipartformdata content", "body": "experimenting uploading files using httpclient amp httprequest httpclientmodule angularcommon submitting current behavior default behavior uploading file using post request httpclient contenttype header request set detected file type eg contenttypemultipartformdata without boundary parameter specified expected behavior body header contain metadata regarding contenttype boundary case body contains boundary header result request failing motivation use case changing behavior file packagescommon request handling defined find one interesting snippet browsers automatically detect contenttype fill missing header proper values contenttype amp boundary manually setting contenttype override behavior submitted request result incomplete contenttype header fixed issue removing code section delegating contenttype detection browser properly set boundary parameter environment", "num": "18096", "d": "7/2017"}, {"title": "dynamic component data synced outside", "body": "experimenting dynamic component loading technique showed tutorial experimented data sync submitting current behavior inputs inside outside ad box update ads data outside inputs update data ad box expected behavior data different parts synced minimal reproduction problem instructions motivation use case changing behavior nothing seems special example data syncing also work environment", "num": "18094", "d": "7/2017"}, {"title": "make lazy loading available outside router module", "body": "submitting current behavior router module optional depending nature app naturally fit nt use routermodule ca nt see easy way take advantage lazy loading feature modules like somehow identify ngmodule lazy loaded definition time like define providers etc module marked lazy loaded build generate independent chunk module becomes eligible lazyloaded execution time course choice marking module lazy also need mechanism manually load lazy loaded modules start using summary feature request make lazy loading feature available developers outside routermodule since module optional feature still available course output aot compatible chunks etc like routermodule internally expected behavior summary feature request make lazy loading feature available developers outside routermodule since module optional feature still available course output aot compatible chunks etc like routermodule internally minimal reproduction problem instructions motivation use case changing behavior application functionally router driven thus need way make use lazy loading strategy internally used router environment", "num": "18093", "d": "7/2017"}, {"title": "router nested resolve", "body": "submitting current behavior route resolve provider functions making request server loading making request time normal behavior situation one resolve result depends another like promises expected behavior angularjs using uirouter could inject route resolve function already resolved one put example code see use x result thing order angular use ngoninit function get resolved function parent route make resolve provider makes server request solutions make code look bad would like know solution experience knowledge angular ca nt inject result previous route resolve like angularjs uirouter forced provide class implementing resolve interface function ca nt access previous resolved parameters make question even clear add pics example angular code motivation use case changing behavior rare cases one route resolve provider depends another", "num": "18092", "d": "7/2017"}, {"title": "unit test ngmodel fails latest zonejs dependency", "body": "submitting current behavior created simple unit test ngmodel behavior shown appcomponenentts ts import component oninit angularcore component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title hello constructor appcomponenthtml ts title appcomponentspects ts import formsmodule angularforms import testbed async angularcoretesting import appcomponent appcomponent describe appcomponent gt beforeeach async gt testbedconfiguretestingmodule imports formsmodule declarations appcomponent compilecomponents create app async gt const fixture testbedcreatecomponent appcomponent fixturedetectchanges const app fixturedebugelementcomponentinstance expect app tobetruthy running test latest ngcli fails following error please note application works test fails expected behavior test pass tested older version angular worked debugging could find latest version zonejs ie responsible downgraded version test started passing minimal reproduction problem instructions create new project using latest ngcli replace appcomponentts appcomponenthtml appcomponentspects ones mentioned version ngcli", "num": "18091", "d": "7/2017"}, {"title": "form control trigger valuechanges subscription selection changed", "body": "submitting current behavior hi template select program itemname component class trying subscribe select value changes ngoninit thisformget programid valuechangessubscribe gt alert changed observable subscription never triggered change select option using mouse working subscribe form valuechanges want receive notifications components expected behavior subscribe select fromcontrol receive notifications selected option changed minimal reproduction problem instructions look code motivation use case changing behavior environment", "num": "18090", "d": "7/2017"}, {"title": "docs add scripts test polyfill required", "body": "submitting current behavior browser support guide mention polyfills needed browser expected behavior along needed polyfill guide contain simple script test polyfill needed example intl minimal reproduction problem instructions na motivation use case changing behavior use scripts determine polyfill needs loaded app overall would load faster angular team knows exactly features needed could provide test wo nt fail odd cases like feature partially supported browser", "num": "18089", "d": "7/2017"}, {"title": "adding angularanimations issues", "body": "submitting current behavior application start issue occurs add import get following issues expected behavior expect application starts minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18088", "d": "7/2017"}, {"title": "working delphi angular template also create app", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18086", "d": "7/2017"}, {"title": "docs platformserver platformoptions interface missing api", "body": "submitting current behavior platformoptions interface found api used rendermodulefactory amp rendermodule expected behavior since every type used public api also public api platformoptions interface published minimal reproduction problem instructions open api search found nothing motivation use case changing behavior make doc better question platformconfig extends platformoptions merged environment", "num": "18085", "d": "7/2017"}, {"title": "ngcomponentoutlet ngmodule aot compatible", "body": "current behavior ngcomponentoutlet suppose support dynamic inline template component creation inject template loaded runtime followed example shown document page getting error document code expected behavior suppose work aot compile code motivation use case changing behavior template predefined case ui receive input based configuration server changed application running environment angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx x firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform others", "num": "18082", "d": "7/2017"}, {"title": "docs tour heroes incomplete code example", "body": "submitting current behavior page code sample srcappdashboardcomponenthtml repeated tag code sample incomplete shows anchor tag missing closing even copy link code nt user copies asis project file get runtime error missing tag expected behavior downloaded example minimal reproduction problem instructions download example zip file remove lines example file run app motivation use case changing behavior reduce new user confusion learning angular environment", "num": "18078", "d": "7/2017"}, {"title": "mddialog unit test nativeelementnot updated", "body": "want write unit test opening dialog use triggereventhandler click event works open dialog browser seems dom get updated even calling detectchanges method see nativeelement browser console mddialogcontainer fixturenativeelement browser", "num": "18077", "d": "7/2017"}, {"title": "docs", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18074", "d": "7/2017"}, {"title": "extend abstractcontrol", "body": "hi way extend basic abstractcontrol use instead existing abstractcontrol something like regards steve", "num": "18071", "d": "7/2017"}, {"title": "extraproviders provided angularplatformserver rendermodulefactory", "body": "submitting trying provide fixing current behavior empty expected behavior expect availiable provided value minimal reproduction problem instructions service uses injectable export class myservice constructor private http inject appbasehref private basehref string makerequest return endpoint value provided environment trying change platformserverjs fixes extra providers list createplatformfactory result function bot solves request", "num": "18070", "d": "7/2017"}, {"title": "ca nt install aio", "body": "submitting current behavior ca nt install aio run ca nt install nodesass nodemodulesnodesass folder existbut add global nodesass environment log", "num": "18069", "d": "7/2017"}, {"title": "mechanism reading dom properties", "body": "submitting current behavior possible readwrite properties using get native dom element read prevent running webworker expected behavior ideally would like something like attach component able read specific property dom element component attached something like ts directive selector child export class childcomponent domread good idea name hope gets point across motivation use case changing behavior reading dom properties like offsetheight offsetwidth extremely crucial want thing like masonry dragtoselect require knowledge size elements using work dynamically sized elements", "num": "18068", "d": "7/2017"}, {"title": "mouseleave called ngif", "body": "bug current behavior mouseleave event parent component nt get called child components appear cursor mouse component expected behavior mouseleave handler always called mouse leaves element minimal reproduction problem instructions go move mouse around moo notice lines stay green lines green hovered note rows independent still works change array array harder see environment angular browser chrome desktop", "num": "18066", "d": "7/2017"}, {"title": "animation common scenario problem child route", "body": "submitting check one x current behavior animation triggered expected behavior animation triggered minimal reproduction problem instructions motivation use case changing behavior note matsko mlcmlapis already contributed issue follow closed shiny new animations simple transition pages guest ca nt find way create plunkr show struggle think issue using child route common scenario must way get work simply bug report could ignorance though let know ask around recommended log issue please tell us environment os linux angular version angularcli angularanimations angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript xx node aot issues node", "num": "18065", "d": "7/2017"}, {"title": "unhandled promise rejection undefined function", "body": "submitting current behavior deploy project servers got errors test old browsers chrome need browser angular project deployed custom screens embed browser way upgrade test local source old chrome works ngbuild command deployement package working anymore uncomment imports polyfillsjs still got error zoneawareerror uncaught promise typeerror undefined function typeerror undefined function bindingparserparsepropertybinding unhandled promise rejection undefined function zone task promisethen value typeerror undefined function typeerror undefined function bindingparserparsepropertybinding arrayforeach native bindingparsercreatedirectivehostpropertyasts parsehostbindings directivewrappercompilercompile jitcompilercompiledirectivewrapper arrayforeach native arrayforeach native jitcompilercompilecomponents createresult zonedelegateinvoke zonerun recent browser works like charm please tell us environment", "num": "18062", "d": "7/2017"}, {"title": "router fails synchronously load ngmodule runtime compiler loaded error", "body": "submitting current behavior router fails runtime compiler loaded error attempting synchronously load ngmodule production mode expected behavior module successfully loaded router minimal reproduction problem instructions since issue reproducible production mode demoed plunker minimal app generated angular cli reproduces issue steps reproduce generate app angular cli generate new module single component add routing configuration homemodule add routing configuration appmodule diff export function homemoduleloader return homemodule add router outlet appcomponent start development web server production mode open dev tools browser see following error console motivation use case changing behavior prefer creating separate ngmodule per page better scope declarations providers helps maintaining app time makes sense load pages along main bundle hence synchronous module loading router config since users immediately face anyway eg home page login page currently possible please tell us environment", "num": "18061", "d": "7/2017"}, {"title": "rendering derived components dynamically fails without aot activated", "body": "submitting current behavior rendering derived components dynamically nt work devmode expected behavior rendering derived components dynamically possible devmode minimal reproduction problem instructions create basecomponent create component wich extends base component component inject one another services create another component uses componentfactoryresolver render derived component step dynamically template start check result get following error message stop devserver restart following command check page component rendered properly motivation use case changing behavior need develop complex process flow model many derived dynamically rendered components possible develop efficiently please tell us environment", "num": "18060", "d": "7/2017"}, {"title": "router relative navigation current state empty path different parameters fails", "body": "submitting current behavior given following routing route route route component component tries programmatically navigate parameters eg using navigation fails following error expected behavior navigation work minimal reproduction problem instructions full working example open plunkr launch application separate window click navigate relative open browser console inspect error note click navigate absolute performs absolute navigation works intended details create following routing configuration call method component export class testcomponent constructor private router router private route activatedroute navigaterelative void thisrouternavigate foo relativeto thisroute observe error described motivation use case changing behavior relative navigation different parameters work path empty works well please tell us environment", "num": "18059", "d": "7/2017"}, {"title": "compile save nt work angular project", "body": "created new angular project cli ng new myapp option compile save nt work project noted two project pc auto compile works correctly one nt work another changed project port nt work yet compileonsave option true please help boring", "num": "18058", "d": "7/2017"}, {"title": "pass function directive function defined scope", "body": "submitting x bug report current behavior typescript class used component controller private public members component template populated using ctrlcontrollermembername controllermembername belongs controller prototype within component template passing function defined scope another directive function called directive angularjs throws error typeerror use operator search ctrl nt work fn belongs component controller prototype works fn defined scope scopefunctionname thisfunctionname component controller called normally without error expected behavior function called properly defining scope please tell us environment browser x chrome desktop version tooling issues node version platform mac", "num": "18057", "d": "7/2017"}, {"title": "please reopen plunker available routereusestrategy", "body": "plunker added prove unexpected behaviour real life scenario probably lot developers building master detail views could running thanks advance", "num": "18056", "d": "7/2017"}, {"title": "discovering loading ngmodule runtime", "body": "feature request current behavior possible load dynamicall ngmodules compiled time whole application angularcli webpack currently requier code modules used application order best optimize production files split application chunks corresponding dynamic ngmodules chunks closely linked together expected behavior option angularcliwebpack allow independancy reuse chunks generates even though final result less optimal regarding code size optimization believe dynamic loading ngmodule designed idea mind since nt requier ngmodules statically imported router idea seem lost race perfect optimization great way motivation use case changing behavior actual trend microservice encapsulate complete buisness behaviour interface allows developp upgrade part large application without need recompile redeploy wole lot angular take account allow ngmodules exposed different microserviceto discovered loader run time", "num": "18053", "d": "7/2017"}, {"title": "aot imports always everything", "body": "submitting current behavior aot compiler generates imports star imports expected behavior aot generate imports like motivation use case changing behavior working fine allow rollupwebpack treeshake correctly fact bundle angular code even half may used please tell us environment", "num": "18052", "d": "7/2017"}, {"title": "dateformat issue", "body": "hi using primeng calendar showing following error click calendar compoenent data table error typeerror thisvaluegetdate function calendarwebpackjsonp primengcomponentscalendarcalendarjscalendarisselected objecteval updatedirectives objectdebugupdatedirectives updatedirectives checkandupdateview callviewaction execembeddedviewsaction checkandupdateview callviewaction execembeddedviewsaction checkandupdateview please help us thanks phaneendra", "num": "18050", "d": "7/2017"}, {"title": "access app component function another component wheather parent child relation", "body": "need access function equipment component app component", "num": "18049", "d": "7/2017"}, {"title": "need load external module", "body": "submitting current behavior need load external module provided js file somewhere actualy nt found solution expected behavior provide ability load module builder another project runtime minimal reproduction problem instructions try create module projet names modulequickstart project builded webpack provide module quickstartmodule module packaged webpack file include angular dependencies main app loaded file execute code eval instruction get quickstartmodule return function named try compile module using error think two angular loaded one main app one module hope solution answer crutial problem application motivation use case changing behavior project modular module added runtime module added providing js file url please tell us environment", "num": "18048", "d": "7/2017"}, {"title": "angular tutorial hero name missing select hero section", "body": "submitting current behavior hero list divs gets replaced hrefs information shows screen even though dom adjusted properly expected behavior hero name link minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "18047", "d": "7/2017"}, {"title": "angular unattractive ifelse syntax", "body": "submitting current behavior currently angular expects following syntax ifelse statement statement content else statement content popular frameworks vuejs expect far cleaner syntax like following angular unable accept cleaner template syntax ifelse statements", "num": "18045", "d": "7/2017"}, {"title": "bug docs methods appear many times", "body": "submitting current behavior validators docs method appears many times expected behavior method appear", "num": "18039", "d": "7/2017"}, {"title": "import multiline css comment wrongly interpreted", "body": "submitting x bug report current behavior statements multiline comments css incorrectly interpreted generating network request expected behavior comment statement inside ignored minimal reproduction problem instructions motivation use case changing behavior obviously import statement inside comment ignored please tell us environment browser x chrome desktop version", "num": "18038", "d": "7/2017"}, {"title": "better support overloaded methods angulario", "body": "current aio experience class pretty broken first signature duplicated every overload jsdocs nt show petebacondarwin pending fixes experience lot better jsdocs work every signature shown still lot noise page especially api like uses dozen overloads per method per conversation igorminar propose methods significant number overloads overloads list collapsible collapsed default show implementation signature actual method definition jsdoc overall method upon expansion list shows signature corresponding dedicated jsdoc individual overload linkable would greatly reduce clutter page allow much better explanations specifics overloaded signature", "num": "18037", "d": "7/2017"}, {"title": "consecutive router navigations replaceurl true pollute browser history", "body": "submitting current behavior navigating multiple times specifying cause browser history entry created navigation occurs first navigation completed expected behavior specifying always replace current url never perform standard navigation manipulation minimal reproduction problem instructions example steps open standalone window click button times observe additional history entries back button pulldown menu also increase number iterations prove add new history entry consecutive navigation first reduce loop count iteration history generated expected motivation use case changing behavior wrong according spec common use case apps track various bits state url hash different components may track state independently generally problem however spurious history entries break use cases please tell us environment analysis looked source pretty sure problem function id nt match always case multiple navigations happen rapid succession simply ignore parameter entirely perform normal navigation", "num": "18036", "d": "7/2017"}, {"title": "using type alias dependency injection throws error", "body": "submitting current behavior angular service contains generic parameters injected service components like since nt want repeat generic parameters every single component decided create alias using typescript type aliases feature inject service like since type aliases assign new name type would expect work however angular dependency injection resolve throws error expected behavior throw dependency resolution error minimal reproduction problem instructions import browsermodule angularplatformbrowser import ngmodule angularcore import appcomponent appcomponent import store store ngmodule declarations appcomponent imports browsermodule providers store bootstrap appcomponent export class appmodule import component angularcore import storealias storealias component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent constructor private store storealias import injectable angularcore injectable export class store import store store export type storealias store please tell us environment", "num": "18035", "d": "7/2017"}, {"title": "typeerror read property assertpresent undefined unit tests failing using angular jasmine karma", "body": "submitting stuck trying fix error getting run sort unit test project returns even simple tests currently test included testing see run still fails error entirety testts file looks like subject import observable rxjsobservable import operator rxjsoperator karmaconfjs file moduleexports function config configset basepath frameworks jasmine angularcli plugins require karmajasmine require karmachromelauncher require karmajasminehtmlreporter require karmacoverageistanbulreporter require angularclipluginskarma client clearcontext false leave jasmine spec runner output visible browser coverageistanbulreporter reports html lcovonly fixwebpacksourcepaths true angularcli environment dev reporters progress kjhtml port colors true loglevel configloginfo autowatch true browsers chrome singlerun false packagejson details specific versions running tried everything fix idea still anyone idea address help would greatly appreciated", "num": "18033", "d": "7/2017"}, {"title": "module initialization constructor", "body": "submitting current behavior last comment recommends initializing module constructor expected behavior provide way initialize module without constructor also consider error handlinglogging concerns initialization errors quickly recognized developer finally consider work main module minimal reproduction problem instructions motivation use case changing behavior initializing constructor considered antipattern explained misko hevery please tell us environment", "num": "18032", "d": "7/2017"}, {"title": "angular cli ng serve serve files folder", "body": "submitting current behavior cloned repo space root name editor placed place performed npm install amp amp ng serve get navigating expected behavior either cli warn repo invalid character handle gracefully minimal reproduction problem instructions create repo visual studio online space name clone using visual studio code see windows creates folder location space run see serve index file motivation use case changing behavior users may understand projects working correctly cloning repos allow spaces names well cli nothing warn user tell something happened incorrectly please tell us environment visual studio code repo visual studio online nt think matters tfs repo imported repo github repo valid name", "num": "18031", "d": "7/2017"}, {"title": "aio configure dgeni break build dangling images", "body": "example current output specific errors nt matter nt use doc", "num": "18030", "d": "7/2017"}, {"title": "componentfactoryresolver resolving factories tests", "body": "submitting current behavior component host uses componentfactoryresolver create components dynamically tests component pass entrycomponents described issue get componentfactoryresolver find factories components instantiate host template problem passed componentfactoryresolver longer instance codegencomponentfactoryresolver calls resolvecomponentfactory return undefined hence factory variable longer filled factory component worked fine version stopped working version component loader host typescript import component oninit input componentfactoryresolver viewchild viewcontainerref componentref angularcore import componentdata componentdata component selector componentloader template export class dynamiccomponentloadercomponent implements oninit input componentdata componentdata viewchild componentcontainer read viewcontainerref viewcontainer viewcontainerref componentdata typescript import type angularcore export interface componentdata type type properties property string object test typescript import component componentfactoryresolver angularcore import testbed componentfixture angularcoretesting import browserdynamictestingmodule angularplatformbrowserdynamictesting import dynamiccomponentloadercomponent dynamiccomponentloadercomponent import componentdata componentdata component selector testhosted template templ class hostedcomponent content string describe dynamiccomponentloadercomponent tests gt let fixture componentfixture expected behavior provided workaround worked breaks lot tests actually count workaround minimal reproduction problem instructions copy paste files test version notworking bellow working please tell us environment", "num": "18029", "d": "7/2017"}, {"title": "ca nt resolve angularroutersrcutilstree", "body": "submitting current behavior importing get following error module found error ca nt resolve angularroutersrcutilstree", "num": "18028", "d": "7/2017"}, {"title": "setcontrol function raises error second call formcontrol instance attached form control element path", "body": "submitting current behavior calling setcontrol second time formarray get following error formcontrol instance attached form control element path roles role expected behavior error raised minimal reproduction problem instructions plunker push topmost editor toggle button note application works get ugly error motivation use case changing behavior understanding able use setcontrol reinitiate formarray without getting error please tell us environment", "num": "18027", "d": "7/2017"}, {"title": "access dom element formcontrol programatically", "body": "searched google angulario docs source code could find currently possible latest version angular would like propose ability access dom element formcontrol bound using formcontrolname directive would publicly readonly formcontrol bound using formcontrolname directive property would null rationale behind request state element managed class without expose view markup ie id attribute xpath selector example use case would situation want listen onbluronfocus events example user selects control javascript perform animationhighlight show user field currently edited conversely onblur undo changes except form value exists andor modified would like take advantage rxjs observable events without litter html markup event want listen elements mediumsized form focusing element want able perform animation move label starts visual height form control form control user type form control would also bottom border would change color show selected input field blurred value want move label back initial locate remove bottom border begins become complex certain controls need extra behavior date picker opens automatically field focused closes automatically focus lost select drop based selection may need affect showhide form controls thank time please let know need clarify", "num": "18025", "d": "7/2017"}, {"title": "crossbrowsertabs globaleventemitter", "body": "submitting current behavior angular good choice single page app however whether old browsing habit necessity many people open one browser tabs would great way two peer components running two expected behavior tab component authenticates user emits event tab component n subscribed event catches event updates state results authenticated states redirects redirect url primary tab responsible persisting data localstorage rest tabs slaves typescript import injectable eventemitter globaleventemitter globaleventlistener angularcore injectable export class authservice lang en output langchangeeventlocal new eventemitter output langchangeeventglobal new globaleventemitter constructor globaleventlistener langchangeeventglobal subscribe lang gt someone else work let local folks know action required writing localstorage logic avoid thislangchangeeventlocalemit lang setlang lang string thislang lang let server know get token server store token localstorage let everyone locally amp globally know change thislangchangeeventlocalemit lang thislangchangeeventglobalemit lang motivationuse case changing behavior currently using broadcast message lib communicate tabs ability simply subscribe browserwide global event would nice option reduces lot logic simplifies many core components please tell us environment browser x chrome desktop version tooling issues angularcli node os darwin angular angularcli", "num": "18024", "d": "7/2017"}, {"title": "enquiry novice angularjs", "body": "hi know get somewhere else like email group whatnot could find information tutorial page novice gon na put hope guys nt mind excited encountering great great framework angularjs since new web development mean stack everything fresh exciting tour heros tutorial great make web app exactly like website angularjs wonder need know first find knowledge even clone project follow learn along thank advice advance thank much bottom heart guys great work providing arguably goat framework world", "num": "18023", "d": "7/2017"}, {"title": "runtime error invalid provider instances provider type allowed", "body": "submitting current behavior whenever try launch ionic app get runtime error invalid provider instances provider type allowed got object object motivation use case changing behavior nt remember related code reverted local modifications match working version commited still error think may someting version dependencies packagejson name myapp version author ionic framework homepage private true scripts clean ionicappscripts clean build ionicappscripts build lint ionicappscripts lint ionic build ionicappscripts build ionic serve ionicappscripts serve dependencies angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic ionicnativecore ionicnativefacebook ionicnativegeolocation ionicnativegooglemaps ionicnativeimagepicker ionicnativesplashscreen ionicnativestatusbar ionicstorage cordovaandroid cordovabrowser cordovaplugincompat cordovapluginconsole cordovaplugindevice cordovaplugingeolocation cordovaplugingooglemaps cordovapluginimagepicker git cordovaplugininappbrowser cordovapluginsplashscreen cordovapluginstatusbar cordovapluginwhitelist firebase ionicangular ionicpluginkeyboard ionicons parse rxjs swtoolbox zonejs devdependencies ionicappscripts ioniccliplugincordova ionicclipluginionicangular typescript description ionic project cordova plugins cordovapluginconsole cordovaplugindevice cordovapluginsplashscreen cordovapluginstatusbar cordovapluginwhitelist ionicpluginkeyboard cordovaplugingeolocation cordovaplugingooglemaps apikeyforandroid apikeyforios cordovaplugincompat appid appname cordovaplugininappbrowser cordovapluginimagepicker platforms android browser please tell us environment", "num": "18022", "d": "7/2017"}, {"title": "docs misleading concepts sanitization template syntax", "body": "submitting current behavior content security section template syntax guide saying html eviltitle interpolated evil title property bound evil title however angular would generate warning second line eg first line eg angular nt stringbased template sanitization wo nt happened expected behavior angular documentation provide correct description concepts could separate descriptions two conditions make clear first case htmltext would display nature angular template rather result sanitization second case htmltext would sanitized angular malignant parts removed minimal reproduction problem instructions fake description first line wo nt sanitized real description second line indeed sanitized motivation use case changing behavior making documentation correct clear please tell us environment migrated", "num": "18021", "d": "7/2017"}, {"title": "inject provider multi definition without using inject", "body": "submitting current behavior create provider multi definition extends baseclass class resolved without inject annotation expected behavior classes resolved without explicit declaration inject minimal reproduction problem instructions see plunker file srcmultiexample srcappts work plunker inject annotation nt work plunker without inject annotation motivation use case changing behavior create services independent angular please tell us environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "18020", "d": "7/2017"}, {"title": "memory ng build prodaot", "body": "submitting x bug report current behavior ng build prod aot produces fatal error callandretrylast allocation failed javascript heap memory trick nt work anymore app grown considerably lately expected behavior successful build minimal reproduction problem instructions please tell us environment", "num": "18019", "d": "7/2017"}, {"title": "aot compiling issue node modules", "body": "submitting current behavior simple import external module turns expected behavior external modules compilation left untouched minimal reproduction problem instructions cloned project example making fesm library added demonstrate issue download file install node packages run observe receive warning result turning makes impossible resolve package simpleuilibzip please tell us environment", "num": "18018", "d": "7/2017"}, {"title": "improve documentation navigate method navigating generic component", "body": "submitting current behavior want navigate current url existing param generic component want navigate url change param selected value component example component list years select first time url look like using second time select router look like tried find docs replace already existing param without appending new param current url could find except use query parameters expected behavior wish documentation tell navigate component know current url know possible query parameters good documentation minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "18017", "d": "7/2017"}, {"title": "unhandled promise rejection read property core undefined zone", "body": "packagejsontxt submitting current behavior upgrading angular angular fails bootstrap load typescript compiler errors runtime error trace chrome console error trace unhandled promise rejection read property core undefined zone task promisethen value typeerror read property core undefined mapsubscriberproject mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext distinctuntilchangedsubscriberwebpackjsonp rxjsoperatordistinctuntilchangedjsdistinctuntilchangedsubscribernext distinctuntilchangedsubscriberwebpackjsonp rxjssubscriberjssubscribernext mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext replaysubjectwebpackjsonp rxjsreplaysubjectjsreplaysubjectsubscribe typeerror read property core undefined mapsubscriberproject mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext distinctuntilchangedsubscriberwebpackjsonp rxjsoperatordistinctuntilchangedjsdistinctuntilchangedsubscribernext distinctuntilchangedsubscriberwebpackjsonp rxjssubscriberjssubscribernext mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext replaysubjectwebpackjsonp rxjsreplaysubjectjsreplaysubjectsubscribe apionunhandlederror handleunhandledrejection apimicrotaskdraindone drainmicrotaskqueue error uncaught promise typeerror read property core undefined typeerror read property core undefined mapsubscriberproject mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext distinctuntilchangedsubscriberwebpackjsonp rxjsoperatordistinctuntilchangedjsdistinctuntilchangedsubscribernext distinctuntilchangedsubscriberwebpackjsonp rxjssubscriberjssubscribernext mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext replaysubjectwebpackjsonp rxjsreplaysubjectjsreplaysubjectsubscribe mapsubscriberproject mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext distinctuntilchangedsubscriberwebpackjsonp rxjsoperatordistinctuntilchangedjsdistinctuntilchangedsubscribernext distinctuntilchangedsubscriberwebpackjsonp rxjssubscriberjssubscribernext mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext mapsubscriberwebpackjsonp rxjsoperatormapjsmapsubscribernext mapsubscriberwebpackjsonp rxjssubscriberjssubscribernext replaysubjectwebpackjsonp rxjsreplaysubjectjsreplaysubjectsubscribe resolvepromise zonedelegatewebpackjsonp zonejsdistzonejszonedelegateinvoketask zonewebpackjsonp zonejsdistzonejszoneruntask drainmicrotaskqueue expected behavior angular bootstrap load normally upgrade please tell us environment angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "18016", "d": "7/2017"}, {"title": "proposal defining nonsingleton services component service", "body": "context found nice way compose directivescomponents use service part module defined directivecomponent level example meant singleton service rather way compose component reusable code service look like ts injectable export class ngrxservice constructor private store store private cdr changedetectionref select dispatch set ngondestroy also talking kind service really handy inject directivecomponent related stuff like even access life cycle hook wonderful everything work great problem catch always provide service component happen forget probably end parent service absolutely nt want use protect well forget provide probably also forget use even really good memory still boilerplate feels like job wrong end service meant work like behavior determined service definition usage proposals probably multiple ways achieving proposal create new decorator kind service service wo nt singleton new instance created injection ca nt injected elsewhere inside component directive get life cycle host component directive must provided componentdirective module part imported module need export injection scoped module global like component directive pipe update since proposal adding value", "num": "18015", "d": "7/2017"}, {"title": "common expectone could help check body headers", "body": "submitting current behavior following currently test body request expected behavior would really helpful developers something like even even favorite please tell us environment", "num": "18014", "d": "7/2017"}, {"title": "common expectone message could improved", "body": "submitting current behavior failed test http request gives following message since better still quite hard debug idea actual request expected behavior ideal message would something like please tell us environment", "num": "18013", "d": "7/2017"}, {"title": "common httpclient params", "body": "submitting current behavior follow correctly whereas old service allowed use simple object literal see would great able expected behavior please tell us environment cc alxhub igorminar", "num": "18012", "d": "7/2017"}, {"title": "possibility delete parameter using queryparamshandling merge", "body": "submitting current behavior currently possible explicitly delete single query parameter using queryparamshandling merge passing null value old value nt change expected behavior lets say two components one page component responsible two parameters component uses parameter b component uses parameter c using queryparamshandling merge component modifies parameters responsible parameters component remain query parameters optional legitimate one component wants delete parameter responsible eg component wants remove parameter would expect pass null remove parameter current behavior url changed passing null possible remove parameter merge workaround workaround pass empty string parameter different meaning also leaves parameter url another workaround use merge mechanism components need knowledge parameters responsible", "num": "18011", "d": "7/2017"}, {"title": "add ability watch changed parammap queryparammap", "body": "submitting current behavior url query parameters year contractid change year contractid event triggered parameters handle self logic check parameter changed storing variables like oldyear oldcontractid expected behavior wish subscribe changed parameter would make life much easier example minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "18010", "d": "7/2017"}, {"title": "cordova angular unstable", "body": "hi hybrid mobile app developed using angular app working good chrome safari browsers app packaged cordova behaving differently issue see cordova app screens getting distored responsiveness app good came across issues due change detection upgraded angular version zone js version upgraded app behaviour ios android better best practice follow angular cordova plugin calls impact change detection due cordovaexec calls always getting results app zone name right chromesafari windowzonecurrent name parent null androidios windowzonecurrent name parent null angular version cordova android ios", "num": "18009", "d": "7/2017"}, {"title": "aio app header rendered incorrectly ipad", "body": "title angular overlaps navigation menu ipad retina display ios google chrome", "num": "18007", "d": "7/2017"}, {"title": "change routes routeranimation complete", "body": "submitting current behavior change routes routeranimation complete page animation gets weird sometimes would also generate error like returned zero elements expected behavior prevent route change routeranimations running allow change route routeranimations complete minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "18006", "d": "7/2017"}, {"title": "calling setvalidators form control control nested component form causes expressionchangedafterithasbeencheckederror", "body": "submitting current behavior calling setvalidators form control control nested component form causes expressionchangedafterithasbeencheckederror otherwise nesting formcontrols components seems work fine expected behavior calling myformcontrols mycontrol setvalidators validatorsrequired nested component reactive form would expect errors occur especially expressionchangedafterithasbeencheckederror minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "18004", "d": "7/2017"}, {"title": "aio problem animation switching code tabs", "body": "submitting current behavior toggling code examples sliding animation nt run expected behavior sliding animation run properly works chrome minimal reproduction problem instructions go page docs code examples separated tabs eg one click tabs please tell us environment", "num": "17998", "d": "7/2017"}, {"title": "expressions form cause metadata collector throw", "body": "submitting current behavior angular annotation contains expression like throw source invalid context language service collector called file regardless errors expected behavior error message reported instead throw minimal reproduction problem instructions add expression trail ts import component angularcore const value component provider provide token usevalue value export class mycomponent", "num": "17993", "d": "7/2017"}, {"title": "feature request responsive documentation angulario", "body": "reading documentation necessary scroll left right see end line attached screen shot created set layout utilties demo makes easy adjust following approach outlined philip walton solved flexbox general screenshot desktop view notice documentation moves past right side screen", "num": "17991", "d": "7/2017"}, {"title": "error use ionic cordova build ios prod", "body": "use ionic cordova build ios prod error ios app ca nt use error c zzvcappicomimobileapp ionic cordova build ios prod cordova platform add save ios running command done running appscripts build prod iscordovaserve externaliprequired nobrowser build prod started clean started clean finished ms copy started ngc started ngc finished preprocess started deeplinks started deeplinks finished ms optimization started warn error occurred command execution cli plugin ioniccliplugincordova plugins may date error module build failed typeerror read property content undefined objectoptimizationloader c zzvcappicomimobileappnodemodules ionicappscripts objectloader c zzvcappicomimobileappnodemodules ionicappscripts srcappappmodulengfactoryjs srcappmaints", "num": "17990", "d": "7/2017"}, {"title": "remove component wrap html tag", "body": "hello everyone list way remove html wrapper tag one component becaouse tag breaks css need component without html tag wrapper regards", "num": "17987", "d": "7/2017"}, {"title": "docs need warning using detectchanges", "body": "submitting current behavior automatic change detection section testing docs states use end section say rather wonder test fixture wo nt perform change detection samples guide always call detectchanges explicitly harm calling detectchanges often strictly necessary however testing things set use auto detect changes detected test expected behavior docs mention nt use auto detect test minimal reproduction problem instructions post stackoverflow exactly demonstrates issue saw working testing docs motivation use case changing behavior spending time wondering tests nt working trying recreate code docs copyingpasting example code", "num": "17986", "d": "7/2017"}, {"title": "document tag content projection works", "body": "submitting current behavior per searching ngcontent nt produce useful results nt seem detailed description works expected behavior per points probably documented projection moves nodes one place another leads following conclusions possible use projected content multiple times link projected nodescomponents always created even wrap eg reason problems link using probably well projected nodes encapsulation place created projected query subset nodes using document toplevel nodes selected approach document recipe template tobias referring created projected nodes needed minimal reproduction problem instructions search ngcontent motivation use case changing behavior creates lot confusion users see please tell us environment na", "num": "17983", "d": "7/2017"}, {"title": "conditionally remove ngmodules workflow", "body": "submitting motivation use case changing behavior understand idea behind ngmodules way opt much plumbing much ceremony especially big apps even small apps nt care lazy loading care ngmodules recently team members playing react core concepts lot less plumbing years angularjs development early adopter considering abandoning angular considering easing development process please tell us environment", "num": "17976", "d": "7/2017"}, {"title": "trigger change detection http responses useapplyasync enabled", "body": "submitting current behavior enabled intent reducing number dirty check cycles ngupgraded application opposite effect ngzone triggers dirty check http response well timer meant coalesce single dirty check expected behavior useapplyasync enabled xmlhttprequests http executed outside angular zone async call apply run inside angular zone minimal reproduction problem instructions startup enable useapplyasync make multiple requests observe request results separate dirty check cycle addition another cycle timeout motivation use case changing behavior bringing startup time ngupgraded angularjs applications back line vanilla angularjs please tell us environment reasonably large angularjs codebase ngupgradeangular recently added browser others implemented would provide nice way implementing fix", "num": "17975", "d": "7/2017"}, {"title": "run outside angular zone invokeapply false", "body": "submitting current behavior despite explicit opt change detection timeout interval still trigger change detection via angular zone expected behavior invokeapply specified call settimeoutsetinterval runs outside angular zone change detection occur minimal reproduction problem instructions call timeout invokeapply invokeapply argument set false observe angular angularjs change detection occured motivation use case changing behavior would like angularjs codebase remain performant migrate angular via ngupgrade please tell us environment mostly angularjs app ngupgradeangular recently introduced", "num": "17973", "d": "7/2017"}, {"title": "language service hovering template reference throws error", "body": "submitting current behavior hovering template reference throw expected behavior throw minimal reproduction problem instructions add template project hover", "num": "17972", "d": "7/2017"}, {"title": "automatic routing based folder structure", "body": "submitting current behavior require manually setup routes expected behavior automatically create routes based folder structure minimal reproduction problem instructions motivation use case changing behavior easier developer work pages without thinking create routes eg following folder structure angularrouter create url abcxyz please tell us environment", "num": "17970", "d": "7/2017"}, {"title": "validatorspattern erroring", "body": "submitting current behavior using validatorspattern seemingly pattern errors expected behavior proper form validation error object returned application break minimal reproduction problem instructions plunkr loaded open console coppied one tests seems job although type input box console begin flood actual errors please tell us environment", "num": "17968", "d": "7/2017"}, {"title": "router navigating matrix params change inside array", "body": "submitting current behavior let say dict storing matrix params expected behavior navigate time minimal reproduction problem instructions open windowed mode see route change rather lack route change please tell us environment", "num": "17966", "d": "7/2017"}, {"title": "language service read property flags undefined", "body": "submitting current behavior directive used template reason typescript include file project uses language service crash expected behavior language service either ignore directive extend project include definition minimal reproduction problem instructions apply index asrcappappcomponenthtml bsrcappappcomponenthtml title flex none flex flex nogrow flex grow flex flex flex diff git asrcappappmodulets bsrcappappmodulets index asrcappappmodulets bsrcappappmodulets import browsermodule angularplatformbrowser import ngmodule angularcore import formsmodule angularforms import httpmodule angular import flexlayoutmodule angularflexlayout import appcomponent appcomponent import appcomponent appcomponent imports browsermodule formsmodule httpmodule httpmodule flexlayoutmodule providers bootstrap appcomponent hover directives", "num": "17965", "d": "7/2017"}, {"title": "jsdom angular", "body": "submitting current behavior jsdom needed another module load angular project however soon try start using get error jsdom said ask expected behavior expecting webpack compile fine minimal reproduction problem instructions include module developers home component please tell us environment", "num": "17963", "d": "7/2017"}, {"title": "ngswitch doesnt work ngtemplate without warning", "body": "submitting current behaviour using ngswitch try wrap switch case inside div ngcontainer readability works ngcontainer use ngtemplate nt render warnings expected behaviour correct behaviour work error thrown angular state use ngcontainer instead please tell us environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform", "num": "17961", "d": "7/2017"}, {"title": "abstractcontrolmarkaspending emit events", "body": "submitting current behavior emit events expected behavior emit minimal reproduction problem instructions bug reports please provide steps reproduce possible minimal demo problem via please tell us environment", "num": "17958", "d": "7/2017"}, {"title": "router navigation lazy loading modules", "body": "submitting current behavior hi lazyloading modules router configured like path parent component parent children path loadchildren path loadchildren path component path component wan na navigate child get cause empty section added lazy loading module configuration use fact expected behavior get way change behaviour becouse many nested lazy loading modules get littlebit empty sections write sibling go sibling route minimal reproduction problem instructions application lazy loading modules try navigate sibling route plunker go member try go back two buttons working motivation use case changing behavior please tell us environment", "num": "17957", "d": "7/2017"}, {"title": "angular lazy load third modules library modules", "body": "scene xml firstcomponenthtml xml secondcomponenthtml xml thirdcomponenthtml javascript import ckeditormodule ckeditor import tablemodule table import ngmodule imports ckeditormodule tablemodule daterangepickermodule anyothermodule import modules sync bundle big way lazy load componets lazy load modules asyn router asyn router ca nt handle question use way wrap common third directives order lazy load use angularcli", "num": "17956", "d": "7/2017"}, {"title": "angular reactive form ie input type text field get sets dirty focus", "body": "submitting current behavior issue use placeholder open reactive form ie field gets dirty soon focus due validations runs creates bug expected behavior ie set field dirty working fine google chrome minimal reproduction problem instructions check following plnkr see bug first run chrome working fine run plnkr ie u see difference bug please tell us environment browser x chrome desktop version support angular x ie version", "num": "17955", "d": "7/2017"}, {"title": "application breaks routing accessed browser notification", "body": "submitting current behavior application breaks url accessed clicking browser notification url accessed way everything works fine expected behavior application nt break accessed browser notification minimal reproduction problem instructions bug reproduced repository steps reproduce expected behavior launch application opening url click go test button observe dropdown working page steps reproduce bug launch application opening url click browser notification appears observe dropdown working previous component also appearing making page broken errors javascript console motivation use case changing behavior bug fixed otherwise browser notifications rendered useless angular please tell us environment", "num": "17954", "d": "7/2017"}, {"title": "language service forgiving support union types templates", "body": "submitting current behavior variable component union type language service complain reference properties common members union type sometimes may valid try reference nonshared properties eg typescript import component angularcore export interface line length number dimensions number export interface plane area number dimensions number component selector approot template shapelength shapearea shapedimensions export class appcomponent collection array shape lineplane screenshot output vs code using language service plugin expected behavior would expect able use construction without errors minimal reproduction problem instructions create new angular cli project replace contents appcomponentts code view vs code language service plugin enabled version plugin uses motivation use case changing behavior example illustrates simple uses case app situation generic component passed different types object uses operator display first truthy value please tell us environment", "num": "17953", "d": "7/2017"}, {"title": "activatedroute documentation mention data params fields", "body": "submitting current behavior version mention data params observables expected behavior data params fields documented mentioned summary example code interestingly enough fields documented routestatedts file", "num": "17952", "d": "7/2017"}, {"title": "input element ngmodel initialized null fires input event focus blur ie", "body": "submitting current behavior input element ngmodel initialized null fires input event focus blur empty null value expected behavior tested plain input element input eventlistener ie nt firing input events scenario assume nt ie bug input event consecutive onchangengmodelchange fired focus blur minimal reproduction problem instructions example simple input element input eventlistener motivation use case changing behavior please tell us environment", "num": "17951", "d": "7/2017"}, {"title": "perf forms aot generates significant amount code control instance template", "body": "submitting current behavior everything seems working expected wanted point use case think worth optimizing compiler elsewhere one clients applications aot version twice large nonaot version main culprit seems code generated form directives particularly every instance form group control template added minified bundle application forms controls form would mean additional minified bundle gzip certainly improves things since code pretty repetitive size still significant gzip nt help js parsing time expected behavior would nice code could deduplicated minimal reproduction problem instructions check repository built angular cli build ngc look look generated code see repetition build minified wcli record size comment build minified wcli compare size bundle size controls present trust numbers mainbundlejs state flag bytes bytes gzip fresh checkout prod comment whole template incl form group prod fresh checkout aot comment control aot comment controls aot comment controls aot comment whole template incl form group aot motivation use case changing behavior smaller fasterparsing bundles apps many form controls please tell us environment", "num": "17949", "d": "7/2017"}, {"title": "aio mobile cache window history amp restore start", "body": "problem app nt remember relaunch especially annoying iphone docviewer home screen app switch another app switch back app restarts home page forgotten looking real app remembering would nice browser solutions docviewer stash window history browser local storage exists iphone whereas service worker rebuild launch", "num": "17946", "d": "7/2017"}, {"title": "typo forms documentation reactive forms", "body": "submitting current behavior paragraph read need method populate repopulate secretlairs actual hero addresses whenever parent herolistcomponent sets herolistcomponenthero input property new hero expected behavior need method populate repopulate secretlairs actual hero addresses whenever parent herolistcomponent sets herodetailcomponenthero input property new hero minimal reproduction problem instructions na motivation use case changing behavior na please tell us environment na", "num": "17943", "d": "7/2017"}, {"title": "aio configure dgeni break build dangling links", "body": "", "num": "17942", "d": "7/2017"}, {"title": "prevent redeploys aio using old versions code", "body": "current behavior merge two prs quickly first one takes longer build could run situation deploy later ci job first deploy first job took extra long finish alternatively team member could go old ci build restart causing redeploy happen using commit situations live site redeployed older version application expected behavior live site deployed latest app version nt get redeployed older version unless rollback via firebase console", "num": "17941", "d": "7/2017"}, {"title": "animations broke updating", "body": "submitting current behavior animations used work throws error expected behavior animations nt break update guess minimal reproduction problem instructions animating infinityscrolled list animations motivation use case changing behavior animating multiple elements time seems case something nt catching properly either element nt found something else changed animations motivation kinda speaks self guess angular able delegate multiple animations time without crashing please tell us environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx x safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac others using angularcli", "num": "17938", "d": "7/2017"}, {"title": "reactive forms plunkr demo broken", "body": "plunkr demo linked broken", "num": "17937", "d": "7/2017"}, {"title": "http nt catch error", "body": "submitting current behavior headless chrome expected behavior shows url console error minimal reproduction problem instructions right complex show output text info worker pid core service chrome stateurllist booted true core angular giving response motivation use case changing behavior headless environment please tell us environment", "num": "17936", "d": "7/2017"}, {"title": "working export member animationbuilder", "body": "aotprecompile ngc error homesplincodedevelopblackboxuiutilnodemodules module homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations exported member animationbuilder error homesplincodedevelopblackboxuiutilnodemodules module homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations exported member animationfactory error homesplincodedevelopblackboxuiutilnodemodules module homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations exported member animationoptions error homesplincodedevelopblackboxuiutilnodemodules nonabstract class injectableanimationengine implement inherited abstract member flush class animationengine error homesplincodedevelopblackboxuiutilnodemodules nonabstract class injectableanimationengine implement inherited abstract member listen class animationengine error homesplincodedevelopblackboxuiutilnodemodules nonabstract class injectableanimationengine implement inherited abstract member oninsert class animationengine error homesplincodedevelopblackboxuiutilnodemodules nonabstract class injectableanimationengine implement inherited abstract member onremove class animationengine error homesplincodedevelopblackboxuiutilnodemodules nonabstract class injectableanimationengine implement inherited abstract member registertrigger class animationengine error homesplincodedevelopblackboxuiutilnodemodules nonabstract class injectableanimationengine implement inherited abstract member setproperty class animationengine error property animationbuilder exist type typeof homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations error homesplincodedevelopblackboxuiutilnodemodules angularplatformbrowseranimationsindexngfactoryts property animationbuilder exist type typeof homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations error homesplincodedevelopblackboxuiutilnodemodules angularplatformbrowseranimationsindexngfactoryts property animationbuilder exist type typeof homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations error homesplincodedevelopblackboxuiutilsourceappappmodulengfactoryts property animationbuilder exist type typeof homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations error homesplincodedevelopblackboxuiutilwebappsourceappappmodulengfactoryts property animationbuilder exist type typeof homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations error homesplincodedevelopblackboxuiutilnodemodules angularplatformbrowseranimationssrcanimationbuilderdts module homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations exported member animationbuilder error homesplincodedevelopblackboxuiutilnodemodules angularplatformbrowseranimationssrcanimationbuilderdts module homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations exported member animationfactory error homesplincodedevelopblackboxuiutilnodemodules angularplatformbrowseranimationssrcanimationbuilderdts module homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations exported member animationoptions error homesplincodedevelopblackboxuiutilnodemodules angularplatformbrowseranimationssrcprovidersdts nonabstract class injectableanimationengine implement inherited abstract member flush class animationengine error homesplincodedevelopblackboxuiutilnodemodules angularplatformbrowseranimationssrcprovidersdts nonabstract class injectableanimationengine implement inherited abstract member listen class animationengine error homesplincodedevelopblackboxuiutilnodemodules angularplatformbrowseranimationssrcprovidersdts nonabstract class injectableanimationengine implement inherited abstract member oninsert class animationengine error homesplincodedevelopblackboxuiutilnodemodules angularplatformbrowseranimationssrcprovidersdts nonabstract class injectableanimationengine implement inherited abstract member onremove class animationengine error homesplincodedevelopblackboxuiutilnodemodules angularplatformbrowseranimationssrcprovidersdts nonabstract class injectableanimationengine implement inherited abstract member registertrigger class animationengine error homesplincodedevelopblackboxuiutilnodemodules angularplatformbrowseranimationssrcprovidersdts nonabstract class injectableanimationengine implement inherited abstract member setproperty class animationengine error atloader nodemodules module homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations exported member animationbuilder error atloader nodemodules module homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations exported member animationfactory error atloader nodemodules module homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations exported member animationoptions error atloader nodemodules nonabstract class injectableanimationengine implement inherited abstract member flush class animationengine error atloader nodemodules nonabstract class injectableanimationengine implement inherited abstract member listen class animationengine error atloader nodemodules nonabstract class injectableanimationengine implement inherited abstract member oninsert class animationengine error atloader nodemodules nonabstract class injectableanimationengine implement inherited abstract member onremove class animationengine error atloader nodemodules nonabstract class injectableanimationengine implement inherited abstract member registertrigger class animationengine error atloader nodemodules nonabstract class injectableanimationengine implement inherited abstract member setproperty class animationengine error atloader property animationbuilder exist type typeof homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations error atloader property animationbuilder exist type typeof homesplincodedevelopblackboxuiutilnodemodules angularanimationsanimations", "num": "17935", "d": "7/2017"}, {"title": "router redirectto allows string params absolute paths", "body": "submitting current behavior way pass string query params router redirectto relative paths expected behavior path redirectto list paramtrue minimal reproduction problem instructions similar issue following one fix done wo nt work nonabsolute paths motivation use case changing behavior redirected would like alert somehow come redirection apply different configuration components please tell us environment", "num": "17934", "d": "7/2017"}, {"title": "navigation nt fire within function returns promise observable", "body": "submitting current behavior method returns promise observable navigation nt work properly fires timer resolves timer substitute async logic returns primitive return navigations fires well expected behavior expect navigation fire immediately regardless type returned minimal reproduction problem instructions excerpt popup service showpopup thisrouternavigate lt navigation nt fire expected outlets popup popup please tell us environment", "num": "17933", "d": "7/2017"}, {"title": "aio animations guide", "body": "submitting request enhancing documentation current behavior actually wanted report need animations guide since nt however turns aio search fluky expected behavior animations guide easier find minimal reproduction problem instructions search term animations motivation use case changing behavior improve findability sunflower please tell us environment", "num": "17931", "d": "7/2017"}, {"title": "ie setting input type text field dirty focus angular reactive forms", "body": "", "num": "17930", "d": "7/2017"}, {"title": "angular template error anonymous contain member", "body": "submitting current behavior parsing template designtime angularcli compiler andor typescript throw nonsensical errors undefined data structure even well defined statically typed expected behavior property type clearly supplied component template parser recognize minimal reproduction problem instructions componentts componenthtml iname compiler error angular identifier name defined contain member plunk demonstrating broken application change typescript version using line application run without problem motivation use case changing behavior bug suboptimal error message please tell us environment", "num": "17929", "d": "7/2017"}, {"title": "conflict form label selector", "body": "infinite loops form label conflict", "num": "17928", "d": "7/2017"}, {"title": "ngtoolswebpack aotplugin hangs process bundling aot build", "body": "submitting current behavior settings simple aot configuration hangs including aotplugin tool chain result excluding plugin none files transformed correctly example scss variables variablename included within aot output eg expected behavior including aotplugin hang webpack process remove aotplugin runs completion including nt appear make difference minimal reproduction problem instructions rename add variablesstyles simple color background scss variable update appcomponentts styleurls new name quickly ng serve sanity check add following config run following command generate aot factories add mainaotts file following configuration import platformbrowser angularplatformbrowser import appmodule appappmodule import appmodulengfactory distaotsrcappappmodulengfactory platformbrowser bootstrapmodulefactory appmodulengfactory ngc p tsconfigaotjson add webpackaotconfigjs file following config const ngtools require ngtoolswebpack const webpack require webpack moduleexports webpack debug displayerrordetails config webpackaotconfigjsnew ngtoolsaotplugin webpackaotconfigjs file webpack run completion expected including plugin results webpack process never finishing please tell us environment", "num": "17925", "d": "7/2017"}, {"title": "enter animations executed router animations", "body": "submitting current behavior trying use viewinit animations router animation viewinit animation triggered content loads without animation expected behavior execute viewinit animations route animations ends minimal reproduction problem instructions router animations appcomponentsts component animation aboutcomponenthtml loren ipsum loren ipsumloren ipsumloren ipsumloren ipsumloren ipsum loren ipsumloren ipsumloren ipsumloren ipsum loren ipsumloren ipsumloren ipsum animations trigger stagger transition gt query p img style opacity transform translatex optional true navigating homecomponent aboutcomponent stagger animation triggered content displayed right navigation ends refreshing browser aboutcomponent page stagger animations works elements entering one one found solution problem adding ngif loaded stagger element adding following code aboutcomponentts motivation use case changing behavior initial animate componen route animation ends please tell us environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "17922", "d": "7/2017"}, {"title": "aio ngfor ngforof", "body": "submitting current behavior section discusses ngfor sugar ngfor however ngfor deprecated replaced docs ngforof expected behavior expect docs kept date code changes prevent developer confusion remain relevant minimal reproduction problem instructions view section documentation motivation use case changing behavior docs kept date please tell us environment", "num": "17921", "d": "7/2017"}, {"title": "uncaught typeerror call method apply undefined running angular cordova solved", "body": "submitting bug report current behavior running angular app cordova see white screen device error angular works cordovawebkit cordovacrosswalk expected behavior errors console app works text device screen minimal reproduction problem instructions please tell us environment", "num": "17919", "d": "7/2017"}, {"title": "child component inside ngif", "body": "message tag unknown angular version latest browser chrome desktop version latest tooling issues node version latest platform windows", "num": "17918", "d": "7/2017"}, {"title": "believe package angularforms depend package rxjs", "body": "submitting current behavior currently module depending amd call however section empty incorrect expected behavior think failing end everything bundled correct order correct version found still dependencies declaration incomplete motivation use case changing behavior developing npm bundler la browserify webpack liferay portal need rely declared correctly otherwise nt work resolve dependencies last moment page rendered would possible add dependency without breaking anything send pull request necessary", "num": "17917", "d": "7/2017"}, {"title": "click listener inside ngfor work combination hostlistener document", "body": "submitting current behavior click events fire ngfor component subscribe document mouseup document mousedown problem occur ngfor loop dynamic list items see plunkr expected behavior click events still fire minimal reproduction problem instructions create component function returns list items always creates new list items create ngfor iterating list returned function create click listener inside ngfor gt click listener works fine add new component hostlistener document mouseup show newly created component gt click listener work plunker reproduce please tell us environment angular version browser", "num": "17916", "d": "7/2017"}, {"title": "resolved issue error resolving calling function makedecorator", "body": "tsconfigjson add following line enclosed json object paths angular nodemodules angular hope saves someone hours scouring web best", "num": "17914", "d": "7/2017"}, {"title": "aio webpack guide style issue", "body": "submitting current behavior wrong style behavior webpack guide open see content guide overlaps toccontainer right side hard read guide expected behavior text content webpack guide must overlap toc right side minimal reproduction problem instructions open webpack guide look content toc right side page motivation use case changing behavior better readability webpack guide please tell us environment browser x chrome desktop version", "num": "17912", "d": "7/2017"}, {"title": "codes shown codepen", "body": "trying look sample codes nothing shown pressed edit codepen three examples", "num": "17911", "d": "7/2017"}, {"title": "reactive form always reflect changes ui", "body": "submitting current behavior form contains multiple form groups use create separate component group pass reference relevant group input component represents group set controls touched dirty manually form correct state however wo nt reflect properly ui even etc expected behavior inputs gets updated ui minimal reproduction problem instructions open plunker start running see short description replicate motivation use case changing behavior huge form user presses enter first input field need display validation errors inputs show user missing fields form actually submitted please tell us environment", "num": "17910", "d": "7/2017"}, {"title": "many times change detection supposed run", "body": "submitting current behavior brand new app generated angular cli one component app component enabled prod mode running ngdocheck currently running checks app loads expected behavior one check would logged load minimal reproduction problem instructions ng new ngcliapp ng serve add following code appcomponentts count number maints safe consistent make sure prod enabled enableprodmode nb tested prod neither made difference motivation use case changing behavior trying optimise change detection much larger app throwing exactly change detection working trying debug problems existing app cd trying pin point bottle necks performance making difficult change detection meant work fine nt found explanation anywhere case issue nt specifically newly generated app behaviour may may affecting larger application help much appreciated please tell us environment", "num": "17909", "d": "7/2017"}, {"title": "text blurred resources page", "body": "text blurred page hovered item submitting current behavior text blurred expected behavior text blurred minimal reproduction problem instructions go link hover item motivation use case changing behavior text always readable please tell us environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "17907", "d": "7/2017"}, {"title": "js file work angular routing navigate", "body": "hi problem js file work routing navigate script file include js file jquery library indexhtml file loginpagecomponentts use routing navigate login method routing path member component memberpagecomponent children path redirectto login pathmatch full path login component loginpagecomponent myapp login successful navigate main page try test script using slide menu bar nt work refresh page work need make work navigate help please", "num": "17906", "d": "7/2017"}, {"title": "deprecation router documentation", "body": "submitting current behavior router documentation page adding animations code sample refactored since animationentrymetadata deprecated rest moved angularanimations expected behavior read minimal reproduction problem instructions motivation use case changing behavior please tell us environment", "num": "17905", "d": "7/2017"}, {"title": "tutorial instructed link stylescss despite included stylesbundlejs", "body": "submitting current behavior tutorial routing instructs create stylescss compiled diststylesbundlejs stylescss assets angularclijson included build people going tutorial get console requesting stylesheet pageload expected behavior remove instructions stating minimal reproduction problem instructions ng new motivation use case changing behavior remove conflicting advice tutorial please tell us environment", "num": "17904", "d": "7/2017"}, {"title": "svg g element allowing transform attribute", "body": "submitting current behavior svg g element trying transform different spot svg angular compiler allow attribute element even though valid expected behavior allow attribute minimal reproduction problem instructions following template compile motivation use case changing behavior able move group svg elements within svg fully compatible svg spec please tell us environment", "num": "17903", "d": "7/2017"}, {"title": "integration route test lazyloaded module fails error find module", "body": "submitting current behavior results returning empty string error reported stack trace expected behavior results returning minimal reproduction problem instructions complete repro found configure routing module following route add test route following output shown debug console motivation use case changing behavior integrated route tests eagerloaded modules succeed break module configured lazyloaded please tell us environment", "num": "17902", "d": "7/2017"}, {"title": "typo router documentation routeconfigloadstart", "body": "submitting current behavior router documentation line seen routeconfigloadstart event triggered route lazy loaded expected behavior read routeconfigloadend event triggered route lazy loaded minimal reproduction problem instructions na motivation use case changing behavior na please tell us environment na", "num": "17901", "d": "7/2017"}, {"title": "docs typo tour heroes tutorial", "body": "submitting current behavior open page chapter starts text heroescomponent navigates heroesdetailcomponent response expected behavior instead text heroescomponent navigates herodetailcomponent response nt component tutorial component", "num": "17900", "d": "7/2017"}, {"title": "di provide equivalent skipself injectorget", "body": "submitting current behavior currently possible injecting dependency constructor use avoid error dependency found search directly parent injector instance typical use case selfnested components need inject parent working dynamic dependency injection however need rely injector object offers equivalent accepting way emulate parent injector public method obviously look injector first expected behavior method accept third optional argument allowing us search directly parent injector would default evidently motivation use case changing behavior logical offer exact capabilities constructorlevel dependency injection please tell us environment", "num": "17898", "d": "7/2017"}, {"title": "aio provide link working example rollup treeshaking toh", "body": "submitting current behavior guide add rollup treeshaking tour heroes link actual implementation ziparchive example toh nt contain rollup config expected behavior would really nice see really working motivation use case changing behavior treeshaking working stated website section really misleading otherwise example would great place start way see angularforms still bundle whole please tell us environment windows angular version browser language typescript", "num": "17895", "d": "7/2017"}, {"title": "windows build fails even git bash", "body": "submitting current behavior windows fails building buildsh find module find module srccommondowngradecomponent find module srccommondowngradeinjectable find module srccommonversion find module srcstaticupgradecomponent find module srcstaticupgrademodule", "num": "17894", "d": "7/2017"}, {"body": "angularpng file distributed webpackzip download", "d": "7/2017"}, {"body": "looks zone related sure latest version correctly installed", "d": "7/2017"}, {"body": "far tell zonejs installed correctly app latest version available today sure else check", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "issue actually mentioned", "d": "7/2017"}, {"body": "seems like cli bug please open issue repo", "d": "7/2017"}, {"body": "part ecmascript standard nothing angular", "d": "7/2017"}, {"body": "sorry section nt really error", "d": "7/2017"}, {"body": "duplicate", "d": "7/2017"}, {"body": "sdeering get url site see old site well use old site time ago would explain ending would redirected", "d": "7/2017"}, {"body": "thx reporting duplicate", "d": "7/2017"}, {"body": "reported days ago damm still exists open", "d": "7/2017"}, {"body": "technically nt overlap toc toc getting smaller grin could definitely place toc footer eg large screens would essentially make footer fit inside main content area middle mentioned clear whether deliberate design decision cc igorminar sjtrimble", "d": "7/2017"}, {"body": "root cause issue noscript default convert crosssite post requests get requests case necessary post request obviously xss vulnerability false alarm one ca nt much afraid", "d": "7/2017"}, {"body": "gkalpak makes sense feel free close handle see fit thanks swift response", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "7/2017"}, {"body": "nt use sure seeing get success example snippet affects whether cookies sent outgoing request whether cookies set response accepted", "d": "7/2017"}, {"body": "httpclient nt use fetch sure seeing sorry misinterpreted documentation regarding fetch big time please ignore anything mentioned regarding fetch think thoughts came opening lines documentation modern browsers support two different apis making http requests xmlhttprequest interface fetch api httpclient angularcommonhttp provides simplified api http functionality use angular applications building top xmlhttprequest interface exposed browsers get success example snippet yes get status code back see cookies response header inspecting request withcredentials affects whether cookies sent outgoing request whether cookies set response accepted read documentation regarding feature excerpt mdn note xmlhttprequest responses different domain set cookie values domain unless withcredentials set true making request regardless accesscontrol header values write realize forgotten important piece information request cross domain request server successfully managed retrieve cookies using fetch api server configured appropriately", "d": "7/2017"}, {"body": "okay missing something somewhere close bug successfully make request using xhr request fetch assumed httpclient used fetch hood successfully making work fetch api thought bug anyone interested able make fetch request work expected trying similar approach xhr requests nt work expected set cookies response headers", "d": "7/2017"}, {"body": "actually use function parameters instead constant typescript export function myanimation params return use params usage import myanimation component animations myanimation set params class mycomponent", "d": "7/2017"}, {"body": "could solve use cases still limited loose flexibility reusability template binding instance able use component properties", "d": "7/2017"}, {"body": "definitely bug httpclient angular already sets browser would automatically parse body provide parsed javascript value httpclient going parse already parsed result string value", "d": "7/2017"}, {"body": "agreed bug nice catch workaround add interceptor turns request", "d": "7/2017"}, {"body": "thanks alxhub try workaround", "d": "7/2017"}, {"body": "reading specifically tests situation body unparsed json responsetext set json according incorrect since says set json means parsed unless case untrue test needs changed", "d": "7/2017"}, {"body": "imported lazymodule appmodule imports section causes lazymodule loaded app instantiation delete fix problem", "d": "7/2017"}, {"body": "thanks quick easy didnt throw error", "d": "7/2017"}, {"body": "explicitly supported value per typings accepted", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "thanks eric posted stackoverflow", "d": "7/2017"}, {"body": "hi nt related angular particular really typescript javascript bundling topic using angular cli cli comes w firstclass source maps support dev mode", "d": "7/2017"}, {"body": "using angular cli cli comes w firstclass source maps support dev mode sure maybe give link manual look traces sorcemaps dev mode even key", "d": "7/2017"}, {"body": "yes sure find sources protocol however css html sourcemaps seem broken currently", "d": "7/2017"}, {"body": "indeed cli issue trouble cli sourcemaps please open issue repo", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation strongly suggest take look cli removes effort required setup build bundling process angular", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation looks like problem use observables would suggest research come back", "d": "7/2017"}, {"body": "stackoverflow issue", "d": "7/2017"}, {"body": "solution", "d": "7/2017"}, {"body": "reading looking fixes help narrow confirm versions angular clienhancedresolve solution commented otherwise could another issue", "d": "7/2017"}, {"body": "russelltrafford packagejson name version license mit scripts ng ng start ng serve build ng build test ng test lint ng lint ng dependencies angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter corejs rxjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript want complete example please refer repo", "d": "7/2017"}, {"body": "enhanceresolve fixed issue cli", "d": "7/2017"}, {"body": "use fixes also problem", "d": "7/2017"}, {"body": "problem tried set non asycr validators null set validatorsmaxlength problem persist", "d": "7/2017"}, {"body": "problem think error clearly says returning promise observable async validador weird add validatorrequired validator error dissapears imho still reproduction sync validator null async validator null returning promise resolving nothing really reproduce problem comment return see error", "d": "7/2017"}, {"body": "thank quick response ericmartinezr wrote code reproduce problem plunkr see done formcontrols one sync validator required async validator giving error another formcontrol sync validator async validator gives next error commented error error expected validator return promise observable written two possibilities async validator aswell", "d": "7/2017"}, {"body": "igogu promise wrapped inside function remove function work wo nt throw error try instead checkcodifactory control abstractcontrol return new promise resolve gt", "d": "7/2017"}, {"body": "create custom directive saw even custom directive rendered correctly platformserver believe problem platformserver directive life cycle issue custom structural directives native structural directives like ngif", "d": "7/2017"}, {"body": "try attrhidden", "d": "7/2017"}, {"body": "thank checked attrhidden issues attribute directives hidden false hidden true hidden always user never notified error result ssr solution hidden true working chrome browser trying hide message change hidden ngif work expected issue zone angular wait result attribute directive", "d": "7/2017"}, {"body": "mhevery update issue", "d": "7/2017"}, {"body": "mahmoodsajjadi use attribute appended dom example", "d": "7/2017"}, {"body": "like store angular plugins", "d": "7/2017"}, {"body": "list libraries mentioned elsewhere also append search query exclude angularjs results", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "injector support parametrized types use", "d": "7/2017"}, {"body": "uhm think missunderstanding call method argument given via constructor thisservicebopen testcomponent class serviceb public open content type void", "d": "7/2017"}, {"body": "duplicate", "d": "7/2017"}, {"body": "scenario usual bug mistake create plunker demonstrate reproduce problem would clear problem without possible say anything", "d": "7/2017"}, {"body": "iamsarav please provide plunker minimal reproduction", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "thx reporting feel like submitting pr file would need change wink", "d": "7/2017"}, {"body": "thx suggestion key information would like see mouseover", "d": "7/2017"}, {"body": "gkalpak newbie familiar common struggles rationale behind struggles newbies face learning angular however think meaning comes use hence function fond formalism function delivered construction located space changed time allows describing system life cycle doubt time change due collaboration amp development aspect matters function amp construction construction amp location might rather descriptive list typical tasks problems microcases element solution may also useful", "d": "7/2017"}, {"body": "example using text docs function explains element meaning element used developers copypaste description section construction location shows apply copypaste syntax section", "d": "7/2017"}, {"body": "nt think good idea information tooltip would bad ux moreover would require much larger amount information stored navigationjson must loaded early app size sensitive pretty easy click link api element looks like might want see actual documentation page hit back", "d": "7/2017"}, {"body": "already solved problem nt use arrow function solution", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "please still help", "d": "7/2017"}, {"body": "api docs responsibility dgenipackage since use acquiring typescript files ts compiler us except generating links stuff github think os ensures symlinks provide us correct content ask shame github clever enough rewrites us match os guess safest thing prevent unexpected bcs would add extra property class something like similar use github links", "d": "7/2017"}, {"body": "misreadi sorry trouble need return error observable error httpresponselike", "d": "7/2017"}, {"body": "think return response return close", "d": "7/2017"}, {"body": "debslord thanks issue definitely seems problem appears empty string behave", "d": "7/2017"}, {"body": "correct type always far know", "d": "7/2017"}, {"body": "noticed angular supports latest version firefox closing issue guess angular good fit company since lot clients use outdated versions firefox ca nt force update", "d": "7/2017"}, {"body": "jsashu think bug", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "want share findings regarding issue see click option dropdown thats click listener getting dispatched event gets posted ui worker thread following call chain place element resolved element worker side ui inspected found actually contains list events listeners attached events found element event list actual listeners empty course followed bit chain get point tries get empty list listeners attached element invoke seems like click listener time ago reason got removed", "d": "7/2017"}, {"body": "testing piece template dispatch click events handler found reason happens listener attached element triggered webworker mode first level children structural directive attached like tested workaround found wrap child element element without directive become second level deep element listener attached", "d": "7/2017"}, {"body": "create custom directive saw even custom directive rendered correctly platformserver believe problem platformserver directive life cycle issue custom structural directives native structural directives like ngif", "d": "7/2017"}, {"body": "thank submitting issue issues require plunker demonstrates problem reproduce please reopen issue create new issue reproducible use case sorry aggressive closing issues overwhelmed number issues get time look ones easy us reproduce", "d": "7/2017"}, {"body": "issue reproduced plunker create github repo create new ticket hope help", "d": "7/2017"}, {"body": "specific reason nt update angular afair issues lifecycle calls combination router fixed since issue also needs plunker reproduces issue", "d": "7/2017"}, {"body": "thank reply tried settings lt name myproject version private true description myproject scripts test karma start karmaconfjs singlerun build rimraf dist amp amp webpack config configwebpackprodjs bail serve liteserver cbsconfigjson prestart npm run build start webpackdevserver inline progress port pretest npm run build test karma start karmawebpackconfjs pretest npm run build build watch tsc p src w build upgrade tsc serve upgrade build aot ngc p tsconfigaotjson amp amp rollup c rollupconfigjs serve aot liteserver c bsconfigaotjson build babel babel src src extensions sourcemaps copydistfiles node copydistfilesjs lint tslint srcts verbose ng ng ng keywords author license mit dependencies angularanimations angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angulartscwrapped angularupgrade angularinmemorywebapi corejs firebase rxjs systemjs zonejs devdependencies typesangular typesangularanimate typesangularcookies typesangularmocks typesangularresource typesangularroute typesangularsanitize typesjasmine typesnode babelcli canonicalpath concurrently jasmine jasminecore karma karmachromelauncher karmacli karmajasmine karmajasminehtmlreporter karmaphantomjslauncher liteserver lodash phantomjsprebuilt protractor rollup rollupplugincommonjs rolluppluginnoderesolve rolluppluginuglify sourcemapexplorer tslint typescript angularcli tsnode awesometypescriptloader cssloader extracttextwebpackplugin fileloader htmlloader htmlwebpackplugin karmasourcemaploader karmawebpack nullloader rimraf rawloader styleloader webpack webpackdevserver webpackmerge repository gt still working l working firebase sure produce plunker fb working though thanks", "d": "7/2017"}, {"body": "thank submitting issue issues require plunker demonstrates problem reproduce please reopen issue create new issue reproducible use case sorry aggressive closing issues overwhelmed number issues get time look ones easy us reproduce", "d": "7/2017"}, {"body": "error message", "d": "7/2017"}, {"body": "error information output console bellow", "d": "7/2017"}, {"body": "better run unbundled code using systemjs locate line runs error also use english", "d": "7/2017"}, {"body": "reproduce works fine builtin uncommented polyfills please make sure using latest angular cli version added polyfill since angular repo nonaot bug report please making minimal reproduction plunker want submit angular cli bug report please make angular cli repo", "d": "7/2017"}, {"body": "closing actionable without repro", "d": "7/2017"}, {"body": "probably related intl api solved lands", "d": "7/2017"}, {"body": "fixed works expected staging", "d": "7/2017"}, {"body": "thank submitting issue issues require plunker demonstrates problem reproduce please reopen issue create new issue reproducible use case sorry aggressive closing issues overwhelmed number issues get time look ones easy us reproduce", "d": "7/2017"}, {"body": "difficult debug images please provide plunker reproduction template plnkrcoedittpl", "d": "7/2017"}, {"body": "full project able provide plunker", "d": "7/2017"}, {"body": "close issue non actionable please open new issue create minimal reproduction issue thanks", "d": "7/2017"}, {"body": "almost issue", "d": "7/2017"}, {"body": "problem anything async within cause another render would run get around making sure nt cause another render need typescript ngafterviewchecked const currentzone zonecurrent const rootzone rootzoneparent currentzone thisalreadydidasyncwork nt trigger changedetection rootzonerun gt async work xhrget data gt make sure trigger changedetection need currentzonerun gt thisdata data thisalreadydidasyncwork true also really important know likely want use rather anything within likely hacky sideeffect avoided use need aware everything going likely lot ifstatements", "d": "7/2017"}, {"body": "trying get imgs something use ngafterviewinit elements array comes totally empty probebly use ngif preloader see content fully loaded change variable value true render ps get data input", "d": "7/2017"}, {"body": "anyone similar situation project updated list recalculation trigger reset value probably something would needed regardless null selection longer valid formatted match plunker implementation thisformcontrols otherfield valuechangessubscribe gt thisupdatelist", "d": "7/2017"}, {"body": "solved use instead please describe documentation difference modules mark deprecated", "d": "7/2017"}, {"body": "unfortunately usable users right really way get old versions", "d": "7/2017"}, {"body": "hi firstly directory file surprised nt work secondly get routes work navigation instead need set routing configuration service worker see example stephen routing configuration", "d": "7/2017"}, {"body": "solved problem appears notifications sent outside angular zone angular therefore able respond immediately", "d": "7/2017"}, {"body": "thank submitting issue issues require plunker demonstrates problem reproduce please reopen issue create new issue reproducible use case sorry aggressive closing issues overwhelmed number issues get time look ones easy us reproduce", "d": "7/2017"}, {"body": "honest longer issue hopefully someone goes issue pipe found solved stopping npm start script execution starting logic think pipe file somehow compiledconsidered watch task actually odd", "d": "7/2017"}, {"body": "use stack overflow support issue tracker isnt right place", "d": "7/2017"}, {"body": "baihech encapsulation works ngmodules want use module need import exports directive otherwise directive defined unlike providers pipes directives components published global scope application code many times imported modules duplicated", "d": "7/2017"}, {"body": "bug support questions better ask stackoverflow already given answer question alternative create globally available custom pipes article scotchio", "d": "7/2017"}, {"body": "ngmodule export wrong case unnecessary works github issues support help requests future please use channels gitter stackoverflow etc support requests thanks", "d": "7/2017"}, {"body": "seems compilerrelated last never exists view definition made minimal reproduction plunker problem relevant attribute selector may parser bug wrong result observed parser build method could general using element inside html bar would also problem", "d": "7/2017"}, {"body": "see also repo angular angularcli", "d": "7/2017"}, {"body": "borntraegermarc issue updated npm node resolved", "d": "7/2017"}, {"body": "thanks lot", "d": "7/2017"}, {"body": "petebacondarwin idea dgeni nt complain", "d": "7/2017"}, {"body": "hm turns link valid fact link works places converted actual anchor tag case", "d": "7/2017"}, {"body": "tomschreck plunker link seems broken", "d": "7/2017"}, {"body": "boblee updated post url thank", "d": "7/2017"}, {"body": "received answer stackoverflow thanks help link post", "d": "7/2017"}, {"body": "solved", "d": "7/2017"}, {"body": "intended work angularspecific markup processed build time add runtime effect added dom asis otherwise entirely ignored angular use imperative code query element added add event listener like would plain use create compile components runtime questions answers stackoverflow topic github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "weird tags placeholders replace original tags messages translators change content tags replaced original content app translated", "d": "7/2017"}, {"body": "vicb thats problem placeholders doesnt get replaced said afther compiling app ussing messages files font awesome icon inside italics missing", "d": "7/2017"}, {"body": "method compiles components modules collects use must sure loading component first place would use something else example injector static property export class lazymodule entrycomponents", "d": "7/2017"}, {"body": "alexzuza works thanks lot overlook possibility selecting incorrect componentfactory confirm bug issue due incorrect implementation issue closed", "d": "7/2017"}, {"body": "modified component seems working plunker make animations page load pushpop work use two transitions elegant would best home component works without extra care", "d": "7/2017"}, {"body": "cause suspected impossible way obtain response preflight request xhr fetch please provide minimal reproduction problem", "d": "7/2017"}, {"body": "trotyl unfortunately javascript skills sufficient provide reproduction issue also hard time constraints current project ca nt invest much time", "d": "7/2017"}, {"body": "first request cors preflight options request response body second request real request one knows cors preflight requests invisible web based example suspect happening assuming response json trying parse failing hence sure nt throw error fact use supports case need something like instead need since implies resulting body type let know works please reopen issue nt", "d": "7/2017"}, {"body": "setting indeed solved problem guess httpclient return error returned iana media type nt match expected one", "d": "7/2017"}, {"body": "unfortunately ca nt rely server returning correct type plenty valid json apis return", "d": "7/2017"}, {"body": "seems status updated change detection angular nt like change detection causes updates model workaround", "d": "7/2017"}, {"body": "works plunkr unlike issue framework likely something else project interfering somehow unless create minimal reproduction unactionable", "d": "7/2017"}, {"body": "thank understood wrote test plnkr works version created issue people case founded problem import jquery like component resolved finaly import sintax jquery nt works last stable release recommend import jquery angularclijson component declare jquery like think good information community", "d": "7/2017"}, {"body": "updated library works", "d": "7/2017"}, {"body": "hash mode supposed manipulate fragment instead let decide deal way would works fine found plunker angular mechanism mimic url fragment escaping reserved chars would leads unexpected behavior fail follow way", "d": "7/2017"}, {"body": "thanks aware originally wrote plunker changed specifically avoid escaping nt behaves handling userentered url", "d": "7/2017"}, {"body": "found solution case interceptor source may usebul somebody sitiation import injectable injector angularcore import httpevent httpinterceptor httphandler httprequest angularcommon import observable rxjsrx import tokenprovider tokenprovider import accesstoken commonmodels import environment environmentsenvironment injectable export class authenticationinterceptor implements httpinterceptor constructor private injector injector", "d": "7/2017"}, {"body": "looks good mode selection deploy time implementation app changes runtime think ended", "d": "7/2017"}, {"body": "made start igorminar", "d": "7/2017"}, {"body": "related", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "repository angular framework angular cli please open issues appropriate place answer question flag scaffold minimal angular app find documentation", "d": "7/2017"}, {"body": "viewchild take look example", "d": "7/2017"}, {"body": "alexzuza thats excellent solution provide would great could become feature angular core nt think", "d": "7/2017"}, {"body": "alexzuza solution would work aot code evaluated", "d": "7/2017"}, {"body": "vicb thanks pointing added caveats article macjohnny would glad see feature", "d": "7/2017"}, {"body": "macjohnny using custom directive like showed seems easy enough think extending viewchildren way adds lot f complexity little gain somecomponenttokens querylist", "d": "7/2017"}, {"body": "thank submitting issue issues require plunker demonstrates problem reproduce please reopen issue create new issue reproducible use case sorry aggressive closing issues overwhelmed number issues get time look ones easy us reproduce", "d": "7/2017"}, {"body": "ok thanks tried recreate plunkr nt able reproduce maybe resolved newer version angular maybe way routing happens plunkr different making difficult reproduce anyway really enjoying angular experience keep good work", "d": "7/2017"}, {"body": "nt apart angular see", "d": "7/2017"}, {"body": "imports plunker package problem remove import use native works expected work request expected", "d": "7/2017"}, {"body": "oh mistake case think relevant second though probably much new httpclient dose nt export", "d": "7/2017"}, {"body": "ok official recommendation fall back native implementation", "d": "7/2017"}, {"body": "dup ps repo angular angularcli", "d": "7/2017"}, {"body": "nothing happen issue", "d": "7/2017"}, {"body": "relevant code export class app implements oninit constructor private httpclient ngoninit const body new httpparams set email myname emailcom body subscribe gt", "d": "7/2017"}, {"body": "relates", "d": "7/2017"}, {"body": "seems like params encoded function reason replace makes way encode", "d": "7/2017"}, {"body": "sort tomorrow", "d": "7/2017"}, {"body": "try try localhost url working check whether requesting url crosssite case requesting another domain name make sure crossorigin tag set correctly protocol url http case navigate browser cert must green try set ignore cert validation", "d": "7/2017"}, {"body": "give us information specify template url component meta data", "d": "7/2017"}, {"body": "add information working example also add code", "d": "7/2017"}, {"body": "done cloned quickstart setup described installed dependencies deployed successfully simplest method changed default component metadata unable load appcomponenthtml created srcapp directory throws console extracted inline template templateurl appcomponenthtml simplest way replicate problem", "d": "7/2017"}, {"body": "try ng build deploy dist folder", "d": "7/2017"}, {"body": "yeah already tried fresh quick start setup return following error ng build", "d": "7/2017"}, {"body": "another problem quickstart example local developing purposes restrictions modifications maybe reason possible build would recommend creating new application cli use tutorial", "d": "7/2017"}, {"body": "yes creating app command works fine thanks", "d": "7/2017"}, {"body": "component redirecting", "d": "7/2017"}, {"body": "yes implementation also export class implements oninit", "d": "7/2017"}, {"body": "hi issue looks like working fine chromium firefox broken versions seem upward router package since works fine well thanks help", "d": "7/2017"}, {"body": "hi solved issue navigating reference thanks", "d": "7/2017"}, {"body": "issue angular running cordova app ios tried routerversion like lecogiteur said worked current version nt work method chinnamagapu provided putting call works hopefully fix soon", "d": "7/2017"}, {"body": "issue solved adding never configuration parameter route runguardsandresolvers configuration option seen desired submit pull request", "d": "7/2017"}, {"body": "sounds like duplicate", "d": "7/2017"}, {"body": "toub thanks issue suggestions would like see maybe sample api would better currently", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "hello pkozlowskiopensource mentioned original post tried ways posting query stackoverflow one really knows much hence becomes responsibility team take point link addressed nothing like please take ownership", "d": "7/2017"}, {"body": "works fine appears moves button causing click occur", "d": "7/2017"}, {"body": "interesting could explain shifting elements would cancel click event", "d": "7/2017"}, {"body": "nevermind got issue click composed mousedown mouseup since view shifting mouseup event never registered button thus click fired thank", "d": "7/2017"}, {"body": "far understand query mechanism break components boundaries design since queries resolved compilation time extending full application would highly complex impossible tbosch confirm analysis please use case could nt ut solved recursive querying someting like", "d": "7/2017"}, {"body": "duplicated following", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "define templateurl parentcomponenthtml expected behavior observed", "d": "7/2017"}, {"body": "alxhub contribute blog please guide", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "update current versions point appropriate pinned versions npm foxandxss document files need change next minormajor release change travis builds run local build rather released npm versions", "d": "7/2017"}, {"body": "also intend make tests fast enough splitting two shards make nonoptional travis", "d": "7/2017"}, {"body": "seems like bug please file full reproduction", "d": "7/2017"}, {"body": "sanderelias would expect angular run change detection radio button click listening events would probably good candidate one would fixed would run cd dom event obviously would bring performance crawl", "d": "7/2017"}, {"body": "pkozlowskiopensource agree thing work according docs indeed reason nt work debugging think right reflected documentation edit btw dom event click", "d": "7/2017"}, {"body": "reason probably sth along nt wa nt use forms regarding documentation sure documented let documentation team decide", "d": "7/2017"}, {"body": "sanderelias could please update issue title description indicate documentation issue also got suggestion documented would helpful", "d": "7/2017"}, {"body": "pkozlowskiopensource updated title already knew work around issue thanks sample anyway btw adding dummy click handler fixes also makes sure works plain ugly kind support issue changedetection", "d": "7/2017"}, {"body": "work like typescript injectable export class authinterceptor implements httpinterceptor constructor inject forwardref gt authservice private auth authservice intercept req httprequest next httphandler const authheader thisauthgetauthorizationheader const authreq reqclone headers reqheadersset authorization authheader return nexthandle authreq", "d": "7/2017"}, {"body": "tytskyi tried nt work works though", "d": "7/2017"}, {"body": "confirm tytskyi solution nt work", "d": "7/2017"}, {"body": "info separated two services one loginsignin uses httpclient one managing authtoken http going added error handler catch errors token invalid case need call logout need service httpclient thus fall initial problem problematic", "d": "7/2017"}, {"body": "true cyclic dependency toxicable example correct way handle however concerned making http requests added header every request written without checking details request means request go interceptor goes auth service makes request goes interceptor recurses infinitely", "d": "7/2017"}, {"body": "contains methods need http requests like use needs get token", "d": "7/2017"}, {"body": "code similar cyrilletuzi tried toxicable solution cyclic dependency get", "d": "7/2017"}, {"body": "use httpclient create interceptor add jwt token everyting work perfect bad practise use http inside httpclient interceptor change get cycle error instantiate cyclic dependency injectiontokenhttpinterceptors error ideas make work import injectable angularcore import httpevent httphandler httpinterceptor angularcommon import httprequest angularcommon import observable rxjsobservable import http angular import siteservice servicessiteservice import router angularrouter injectable export class authinterceptor implements httpinterceptor constructor private http private router router private siteservice siteservice refreshtoken return apitoken token localstoragegetitem jwtoken map response gt let data responsejson return token datatoken permissions datapermissions user datauser intercept req httprequest next httphandler observable const clonedrequest reqclone headers reqheadersset authorization bearer localstoragegetitem jwtoken another important thing use interceptor project irrelevant current problem set headers refresh token response least seconds header cachecontrol public header expires date h time gmt", "d": "7/2017"}, {"body": "interesting thought service like authservice manages token accessibility performs login refresh requests common use case basically scenario authservice depends httpclient obviously methods getaccesstoken getrefreshtoken login refreshsession logout also addition need authinterceptor add token request token exists obviously depends authservice cause service access token problem httpclient depends httpinterceptors basically authinterceptor authinterceptor depends authservice authservice depends httpclient cyclic error common use case possible current implementation angular team could nt implement interceptors similar way first angular interceptors work eg extra store service using one register new interceptors eg wrote similar library called implements similar approach first angular uses additional service stores registered interceptors case inject kind services use properly current library uses old http module question wrong yes", "d": "7/2017"}, {"body": "code quite similar examples posted encountering issue fact seems extremely close cyrilletuzi trying trying get value token property set authservice trying make use way access interceptor adding service constructor interceptor gives cyclic dependency error basically mixalistzikas got message trying solution toxicable provided seems give issue perusopersonale got ie problem much recursion app crashing eventually decided access token directly session storage stored rather retrieve service fact issue seems occurring nt seem real cyclic dependency seems workaround described works definitely many situations would need access service somewhere nt seem possible manner", "d": "7/2017"}, {"body": "example also works worred http future may deprecated also good app inject different libraries thing anyone find solution please answer", "d": "7/2017"}, {"body": "temporary solution auth token stored static prop authservice class wo nt need instantiate", "d": "7/2017"}, {"body": "may also try little hack instatiate service like way wo nt get max call stack exceeded error", "d": "7/2017"}, {"body": "resolved simply setting authservice constructor getting intercept function intercept req httprequest next httphandler observable gt get auth header service const auth thisinjget authenticationservice const authtoken authgetauthorizationtoken", "d": "7/2017"}, {"body": "perfect perusopersonale solve problem", "d": "7/2017"}, {"body": "final interceptor logging functionality keep loading status loader animation import injectable injector angularcore import httpevent httphandler httpinterceptor httpresponse angularcommon import httprequest angularcommon import observable rxjsobservable import siteservice servicessiteservice import router angularrouter import loadingservice componentsloadingloadingservice import authenticationservice servicesauthenticationservice injectable export class authinterceptor implements httpinterceptor nt forget another important thing use interceptor project set headers refresh token response least seconds gt header cachecontrol public gt header expires date h time gmt also loadingservice import injectable angularcore injectable export class loadingservice", "d": "7/2017"}, {"body": "remind someone know refreshtoken retrieved main token expired call token endpoint post refresh token obtain new accesstoken eg hour main token os expired problem following case method getaccesstoken return observable result exposes http end obtaines new token using refresh token necessary would handle following handle cyclic dependency issue inject observable interceptor", "d": "7/2017"}, {"body": "perusopersonale stack overflow error means circular dependency resolved build time still much present runtime making new request within interceptor also goes interceptor repeats forever suggest using make dependent request instead trying get ahold", "d": "7/2017"}, {"body": "workaround set select readonly option disabled", "d": "7/2017"}, {"body": "jjlgjkkl wait months new aot compiler arrive much longer waiting module compile complete current compiler completes", "d": "7/2017"}, {"body": "might want consider splitting separate apps using reverse proxy tie back together production ca nt imagine aot compilation lazy loaded modules ever fast", "d": "7/2017"}, {"body": "joke", "d": "7/2017"}, {"body": "angular framework repo cli tracks issues repo file", "d": "7/2017"}, {"body": "alxhub sorry thought compilercli ngc right tscwrapped part repo angularcli used modules wrong", "d": "7/2017"}, {"body": "ahh see mean want override output directory cli directory", "d": "7/2017"}, {"body": "indeed angularcli outputpath switch build command ngc nt gendir supplied tsconfigjson also specify outdir like tscwrapped forwards compiler options tsc", "d": "7/2017"}, {"body": "thx reporting would interested submitting pr grin file needs change", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "gkalpak", "d": "7/2017"}, {"body": "sry saw pr thanks", "d": "7/2017"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2017"}, {"body": "consider api returns access status headers getting body requires separate asynchronous step example returns returns field type need wait see body response", "d": "7/2017"}, {"body": "alxhub hey thanks answering true fetch api evaluates body asynchronously older http client evaluated body synchronously nt see new http client different help understand", "d": "7/2017"}, {"body": "think reported either uglifyjs angular responsible type dead code elimination", "d": "7/2017"}, {"body": "correct", "d": "7/2017"}, {"body": "thanks nt sure go went angular sorry trouble", "d": "7/2017"}, {"body": "hi tytskyi releases occasionally slip days ci bad state bugs want get fixed time etc also note column name date titled exact date plan release go week per schedule sure mean nt happen general schedule goal try meet guarantee rare releases slip day two", "d": "7/2017"}, {"body": "alxhub thank totally makes sense sure mean nt happen bad checking changelogmd npm", "d": "7/2017"}, {"body": "tytskyi merging betarc changes main release happens first one done", "d": "7/2017"}, {"body": "repro circular dependency appears probably subtleties cause break one vs circular deps use case support", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "ericmartinezr looks like fix merged days ago shuld tested angular bug still", "d": "7/2017"}, {"body": "vadjs revert directives removed branch", "d": "7/2017"}, {"body": "checked inheritance angular decorators welldefined similars differents issues workaround easy need rewrite inputs outputs", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "btw use", "d": "7/2017"}, {"body": "duplicate tldr use end searches looking content angular", "d": "7/2017"}, {"body": "yeah error run app uses httpclient node using tutorial", "d": "7/2017"}, {"body": "hi aliceprincess github issues support requests future please use gitterimangularangular stackoverflow etc help howto questions might find useful thanks", "d": "7/2017"}, {"body": "discussed offline metadata bundler nt handle file directory blow ends generating synthetic files imports modules wrong location", "d": "7/2017"}, {"body": "clear currently supported reported error instead producing invalid module", "d": "7/2017"}, {"body": "sounds like domain related problem something angular solving since angular idea warning one domain another", "d": "7/2017"}, {"body": "hi toxicable thx fast response think angular provide way validate input invalidate valid state angular know warning angular provide result validation could treat warning ever without setting control invalid think", "d": "7/2017"}, {"body": "example want set required validation hint missing value user nt set invalid", "d": "7/2017"}, {"body": "current validators return object could easily add property indicating warning example lets say validator note write validator example normal kind validator takes input returns normal object purpose could change like way later mapping function check see error warning logic based", "d": "7/2017"}, {"body": "hi nice investigated time detailed answer know different way achieve approach always valid validator contains warning information custom validator always valid feeds another service manages warning information validator result faking control use worker good feeling many reasons fact ca nt reuse existing validators worst consider required validator approach create second validator containing logic get warning fore made know beautiful least solves redundent logic problem provides cool features input like state errors case warnings also let use alternative validation states completely encapsulated rest validation idea directive reacts model view chagnes input maps new input fake fromcontrol control without view parent formgroup later expose errors states fake control template ofer exportsas use typescript alternativevalidationdirectivets directive exportas alternativevalidation export class alternativevalidationdirective also create real code quick cant see approach angularalternativevalidation cd example folder ng serve would really cool could take look code also try service example folder convenient way solve problem would thankful feedback best michael", "d": "7/2017"}, {"body": "thank boblee posting providing plnkr page solution next two days", "d": "7/2017"}, {"body": "boblee fix issue demo working", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "looking thank reporting", "d": "7/2017"}, {"body": "setup dns info already need wait change propagate firebase provision cert eta", "d": "7/2017"}, {"body": "making angulario able view docs minor patch version like angularjsorg", "d": "7/2017"}, {"body": "version displayed left navbar nextangulario also indicate actual next version documented currently shows next link replaced stable point back angulario imho", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "request unfortunately vague us act specific items examples documentation would like see improved please feel free reopen issue list thanks", "d": "7/2017"}, {"body": "probably related angular tried change property attribute tag tried use attribute bindings", "d": "7/2017"}, {"body": "entirely trivial implement async pipe eats events since cares present value ability map indexcount avoid list iteration etc working plunkr separate directive without using differs", "d": "7/2017"}, {"body": "sum make sure understand proposing basically onpush version ngforof requires different iterablediffer implementation", "d": "7/2017"}, {"body": "guess also combine allow extends differs application level proposal", "d": "7/2017"}, {"body": "toxicable philisophically related default changedetectionstrategy ngfor onpush strategy proposal ngzone change detection default strategy discover mysteries imperative work application switch reduxbased approaches ie ngrx could probably simplify even remove ngzone build truly eventdriven app opening performance orders magnitude learned talking angular folks ngconf looking prs guys seems like preaching choir defaultiterablediffers much like ngzone discovers possible imperative changes something proposal want directly tell ngfor changes apply specific usecase first wanted capability use directives tie ngrx selectors dom dynamically hierarchy dynamic lazyloading layouts dynamic layout state comes want keep imperative work simply dispatching action insertchildtileindashboardaction something action reducer lose change information manipulate array tiles maintain state ngfor scan array changes undoing loss information ngfor could accept deltas instead full arrays state simply maintained view behaviorsubjects inside ngrx never really need know full array trotyl ya saw tickets think already possible except bug cant module provider example nt much issue extend interfaces fine simply store list factories module constructor workaround nothing else angular prevents implementing either approach new directive custom differs however arguing angular consider native part library stomach first question approach better separate differs uses existing ngfor pro easy add breaking changes con diff function signature would bit inaccurate really iterable really iterablediffers con user needs aware special class push changes flies face immutable components unless holding special change arrays state nt feel much like state separate directive common base class improved ngfor pro allow users keep things immutable thing need wire observables pro ngfor could get good cleanup separating notions differs identity trackby view manipulation con could substantial changes ngfor separate directive either way alot common code accepting iterables accepting deltas however probably nt affect public ngfor api con observable must directly supplied input new pipe must created async pipe overwrite latest value event two events come sequence see last never see change pros either declarative initial imperative action ui performance indexed change rate array size technically disable count index optionally changes could managed one time words data source nt think match current previous indices aggregate set changes long user supply changes order new pipe longer sufficient case otherwise pushing one change per frame cons either never got rid aggregating set changes hold set changes coming change detection calls even onpush user must aware supplying changes different supplying values personally leaning toward separate directive improved ngfor approach took plunkr little different original differs suggestion one final thing third option much drastic asked someone ngconf said discussed pipes deal modifying values explicit call transform transforming input output bindings words problem could solved allowing input transforms well desire implement anything let know pr desired nt belong angular much long term put sharpangles desired sorry spams think pertinent folks run across robwormald brandonroberts mikeryandev", "d": "7/2017"}, {"body": "hi chunghha private internal type actual signature constructor uses inlined type type name associated long object pass signature assignable inline type work", "d": "7/2017"}, {"body": "alxhub thanks answer understood inlined type httprequestinit wrote know write http client code work without type exported still see request enhancement httprequestinit something else exported help users type check options passed little easier construct options object nt see exporting httprequestinit type httpheaders httpparams types httprequestinit already exported sake consistency httpclient api imho", "d": "7/2017"}, {"body": "unfortunately nt work well every possible signature pass one request methods slightly different true constructor couple different forms typescript type check options pass classes meant use users thus exported", "d": "7/2017"}, {"body": "invoke control loses focus indicate user visited control description misleading original invoked synchronously creation custom control receives function end developer execute decides control logically touched visited", "d": "7/2017"}, {"body": "well meant example paraphrase could documented also sentence refers parameter rather", "d": "7/2017"}, {"body": "agree could better wording got lot frustration getting started", "d": "7/2017"}, {"body": "aleris ca nt reproduce issue see screenshot version cli using update cli test plz", "d": "7/2017"}, {"body": "using jhipster", "d": "7/2017"}, {"body": "made tests sample global cli local global local cli local cli global local cli could possible different angular version linked something", "d": "7/2017"}, {"body": "latest", "d": "7/2017"}, {"body": "hello error works angularcli", "d": "7/2017"}, {"body": "also getting enum export using angular cli downgrade fixes", "d": "7/2017"}, {"body": "error rises commit chuckjaz concretely new condition", "d": "7/2017"}, {"body": "error enums like", "d": "7/2017"}, {"body": "error new project exec ng build prod error comes way install npm package cnpm", "d": "7/2017"}, {"body": "chuckjaz give us advice please", "d": "7/2017"}, {"body": "error upgrading angular cli error illegal state symbol without members expected got filepath srcappcoremoddeschiderets name moddeschidere members create nt know test", "d": "7/2017"}, {"body": "everyone needs temporary fix error manually modify file nodemodules angularcompilerbundlescompilerumdjs find part code modify look like everything work", "d": "7/2017"}, {"body": "janousek unfortunately possible dangerous ci environment want build clean build would rather suggest temporary downgrade older angular temporary solution", "d": "7/2017"}, {"body": "still get error even downgrading angular packages janousek confirmed code pointed rolled back anyone updates ideas", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "hey roshanroyal github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem inject call one methods click handler custom navigation without using", "d": "7/2017"}, {"body": "zoechi correct instead imperatively navigate click events", "d": "7/2017"}, {"body": "requirement get overridden use context", "d": "7/2017"}, {"body": "roshanroyal easy enough work around example also extend tried clone customize routerlink directive think necessary framework provides behavior box nt seem broad demand feature", "d": "7/2017"}, {"body": "zoechi tried extending configure app instead default directive pick custom routerlink directive", "d": "7/2017"}, {"body": "easiest way use different selector like think better move discussion somewhere else github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2017"}, {"body": "also want feature routerlink like resolvers get data landing page", "d": "7/2017"}, {"body": "shoulnnt problem nt place discuss", "d": "7/2017"}, {"body": "general question place pipeline source level ast transformations like", "d": "7/2017"}, {"body": "possibly related", "d": "7/2017"}, {"body": "input optional would proposal handle case", "d": "7/2017"}, {"body": "toxicable mean would author indicate input optional could use existing optional property notation", "d": "7/2017"}, {"body": "textbook mean technically would angular handle example using typescript notation optional approach would require creating ast components nt believe right would drag aot compilation times metric currently worked also something optional whole bunch strictnullcheck conerns", "d": "7/2017"}, {"body": "toxicable thanks feedback verification existence required attributes could optional feature aot set flag performance concerns without option compiler check errors one write boiler plate code every component somehow informs author code case missed required input parameter writing boilerplate codes even bigger waste time performance degrade aot makes code unnecessary padded believe write something catch coding mistakes means coding tools could possibly improved", "d": "7/2017"}, {"body": "houmankml really need property ensure selector like way would become error id provided template still could issue user provide deliberately inside component still value theoretically covered typechecking great proposal handle problem like unfortunately suitable angular since none initialized within understanding typechecking angular compiler error compiled code raised error mapping source angular maybe template", "d": "7/2017"}, {"body": "trotyl thanks nt aware syntax pattern try mostly concerned programmer caused errors coding rather users providing parameter case property component expected provided user one use handle parameter input", "d": "7/2017"}, {"body": "trotyl example recommended way required example properly typed able enforce strict null checks sure currently able going consider resolved", "d": "7/2017"}, {"body": "would also useful generic error interceptors see plenty usecases something possible angularjs using options object", "d": "7/2017"}, {"body": "mind well think good idea something implement", "d": "7/2017"}, {"body": "alxhub awesome think proposed api think anything better love take go pr", "d": "7/2017"}, {"body": "like possibly key keeping theme also immutable la open task merge implementation two extracting generic immutable map type done could easily built top type", "d": "7/2017"}, {"body": "ah ok leave implement", "d": "7/2017"}, {"body": "correct behavior according standard better raise concern", "d": "7/2017"}, {"body": "duplicate", "d": "7/2017"}, {"body": "closing duplicate belonging repo", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "ok", "d": "7/2017"}, {"body": "actually think needs removed public api inlined fewer types need expose better opinion", "d": "7/2017"}, {"body": "post screenshot page looks like details ipad device", "d": "7/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2017"}, {"body": "hey mhevery foxandxss wanted fix issue however questions api search query currently works two characters also shows results section title matches search query example mysectiontitle test ttest pottest none items contain whole section displayed would fine would display whole section section contains items match search query addition right results shown section item contains query beginning middle end word make search results visible matches beginning section item example typing foo display need lifecyclehooks section already contains link plnkr see still want include link mentioned issue could please mention place doc please correct wrong something best regards sergey", "d": "7/2017"}, {"body": "big fan matching beginning word least option alternativesideas prefer make configurable eg add checkbox matching anywhere word vs beginning allow using regexp smiley alternativesideas also nt like consider briefly grin allow using wildcard feature needs brought user attention makes verbose match anywhere word matching beginning subterm eg matching search query would try match beginning also beginning complex much magic hood", "d": "7/2017"}, {"body": "nt think match beginning word general people put larger query terms capture real results often want things start imagine searching would probably want get", "d": "7/2017"}, {"body": "also keen steer away magic queries least showing many results case consistent", "d": "7/2017"}, {"body": "going split api elements capital letter parts match query parts start query", "d": "7/2017"}, {"body": "petebacondarwin thank update", "d": "7/2017"}, {"body": "sergeome want go", "d": "7/2017"}, {"body": "petebacondarwin far understand assigned issue already start working right addition sure split idea completely makes sense would good algorithm", "d": "7/2017"}, {"body": "fixed via", "d": "7/2017"}, {"body": "given previous experience overcoming adblockers resulting html class name id title url etc area necessary element contain anything could treated description advertisement like banner ad ads etc", "d": "7/2017"}, {"body": "think content needs reworked something ad related perhaps could upcoming hero events component", "d": "7/2017"}, {"body": "stephenfluin moved docs project relabelled related aio docviewer instead content related", "d": "7/2017"}, {"body": "confirm js image ad name likely blocked adblocks issue", "d": "7/2017"}, {"body": "looking alternative example refer medium post", "d": "7/2017"}, {"body": "would like create pr fix", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation ps question nothing angular", "d": "7/2017"}, {"body": "native promise method fri jul eric martinez notifications githubcom wrote hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag angular wondering nt resolve support issues via issue tracker please check explanation ps question nothing angular receiving subscribed thread reply email directly view github mute thread gt best regards oleksandr tytskyi private email", "d": "7/2017"}, {"body": "record simply adding following fixes problem", "d": "7/2017"}, {"body": "think ran bug today sorry simple repro describe app gt emits values ngrx store use template along pipe initialize child component items observable emits twice parent component initialized nt know exactly emits twice timing second emission seems problem order events parent child components parent oninit parent emits value piped pipe output bound child child oninit parent emits value piped pipe output bound child child afterviewinit parent afterviewinit parent expressionchangedafterithasbeencheckederror think step breaking step timing oninit afterviewinit tried step nt understand much tell seeing error unwrap values", "d": "7/2017"}, {"body": "update bad observable app emits twice child component triggers state change simply coincidence first second value identical besides mistake still believe unwrap instances wrappedvalue", "d": "7/2017"}, {"body": "stevenliekens yes could many valid invalid reason observable emit twice angular handle without problems say let hope fixed soon", "d": "7/2017"}, {"body": "reason definitely invalid child component dispatches ngrx action phase results change bound value observable emits piece ngrx state parent component reach afterviewinit phase", "d": "7/2017"}, {"body": "tbosch trying see write fix understood worked whole wrapped value thing see obvious fix issue browsing code wondered sometimes stored use always stored unwrapped values would nt things work expected code would simpler suppose particular confused function nt get used would reset old value unwrapping value first thought nt related problem noticed comment line reset errors disappear even thought may mean broke changes mechanism p also line code seems already done function callstack wrong track important thing ensure proposed issue description value compared checks", "d": "7/2017"}, {"body": "something else strange problem exhibits oldvalue wrapped new value wrapped wonder situation arises since though understood value always either wrapped wrapped least using async pipe", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation bug selector wrong", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "works fine", "d": "7/2017"}, {"body": "apparently problem fixed working thanks", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "angular cli issue already fixed version please upgrade cli version fix existing project may need change file manually", "d": "7/2017"}, {"body": "would hold one looking totally change validators api understanding new api metadata idea wont work anymore wont work perhaps come alternatives nt rely metadata decorators go", "d": "7/2017"}, {"body": "looking correct proposal would work however nt activity issue half year aware information current understanding nt much alternative information validator needs embeded validator somehow information needs known initialization input field first validation feel free correct misunderstood something guess implement internally monkey patch validators", "d": "7/2017"}, {"body": "kyubisation think plans proposal go ahead cc kara", "d": "7/2017"}, {"body": "see thank bringing attention", "d": "7/2017"}, {"body": "kyubisation appears design phase", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "core since core part universal production ready pr flight update docs universal track", "d": "7/2017"}, {"body": "example used implement rendering server side lazyloaded modules use platformserverrendermodulefactory instead platformserverbootstrapmodule", "d": "7/2017"}, {"body": "thanks toxicable keep eye pr", "d": "7/2017"}, {"body": "sorry issue caused angular angular understand sass therefore requires tool compile sass css use appears using angular cli therefore issue repo one", "d": "7/2017"}, {"body": "toxicable okay thanks", "d": "7/2017"}, {"body": "bit concise specific proposal exactly proposal introduce would api surface look like", "d": "7/2017"}, {"body": "number possibilities essentially allow us programmatically inject components based url ie defined within routing definitions given application multiple dynamically named routers solution might simply expose routerinjectcomponent componenturl string target viewcontainerref similar way implemented dynamiccomponentcreatorservice project viewcontainerref div similar referenced viewchild hook possibly open routeroutlet expose dynamic name property similar plus programmatic activatefromurl currently exposes activatewith however require activatedroute could within html component code thisrouteroutletactivatewith pagehello request desired functionality able inject component defined within app dynamically defined location within dom eg dynamically added routeroutlet rather precise api definition run project work described apologies probably put description actual repo readme repo created purely provide example desired functionality important thing components created injected using method able navigated directly browser well within container hope helps", "d": "7/2017"}, {"body": "williamburgeson seeing anything example sent commits missing initial cli commit link", "d": "7/2017"}, {"body": "apologies mistake forgotten commit push away days", "d": "7/2017"}, {"body": "looks like something changed cli prints installing packages tooling via npm actually install packages work around install packages", "d": "7/2017"}, {"body": "default cli creates installs nodemodles version using", "d": "7/2017"}, {"body": "tried nt indeed install dependencies", "d": "7/2017"}, {"body": "share info environment os nodenpm version etc", "d": "7/2017"}, {"body": "turns issue filipesilva cli team identified problem working fix actually happens process exits prematurely dependencies still installed background try run immediately fail wait dependencies installed background everything works expected closing since angulario issue per se thx bringing attention", "d": "7/2017"}, {"body": "pr fix", "d": "7/2017"}, {"body": "event indicates request dispatched backend response events come later request actually fulfilled seems like case request actually responded perhaps error comes back instead need repro test actually flushes mock response really investigate problem something similar tests linked", "d": "7/2017"}, {"body": "particular case trying operate come back assumed might available perhaps missing piece though get plunk going", "d": "7/2017"}, {"body": "issue believe following information logging portion updated http section guide suggests chenkie pointed possible receive event could instance httpresponse example guide referring mild edits edited example using variable never declared trying unhelpful pointing nt sure create pr fix typo since code nt appear master yet update illustrate issue think chenkie import rxjsaddoperatordo export class timinginterceptor implements httpinterceptor constructor intercept req httprequest next httphandler observable const started datenow adding interceptor application previously issues making http requests confirming hooked properly adding right first line within intercept function confirm correct request testing noticed never logs message console pointed already event ever appears simple object response still returned updated service log response console confirm fact response seems picked interceptor attempting create plunkr demonstrate issue clearly issues getting plunker use", "d": "7/2017"}, {"body": "quick update think answer confusion perhaps provide fix chenkie well testing number things posting nt found following sample notes file realized testing intentionally whole time request would return error basically hitting backend logged never something guaranteed login system works currently switching previous custom http client wrapper using new interceptors nt easy way log still mid switch new system partially reading comment new interceptorts file combined example linked previous comment interpreted kind httpresponse including error response would available within function whichever rx operator choosing use httpresponse object updated testing look like following intercept request httprequest next httphandler observable const started datenow able catch error fine identified httperrorresponse object assume hook back functionality redirect backend login portal longer receiving error able catch httpresponse fine well apologies alxhub responding issue quickly assuming bug tested options related though portion guide eventually released chance wording updated example provided demonstrate handling httperrorresponse well httpresponse object took embarrassing amount time figure comment interceptorts file linked nt apply responses really appreciate work get feature maybe something could clarified docs make things clearer first glance ultimately thanks much adding interceptors feature new httpclientmodule sorry premature response issue", "d": "7/2017"}, {"body": "ncoley thanks confirms suspicion chenkie response unsuccessful thus come back error channel event log javascript import rxjsaddoperatordo export class timinginterceptor implements httpinterceptor constructor intercept req httprequest next httphandler observable const started datenow agree guide needs section intercepting errors", "d": "7/2017"}, {"body": "thanks ncoley alxhub makes sense tried thanks clarifying", "d": "7/2017"}, {"body": "hi works intended specify styles part component styles get prefixed component specific selector inlined generated code done intentionally allow style isolation well ability code split stylesheets along code optimal lazyloading", "d": "7/2017"}, {"body": "correct set contenttype outgoing objects instead rely browser detecting correctly", "d": "7/2017"}, {"body": "see deep property", "d": "7/2017"}, {"body": "tytskyi thanks solution sure documented", "d": "7/2017"}, {"body": "sorry trouble mistake", "d": "7/2017"}, {"body": "already small example almost exact method router uses lazy load except simply provides nice api use however works aot need extra logic support jit", "d": "7/2017"}, {"body": "hi left idea ago making progress solution toxicable chatted ago gitterim angular room think require new webpack loader get work cleanly basic idea create component ts component selector dynamiclazyload template export class dynamiclazyloadcomponent implements onchanges entry component desired input public componentname string module callback one would pass angular router loadchildren input public loadchildrencallback gt promise private loadingstarted boolean false constructor private injector injector private viewref viewcontainerref optional private compiler compiler available jit mode public async ngonchanges changes thisloadchildrencallback amp amp thisloadingstarted thisloadingstarted true public createandinsertcomponent modulefactory ngmodulefactory const moduleref modulefactorycreate thisinjector modulerefinstancedynamiclazyloadcomponents consolelog lazy load components found return write lazyloaded format ts interface dynamiclazyloadmodule dynamiclazyloadcomponents key string ngmodule imports mylazycomponent exports mylazycomponent entrycomponents mylazycomponent export class mylazyngmodule implements dynamiclazyloadmodule public dynamiclazyloadcomponents mylazycomponent mylazycomponent containing component html prototype working abandoned stuff take care hit blocker aot hackiest part trick webpack loader thinking loadchildren router gave could nt get aot working working hardcoded jit like nt tested code maybe update demo sometime time feature would great something easier standardized react coding side lazy load components within view pretty easily problems foresee sure would happen etc lazy module dependency arbitrary string example interactions router thought post share exploration seen question lot means posting code solution hacky prototype tried", "d": "7/2017"}, {"body": "hello guys aprreciate efforts offering workaround probably use custom hack following instructions still see advantage declaring module like ngmodule imports mylazycomponent exports mylazycomponent entrycomponents mylazycomponent lazy true course programmatic api load thisor module modulemanagerloadmodule course work jitaot servebuild etc know ionic others like implemented custom solution bet adding feature makes angular based solution better", "d": "7/2017"}, {"body": "made another demo uses angular already provides handle lazy loading modules", "d": "7/2017"}, {"body": "hello okay load module instantiate entry component solution play conjunction diinjectors system build build generate separate chunk lazymodule would like lose feature provided diinjectors system eagerlazy build process still firmly believe feature provided framework open developers", "d": "7/2017"}, {"body": "aalbericio works router seprate chunk child injector example provided concise enough", "d": "7/2017"}, {"body": "ok going test isolated environment tell wanted confirm points testing thanks much fabian", "d": "7/2017"}, {"body": "toxicable sure building could problem need probably define routes lazy module paths even nt use directly get right chunks", "d": "7/2017"}, {"body": "mlcmlapis right missing small components work cli webpack updated demo working plunkr cli aot", "d": "7/2017"}, {"body": "toxicable great always right answer every one request new feature api allow programmatical way load use lazy loaded modules simple could nt simpler", "d": "7/2017"}, {"body": "toxicable great thanks", "d": "7/2017"}, {"body": "made one little update show use paths lazy modules without duplication aswell provide feature module aswell josephliccini problem hope helped", "d": "7/2017"}, {"body": "would something like able placed something find time like make easier folks engineers use edit asking interested possible", "d": "7/2017"}, {"body": "josephliccini would possible put lib however since config provide would contain rest still provide", "d": "7/2017"}, {"body": "got would work webpack assume may need sort loader pick path convert webpack module loading path etc would cli automatically router nt use cli right", "d": "7/2017"}, {"body": "josephliccini yup require webpack config work fine cli tested although work custom webpack config need whatever plugin makes lazy loading router config normally work use cli familar webpack config since uses exact method router uses", "d": "7/2017"}, {"body": "think work cli uses internally right using plan migrating soon though thanks find free time may publish work lib give credit work anyone else wants package lib let know nt duplicate work", "d": "7/2017"}, {"body": "josephliccini see example angularcli toxicable offered works", "d": "7/2017"}, {"body": "alexzuza sweet actually time work next week post back implementation going along", "d": "7/2017"}, {"body": "toxicable solution works shared modules wellg", "d": "7/2017"}, {"body": "believe primary goal load html view lazily without router mean lazy load shared module nt exactly know would work means components pipes services would missing shared module fetched even thought lazily loaded modules components pipes services scoped module modules imports asking lazy loaded module view use components pipes services shared module case believe yes since components pipes services available root module therefore available children correct wrong though", "d": "7/2017"}, {"body": "josephliccini actually requirement like lazy load module one application another component lazy loaded module used multiple places application categorised shared module doable", "d": "7/2017"}, {"body": "josephliccini implemented angularjs using oclazyload migrating angular sure implement", "d": "7/2017"}, {"body": "want lazy multiple places within app meaning multiple views may lazy render seems reasonable nt given try yet investigate later week", "d": "7/2017"}, {"body": "yes", "d": "7/2017"}, {"body": "situation bit compilated think necessary see separate application tree skaked differently one use different parts angular sources true answer question guarantee necessary parts angular already loaded load probably leads situation load angular modules separatelly parts tree shaked apps", "d": "7/2017"}, {"body": "mlcmlapis agree requirement complicated want understand really doable lets take scenario like two routes propertysummary customersummary shared module component used two routes like application loads browser completely go either propertysummary customersummary load module component runtime yes take care skip module build time compile time need work aot well sure achievable please share thoughts migration highly dependent", "d": "7/2017"}, {"body": "angular necessary core modules loaded separatelly umd bundles always necessary things together theoretically use number parallel apps dynamic libs modules conditions would angular version cross parts right build path extract angular core things apps bundles much complicated situation would want build module optimalization cross tree shaking related apps something like probably right tools today yet certainly future takes time", "d": "7/2017"}, {"body": "mlcmlapis loading umd bundles work jit aot lazy loaded way nt complete knowledge appreciate provide references", "d": "7/2017"}, {"body": "wip needs lots work readme updated testing", "d": "7/2017"}, {"body": "josephliccini repo addresses lazy load shared modules", "d": "7/2017"}, {"body": "ok made poc firt impressions good admit fabian points nt see workaround product cause mostly based configuration poc removed dynamiccomponent created modulemanager instead defined routes appmodule makes easier maintain make futher review production build comment final thoughts thanks", "d": "7/2017"}, {"body": "updated repo decent start api would like begin using testing however nt know approach dangerous hacky begin using production converting parts large enterprise app format since nonstandard way lazy load angular modules could someone angular team comment also seen feature request lot pattern put together seems stable enough angular folks could divert feature requests kind lazy loading support towards library instead", "d": "7/2017"}, {"body": "tracked", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation works fine also", "d": "7/2017"}, {"body": "thanks", "d": "7/2017"}, {"body": "jasonaden include polyfills code automatically looks like causing issue us downlevelled", "d": "7/2017"}, {"body": "matsko nt include part library get included though default cli project afaik sure would causing issue object spread arguments spread rest args really matters think get downleveled need polyfills", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "actually issue team documented exported outside entry point platformserver package", "d": "7/2017"}, {"body": "please add plunker reproduce issue", "d": "7/2017"}, {"body": "jit aot", "d": "7/2017"}, {"body": "alexzuza issue aot build nt think plunker alekcei thanks following ticket see could find workaround", "d": "7/2017"}, {"body": "manjureddys provide small repository reproduces issue", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "7/2017"}, {"body": "please file issue material repo reduce prove problem exists even simple components", "d": "7/2017"}, {"body": "seems overlay components like mddialog different dom object access via debugelement get overlay dom object add document provider configuretestingmodule", "d": "7/2017"}, {"body": "assume opened accident", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "think even allowing add metadata abstractcontrol would open great possibilities metabased development anyway question asked stackoverflow replies think means possible point able extend certain inbuilt classes call complete framework", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "nt tried versions usually means need rebuild nodesass try running first", "d": "7/2017"}, {"body": "gkalpak nodemodulesnodesass folder invalid running", "d": "7/2017"}, {"body": "avoid", "d": "7/2017"}, {"body": "run versions worked log seems ca nt find python try adding path setting python env variable", "d": "7/2017"}, {"body": "hello confident issue local environment recommend try reinstall yarn use version newer verify python available machine", "d": "7/2017"}, {"body": "understand asking technical challenges aware make nontrivial current pair reasonably efficient case angular write dom value changes angular already tracking case event fired notifies angular proposing nt work way would require angular continually effectively every change detection run poll dom read property cases pretty inefficient nowhere else angular query dom way worst case reading properties cause reflows layout thrashing see list props cause reflows cases event fires notify change say possible something really arbitrary properties", "d": "7/2017"}, {"body": "see points however would like make revised proposal couple counter points revised proposal ts directive selector child export class childcomponent turning properties functions returns oneoff observable would move responsibility knowing reread would needed user angular indeed know correctly things changed however developer actually implements angular project knowledge sizes changes imgload css props class changes resize etc reason saying return observable angular following batch reads switch dom context webworker mode reads prevent repeated layout trashing switch back previous context eg webworker mode push next value observable close oneoff observables last things means people explicit every single time want know value property makes clear something could potentially really really really slow far worried layout trashing happens vanilla implementations either way happens using elementref really get worse naive implementation say masonry checks dom every often mature implementation knows needs check also big warning documentation still obeys laws dom properties requires recalculation vanilla still requires recalculation angular", "d": "7/2017"}, {"body": "use read", "d": "7/2017"}, {"body": "nt seem take consideration changes elements caused things happening element consider following css css foo height bar foo height measure height add mutation observer go add class parent element trigger mutation observer far read mdn docs wo nt looks plus things cause element sizes change suggestion meant could get around get implementations working yes solution could work provided nt needwant webworker elementrefnativeelement available default renderer afaik", "d": "7/2017"}, {"body": "zlepper angular also ca nt anything browser nt provide case use called every time change detection run read property think highly unlikely angular team want something added angular inefficient also nt see would common enough use case justify", "d": "7/2017"}, {"body": "disagree think usecase able read dom quite high question example views writing wrote second proposal removes requirements angular know check falls back user far know make new decorators latch angular described way part angular", "d": "7/2017"}, {"body": "removes requirements angular know check falls back user nt understand mean observable stream angular still feed stream values meaning right back started layout thrashing", "d": "7/2017"}, {"body": "zlepper proposal ignores decorators like nt read dom instead angular information compiles component angular code modifies dom already point using angular decorator use case diametral angular decorator uses write lines code done", "d": "7/2017"}, {"body": "nt understand mean observable stream offsetheight angular still feed stream values meaning right back started layout thrashing every call decorated value would return new stream like happens http service means angular nt read anything function call happens actually even subscription observable hpapens write lines code done point make parts webworker parts notwebworker nt see anywhere search proposal ignores decorators like viewchild nt read dom instead angular information compiles component angular code modifies dom already saying decorator someone integrates angular seems thing wrong apparently obvious initially", "d": "7/2017"}, {"body": "sorry nt know webworker", "d": "7/2017"}, {"body": "issue nt called ngif since work see always followed console issue mouse items fast alternate ngif content think happening mouse overing item fast since rerender item nt dom split second therefore element emit event shown move mouse rapidly left colunm see behave expeted since always content dom emit event rapidly move mouse behaviour expecing since item removed dom split second", "d": "7/2017"}, {"body": "element mouseleave bound always since mouseleave binding element parent element ngif rather mouseleave inside ngif contents inside rerendering still seems like angular bug perhaps angular implementation relies mouse events child dom elements know call mouseleave handler parent element guessing bug logic new content appears due mouseenter angular might registered mouse leave handler new content time mouse already gone next js looptick tue jul fabian wiles notifications githubcom wrote issue nt mouseleave called ngif since dose nt work issue mouse items fast corresponding ngif content think happening mouse overing item fast since rerender item nt dom split second therefore element emit mouseleave event shown move mouse rapidly left colunm see behave expeted since always content dom emit event rapidly move mouse moooo behaviour expecing since item removed dom split second receiving authored thread reply email directly view github mute thread", "d": "7/2017"}, {"body": "alexsapps modified version nt use ngif still problem nt see comes problem angular", "d": "7/2017"}, {"body": "interesting see someone else reproduced outside angular completely seems like browser limitation actual app wanted use ngif performance reasons less dom instead using css set display none different elements depending hover state outer element", "d": "7/2017"}, {"body": "since issue framework would mind closing", "d": "7/2017"}, {"body": "related bug chrome jsonly repo plunker", "d": "7/2017"}, {"body": "sounds like need polyfill set debugger break exception figure polyfill needed add app problem caused angular going close issue", "d": "7/2017"}, {"body": "since never reference runtimecompiler tree shaked bundle cli nt know lazy load routes", "d": "7/2017"}, {"body": "toxicable want homemodule inlined main bundle hence nt use lazy loading app way synchronously load module make compatible aot read", "d": "7/2017"}, {"body": "antonmoiseev right actually need return ngfactory function would like export function homemoduleloader return homemodulengfactory ngmodule imports browsermodule routermoduleforroot path loadchildren homemoduleloader declarations appcomponent bootstrap appcomponent export class appmodule look issue linked see fix make work still need return otherwise would need send quite large doubt want production app", "d": "7/2017"}, {"body": "could create minimal reproduction make github repo see", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "7/2017"}, {"body": "oliverhanappi basic problem ca nt cause navigation url different parameters right mean path empty works well", "d": "7/2017"}, {"body": "jasonaden yes exactly currently activated component defined route empty path would change following thus switching non empty path navigation works expected using plunkr demonstrates works using non empty paths btw realized plunkr broken due new zonejs version see fixed specifying zonejs version sry inconvenience", "d": "7/2017"}, {"body": "oliverhanappi thanks update plunker definitely looks like valid issue take look", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation plus angular repo angularcli", "d": "7/2017"}, {"body": "excuse ok thanks lot", "d": "7/2017"}, {"body": "wrong repo one angular please reopen", "d": "7/2017"}, {"body": "reopened", "d": "7/2017"}, {"body": "possibly relates", "d": "7/2017"}, {"body": "seems like feature request angularcli", "d": "7/2017"}, {"body": "afaik namespace import wo nt affect treeshaking webpack amp rollup example could found rollup repl", "d": "7/2017"}, {"body": "trotyl correct start imports nt affect webpacks rollups ability identify unused symbols issues unrelated start imports prevent symbols removed working addressing stuff", "d": "7/2017"}, {"body": "maybe right repo submit issue", "d": "7/2017"}, {"body": "totally right please reopen", "d": "7/2017"}, {"body": "trotyl need solution reactions", "d": "7/2017"}, {"body": "since seems shared logic thought moving logic shared service way could access function sides", "d": "7/2017"}, {"body": "several concepts principle seems mean right answer related goal want reach looking specific answer describe case question probably misleading", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation angular nt load code responsibility module loader using example webpack systemjs load code via api", "d": "7/2017"}, {"body": "completely subjective opinion suggested syntax relationship two structural directives really need something like nt necessarily cleaner existing syntax completely subjective opinion compare ngswitch outer container associate elements functionality ngif would require similar container point might well use ngswitch nothing special ngif sense regular old directive could absolutely implement version exactly make share github people bikeshed choice syntax", "d": "7/2017"}, {"body": "happens due bug current process collecting api docs shows signature multiple times overloaded methods fixed eg", "d": "7/2017"}, {"body": "problem may following line fails pick multiline comments", "d": "7/2017"}, {"body": "nt realise single actual implementation method guess true classes interfaces eh", "d": "7/2017"}, {"body": "work week", "d": "7/2017"}, {"body": "change dgenipackages provide us structure docs data need", "d": "7/2017"}, {"body": "render data api docs difficulty getting expandable component wrap codeexample components dynamic docviewer component help igorminar", "d": "7/2017"}, {"body": "discussed igorminar use html element moment grouping overloads truncate parameters return types first line overview", "d": "7/2017"}, {"body": "grouped overloads collapsed expanded", "d": "7/2017"}, {"body": "closed via", "d": "7/2017"}, {"body": "temporary workaround wrap navigate statements settimeout assuming using replaceurl store state nt affect user experience much", "d": "7/2017"}, {"body": "several things work first resolve types collection code generating phase intentional avoid multiple typechecking passes generate code typechecking since generated code typechecked means know alias treat type therefore metadata token since provider found token report error work around using even laborious supplying type parameters know need anyway noted second nt support generics metadata token generics result unique token combination type parameters type reified need supply token represents combination generic type parameter represents instance type token inject therefore need use circumstances specify correct token inject error needs improved working essentially error trying tell", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation best guess zonejs bundled polyfill bundle bundle loaded please check browser loaded zones test files", "d": "7/2017"}, {"body": "last comment also mi\u0161ko hevery", "d": "7/2017"}, {"body": "trotyl yu trotyl commented via email might trick ngdobootstrap entry component ngmodule faqs page dependency injection nested modules nt seem work comment however would like hear team right approach", "d": "7/2017"}, {"body": "clavecoder removed comment since still app level module level sorry disturbance", "d": "7/2017"}, {"body": "consider pattern similar one app initialization appinitializer comment captaincodeman see also docs", "d": "7/2017"}, {"body": "repo angularcli", "d": "7/2017"}, {"body": "sorry move issue repo", "d": "7/2017"}, {"body": "fixed via", "d": "7/2017"}, {"body": "issue working since update past always undefined", "d": "7/2017"}, {"body": "importing public api", "d": "7/2017"}, {"body": "mlcmlapis angularroutersrcutilstree wanted mock asks injectable export class routerstub public events public setroutesrecognized routesrecognized routesrecognized thisevents new observable observer gt observernext routesrecognized observercomplete public navigate commands extras navigationextras let createrouterstatesnapshot function vertragsid let routerstatesnapshot jasminecreatespyobj routerstatesnapshot tostring root routerstatesnapshotroot jasminecreatespyobj root firstchild routerstatesnapshotrootfirstchildparammap jasminecreatespyobj parammap get routerstatesnapshotrootfirstchildparammapgetandreturnvalue vertragsid nt see option opening issue docs nt tell anything mocking", "d": "7/2017"}, {"body": "treenode private api mocking way trying likely result breaking code make internal change sure exactly trying maybe could helpful opened new issue proposing highlevel api missing would allow write test need", "d": "7/2017"}, {"body": "hello igorminar trying mock please note ts public ngoninit void application root initializes need check parameters url contractid parameter mandatory always present url case contractid present url use contractid loggedin user user one contract use first one list also send list possible query parameters example amp fetched contractid need know user redirected contracts page redirect user url look like extra query parameters let routerinitializersubscriber thisroutereventssubscribe route gt route instanceof routesrecognized let contractid number routestaterootfirstchildparammapget contractid let know makes sense open issue difficult tell issue starting angular lack documentation docs documentation things get complex hard cfreate mocks find information imo", "d": "7/2017"}, {"body": "hi cyberdada looked plunk played see stack trace believe error angular angular material mdbuttontogglegroup component please see highlighted text reason still see form works error log tested setcontrol locally dev without angular md see error let know questions error error formcontrol instance attached form control element path roles role throwerror nocontrolerror mdbuttontogglegroupeval controlvalueaccessorchangefn mdbuttontogglegroupemitchangeevent mdbuttontogglegroupset value mdbuttontogglegroupwritevalue setupcontrol eval arrayforeach formgroupdirectiveupdatedomvalue formgroupeval oncollectionchange formgroupsetcontrol userdetailcomponentallroles objecteval handleevent", "d": "7/2017"}, {"body": "hi balurgala yes probably right reraise bug angular material repo try change material togglegroup roll see happens", "d": "7/2017"}, {"body": "confirmed mdbuttontogglegroup problem changing input type mdradiogroup error raised closing bug raising angularmaterial", "d": "7/2017"}, {"body": "already access native dom elements viewchildviewchildren", "d": "7/2017"}, {"body": "toxicable understanding docs correctly would create new class using annotation form element type etc would want use form also understanding define annotation would provide selector property defines xpath elements see great uses well see two pitfalls approach avoided create separate class distinct element define thus maintain distinguishes elements interest elements interest visual example thinking take example following two scenarios using using element directive disclaimer still new typescript observables well angular examples may reflect efficient use code meant reflect difference coupling view model first example decoupling view model second example still need maintain form examples latter need know care form laid nt need create extraneous classes manage elements", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "alexzuza might bad idea temporary polyfill feature gains traction angular community thanks", "d": "7/2017"}, {"body": "target elements example js viewchild myinput myinput focusinput thismyinputnativeelementfocus", "d": "7/2017"}, {"body": "definitely give shot toxicable thank pointing would still like submit ticket feature request add ability access dom element formcontrol class admit may seem like much add viewchild annotation add target form elements one two components would counter sites make extensive use forms multiple componentstemplates could start add lot potentially unnecessary technical debt however elements made available formcontrol class readonly property would definition model formbuilder markup formcontrolname directive", "d": "7/2017"}, {"body": "think outside scope angular use localstorage kind functionality sure angular could make much better add custom api simply wraps already browser without adding much value example rewrote http service top xhr api testability interception ergonomic features added top xhrfetch", "d": "7/2017"}, {"body": "impression since ng already ability communicate web workers via messaging layer may possible simply extend messaging different tabs communicate well localstorage always good fallback", "d": "7/2017"}, {"body": "hello github issues project bugs feature requests regarding technical aspect framework general questions like probably ask reddit", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information", "d": "7/2017"}, {"body": "toxicable", "d": "7/2017"}, {"body": "remove still inject array things", "d": "7/2017"}, {"body": "see article example article observe mentions array typescript const sometoken opaquetoken new opaquetoken sometoken var injector reflectiveinjectorresolveandcreate provide sometoken usevalue dependency one multi true provide sometoken usevalue dependency two multi true var dependencies injectorget sometoken dependencies dependency one dependency two", "d": "7/2017"}, {"body": "tytskyi thanks still intuitive expecting array typescript throws exception parameter type array constaracture", "d": "7/2017"}, {"body": "large difference class form represented remember generics exist typescript remove generic get understand injector try use injection token nt going give expected results", "d": "7/2017"}, {"body": "could get work aot would work jit toxicable indicated generic types reified javascript type recorded parameter would need able use type token", "d": "7/2017"}, {"body": "wrong repo looking", "d": "7/2017"}, {"body": "ericcarraway know angularcli already issue reported many times resolution try", "d": "7/2017"}, {"body": "notsonotso recommended ericmartinezr reported angularcli tracked", "d": "7/2017"}, {"body": "issue ngc generates multiple imports angularflexlayout angularflexlayoutindex sure problem ngc may problem tsc", "d": "7/2017"}, {"body": "absolutely fault compiled code fine way things messy already wrote plugin rollup fix honestly kind issues discourage community convince people use", "d": "7/2017"}, {"body": "turns better works fine targeting okay worth noting issue unicode formating rollup complaining able parse simple ansi chars", "d": "7/2017"}, {"body": "case ngc adds index imports", "d": "7/2017"}, {"body": "found another similar issue compiler open ticket continue", "d": "7/2017"}, {"body": "ng compiler exports simple directive invalid characters ts import ngmodule angularcore import adirective adirective ngmodule declarations adirective exports adirective export class amodule js generated bundle index edit export amodule amodule export adirective \u0275a adirective sourcemappingurlindexjsmap angularcompiler angularcompilercli angularcore rxjs typescript zonejs", "d": "7/2017"}, {"body": "aminpaks looks right latin barredo \u0275 valid identifier character use extensively angular symbol technically public treated private avoid ensure case public module index recommend creating something like publicapits exposes api wish package", "d": "7/2017"}, {"body": "chuckjaz exported probably exposed nt think long exposed angular module work", "d": "7/2017"}, {"body": "aminpaks case exposed private export mentioned probably declared declaration generated factory needs access part public api flattened module metadata bundler creates private export sure mean exposed angular module mean declared module sufficient module metadata used runtime discarded completely webpack plugin configured able create instance class factory must able import import must exported module without bundling done deep import bundling however deep imports available module structure flattened symbols would required deep import reexported synthetic index private export symbols factory class import", "d": "7/2017"}, {"body": "thanks explanation nt know turns still bug right already found nother bug related topic open another issue explain", "d": "7/2017"}, {"body": "error wrong imports already reported", "d": "7/2017"}, {"body": "thanks close ticket follow", "d": "7/2017"}, {"body": "dgroh work", "d": "7/2017"}, {"body": "reopened added docs", "d": "7/2017"}, {"body": "think section following section covers pretty well", "d": "7/2017"}, {"body": "issue caused ngrxstore closing", "d": "7/2017"}, {"body": "yes good idea probably pattern used already firstorder solution rather random according specific situation points maybe parameter injectable enough new decorator hooks available order relation component hooks actually possible export providers modules", "d": "7/2017"}, {"body": "first thought singleton property boolean due particularity think new decorator would better nt even called service imo need come new name hook available services part proposal works moment know ca nt export services wondering special services like much closer kind injection rather services maybe nt talked service really nt see service class injected like partial component", "d": "7/2017"}, {"body": "look like probably general name", "d": "7/2017"}, {"body": "guess original use case easily solved directive service pattern say component configured made directive several different ones needed make directive implement service provide token directive inject service component make sure provided companion directive rather parent solves nt need provide service time directives would created automatically angular ok inject viewspecific dependency like always ok lifecycle hooks available directive easily used ps directives works different kinds custom components", "d": "7/2017"}, {"body": "aim proposal reduce boilerplate make less error prone since currently working suggestion double link component inject directive dunno use service token directly inject directive add component selector directive selector less errorprone sense ca nt end injecting wrong directive like service either right directive error makes directive really reusable need edit time want use component", "d": "7/2017"}, {"body": "ghetolay may several directives implements service component care even called separation concerns less errorprone sense ca nt end injecting wrong directive like service either right directive error makes directive really reusable need edit time want use component avoided way component inject directive component nt need change anything except gt", "d": "7/2017"}, {"body": "add component selector directive selector valid maybe quick way reuse existing like mark", "d": "7/2017"}, {"body": "possibly relates add lifecycle hooks service allowed componentspecific service inject componentspecific dependencies closed declare scope service completely breaks existing concept di like one inject dependency without providing", "d": "7/2017"}, {"body": "really nt get would alias directive inject alias rather directive directly interface abstract class multiple implementation talking plain class stuff anyway trick solution using selector twice spread code logic even use instead selector still need reference components using directive called double reference c needs injected c good also needs reference c selector killer prefer way even define service inside inside c create add dependency everywhere needed without update injected think related seems source problem", "d": "7/2017"}, {"body": "appreciate proposals sound enough far know saying directive mean directives component create new decorator kind service services never decorator name injected di injector restriction provide wherever use use even put information decorator wo nt help cases service wo nt singleton new instance created injection happen one directives host injects service get two different instances ca nt injected elsewhere inside component directive scope service determined provided would available component view children would available view children case would need new properties called provide service scope component directives nt way declare kind providers get life cycle host component directive general lifecycle hooks sharing mechanism introduced directives able use lifecycle hooks component host pipes able use lifecycle hooks component directive services able use lifecycle hooks component directive service different lifecycle hooks injected component directive since lifecycle hooks case inconsistency cases introduce mechanism compensate must provided componentdirective module part imported module means imported module easily break application time module declare singleton separate store component module cancel nonsingleton declaration made dependency module many thoughts di could search stay usability use case never consider many problems would cause ps links others need take action", "d": "7/2017"}, {"body": "big misunderstanding introducing new mechanism something working right proposing different way trigger mechanism exactly like declarative way less errorprone would handled framework hood rather user take first snippets would like remove first snippet adding something second snippet think behavior induced defined service level service created work way always everywhere proposal replacing another decorator name totally open suggestion like new parameter rejected probably way using schematics generate third party preprocessing tool", "d": "7/2017"}, {"body": "ca nt injected elsewhere inside component directive would huge break current di mechanism existing concept di inject anything want long token found injector service able inject viewspecific stuff may work considered bug completely new di mechanism injectors hierarchical anymore may need take lot cases consideration short back old days view engine indeed dependencies injected component like changedetectorref elementref templateref viewcontainerref injected compiler injector considered bug due nature di fixed code work propose dependency able use component questions come nt consider bug well code work first place exactly like injectable exactly afaik every type also capable inject long provided decorator would work whatever information added would fit ways another break current di mechanism stands first proposed meaningless something like", "d": "7/2017"}, {"body": "immutable creates returns new httpparams instance without mutating instance set called code", "d": "7/2017"}, {"body": "jnizet right updated issue", "d": "7/2017"}, {"body": "ca nt use arbitrary object much easier", "d": "7/2017"}, {"body": "think good add info immutable api doc also add examples several arguments like gt working httpparams confused", "d": "7/2017"}, {"body": "dmitrykrekota need multiple params object use append param value", "d": "7/2017"}, {"body": "cddelta would n number parameters going get request old http could used loop assuming case anymore", "d": "7/2017"}, {"body": "podarudragos httpparams immutable order use loop something like", "d": "7/2017"}, {"body": "similar problem request get obviously working", "d": "7/2017"}, {"body": "vicb think could fix bug fix call feature", "d": "7/2017"}, {"body": "mscu could done manually merging old new query params removing key nt want", "d": "7/2017"}, {"body": "even though manually think uncommon usecase prefer build", "d": "7/2017"}, {"body": "dgroh able apply filter", "d": "7/2017"}, {"body": "may try load zonejs cordova patch find details", "d": "7/2017"}, {"body": "thanks details trying wrap success error callbacks zonecurrentwrap device ready back button events calling still checking resolve update details share details wrapping device ready events", "d": "7/2017"}, {"body": "added zonepatchcordovajs cordovajs file load zone wrap happening automatically printed zonepatchcordovajs manual wrap cordovaexe calls working", "d": "7/2017"}, {"body": "hi applied zonewrap cordovaexec calls zone wrap issue gone android strange issue still sure misisng still checking suggestion pls share", "d": "7/2017"}, {"body": "reproduce nt ipad grin screen resolution go away refresh permanent thing", "d": "7/2017"}, {"body": "resolution permanent thing tried clear cache change browser safari chrome result nothing", "d": "7/2017"}, {"body": "desktop chrome shows everything fine ca nt really investigate sounds like ios wkwebview bug anyone debug provide pr happy take look", "d": "7/2017"}, {"body": "nt know ipad screen shows image assetsimageslogosstandardlogonav instead image assetsimageslogosstandardshieldlargesvg", "d": "7/2017"}, {"body": "two possible causes think property properly updated ipad whatever reason updating attribute nt effect possibly certain circumstances ipad try ipad post printscreen", "d": "7/2017"}, {"body": "property true", "d": "7/2017"}, {"body": "everything seems work expected js side reason overlaps logo way debug via remote debugging checking various elements dimensions positions margins etc", "d": "7/2017"}, {"body": "perhaps something pixel density retina displays", "d": "7/2017"}, {"body": "petebacondarwin good question need check check", "d": "7/2017"}, {"body": "matsko want discuss one", "d": "7/2017"}, {"body": "danielykpan believe fixes issue check see code works installing packagejson", "d": "7/2017"}, {"body": "danielykpan please test still broken reopen issue please", "d": "7/2017"}, {"body": "make minimal reproduction show issue plunkr get stared", "d": "7/2017"}, {"body": "turns happening one nested form component nt happening nesting instance passing formgroup via input special component makes use ngdefaultcontrol ngmodel reformatteddate set validatorsrequired parent form change input value feedback loop starts found temporary fix putting ngif true nested component contains component using ngdefaultcontrol still use validators think interesting worked nested wonder rewrite component use ngdefaultcontrol ngmodel even bug btw seems complicated put plunker take look see feasible", "d": "7/2017"}, {"body": "thank dzhavat finding look", "d": "7/2017"}, {"body": "actually issue animations mdtabs angulario happens line supposed based comment remove ripple effect idea sure smiley animating mdtab set style tab content element effect due style afaict firefox seems right thing reason chrome nt respect part executes animation anyway", "d": "7/2017"}, {"body": "already responsive ca nt reproduce screenshot see even width", "d": "7/2017"}, {"body": "right opened window incognito mode responsive clicking progressive update button angulario may broken broken css", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation ps google ngcontainer", "d": "7/2017"}, {"body": "possible use projected content multiple times kindly please include reasoning intended", "d": "7/2017"}, {"body": "cgatian projection moves nodes one place another takes dom nodes puts new location tree less need use nodes multiple times try projecting passing parameter rendering using amount times need", "d": "7/2017"}, {"body": "encountering lots peoples using structural directive understanding nt work agree dedicated page doc would really nice also think compiler warningerror could help done plunker demonstrate use template meantime", "d": "7/2017"}, {"body": "specifically nt like ngmodules give example would logically group applications features without would import libraries component time", "d": "7/2017"}, {"body": "small app nt care logically grouping features import component angular see custom tag recursively discover dependencies etc like way react even painful larger app nowadays even moderately sized desktop web apps nt need lazy loading", "d": "7/2017"}, {"body": "import component recursively look react uses jsx angular may care grouping features well organized project structure personally nt think opinion majority please explain larger apps need lazy loading less goal lazy loading reduce initial bundle size lazy loading parts application reduce initial bundle substantially improving loadtimes user experience larger applications code means larger bundles need reduce bundle size therefore lazy loading exactly need", "d": "7/2017"}, {"body": "huh making complicated given angular html template able parse find custom tags find custom tag selectors import recursively pull need never said nt care well organized code big fan however times either want prototype something decide lazy small project etc nt want go plumbing ca nt tell many times created page forgot declare custom component natural process know jsx point said anything needing lazy loading less larger apps thought implied nt need lazy loading small desktop apps anyway hope process gets streamlined hope hear core member", "d": "7/2017"}, {"body": "hmm simply nt understand ngmodule concept big problem yes adds lines code also advantages side general point view whole app small thing add argument frequent forgetting add custom component declaration ca nt think seriously", "d": "7/2017"}, {"body": "might make ngmodule optional small apps", "d": "7/2017"}, {"body": "interestingly thinking removing since nt make actual difference angularjs apps see angularangularjs kseamon would possible achieve thing using custom xhrfactory", "d": "7/2017"}, {"body": "gkalpak trying understand nt work right always enabled", "d": "7/2017"}, {"body": "kseamon seems using flag real effect essentially always due promises work angularjs thinking removing flag keeping current behavior always async anyway observed difference pure angularjs app without", "d": "7/2017"}, {"body": "last time tested long time ago feature first introduced experimental version made never merged main issue zones seem cause dirty checking happen every response regardless setting", "d": "7/2017"}, {"body": "yeah think excessive digesting comes zonejs patching xmlhttprequests directly related using new experimental docs forthcoming sorry avoid might break things rely zonejs triggering digests", "d": "7/2017"}, {"body": "could please make minimal reproduction show issue preferably plunkr template get started", "d": "7/2017"}, {"body": "would nt mean changing line something like edit see possible implementation", "d": "7/2017"}, {"body": "gkalpak yes looks like knock pr later week like", "d": "7/2017"}, {"body": "kseamon sgtm grin", "d": "7/2017"}, {"body": "making routes based folder structure restrictive example would handle things like lazyloaded routes redirects pathmatching type canactivate candeactivate outlet handling etc config routing requires", "d": "7/2017"}, {"body": "toxicable config mentioned canactive candeactive etc done decorator routercomponentts file separate config file lazyloaded config", "d": "7/2017"}, {"body": "change like make whole project incomprehensible existing tooling tsc dgeni karma ides nt expect like head direction instead like us leverage es modules better future away ngmodules easy undertaking take time spec implement", "d": "7/2017"}, {"body": "igorminar thanks comments", "d": "7/2017"}, {"body": "third option async validator fix issue solved passing array second option like although agree error message could give clues happening see formcontrol constructor signature", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "welp embarrassing thanks quick reply keep good work", "d": "7/2017"}, {"body": "think somewhat related", "d": "7/2017"}, {"body": "intended behavior since actual value changed case comparison old params new params would get back changed last line something like see navigation work", "d": "7/2017"}, {"body": "jasonaden little confused meant say actual value change thanks reply", "d": "7/2017"}, {"body": "good fixed meant example used array method adds item array still array let myarray let secondcopy myarray secondcopypush expect myarray secondcopy tobe true expect myarraylength tobe basically mutating array still array using syntax take values array rather array therefore values array changed detect changes", "d": "7/2017"}, {"body": "nt know much webpack really supported jsdom better filing bug webpack repo angular repo", "d": "7/2017"}, {"body": "sorry issue caused angular please contact author webpack file issue issue tracker", "d": "7/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2017"}, {"body": "vicb hi man feature request support ticket real problem code give template error", "d": "7/2017"}, {"body": "app activatedroutepathfromroot looks pretty strange activatedroute component property extract array looks like every lazymodule undefined component", "d": "7/2017"}, {"body": "guys added plunker hope help", "d": "7/2017"}, {"body": "hello totally critical issue plans fix suggest workaround thank", "d": "7/2017"}, {"body": "someone response fix issue helpful", "d": "7/2017"}, {"body": "anybody fixed", "d": "7/2017"}, {"body": "thanks issue discuss one next couple days update", "d": "7/2017"}, {"body": "thx guys", "d": "7/2017"}, {"body": "andriididkivsky happen know directly related lazy loading words would work nt using lazy loading still using array basically wondering relates lazy loading routing general", "d": "7/2017"}, {"body": "jasonaden relates lazy loading check today let know create another plunker without lazy loading needed", "d": "7/2017"}, {"body": "jasonaden completely lazyloading issue plunker without lazy loading works correctly go parent route unlike previous version", "d": "7/2017"}, {"body": "guys updates issue writing big app thing important us tnx", "d": "7/2017"}, {"body": "please take look", "d": "7/2017"}, {"body": "vaaceph happening input event triggered focused empty input element calls registeronchange registeronchange calls markasdirty issue related tried debugging ngmodel directive could find input event triggered", "d": "7/2017"}, {"body": "himajasuman tell angular team see bug", "d": "7/2017"}, {"body": "equivalent playground example typescript also reports error improve type checking aot compilation reported error well use typescript type checker instead", "d": "7/2017"}, {"body": "thanks reply difference regular ts code cast accessing property template guess way would provide method component performs cast returns appropriate value call method template", "d": "7/2017"}, {"body": "certainly recommend templates expressions simple complicated logic component", "d": "7/2017"}, {"body": "duplicate spirit fixed", "d": "7/2017"}, {"body": "robwormald pointed one simple way reduce generated code use stamp controls cases forms simple enough work", "d": "7/2017"}, {"body": "something angular module toolkit could help seems like common use case alxhub", "d": "7/2017"}, {"body": "tested ios android app added homescreen current behavior every time start app taping homescreen icon get new instance app loaded homepage unless existing instance currently opened url url stored homescreen shortcut change pwa manifest honored android run app fullscreen mode reopen app last state reusing old instance prevent users multiple instances app open concurrently maybe want consider pros cons always restoring old state using indexdb might also turn undesirable result duplicate app instance content open without user realizing preference would change behavior ios wait support fullscreen android go fullscreen mode add ability share current url", "d": "7/2017"}, {"body": "actually closed yet see", "d": "7/2017"}, {"body": "japalo chance could put code plnkr dive see breaking", "d": "7/2017"}, {"body": "plunker", "d": "7/2017"}, {"body": "also issue angular angularmaterial opening dialog", "d": "7/2017"}, {"body": "fix seems way look commits matsko provided wait release", "d": "7/2017"}, {"body": "kk thanks japalo patient", "d": "7/2017"}, {"body": "temporary workaround used packages fixed issue waiting", "d": "7/2017"}, {"body": "japalo workaround convert css properties fix go tomorrow release show thursfri", "d": "7/2017"}, {"body": "oh problem yikes using bem syntax really messes things late literally thousands lines htmlscss code fix support hyphencase", "d": "7/2017"}, {"body": "yes patch fixes hyphencase still works", "d": "7/2017"}, {"body": "one plnkrs working fine", "d": "7/2017"}, {"body": "get invalid unexpected token error chrome ff", "d": "7/2017"}, {"body": "post error seeing using ff chrome working fine triggering error", "d": "7/2017"}, {"body": "error occurs plunkr loading see loading text nothing happens ff error systemjs unterminated string literal zonedelegateprototypeinvoke zoneprototyperun scheduleresolveorreject lt zonedelegateprototypeinvoketask zoneprototyperuntask drainmicrotaskqueue zonetaskthisinvoke evaluating error loading angularplatformbrowser stack trace systemjs unterminated string literal zonedelegateprototypeinvoke zoneprototyperun scheduleresolveorreject lt zonedelegateprototypeinvoketask zoneprototyperuntask drainmicrotaskqueue zonetaskthisinvoke evaluating error loading angularplatformbrowser chrome failed load resource server responded status forbidden error systemjs invalid unexpected token syntaxerror invalid unexpected token eval zonedelegateinvoke zonerun zonedelegateinvoketask zoneruntask drainmicrotaskqueue xmlhttprequestzonetaskinvoke evaluating error loading angularplatformbrowser eval zonedelegateinvoke zonerun zonedelegateinvoketask zoneruntask drainmicrotaskqueue xmlhttprequestzonetaskinvoke evaluating error loading angularplatformbrowser", "d": "7/2017"}, {"body": "problem link oddly works coworker", "d": "7/2017"}, {"body": "none angular live examples working facing issue thing wrong version explicitly specifying version systemconfigjs worked", "d": "7/2017"}, {"body": "could try disable browser extensions open incognito mode", "d": "7/2017"}, {"body": "trotyl tried incognito mode luck getting error", "d": "7/2017"}, {"body": "getting links", "d": "7/2017"}, {"body": "works fine exact chrome version running chrome", "d": "7/2017"}, {"body": "ladekarl version official build windows professional fwiw", "d": "7/2017"}, {"body": "works perfectly fine still facing issue", "d": "7/2017"}, {"body": "aravindfz appears work", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "7/2017"}, {"body": "know nt guidelines helps angularcli angularcommon angularcompiler angularanimations", "d": "7/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "7/2017"}, {"body": "kind duplicate refer searchresults problems fixed least considerably improved", "d": "7/2017"}, {"body": "land get results like", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "7/2017"}, {"body": "could add link small repro reproduce cli app edit mean parsing template designtime", "d": "7/2017"}, {"body": "vicb think issue well explained", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "7/2017"}, {"body": "experiencing problem files get built work process never stops", "d": "7/2017"}, {"body": "please report angularcli project part project", "d": "7/2017"}, {"body": "theunreal please test fix went last week addressed issue elements", "d": "7/2017"}, {"body": "matsko thanks reply upgraded nt seem solve issue router transition stagger animation working stagger animations works fine without router animation", "d": "7/2017"}, {"body": "ok chance make demo plnkr hard piece together demo since nt application code", "d": "7/2017"}, {"body": "btw animation code simplified", "d": "7/2017"}, {"body": "matsko thank simplification created plunker please click go page button navigate page without triggering stagger animation component elements change animation value page located trigger router animation state stays home home stagger start working fine please let know anything else thanks", "d": "7/2017"}, {"body": "hey verify still issue since plnkr example using latest angular build may gotten fixed patch went yesterday master fixed another router animations issue", "d": "7/2017"}, {"body": "matsko still issue router animation executed stagger wo nt work update approutingmodulets aboutcomponent animation value activate route animation stagger stop working", "d": "7/2017"}, {"body": "problem solved including polyfill", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "7/2017"}, {"body": "peerdependency later peerdependency whenever using using well would always considered peerdependency meanwhile bundlers like webpack idea listed look physical directories default please refer webpack documentation information", "d": "7/2017"}, {"body": "mmmm makes sense processing yet know bundlers case different creating single js file said must resolve modules runtime help amd loader need scan files nt know advance modules going resolved anyone deployundeploy package server moment also need support portlets modular must cooperate even without knowing complex architecture single webapp", "d": "7/2017"}, {"body": "btw thanks prompt response", "d": "7/2017"}, {"body": "hi izaera semantic whoever depends package also depends well responsibility package dependency also declare dependency well could send request package owner add field since package violating rule btw normally impossible frontend library use nt make sense two different versions package bundled single app please refer peer dependencies information", "d": "7/2017"}, {"body": "trotyl see case package depending applicationportlet listed dependency due way load modules seem enough think carefully fact writing pure bundler due fact bundling application like chunk final application end composed fly makes things bit complicated example said nt make sense several versions package single app scenario one may use one version package another one may use different version still shown page coexist peacefully anyway think close issue clear original request incorrect nt make sense add dependency something fixed definitely side thanks lot conversation useful", "d": "7/2017"}, {"body": "something avoid cost angular creates new array every time change detection runs rather assign array field bind field instead", "d": "7/2017"}, {"body": "right using method returns new value every time good idea avoided hostlistener documentmouseup influence clickevent ngfor iterate newly created array makes sense", "d": "7/2017"}, {"body": "nt really think makes sense reason binding array way something avoided something avoided cost like similar endless loop perhaps browser nt time process events anymore similar", "d": "7/2017"}, {"body": "look forked example component listens global event enabled change detection original component runs every anywhere method called number times replaces buttons think click button button gets removed replaced faster angular event happens angular click event event fire", "d": "7/2017"}, {"body": "sorry wo nt spend time investigating angular team long code binds method returns new array every time called perhaps someone else wondering nt cause exception development mode reproduce without construct consider valid bug well though", "d": "7/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2017"}, {"body": "cc wardbell foxandxss nt sidenav submenu", "d": "7/2017"}, {"body": "yes definitely", "d": "7/2017"}, {"body": "pr removed maxheight property mdsidebar gkalpak fixing shall raise pr reverting back", "d": "7/2017"}, {"body": "aravindfz issue related pr pointed root problem means guide included somewhere", "d": "7/2017"}, {"body": "angularjs org", "d": "7/2017"}, {"body": "wrong repository angular repo angularjs material repo", "d": "7/2017"}, {"body": "toxicable right please resubmit angularjs material repo", "d": "7/2017"}, {"body": "ref child component change therefore change detection cd run using onpush cd run input changes ref bound event occurs inside component called component since done none cd run", "d": "7/2017"}, {"body": "prod mode change detection happen per trigger applicationref tick dev mode happen twice", "d": "7/2017"}, {"body": "reference see indeed slight blurring normal hovered", "d": "7/2017"}, {"body": "found caused transform seems known issue see example although things suggested stackoverflow answers nt help changing seems make blur go away least screen grin", "d": "7/2017"}, {"body": "also replacing thing fixes blur confused", "d": "7/2017"}, {"body": "gkalpak yes resolves issue though text blurred translating becomes clear translation stops", "d": "7/2017"}, {"body": "questions suitable stackoverflow issue tracker bugs features", "d": "7/2017"}, {"body": "think safe remove documentation", "d": "7/2017"}, {"body": "matsko make suggestion one", "d": "7/2017"}, {"body": "problem tutorial meant used angularcli quickstart nt mean ca nt really cli instructions meant hence styles conflict sorry inconvenience planning migration docs use cli", "d": "7/2017"}, {"body": "alright makes sense setup tutorial instructs start angular project without cli link bottom getting start page uses cli takes user tutorial stating ready anyone following link assume instructions use cli immediately follows cli quickstart", "d": "7/2017"}, {"body": "please provide plunker demonstrates issue requested issue template issue nt even show tried add attribute", "d": "7/2017"}, {"body": "sorry thought must left comments fixed teh original submission example template fails", "d": "7/2017"}, {"body": "svg elements nt properties need use attribute binding svg elements", "d": "7/2017"}, {"body": "thought tried sorry confusion", "d": "7/2017"}, {"body": "worries glad hear could make work", "d": "7/2017"}, {"body": "stub lazy loading modules testing see", "d": "7/2017"}, {"body": "closing suggestion fix problem", "d": "7/2017"}, {"body": "brandonroberts thanks worked", "d": "7/2017"}, {"body": "truth nt seen real working rollup treeshaking example angular tested compiler aware treeshake angular code closure", "d": "7/2017"}, {"body": "totally fault forgot add aot related stuff zips tracked", "d": "7/2017"}, {"body": "even tried downgrading node npm versions specified developermd doc btw lts", "d": "7/2017"}, {"body": "may related talks buildsh requires full linux environment", "d": "7/2017"}, {"body": "workaround would navigate command prompt rename something like create symlink step requires administrator elevation except later version windows believe nt figured add scripts file yet nt hard though got bit update next bug ran workaround workaround running rsync git windows bash blogged newer versions git windows copy files instead rsyncexe mingw installing rsync directory git windows next bug hit looked error found stack overflow looks like node requires version developermd requires lt sure document needs updated update installing node ran got error looked appears rsync use c base path wo nt able resolve something suggested fix first change directory use relative paths modified thing added replacing non rsync versions every command appears added angular february call first change directory project root path rsync prompts user dialog box firewall open tcp udp ports srcdir rootdir package rsyncsrcdirpackages package rootoutdir pwd distpackages outdir rootoutdir package rsyncoutdirdistpackages package npmdir pwd distpackagesdist package rsyncnpmdirdistpackagesdist package bundle true else echo copy package node tool cd pdw rsync rsyncoutdir rsyncnpmdir fi echo copy package packagejson externsjs files cd pwd rsync include packagejson include exclude rsyncsrcdir rsyncnpmdir rsync include externsjs include exclude rsyncsrcdir rsyncnpmdir stuck bunch warning messages really sure go nt move forward hangs spot", "d": "7/2017"}, {"body": "petebacondarwin one seems pretty bad actually going file bug well looks like duplicate one try searching resolve instance get resolve page drop last character search resolv find looking appears sort bug stemming anything ending e ies etc ca nt found suffixes find comonent componentref componentfactory abstractcontroldirective without dropping last characters", "d": "7/2017"}, {"body": "improve things considerably smiley", "d": "7/2017"}, {"body": "jasonaden see", "d": "7/2017"}, {"body": "please add repro thanks", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "7/2017"}, {"body": "application compilerclearcache login success templateurl generated web api according user profile user profile changed need reload pages using clearcache im testing working anymore functionality using locationreload think nt best way", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "closing go stack overflow", "d": "7/2017"}, {"body": "jit still work run aot fail", "d": "7/2017"}, {"body": "foxandxss thanks answer thought think compiler bug maybe angularcli still nt repport errors correctly see labelled already assume figured thanks time", "d": "7/2017"}, {"body": "please add minimal repro", "d": "7/2017"}, {"body": "idea try tabs index component instead maybe tab gets nulled somewhere object", "d": "7/2017"}, {"body": "usse closed made work withchildren instead", "d": "7/2017"}, {"body": "ask take different architectural approach jsontoangularrouterpattern http get userprivileges contenttype applicationjson user joe privileges b c write route guard jsontotemplateswitchingpattern possibly w dynamic component loading finegrained html snippets view outlets http get customviewhtml contenttype texthtml foobar html could also put html snippets json like render json snippets designated outlets possibly building dynamic view much like decision maker presenter pattern", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "ngfk work", "d": "7/2017"}, {"body": "delagen try combining", "d": "7/2017"}, {"body": "would recommend stick typescript instead issues fixed current one rxjs one instead disabling checks newer version ts", "d": "7/2017"}, {"body": "ngfk thanks works alaind agree want test code ts string enums import module functions needed currently issues rxjs use build pipeline check reverted back single line supported", "d": "7/2017"}, {"body": "least testing upgrade rxjs able run angular ts remember upgrading risk nt believe fully tested amp supported moment", "d": "7/2017"}, {"body": "markpieszak upgraded rsjs still getting build errors error userssaulprojectspassitfrontendnodemodules angularcoresrcchangedetectiondiffersdefaultiterabledifferdts class defaultiterabledifferfactory incorrectly implements interface iterabledifferfactory types property create incompatible type trackbyfn trackbyfunction undefined gt defaultiterablediffer assignable type trackbyfn trackbyfunction undefined iterablediffer cdr changedetectorre type defaultiterablediffer assignable type iterablediffer types property diff incompatible type collection ngiterable gt defaultiterablediffer null assignable type object ngiterable gt iterablechanges null type defaultiterablediffer null assignable type iterablechanges null type defaultiterablediffer assignable type iterablechanges null type defaultiterablediffer assignable type iterablechanges types property foreachoperation incompatible type fn item iterablechangerecord previousindex number null currentindex number null assignable type fn record iterablechangerecord previousindex number currentindex number gt void gt types parameters fn fn incompatible types parameters previousindex previousindex incompatible type number null assignable type number type null assignable type number error userssaulprojectspassitfrontendnodemodules angularcoresrcchangedetectiondiffersdefaultiterabledifferdts class defaultiterablediffer incorrectly implements interface iterablechanges types property foreachoperation incompatible type fn item iterablechangerecord previousindex number null currentindex number null assignable type fn record iterablechangerecord previousindex number currentindex number gt void gt v types parameters fn fn incompatible types parameters previousindex previousindex incompatible type number null assignable type number type null assignable type number error userssaulprojectspassitfrontendnodemodules angularcoresrcchangedetectiondiffersdefaultiterabledifferdts class defaultiterablediffer incorrectly implements interface iterablediffer types property diff incompatible type collection ngiterable gt defaultiterablediffer null assignable type object ngiterable gt iterablechanges null type defaultiterablediffer null assignable type iterablechanges null type defaultiterablediffer assignable type iterablechanges null type defaultiterablediffer assignable type iterablechanges types property foreachoperation incompatible type fn item iterablechangerecord previousindex number null currentindex number null assignable type fn record iterablechangerecord previousindex number currentindex number gt void gt v types parameters fn fn incompatible types parameters previousindex previousindex incompatible type number null assignable type number type null assignable type number", "d": "7/2017"}, {"body": "markpieszak release rxjs means errors rxjs using typescript mean issue angular lt ts magically fixed", "d": "7/2017"}, {"body": "definitely saying might work everyone yet", "d": "7/2017"}, {"body": "features typescript webpack make possible instead using webpack loader replacing write even want webpack chunk naming removecomments option must turned even ps need work support aot cause need import ngfactory pss wrote small webpack chain loader support method", "d": "7/2017"}, {"body": "djnaumov rxjs mismatched generics lift one another similar error angular core", "d": "7/2017"}, {"body": "yes refers bug angularcore rxjs bug", "d": "7/2017"}, {"body": "hi officially fixed consequence aware modify directly adding types method line modification try compilation errors gone ca nt measure impact change thank", "d": "7/2017"}, {"body": "alaind editing type definition files going change anything output js", "d": "7/2017"}, {"body": "still seems broken", "d": "7/2017"}, {"body": "yep still issue", "d": "7/2017"}, {"body": "set compileroptionsstrict false tsconfigjson", "d": "7/2017"}, {"body": "tsconfigjson looks like adding skiplibcheck true solved", "d": "7/2017"}, {"body": "hi angular team planned fixed soon please using following config today errors still present changing manually adding missing still workaround today would like know plan work fix time soon thank much", "d": "7/2017"}, {"body": "preventing us using typescript fixes pipeline", "d": "7/2017"}, {"body": "thanks feedback contact like puzzles probably find issues work", "d": "7/2017"}, {"body": "vicb love right still lots issues getting angular build windows script added commands back february think found workarounds including manually adding junction directory date script upgrading node version even though says version lt modifying build script workaround using root directories still hanging process warning messages windows support seems real mess moment posted progress help getting working would greatly help get involved", "d": "7/2017"}, {"body": "probably something linting tools mgechev think would make sense add check codelyzer", "d": "7/2017"}, {"body": "opened issue codelyzer", "d": "7/2017"}, {"body": "wkoza implemented rule part next release codelyzer vicb believe close issue", "d": "7/2017"}, {"body": "given error message issue code ericmartinezr right", "d": "7/2017"}, {"body": "polyfills place see polyfillsts file src folder", "d": "7/2017"}, {"body": "veke polyfillsts file import import import import import import import import import import import import import import import import zonejsdistzone", "d": "7/2017"}, {"body": "got problem normal embedded version got polyfills activated every npm date since fighting days tried different solutions one guides suggestion timing problem loading polyfills error reproduction tour heroes used tour hereos app testing debugging routing seems problem problem blank new ng new app app runs embedded version ca nt use console implemented error handler alert error pops twice every time load script documentwrite page shows error next load error gone everything works fine resetting cache problem reproducable hope helps way", "d": "7/2017"}, {"body": "problem identityserver authentication package idea solve issue", "d": "7/2017"}, {"body": "long hours searching found workaround problem specific environment embedded ie problem registry key folder key every application uses embedded browser example found information specific values webbrowsercontrolspecifyingtheieversion setting means internet explorer webpages displayed standards mode regardless doctype directive case lower value gt ie version use metatag activate edge mode everything works fine registrycommand suggestion ie problem doctype metatag polyfill whatever jumps quirks mode pointed block page documentwrite error reload everything works fine exact settings hope helps anyone gets team closer solution", "d": "7/2017"}, {"body": "please attach small repro otherwise nothing", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "7/2017"}, {"body": "create new child injectors using new ngmodulefactory determined runtime exactly router", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "understand role systemjsangularloader help handle convert absolute paths nt seem working imported modules work fine aot mode though angular ignores styleurls preceeding", "d": "7/2017"}, {"body": "worked around problem using modified version systemjsangularloaderjs changed line", "d": "7/2017"}, {"body": "yugloocamai glad got sorted unfortunately fix nt work issue tried templateurl imported module error springs", "d": "7/2017"}, {"body": "exactly working becuase w angular cli definetly use relative paths either jit aot", "d": "7/2017"}, {"body": "dherges hi apologies delayed response confusing one get head around first problem using angular library built frustratingly library private repository produce plunkr library contains many components relative paths templates within folder need relative imported external module absolute path might also deployed would nightmare manage new app imports library nodemodules angular resolve relative paths running app jit aot mode works absolutely fine hopefully makes sense", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "hi chuckjaz bit flabbergasted point raise twice really believe flaw current version angular develop jit alongside aot relative paths supported imported modules making development angular bit nightmare", "d": "7/2017"}, {"body": "davyf understand correctly problem resolution path library", "d": "7/2017"}, {"body": "hi tytskyi correct app structure like project packagejson dependency angular library taken private repository common library contains components built example tablecomponent following path templateurl folder ts file please note relative path table component library would get imported main app project project compiled aot works correctly however development mode jit relative path tablecomponent resolved causing found error systemjsangularloaderjs nt resolve paths within thank", "d": "7/2017"}, {"body": "davyf see able consume library nodemodules already aot compiled follow way works look structure library using generators tried first convert library due example budget question sorry nt know solution", "d": "7/2017"}, {"body": "tytskyi thank used yeoman generator create library working correctly aot however developing would beneficial compile jit alongside aot angular documentation suggests work fine seems similar issues yeoman generator github look however feel like universal issue framework fixed within systemjsangularloader make painless experience switching two compilers way around moment either compile aot development mode takes long time inline templates ugly ideal working complicated templates trying bring angular dev teams attention", "d": "7/2017"}, {"body": "davyf still nt quite understand setup library bundled aot installed able use library main app using devmode jit angularcli lets clarify table component library would get imported main app project mean create components library create exports components instead import components directly main app define array main app", "d": "7/2017"}, {"body": "tytskyi hmm trying achieve believe setup correct structure library library bundled using aot components also ngmodule eg angular components import ngmodule customelementsschema noerrorsschema errorhandler angularcore import browsermodule angularplatformbrowser import platformbrowserdynamic angularplatformbrowserdynamic import formsmodule reactiveformsmodule angularforms import commonmodule angularcommon import httpmodule angular import routermodule angularrouter library common import tablecomponent componentstabletablecomponent components go ngmodule imports browsermodule commonmodule httpmodule routermodule formsmodule reactiveformsmodule declarations tablecomponent providers schemas customelementsschema noerrorsschema export class librarycommonmodule import bundled library project maybe going wrong appreciate help", "d": "7/2017"}, {"body": "davyf declare export components import declare components entities modules encourage try follow quick start building library consuming library generate demo library try consume app use observe structure generated demo folder important component etc sure use subfolders want main trick see ngmodule declared see things reexported ps also assume wanted supress runtime errors nt really know need use schemas suggest remove fix actual errors", "d": "7/2017"}, {"body": "tytskyi thank rebuilt library module declared appmodule library compiles fine run issues consuming library aot compatible library business tough nut crack", "d": "7/2017"}, {"body": "adding microsyntax solve preprocessing html either outside angular providing custom htmlparser", "d": "7/2017"}, {"body": "renderer service would nt compile service know renderer thanks help happy", "d": "7/2017"}, {"body": "typings nt affect compilation import injectable angularcore injectable class myservice svcrenderer ps forgot p", "d": "7/2017"}, {"body": "still getting error code component let know missing something stupid would cool able inject service renderer defintely stay tuned developments", "d": "7/2017"}, {"body": "plnkr empty fork make work code save working removed part code need help ask gitter chatroom thread imho feature request support one nt get wrong please provide working failing plnkr repo clone", "d": "7/2017"}, {"body": "working mean compiling reason ask get error click suggested earlier deploying project qa reproducible error code seems easiest solution let know post chat start new request feature", "d": "7/2017"}, {"body": "sure provide minimal reproduction issue would even better whatever best", "d": "7/2017"}, {"body": "thanks deployed code reproduce open console click category buttons top", "d": "7/2017"}, {"body": "chance peek post gitter aswell", "d": "7/2017"}, {"body": "look right nt see anything related issue see error webpage ca nt see code something reproducible runnable please go gitter post", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "misterti sure understand expecting happen produce plunkr steps demonstrate issue", "d": "7/2017"}, {"body": "trying reproduce could time clear original scenario ca nt confirm anything fishy going going close issue possible take based info provided still believe bug please open new issue plunker", "d": "7/2017"}, {"body": "colorpump please use setters intercept update use router apis update query params needed nt provide automated way could cause data flow issues application done unintentionally", "d": "7/2017"}, {"body": "fyi fix already landed rxjs changelog close issue", "d": "7/2017"}, {"body": "fixed yet disappointed", "d": "7/2017"}, {"body": "malkomich come note issue rxjs angular track angular issue still error reproduce rxjs coud open issue repo", "d": "7/2017"}, {"body": "fixed case", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "fixed case", "d": "7/2017"}, {"body": "closing issue please update rxjs newer", "d": "7/2017"}, {"body": "added tsconfigjson file upgraded typescript fixed", "d": "7/2017"}, {"body": "silk browser nt covered browser support matrix tested ci think anyone one test totally wild guess would fire something special xhr status codes seen previously older android devices narrow happy see fix need bit support end", "d": "7/2017"}, {"body": "hi rob investigate reason would good way tablet packetsniff traffic server trying another technique identify nt processed correctly would hope solid understanding issue end month", "d": "7/2017"}, {"body": "balangovindaraj expected behavior used provide values must present order route instantiated data need nt required route instantiated probably load categories another service cancel routing changes", "d": "7/2017"}, {"body": "think put stack overflow likely related something else application though maybe something like post", "d": "7/2017"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "7/2017"}, {"body": "news one", "d": "7/2017"}, {"body": "thanks toxicable", "d": "7/2017"}, {"body": "could reproduce problem isolated environment closing", "d": "7/2017"}, {"body": "maximusk find answer trying get working", "d": "7/2017"}, {"body": "options queryparamshandling", "d": "7/2017"}, {"body": "another option queryparamshandling believe similar deprecated preservequeryparams set", "d": "7/2017"}, {"body": "problem normal subscribe component class angular version excerpt controller login thisaccessdenied false public bool used view", "d": "7/2017"}, {"body": "surprised nt discussed greater detail supported people nt common case building basic reusable ui components buttons yes directives add functionality button implemented class example encapsulating complex ripple effect click nt also make sense styles attached template obviously nt make sense styles still nt seem difficult add functionality end would global styles usual means could write something like target desired buttons main stylesheet let global style decouples styles definition directive would nice place current workaround comes mind define file reference importing global stylesheet still requires manual work referencing directiverelated stylesheet scoping nt seem impossible either pretty intuitive welldefined since directives still html element angular component", "d": "7/2017"}, {"body": "working ui components days common case building ui components directive use component directive style selector order load style directive element one component selector feature really important ng components developers", "d": "7/2017"}, {"body": "planning work docs lts completely new app displaying docs onwards", "d": "7/2017"}, {"body": "foxandxss really universialrepository", "d": "7/2017"}, {"body": "alanhg deprecated everything lives", "d": "7/2017"}, {"body": "foxandxss release use know vue amp react mature solution serverrender need okaysolution changelog ca nt see info", "d": "7/2017"}, {"body": "released long ago use today wish", "d": "7/2017"}, {"body": "foxandxss think understand need need implement serverrender better performance amp seo think active doc update", "d": "7/2017"}, {"body": "still confused understand angular universal repo pointing integrated core angular server render angular right without need repo deprecated", "d": "7/2017"}, {"body": "alanhg see", "d": "7/2017"}, {"body": "foxandxss would good universalangulario also repository say project deprecated use platform server already said universal part angular project catch eyes made people open issues maybe paragraph header describe", "d": "7/2017"}, {"body": "took days find angular universal deprecation google serp point angular universal please follow suggestion", "d": "7/2017"}, {"body": "google serps alexandrsizemov let us know old links clean point right place", "d": "7/2017"}, {"body": "markpieszak universalangulario say something angular bold text header", "d": "7/2017"}, {"body": "markpieszak google result pages angular universal similar keywords show results angularuniversalio tutorialsarticles talk", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "assume mean labels tabs need wrap", "d": "7/2017"}, {"body": "compared", "d": "7/2017"}, {"body": "sure css rules employ fix sjtrimble gkalpak ideas", "d": "7/2017"}, {"body": "trick", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "fixed version angularclasshmr closing issue", "d": "7/2017"}, {"body": "duplicate", "d": "7/2017"}, {"body": "longer repeat problem closing dont know changed", "d": "7/2017"}, {"body": "update", "d": "7/2017"}, {"body": "hi verify works looks like fixes issue looks like related closing find still working let know reopen", "d": "7/2017"}, {"body": "andreasrueedlinger think issues posted earlier angularcli similar essentially using two variables finally prepare routes object angular peeps another deadsimple scenario reproduce issue const approutes define routes const newroutes approutes dead simple referencing ngmodule imports routermoduleforroot approutes works imports routermoduleforroot newroutes work notice second scenario prod bundle file variable definitions hope gets resolved soon waiting release app production", "d": "7/2017"}, {"body": "angular people updates", "d": "7/2017"}, {"body": "make though fine run three things using skipping quick start setup main appcomponent selector set approot instead myapp part tells add indexhtml cli handles adding lead console due routing part makes use never told install", "d": "7/2017"}, {"body": "error seems coming polyfillsbundlejs files means caused angular rather either polyfill using zonejs please reduce issue minimal set dependencies file issue appropriate project causes problem see coming angular core", "d": "7/2017"}, {"body": "appears point starting project going move examples cli general soon moving back todo list assigning juleskremer make call decision reworking examples cli", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "think new directive might overkill done implementation using changedetectorref thanks notsonotso suggestion", "d": "7/2017"}, {"body": "tsconfigjson add following line enclosed json object paths angular nodemodules angular hope saves someone hours scouring web best", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "seems like content quite wide fit table cell wo scrolling option rethink page layout eliminate table format code blocks believe improve readability igorminar wardbell think", "d": "7/2017"}, {"body": "sorry ca nt reproduce problem following instructions provided problem still exists please open new issue following submission guidelines", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "yermo unfortunately nt know calling point know calling function evaluated nt qualify macro function time collected", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "thank reply appreciate evident relatively new angular universe tend use consolelog liberally help figure pieces fit together", "d": "7/2017"}, {"body": "yermo code work deleting call", "d": "7/2017"}, {"body": "yes works like champ must say incredibly impressed angular", "d": "7/2017"}, {"body": "couple weeks communication issue looked", "d": "7/2017"}, {"body": "matsko nt help", "d": "7/2017"}, {"body": "matsko nt help", "d": "7/2017"}, {"body": "believe fix", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "matsko thanks", "d": "7/2017"}, {"body": "closing duplicate", "d": "7/2017"}, {"body": "reopened issue fixed guide putting nav", "d": "7/2017"}, {"body": "related", "d": "7/2017"}, {"body": "jit aot working work place append customdecorator property comoponet binds error template parse errors ca nt bind since nt known property uiselect uiselect angular component input verify part module uiselect web component add customelementsschema ngmoduleschemas component suppress message allow property add noerrorsschema ngmoduleschemas component king selectfrom ng dynamichtmlmoduledynamicpetitioneditcomponenthtml", "d": "7/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "7/2017"}, {"body": "please add cookbook problem input error", "d": "7/2017"}, {"body": "really difficult investigate without concrete reproduction could anything typo bad configuration oclazyloadngupgradeangularjsangular issue could create runnable demo eg using plnkr minimal project check see problem action", "d": "7/2017"}, {"body": "suffering annoying bug one component changes property service resolved moving ngif parent component definitely bug", "d": "7/2017"}, {"body": "able work around using ngdocheck method calling changedetectorrefdetectchanges method", "d": "7/2017"}, {"body": "pappacurds nt caused infinite change detection cycles", "d": "7/2017"}, {"body": "might error error", "d": "7/2017"}, {"body": "update error", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "everything fine upgrading get error", "d": "7/2017"}, {"body": "article everything need know expressionchangedafterithasbeencheckederror error explains depth error occurs possible fixes", "d": "7/2017"}, {"body": "fixes obvious changing framework way update cause user applications rewrite support new minor platform update wired js still maintain old mistakes hold compatibility", "d": "7/2017"}, {"body": "error", "d": "7/2017"}, {"body": "also seeing issue downgrading resolved issue issue changing values even using end parent making changes oddly issue occurs components directives converted directive working component template began throw error", "d": "7/2017"}, {"body": "got working material input control tried set value", "d": "7/2017"}, {"body": "put together simple plunker showing case errors started showing beginning angular", "d": "7/2017"}, {"body": "created simple plunker showing error changing value even using parent component edit also created simple plunker based first example parent directive instead component error", "d": "7/2017"}, {"body": "saverett seeing different error message plunk", "d": "7/2017"}, {"body": "jsmike exactly case plunker worked around wrapping code referencing plunker", "d": "7/2017"}, {"body": "jsmike thanks heads looks like issue angularzonejs set zonejs version fix latest zonejs plunker working", "d": "7/2017"}, {"body": "matkokvesic really solution causes change occur outside lifecycle hook code example provided nt cause error using angular", "d": "7/2017"}, {"body": "jsmike agree temporary workaround using elements referenced working fine prior angular", "d": "7/2017"}, {"body": "created plunker bug descriped", "d": "7/2017"}, {"body": "fixed using code", "d": "7/2017"}, {"body": "touqeershafi use nt mean using things right way", "d": "7/2017"}, {"body": "still happening definitely bug expected behavior fixed", "d": "7/2017"}, {"body": "istiti understand proper way atleast get rid error temporary far project concern already added bug url", "d": "7/2017"}, {"body": "still happening definitely bug expected behavior fixed think agree rwngallego update already written number reusablengcontent stlye components depend viewchildren contentchildren create relationships parent child channels gettingsetting properties forth find constantly inject changedetectorref instance constructors including child classes extend components feel like intended correct behavior", "d": "7/2017"}, {"body": "ones using dynamic component like saverett using router using dynamic component think problem stated anybody changes inside think expected others nt seen yet still mystery", "d": "7/2017"}, {"body": "happening following scenario parent component uses child component child component needs data parent supply data coming promise result parent constructor parent parent template child component code throws error however adding parent component solved issue recommended solution workaround bug would implications change looks like telling angular detect changes think something avoid", "d": "7/2017"}, {"body": "sulhome problem promise parent constructor changing child component cd cycle confirmation dev mode reason error line adds second cd cycle confirmation succesful gt error everything works expected important understand works use right constructs general logic code avoid type problems read deep explanation", "d": "7/2017"}, {"body": "mlcmlapis saying right adding nt implications thought listening child pick change input parent right approach please note done still receiving error thought designed", "d": "7/2017"}, {"body": "sulhome yes helps also consequence cds depends using strategy components eliminate overhead one cd cycle true takes data using http probably easiest solution would observable service subsribe child component data emitted stream child react", "d": "7/2017"}, {"body": "ghetolay record cases bug see example opened", "d": "7/2017"}, {"body": "issue get data child component output parent componet homets homehtml isactive changed dragstart dragend error message expressionchangedafterithasbeencheckederror expression changed checked previous value true current value false ways changeadd class attribute", "d": "7/2017"}, {"body": "issue error occurs routes use solution putting code solved problem thankscredits jingglang", "d": "7/2017"}, {"body": "wernerson take look jsmike comment settimeout important note actually changing code outside lifecycle hook", "d": "7/2017"}, {"body": "issue used modify state seems emits synchron update happens cd simple solution currently know beautiful reactivefunctional code ever solution parameter emission one hope help others similar issues also concerns welcomed solution wrong dangerous", "d": "7/2017"}, {"body": "status issue still apparent angular problem production builds error happen debug builds hate workarounds manually running change detection even running settimeout", "d": "7/2017"}, {"body": "inefficient causes new change detection cycle whole application checks current component afaik", "d": "7/2017"}, {"body": "team core misunderstanding ngoninit nt docs say initialize directivecomponent angular first displays databound properties sets directivecomponent input propertiescalled first ngonchanges subscribing services keep track application state subscriptions synchronous behaviorsubjects fire subscription time angular first sets directivecomponent input properties immediately changing values simple plunker illustrating problem example tour heroes ultimately uses http asynchronous therefore nt cause issues think source confusion subscribing synchronous states constructor instead components values set immediately others thread suggested kicking second change detection via timeouts setting values later explicitly telling angular keep error appearing imho probably unnecessary article maximusk shared must read everything need know expressionchangedafterithasbeencheckederror error nothing else thread result indepth warning official angular docs", "d": "7/2017"}, {"body": "article maximusk shared must read everything need know expressionchangedafterithasbeencheckederror error thank", "d": "7/2017"}, {"body": "adamdport work case using viewchildren contentchildren modify child properties parent since children available ngafterviewinit lifecycle executed", "d": "7/2017"}, {"body": "please keep mind part issue confirmed bug user fault", "d": "7/2017"}, {"body": "problem saverett addressed correct using causing error", "d": "7/2017"}, {"body": "watching", "d": "7/2017"}, {"body": "happen pass objects angular material dialog dialog use directly rather ie something like like explained child component dialog changing values exposed parent component view", "d": "7/2017"}, {"body": "replace attribute attribute", "d": "7/2017"}, {"body": "anyone know sure intended error bug nt correct load data ngoninit move code constructor loading observable error nt thrown", "d": "7/2017"}, {"body": "wernerson ngif html beware things going rendered finished solong everything inside ngif wo nt work might lead error", "d": "7/2017"}, {"body": "reworked ngif custom controls get error message timeout certainly solution", "d": "7/2017"}, {"body": "jnord read comments know nt required", "d": "7/2017"}, {"body": "matsko another test animation rotation time use wildcard state rotate direction seems right certain degrees demo degree rotation would change direction demo", "d": "7/2017"}, {"body": "could go even protect misspelled property names inspired record type class mycomponent implements onchanges myproperty string", "d": "7/2017"}, {"body": "chuckjaz unfortunately repro discovered problem problem method visitexternalexpr inside class jitemittervisitor produce duplicate names arguments problem already reported already fixed example application index index renderer way names generated final name cases believe bug versions angular occur special cases like described", "d": "7/2017"}, {"body": "chuckjaz got working reproduction wrong renderer injected angular reproduction plain angular party widgets absolutely wierd changing conditions fix issue example removing fixes removing pipe fixes removing fixes removing injection fixes reordering checkbox custom control html fixes really understand causes note code works problem", "d": "7/2017"}, {"body": "janousek right similar issue angular problem nothing renderer tokens mixed compiler used key plunker provided tytskyi observe also understand comes", "d": "7/2017"}, {"body": "tytskyi alexzuza thanks excellent work tracking", "d": "7/2017"}, {"body": "resolved via", "d": "7/2017"}, {"body": "nt forget fix well", "d": "7/2017"}, {"body": "guide back navbar one fixed reopening changelog one", "d": "7/2017"}, {"body": "one warning sure anything done", "d": "7/2017"}, {"body": "thinking could add hidden tag", "d": "7/2017"}, {"body": "perhaps configure processor ignore file", "d": "7/2017"}, {"body": "add hidden need make sure nt pick", "d": "7/2017"}, {"body": "trick", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "guess would work css like best friends", "d": "7/2017"}, {"body": "probably fix tooltip removing attribute element component initialized", "d": "7/2017"}, {"body": "closing worst offender fixed navigation menu items useful accessibility feature also points turn ff", "d": "7/2017"}, {"body": "matsko updated animation firing", "d": "7/2017"}, {"body": "matsko updated issue remains", "d": "7/2017"}, {"body": "bretto looks like got working similar issue injected child component trying figure pointers", "d": "7/2017"}, {"body": "mackelito sorry nt pointers still trying example still working current issue leave animation triggered sorry waiting someone better understanding matter build solid ground understanding", "d": "7/2017"}, {"body": "kind solved animations set child component kind hoping leave child component clean minimalistic find pros keeping animations child well", "d": "7/2017"}, {"body": "got plnkr share", "d": "7/2017"}, {"body": "sadly quite easy moved trigger child used enter transition", "d": "7/2017"}, {"body": "fighting issue rollup tree shaking build pinpointed string enum introduced typescript typescript component export class optimisticlockcomponent implements oninit string enums work right rollup export enum optimisticlock conflict conflict noconflict noconflict changing string literals works fine typescript export class optimisticlockcomponent implements oninit worth noting type great state management library derivablejs quite like idea string seems like nice type safe way work directives templates course compiled implementation object like compile continue look original implementation compiles fairly wonkey mess nested arrays perhaps string straightforward implementation might something chokes reference versions angularcli node os angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli typescript tsickle rollup", "d": "7/2017"}, {"body": "tsickle yet support typescript note typescript follow semantic versioning point release typescript treated breaking change release per semantic versioning sometimes patch release also breaking changes far tsickle concerned", "d": "7/2017"}, {"body": "issue normal application spa html js", "d": "7/2017"}, {"body": "believe fixes problem release tomorrow thursday", "d": "7/2017"}, {"body": "ran issue input type number fields causing form control error standard attributes angular v tested windows chrome firefox edge ubuntu chrome firefox unable see errors supported feature angularforms would great feature add", "d": "7/2017"}, {"body": "aaronfrost also stuck situation unable specify injector want downgradecomponent use resolve componentfactory suppose uses routing automatically take injector loaded module router parent injector moment using system module loader load dynamically created module given path new ideas welcome", "d": "7/2017"}, {"body": "petebacondarwin implemented suggested aaronfrost tested code wrote seems work fine nt want go forward know part official angular implementation", "d": "7/2017"}, {"body": "certainly breaking change enterprise application case tabs independently navigated track current route tab array global service use navigationend event store route tab user navigates within said tab time able fix issue moving event subscription constructor changed javascript constructor private router router private route activatedroute public tabsservice tabsservice javascript constructor private router router private route activatedroute public tabsservice tabsservice must detect routes constructor longer occur ngoninit thisstoreroutesafternavigation", "d": "7/2017"}, {"body": "also bitten clearly breaking change case needed trigger scroll element user selected navigate another page use case children routes possible use without subscribing router events simplified extremely hackish version javascript private viewready behaviorsubject new behaviorsubject false constructor private router router private route activatedroute thisrouterevents filter ev gt ev instanceof navigationend switchmapto thisviewready filter ready gt ready subscribe ready gt const queryparams thisroutesnapshotqueryparams queryparams myelementid scroll ngafterviewinit thisviewreadynext true hackish breaking change looks like regression anything missing", "d": "7/2017"}, {"body": "also happens nested calls", "d": "7/2017"}, {"body": "progress front problem component update ok removed inner keeping content functions container parent animation looks good maybe error message better explaining situation would helpful", "d": "7/2017"}, {"body": "update hope could fixed", "d": "7/2017"}, {"body": "yes worked", "d": "7/2017"}, {"body": "thanks reporting issue luckily already fixed one recent releases please update recent version resolve problem fixed", "d": "7/2017"}, {"body": "seems fixed upcoming", "d": "7/2017"}, {"body": "seems like awkward way executing something microtask often seeing", "d": "7/2017"}, {"body": "way people seem think neater way getting initial data component gets loaded instead using promiseobservable revert async seems easy mistake make put completely forget nt control execution method even article suggests end use everywhere use promise bit difficult say often web think main place people would think using anything possible", "d": "7/2017"}, {"body": "sure explicit warning needed nt interfere angular lifecycle hooks equivalent saying something like executes lambda microtask", "d": "7/2017"}, {"body": "see something works like waits promise return carrying instantiation", "d": "7/2017"}, {"body": "chuckjaz quite pauses await used certainly changes order hooks finish even nt cause problem angular think counter intuitive robwormald interpreted teammate intention looked like another way using within component nt used wanted raise question understand whether cause problems future personally nt love even wanted better make sure everything else initialised uninitialised state making requests sequential making one see hooks triggers angular nt care happens afterwards feel like poor coding practice unless wait finish", "d": "7/2017"}, {"body": "rewrite issue description make clear recommending", "d": "7/2017"}, {"body": "chuckjaz quite happy close one honest judging answers problem someone use awkwardnot recommended coding practice sure whether value making shortcut resolvers sorts", "d": "7/2017"}, {"body": "thanks", "d": "7/2017"}, {"body": "typical web behavior outside scope angular", "d": "7/2017"}, {"body": "hi igor mean typical web behavior", "d": "7/2017"}, {"body": "using without works", "d": "7/2017"}, {"body": "hi andrewseguin checked reproduction looks fixed angular test green", "d": "7/2017"}, {"body": "awesome thanks tytskyi", "d": "7/2017"}, {"body": "figuerres bug negates usefulness canload guard many cases common case user bookmarks url lazyloaded module requires auth let call user sends url friend sometimes later friend clicks link step kicksin amp wants possibly prevent unnecessary fetch friend redirected login page authenticated first friend authenticated system recollection redirect friend unhappy friend question send link lazyloaded module expect recipient link make destination post authentication example disable canload guards let canactivate guarding yes friend paid price loading chuck probably decided even follow auth toxicable special case bookmarking example normal common usecase", "d": "7/2017"}, {"body": "like special someone comes lend something good luck getting back constructive humor", "d": "7/2017"}, {"body": "programmatic ie javascript problem styling ie css problem", "d": "7/2017"}, {"body": "nt know way solve either js css currently problem smiley bth feels like chrome bug update viewport height scrolling instead done scrolling", "d": "7/2017"}, {"body": "ccrowhurstram explained toxicable violates unidirectional dataflow directly correctly reported error design mode second example still violates principle way tolerate order change notifications sent nt see change change occurred view phase change detection assertion consistent understandable something promise guarantee must change detection phases must limitation changes tolerated deciding structure template templates included render templates composed projection view rendered interpolations evaluated", "d": "7/2017"}, {"body": "glad xliff working team microsoft using extensively well way tool screenshots", "d": "7/2017"}, {"body": "new localization tool currently beta send information", "d": "7/2017"}, {"body": "duplicate", "d": "7/2017"}, {"body": "run think issue well debugging router code looks like child routeroutlets get reactivated reattaching component tree child routeroutlets recently created component tree remain active even detatching see mean page hierarchy looks like tab tabidview tab tabidforms using custom route reuse strategy store load new cached component tabid changes tabcomponent tabid level contains routeroutlet view forms component start create new tab navigate navigate back try navigate formscomponent appear still see viewcomponent navigate back formscomponent trying load tab appears tab routeroutlet hopefully helpful fixing bug routereusestrategy something going supported angular team really hope guys", "d": "7/2017"}, {"body": "hi macjohnny facing problem find solution apart running everything aot checking plnkr nt spot differences modulea moduleb understand one module working", "d": "7/2017"}, {"body": "nbuso difference modulea moduleb moduleb import modulec done modulea import modulec done order run jit aot ended importing directly file module actually declared hope helps", "d": "7/2017"}, {"body": "sounds similar encompass suggestion covered", "d": "7/2017"}, {"body": "referencing article quote angular documentation done whole faq ngmodules still quite mess teach courses students often confused decided sum post everyone make ngmodules simpler dry big win everyone", "d": "7/2017"}, {"body": "sorry ca nt reproduce problem following instructions provided problem still exists please open new issue following submission guidelines", "d": "7/2017"}, {"body": "thoughts anyone angular team put code assign values model inside components work around", "d": "7/2017"}, {"body": "need provide better way people use consolelog server code without going infinite loop", "d": "7/2017"}, {"body": "vikerman made pr please review", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "actionable fix make sure consolelog outside angular zone deal problem anything async within cause another render would run get around making sure nt cause another render need typescript ngafterviewchecked const currentzone zonecurrent const rootzone zoneroot thisalreadydidasyncwork nt trigger changedetection rootzonerun gt async work xhrget data gt make sure trigger changedetection need currentzonerun gt thisdata data thisalreadydidasyncwork true also really important know developer would likely want use rather anything developer within likely hacky sideeffect avoided developer use feature need aware everything going likely lot ifstatements see change detection loop", "d": "7/2017"}, {"body": "fix", "d": "7/2017"}, {"body": "using angularcompilercli others nt work index suffix added", "d": "7/2017"}, {"body": "merrillpaul thx helps", "d": "7/2017"}, {"body": "another way use latest compiler post processing like", "d": "7/2017"}, {"body": "chuckjaz update issue currently stopping team updating angular angularcli using latest cli pinned causes", "d": "7/2017"}, {"body": "updated plunker latest release issue still present cc matsko", "d": "7/2017"}, {"body": "updated plunker latest release regression still present", "d": "7/2017"}, {"body": "alright dharders believe fixed issue pr", "d": "7/2017"}, {"body": "thank persistent", "d": "7/2017"}, {"body": "thanks matsko way test pr plunker ie travis ci generate build link etc wait merged link nightly thanks appreciate work", "d": "7/2017"}, {"body": "pushed branch builds code test use inside packagejson", "d": "7/2017"}, {"body": "works perfect thanks", "d": "7/2017"}, {"body": "spent hours hunting bug discover impossible fix without abandoning modular paradigm good look", "d": "7/2017"}, {"body": "possible keeping things modular see though would nice built framework", "d": "7/2017"}, {"body": "seriously love implemented even though breaks modular design would make life timer easier leveraged solution passing childinjector service ask componentfactoryresolver component want render hackish works", "d": "7/2017"}, {"body": "renatoaraujoc exactly code weird easy understandmaintain said child injector lazyload required usecases keep would ask new options like hope receive news asap app already big lazyloadmodule", "d": "7/2017"}, {"body": "workaround disable tsconfigjson add lint rule basically typescript", "d": "7/2017"}, {"body": "explaning use ajafff alternative install top tslint file add tslint rules add remove", "d": "7/2017"}, {"body": "actually impact app significant way moving todo", "d": "7/2017"}, {"body": "think found issue juste default error handler angular run outside angular workaround used export class customerrorhandler extends errorhandler constructor private zone ngzone super public handleerror err void thiszonerunoutsideangular gt superhandleerror err export function loggerfactory ngzone ngzone return new customerrorhandler ngzone ngmodule providers provide errorhandler usefactory loggerfactory deps ngzone", "d": "7/2017"}, {"body": "vikerman guys working migrated quite big app company universal last week rollback several times due issue fact infinite loop wo nt stop server meaning without workaround possible app production universal assuming app big enough bugs exist", "d": "7/2017"}, {"body": "sorry delay started investigating root cause got pulled things root cause happens platformserver platformbrowser consolewarn nodejs actually results zonejs task invocation causes ngzone emit microtaskempty triggers change detection turn throws exception trying figure right place fix", "d": "7/2017"}, {"body": "also problem updating angular gt", "d": "7/2017"}, {"body": "behavior introduced pull request", "d": "7/2017"}, {"body": "yes closing duplicate", "d": "7/2017"}, {"body": "nekkon plunker nt work demonstrate make work original plunker listens scroll events element nt scroll case would work example window content scrollling content added event binding", "d": "7/2017"}, {"body": "zoechi update getting fixed attached preview show issue", "d": "7/2017"}, {"body": "actually found workaround must easier way get current url though", "d": "7/2017"}, {"body": "solution run hit error save file recompiles successfully way running", "d": "7/2017"}, {"body": "michaelcpell removed compilerproviders appmodule", "d": "7/2017"}, {"body": "possibly relates", "d": "7/2017"}, {"body": "issue ng version fix problem use importing noopanimationsmodule browseranimationmodule core module mostly limit use noopanimationsmodule browseranimationmodule whole app think break lazy module concept", "d": "7/2017"}, {"body": "yup good", "d": "7/2017"}, {"body": "hi getting error simply use component view use async pipe like plus ngif statements example would recommendation avoid getting specifically reconnecting network app goes offline online displays data first time reading dozens threads suggested workarounds however event emitting child components providers could try tweaks simply use async pipes outofthebox observables new angular observables wrong grateful tipsbest practice properly bind eliminating", "d": "7/2017"}, {"body": "bnfrnz would able replicate issue plunkr know tedious time consuming long run adding examples issues make great contribution community dovid", "d": "7/2017"}, {"body": "dovidweisz thanks responding quite swamped moment wo nt able put something together right yesterday found solution seems acceptable basically got rid pipe always unwrapping observables error stopped occurring", "d": "7/2017"}, {"body": "issue perhaps candidate release nt ready", "d": "7/2017"}, {"body": "issue ticket close", "d": "7/2017"}, {"body": "issue appending removes error still animations angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularcdk angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli", "d": "7/2017"}, {"body": "clementvidal stevenmyhre kykint design explanation happen angular report error used inside transition viceversa", "d": "7/2017"}, {"body": "matsko main problem nt use enter inside enter transition getting bug last versions", "d": "7/2017"}, {"body": "kykint ok see please put together plunkr debug", "d": "7/2017"}, {"body": "matsko similar example created stevenmyhre try make example tomorrow", "d": "7/2017"}, {"body": "kykint based going provided example falls back saying enter transition occurring page loads see empty animation quering enter leave happens picks enter animation transition page loads goes report problem clearly error message", "d": "7/2017"}, {"body": "matsko still new transitions give hint would fix plunker linked animate valid query", "d": "7/2017"}, {"body": "matsko btw example ts problem page load app working", "d": "7/2017"}, {"body": "appreciate adjustment much angularjs using state keep track back forward new path actions storing index way able manage kind sessionstate handle fe dirty formdata etc please", "d": "7/2017"}, {"body": "say starting agree darincardin immense amount dev time spent trying make things work even close worth could built framework", "d": "7/2017"}, {"body": "super crucial conference talks always said lazy load everything use candeactivate functionality check changes component navigating", "d": "7/2017"}, {"body": "issue", "d": "7/2017"}, {"body": "chuckjaz planned resolved near future", "d": "7/2017"}, {"body": "getting problem disable lazyload break module several small modules", "d": "7/2017"}, {"body": "called component route nt currently lazy loaded routes treated componentless routes call guards component route mounted defined put guard get component general means guard knows component type placed module declares component least route component ccing owners router clarification whether behavior changed cc vicb jasonaden", "d": "7/2017"}, {"body": "update fix facing similar issue", "d": "7/2017"}, {"body": "problem ca nt access current component instance tried get current component instance failed injectable export class routerguardservice implements candeactivate constructor private router router private injector injector private componentfactoryresolver componentfactoryresolver candeactivate component cancomponentdeactivate component thisrouterurlindexof templatedetail gt return thiscomponentfactoryresolver resolvecomponentfactory templatedetailcomponent create thisinjector instancecandeactivate code making new instance component working key code solve problem get current component instance ca nt found", "d": "7/2017"}, {"body": "good one came across question ebcause import beucase components declared depend modules thought would avoid duplication example importing modules nt see documentation telling", "d": "7/2017"}, {"body": "case thought chunk size dist file size first dist folder vendor file size okay ng build prod aot chunk polyfills kb initial rendered chunk main kb initial rendered chunk styles bytes initial rendered chunk vendor mb initial rendered chunk inline bytes entry rendered folder dist", "d": "7/2017"}, {"body": "nt understand vendor file size mine massive imports accurate need really dig deep find going get home still around even thing nt even third party modules rxjs bootstrap jquery nothing much else", "d": "7/2017"}, {"body": "lansana followed angular tutorial looks okay git clone tutorial bulid check file size right looks right code configuration caused issuse case would better create plunkr test code would good someone look", "d": "7/2017"}, {"body": "servers angular angular material served nt support gzip nt change fact browser still parsing multiple mbs js build fully compressed vender files loaded nt seem right", "d": "7/2017"}, {"body": "vendor bundle probably compressed try zipping os see file size nt reduce original size server host support gzip natively configure server dynamically compress files using compression middleware eg expresscompression using node", "d": "7/2017"}, {"body": "fully optimized said servers using support gzip nt expected use gzip order get realistic file size", "d": "7/2017"}, {"body": "nt expected use gzip order get realistic file size lightweight crucial project might want consider trying view library like react vuejs angular properly supports serverside rendering platformserver documented unfortunately since angular complete framework size large getting porduction files less even compression trivial read people experimenting closure compiler getting builds size said servers using support gzip express compression middleware compression fly client requests resources need server support gzip files meaning files uploading server going original files built using ng build command asis without compressed", "d": "7/2017"}, {"body": "question curiosity server type use nt know nt support gzip compression type", "d": "7/2017"}, {"body": "hunderlinek little late think pretty misleading advertise hello world app real use case app easily get mbs issue end realizing think needs well known potential angular developers mlcmlapis server static files sent serving multiple projects large company modifying server software settings simple task tomcat", "d": "7/2017"}, {"body": "nt recall official documents advertising size nevertheless still believe able serve files gzip format client angular work server whatever architecture support nodejs development environment support nodejs simply build angular project top express project compression middleware edit guess understand problem serve static files server support node back end", "d": "7/2017"}, {"body": "also want chime remind like johnrivelt mentioned chunk size reported cli file size disk disk vs reported sure reporting different", "d": "7/2017"}, {"body": "sorry necro semi old issue think might actually something want access property part htmlelement either attr class style fallback using elementref satisfactory attempting run webworker chance goes window moment property accessed would imagine something like would work ts directive selector child export class childcomponent however nt per child directive put think many valid usecases reading attribute actual dom element would useful without actually accessing native element needed make seperate featurerequest issue find searching github", "d": "7/2017"}, {"body": "zlepper related", "d": "7/2017"}, {"body": "nt believe talking using one componentdirective affect componentsdirectives least read talking affectingreading native component something right using native element elementref", "d": "7/2017"}, {"body": "zlepper mdn htmlelementoffsetheight readonly property height element including vertical padding borders integer course set value try using something like would found working fine", "d": "7/2017"}, {"body": "yes indeed interested reading property ca nt use style classname want work something dynamic heights depending content reason mentioned writing property think would inline also adding read capabilities would fine reading actual usecase", "d": "7/2017"}, {"body": "zlepper since meant setting value currently expected behavior think make new proposal mechanism reading dom properties", "d": "7/2017"}, {"body": "alright thank edit done", "d": "7/2017"}, {"body": "nt classical case", "d": "7/2017"}, {"body": "fkolar thanks solution worked", "d": "7/2017"}, {"body": "anything needed fixed angular", "d": "7/2017"}, {"body": "plunkr switching destroy expected behavior user switch scope detached component destroyed", "d": "7/2017"}, {"body": "please reopen issue", "d": "7/2017"}, {"body": "indeed use case using radar time priorities amount users data application growing users complaining certain amount time application getting slow due high memory cpu usage suspect related issue thanks scott adding plunkr please reopen", "d": "7/2017"}, {"body": "vsavkin seems either need add extra hook like destruction", "d": "7/2017"}, {"body": "updated latest angular material version since created regularly closing", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "resolved pr", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "integration tests async apart trying speed dgeni increase timeout length much keep eye", "d": "7/2017"}, {"body": "matsko working throwing error browser console error error found synthetic property disabled please include either browseranimationsmodule noopanimationsmodule application sample plnkr", "d": "7/2017"}, {"body": "yes sorry bug pr intended fix failed make release show week release meantime get around error add empty animation component contains template something like", "d": "7/2017"}, {"body": "lokeshdaiya fixed issue master release pop within next couple days", "d": "7/2017"}, {"body": "thanks matsko update", "d": "7/2017"}, {"body": "days searching way implement internalization whole project including dynamic data found nothing concrete please suggest something else least help time thank", "d": "7/2017"}, {"body": "matsko ping issue opened april even seen preliminary guidanceassessment core angular team unfortunate cc vicb", "d": "7/2017"}, {"body": "conclusion ca nt use ngif else without ngtemplate oo", "d": "7/2017"}, {"body": "opensourced sharpanglesangulardynamic enterprise app due folks asking solves alot compexities arise scenarios projecting state dynamic loaded components parties dynamic loading scenarios outside systemjs etc", "d": "7/2017"}, {"body": "ericabc interesting read detaily", "d": "7/2017"}, {"body": "still fix", "d": "7/2017"}, {"body": "think worked around setting route directly instead triggering back navigation leave open moxxnull amp experiencing issue", "d": "7/2017"}, {"body": "reason problem went away still experience time time effects ui", "d": "7/2017"}, {"body": "comes goes maybe race condition", "d": "7/2017"}, {"body": "experiencing issue ui changes hope agree changing values formarray via ui definitely change form dirty pristine status experience sorry nt plunker handy since working internal code upgrade angular fro avail hoping gets recognized current bug", "d": "7/2017"}, {"body": "replaced broken link demo page working link good measure", "d": "7/2017"}, {"body": "anybody issue building ionic caused big problems ionic push ionic push service app commented stopped loading service everything worked fine investigate perhaps log bug report ionic ionic framework ionic app scripts angular core node", "d": "7/2017"}, {"body": "angular problem still occurs plans fix", "d": "7/2017"}, {"body": "anyone able reach conclusion mr eiffel curious", "d": "7/2017"}, {"body": "stephenfluin tbosch mohibwasay mmathys xetys maxailloud others officially say solution using ngtoolswebpack worked working repo changes made mirroring part production skeleton build say grab bootstraps thought typescript strict well ts files since aot going straight source typecheck templated files bear produce dist folder section error free definately difference noticed version opposed ejected version angularcli using version believe sidenote really need find good template linter aot compatible suggestions suggestion use build starting via webpack start thing really intercept ts loader configuration everything else pretty much used latest version could find ngtoolswebpack think probably perhaps confusing thing process configuring versions webpack ts ngtoolswebpack utilizing together get expected result work process exactly described tbosch stephen lets webpack run build runs aot angular application main suggestion would provide versioning ngtools performance benchmarking testing post results thanks angular team super helpful supportive issue hope help others", "d": "7/2017"}, {"body": "windows users tsconfigjson typescript configuration file located somewhere root folder must identify path p option p pathtotsconfigjson also follow quotes order", "d": "7/2017"}, {"body": "workaround template driven forms set email false value empty ensure initialize model value empy string", "d": "7/2017"}, {"body": "closing please reopen still issue grin", "d": "7/2017"}, {"body": "alxhub fixed latest release new http client", "d": "7/2017"}, {"body": "version new class httpclient allows arbitrary methods believe possible something like thishttpclientrequest merge", "d": "7/2017"}, {"body": "esanzgar many thanks nt pickup difference new module sorts", "d": "7/2017"}, {"body": "retested angular issue still present update issue", "d": "7/2017"}, {"body": "would acceptable jit decent stands jit atrociously slow whole aot turning giant mess", "d": "7/2017"}, {"body": "news one projects use custom decorator autounsubscribe wrote netanelbasal still impossible use aot maybe interesting implement next release", "d": "7/2017"}, {"body": "kmathy work aot method must present even empty otherwise optimize away calls even method added autounsubscribe decorator", "d": "7/2017"}, {"body": "use custom decorator add method ngondestroy explicitly great", "d": "7/2017"}, {"body": "confirmed exactly firefox", "d": "7/2017"}, {"body": "eta feature", "d": "7/2017"}, {"body": "ca nt confirm attached plunker latest chrome see screenshot could please check happens side record timeline share clear description part stack looking also make sure measure performance following conditions prod mode aot latest browser version incognito mode extensions disabled kind expecting got extension interferes elements impossible confirm without exact reproduce", "d": "7/2017"}, {"body": "ran today activity issue months new behavior longer case property fromgroup ignores disabled children values phrased differently equivalent currently returning thing would nice know intended bug", "d": "7/2017"}, {"body": "managed get around issue following code third argument type tested chrome", "d": "7/2017"}, {"body": "ok happen nowhere facts osx using chrome official build nt happen firefox nt happen safari nt happen chrome official build deterministic happens times update chrome probably caused information app happens happens specific page exists module module lazy loaded clear track source since webpack chunk take load lazy loading cause tried eagerly result page load module dev page shows lot components like baselineshowcase thing internal use testing cc tbosch vicb", "d": "7/2017"}, {"body": "updates guys seems like big issue similar problem errors creating component navigating router stop working way recover besides reloading app", "d": "7/2017"}, {"body": "would nt expect changed ensure exceptions handled ugly workaround call invoke change detection get application back working state used able show user application crashed reloaded", "d": "7/2017"}, {"body": "related would useful chain errors showing missing service requested", "d": "7/2017"}, {"body": "seems fixed", "d": "7/2017"}, {"body": "might update official website big section treeshaking using rollup unused formsmodule removed bundle reality stay whole listed ngmodule imports provide example tour heroes rollup see working make clarifications regard website way see closure compiler provides working treeshaking outcome buggy errorprone especially rely thirdparty packages including angular define lots externs cases closure compiler conventions met also issues closure compiler latest versions might break code even stick conventions eg working formdata angular externs avail", "d": "7/2017"}, {"body": "infos current beloved angular cli issue steps reproduce made npm package based angularcli downloadextract eg c temp start new ng project add npm package run edit usage html gt nice works gt dont foo error comes nt get part gt run works change config version webpack etc suggestions current packagejson project webpack ejected whyfailzip save guys time angularcli project failing ng build prod", "d": "7/2017"}, {"body": "iqmeta private npm module export ngmodule component already declared inside exported plus library already bundled raw typescript appcomponent like typescript import iqmetasometestmodule iqmetasometest ngmodule imports iqmetasometestmodule export class appmodule think use production environment config use aot mode please check", "d": "7/2017"}, {"body": "tytskyi thanks lot call learning curve putting module worked looks good maybe worth blog post somewhere lot examples tried outdated mean bundled compiled everything together ngc gulptypescript ngc got metadatajson guess main reason ng build recognised componentsmodules gt please add pipe directive component annotation error latest angular test library output sure needs clean looks also bit nicer target project import mymodulemodule iqmetasometest ngmodule declarations appcomponent imports browsermodule mymodulemodule providers bootstrap appcomponent export class appmodule", "d": "7/2017"}, {"body": "directives component deprecated angular amp using wrong package uses component directives aceeditordirective moved new fork suggested author works angular info", "d": "7/2017"}, {"body": "zakhenry thanks solution indeed importing dependency uses reflectmetadata import polyfills trick well", "d": "7/2017"}, {"body": "exact issue causing issue silly mistake created new file extension js instead ts fix renamed js ts hope helps somebody similar mistake", "d": "7/2017"}, {"body": "issue cant add internalization module build aot production angular fix", "d": "7/2017"}, {"body": "issue adding modules declarations instead imports suggest adding clearer error msg similar cases adding comments new app generated cli like", "d": "7/2017"}, {"body": "tests added", "d": "7/2017"}, {"body": "aebmknrl plunkr import import explicitly app extended plunkr importedexported make work maybe missing export make work think issue quite issue author experiencing", "d": "7/2017"}, {"body": "maciejtreder struggled problem quite similar found statically imported module lazy loaded parent module double check importing lazy loaded module statically sounds like good candidate rule", "d": "7/2017"}, {"body": "also experiencing problem", "d": "7/2017"}, {"body": "anyone know workarounds eg way manually cancel executing animation delay second one done", "d": "7/2017"}, {"body": "updates good alternatives ideas support cookie authentication", "d": "7/2017"}, {"body": "dannyhuly already working set true make request typescript const options optionswithcredentials true options", "d": "7/2017"}, {"body": "sorry withcredentials works intended cookie set secure nt implement issue closed", "d": "7/2017"}, {"body": "hi issue closed think browser related produce error google chrome version higher version like google chrome version firefox issues", "d": "7/2017"}, {"body": "news", "d": "7/2017"}, {"body": "v problem", "d": "7/2017"}, {"body": "hey matsko unfortunately example nt work animation inside another component instead component parent transition always fires correctly transition never fires immediately removed edited plunker show others running even latest", "d": "7/2017"}, {"body": "plunkr reproduces error guard", "d": "7/2017"}, {"body": "issue similar stevencohn one able fix installing dependencies yarn instead lost functionality code started working multiple locallybuilt libraries", "d": "7/2017"}, {"body": "unexpected value datatablemodule imported module appmodule please add ngmodule annotation", "d": "7/2017"}, {"body": "confirm mentioned solutions working problem caused using symlink running npm link yourlib populated nodemodules folder library project dist subdirectory remove symlink copy dist folder nodemodules delete nodemodules library project build library dist folder inside library project", "d": "7/2017"}, {"body": "ok got problem stop generating", "d": "7/2017"}, {"body": "pushpann problem solve issue", "d": "7/2017"}, {"body": "trying run frontend newly released angularcli working need set headers app makes server side ajax requests origin header anyone know updated method set headers http requests done app using platformserver angular", "d": "7/2017"}, {"body": "tbosch planned fixed", "d": "7/2017"}, {"body": "problem wrapped values well explained though sure issue", "d": "7/2017"}, {"body": "diestrin true fix", "d": "7/2017"}, {"body": "sorry bug closed nt follow updates possible create small repro flickering symptom could many different root causes could bug maybe pattern app change document better mrcroft system issue totally different please open separate bug sounds like issue systemjs setup able announcement cli support platform server soon", "d": "7/2017"}, {"body": "im curious thought process behind change cant find anything angular docs indicates safe way non directly manipulating dom set focus element stack overflow advice recommends directly manipulating dom using depreciated renderer api", "d": "7/2017"}, {"body": "behaviour causes important security bug software news dates fixing issue", "d": "7/2017"}, {"body": "tytskyi yes acceptable workaround well using problem opening dialogs within observable chain dialog opened closed conditions verified ngrx store", "d": "7/2017"}, {"body": "problem reported", "d": "7/2017"}, {"body": "also happening nested using watch changes child outlet example spinnercomponent ts component selector appspinner templateurl spinnercomponenthtml styleurls spinnercomponentscss export class spinnercomponent implements oninit ondestroy public visible true private subscription subscription constructor private loaderservice loaderservice public ngoninit thissubscription thisloaderserviceloaderstate subscribe state loaderstate gt thisvisible stateshow public ngondestroy thissubscriptionunsubscribe settimeout still nt work", "d": "7/2017"}, {"body": "dgroh subscribe routerevent use start end event turn spinner", "d": "7/2017"}, {"body": "duplicate", "d": "7/2017"}, {"body": "ivanpadavan work around work regular angular class instead angular component ngoninit called angular class implements oninit", "d": "7/2017"}, {"body": "ivanpadavan tried work around nt work thisinjector basecomponent undefined ngoninit called", "d": "7/2017"}, {"body": "ivanpadavan used work around fix issue brake uncomment line appts got following error error referenceerror injector defined appbasengoninit appts appngoninit appts", "d": "7/2017"}, {"body": "cindysliu stead use", "d": "7/2017"}, {"body": "problem issue slightly different hostbinding component moved animations refactor", "d": "7/2017"}, {"body": "encountered error replacing fixed somehow though equivalent animation one transition worked expected", "d": "7/2017"}, {"body": "closing issue see conclusion came", "d": "7/2017"}, {"body": "also mentioned official docs nt see reference breaking change", "d": "7/2017"}, {"body": "used code get problem get version use ngcli angular angularcli node os linux angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice used new project", "d": "7/2017"}, {"body": "updated example version asks custominput although input", "d": "7/2017"}, {"body": "alekcei injected ts export function compilerfactory return new jitcompilerfactory usedebug false usejit true createcompiler providers provide compiler usefactory compilerfactory versions going try duplicate simpler project", "d": "7/2017"}, {"body": "need simple project plese add repo", "d": "7/2017"}, {"body": "alekcei omitted though nt relevant line also imported module seems also needs decorated", "d": "7/2017"}, {"body": "gatimus yes must done components module want try collect everything via webpack nt remove decorators remove decorators decorator input fields also removed know create", "d": "7/2017"}, {"body": "paladinium nt think actually getting required basically achieved following javascript code nt need runtime compiler aot bundled library file whenever loaded take care scan document rendered accordingly documentgetelementbyid someidentifier innerhtml using templatecontent actually adding component selector html say dynamically compiled rendered component able achieve like following", "d": "7/2017"}, {"body": "vasuneet following html link link side div navigated link inside behavior", "d": "7/2017"}, {"body": "equivalently innerhtml", "d": "7/2017"}, {"body": "alekcei agree solution provided attachment using runtime compiler actually paladinium provide sample code using runtimecompiler aot good", "d": "7/2017"}, {"body": "vasuneet", "d": "7/2017"}, {"body": "alexzuza thanks sharing example dynamically injecting already build component looking solution rendering dynamic component template decide runtime also require runtimecompiler along aot provided solution example runtimecompiler along aot", "d": "7/2017"}, {"body": "vasuneet easily found packagejson", "d": "7/2017"}, {"body": "alexzuza using complex component containg attributes work", "d": "7/2017"}, {"body": "alekcei mean try", "d": "7/2017"}, {"body": "alekcei used github project problem input decorator actually used simple workaround instead using input removed entirely component used inputs instead metadata example button component would", "d": "7/2017"}, {"body": "cybey thank probably need move webpack prod build", "d": "7/2017"}, {"body": "use", "d": "7/2017"}, {"body": "progress issue testing form components async validators big pain right moment positive results tests use inside trusted", "d": "7/2017"}, {"body": "check everything need know expressionchangedafterithasbeencheckederror error article indepth explanation cause error need check produces error", "d": "7/2017"}, {"body": "component summarized export class credentialspage implements oninit constructor private fb formbuilder form formgroup ngoninit thisform thisfbgroup email validatorsrequired validatorsutilemail template summarized gives error love angular template services amazing error able get rid dont understand bug something wrong error shown html file everything else works fine hope code example good chuckjaz way illustrate problem maybe create plunker something dont time right hope helps thank", "d": "7/2017"}, {"body": "nt know originally caused issue nt seen going assume fixed along way close", "d": "7/2017"}, {"body": "try casting event accessing", "d": "7/2017"}, {"body": "workaround", "d": "7/2017"}, {"body": "domenic curious take custom element allowed set classes everything attributes", "d": "7/2017"}, {"body": "think class explicitly meant used consumers custom element modify classes", "d": "7/2017"}, {"body": "spoke polymer team today said agreed element setting class easy get stomped longer used set earlier version preview switched think one exception class left input modality polyfill", "d": "7/2017"}, {"body": "able select component instantiate based runtime decision obvious requirement user interface framework able bind inputs outputs component makes feature pretty much useless moment", "d": "7/2017"}, {"body": "fyi exposed sharpanglesangulardynamic since others asking exposes componentref separates concerns projecting state vs dynamic loading precompiles state mapping per component type supports child components knowledge library nt require type reference lazy loading etc also stuff help map dynamic form hierarchies use npm packages directly large enterprise system gets maintained nt add output yet would pretty simple add implementation demand", "d": "7/2017"}, {"body": "dzmitryshylovich create event contain component instance doc", "d": "7/2017"}, {"body": "titusfx nt merged yet", "d": "7/2017"}, {"body": "dzmitryshylovich need feature asap copy paste directive implementation merged exactly could mean copy code paste file suppose nt enough right", "d": "7/2017"}, {"body": "almost positive could enable plugins feature", "d": "7/2017"}, {"body": "feature would awesome similar requirements erp project working unfortunately ca nt use angular much would like", "d": "7/2017"}, {"body": "also endorse feature enterprise content management system serve pages database end users modify html file using html text editor perform n number tasks want redevelop client application using angular feature stopping us", "d": "7/2017"}, {"body": "dynamic html fine cant easily use dynamic templates recall templates simply js code html run aot need compiled therefore cms type system allow user edit html without adding new angular components pipes directives services fine even use existing components runtime replace compiled working components application example angulario see things changed angular angularjs better things like aot applications much faster provide better user experience situations need think problem another light rather expecting work exactly", "d": "7/2017"}, {"body": "toxicable performance effect creating components fly developed sample creating components fly want evaluate performance using production", "d": "7/2017"}, {"body": "first thing consider dependancies creating components fly different dependancies cause issues secondly compile angular code browser use users processor thirdly forever tired slow big jit compiler see running application jit mode", "d": "7/2017"}, {"body": "toxicable wondering pass dependencies component created fly responsibility component creating show decent example", "d": "7/2017"}, {"body": "needs simply allow customer organize visual display data way want use angular components need reorganize html client clients roles role unique layout angular components hundreds unique html templates use common angular components nt uncommon looked dynamically creating forms using angular may work html template cached ready much faster look dynamically creating html putting component dynamically derived holding hope perform html template contains exact angular artifacts dependencies components whatever seems reasonable able swap template get new layout", "d": "7/2017"}, {"body": "pass parent components created fly use services already exist want new services need load module glwbkfs exactly mention already angulario exactly use angular components organized different ways content pages runtime html components swapped preexisting running components example seen think lib also thing basically aslong wanting anything dynamically created totally realm angular offer", "d": "7/2017"}, {"body": "toxicable see docviewer component pre rendered html returned server dont want keep prerendered html server want get html template render component achieve", "d": "7/2017"}, {"body": "nt understand mean prerendered html input documents normal html find html page since might misunderstand works made small demo applied", "d": "7/2017"}, {"body": "something like title html returned server angular wo nt resolve using technique", "d": "7/2017"}, {"body": "nope never said would something like requires template compiled said basically aslong wanting anything dynamically created totally realm angular offer meaning want compile anything wont work works preexisting components", "d": "7/2017"}, {"body": "guys funny ever choose angular serve static html server humble opinion nt sharing doc viewer example anyone use enterprise business application one ever pre render templates html server like page always gets rendered different data different client strong feeling moving forward guys offer easy acceptable way getting templates server compiling run time nt want application super fast happy performance provide flexibility", "d": "7/2017"}, {"body": "toxicable see plunker list products list clients list products shown top followed list clients one client wants change order client wants see list clients first list products case happily ask client modify html using web editor something like right change order explained seems like create new component achieve component showing products first clients second component showing clients first products second", "d": "7/2017"}, {"body": "see reason needs dynamic asking client edit html change ordering make ui element select box changes order saves db open load ordering selection done", "d": "7/2017"}, {"body": "changing order data flexibility provide clients think possibilities arises allow client edit page html allowing almost anything one client wants put image advertisment top clients section one wants show important information instructions products section whatever want top every client wants personalize theme wants display data according need clients want boxed layout wants show data tabular structure client wants show image alongside every product etc wo nt sit make changes provide flexibility client changes flexibility key", "d": "7/2017"}, {"body": "issue trying build web application angular aot angularrouter lazyloading since modules loaded later imported appmodule also needs precompiled appcomponent homecomponent categorycomponent appcomponent routeroutlet loads homecomponent preloading appcomponent homecomponent appmodule categorycomponent categorymodule want load categorycomponent lazyload user navigates countered exactly error message even already declared categorycomponent categorymodule", "d": "7/2017"}, {"body": "tried clean code bit defining imports declarations exports arrays ngmodule concat together inside ngmodule avoid copypasting got error aotcompiling jit works fine shared module declares components use lazyloaded modules around app code produces error aot commented uncommented code works aot jit dunno bug always prefer avoid copypastecode makes bit sad nt work", "d": "7/2017"}, {"body": "constructor private http inject platformid private readonly platformid thisoriginurl thisutilsoriginurl consolelog isplatformbrowser thisplatformid isplatformbrowser thisplatformid thisoriginurl windowlocationorigin working getting false console", "d": "7/2017"}, {"body": "closing root cause issue confusion attribute property bindings", "d": "7/2017"}, {"body": "chuckjaz confirm still happens using angular using cli making aot build scratch unfortunately ca nt provide code particular project provider registered done another programmer nt know accidentally seen remembered issue saw discuss earlier today removing provider worked error even weird said", "d": "7/2017"}, {"body": "agree duplicate", "d": "7/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "7/2017"}, {"body": "chrisprolls nt found solution yet would course possible implement version pipe pass current locale parameter template want avoid second possibility would make custom pipe impure also nt seem like nice solution", "d": "7/2017"}, {"body": "solution reload entire app refresh page detect user changed locale weird working acceptable needs", "d": "7/2017"}, {"body": "original plunker got bindings element gets transformed first change detection expressions evaluated translates following operations set add element far good element ends classes seconds change detection runs time values evaluate please notice one expression changed value trigger dom update binding destructive sense wipe reassign css classes interpolation works even nt change would mean would systematically trigger dom manipulations like bindings would superexpensive would bring performance knees nt think good solution meaning one correct performant going close issue suggested please use interpolation", "d": "7/2017"}, {"body": "anyone tip use alternative", "d": "7/2017"}, {"body": "papaiatis achieve another way added data routes navigation component keeps track current route read data route menu populated", "d": "7/2017"}, {"body": "correasebastian relevant issues case template angularjs component either downgrade bootstrap app downgraded component manually provide shown future ngupgrade probably support outofthebox trivial", "d": "7/2017"}, {"body": "understand concept would redirect route relative active route without using activatedroute service thanks", "d": "7/2017"}, {"body": "superceeded let track feature", "d": "7/2017"}, {"body": "duplicate", "d": "7/2017"}, {"body": "would really like option output styles case sass single css file generate stylesbundlejs use case single app reusable components would like apply style sheet serverrendered nonangular error pages edit discovered achieved", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "would thought created stackoverflow question documentation nt great angular secondary routing pick victor savkin creator angular router book angular router hopefully helps", "d": "7/2017"}, {"body": "closed", "d": "7/2017"}, {"body": "new landed try next days possible", "d": "7/2017"}, {"body": "status", "d": "7/2017"}, {"body": "indeed directive make nondirect children means found unless sure implemented way probable tbosch rkirov know", "d": "7/2017"}, {"body": "going close one duplicate since discussion info", "d": "7/2017"}, {"body": "strange thing error occur devenvironment also styles work correctly devenv building app error occurs things correctly rendered set animations use", "d": "7/2017"}, {"body": "able work around using ngdocheck method calling changedetectorrefdetectchanges method", "d": "7/2017"}, {"body": "hi helpful post understand fix error everything need know expressionchangedafterithasbeencheckederror error", "d": "7/2017"}, {"body": "worked", "d": "7/2017"}, {"body": "tytskyi actually research problem one", "d": "7/2017"}, {"body": "pappacurds imransilvake great solution telling angular run change detection every time change detection occured words created infinite loop", "d": "7/2017"}, {"body": "call immediately changing value nt get infinite loop", "d": "7/2017"}, {"body": "issue upgrading angular found issue eventsubscription adding thiscdrdetectchanges straight value change subscription setup helped", "d": "7/2017"}, {"body": "issue nested routeroutlets using subscription", "d": "7/2017"}, {"body": "facing issue fix", "d": "7/2017"}, {"body": "still getdom issues", "d": "7/2017"}, {"body": "library contains static function behaves like forroot code working previous versions compile angular problem reported issue", "d": "7/2017"}, {"body": "ndcunningham nice solution thnx", "d": "7/2017"}, {"body": "hi also interested also thought borrowing new microsyntax since kind makes sense able use issue could solved allowing following syntax html form form additionally allows neat things obviously quite terse languages keyword seems fit well also ca nt think better keyword moment", "d": "7/2017"}, {"body": "agree ericmartinezr duplicate closing one", "d": "7/2017"}, {"body": "hi vasuneet fix error find namespace angular im following upgrade guide find solution thx", "d": "7/2017"}, {"body": "would seem need modify fire change pending plunker linked properly demonstrates issue also project way tell initialization component whether form finished pending status", "d": "7/2017"}, {"body": "encounter issue page load method checks status async validator functions wait status anymore never happen due mentioned bug workaround dirty check status cool", "d": "7/2017"}, {"body": "subtle difference async items results results still loading solution would need target optionally default one template", "d": "7/2017"}, {"body": "body got solution", "d": "7/2017"}, {"body": "receivied error provider injectiontoken apiconfig token declared maints file changed location works", "d": "7/2017"}, {"body": "updated angular dependencies reproduction repository latest versions error still error error encountered resolving symbol values statically initialized variables constants referenced value variable needed template compiler position original ts file resolving symbol observable volumesworkngmobxaotbugnodemodulesmobxlibapiobservabledts resolving symbol observable volumesworkngmobxaotbugnodemodulesmobxlibmobxdts resolving symbol appcomponent volumesworkngmobxaotbugsrcappappcomponentts error srcmaints module found error ca nt resolve gendirappappmodulengfactory volumesworkngmobxaotbugsrc srcmaints multi srcmaints tbosch prioritized issues maybe could explain root problem try fix", "d": "7/2017"}, {"body": "fyi problem reproduced angular zonejs surprising given version zonejs lands hoping resolve problem notes replacement reproduce angular please follow steps outlined", "d": "7/2017"}, {"body": "getting error angular also used added appmodulets well component still getting error", "d": "7/2017"}, {"body": "first check make sure import formsmodule reactiveformsmodule ngmodule thanks matfork solution works", "d": "7/2017"}, {"body": "time simplest approach bootstrap mini hybrid app test less ideal several reasons testing ngupgrade improved much merged smiley", "d": "7/2017"}, {"body": "hi need something similar component renders iframe communicate iframe use postmessage working perfectly long component visible however one requirement postmessage leave component ondestroy working error iframe never receives messsage issue seems indeed angular already destroyed iframe least cleanup ondestroy method executed way get informed destroy going take place cleanup whatsoever would helpful workaround implemented credits bobrosoft use animations sort simulate behaviour annomation callback void started cleanup took place needless say way go", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "actually integrated feature xliffmerge use google translate generate fullly translated version xliffxmb ng extracted file supports ngx supported formats translation webapp tinytranslator also feature integrated demonstrationn purposes publish french russian version fully automatically generated russian one even read kyrilic characters", "d": "7/2017"}, {"body": "relatively new developer thank contribution following works chrome ie var link documentcreateelement linkhref windowurlcreateobjecturl blob linkdownload filefilename linkclick httpreponsemessage looks like httpresponsemessage response new httpresponsemessage responsecontent new bytearraycontent buffer responsecontentheaderscontenttype new systemnethttpheadersmediatypeheadervalue applicationvndopenxmlformatsofficedocumentspreadsheetmlsheet responsecontentheaderscontentdisposition new systemnethttpheaderscontentdispositionheadervalue attachment responsestatuscode httpstatuscodeok return response thanks", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "even possible find way currently still seems like builtin feature angular", "d": "7/2017"}, {"body": "spent evening looking mistake file custom component named change weary", "d": "7/2017"}, {"body": "problem setting dynamically created input phone numbers like test ever addressed", "d": "7/2017"}, {"body": "happening using visual studio tried several different admin templates trying main routeroutlet load login component main component every component loaded add second routeroutlet onto main component every time navigate children component custom javascript files nt get loaded although see inspect page funny thing refreshreload page scripts actually work navigate components tried different projects probably give angular aspcore go back use mvc shame work used angularjs mvc project really liked hopping angular would make things easier apparently please let know guys proper solution issue many thanks", "d": "7/2017"}, {"body": "rogensky hi way found wrote comment case cancel recreate script every time navigate components sent oneplus using fasthub", "d": "7/2017"}, {"body": "yep using willbe production code", "d": "7/2017"}, {"body": "happen", "d": "7/2017"}, {"body": "dealt issue like use behavioral subject instead observable way able still use values component even though redux dispatch happening aync pipe listening", "d": "7/2017"}, {"body": "help someone troubles fsevents windows perform installs angular projects using nooptional flag npm", "d": "7/2017"}, {"body": "want add definitely expected known handled cause huge performance issues instances like tabs", "d": "7/2017"}, {"body": "zaimsa found solution problem", "d": "7/2017"}, {"body": "longer possible need something like disable animations globally least proper way disable animations", "d": "7/2017"}, {"body": "ran many issues caused using custom remove project issue certainly one quite issues ran also ran seems related change", "d": "7/2017"}, {"body": "nt understand obscure requirement list detailview page probably want preserve search filters sort collapsible options checkboxes pagination etc go back preserve state oner solution manually save everything service localstorage cookie query params whatever sooo messy saving many state setting back hard maintain new addition require taking care new state good another solution inside parent component holds state big fan states concerns child component moved state still goes route outside parent component route parent get destroyed good wondering something like classtransformer make easier serialize component restore still storing entire object rebuilding navigation routereusestrategy clean throws error find many resources properly implement initial question preserve state still open", "d": "7/2017"}, {"body": "confirm bug workaround adding directive", "d": "7/2017"}, {"body": "know mentioned nt goal render angular outside express got working using mash code thread looking source ngexpressengine wanted render ton components providing different default states kind like airbnb design framework stack attached jupter cell", "d": "7/2017"}, {"body": "facing issue thank ledzz workaround", "d": "7/2017"}, {"body": "dig angular source code tries inject ca nt find parent transclusion real parent reason working depends way angular proceed transclusion angular lost actually parent simple plnkr demonstrates lost parent component want show issue transclusion forms found related issue good menu example", "d": "7/2017"}, {"body": "nt look like happens anymore latest version angular closing", "d": "7/2017"}, {"body": "originally came workaround aka hack fix angular however nt work angular issue seems calling appmoduledestroy nt remove everything memory specifically see subscribers routerevents observable continue receive values even router appmodule destroyed major problem apps integrated portal environment original fix dzmitryshylovich nt seem like ever merged", "d": "7/2017"}, {"body": "since customer reported new software version often makes chrome responsing found bug root cause problem customer faced order avoid commercial dispution choice except stop using new framework bug fixed please resolve issue", "d": "7/2017"}, {"body": "anyone interested somewhat solution example project showing get memory back clearing references window", "d": "7/2017"}, {"body": "still problem looks like never upgrade angular", "d": "7/2017"}, {"body": "tbosch severity label correct upgraded", "d": "7/2017"}, {"body": "issue bit crowded particular interested leak caused services properties pointed issue status one", "d": "7/2017"}, {"body": "custom elements replaced according spec try access attributes children custom element constructor element accepts children give shadow root element listen slotchange event know children ready chenthillrulz issue sounds like separate discussion also nt sound like angular anything wrong case think kind framework decides set properties", "d": "7/2017"}, {"body": "facing similar issue ionic laravel server sending cookies browser storing well cookies sent subsequent request resolve", "d": "7/2017"}, {"body": "hello jollysean problem using config object wrong method instead initial call good call object one property set", "d": "7/2017"}, {"body": "updates", "d": "7/2017"}, {"body": "problem still present version small plunker demonstrate suggest run plunk separate window see url changes", "d": "7/2017"}, {"body": "bump", "d": "7/2017"}, {"body": "running problem using webpack aot compilation error message generic updating usefactory fixed", "d": "7/2017"}, {"body": "maybe solution help somebody created dummy module declares mock component module imported anything keeps aot compiler happy consequently none mock components part compiled code ideal problem solved love hear better solution", "d": "7/2017"}, {"body": "strange amp embarrassing issue opened dec still issue converted structure whole app use aot compilation modules lazy loaded components compiler complains couple components per error suggests sure already part declarations one lazy loaded modules kind strange even giving errors components already part module", "d": "7/2017"}, {"body": "issue", "d": "7/2017"}, {"body": "angular compiler looks file set handed tsconfig excluding files exclude check", "d": "7/2017"}, {"body": "really annoying", "d": "7/2017"}, {"body": "alastairtodd sorry lost notification question tons notifications correct decorator inheritance supported see answer robwormald angular compiler looks file set handed tsconfig excluding files exclude check could try make conventions mock file names like exclude via", "d": "7/2017"}, {"body": "accidentally clicked wrong button sorry", "d": "7/2017"}, {"body": "issue named outlet call popup like docs try close nothing", "d": "7/2017"}, {"body": "tried", "d": "7/2017"}, {"body": "appears true focusin focusout", "d": "7/2017"}, {"body": "tbosch think tracking issue", "d": "7/2017"}, {"body": "issue described combination implementation decisions view engine change detection engine recreate objects literals used expressions recreate templates soon bound context changes could change implementation although would bit tricky dig part view cd engine recreates object literals", "d": "7/2017"}, {"body": "think root problem readonly ca nt change context create mutate dzmitryshylovich tried fix issue main issue user provides new context ca nt replace would run differ mutate actual context shape exactly like new context passed find weird angular enforce mutation data immutable data everywhere else think way change context reference maybe function ensureprevent behavior", "d": "7/2017"}, {"body": "hello updates regarding feature", "d": "7/2017"}, {"body": "vicb one reopened broken", "d": "7/2017"}, {"body": "dmitrysteblyuk please open separate bug", "d": "7/2017"}, {"body": "even multipartformdata also similar issue able add file content formdata let formdata formdata new formdata formdataappend file file filename formdataappend entitynumber thisnodenumber formdataappend itemtype getfileextensionbydomainandtab thisnodebasemodeldomainid thisnodebasemodeldtotype", "d": "7/2017"}, {"body": "news", "d": "7/2017"}, {"body": "antonioasmoura nothing changed docs", "d": "7/2017"}, {"body": "nt know maybe related", "d": "7/2017"}, {"body": "minuz manage get fixed eventually struggling issue workaround works debouncing seems like easy fix unable run angular test suite locally otherwise attempt make pr", "d": "7/2017"}, {"body": "think closed", "d": "7/2017"}, {"body": "hammerjs events obviously third party reason supported box angular however said case scroll well touch events eg touchstart touchmove etc supported simply js events reason would expected event data come applicable crossbrowser inconsistencies angular concern fix browsers rather provide tooling easily author implement solutions", "d": "7/2017"}, {"body": "still issue", "d": "7/2017"}, {"body": "also seeing specifically redirect empty path component", "d": "7/2017"}, {"body": "experiencing issue", "d": "7/2017"}, {"body": "reopening since docs part main repo", "d": "7/2017"}, {"body": "workaround unwrittenfun works maybe every version thanks alot", "d": "7/2017"}, {"body": "trying lazyload couple heavier views sidebar seems pretty reasonable usecase interested hear actual technical difficulty implementing seeing couple easy workarounds error message feels like oversight intentional error thrown nt mention checks whether component attached named outlet", "d": "7/2017"}, {"body": "tried workaround unwrittenfun version nt work could somebody help workaround karsunke test application available repo erro message error match routes url segment moduleone", "d": "7/2017"}, {"body": "mchavaillaz created issue repository discuss solution", "d": "7/2017"}, {"body": "set ngcontent template part dynamically created component componentfactoryresolver", "d": "7/2017"}, {"body": "problem wrapper component child draggable components drag child components able move another parent also destroy prvious parent wrapper without affecting child components first created wrapper component tried let index thisoldviewcontainerrefindexof viewref thisoldviewcontainerrefdetach index thisnewviewcontainerrefinsert viewref component hostview always gets destroyed detatched angular", "d": "7/2017"}, {"body": "also asked question stack overflow question contains link plunker demonstrates method dragged component executed original parent destroyed", "d": "7/2017"}, {"body": "simonamitrenova using appears worked see plunker", "d": "7/2017"}, {"body": "samherrmann managed destroying dragged component rendering dropped wrapper", "d": "7/2017"}, {"body": "queryparamshandling preserve navigationextras handles programmatic navigation see global level configuration without global setting links embedded views would also need touched add config right", "d": "7/2017"}, {"body": "facing problem described loading page direct url use case impossible news issue", "d": "7/2017"}, {"body": "still getting issue latest angular idea fix date", "d": "7/2017"}, {"body": "import usee class setinterval like work fine", "d": "7/2017"}, {"body": "hi dewwwald think might interested achieved goal using custom router reuse strategy setting component route reused described details", "d": "7/2017"}, {"body": "danielkucal thanks look", "d": "7/2017"}, {"body": "stumbled upon issue even though documentation says reuses components default default router reuses component instance renavigates component type without visiting different component first", "d": "7/2017"}, {"body": "martinsik route route parameter change different routes component component destroyed recreated default", "d": "7/2017"}, {"body": "zoechi hmm see nt occur description anyway tested realy works way describe thanks", "d": "7/2017"}, {"body": "ollwenjones totally agree importantcritical feature request want develop via tdd also normal testing phase hard struggle test runner time performance", "d": "7/2017"}, {"body": "current work around typescript const oldresettestingmodule testbedresettestingmodule beforeall done gt async gt testbedresettestingmodule testbedconfiguretestingmodule await testbedcompilecomponents prevent angular resetting testing module testbedresettestingmodule gt testbed done catch donefail afterall gt reinstate resettestingmodule method testbedresettestingmodule oldresettestingmodule testbedresettestingmodule way needs run per spec file testing module initialised running fairly fast", "d": "7/2017"}, {"body": "vvasabi interesting workaround one spec test file slow inside beforeeach defined module includes module many components mocked services providers array useclass sadly tests failing using fix also use aot maybe slowdown compile also use overridecomponent inside beforeeach service used component main problem clearly include big module many components inside configuretestingmodule time fix executed failed error secs secs running smooth failing tests maybe test suite stopped time fix chrome mac os x executed skipped success secs secs freeze execution tests still investigating", "d": "7/2017"}, {"body": "rbinsztock would try isolate failing tests spec files without hack applied hack prevents angular resetting test bed test run tests change states shared services ie pollute test bed may cause tests break example test makes changes test get back instance changes still applied figure tests changing states shared services causing others break try undo changes assertions move back tests isolated see pass hope helps edit noticed provided likely new instance created test shared services might", "d": "7/2017"}, {"body": "wow great workaround tested one spec file since still workaround let dev group exploit wildly unit tests whole suite takes minutes run would love see official solution soon", "d": "7/2017"}, {"body": "started wondering nt much ask much compilation happen one angular thing typescript decorator annotations template parsing ngmodules di aot cases etc maybe reasonable expect run like pure js even pure ts test", "d": "7/2017"}, {"body": "think ok testmodule slow construction time choice whether create testbed test case right forced latter thus option speedup tests clutter multiple expectations one single test unit", "d": "7/2017"}, {"body": "using webstorm", "d": "7/2017"}, {"body": "jajajajaja thing happen", "d": "7/2017"}, {"body": "tdhsmith still issue close still issue would great get pr rebased merged", "d": "7/2017"}, {"body": "please provide solution bug along disabled attribute working reactive forms deadlocked project", "d": "7/2017"}, {"body": "workaround found set flag enabling disabling field checking valuechanges quite annoying", "d": "7/2017"}, {"body": "also use cases app served web server calling history api still allowed run angular app browser control within desktop client application context calls windowhistoryreplacestate allowed cause app crash", "d": "7/2017"}, {"body": "kind related documentation says provide function fort transition nt allow expression", "d": "7/2017"}, {"body": "work temporary solution course replace replaced string value require eg hyphen instead comma use like", "d": "7/2017"}, {"body": "still problem version try make quick example anyone else still issue", "d": "7/2017"}, {"body": "found simplest cleanest solution use fake host component contain dumb one", "d": "7/2017"}, {"body": "still happening latest cli amp angular really going addressed", "d": "7/2017"}, {"body": "lost much time figuring let hope solved soon", "d": "7/2017"}, {"body": "facing problem solutions optimizations ninja hacks becoming worst app grows encounter navigation", "d": "7/2017"}, {"body": "importing commonmodule nt seem change anything could another reason error", "d": "7/2017"}, {"body": "yugloocamai import commonmodule ngmodule component", "d": "7/2017"}, {"body": "came across issue one component core dropdown shown every single page core root element wo nt route properly first load make component shared nt think hoping clean solution", "d": "7/2017"}, {"body": "get following error error parsing regular expression invalid regular expression nothing repeat may need appropriate loader handle file type return decodeuricomponent results replace g", "d": "7/2017"}, {"body": "dgroh please share code one help u like pasted example works many apps production sure ur use case", "d": "7/2017"}, {"body": "came across attempting create infinitescroller directive would output event called load items expected api however since actually work due output bindable structural directives makes api lot messy small repo output working incase helps anyone", "d": "7/2017"}, {"body": "toxicable one workarounds create variable accepts emit events function called event happens pass structural directive using micro syntax would look something like", "d": "7/2017"}, {"body": "progress glad assigned someone need anyone help happy lend hand super urgent us adp need working asap", "d": "7/2017"}, {"body": "agree felyperennan wimvanderveen nt way component class reference associated template supposedly new class friend like c maybe template could compiled class extends component class members least declared protected instead public", "d": "7/2017"}, {"body": "due fact simply shameful tbh mean simple would done trick", "d": "7/2017"}, {"body": "upload serve angular tutorial app without tweak apache server config remember change whatever path putting web eg app header lines", "d": "7/2017"}, {"body": "nicholaelaw thanks reply tried whatever suggested still showing errori changed base href said", "d": "7/2017"}, {"body": "even facing issue found solution", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "news feature request missing fix usecase actually specify child feature like coul specify routes array used need call guard time child route subchild subsubchild route change actually better way avoid write every routes child mean handle route deactivation call guard merci cc vicb", "d": "7/2017"}, {"body": "recursive version levels nested controls public static markasdirtydeep control abstractcontrol void mark control dirty controlmarkasdirty recursively mark children dirty controlhasownproperty controls control controls childcontrol gt thismarkasdirtydeep childcontrol", "d": "7/2017"}, {"body": "bug using ngfor inside form template driven makes difference solution shaunlmason said use instead issue still exists also thankfully nt affect inputs use anyway", "d": "7/2017"}, {"body": "dzmitryshylovich progress select basic element form think modified asap", "d": "7/2017"}, {"body": "think bad design select since nt support ony selector bad idea ca nt dynamic bind multiple property", "d": "7/2017"}, {"body": "guzuomuse afaik progress could use", "d": "7/2017"}, {"body": "tytskyi dzmitryshylovich thanks replying scenario example customized directive dynamically set attributes properties renderer must exclude multiple poperty element tedious make intelligent since select element used frequently maybe difficult improve", "d": "7/2017"}, {"body": "use case like make kotlin wrapper angular uses aot kotlin compiles would use aot compiler js works something wo nt added", "d": "7/2017"}, {"body": "update possible use aot javascriptangular", "d": "7/2017"}, {"body": "tks", "d": "7/2017"}, {"body": "wellcome tue jul pm huanghaiyang notifications githubcom wrote tks receiving commented reply email directly view github mute thread", "d": "7/2017"}, {"body": "application using metadata generate dynamic code eg generating code fly might need access gives inputs outputs etcs dynamically set bindings things normally use resolve would remove application pretty limited even angular capability application use guess aot dont include compiler module still able use reflect retrieve annotations processing going remove information around things", "d": "7/2017"}, {"body": "redirected ca nt find solution equivalent child deep gt gt gt deprecated", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "ericmartinezr feature supporting ngdeep something kind step backwards already deprecated released removed future also browsers include similar functionality future though include liteversion functionality using slotted described bug report", "d": "7/2017"}, {"body": "nt instead error message warning servernodemodules angularcoresrclinkersystemjsngmodulefactoryloaderjs critical dependency request dependency expression warning servernodemodules angularcoresrclinkersystemjsngmodulefactoryloaderjs critical dependency request dependency expression", "d": "7/2017"}, {"body": "warning nodemodules angularcore critical dependency request dependency expression warning nodemodules angularcore critical dependency request dependency expression seems fix know actual problem angular fixed angular", "d": "7/2017"}, {"body": "hheexx wo nt break lazy loading angularrouterloader ngtoolswebpack case aot compilation", "d": "7/2017"}, {"body": "spair breaks ngtools", "d": "7/2017"}, {"body": "hheexx oh yeah sorry disorient meant using ngtools compilation point workaround tool deals dependencies way warning message appears cause aot usually means productiononly usage two config files one tweak jit compilation dev another ngtools without", "d": "7/2017"}, {"body": "think beakdoctor use case definitely valid think another good reason use readonly disabled accessibility understand screen readers read content disabled fields read readonly fields", "d": "7/2017"}, {"body": "found work around access submitted disabled field using formgroup getrawvalue use method instead formgroupvalue ngsubmit template thanks stack overflow answer", "d": "7/2017"}, {"body": "hi guys news release readonly flag formcontrols attributes thank", "d": "7/2017"}, {"body": "open appcomponentts file import custommodule eg testprovider import testprovider test provider component section add providers array component templateurl apphtml providers testprovider", "d": "7/2017"}, {"body": "want clarify latest comment tbosch mean say bug able bind private properties work allow bug fact private properties bound template", "d": "7/2017"}, {"body": "atalis bug something violating design current implementation design allow private properties throwing error using private property correct behavior throwing bug tracked part goal beyond want redesign code generation mechanism allowing private properties expected behavior", "d": "7/2017"}, {"body": "atalis bug access private properties reported errors template generated separate class nt access private members original class changing errors templates reported improve error messages currently generate code use typescript validate code generate type checks however generate code performance type checking lose types forced introduce places defeats type checker nt inject typescript would report spurious error current plan change generate factories transformer phase typescript instead running factories typechecker generate separate block code preserves types would perform badly map type error reported block back part template generated error", "d": "7/2017"}, {"body": "reading trotyl chuckjaz responses sure whether allow binding private properties templates hope allow binding private properties consider template part component external consumer changing bindable property used template part refactoring treated breaking change since forces public assume someone might using handle breaking change api", "d": "7/2017"}, {"body": "eskal allow reference private variables templates report error code template generated factory class separate class class declaring template class declaring template access private members change template must considered member class declaring template able change variety reasons hopefully able change", "d": "7/2017"}, {"body": "chuckjaz bad hoping would treat templates internal component class since ultimate goal bug allows private members hard would make exception type checkers aot etc ignore private members inside template goal removing exception designed correctly bit hacky going back forth seems like worse alternative guess angular devs using ts allowing private members expectation removing fixing bug making wait till allow continue left seems harsh", "d": "7/2017"}, {"body": "confused change request change come official issue translations simply apply templates redux custom treeview components etc generated javascript objects code per template", "d": "7/2017"}, {"body": "official coming make deep changes compiler first nt ready", "d": "7/2017"}, {"body": "known exact version feature available planned", "d": "7/2017"}, {"body": "majorminor version branch patches means sure one", "d": "7/2017"}, {"body": "diestrin realise ago find solution lazy loaded module services listed get provider error", "d": "7/2017"}, {"body": "robertbroersma issue custom bootstrap logic forgot use correct injector bootstrap bootstrapping application normal process issue something else", "d": "7/2017"}, {"body": "wow might well said nt know go look nt going reply bad needed get called", "d": "7/2017"}, {"body": "could disable formbuilder like id value disabled true however problem ngsubmit sending back value disabled field undefined id save model void thiscountries modelcountries let c thiscountries consolelog cid cname cdeleted access value disabled field edit could find workaround", "d": "7/2017"}, {"body": "ngonchanges changes thisismodify let prop thisformcontrols thisformcontrols prop disable onlyself true else let prop thisformcontrols thisformcontrols prop enable onlyself true work", "d": "7/2017"}, {"body": "ping status dzmitryschylovic", "d": "7/2017"}, {"body": "work", "d": "7/2017"}, {"body": "case nt importing routing module paths defined feature module", "d": "7/2017"}, {"body": "put angular services tests seperate npm got run node console outside browser using jsdom way similar described without complications webpack much faster nicer experience develop debug drawback ca nt use async zone mochapatchjs work jsdomnode use done approach igorminar would nice mochapatch could work node well scenarios", "d": "7/2017"}, {"body": "problem solution merging componentless route component route sessionregister routerlinkactive work sessionregister", "d": "7/2017"}, {"body": "needs type information nt work scenario", "d": "7/2017"}, {"body": "like able use angular bindings ngmodel rather setting value directly work around get ngmodel component control html writevalue reset inputmodel thisinputmodelreset seems working ok allows use ngdirty flags etc inside control", "d": "7/2017"}, {"body": "updates", "d": "7/2017"}, {"body": "updated latest version today order make use httpinterceptor changed code http httpclient upon testing changes issue mentioned problem noticed server side validation prevents action executed send string message body response previous implementation code used error response gt errortext legacy contained validation message question implementation debugged inspected every inch response body assigned error httperrorresponse null custom response sent server nowhere found", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "also access router parameters service case wrapper service wrapper wrapps common headers webapi call one header example come routing url code ts export class httpclientservice private vertragsid constructor private http inject dnncontext private dnncontext dnncontext private activatedroute activatedroute", "d": "7/2017"}, {"body": "confirm keithgillette solution royling clarifications using angular success using blank parent componentless route like shown jonesmac register original child module root component new unique name child route blank route things work also aware complex syntax parent html html parent routing config child html html inner router example lazyloaded child module routes child navigation bar html submodule nav", "d": "7/2017"}, {"body": "nekkon", "d": "7/2017"}, {"body": "kentoj able set secondary outlet null nt able get part work", "d": "7/2017"}, {"body": "guys stop using named outlets without names working fine", "d": "7/2017"}, {"body": "jonesmac never tried setting null explicitly though may done incidentally leaving outlets declaration directive declaration", "d": "7/2017"}, {"body": "may issue finally get addressed one year waiting way see suggested workaround works extent way navigate named outlet way go back setting null", "d": "7/2017"}, {"body": "similar code also needs run async operations inside service methods used following code test login get data inject osmuserservice xhrbackend fakeasync osmuserservice osmuserservice mockbackend mockbackend gt", "d": "7/2017"}, {"body": "longer relevant", "d": "7/2017"}, {"body": "solve like component whose want save chat list viewchild simplest solution able come edit must use cache component otherwise scrolltop local variable lost component destroyed", "d": "7/2017"}, {"body": "import activatedroute parammap angularrouter getting error like exported member parammap installed latest router version also still facing issue could anyone please help", "d": "7/2017"}, {"body": "think angular architecture permit proper way fix issue force component library author make work onpush change detection maybe guideline currently unable make form components work onpush also better future remove default change detection altogether force everyone use onpush result better applications", "d": "7/2017"}, {"body": "odd thing problem first appeared fixed exporting function noticed something odd nt understand ran ng serve vs code terminal failed opened saved ts file kicked automatic build ran without error robertcahoon noticed thing angular wondering bug", "d": "7/2017"}, {"body": "tbosch hi thanks response since comment closest seen explains cloning might occur would mind explaining decorator thing bit trying write general testing utility stubs like know clone happensis necessary", "d": "7/2017"}, {"body": "wanted figure reuse component modules google brought reading thread sighed convinced shared module pattern described love know teams google using angular large apps structure shared component code", "d": "7/2017"}, {"body": "fyi like use angularcli refactor code use shared module restart cli server see console errors components registered nt detect changes otherwise stumped", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "using angular setting routes fixed issue routermoduleforroot routes usehash true", "d": "7/2017"}, {"body": "handled new see info", "d": "7/2017"}, {"body": "working latest angular cli animations choppy firefox fix needed ps setting values pixels nt work pps removing vendor prefixed css animating element fixed issue vendor prefixed transition property animating element guess somehow meddling web animations js calculations hope answer would help anyone facing issue future", "d": "7/2017"}, {"body": "problem dynamic create svg component try", "d": "7/2017"}, {"body": "works thanks", "d": "7/2017"}, {"body": "thanks help far still getting misbehavior even presented solutions full working example would great", "d": "7/2017"}, {"body": "one possible workaround still worked embed another element instead something like", "d": "7/2017"}, {"body": "issue opened angular mentioned methods ex nt exist current version angular going close one probably relevant nt reproduce scenario angular etc still hit problems latest releases angular please open new issue reproduce scenario thnx", "d": "7/2017"}, {"body": "getting restore package option restart visual studio displayed", "d": "7/2017"}, {"body": "anything new passing object navigate methods instead stringify queryparams save service would valuable like others think reasons would hurt give front end developer option", "d": "7/2017"}, {"body": "still wondering well", "d": "7/2017"}, {"body": "faubert check shubham verma comment please keep us uptodate works", "d": "7/2017"}, {"body": "guys passing data via service obviously work cheap trick comes pitfalls biggest pitfall persistence store router state shared service must write additional code save state local storage whatever storage even code read state storage application restarted must start thinking stale data probably nt want keep route data around forever write code cleans route data longer needed turns buggy promise manager fix next release fix building features realize must think versioning data new code compatible data users cache time realize hell wish became carpenter instead nt app break user navigates routable component way bypasses procedure set state page refreshed let ever bring suggestion pass data via service instead let start talking design router take advantage state history api", "d": "7/2017"}, {"body": "stevenliekens really talking saving state whole issue question get data component component b let say pass order object ordercomponent orderdetailcomponent case state saved routing components application restarts", "d": "7/2017"}, {"body": "stevenrobijnsmacadam thing history api state persisted automatically means refresh page revisit history component would reloaded exact state get behavior without writing lot custom code use shared service passing state route case state saved routing components application restarts application restarts one example way navigate component directly ways include using backforward browser buttons pasting urls address bar potentially bypass code passes state master details component", "d": "7/2017"}, {"body": "stevenrobijnsmacadam thanks link although solution use case would require dynamically pass data know many ways landing given route component common use case list objects object details case object optional would prepopulate detail fields angular mostly one page application possibility pass data memory specific routing resolution others said service could work would manually clean one time registered objects", "d": "7/2017"}, {"body": "faubert right nt look much guy proposes solution passing data string dynamically url question", "d": "7/2017"}, {"body": "update", "d": "7/2017"}, {"body": "still broken reactive forms also causes issues rare cases select tag one option ca nt select option select tag", "d": "7/2017"}, {"body": "confirm issue still exists ie edge safari works expected chrome firefox clients confused currently using angular reactive forms reopen issue please", "d": "7/2017"}, {"body": "works absolute routes contain redirect could possible implement could use something like", "d": "7/2017"}, {"body": "ran issue today would better could use keywords depend function anymore", "d": "7/2017"}, {"body": "could please someone help following code letztverbrauch get following error typeerror read property subscribe undefined new routerlinkwithhref contract property component selector appmenu templateurl menucomponenthtml styleurls menucomponentscss export class menucomponent input public contract contract constructor", "d": "7/2017"}, {"body": "import testcomponent testapptestcomponent import ngmodule angularcore import commonmodule angularcommon added line module ngmodule declarations testcomponent imports commonmodule added line exports testcomponent providers export class testmodule issue resolved", "d": "7/2017"}, {"body": "usecase janerist reload editform save reflect new data form creation hooked observable trigger refresh call method makes parameters lot uglier someone nicer way reloading please let know javascript export class mycomponent public form observable private reload behaviorsubject new behaviorsubject true constructor route activatedroute thisform routeparams combinelatest thisreload map data params boolean gt let params params data renavigate void thisreloadnext true", "d": "7/2017"}, {"body": "tomwanzek manuelnaturalcycles issue opened state aware input params problem hope pans soon tomwanzek thank mentioning nt even aware far also using trick mentioned setting desired end style properties animated element nt interfere animation properties animation ends check maybe help case get attention thanks", "d": "7/2017"}, {"body": "tomwanzek news regarding hack", "d": "7/2017"}, {"body": "created issue pretty much mentioned earlier comments end state persisting close one decided track one instead", "d": "7/2017"}, {"body": "manuelnaturalcycles yet retested everything angular based comment azamanaza seems issue persisted end state yet addressed recognizing heroic efforts angular core team would hoped least interim indication angular core team issue created mrcroft seems idle well regard always fix right away transparency create predictability user community would highly appreciated alas another animation issue opened april fundamental question support svgrelated animations even graced initial assessmentguidance despite several pings hope fresh insight", "d": "7/2017"}, {"body": "news really need expressions like", "d": "7/2017"}, {"body": "use inject append", "d": "7/2017"}, {"body": "ksuttlecng update title route change route data", "d": "7/2017"}, {"body": "got found putting subscription first works list multiple subscriptions", "d": "7/2017"}, {"body": "team working requirement implement components already quite complex forms components also need plug parent form toplevel validation eg disable saving able reuse components seperate form actual complexity arrives fact components siblings direct children may deeply nested even separated across child routes current state angular forms makes usecase really hard way declaratively connect child forms formgroups parent form solution directive inject parent form present registerderegister parent form enables declarative support nested form elements across component boundaries without need pass formgroups use modeldriven forms throughout component tree checkout basic implementation plunkr", "d": "7/2017"}, {"body": "another possible workaround javascript directive selector provideparentform providers provide controlcontainer usefactory function form ngform return form deps ngform export class provideparentform place directive child component somewhere top nodes hierarchy ngmodel", "d": "7/2017"}, {"body": "waiting branch merged released", "d": "7/2017"}, {"body": "able workaround issue workarounds news proper fix may come", "d": "7/2017"}, {"body": "way tool detects circular dependencies unfortunately large project difficult detect circular dependencies", "d": "7/2017"}, {"body": "gave thought issue came following proposal see", "d": "7/2017"}, {"body": "kara would like implement pull request would like feedback first order figure acceptable proposal", "d": "7/2017"}, {"body": "using systemjs update map variable include angularinmemorywebapi nodemodulesangularinmemorywebapibundlesinmemorywebapiumdjs working", "d": "7/2017"}, {"body": "documentation bug least docs extended improved", "d": "7/2017"}, {"body": "still think createcomponent somewhat odd", "d": "7/2017"}, {"body": "agree current behaviour feels following description documentation createcomponent instantiates single component inserts host view container specified index semantic standpoint struggle justify wording inserts host view container mean append came across interesting article hackernoon pointed behaviour well interesting angular insert views inside element appends element bound viewcontainer said show stopper", "d": "7/2017"}, {"body": "missing comma merging resulted compilation errors rather strange error anyone like lots typings make sure nt missing comma tsconfig", "d": "7/2017"}, {"body": "stand fairly new want create directive applies several directives instead write feels like easy basic compositiondryness far tell possible", "d": "7/2017"}, {"body": "also see", "d": "7/2017"}, {"body": "way investigate without reproduction going close since pretty old relevant op anyone still running problem especially using new version please open new issue minimal reproduction", "d": "7/2017"}, {"body": "example project showing issue discussion around see", "d": "7/2017"}, {"body": "ok thx link let track although sure ngupgradespecific first place still issue nonetheless", "d": "7/2017"}, {"body": "progress bug code repro issue flip side interaction somewhat practical application ts class timeagopipe implements pipetransform public transform date date string string let time dategettime let timediff new date gettime time brevity cutting code picks correct granularity time return mathceil timediff seconds ago display many seconds ago gt jasmineclock withmock gt let time new date timesetseconds timegetseconds error thrown call", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "also similar use case list items may include component tinymce editor may reordered use afterviewinit initially hook textarea tinymce editor present however upon reordering list connection element library broken like run kind callback ngfor done rendering changes order removereadd tinymce instances hack run callback end function reorders array add short settimeout increase likelihood callback fires dom updates however suboptimal introduces unnecessary delays program ensure list actually done rendering", "d": "7/2017"}, {"body": "custom scrollbar directive estimate wrapper clienthight scrollheight elements rendered hardcoded last index arraylength workaround nice natural way applying directives container ngfor used generate children nodes", "d": "7/2017"}, {"body": "masonry lib heights elements need known upfront recalculate ngfor finished would also interested knowing workaround fort", "d": "7/2017"}, {"body": "rcfrias copy source add event nt much", "d": "7/2017"}, {"body": "found acceptable solution stackoverflow template div label ngfor component class supercomponent viewchild label public label ngafterviewinit thishandleendofngfor thislabelchangessubscribe gt thishandleendofngfor private handleendofngfor consolelog hooray", "d": "7/2017"}, {"body": "found acceptable solution stackoverflow template div label ngfor component class supercomponent viewchild label public label ngafterviewinit thishandleendofngfor thislabelchangessubscribe gt thishandleendofngfor private handleendofngfor consolelog hooray", "d": "7/2017"}, {"body": "found acceptable solution stackoverflow template div label ngfor component class supercomponent viewchild label public label ngafterviewinit thishandleendofngfor thislabelchangessubscribe gt thishandleendofngfor private handleendofngfor consolelog hooray", "d": "7/2017"}, {"body": "zoechi mean clone directive angular modify link found ts files angularcommonsrcdirectivesngforofdts clue modify directly talking creating custom directive overrides former", "d": "7/2017"}, {"body": "kievsash share link stackoverflow btw code looks like printing hooray load every label happens ngfor actually final endofngfor maybe mistaken", "d": "7/2017"}, {"body": "kievsash rcfrias probably meant", "d": "7/2017"}, {"body": "rcfrias hard find link try works like want end list render new data", "d": "7/2017"}, {"body": "mlcmlapis thanks plnkr aware oninit tried change event past didnt work think using wrong way im sure adding subscribe trick", "d": "7/2017"}, {"body": "rcfrias nice hear helps", "d": "7/2017"}, {"body": "guys news alternative one", "d": "7/2017"}, {"body": "cc vikramtiwari", "d": "7/2017"}, {"body": "added routerlinkactiveoptions still didnt get active change tab", "d": "7/2017"}, {"body": "active class element element", "d": "7/2017"}, {"body": "ok driving nuts using angular packagejson getting correct times set date follows using date pipe format outout follows get following output saturday nov pm last time checked pm using chrome browser way output edge shows saturday nov pm pm date showing time format pm pm bug warp time observations used several different date strings calls avail use date new date correctly shows pm thursday aug pm driving nuts", "d": "7/2017"}, {"body": "completely rewriting date pipe angular hopefully fix kind issues", "d": "7/2017"}, {"body": "yes used constructor injection", "d": "7/2017"}, {"body": "workarounds targeted local use cases components user defined work components part party library one change providers think easy implement design relays dependancy injection api adding token returns first component tree requires benchmark testing since component instantiation set token provider injector another option specifically address instructions compiler every time compiler finds special token generate appropriate code generate providers", "d": "7/2017"}, {"body": "achieve looking inside directive input mydirective replace component type directive always used known component ngoninit consolelog thismydirective give component instance", "d": "7/2017"}, {"body": "hi samherrmann would indeed work adds extra level clunkiness usage directive fond example currently using token method however method example would look like plus like keep usage directive quite minimalistic less developers remember using", "d": "7/2017"}, {"body": "quick fix issue call end", "d": "7/2017"}, {"body": "nethulap discardperiodictasks tip helped dispatching keyup events would work first tick give error periodic timers still queue second time tried dispatch event code excerpt ts hostlistener keyup private onkeyup void consolelog keyup thisactivitystreamnext true test excerpt ts remove idle class user starts typing fakeasync gt const input fixture setup", "d": "7/2017"}, {"body": "vespertilian glad helped fix issue", "d": "7/2017"}, {"body": "issue solution dzmitryshylovich worked", "d": "7/2017"}, {"body": "update issue issue simular issue danmcclure already mentioned except using ngjsonpreq jsonpcalls finishedtrick still get error call succesfull jsonp injected script invoke callback error returned trying subscribe", "d": "7/2017"}, {"body": "getting error running npm start angularquickstart prestart quickstartmaster npm run build npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs start npm err node npm err npm npm err file c c program npm err path c c program npm err code elifecycle npm err errno enoent npm err syscall spawn c c program npm err angularquickstart prestart npm err spawn c c program enoent npm err npm err failed angularquickstart prestart script npm run build npm err make sure latest version nodejs npm installed npm err likely problem angularquickstart package npm err npm npm err tell author fails system npm err npm run build npm err get information open issue project npm err npm bugs angularquickstart npm err nt available get info via npm err npm owner ls angularquickstart npm err likely additional logging output npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs start npm err node npm err npm npm err code elifecycle npm err angularquickstart prestart npm err exit status npm err npm err failed angularquickstart prestart script npm run build npm err make sure latest version nodejs npm installed npm err likely problem angularquickstart package npm err npm npm err tell author fails system npm err npm run build npm err get information open issue project npm err npm bugs angularquickstart npm err nt available get info via npm err npm owner ls angularquickstart npm err likely additional logging output npm err please include following file support request npm err quickstartmasternpmdebuglog", "d": "7/2017"}, {"body": "somebody help happening", "d": "7/2017"}, {"body": "experiencing issue angular router navigation use routernavigate rootchild method using webpack packaging app based tutorial setup utilizing modules modules routing get children component issue links used navigate issue detail data arriving source promise flowing children store behaviouralsubjects authguards see data arriving inside authguards expect however subscription inside child component placed inside ngaftercontentchecked fire precisely lifecycle hooks except constructor firing place subscription inside constructor child fires componen change detection misses subscription dataflow manually run cd inside constructor within subscription get error component properties exist null longlive delay operator rxjs hoping deterministic approach data render expected behavior expect lifecycle events fire time component inserted dome", "d": "7/2017"}, {"body": "zoechi given commencing deprecation shadowpiercing descendant combinators think would gap far solution mainly even something like used nt added elements far see making stylable default viewencapsulation", "d": "7/2017"}, {"body": "emiliomartinez nt really understand point change adding support addition eventually remove nt see gap long deprecated combinators still supported", "d": "7/2017"}, {"body": "zoechi see possible solution long term period using native shadow dom css custom properties", "d": "7/2017"}, {"body": "mlcmlapis sure mean solution think native shadow dom future also additional theming features native shadow dom added html specs recently", "d": "7/2017"}, {"body": "zoechi meant apply custom css changes outside component viewencapsulationemulated enabled overrideadd component css children thanks mention addition recent html specs read", "d": "7/2017"}, {"body": "mlcmlapis native shadow dom provides enough features browsers guess stay available perhaps native default emulated go away guess", "d": "7/2017"}, {"body": "zoechi yes looks like trying play css custom properties also works fine performance really good implemented ie applicable apps", "d": "7/2017"}, {"body": "mlcmlapis right adoption slow polyfilling difficult causes performance issues wait browsers support stuff", "d": "7/2017"}, {"body": "zoechi believe intent drop three including shadowpiercing descendant combinator deprecated support removed major browsers tools plan drop support angular preferred broader compatibility tools", "d": "7/2017"}, {"body": "emiliomartinez sure angular declares compatibility ie ca nt", "d": "7/2017"}, {"body": "emiliomartinez right read pr comment posted comment", "d": "7/2017"}, {"body": "emiliomartinez another discussion says alternative provided time needed", "d": "7/2017"}, {"body": "fwiw complementing tytskyi commented vicb said gitter copy amp paste gitter search awful said prissue comments shadowpiercing combinator deprecated browser vendors tools sass plans remove support soon introduced ngdeepto make sure still able pierce sd near future sass tools nt support deep use shadow piercing combinator removed clear migration path best guess around least coming year make sense keep long term makes emulated amp native sd behaves differently hope helps removed user ping chat avoid ping", "d": "7/2017"}, {"body": "really needs expected behaviour spas trying workaround production app really supposed box solution", "d": "7/2017"}, {"body": "would agree prior comments since application nt production yet holding hoping implemented without workarounds needed", "d": "7/2017"}, {"body": "vicb pkozlowskiopensource thread first google result applicationreftick called recursively", "d": "7/2017"}, {"body": "way go robwormald nginclude core part custom component written big company app ca nt used angular enough reasons move react instead avoid altogether", "d": "7/2017"}, {"body": "right angular set die beauty excellent angular team continues way", "d": "7/2017"}, {"body": "interesting many people want angular exactly angular", "d": "7/2017"}, {"body": "zoechi point point angular still missing features required real word business applications different goal pubescents kids", "d": "7/2017"}, {"body": "karlxol lots changes angular compared angularjs allow run fast super performant provide awesome user experiences however everything great restrictions situation kinds issues simply matter thinking solve issue modernperformant way rather resorting older patterns", "d": "7/2017"}, {"body": "zoechi well angular could include templates without issues even compile directives using simple string able angular except ugly line hacks angular team nt care users needless say nt tiny startups indie devs big companies sell good enough big apps big big drawback toxicable regarding performance nt performance issues never felt increase internals may work cases makes difference performance also stability angular nt solid anymore seems solid solution instead knowledge tell us solve issue ca nt use nginclude modernperformant way old pattern awesome single line nginclude template go alternatives lack documentation simple solutions simple mean something less tan lines something could previously surprising", "d": "7/2017"}, {"body": "karlxol entirely new framework similarities angular features yet added angular works entirely different angular want build dynamic ui runtime information available build time angular probably right framework instead complaining framework x nt want looking framework fits needs might better approach", "d": "7/2017"}, {"body": "one method creating mostly dynamic using html loaded backend replace tags referring angular components actual already compiled angular components example found wont allow create new components runtime allow suitable outlet cms type applications since would users allowed define new components anyway want dynamic built proof concept allows build dynamic want applications aot meaning build core application independent modules loaded however note nt recommend using since almost always way avoid point im proving possible questions issues hav nt addressed feel free contact angular gitter toxicable", "d": "7/2017"}, {"body": "knowledge tell us solve issue ca nt use nginclude modernperformant way old pattern awesome single line nginclude template go alternatives lack documentation simple solutions simple mean something less tan lines something could previously surprising angry subject understood reasons change found implement old nginclude angular please read comments thread see", "d": "7/2017"}, {"body": "based fact nt compiler browser able compile html code bindings compiler load first compile html templates app run possible create abstracted api one line combine way even aot mode instead ca nt change base fact related compiler second way possible develop abstracted api background build processes create aot compiled modules components server ondemand based user html code taken cms problem compiler app fully aot compatible without exceptions", "d": "7/2017"}, {"body": "toxicable right rethinking implementation approach architecture continuous process requirement best solution found work component inheritance lot bugs beginning much better approaches found nevertheless need implementing dumb components holding fpr layout remains posters mentioned nt fit large erpcms applications zoechi tell us angular nt right dynamic ui maybeprobably right take look need applications know instead blocking users requests defending approach listening users thinking solutions framework could adapted extended useful wider audience usually way know would expect excellent angular team going performant sophisticated framework danger loose users listening", "d": "7/2017"}, {"body": "karlxol angular team listening users opinion completely wrong assumption tons people complaining angular meeting expectations without even trying understand angular dozen developers angular team millions people try angular quite lot brief look complain threaten either implement feature x use framework instead angular team responding every complain nt scale time better used improving framework nt mean listening involved discussions time mentioned dynamic ui main requirement angular probably nt best choice angular static compilation nt work well dynamic uis others mentioned done beaten path feature essential majority applications like claim angular would nt successful", "d": "7/2017"}, {"body": "zoechi think ya tagged wrong person p", "d": "7/2017"}, {"body": "toxicable thanks sorry fixed", "d": "7/2017"}, {"body": "zoechi sad hear tons people complaining angular maybe take indicator might something wrong approach managing framework development selling community suggest shift focus bit user needs looks like obsessed compiler aot honestly top priority us", "d": "7/2017"}, {"body": "karlxol quite lot brief look complain people questions lots people prepared answer guide towards solution nt much one complaints though complaining contrary asking others solving problem complainer sits back waits usually people developing open source software imagine interaction users framework opinion way related google angular team", "d": "7/2017"}, {"body": "would workaround depreciated", "d": "7/2017"}, {"body": "kuncevic plus", "d": "7/2017"}, {"body": "ericcarraway closing plan remove near future nt realize tnahks", "d": "7/2017"}, {"body": "kuncevic article saying", "d": "7/2017"}, {"body": "hey guys found issue looking way isolate component element selector obviously without component custom tag appearing dom words mhevery described note could optional attribute suppress host element way remove ca nt find relevant issues prs exactly would tell progress made andor track feature proposal", "d": "7/2017"}, {"body": "chuckjaz update land visual studio thanks", "d": "7/2017"}, {"body": "ancient issue closed", "d": "7/2017"}, {"body": "thanks", "d": "7/2017"}, {"body": "add httpmodule appmodulets ngmodule ngmodule imports httpmodule", "d": "7/2017"}, {"body": "suggestion workaround quite missing feature imo", "d": "7/2017"}, {"body": "example using webworkers problem submit ngsubmit tue jul dmitry vasilyev notifications githubcom wrote works fine using submit hook receiving subscribed thread reply email directly view github mute thread", "d": "7/2017"}, {"body": "sorry ww example", "d": "7/2017"}, {"body": "kimec helpful solution thanks purpose always valid async validator supposed achieve", "d": "7/2017"}, {"body": "riisi welcome special purpose always valid validator serves reminder required properties angular expects async validator produced ie emits exactly one value asynchronously completes creates single value emitting cold since angular treats result valid validation result simplest correctly behaving based async validator break anything flag anything invalid either default created finishes synchronously breaking semantics angular expects async validator therefore one needs specify scheduler explicitly", "d": "7/2017"}, {"body": "holy cow ca nt believe year passed yet nt still way compile angular directives coming template dom like compile started migrate projects feel three steps back originally almost feels like total downgrade solution whole dynamic component stuff feels really hacky bad design imho", "d": "7/2017"}, {"body": "yes using jit compiler compile new components best approach aot lazy load jit compiler poc wrote year ago", "d": "7/2017"}, {"body": "hello shlomiassaf look like want archieve thanks sharing solution although wanted see blog post think usage examples background information approach throws would please kind upload original text somewhere else maybe wiki page really want use solution code big understand works also notice angular right angular changes dynamic compiler stuff happened since update anytime soon otherwise nt think able use solution still remains big design flaw almost thinking move app react instead way go weeks work totally lost", "d": "7/2017"}, {"body": "say works expected mean expected work foo bar works foo bar works foo bar work", "d": "7/2017"}, {"body": "yes expected work", "d": "7/2017"}, {"body": "deleted routerlinkactive still happens", "d": "7/2017"}, {"body": "slavafomin quite unlikely happen mentioned closed issues monitored", "d": "7/2017"}, {"body": "bumping issue plan support link fragments without tricky workarounds angular", "d": "7/2017"}, {"body": "getting error firefox well reason behind following line", "d": "7/2017"}, {"body": "baamaadmi adding external styles components add nt need change", "d": "7/2017"}, {"body": "problem scroll performance safari quentinfchx suggestion use worked quite well looking performance timeline safari dev tools noticed dramatically limits amount redraw operations scrolling afraid nt much knowledge redrawing events work browsers yeah adding entirepage container div fixed", "d": "7/2017"}, {"body": "however components consumable wc would love see similar glimmer web components wc export ember view", "d": "7/2017"}, {"body": "also docs describing anything outside returns false show debug info change templates etc quite frustrating", "d": "7/2017"}, {"body": "vicb looks like url still working new url", "d": "7/2017"}, {"body": "silenceisgolden practice used see details", "d": "7/2017"}, {"body": "tytskyi thank much", "d": "7/2017"}, {"body": "info worked ends ok verbose cli c program filesnodejsnodeexe verbose cli c program filesnodejsnodemodulesnpmbinnpmclijs verbose cli run verbose cli serve info using npm info using node verbose runscript preserve serve postserve info lifecycle angularquickstart angularquickstart silly lifecycle angularquickstart script preserve continuing info lifecycle angularquickstart angularquickstart verbose lifecycle angularquickstart unsafeperm lifecycle true verbose lifecycle angularquickstart path c program filesnodejsnodemodulesnpmbinnodegypbin c c program filesnodejsnodemodulesnpmbinnodegypbin c c c program filesnodejs c c windows c c c program files windows performance toolkit c program filesmicrosoft sql c program files microsoft c program filesmicrosoft sql c program filesnodejs c program files microsoft sql c program filesmicrosoft sql c program filesmicrosoft sql c program files microsoft sql c program files microsoft sql c program filesgitcmd c program files microsoft vs codebin c verbose lifecycle angularquickstart cwd c silly lifecycle angularquickstart args c liteserver cbsconfigjson silly lifecycle angularquickstart returned code signal null info lifecycle angularquickstart failed exec serve script verbose stack error angularquickstart serve verbose stack exit status verbose stack eventemitter c program verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess c program verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid angularquickstart verbose cwd c error windowsnt error argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs run serve error node error npm error code elifecycle error angularquickstart serve error exit status error failed angularquickstart serve script liteserver cbsconfigjson error make sure latest version nodejs npm installed error likely problem angularquickstart package error npm error tell author fails system error liteserver cbsconfigjson error get information open issue project error npm bugs angularquickstart error nt available get info via error npm owner ls angularquickstart error likely additional logging output verbose exit true hi good morning guys someone help fix issue", "d": "7/2017"}, {"body": "installing liteserver globally solved issue first uninstall local install globally", "d": "7/2017"}, {"body": "sir good afternoon thank much answering problem really appreciate", "d": "7/2017"}, {"body": "vicb stop closing issues fixed least suggest properly fix closing unacceptable", "d": "7/2017"}, {"body": "diegogarciaa exactly fixed wrong point view conversation long hard find actual core", "d": "7/2017"}, {"body": "mlcmlapis due respect teacher ca nt read understand problem stop bothering spent long minutes reading content recommend angular team team closing issue attitude seems enterprisy blocking salary fixing anytime soon", "d": "7/2017"}, {"body": "diegogarciaa good continue like welcome everywhere", "d": "7/2017"}, {"body": "mlcmlapis nt want welcome people ca nt read try bullshit", "d": "7/2017"}, {"body": "diegogarciaa thought personally problem looks true reality also problems bugs right understanding cd works", "d": "7/2017"}, {"body": "mlcmlapis ok let understand plunk understand variable bound checked ngafterviewinit called therefore receives new value trigger new check round exceptions thrown example view container ref use example thisservicegetdata subscribe response gt thiscomponentinstancedatamodel response considere datamodel used datamodelfield html thiscomponent dynamic component loaded certain events one could avoid error would correct way pass data component lifecicle hooks change detection", "d": "7/2017"}, {"body": "diegogarciaa yes typical example async sync operation mixed meet together one cd confirmation dev mode repeat explanation post maybe try read first look also", "d": "7/2017"}, {"body": "article basically says must manually call round change detection let honest upset current status even minimal things angular boring tiring ca nt even breath fuck", "d": "7/2017"}, {"body": "diegogarciaa auxiliary solution also use use recommended solution case probably shared service update directly property dynamic component cross cd cycle confirmation create instance dynamic component moment data subscription invoke creation dynamic component instance important primary logic error happens unidirectional changes flow always top bottom whole tree one cd cycle confirmation status unidirectional principle respected", "d": "7/2017"}, {"body": "fuck personal venting frustations use directive schema handle components built helper loads component component view reference understand data must avaliable component loaded example would like something like js return targetcreatecomponent factory datasource datasource would avaliable constructor time like redux uses object handle datasource passing components thinking implement injectable component handles data us get lifecicle hooks", "d": "7/2017"}, {"body": "diegogarciaa nt think data must available dynamic component still component question change data data must avaliable component loaded suppose need use also components lazy loaded modules use map directly module possibility access components using string names mean actual api maybe new angularcdk module would interesting intro", "d": "7/2017"}, {"body": "fwiw arriving google angular components using really bad interaction nt set seems inherited children components forever flex importantly even though mostly display ok half dozen javascript properties show since messes lot libraries probing element widthheight arguable whether bug libraries whatever leave tie knot style children use solution provided nt usually notice usually takes higher precedence automatically another solution use messy depending content container use time writing recently deprecated replacement yet afaik", "d": "7/2017"}, {"body": "kvanberendonck ngcontent container use host deep gt deprecated replaced sass deprecated support also deprecated another time range browsers provide native support crosswebcomponent styling support compatible sass", "d": "7/2017"}, {"body": "vicb chuckjaz think would make sense apply logic suggested wardbell class line turn type returned method typescript import platformid angularcore import isplatformbrowser angularcommon bootstrap componentorfactory componentfactory type rootselectorornode string promise getting studying angular code base would like possibly pursue first contribution bit help get right track would greatly appreciated", "d": "7/2017"}, {"body": "tbosch would better able answer", "d": "7/2017"}, {"body": "go head install npm install npm install g rx like wise", "d": "7/2017"}, {"body": "fundamental usecase ca nt believe nt sorted yet", "d": "7/2017"}, {"body": "antonmoiseev good way similar templatedriven forms", "d": "7/2017"}, {"body": "also struggling making work templatedriven forms workaround background implementing custom form controls show input fields possible error messages bundled together instead inserting template elements form include single line code actually using ionic pure angular nt matter imo worked fine implement crosscontrol custom validators", "d": "7/2017"}, {"body": "currently email amp email confirmation validation user registration method applies password amp password confirmation registerregisterhtml html email address email address confirmation equaltovalidatordirectivets typescript tslint disable directiveselector import directive input onchanges simplechanges angularcore import abstractcontrol ngvalidators validator validatorfn validators angularforms export function equaltovalidator val string validatorfn return control abstractcontrol key string gt want put custom validation logic reminder returning null means valid check invalid controlvalue val amp amp val return equalto controlvalue return null directive selector equalto providers provide ngvalidators useexisting equaltovalidatordirective multi true export class equaltovalidatordirective implements validator onchanges input equalto string private valfn validatorsnullvalidator ngonchanges changes simplechanges void const change changes equalto change thisvalfn equaltovalidator changecurrentvalue else thisvalfn validatorsnullvalidator validate control abstractcontrol key string return thisvalfn control also notice within additional component bound form control error messages accessed within via triggered watching custom messaged passed via object", "d": "7/2017"}, {"body": "fix planned implementing log part angular release", "d": "7/2017"}, {"body": "inlesco note find unlikely designer better time modifying jsx template js involved rather html", "d": "7/2017"}, {"body": "gioragutt designer finds difficult modify xml templates android apps valid reason use html building android apps", "d": "7/2017"}, {"body": "consider hey matt please help align textbox versus hey matt please help align textbox yeah look render function nt forget use instead class course opinionated saying one approach absolutely better unlike always hear react developers means nothing gon na get shit done either way reason today choose way around people opinions youyour ceoyour ctowhatever love react angular gon na react vice versa also implies frameworkslibraries dozens frameworks needs shit community pick couple good ones aka improve living hell publishing dozens libraries ai nt gon na get progress", "d": "7/2017"}, {"body": "gioragutt opinion type checking templates huge step forward second point correct many people take angular try improve ie adding jsxtsx", "d": "7/2017"}, {"body": "yes type checking important possible angular templates typescript language service hand unlimited expressiveness templates hinders tooling support implications much energy one potentially needs spend understanding template file one opinion whether worth power consistency language", "d": "7/2017"}, {"body": "egaga said type checking linting validation general html templates fact comes built angular today think might worth mentioning comparing might worth likewise since stuff behind nt ing collection like also take example easy use pipes expressive well integrates templates someone works linux bash daily concept clear intuitive let alone composable takes bit pure js", "d": "7/2017"}, {"body": "see position changed likely course welcome integrate react jsxbased libraries angular trivial supporting angular core", "d": "7/2017"}, {"body": "cause issue formcontrolname could used component transclusion angular ca nt find comes thru transclusion exactly like artaommahe example", "d": "7/2017"}, {"body": "chances use workaround template side like", "d": "7/2017"}, {"body": "ca nt believe bug still ca nt import css issue year", "d": "7/2017"}, {"body": "worked around problem using modified version systemjsangularloaderjs changed line", "d": "7/2017"}, {"body": "think found solution guys nt use styleurls simply rename style file extension stylesheet used automatically therefore component files like work style", "d": "7/2017"}, {"body": "update recommended style accomplish currently shows blank probably inserted wrong place", "d": "7/2017"}, {"body": "good job", "d": "7/2017"}, {"body": "including polyfill works like charm install include", "d": "7/2017"}, {"body": "robwormald issue moved link longer valid", "d": "7/2017"}, {"body": "vicb could reopened seems mainly general solution rather tying ngif ngfor etc would appear solve issue binding ngfor function result alternative seems create separate component simply sake storing value one expression would also one way solve issue believe", "d": "7/2017"}, {"body": "shocked still issue years ago submitted issue caused entire business ditch angular use react everything worked fantastic years project requires literally two years later faced problem said came hokey work around idea bad far hokey factor sure performant wanted share case helps someone assumes give root component id approot indexhtml file appcomponentts know could optimized nice easy copy paste thing us throw appcomponentts worry changing anything later decide need add modify root level attributes hope helps", "d": "7/2017"}, {"body": "know net initializing constructor antipattern due limited error handling options also ca nt declare constructor async case es", "d": "7/2017"}, {"body": "answer meet canonical test text easy find information appinitializer short version use run initialization code application code runs", "d": "7/2017"}, {"body": "necessary remind moduleconfig return promise", "d": "7/2017"}, {"body": "ovaldi pseudo code example could angular two years ago prebootstrap hook possible via promise boot using token needs use feature load initial asynclazy route bootstrapping prebootstrap hook di token bootstrap use ngmodules postbootstrap hook di token learned angular nt want delay initial bootstrap much logic configuring app bootstrap nt recommended", "d": "7/2017"}, {"title": "api support removing stale keepalive inactive components", "body": "problem feature solve large nested tree components built data schema containing components set easy type switching tree changes child components way tree change destroyed rebuilt according new data components stay around even though likely completely useless imagine schemabuilt interface schema changing filesystem tree changing totally different path server would like destroy inactive components tree changes run vnodes check property private property request either clear approved way identify inactive child components way clear whole cache also happy reply along lines use inactive better way handle particular situation given available api proposed api look like admit familiar vue codebase either expose public check keepalive components method maybe could filter method select specific children state would hide implementation details private booleans", "num": "6259", "d": "7/2017"}, {"title": "binding undefined property produces unexpected results", "body": "version reproduction link steps reproduce define object one property eg create two tags one bound existing property eg one undefined property eg easier debugging add data template eg run browser edit text boxes notice changing box tied undefined property nt update data box tied defined property changed expected expected changing text boxes immediately modify data either warning error console telling binding undefined property allowed actually happening changing text box tied defined property modifies data immediately changing text box tied undefined property nothing text box changed", "num": "6258", "d": "7/2017"}, {"title": "", "body": "vue", "num": "6257", "d": "7/2017"}, {"title": "outin transition issue async components block", "body": "version reproduction link steps reproduce open click b button expected previous component disappear component b appears actually happening components b visible simultaneously see also issue", "num": "6256", "d": "7/2017"}, {"title": "vif vshow work vue laravel spark", "body": "fixed", "num": "6255", "d": "7/2017"}, {"title": "issue vue guide vue two things call name", "body": "version reproduction link steps reproduce find place issue guide doc put forgive guide components custom events demo code demo code two things call name variable name make new learners confusing screenshot orange mark event red mark event handler completely different things called name logic code component inside event triggered event handler event handler use triggered vue instance event event triggered vue instance event handler confused maybe someone understand many new people understand two things different perhaps following code clearer html total expected see steps reproduce actually happening see steps reproduce", "num": "6254", "d": "7/2017"}, {"title": "vif stops working axios http client receives status code", "body": "hi trying use vue axios interface api server server returns error status code session expired authorization fails internal errors happens server want display error message user know something happened following javascript code function side methods block following html code warning server returned error likely session expired please refresh page try code quite straightforward somehow alert message nt display intentionally send http axios", "num": "6253", "d": "7/2017"}, {"title": "dt dd without end tags went wrong", "body": "version reproduction link steps reproduce write without end tags turns template except dom template example html title details title details expected dom tree become html title details title details actually happening dom tree became html title details title details", "num": "6252", "d": "7/2017"}, {"title": "vuejs build generates corrupt urls", "body": "build vuejs website locally runs perfectly deploy production run npm run build copy contents dist webserver visit website see blank website viewed generated html css conclude something wrong going build process first indexhtml contains links javascript files urls start bad idea means website must deployed root website everybody wants fix suggestion replace assetspublicpath conficindexjs assetspublicpath fixes indexhtml css files real mess starts found url like url staticimgpathtofile css file css files directory staticcss images static img means url nt url staticimgpathtofile either url staticimgpathtofile url imgpathtofile quiet urls generated css files make absolutely sense ever using plugins default way start vuejs project means vuejs box ca nt used production please fix url generated files next time learn test releasing unusable code", "num": "6251", "d": "7/2017"}, {"title": "null propagation view model binding", "body": "problem feature solve decreases amount bloat code like null checking nested properties example need bind value ok null need introduce additional prop view model return write code view proposed api look like could look like null propagation c ie null checks would done behind scenes compiled render function", "num": "6250", "d": "7/2017"}, {"title": "limit number loops loop", "body": "", "num": "6249", "d": "7/2017"}, {"title": "update vue got errors", "body": "need help", "num": "6248", "d": "7/2017"}, {"title": "", "body": "problem feature solve \u6bd4\u5982 messsage message \u7b49\u6548 message \u4f20\u9012\u7684\u662fnumber \u662f\u4e2abool \u662f\u5426\u53ef\u4ee5\u8003\u8651\u7c7b\u4f3creact jsx \u4e0e proposed api look like", "num": "6247", "d": "7/2017"}, {"title": "avoid changing textarea user types", "body": "version reproduction link steps reproduce textarea used user starts typing property updated causes css setting overridden expected height set property actually happening set property", "num": "6246", "d": "7/2017"}, {"title": "vue detected jsp loaded struts", "body": "version reproduction link steps reproduce sample heading firstname", "num": "6245", "d": "7/2017"}, {"title": "issue question idn vuejs rewrite url relative somewhat like absolute", "body": "dealing vuejs aspnet cor application code somewhat like however later code try get return strange kind normal behavior", "num": "6243", "d": "7/2017"}, {"title": "\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u7684slot\u548cvfor\u95ee\u9898", "body": "version reproduction link steps reproduce expected \u53ef\u4ee5\u6b63\u786e\u7684\u663e\u793a\u8bc4\u5206 actually happening \u8bc4\u5206\u65e0\u53cd\u6620\u6216\u8005\u5206\u6570\u4e0d\u6b63\u786e", "num": "6242", "d": "7/2017"}, {"title": "sync modifier support object properties", "body": "problem feature solve sync modifier support object properties example myobj object foo bar property feature could use update value proposed api look like currently need use format new feature becomes simple clear especially object many properties", "num": "6241", "d": "7/2017"}, {"title": "wheel event delta values", "body": "version reproduction link steps reproduce message method onwheel evt consolelog evt expected wheel target deltax deltay deltaz actually happening wheel target buttons clientx clienty layerx layery", "num": "6240", "d": "7/2017"}, {"title": "router \u52a8\u6001 view", "body": "vue\u6709\u52a8\u6001\u7ec4\u4ef6 \u5bf9\u5e94\u4e00\u4e2a \u6211\u662f\u60f3\u5982\u679c\u53ef\u4ee5\u52a8\u6001\u7684\u8bdd \u5c31\u53ef\u4ee5\u8fd9\u6837", "num": "6239", "d": "7/2017"}, {"title": "", "body": "good afternoon everyone english good understand trying use vmoney table error chrome vue warn may infinite update loop component render function vue page component looks like anyone know error find solution thank", "num": "6238", "d": "7/2017"}, {"title": "allow adjusting width vnavigationdrawer", "body": "problem feature solve moment vnavigationdrawer api seems way adjust width reason request kind possible adjust width hand moment even react data changes binding data small screens menu open close properly would useful feature api work like rest vuejs proposed api look like thinking simple reactive width property vnavigationdrawer needs behind screens", "num": "6237", "d": "7/2017"}, {"title": "bound property input field type date reset using setinterval", "body": "version reproduction link steps reproduce please see fiddle using chrome expected expect bound property reset actually happening bound property input type date reset using setinterval", "num": "6236", "d": "7/2017"}, {"title": "vfor add prop uniquekey generates unique key automatically", "body": "problem feature solve business system many key object used many data operate use object key advocated wondering prop automatically helpful proposed api look like html", "num": "6235", "d": "7/2017"}, {"title": "vfor directive fails props binding", "body": "version reproduction link steps reproduce set vue instance child component pass props along child component use vfor property expected complain setting default value actually happening error typeerror early lifecycle app mount later display property working around behavior check variable however prevent vfor directive erroring", "num": "6234", "d": "7/2017"}, {"title": "vue filter error", "body": "version reproduction link steps reproduce codepen please open commened html error appear vue broken expected please fix actually happening error function defined appear use vue filter vtext tested get error", "num": "6233", "d": "7/2017"}, {"title": "remove binding event single element", "body": "remove binding event single element", "num": "6232", "d": "7/2017"}, {"title": "input \u5728\u4f7f\u7528 model\u53cc\u5411\u7ed1\u5b9a\u65f6\u65e0\u6cd5\u66f4\u65b0\u6216\u5ef6\u8fdf\u66f4\u65b0", "body": "version reproduction link steps reproduce git \u9879\u76ee\u4e2d\u5b58\u5728\u6bd4\u5bf9\u622a\u56fe \u4ee5\u53ca\u7f16\u597d\u53f7\u7684\u91cd\u73b0\u6d41\u7a0b\u53ca\u6548\u679c \u51fa\u73b0\u7684\u95ee\u9898 \u622a\u56fe\u4e2d \u4e0b\u65b9\u8f93\u5165\u6846\u5448\u73b0\u7684\u5185\u5bb9 \u6548\u679c\u90fd\u4e0d\u76f8\u540c vue\u5bf9\u8c61\u4e2d\u7684\u503c expected \u53ea\u58f0\u660evue\u7ed1\u5b9a\u5bf9\u8c61\u4ee5\u53ca\u65d7\u4e0b\u4e00\u5c42\u7684\u5b50\u5bf9\u8c61 \u4e0d\u7528\u58f0\u660e\u5b50\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027 \u63d0\u9ad8\u517c\u5bb9\u6027\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u5e76\u6539\u53d8vue\u5c5e\u6027\u4e2d\u7684\u53d8\u91cf actually happening \u5982\u679c\u4e0d\u63d0\u524d\u58f0\u660e\u5c5e\u6027 \u5219\u65e0\u6cd5\u4f7f\u7528\u53cc\u5411\u7ed1\u5b9a \u63a7\u4ef6\u8d4b\u503c\u65e0\u6cd5\u8d4b\u7ed9\u5c5e\u6027 \u53ea\u505c\u7559\u5728\u8f93\u5165\u6846\u4e2d \u672a\u907f\u514d\u53cd\u9988\u8fc7\u957f\u88ab\u5173\u95ed\u8bf4\u660e\u8bf7\u89c1git\u4e2dreadme", "num": "6231", "d": "7/2017"}, {"title": "input \u5728\u4f7f\u7528 model\u53cc\u5411\u7ed1\u5b9a\u65f6\u65e0\u6cd5\u66f4\u65b0\u6216\u5ef6\u8fdf\u66f4\u65b0", "body": "question differences problem number questions said big see accept use shorter text explain problem thanks version reproduction link steps reproduce \u9879\u76ee\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c \u8fd9\u6b21\u63d0\u4ea4\u5305\u542b\u81f3\u5c11 \u5176\u4e2d\u4f7f\u7528\u4e86 \u7b2c\u4e09\u65b9\u975evue\u7ec4\u4ef6\u7684\u7b2c\u4e09\u65b9\u65e5\u5386\u5e93 \u5176\u4e2dvue\u5e93\u5f15\u7528 \u81ea\u8eab\u9879\u76ee\u4e2d lib min \u5e94\u8be5\u662fmin \u91cd\u73b0\u6b65\u9aa4 \u4ee5\u53ca\u7f16\u597d\u53f7\u7684\u91cd\u73b0\u6d41\u7a0b\u53ca\u6548\u679c \u51fa\u73b0\u7684\u95ee\u9898 \u622a\u56fe\u4e2d \u4e0b\u65b9\u8f93\u5165\u6846\u5448\u73b0\u7684\u5185\u5bb9 \u6548\u679c\u90fd\u4e0d\u76f8\u540c vue\u5bf9\u8c61\u4e2d\u7684\u503c expected \u53ea\u58f0\u660evue\u7ed1\u5b9a\u5bf9\u8c61\u4ee5\u53ca\u65d7\u4e0b\u4e00\u5c42\u7684\u5b50\u5bf9\u8c61 \u4e0d\u7528\u58f0\u660e\u5b50\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027 \u63d0\u9ad8\u517c\u5bb9\u6027\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u5e76\u6539\u53d8vue\u5c5e\u6027\u4e2d\u7684\u53d8\u91cf actually happening \u5982\u679c\u4e0d\u63d0\u524d\u58f0\u660e\u5c5e\u6027 \u5219\u65e0\u6cd5\u4f7f\u7528\u53cc\u5411\u7ed1\u5b9a \u63a7\u4ef6\u8d4b\u503c\u65e0\u6cd5\u8d4b\u7ed9\u5c5e\u6027 \u53ea\u505c\u7559\u5728\u8f93\u5165\u6846\u4e2d \u5b9e\u9645\u5e94\u7528\u9879\u76ee\u4e3a \u5347\u7ea7 \u4e2d\u88ab\u5176\u5f3a\u5927\u7684\u517c\u5bb9\u6027\u4ee5\u53ca\u6613\u7528\u6027\u6298\u670d \u6539\u8d77\u6765\u6bd4\u8f83\u8d39\u52b2 \u4f46\u662f\u4e0a\u8ff0\u4e24\u4e2a\u95ee\u9898\u57fa\u672c\u4f7f\u8fd9\u6b21\u5347\u7ea7\u5931\u8d25 \u5728\u6211\u4eec\u9879\u76ee\u4f7f\u7528\u4e2d \u5b58\u5728\u5927\u91cf \u4f8b\u5982 vmodel \u58f0\u660e\u65f6 \u4f8b\u5982\u8fd9\u6837 vuedata test \u8fd9\u6837\u5728\u4f7f\u7528\u65f6\u5b8c\u5168\u4e0d\u7528\u58f0\u660e\u5c5e\u6027 \u4e14\u4f1a\u5728\u8fd0\u884c\u65f6\u88ab\u81ea\u52a8\u521b\u5efa\u5e76\u6b63\u5e38\u4f7f\u7528 \u8fd9\u79cd\u7528\u6cd5\u4f7f\u7528\u65b9\u4fbf\u800c\u4e14\u907f\u514d\u4e86\u5f88\u591a\u9ebb\u70e6 \u800c\u4e14\u8fd9\u6837\u5373\u4f7f\u4e00\u4e2a\u51e0\u5341\u4e2a\u5bf9\u8c61\u7684\u957f\u9875\u9762 \u540e\u53f0\u4fee\u6539\u7f16\u8f91\u6240\u7528\u7684\u9875\u9762 \u4e5f\u53ea\u9700\u8981\u58f0\u660e\u5f88\u5c11\u4e00\u90e8\u5206\u5373\u53ef\u4f7f\u7528 \u7684\u65f6\u5019 \u5982\u679c\u4e0d\u58f0\u660e\u4e00\u7ea7\u5bf9\u8c61\u5219\u4f1a\u62a5\u9519 \u540e\u671f\u53d1\u73b0\u4e0d\u58f0\u660e\u5c5e\u6027\u4e5f\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528 \u5373\u4e0a\u8ff0\u95ee\u9898 \u8fd9\u79cd\u7528\u6cd5\u662f\u6211\u4eec\u89c9\u5f97\u5728\u4ee3\u7801\u5f00\u53d1\u4e2d\u6700\u7701\u4e8b\u7684\u4e00\u79cd \u5927\u5927\u51cf\u5c11\u4e86\u4e00\u4e2a\u9875\u9762\u7684\u5f00\u53d1\u65f6\u95f4 \u4ee5\u53ca\u5927\u5927\u589e\u52a0\u4e86\u5bb9\u9519\u7387 \u975e\u5e38\u60ca\u8273vue\u53ef\u4ee5\u8fd9\u4e48\u4f7f\u7528 \u800c\u4e14\u8fd9\u79cd\u7528\u6cd5\u5728\u4e0d\u786e\u5b9a\u53c2\u6570\u5c5e\u6027\u65f6\u5c24\u5176\u597d\u7528 \u5c24\u5176\u662f\u4f8b\u5982\u5f39\u7a97\u5c01\u88c5\u5e93\u7b49\u4e0d\u80fd\u786e\u5b9a\u5b50\u5bf9\u8c61\u7684\u65b9\u5f0f \u65e5\u671f\u63a7\u4ef6\u5b8c\u5168\u662f\u6539\u5b8c\u65f6\u624d\u53d1\u73b0\u7684\u95ee\u9898 input\u7684value\u6539\u53d8\u4f46\u662f\u5c5e\u6027\u672a\u6539\u53d8 \u5e0c\u671b\u80fd\u63d0\u5347\u517c\u5bb9\u6027 \u540c\u6837\u4e5f\u662f\u4e3a\u4e86\u51cf\u5c11\u5f00\u53d1\u91cf\u548c\u66f4\u6539\u91cf \u671f\u5f85\u56de\u590d \u8c22\u8c22 \u5982\u6709\u7591\u95ee\u53ef\u8054\u7cfb wangyan chocyacom \u6216 woderpg sinacom \u6216 \u8bf7\u5907\u6ce8", "num": "6230", "d": "7/2017"}, {"title": "get already render dom mounted funtion tutorial say", "body": "version reproduction link steps reproduce example like project faced issue expected obtain already render dom actually happening get render dom please help also import component get dom parent template right away help solved settimeout function exactly right issue solved getting dom object use nexttick whenever use functionthe dom computed agianthat want", "num": "6229", "d": "7/2017"}, {"title": "laravel vuetified real time starter app using vue js", "body": "laravel around corner building spa never easy vue js everyone always trouble setting first real time app instead experimenting set ive already done put one piece starter app compose laravel laravel passport laravel echo server laravel echo vue vue router vuetify perfect spa realtime application using favorite frameworks easy install using vscode bonus get specific linting auto fix error code future ill add way customize save state vuetify components back end thats purpose vuetified service provider like please star share", "num": "6228", "d": "7/2017"}, {"title": "vfor key\u62a5\u9519", "body": "version reproduction link steps reproduce found expected \u5e0c\u671b\u5728\u5b89\u88c5\u7684vue\u7684\u65f6\u5019 \u58f0\u660e\u7ed9\u7528\u6237 \u5728\u7f16\u8bd1\u7684\u65f6\u5019\u7ed9\u7528\u6237 \u91cd\u65b0\u5b89\u88c5\u7684\u65f6\u5019 \u5c31\u9ed8\u8ba4\u5b89\u88c5\u5230nodemodule\u91cc\u4e86 \u800c\u7528\u6237\u5374\u4e0d\u77e5\u9053 actually happening \u9879\u76ee\u62a5\u9519 \u51fa\u73b0\u7ea2\u8272\u8b66\u544a console\u91cc\u9762 found", "num": "6226", "d": "7/2017"}, {"title": "version update vue warn data property onclose already declared prop use prop default value instead", "body": "instance messageboxalert message title options gt typeof message object options message title undefined message undefined else options options return messagebox merge type alert title message options export default props visible default false message default title default", "num": "6225", "d": "7/2017"}, {"title": "vue warn data property onclose already declared prop use prop default value instead", "body": "vue warn data property onclose already declared prop use prop default value instead", "num": "6224", "d": "7/2017"}, {"title": "attribute key looks invalid", "body": "version reproduction link steps reproduce indexhtml item button x behind expected list items left actually happening list items left bind attribute key component item vfor reuse component instance", "num": "6222", "d": "7/2017"}, {"title": "save", "body": "", "num": "6221", "d": "7/2017"}, {"title": "checkbox array model nt work array value", "body": "version reproduction link steps reproduce create bind array using expected toggling checkbox addremove array array actually happening toggling checkbox adds contents array array checkbox toggled contents added many times clicked", "num": "6219", "d": "7/2017"}, {"title": "nonscoped styling components applied switching routes", "body": "version reproduction link steps reproduce vuejs documentation scoped css mentions include scoped nonscoped styles component built example application used two single file components instead string templates example rendering expected tried apply scoped nonscoped styles components first one second one idea whole body background switch choosing specific route styles ok change depending route nonscoped ones screenshots chrome dev tools initial application load non routed yet background white ok default one route choosing route style body applied correctly say first component switching routes loading second component background changes new color looks like chrome dev tools current style overwritten components elements correctly rendered content scoped styling switches keep background elements relevant component rendered correctly changes chrome dev tools last view unchanged words looks like style stacked previously overwritten properties updated expected behaviour following comment stackoverflow tried style vue container result expected nonscoped styling applied parent independently routing actually happening one styling taken account overwritten reachable anymore issue initially asked stackoverflow", "num": "6218", "d": "7/2017"}, {"title": "optin virtual dom", "body": "problem feature solve lot complex ui elements generally reside outside vfor virtual dom may hypothetically helpful looking ui frameworks provide extensibility degree freedom would see without virtual dom pretty much none relates rendering lists proposed api look like option render vfor virtual dom implying virtual dom absent elsewhere entirely optin", "num": "6217", "d": "7/2017"}, {"title": "vmodel work components using vbind attrs von listeners", "body": "problem feature solve following discussion given component template following currently work problem component expects value events dom passed listener instead proposed api look like option make smarter since think unlikely anyone want use dom perhaps used components could check argument passed listener use instead option make smarter maybe nonenumerable property could added eg help detect uses cases object passed used element listeners relevant could wrapped throwing away data someone wants access eg instead luck however modifiers also supported object syntax could fix making disable automatic wrapping behavior thoughts strategies implications considering definitely open alternatives", "num": "6216", "d": "7/2017"}, {"title": "validate numbersonlyfield get set", "body": "version reproduction link steps reproduce observe type text second field tab notice numbersonly validation nt happen tab last field type something expected prefer numbersonly validation happen typing field actually happening validation occur nonnumbers field updated may issue vue welcome info best way numbersonly validation text field", "num": "6215", "d": "7/2017"}, {"title": "build issue", "body": "updated noticed reviewing newest updates thought bring attention", "num": "6214", "d": "7/2017"}, {"title": "empty scopedslots", "body": "version reproduction link steps reproduce click jsfiddle see console expected example actually happening working", "num": "6212", "d": "7/2017"}, {"title": "vonce whitelist additional directives", "body": "problem feature solve single child parent requires reactivity use parent element must apply siblings reactive elementcomponent instead would nicer could whitelist reactive children element component additional proposed directives whitelists usually better strategy especially security blacklists proposed api look like ideally would able html static text nonstatic text static text static text html static text nonstatic text static text static text additional directives proposed valways takes precedent always excludes elementcomponent children vnever takes precedent never excludes elementcomponent children vexclude exclude specific elementcomponent children vonce", "num": "6211", "d": "7/2017"}, {"title": "vue \u5f02\u6b65\u7684\u7ec4\u4ef6\u53ef\u4ee5\u547d\u540d", "body": "problem feature solve \u53ef\u4e0d\u53ef\u4ee5\u50cfwebpack proposed api look like requireensure gt resolve require comoptionvue option require historyindexvue resolve xxxx", "num": "6210", "d": "7/2017"}, {"title": "select element ca nt rendered correctly vue ie", "body": "version reproduction link steps reproduce open link see select element doest rendered correctly expected second option \u83dc\u5355\u4e8c select element view actually happening third option \u83dc\u5355\u4e09 select element still view use settimeout solve problem want know happened", "num": "6209", "d": "7/2017"}, {"title": "select options rendering components", "body": "version reproduction link steps reproduce create component produces tags templates reused select box expected select options component rendered select box actually happening select box empty white space would expect options", "num": "6208", "d": "7/2017"}, {"title": "property syntax mixture", "body": "problem feature solve currently writing custom component properties require validation others require validation would nice could mix array object syntax declare kinds properties easier javascript props items type object required true proposed api look like ideally would like following work javascript props items type object required true", "num": "6207", "d": "7/2017"}, {"title": "rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter", "body": "version reproduction link steps reproduce rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter expected rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter actually happening rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter", "num": "6206", "d": "7/2017"}, {"title": "rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter", "body": "rander\u91cc\u9762\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49filter", "num": "6205", "d": "7/2017"}, {"title": "flash\u5d4c\u5165\u540e\u5c5e\u6027allowfullscreen\u65e0\u6cd5\u5168\u5c4f\u95ee\u9898", "body": "version reproduction link steps reproduce embed allowfullscreen true \u4f1a\u88ab\u8f6c\u6210embed allowfullscreen allowfullscreen \u5bfc\u81f4flash\u65e0\u6cd5\u5168\u5c4f expected \u5e0c\u671b\u589e\u52a0\u5bf9\u5c5e\u6027\u4e0d\u5904\u7406\u7684\u6307\u4ee4 actually happening isbooleanattr\u8fd9\u4e2a\u6570\u7ec4\u91cc\u9762\u6709\u5bf9allowfullscreen\u7684\u5904\u7406 embed allowfullscreen true \u4f1a\u88ab\u8f6c\u6210embed allowfullscreen allowfullscreen \u5bfc\u81f4flash\u65e0\u6cd5\u5168\u5c4f", "num": "6202", "d": "7/2017"}, {"title": "discussion best way create hoc", "body": "version reproduction link steps reproduce searching right way implement hoc vuejs could nt found suitable example link known hoc implementations nt work expected implement hoc vuejs want know implement hoc reactjs way expected hocs simply renders components passed parameters hocs containing slots events render normally actually happening element rendered missing rendered order differs basecomponent hoc implementations work event handlers", "num": "6201", "d": "7/2017"}, {"title": "add preservewhitespace percomponent basis", "body": "problem feature solve take component preservewhitespace enabled vuetemplatecompiler get rendered page mark would resort sort css get around instead renders markdown would instead like ability preservewhitespace enabled default ability override percomponent basis option could disable component would render html html markdown proposed api look like envisioning maybe new top level property exported function within singlefile vue component eg", "num": "6200", "d": "7/2017"}, {"title": "first letter disapears textarea vmodellazy input", "body": "version reproduction link steps reproduce anything typed textarea vmodellazy input event checking etargetvalue first letter typed disapears textarea also happens using keydown event expected typed message appear normally textarea actually happening first letter disappears text area", "num": "6199", "d": "7/2017"}, {"title": "create npm package project containing vuex module", "body": "problem feature solve integration vuex modules npm proposed api look like wondering properly library components would like publish rely store state vuex module register vuex module store someone installed packaged npm getting components hooked creating plugin big deal unfortunately seem hook like registering vuex modules someone provide example repository perhaps guide right direction perhaps wrong even assume would viable someone else import vuex module case would love hear asking gitter stackoverflow yield results since pretty indepth question something similarly also asked resolved though", "num": "6198", "d": "7/2017"}, {"title": "vuecli \u5373\u4f7f\u662f\u65b0\u9879\u76ee \u70ed\u4fee\u6539\u6837\u5f0f\u6587\u4ef6\u62a5\u9519", "body": "vue init webpack npm npm run dev wait compiling pm usersyinxulaidesktopdesignjsmactntnodemodulesenhancedresolve keystartswith typeerror read property startswith undefined storagepurge usersyinxulaidesktopdesignjsmactntnodemodulesenhancedresolve storagepurge usersyinxulaidesktopdesignjsmactntnodemodulesenhancedresolve cachedinputfilesystempurge usersyinxulaidesktopdesignjsmactntnodemodulesenhancedresolve eventemitterwatcheronce usersyinxulaidesktopdesignjsmactntnodemoduleswebpack eventemitterg emittwo eventemitteremit eventemitterontimeout usersyinxulaidesktopdesignjsmactntnodemoduleswatchpack ontimeout tryontimeout timerlistontimeout npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm run dev npm err node npm err npm npm err code elifecycle npm err mactnt dev npm err exit status", "num": "6197", "d": "7/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected \u6839\u636e done done actually happening done done html message js new vue el app data message hello vuejs methods test function alert done function var count var dfd deferred var task function alert count count count gt dfdresolved return dfdpromise function var count var dfd deferred var task function alert count count count gt dfdresolved return dfdpromise", "num": "6195", "d": "7/2017"}, {"title": "select vmodel triggers change event options changed", "body": "version reproduction link steps reproduce dynamically change tag triggers change event actually chosen option nt changed expected trigger change event actually happening triggers change event change behaviour intruduced", "num": "6193", "d": "7/2017"}, {"title": "invalid prop type check failed prop value expected string number got symbol", "body": "version reproduction steps reproduce use symbol value expected symbol type ok actually happening symbol type ok", "num": "6192", "d": "7/2017"}, {"title": "sometimes wrong", "body": "version reproduction link steps reproduce expected \u6b63\u786e\u7684\u73af\u5883\u5224\u65ad actually happening \u9519\u8bef\u7684\u73af\u5883\u5224\u65ad", "num": "6191", "d": "7/2017"}, {"title": "much recursion hit injecting vuebased mixins", "body": "version reproduction link steps reproduce define component uses mixins define provide properties wrapped vue component eg foo bar define component b inside uses inject add foo bar properties expected foo bar available component b actually happening get much recursion exception", "num": "6190", "d": "7/2017"}, {"title": "single file component templates share script file", "body": "separate component code template cases code multiple templates therefore like reference code unfortunately second imported template gets rendered twice way first template srcjsviewloadingspinnervue transition name spinspinner vbind duration enter leave div vif loading class spinner divwrap div vif loading class scanner divouter divinner export default props loading div divrow divbox spinner loading loading divrow divbox scanner loading loading box position relative width height import spinner loadingspinnervue import scanner loadingscannervue export default components spinner scanner data function return loading true created function", "num": "6189", "d": "7/2017"}, {"title": "wechat safari render blank page navigate back ios", "body": "version reproduction link steps reproduce build test project scroll index page bottom click link click back button see blank page actually page contents select scroll page contents show useragent iphone cpu iphone os like mac os x khtml like gecko nettypewifi languagezhcn iphone cpu iphone os like mac os x khtml like gecko expected \u70b9\u51fb\u6d4f\u89c8\u5668\u8fd4\u56de\u540e\u5e94\u8be5\u80fd\u6b63\u5e38\u663e\u793a render complete page navigate back actually happening render blank page navigate back", "num": "6188", "d": "7/2017"}, {"title": "support plain objects vfor keys", "body": "problem feature solve quite frequent need abstract vfored element tree component example go extremely useful building higher older components ie components glues components predefined interfaces used natural objects always come identity automatically unique best suited keys says primitive therefore patch object creation system javascript manually give every object created id property number automatically increases every time new object created duplicate identity object already counter global every object created potentially passed vfor patched havoc utterly destroys usefulness vfor convenience abstraction code reuse also breaks tunes existing code seems much easier implement vfor supports identity objects keys rather patching object system javascript ensure every object duplicated unique primitive make vue happy much easier tons code broken primitive check needs complete unnecessary redesign complexity increases dramatically pleeease support plain objects ie objects created object literal absolutely primitives diff algorithm needs nothing difficult implement us invaluable proposed api look like support objects vfor keys simple yet useful", "num": "6187", "d": "7/2017"}, {"title": "data \u4e2d\u7684\u503c\u5982\u4f55\u7ed1\u5b9a\u591a\u79cd\u6570\u636e\u7c7b\u578b", "body": "version reproduction link steps reproduce expected actually happening", "num": "6186", "d": "7/2017"}, {"title": "works wrong", "body": "version reproduction link steps reproduce import vuecomp adgeneratorvue var ad vueextend vuecomp var ad new ad el documentcreateelement div data data expected work data prop component instance ad actually happening props data instance undefined run npm vue upgrade problem happens", "num": "6185", "d": "7/2017"}, {"title": "invalid expresson internet explorer attribute contains tab characters", "body": "version reproduction link steps reproduce using component contains object property splitting object across multiple lines pug template internet explorer fails compile template error message invalid expression experimenting trying fix issue found removing tab characters cause component successfully render probably due htmlencoded characters tabs among others ca nt nt decoded eval render ie renders ie examples correctly render chrome firefox expected bound prop containing object evaluated actually happening ie string evaluated contains tab characters characters may similar effect", "num": "6184", "d": "7/2017"}, {"title": "vue defined", "body": "version reproduction link steps reproduce document", "num": "6183", "d": "7/2017"}, {"title": "refskey return undefined hot reload", "body": "version reproduction link reproduction link need hot reload steps reproduce use vue file vue export default name test mounted setinterval gt consolelog refstest run edit file change save watch console expected hot reload display width actually happening hot reload return width use function event listener even destroy", "num": "6182", "d": "7/2017"}, {"title": "table width binding update automatically", "body": "version reproduction link steps reproduce input box filled default simply click button expected first table cell width bound grows automatically method triggered change data property cell width bound property also change actually happening dom update performed unless uncommenting statement must manually call vm perform force update feature bug", "num": "6181", "d": "7/2017"}, {"title": "\u56f0\u6270\u5f88\u4e45 \u6c42\u52a9 property method tojson defined instance", "body": "warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsflexboxflexboxvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsflexboxflexboxitemvue nodemodulesvux vuxsrccomponentsflexboxflexboxvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsbadgeindexvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsbadgeindexvue nodemodulesvux vuxsrccomponentsflexboxflexboxitemvue nodemodulesvux vuxsrccomponentsflexboxflexboxvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsflexboxflexboxvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous vue warn property method tojson defined instance referenced render make sure declare reactive data properties data option found nodemodulesvux vuxsrccomponentsflexboxflexboxitemvue nodemodulesvux vuxsrccomponentsflexboxflexboxvue srcpagesshopforherevue srcpagesshopshopvue srcappvue warn vueesmjs warnnonpresent vueesmjs get vueesmjs setpanelcontent anonymous", "num": "6179", "d": "7/2017"}, {"title": "input type checkbox nt work array model falsevalue", "body": "version reproduction link steps reproduce create bind array using add property expected toggling checkbox toggles string array actually happening toggling checkbox adds string array nt remove", "num": "6178", "d": "7/2017"}, {"title": "set comments true nt work", "body": "version reproduction link steps reproduce msg export default comments true data return msg hello vuecli comments true comment gone expected see link actually happening use vuecli comment gone", "num": "6177", "d": "7/2017"}, {"title": "support cucumberjs chioce unit test ui test", "body": "problem feature solve know mocha good unit test toolbut think cucumberjs better mochai nt idea integration cucumber karmacan support cli teach integration proposed api look like see", "num": "6176", "d": "7/2017"}, {"title": "exception thrown using static mixins provider", "body": "version reproduction link steps reproduce define component uses mixins define provide properties eg foo bar define component b inside uses inject add foo bar properties expected foo bar available component b actually happening exception thrown", "num": "6175", "d": "7/2017"}, {"title": "much recursion hit injecting vuebased mixins", "body": "version reproduction link steps reproduce define component uses mixins define provide properties wrapped vue component eg foo bar define component b inside uses inject add foo bar properties expected foo bar available component b actually happening get much recursion exception", "num": "6174", "d": "7/2017"}, {"title": "circular dependency using webpack", "body": "version reproduction link steps reproduce copy code link barebones vuejs project add necessary dependencies packagejson start node open browser developer console go site hosted node find errors like typeerror read property undefined expected errors code correct afaict otherwise need errors please word user knows concretely wrong rather open issue well bug report actually happening get vague message something called mountbefore hook property undefined readable simply want use vuejs able locally define themes combination proven rather difficult far", "num": "6173", "d": "7/2017"}, {"title": "input value change changing data", "body": "version reproduction link steps reproduce type something input changed click button expected input value actually happening input value change", "num": "6172", "d": "7/2017"}, {"title": "higher", "body": "", "num": "6171", "d": "7/2017"}, {"title": "error compiling template even though one root element", "body": "version reproduction link steps reproduce tag root element put tag child element expected render template correctly actually happening error compiling template message component template contain exactly one root element", "num": "6170", "d": "7/2017"}, {"title": "vuefor\u5728\u548cwatch\u914d\u5408\u4f7f\u7528\u65f6\u8868\u73b0\u5f02\u5e38", "body": "version reproduction link steps reproduce \u5728codepen\u94fe\u63a5\u4e2d \u6709\u8be6\u7ec6\u8bf4\u660e \u8fd9\u4e2a\u95ee\u9898\u53d1\u751f\u5728watch\u4e00\u4e2a\u53d8\u91cf\u53d8\u5316 \u4e14\u8fd9\u4e2a\u53d8\u91cf\u7531vfor\u6253\u5370\u7684\u65f6\u5019 \u4f1a\u51fa\u73b0\u65e0\u53cd\u5e94\u7684\u60c5\u51b5 \u81ea\u5df1\u5206\u6790\u539f\u56e0\u53ef\u80fd\u51fa\u5728vfor\u4e3a\u4e86\u4f18\u5316\u6027\u80fd\u7b49\u5f85\u53d8\u5316\u7ed3\u675f\u518d\u8fdb\u884c\u6e32\u67d3 \u800cwatch\u7684\u5b58\u5728\u5bfc\u81f4\u65e0\u6cd5\u89e6\u53d1\u6e32\u67d3 \u778e\u5206\u6790\u7684 \u89c1\u7b11 \u6682\u65f6\u89e3\u51b3\u529e\u6cd5\u662f\u5148\u5728watch\u4e2d\u7528\u4e00\u4e2a\u53d8\u91cf\u5148\u5b58\u8d77\u6765 \u5f53\u6240\u6709\u53d8\u5316\u5b8c\u6210\u540e \u4e00\u5e76\u89e6\u53d1\u6e32\u67d3 \u8be6\u89c1watch\u4e2d\u7684valinfixed \u7b2c\u4e00\u6b21\u63d0\u4ea4issue \u5f88\u591a\u5730\u65b9\u4e0d\u4e13\u4e1a \u89c1\u8c05 \u5e0c\u671bvue\u8d8a\u505a\u8d8a\u597d expected vfor\u80fd\u6b63\u5e38\u6e32\u67d3 actually happening vfor\u6ca1\u6709\u4efb\u4f55\u53cd\u5e94 \u8fd9\u4e2abug\u51fa\u73b0\u5728\u4efb\u4f55\u60c5\u51b5 \u5df2\u7ecf\u5728codepen\u4e2d\u590d\u73b0", "num": "6169", "d": "7/2017"}, {"title": "aria tag gets removed entirely false", "body": "use screenreader visit accordion dropdown need ariaexpanded false init vue automatically removes ariaexpanded tag entirely false way keep ariaexpanded tag false value ariaexpanded removed false", "num": "6168", "d": "7/2017"}, {"title": "velse vfor", "body": "problem feature solve python presumably languages nifty forelse pattern lets provide fallthrough condition loop iterations example concise simplifies fairly common case like see something similar vue templates directive something anyone else would care take shot implementing proposed api look like completed would able use conditional like", "num": "6167", "d": "7/2017"}, {"title": "optional prop passing child components", "body": "problem feature solve tldr would like way bind value child component value passed child component prop tag native dom node child component nt take prop name nothing happens value nt written dom place would really help follows list template like mycomponent number different components prop nt one nt prop named might get emitted dom like browser serialising kinda pointless really bad performance kind unsatisfying know solve ensuring components might use prop named callback whether use however component know props might need take feels like code smell proposed api look like couple ideas could solved problem think unique perhaps adding propsdata prop would solve problem general solution modifier could added passes value child component property given name child component nt prop native dom node modifier results noop name suggestions concerned way optional props passing either two solutions offer interested hear think feature general thanks considering", "num": "6166", "d": "7/2017"}, {"title": "vue single file component multiple top level templates", "body": "problem feature solve simplify put wrapper around conditional templates consider table view different layout whether rows none try running search search results block results currently wrap template different element within say div template cause multiple top level elements found side effect putting div page may desired example block wanted different element id class would easily readible necessarily even possible way works last template found evaluates true drawn currently case multiple top level templates created without executing conditional checks proposed api look like try running search stock results block results would draw page load gets populated draw template", "num": "6165", "d": "7/2017"}, {"title": "vmodel binds id input radio dynamicly appears first time", "body": "version reproduction link steps reproduce click one radio list example second item id attribute radio element appears first time console bind value attribute radio id attribute appears time expected id attribute radio appears time actually happening id attribute radio appears first time vuejs version chrome version", "num": "6164", "d": "7/2017"}, {"title": "using refs computed ok access mounted otherwise always undefined", "body": "version reproduction link steps reproduce uncomment hook run expected always actually happening uncomment everything works fine reactive uncomment would keep still accessing lead reactive", "num": "6163", "d": "7/2017"}, {"title": "vueserverrender servercachekey option error tip", "body": "version reproduction link steps reproduce link demo learn vue ssr clone npm install modify servercachekey options appvue string npm start localhost expected error tip show terminal nothing actually happening nothing rendered browser error tip terminal nt know happened need much time debug think source code vueserverrenderbuildjs throw error nt know nt", "num": "6162", "d": "7/2017"}, {"title": "uncaught typeerror read property state undefined", "body": "version reproduction link steps reproduce srcappauthservicesauthjs need import store import store store error occurred uncaught typeerror read property state undefined turns wasted lot time trying understand problem realized one vuex modules loaded called auth several tests discovered inside import file store modules srcappstorejs following problem occurred import store auth auth always returns error even though changing address authindexjs duplicated file authindexjs new name authtestejs keeping code identical files changed import import store auth authteste made work without understanding happens decided report problem remove import store file srcappauthservicesauthjs application returns normal operation vuex also works normally even load auth module expected load vuex modules application work actually happening uncaught typeerror read property state undefined", "num": "6161", "d": "7/2017"}, {"title": "support promise rendertostring vueserverrenderer", "body": "problem feature solve renderrendertostring function return nothing async function need return response callback lead bug koa wrap function return promise let work something like function render renderer let resolve const promise new promise r gt resolve r serverget async ctx gt const res await render renderer ctxstatus ctxbody res maybe renderrendertostring return promise better proposed api look like", "num": "6160", "d": "7/2017"}, {"title": "allow ternary vbind type vmodel", "body": "problem feature solve common show password pattern today use vifvelse consider allowing ternary expression returns one allowed proposed api look like", "num": "6158", "d": "7/2017"}, {"title": "documentactiveelement microsoft edge", "body": "problem feature solve bug current version microsoft edge causes unspecified error accessing documentactiveelement inside iframe two calls accessing activeelement vue code base one triggering ms edge issue one projects believe issue introduced reported ms edge bug microsoft going release fix future release see meantime wondering could wrap activeelementent calls try catch work around seems like ie similar issues past snippet sample code provided issue based workaround implemented jquery ui see would nt surprised similar issues still lurking ms browsers implementing workaround vue help avoid issue current ms edge ms browser versions similar issues proposed api look like", "num": "6157", "d": "7/2017"}, {"title": "variable synchronization local memory", "body": "problem feature solve want open vue web app want define variables custom attribute save local memory update opened browser tabs proposed api look like simple define variables attribute local memory sync", "num": "6155", "d": "7/2017"}, {"title": "dynamic textarea value updating", "body": "version reproduction link steps reproduce create dynamic element expected value textarea set changes actually happening nothing happens first created text area empty even text value", "num": "6154", "d": "7/2017"}, {"title": "scoped slots infinite update loop binded data", "body": "version reproduction link steps reproduce open console run expected infinite loop actually happening second sortpagecontrol generates infinite update loop console vue warn may infinite update loop component render function found understand list getter sortpagecontrol produces additional watchers something like problem", "num": "6153", "d": "7/2017"}, {"title": "lifecycle created commit mutation logger", "body": "version reproduction link steps reproduce lifecycle created commit mutation logger vuedevtool expected logger first init actually happening lifecycle created commit mutation logger", "num": "6152", "d": "7/2017"}, {"title": "report syntaxerror appjs", "body": "version reproduction link steps reproduce eval eslintdisable nwebpackrequire nconst hotclient webpackrequire nnhotclientsubscribe function event n eventaction reload n windowlocationreload n n nn sourcemappingurldata applicationjson expected work fine actually happening create vuecli devclientjs seem compatible", "num": "6151", "d": "7/2017"}, {"title": "html block comments amp single quotes parsed correctly", "body": "version reproduction link steps reproduce using new property vue instance understand block comments also errors single quotes used within inline comments particularly annoying drupal development debugging templates since template debug output done using block comments contains single quotes see codepen example typical drupal comment block output expected comments rendered correctly within outputted html actually happening vuejs fails render instance throws exception trying parse comments believe would happen using drupal development debugging turned using vue", "num": "6150", "d": "7/2017"}, {"title": "dom didt sync data", "body": "version reproduction link steps reproduce click fetchdata expected dom show true click actually happening dom show false always", "num": "6149", "d": "7/2017"}, {"title": "dom didt sync data", "body": "version reproduction link steps reproduce click fetchdata expected dom show true click actually happening dom show false always", "num": "6148", "d": "7/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected actually happening", "num": "6147", "d": "7/2017"}, {"title": "vue amp vuetemplatecompiler different behavior amp compile contents pre tag", "body": "version reproduction link steps reproduce using highlight codes vue files covert normal codes pairs upgrade code pre tag compiled inline formats works well seems amp different behavior pre tag compilation contents pre tag also see html demos tested demo bash git clone install vuetemplatecompiler npm install npm run dev works well html contents demo bash install vuetemplatecompiler npm vue vuetemplatecompiler npm run dev demo code inline html contents compare two html contents seems removed expected codes pre correct format actually happening codes pre inline", "num": "6146", "d": "7/2017"}, {"title": "transition erases classname unexpectly part enteractiveclass already present component", "body": "version reproduction link steps reproduce make component template like html hello make visible expected transition class added removed transition ends need leave original class nested vnode actually happening class removed original vnode also removed property course using class names overlap transitions avoid problems however think better process recalculating rendering original vnode last tick transition", "num": "6145", "d": "7/2017"}, {"title": "included", "body": "problem feature solve rationale excluding bindings else would bind attributes wrapped elements proposed api look like consider component vue export default name field say like bind class element true expect able like wanted go current behavior could instead vue export default name field computed divattrs return attrsclass inputattrs const attrs attrs return attrs would suggest nt overwrite existing attributes currently done attributes also would ideally prevent attributes passed root element set", "num": "6144", "d": "7/2017"}, {"title": "supports vuecomponent require", "body": "problem feature solve seems common users trying uses like supported uses else receive error like failed mount component template render function defined proposed api look like parameter try identify using instance get property automatically fallback error avoided guess done like", "num": "6143", "d": "7/2017"}, {"title": "date input accept date object initial value", "body": "version reproduction link steps reproduce use date object vmodel input typedate expected date input use provided date value actually happening date input shows mmddyyyy blank state", "num": "6142", "d": "7/2017"}, {"title": "wiki quite outdated", "body": "version reproduction link steps reproduce open wiki page see vue almost expected uptodate information link updated resources actually happening see outdated information remove vue almost block add link vuejs documentation site instead change roadmap side link think would give better feel people evaluating product wiki updated would provide pr possible wiki", "num": "6140", "d": "7/2017"}, {"title": "bug input vue variable update triggered", "body": "version reproduction link steps reproduce ask issue closed posva writed vue listen back setting value directly dom element true see evan write commented jul work please return previous issue solution expected type ok actually happening type evan write commented jul vue detect changes directly setting value input elements design know external lib changed input value manually trigger change event input element notify vue sync value back model", "num": "6138", "d": "7/2017"}, {"title": "remove every error reportingdebugging provideinject allow require flag inject", "body": "problem feature solve found vue checks inject value throw warn development null think reasonable case use provideinject mixin maintain zindex popper component standard zindex tip dialog without mixin difficult maintain zindex tip dialog provideinject mixin tip dialog index nothing extra css case inject zindexbase necessary first popper component use zindex latest vue throw warn javascript export default provide return zindexbase thiscalczindex inject zindexbase props zindex type number default computed calczindex thiszindexbase return thiszindex return thiszindexbase thiszindex calcstyle return zindex thiscalczindex proposed api look like inject value accept object", "num": "6137", "d": "7/2017"}, {"title": "transition mode property accept default", "body": "problem feature solve transition mode defined accepts either outin inout default valuewhen transitioning dynamic components sometimes needed switch three modes proposed api look like modedefault switch simultaneous mode", "num": "6136", "d": "7/2017"}, {"title": "vue variable updated", "body": "version reproduction link steps reproduce vue variable updated resive change message expected type ok actually happening type", "num": "6135", "d": "7/2017"}, {"title": "ssr contextrenderstyles returns empty string", "body": "version reproduction link steps reproduce webpack config rules test css loader vuestyleloader cssloader html import commoncss export default name app context styles property contextrenderstyles returns empty string client side works fine nt know missed please help \u7684\u7ed3\u679c\u662f expected contextrenderstyles gt body actually happening contextrenderstyles gt", "num": "6134", "d": "7/2017"}, {"title": "\u7ec4\u4ef6\u5b9e\u4f8b\u66f4\u65b0\u5f15\u8d77\u5176\u4ed6\u540c\u7ec4\u4ef6\u5b9e\u4f8b\u4e00\u540c\u66f4\u65b0", "body": "version reproduction link steps reproduce \u91cd\u73b0\u95ee\u9898 \u6309\u94ae\u8fdb\u884c\u91cd\u73b0 expected \u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u7ec4\u4ef6\u5b9e\u4f8b\u89e6\u53d1\u66f4\u65b0\u65b9\u6cd5 actually happening \u540c\u4e00\u4e2a\u7ec4\u4ef6\u7684 \u591a\u4e2a\u5b9e\u4f8b \u6709\u5d4c\u5957\u5185\u5bb9\u7684 \u90fd\u89e6\u53d1\u4e86\u66f4\u65b0\u65b9\u6cd5", "num": "6133", "d": "7/2017"}, {"title": "input typetext element disabled vue file", "body": "version reproduction link steps reproduce npm run dev expected want render search input element page actually happening displayed page always disabled ca nt enter text click reflect readonly disabled attributes falsei use chrome test", "num": "6132", "d": "7/2017"}, {"title": "resolve local components distributed slots", "body": "version reproduction link steps reproduce register component single slot locally registered component accessible parent pass element component content slot initialize vue instance expected element resolved component accepts slot registered actually happening resolved vue searches scope instance nt registered component element trying create component many local components reduce name collision simplify structure view making expressive like since elements distributed parent slots would make sense least try resolve context parent would make components much modular independent", "num": "6131", "d": "7/2017"}, {"title": "native eventsfunctional components eventstopimmediatepropagation cancel event loop", "body": "version reproduction link steps reproduce create functional component create event handler calls put context event handler array component handler place component handler first index allowing component handler first chance stop propagation using functional component parent component bind listener event eg execute event expected functional component handler called first since first array functional component handler execute call kill event loop actually happening execution order preserved correctly parent component handler still invoked additional handlers bound use case starts creating link component respect property continues various components create cohesive ui component api would beneficial way cancel vue event loop nt know way around source well enough imagine vue internally tracks event handlers given node intercepts native event first invokes callbacks natively bound callbacks get invoked callbacks bound vue invoked", "num": "6130", "d": "7/2017"}, {"title": "parent component updates whenever child props change wasteful", "body": "version reproduction link steps reproduce create parent component child component make child prop variable make parent modify value prop attribute every second keep variables related parent view unchanged make parent consolelog whenever view updates ie set parent beforeupdate consolelog expected nt consolelog happening every second actually happening consolelog happening every second parent view gets updated every second takes cpu resources update component view even actual html nt changed entire vdom needs recalculated therefore believe behaviour wasteful considered bug imagine updates child props happened times second parent component view contained nonchanging variables", "num": "6129", "d": "7/2017"}, {"title": "scoped styles working ssr", "body": "version reproduction link steps reproduce color red important expected red color actually happening wont see red loading server insted load page throught router see", "num": "6128", "d": "7/2017"}, {"title": "key warning nt shown transition keys", "body": "version reproduction link steps reproduce add key binding transition expected get warning actually happening vue issues warning avoid using nonprimitive value key use stringnumber value instead however key bound boolean property", "num": "6126", "d": "7/2017"}, {"title": "vue support von drop von paste", "body": "version reproduction link steps reproduce drag file red box normal work black box using expected work like trigger vue object method like event actually happening triggered go may standard least jquery support", "num": "6125", "d": "7/2017"}, {"title": "variable updated triggering outside triggered onclick", "body": "version reproduction link steps reproduce update input jquery get results selectizejs plugin onchange function value val value trigger click trigger change see updating variable vue use value give true variable haw must send message update variable without onclick function clear simple best way get variable plugin expected update variable actually happening change variable haw must send message update variable without onclick function clear simple best way get variable plugin", "num": "6124", "d": "7/2017"}, {"title": "trigger vuejs update variable outside", "body": "update hidden input jquery plugin selectizejs resive result value plagin js plagin make onchange function value val value trigger click trigger change see updating variable vue use function trigger click value give true variable haw must send message update variable without onclick function approach clear best way thank", "num": "6123", "d": "7/2017"}, {"title": "want get value change success dontt know happened", "body": "version reproduction link steps reproduce good first failed slid expected value current value beforevalue previous value actually happening value identical beforevalue changed", "num": "6122", "d": "7/2017"}, {"title": "way programmatically pass props args new vue instance keep updated", "body": "problem feature solve trying integrate vue meteor blaze working rendering vue components blaze templates would like programmatically create vue instance pass props args would equivalent object keyvalues would mapped props keys among props set element attributes otherwise important part also able update afterwards props args change allowing call function update would great proposed api look like propose could function could provide reactive function would used populate props args keys returned function props would become args alternatively could function could run update props args imperative way", "num": "6121", "d": "7/2017"}, {"title": "allow suppression warnings individual basis", "body": "problem feature solve warnings generated compile time may design eg component lists rendered vfor explicit keys project generates enough warnings warnings author might care could missed warnings disabled completely using silent flag allows allornothing approach would nice able disable certain warnings perhaps something simple ignoredwarnings option config type state warning could given unique reference maybe enough warnings matter might something nice future proposed api look like", "num": "6120", "d": "7/2017"}, {"title": "offer listen helper wrap calls instance lifespan", "body": "problem feature solve often add several event listeners various things created function remove beforedestroy function mixin helps ton every case cases keep track event listeners specific instance cleaned correctly could built bonus points used commonly used eventemitters save lot time ease use tracking weird bugs due left bound events proposed api look like vue instance need worry cleaning event instance destroyed", "num": "6119", "d": "7/2017"}, {"title": "sync", "body": "hallo need sync modifier emit update event construction works well twoway binding vue export default data return internalvalue thisvalue props value", "num": "6118", "d": "7/2017"}, {"title": "\u6c42\u7ec4\u4ef6\u4e2d\u52a8\u6001\u7f16\u8bd1\u6a21\u677f\u7684\u65b9\u6cd5", "body": "problem feature solve proposed api look like \u7136\u540e\u8fd9\u6837\u5c31\u5f97\u5230\u4e86vue\u7f16\u8bd1\u540e\u7684html\u4ee3\u7801", "num": "6117", "d": "7/2017"}, {"title": "\u80fd\u5426\u7ed9\u81ea\u5b9a\u4e49\u6307\u4ee4\u589e\u52a0\u8bbe\u7f6evmodel\u7ed1\u5b9a\u7684\u53d8\u91cf\u7684\u65b9\u6cd5", "body": "problem feature solve proposed api look like", "num": "6116", "d": "7/2017"}, {"title": "props registered functional component remain contextdataprops", "body": "problem feature solve currently props registered functional component appear result used wrapper component like props shared functional component passed get around adding missing props anticipate behavior encountered user noticed discrepancy confused must admit also confused first proposed api look like perhaps always match rare cases users nt want transparent wrapper components explicitly create sanitized data object change could technically change rendered results existing applications think worst case might extra attributes added root elements breaking change exactly", "num": "6115", "d": "7/2017"}, {"title": "multiple return slots components", "body": "problem feature solve imagine following usage component create formcomponent cform use cdialog would wire buttonscontent returnslots cform buttonscontentslots cdialog kind component composition seems possible way simulate proposed api look like define template multiple return slots", "num": "6114", "d": "7/2017"}, {"title": "vue slot grab inner content semantic code sides slot usage", "body": "problem feature solve allow element become slot properties rather nested within element want problem current solution example want make tag slot element within may cause styling desired semantically makes little sense want class style attributes across application inside template proposed api look like stock currently work way work moment cause nested tag made nt semantic", "num": "6113", "d": "7/2017"}, {"title": "vmode \u5728 \u4e0a\u7684\u8868\u73b0\u5f02\u5e38", "body": "version reproduction link steps reproduce b c selected slct new vue el slct data slct mounted function var settimeout function thatslct \u901a\u8fc7watch slct \u53d1\u73b0 \u5b83\u88ab\u6539\u4e86\u4e24\u6b21 \u7136\u540e\u53c8\u88ab\u6539\u4e3aundefined \u7b97\u662fbug\u5417 expected \u521d\u59cb slct \u88ab\u6539\u4e3aundefined \u6216\u8005\u5f53\u6539\u53d8slct\u65f6\u4e0d\u88ab\u6539\u53d8\u6210undefined actually happening \u672a\u51fa\u73b0\u671f\u671b\u7684\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00 \u5f53\u65e0\u9009\u9879\u88ab\u9009\u4e2d\u65f6 select\u7684\u503c\u90fd\u88ab\u6539\u6210undefined \u6216\u8005\u5f53\u65e0\u9009\u9879\u88ab\u9009\u4e2d\u65f6 \u90fd\u4e0d\u6539\u8d4b\u4e88select\u7684\u503c", "num": "6112", "d": "7/2017"}, {"title": "vue runs watchers call print", "body": "version reproduction link steps reproduce tested chrome work computer browsers available test would interested hear behaviour browsers set vue instance uses matchmedia modify values printing page trigger page print using print function expected mediaquerylistener captures print change updates values vue calls appropriate watchers redraws printed page sees redrawn images actually happening mediaquerylistener captures print change updates values user gets printed page without redrawn data vue calls watchers print finished issue calls print blocking chrome least seems mean promises vue using nexttick nt execute print exits however javascript run print calls stuff inside media query listeners couple thoughts resolve perhaps vue use media query listener detect case change update loop appropriately expose vueforceticknow function calls queued watchers immediately perhaps bit evil could force redraw hand inside media query listener vm forceupdate looks like asynchronous also nt execute anything inside media query listener perhaps behaviour forceupdate synchronous", "num": "6111", "d": "7/2017"}, {"title": "code within mounted executed component within conditional", "body": "version reproduction link steps reproduce create two components page within conditionals expected conditions true expect component mount run inside mounted actually happening first component runs mounted outside conditions mount expected", "num": "6110", "d": "7/2017"}, {"title": "weex vue click call twice", "body": "version reproduction link steps reproduce first must set weex development environment clone project switch branch run visit chrome click mobile device toolbar web developer tools click text expected click function call twice actually happening call work vue today reinstall packagejson auto upgrade modify script reproduce problem use code compare two differences", "num": "6109", "d": "7/2017"}, {"title": "\u4e00\u4e2a\u5c0f\u5c0f\u7684\u5efa\u8bae", "body": "\u53ef\u5426\u628arefjs const refs vm refs \u6539\u6210 const refs vm root refs", "num": "6108", "d": "7/2017"}, {"title": "child element removed beforedestroy parent component called vif", "body": "version reproduction link steps reproduce open click click see happen console expected consolelog show size element actually happening got width height child element removed document beforedestroy called intended", "num": "6106", "d": "7/2017"}, {"title": "vuejs work nwjs", "body": "version reproduction link steps reproduce required expected nwjs window show test actually happening msg appear", "num": "6105", "d": "7/2017"}, {"title": "vhtml issue", "body": "thinking error able pass email bodies full html think give vue issues comes using vhtml error get way use valid pair separator", "num": "6104", "d": "7/2017"}, {"title": "consistent behavior edit props", "body": "problem feature solve child component edit props throw error console without object arrayi feel weirdmember ask ca nt edit type object array thati think edit object array two way bindingthat bad know object array reference typebut wish consistent behaviori two suggest edit props throw error nt throw errorbecause edit number string nt reactive parent componentso know emit want parent component bind child component edit value featurei feel half edit propssome type edit type ca nt editso wired proposed api look like see description", "num": "6103", "d": "7/2017"}, {"title": "listeners return empty object none assigned", "body": "problem feature solve unlike empty return empty object empty returns undefined biggest inconvenience would nice quality life change writing concise code proposed api look like instead write", "num": "6102", "d": "7/2017"}, {"title": "directives inside transitions unbound leave transition ends", "body": "version reproduction link steps reproduce fiddle click button fade component click fade component expected simple directive turn text red directive unbound leave transition finishes text red end leave transition actually happening directive unbound beginning transition text longer red duration leave transition ran issue transitioning modals custom directives inside unbinding removed elements page resulting jarring transition able work around polling inside unbind function see directive inside transition performing unbind actions transition finishes", "num": "6101", "d": "7/2017"}, {"title": "render template", "body": "hello trying render template inside template luck possible ps template dynamic thanks", "num": "6100", "d": "7/2017"}, {"title": "allow defining optional inject dependency default values", "body": "problem feature solve case components work standalone children would nice able provide default values provided dependencies would also avoid warning missing inject case one expected use case proposed api look like inject array key string string symbol name string symbol default", "num": "6097", "d": "7/2017"}, {"title": "initialize options data", "body": "problem feature solve like able pass data attribute component initializing like import thecomponent thecomponentvue thecomponentthedata myglobaldate component would look like data optionsthedata unfortunately seems like options initialized late point data based proposed api look like options initialized data would work please let know already good way tried number ways best come data like date rootthedata seems better pass variable component tied root", "num": "6096", "d": "7/2017"}, {"title": "problem ssr rendering scoped css seems ssr nt set", "body": "version reproduction link steps reproduce check fork set itemlistvue style scoped site still looks fine element get correct example upgrade vue wo nt get hard refresh cause server side rendering failing somehow expected work vue actually happening nt added elements breaks scoped styling", "num": "6095", "d": "7/2017"}, {"title": "", "body": "vuecomponent autosync function resolve reject require comautosyncvue resolve requireensure function var rulebox require componentruleboxjs \u89c4\u5219\u6d88\u606f\u901a\u77e5 ruleboxinit rulbox", "num": "6094", "d": "7/2017"}, {"title": "inject option mixin longer works", "body": "version reproduction link steps reproduce create mixin sets option create component uses said mixin use component context corresponding expected data provided context correctly injected component uses mixin option set actually happening data provided injected component uses mixin unless option specified directly component mixin use pattern specifying options mixins extensively provides really useful mixins specifying relationships different components component using mixin would example child would use mixin parent vue however longer works option mixin ignored", "num": "6093", "d": "7/2017"}, {"title": "laravel version mismatch vue fiasco", "body": "version reproduction link steps reproduce composer global require laravelinstaller laravel new myapp cd myapp yarn yarn run dev expected work actually happening module build failed error vue packages version mismatch vue vuetemplatecompiler pls", "num": "6092", "d": "7/2017"}, {"title": "laravel version mismatch vue fiasco", "body": "", "num": "6091", "d": "7/2017"}, {"title": "cant install windows commit", "body": "version reproduction link steps reproduce cmd npm init npm vue expected correct installation vue npm actually happening error c nodescriptspine npm vue vue postinstall c nodescriptspinenodemodulesvue node buildinstallhooksjs throw err error find module c nodescriptspinenodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn optional skipping optional dependency fsevents nodemoduleschokidarnodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os ar ch npm warn pine description npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs vue npm err node npm err npm npm err code elifecycle npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err c nodescriptspinenpmdebuglog windows c nodescriptspine npm v c nodescriptspine node v", "num": "6090", "d": "7/2017"}, {"title": "cant install windows commit", "body": "hi found commit change method post install c nodescriptspine npm vue vue postinstall c nodescriptspinenodemodulesvue node buildinstallhooksjs throw err error find module c nodescriptspinenodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn optional skipping optional dependency fsevents nodemoduleschokidarnodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os ar ch npm warn pine description npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs vue npm err node npm err npm npm err code elifecycle npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err c nodescriptspinenpmdebuglog npm node windows thanks lot", "num": "6089", "d": "7/2017"}, {"title": "npm install vue error", "body": "failed vue postinstall script node buildinstallhooksjs", "num": "6088", "d": "7/2017"}, {"title": "install vue failed", "body": "", "num": "6087", "d": "7/2017"}, {"title": "postinstall script error installing", "body": "version reproduction link steps reproduce folder deploying npm expected install vue correctly actually happening error find module workspacegithubvuessrnodemodulesvuebuildinstallhooksjs", "num": "6086", "d": "7/2017"}, {"title": "support props", "body": "problem feature solve support props like jsx beacuse use dynamic component like want use vfor generate components nt know expand props proposed api look like", "num": "6085", "d": "7/2017"}, {"title": "setter nt invoke computed property object", "body": "version reproduction link steps reproduce open jsbin link edit form inputs output view see console view setter nt invoke console output editing inputs expected setter need worked object computed properties actually happening setter works scalar computed properties see example read reactivity depth documentation understand apply case without using methods", "num": "6083", "d": "7/2017"}, {"title": "could export namespace typescript definition js", "body": "problem feature solve using vscode write javascript using tag add intellisense instead import require work vue proposed api look like make work vue told need add end file without intellisense js work vscode working sample nt know would impact anything work case use tag get vue need intellisense solution guided thread", "num": "6082", "d": "7/2017"}, {"title": "could export namespace typescript definition js", "body": "using vscode write javascript using tag add intellisense instead import require make work vue told need add end file without intellisense js work vscode", "num": "6081", "d": "7/2017"}, {"title": "", "body": "getting error last two day two day working fine done thing project throwing error amp project worked also throwing error anybody please help", "num": "6080", "d": "7/2017"}, {"title": "allow extending iterating custom objects vfor", "body": "problem feature solve working fully integrating vue meteor managed implement fully except vue integrates minimongo mongodbcompatible clientside reactive datastore one run mongodb queries clientside database receive cursor ideally one could use cursor directly vue see potential improvements vue could allow iterating custom objects like minimongo cursor plugin could register custom object way detect minimongo already provides facilities make reactivity work better knows inform consumer documents moved order documents changed instead vue figure comparing new array documents previous array documents documents minimongo fixed known keys using cursor default used one downside minimongo every time request objects even cursor get copies objects referentially nonequal proposed api look like potentially better ways integrate minimongo support reactivity hooks think simplest general way would vue allow registering postprocessors computed fields case plugin would check returned value instance cursor run convert cursor array prevent vue replacing values getters registering way configure default key iterate case could check postprocessor cursor set default key iterate", "num": "6079", "d": "7/2017"}, {"title": "assigning computed property without setter fail", "body": "problem feature solve computed property getter setter set noop try assign computed property nothing happens hide programming errors proposed api look like would suggest production instead noop warning function would assigned setter warning message would printed one tries assign value computer property alternatively output computed property without setter could configured without setter readonly property", "num": "6078", "d": "7/2017"}, {"title": "stop template engine render block", "body": "problem feature solve way stop template compiling rendering block parent instance instead let another instance template engine job like template engine using tag case want use many instances inside page might nested note ca nt use components page divided fragments rendered different places proposed api look like nt know exact clean way thinking something like verbatim", "num": "6077", "d": "7/2017"}, {"title": "custom directive inserted hook nt fire transition used binded element", "body": "version reproduction link steps reproduce create custom directive uses hook apply directive element wrapped toggle visibility element expected hook fire like hook actually happening hook nt fire spent like couple hours debugging custom directive vuebar thought issue code unfortunately think issue vue workaround though wrap element directive another element get transitioned like example reproduction", "num": "6076", "d": "7/2017"}, {"title": "", "body": "problem feature solve \u4f8b\u5982 \u53ef\u4ee5\u6307\u5b9a\u6e32\u67d3\u5230a proposed api look like \u4f8b\u5982 \u53ef\u4ee5\u6307\u5b9a\u6e32\u67d3\u5230a", "num": "6075", "d": "7/2017"}, {"title": "element replaced surrounded vif", "body": "version reproduction link steps reproduce first click alert shown click show button changes variable view rerendered input nothing click input nothing happens happens vif element remove one vif everything works intended expected alert shown every time input clicked actually happening clicking show alert thrown clicking input breaks js plugins like pikaday replaces input element new one", "num": "6073", "d": "7/2017"}, {"title": "dynamic prop array reactive replacing prop new array parent scope", "body": "version reproduction link steps reproduce wait milliseconds replacing array new data ajax simulation expected child component rerender data dynamically bind parent array parent change actually happening child component rerender data array", "num": "6071", "d": "7/2017"}, {"title": "vm root vnode undefined", "body": "version reproduction link steps reproduce expected root component actually happening", "num": "6070", "d": "7/2017"}, {"title": "strange behavior input type number", "body": "version reproduction link steps reproduce want build input digital code woks fine enter times val vue model display expected think bug actually happening nt know", "num": "6069", "d": "7/2017"}, {"title": "nested transition groups keyvalues accessible", "body": "version reproduction link steps reproduce click one list items console warn value available transition groups uncomment ul see accessible expected accessible actually happening accessible also wonky things working correctly nested transition groups example function child transition group posva find workaround wrapping child transition group template though expected steps accomplishing nested transition groups", "num": "6068", "d": "7/2017"}, {"title": "data passed prop functional component still remains parent dependency", "body": "version reproduction link steps reproduce run amp click buttons look console logs expected funcitems object property changed one corresponding component rerendered actually happening whole parent component rerendered inspite depend changed property directly even worse combined known behavior think worth mentioning docs using functional components items ironically lead performance degradation note personal use case wonder try create actually rewrite knockout hierarchical table like item must aligned rest visual flexibility ca nt use wrap corresponding levels nested illegal html ca nt use components need single root hope change day attach expanded flags raw data good acceptable time user clicks expand collapse group section whole table rerenders tried wrap group items functional component nt help current issue good solutions", "num": "6067", "d": "7/2017"}, {"title": "working", "body": "version reproduction link steps reproduce see minimal reproduction links works expected longhand works model prop named something expected automatically wire prop expression actually happening value passed prop getting default value instead guess binding component mounted", "num": "6066", "d": "7/2017"}, {"title": "transition different performance vif vshow", "body": "vif enter \u5143\u7d20\u4e0e leave\u5143\u7d20\u7684transition name \u4e0d\u4e00\u81f4 vshow \u4e0b\u662f\u4e00\u81f4\u7684 html export default props name type string label computed visible return thisname parentcurrentname transition return parenttransition created parentaddtab throw new error tab use without tabs parentaddtab", "num": "6065", "d": "7/2017"}, {"title": "access", "body": "vue constructor options properties exposes component see vueloader used inject method also need inject options constructor however typescript complains property quick fix would add options static property vue except technically static property shared across vue instances", "num": "6064", "d": "7/2017"}, {"title": "vmodel \u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u67d0\u79cd\u65b9\u5f0f\u4fdd\u6301dom\u7684\u9ed8\u8ba4\u503c", "body": "version reproduction link steps reproduce \u5728\u4e00\u4e9b\u6bd4\u8f83\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b input\u53ef\u80fd\u4f1a\u5b58\u5728\u9ed8\u8ba4\u503c \u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u67d0\u79cd\u4fee\u9970\u7b26 \u4f8b\u5982 \u6765\u4fdd\u6301dom\u5143\u7d20\u7684\u9ed8\u8ba4\u503c expected \u521d\u59cb\u9875\u9762\u4e2d \u4f7f\u7528vmodel\u7ed1\u5b9a\u540e vmvalue \u5f97\u5230input\u7684\u9ed8\u8ba4\u503c actually happening \u521d\u59cb\u9875\u9762\u4e2d \u4f7f\u7528vmodel\u7ed1\u5b9a\u540e vmvalue \u4e3a\u7a7a\u5b57\u7b26\u4e32 inputvalue \u7b49\u4e8e\u7a7a\u5b57\u7b26\u4e32", "num": "6063", "d": "7/2017"}, {"title": "vue component nt seem work razor partial view", "body": "example component resides partial view razor tags partial view nt seem get rendered component rendered string server templating engine wo nt work eg lt div gt lt form aspcontroller home aspaction index gt lt form gt lt div gt razor tag nt get rendered partial view component however normal view seem get rendered", "num": "6062", "d": "7/2017"}, {"title": "\u6ca1\u4e8b\u4e86 \u6211\u81ea\u5df1\u641e\u9519\u4e86", "body": "\u662f\u6211\u81ea\u5df1\u641e\u9519\u4e86", "num": "6061", "d": "7/2017"}, {"title": "error installing vue directly git using npm", "body": "trying install vue directly github would expect install succeeds like get error vue postinstall usersusertemptestnodemodulesvue node buildinstallhooksjs throw err error find module usersusertemptestnodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn enoent enoent file directory open usersusertemptestpackagejson npm warn test description npm warn test repository field npm warn test readme data npm warn test license field npm err darwin npm err argv install npm err node npm err npm npm err code elifecycle npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err usersusertemptestnpmdebuglog versions current vue commit note could use web interface create issue could host reproduction involves npm", "num": "6059", "d": "7/2017"}, {"title": "error installing vue directly git using npm", "body": "trying install vue directly github would expect install succeeds like get error vue postinstall usersusertemptestnodemodulesvue node buildinstallhooksjs throw err error find module usersusertemptestnodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn enoent enoent file directory open usersusertemptestpackagejson npm warn test description npm warn test repository field npm warn test readme data npm warn test license field npm err darwin npm err argv install npm err node npm err npm npm err code elifecycle npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err usersusertemptestnpmdebuglog versions current vue commit note could use web interface create issue could host reproduction involves npm", "num": "6058", "d": "7/2017"}, {"title": "history \u6a21\u5f0f\u4e0b\u53ef\u4ee5\u4f7f\u7528 hash", "body": "problem feature solve history \u6a21\u5f0f\u4e0b\u5237\u65b0\u9875\u9762 hash \u4f1a\u4e22\u5931 proposed api look like \u5982\u4f55\u4fdd\u7559 hash", "num": "6057", "d": "7/2017"}, {"title": "vue filter dont work vhtml", "body": "version reproduction link steps reproduce create component create filter return html register vuefilter use filter vhtml render original html filter expected render html returned filter actually happening error found userspaulodeveloperworkspacesnodegohcwebappsrccomponentshealthchecklistvue userspaulodeveloperworkspacesnodegohcwebappsrcappvue way works", "num": "6056", "d": "7/2017"}, {"title": "filter dont work vhtml", "body": "hi im trying filter value way today works im using component thanks", "num": "6055", "d": "7/2017"}, {"title": "weird promise uiwebview ios gt", "body": "version detail like source code comments described promise became weird uiwebview ios gt input textarea element use vmodel input event create twoway binding scroll page time typing page events respond except native eventsunder circumstances ca nt solve problem welli think settimeout recovers easily promise doesso settimeout avoid hanging javascriptcore scrolling event queue blocked relevant timeupdate event audio video also similar situation wkwebview performs well situation opinion case used vuecli standard mode correct way solve problem btw anyone tell two lines relace vueesmjs line", "num": "6054", "d": "7/2017"}, {"title": "modify effect render function", "body": "version reproduction link steps reproduce open browser devtool inspect element dropdown menu click dropdown button watch dom parent got new class show nothing happand click outside dropdown menu show removed parent class click dropdown menu close means remove show parent class expected attribute added dropdown button actually happening nothing happend attribute inserted dropdown button javascript panel line two attrs added static attr rendered line add difference related thisisexpand described reproduce steps nothing happend digging infomation console vnodedataattrs inconsistent vnodeelmattributes vnodedataattrs vnodeelmattributes dom anything missed document know vnode use modified reuse", "num": "6052", "d": "7/2017"}, {"title": "weird behaviour vfor", "body": "version reproduction link steps reproduce simply uncomment one line code work expected need one line code actually happening nothing", "num": "6051", "d": "7/2017"}, {"title": "failed resolve filter", "body": "use filter vue like template parse like filter params set vurloader", "num": "6050", "d": "7/2017"}, {"title": "vuelangaugeserver issue vscode code snippet contains says hav also replace two components vanishes doesnt display please suggest use explain difference possible thanks", "body": "", "num": "6049", "d": "7/2017"}, {"title": "unexpected click event propagation across different div elements class", "body": "version reproduction link steps reproduce best look codepen reproduction gist create two divs assign classes class different classes must class attribute control visibility using flag kind one shown true false give one divs click handler sets flag true put clickable cancel element inside different click handler sets flag false put click handler div observe clicking cancel buttonelement click handler also ends calling click handler previously hidden div open console see log fired unexpectedly expected clicking cancel buttonelement inside one div also trigger click event div hidden actually happening click event one div somehow propagating click handler previously hidden div codepen reproduction first example illustrates unexpected broken behavior whereby cancel button click event also propagating click handler div hidden second example shows behavior fixed passing calling strange unexpected even necessary third example shows omitting attribute divs also fix behavior obviously workable solution illustrates strangeness issue", "num": "6048", "d": "7/2017"}, {"title": "", "body": "problem feature solve proposed api look like vue data", "num": "6047", "d": "7/2017"}, {"title": "safari input placeholder overlaping macos x", "body": "version reproduction link steps reproduce push button set data expected placeholder changes data works chrome firefox actually happening data overlaps placeholder safari mac os x", "num": "6046", "d": "7/2017"}, {"title": "ref attribute directive named vref", "body": "problem feature solve maybe attribute directive named obviously vuerelated seems like classic html attribute eyes proposed api look like behave like alias good enough", "num": "6045", "d": "7/2017"}, {"title": "attribute directive named", "body": "maybe attribute directive named obviously vuerelated seems like classic html attribute eyes alias good enough", "num": "6044", "d": "7/2017"}, {"title": "allow seeing specific props changed watching deep object", "body": "problem feature solve allows watching object instead either watch field independently parse newval oldval arrays find one changed thinking third parameter watch function shows field called update proposed api look like instead guess better yet", "num": "6043", "d": "7/2017"}, {"title": "nicer syntax default scoped slot", "body": "problem feature solve use scoped slots lot seems extra superfluous adds extra noise proposing placed component course would sacrifice prop called scope would think worth proposed api look like", "num": "6042", "d": "7/2017"}, {"title": "improvement declarable events may require listener", "body": "problem feature solve sometimes would useful component would know consumer registered event listener example autocomplete input might ask suggestions like nobody listening event component stuck proposed api look like see two ways solve preferred make events declarable similar props javascript vue component definition props value new optional emits declaration emits suggest like notation currently easy way know events emitted component also would conflict current way extra information useful b add function vue instance allows check listeners", "num": "6040", "d": "7/2017"}, {"title": "move hook transitiongroup", "body": "problem feature solve currently build great jsonly transitions way hook vue move functionality hookcallback would extremely handy allowing custom js handle flip items need move hook would ideally receive array elements moving array calculated positionsoffset vue already builds css flip vue needs callback based quick look code add much weight since vue already collecting data possibly related seems distinct proposed api look like methods", "num": "6038", "d": "7/2017"}, {"title": "instructions match vif velse resulting inconsistent bind life cycles binding el", "body": "version reproduction link steps reproduce \u4f7f\u7528\u81ea\u5b9a\u4e49\u6307\u4ee4 \u5728bind\u751f\u547d\u5468\u671f\u6253\u5370\u81ea\u5b9a\u4e49\u6307\u4ee4 javascript tried add debug info imgsrc amazing el nt match use vif change velse result rightdoes involve component reuse use vif company velse expected bindingexpressionselfiebannershare touchend actually happening bindingexpressionselfiebannervote touchend", "num": "6037", "d": "7/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected \u7ea2\u8272\u6846\u6846\u6709\u52a8\u6548 actually happening", "num": "6036", "d": "7/2017"}, {"title": "\u6307\u4ee4\u914d\u5408vif velse \u5bfc\u81f4bind\u751f\u547d\u5468\u671fbinding\u548cel\u4e0d\u4e00\u81f4\u95ee\u9898", "body": "version reproduction link steps reproduce \u4f7f\u7528\u81ea\u5b9a\u4e49\u6307\u4ee4 \u5728bind\u751f\u547d\u5468\u671f\u6253\u5370\u81ea\u5b9a\u4e49\u6307\u4ee4 javascript expected bindingexpressionselfiebannershare touchend actually happening bindingexpressionselfiebannervote touchend", "num": "6035", "d": "7/2017"}, {"title": "vfor loop binding data using function updated", "body": "version reproduction link steps reproduce want binding data dynamically vfor loop components updated changes expected need updated changes actually happening change", "num": "6034", "d": "7/2017"}, {"title": "component render times", "body": "version reproduction link steps reproduce try load component load times shows expected expect renderload component one time actually happening component actually loads times", "num": "6033", "d": "7/2017"}, {"title": "render component times shows", "body": "try render component load times", "num": "6032", "d": "7/2017"}, {"title": "", "body": "version reproduction link expected actually happening", "num": "6031", "d": "7/2017"}, {"title": "ios page nt render", "body": "version reproduction link steps reproduce open link iphone ios vue application wraps big article ios dies expected page shown actually happening page nt render error occurred message", "num": "6030", "d": "7/2017"}, {"title": "use parameter access vue instance may better use", "body": "problem feature solve special es directly associated scope lives found always need declare variables keeping vue instance calling subobjects thinking maybe calling vue instance parameter better way proposed api look like example methods", "num": "6029", "d": "7/2017"}, {"title": "nested transitions engaging javascript leave hooks child component using vif", "body": "version reproduction link steps reproduce click toggle button toggle vif flag parent console parent leave callback triggered child leave callback work case enter callback expected child leave hook callback triggered actually happening parent leave callback triggered child leave callback vshow leave callback child parent getting triggered case vif parent leave callback triggered", "num": "6027", "d": "7/2017"}, {"title": "provide first class support splitting code base modules", "body": "problem feature solve coming angular one feature really miss use modules divide code base logical units technically still vue providing router component ts import vue vue import routes routes export const lazymodule vuecomponentoptions render r gt consolelog rendering return r routerview created function routeraddroutes routes work think would intuitive clear separation vue component module specifically module would provide render method proposed api look like good work toward end also testing previous example module ultimately think could expect basic support vue allow vue router vuex extend", "num": "6026", "d": "7/2017"}, {"title": "transition enter working specific strange scenario", "body": "version reproduction link steps reproduce open jsfiddle watch sec numbers animating entering click add see numbers animated expected open jsfiddle watch sec numbers animated correctly click add see numbers animated correctly actually happening difference jsfiddle consolelog thishpos line reason mixing consolelog thishpos thishpos left makes class animationenterto removed enter animation fired sorry nt additional info stuck error hours ca nt understand consolelog could bug animation", "num": "6024", "d": "7/2017"}, {"title": "vif render nt velse", "body": "version reproduction link steps reproduce first set vif element without velse select element js nextsibling previoussibling text dom expected would expect vif return return anything actually happening vif return nt velse requires leave image dom", "num": "6023", "d": "7/2017"}, {"title": "mounted relaying information instances", "body": "version reproduction link steps reproduce create two instances make one really work create element bind instance dom left without element bind vue create functionsconsolelog second make run expected opinion element bind instance available run option allow run actually happening even binding element function runs causing lot problems working electron vue since bundling one js file working dynamic elements need make functions work page mounted problem relays consolelog functions listeners windows electron bundle causing major performance drop makes functions available vue instances", "num": "6021", "d": "7/2017"}, {"title": "vmodel support variables bind simple types", "body": "try use vmodel binding array objects property results take like", "num": "6020", "d": "7/2017"}, {"title": "typeerror read property length undefined", "body": "version reproduction link steps reproduce working vuejs upgraded unable get length array exist within array unable get length inside vuejs function template hide comments commentreplieslength view commentreplieslength comments expected expecting get length array actually happening getting error typeerror read property length undefined", "num": "6018", "d": "7/2017"}, {"title": "find way extend builtin directive", "body": "problem feature solve mean make become perhaps build new proposed api look like vuedirectiveextend srclazy", "num": "6017", "d": "7/2017"}, {"title": "vueset changing data watch invalid", "body": "version reproduction link steps reproduce click click updated handlecomponentpostdata execute expected data update executed actually happening vueset updated new properties added watch triggered updating properties data", "num": "6016", "d": "7/2017"}, {"title": "use different style vuefor", "body": "li vfor item index list style li index gt li want use different style want result li li write code ca nt get result", "num": "6014", "d": "7/2017"}, {"title": "component property default returns undefined set mixin computedmethod result", "body": "version reproduction link steps reproduce create mixin method computed property add mixin component set component property default result mixin computed property method expected mixin methods computed properties available component prop default evaluated allowing component use mixin logic default properties actually happening appears mixin added prop default evaluated leading property defaulted undefined locale property component defaults browser locale setting wanted move code pulls browser locale mixin use multiple components need localization along related utility methods localization would also allow swap default locale logic quickly number components example wanted move ssr navigation object available", "num": "6013", "d": "7/2017"}, {"title": "add string type getter computed option", "body": "problem feature solve simple code sometimes need alias deep link keys like think convenient way like proposed api look like", "num": "6011", "d": "7/2017"}, {"body": "sure understand problem use nt want components stay around aware options", "d": "7/2017"}, {"body": "draw interface based schema nested json components switched others say input widget validated phone number string number components stay alive long user editing tree schema changes commonly tree builds different nested input widgets old ones stay behind inactive state point reusing inactive components anymore schema might require different widgets data random example point phone number temperature widget lingering node requires geographical coordinate object data builds interface user interacts interface part consists keepalive widgets different possible swappable representations data changes interface changes components get destroyed inactive components linger point nt make sense keep typespecific components node nt allow types anymore either way nt possible query component keepalive active", "d": "7/2017"}, {"body": "schema changes commonly tree builds different nested input widgets old ones stay behind inactive state point reusing inactive components anymore schema might require different widgets data state want keep right keep mind component destroyed wrapping component gets destroyed either way nt possible query component keepalive active looks strange use makes imperative instead declarative using makes declarative", "d": "7/2017"}, {"body": "toplevel component pulls data component template never gets replaced nt think installed helpful vue devtools noticed list dead background components extensive schema testing understand point declarative versus imperative templates largely static wrapper component nt see obvious way drop reload least toplevel perhaps one could create wrapper wrappers nt sit directly toplevel component without way destroy inactive children", "d": "7/2017"}, {"body": "think making clear check example use make drop components", "d": "7/2017"}, {"body": "think made case clear difficulty adapting usecase sorry trying patience main typeswitching widget keepalive input data validation switch types change interface validate input according provided models component related data rightfully play around main loads different schema might might need respective inactive component context changed data value worthless long context use include relevant widget components hence drop unnecessary ones depending loaded schema included widgets still old state data since nt get reset model underneath changed nt notice way tell kill reset pristine state guess solution find way exclude components longlived toplevel components might change context significantly data trees change inactive components get destroyed components tree rebuilds", "d": "7/2017"}, {"body": "well old state intentional use activated deactivated hooks change", "d": "7/2017"}, {"body": "expected behaviour syntactic sugar reactive property vue nt know something changed nt render component known caveat way around vue requires declaring data property component", "d": "7/2017"}, {"body": "would really useful could warning console wasted hours tracking learning vuejs", "d": "7/2017"}, {"body": "kichik track rootlevel methodsprops used template declared nested ones triggers error nt way current reactivity system vue drop support internet explorer change reactivity possible exactly specific caveat information official tutorial", "d": "7/2017"}, {"body": "familiar reactivity system yet solution non ie still useful enabled nonproduction builds browsers", "d": "7/2017"}, {"body": "kichik solution complete rewrite reactivity system smile considered unless drop ie support", "d": "7/2017"}, {"body": "bad thanks thoroughly explaining", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hi thank submitting issue right repository repost vuejsvuejsorg", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "normal behavior close html tags", "d": "7/2017"}, {"body": "kocal according html specs selfclose scenario nice catch mysticatea", "d": "7/2017"}, {"body": "quote specs dt element end tag omitted dt element immediately followed another dt element dd element dd element end tag omitted dd element immediately followed another dd element dt element content parent element", "d": "7/2017"}, {"body": "well works expected closings would make sense support vue actually asks omit element closings vue vue warn error compiling template tag matching end tag tag matching end tag tag matching end tag tag matching end tag found even work sure want add support considering pretty different existing ones impossible predict tag going returned component compiling template want support correct behaviour", "d": "7/2017"}, {"body": "sure thought vuejs supports autoclosing opened issue deprecated feature wo nt fix problem found rewriting vueeslintparser report html syntax errors eslintpluginvue case syntax error", "d": "7/2017"}, {"body": "technically even errors sincd vue template compiler shows error console even working expected think need support disable vue errors code like work expected html suggest supporting html specific closings officially need find evan thinks", "d": "7/2017"}, {"body": "ah sorry found behavior reports lacking end tags errors added looks going deprecation please feel free close issue", "d": "7/2017"}, {"body": "mysticatea still changed moment works differently html specification according specs possible inside", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "vuecli issue vue core issue wrong repo template designed work box deploy root deploying nonroot modify root deployment eg also solves relative path problems using relative publicpath simply wrong please learn webpack maybe read issue reporting guidelines learn open constructive issues opening one", "d": "7/2017"}, {"body": "likely vue add aditional nonjavascript syntax optional chaining stage nt think considered yet", "d": "7/2017"}, {"body": "currenly stage proposal ecmascript actually similar functionality requested past stance extend template expressions non javascript syntax case helper method achieves already multitude options available like lodash add functionality core solved better libs already advice would use lodash something similar add prototype helper filter instances", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "please read warning message telling possible mistake checked", "d": "7/2017"}, {"body": "thanks found problem caused picker components mintui information", "d": "7/2017"}, {"body": "vs", "d": "7/2017"}, {"body": "realised problem vue really sorry womanfacepalming", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "working intended slot name appear look console need use scoped slots pass components render functions", "d": "7/2017"}, {"body": "use without directive arguments", "d": "7/2017"}, {"body": "javoski seems clear use like code right especially object many properties", "d": "7/2017"}, {"body": "wheel onwheel event", "d": "7/2017"}, {"body": "please stop adding comments edit original post jsfiddle instead works expected", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "\u56e0\u4e3a\u4f60\u5e94\u8be5\u9075\u5b88\u63d0issue\u7684\u89c4\u5219 \u4f60\u7684\u8fd9\u4e2a\u95ee\u9898\u4e0d\u662f\u5d4c\u5957\u8def\u7531\u89e3\u51b3\u7684\u5417", "d": "7/2017"}, {"body": "\u6216\u8005\u6211\u9700\u8981\u7684\u529f\u80fd\u662f\u8fd9\u6837\u7684 routerview \u600e\u4e48\u624d\u80fd\u5177\u6709 component \u7684\u7279\u6027 eg component slot currentview", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "think wrong repository", "d": "7/2017"}, {"body": "see", "d": "7/2017"}, {"body": "ah see dynamically needed use vueset target key value instead particpantspush date thank time", "d": "7/2017"}, {"body": "use keep mind always required vue", "d": "7/2017"}, {"body": "posva see issue using index key key give data objects unique id keyed properly posva know show list nt need many edit things", "d": "7/2017"}, {"body": "vvpvvp point vue know developer wants work unique key example time looking vue know wanted", "d": "7/2017"}, {"body": "nickmessing want vfor question use normal example wrote common table component used vfor list data operate staffs nt know data key prop key completely used object key advocated nt use key problem expected see issus", "d": "7/2017"}, {"body": "thought forcing use key nt always need keys need unique keys objects probably kind id nickmessing said vue guess guess using index", "d": "7/2017"}, {"body": "posva thought missing point using index key key nt want force use key nt use something wrong link steps click add twice click last line click click first line delete", "d": "7/2017"}, {"body": "told use index generate unique id every object case need trying tell", "d": "7/2017"}, {"body": "hi vvpvvp posva said generate key workaround eg", "d": "7/2017"}, {"body": "vvpvvp point vue infer unique key vue already infer key based index operations like add delete elements list really generate unique simply counter could trick", "d": "7/2017"}, {"body": "kingwl understand question difference generate vue generate vue yes nt know want told key data use vfor need edit data thing else could please generate unique keys us", "d": "7/2017"}, {"body": "vvpvvp calm friend generate unique keys complex cover case hard generate unique key user imo behavior normal try improve got advice", "d": "7/2017"}, {"body": "vue generate unique keys nt know add delete items super easy add id without using hash use incrementing id", "d": "7/2017"}, {"body": "told add key resolve", "d": "7/2017"}, {"body": "imo feature supporting object type keys constructive likely implemented future see know unique key must attached item object automatically generated inside vue may cause problems users unaware really feel troublesome generate unique ids objects write common util function achieve similar workaround kingwl provided much lighter may lead performance test app js const uniquekeyprop uniquekeyprop const keyprefix keyprefix datenow let uid const isobject val gt val null amp amp typeof val object const genuniquekey obj gt isobject obj uniquekeyprop obj return obj uniquekeyprop const value keyprefix uid objectdefineproperty obj uniquekeyprop value return value return obj vuemixin methods genuniquekey html demo", "d": "7/2017"}, {"body": "default vue uses index items since thing without guess developer wants vue wo nt generate unique keys point developer needs provide unique keys vue ca nt guess also vue mutating objects would wrong opinion data nt field could used unique keys something right ask backend team", "d": "7/2017"}, {"body": "posva super easy add id ugly easy add id simple demos easy add id complex datas complex system data nested structure nested nested nested finally good nt need key know vue mechanism changed wonder way handle helpful tips vfor problems adjacent element directive used nt add key also problem kingwl english good maybe words readability sorry also peaceful", "d": "7/2017"}, {"body": "ugly easy add id simple demos easy add id complex datas complex system data nested structure nested nested nested nt fields data make unique make relations objects finally good nt need key want default behavior use index note nt need looping html standard elements", "d": "7/2017"}, {"body": "wrote slowly complete answer always new answer javoski kindly function wrote problem vue ca nt change datas define also ca nt change data used ui components like table component wrote ui toolkit used kind function maybe hard really nt like way", "d": "7/2017"}, {"body": "akryum nt want answer many times index useful please read demo link steps click add twice click last line click click first line delete", "d": "7/2017"}, {"body": "vvpvvp answering part comment know issue resolved provide unique key item data", "d": "7/2017"}, {"body": "let move discussion discord server forum people able help insights specific project vvpvvp thanks", "d": "7/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "7/2017"}, {"body": "expected ca nt use filters vue directives change", "d": "7/2017"}, {"body": "vue filters used inside mustache interpolations vbind expressions latter supported filters primarily designed text transformation purposes complex data transforms directives use computed properties instead use method instead", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "try", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "\u60a8\u597d \u5173\u4e8e objectobserve\u5e9f\u5f03\u5bfc\u81f4\u7684\u540e\u671f\u6dfb\u52a0\u7684\u5c5e\u6027\u65e0\u6cd5\u68c0\u6d4b\u5237\u65b0\u8fd9\u70b9\u5df2\u7ecf\u660e\u767d\u4e86 \u867d\u7136\u8fd8\u662f\u66f4\u559c\u6b22\u54ea\u79cd\u66f4\u7075\u6d3b\u7684\u7528\u6cd5 \u90a3\u5173\u4e8e\u7b2c\u4e09\u65b9\u63a7\u4ef6\u95ee\u9898 \u662f\u5426\u662f\u80fd\u591f\u89e3\u51b3\u7684\u5462 \u8c22\u8c22\u60a8\u7684\u56de\u590d", "d": "7/2017"}, {"body": "\u597d\u597d\u8bfb\u4e0b\u6587\u6863 usage question issue let close", "d": "7/2017"}, {"body": "please nt create issue twice gets closed", "d": "7/2017"}, {"body": "vue \u8fd9\u662f\u56e0\u4e3a\u4f60\u6240\u7528\u7684\u63d2\u4ef6\u5728\u9009\u62e9\u65e5\u671f\u540e\u6ca1\u6709\u89e6\u53d1 input \u5143\u7d20\u7684 datepicker \u5c31\u53ef\u4ee5\u5411\u4e0b\u9762\u8fd9\u6837\u4f7f\u7528\u4e86 vue", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow repo way big ever find real bug boil using smaller template like take look", "d": "7/2017"}, {"body": "question differences problem number questions said big see accept use shorter text explain problem thanks", "d": "7/2017"}, {"body": "html message itemname itemage js new vue el app data message hello vuejs list methods chooseform thisgetsomeinfor methods getsomeinfor actural ajax request use settimeout function settimeout gt consolelog thislist name age name age name age name age name age mounted function thischooseform obtain already render dom height consolelog documentgetelementsbyclassname inforlist offsetheight also obtain already render dom height using nexttick nexttick gt consolelog documentgetelementsbyclassname inforlist offsetheight", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow code works expected data empty height happens vue calls method calls calls starts timer call stack gets cleared back timer nt finsh yet still emptry array height adds next function end event queue timer still nt finish stack gets completely cleared event loop pulls first thing added event queue call stack executes timer still nt finish list still empty height still time vm pulls function event queue event loop pulls event queue call stack executes want get height need wait moment example links find call stack event loop work modern javascript vms", "d": "7/2017"}, {"body": "nickmessing nice answer thanks lot thanks patience detailed", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "key unique primitive value also documented expected value", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "code running successfully today update version", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "messageboxalert message title options gt typeof message object options message title undefined message undefined else options options return messagebox merge type alert title message options", "d": "7/2017"}, {"body": "issue comes simple html file codes listing follow todo var template lt div id todolistexample gt lt ul gt lt item vfor todo index todos vbind index index vbind title todo von remove remove gt lt item gt lt ul gt lt div gt var item template lt li gt mytitle lt button von click remove gt x lt button gt lt li gt data function return mytitle thistitle props title index methods remove function emit remove thisindex new vue el app template template data newtodotext todos methods addnewtodo function thistodospush thisnewtodotext thisnewtodotext remove function index thistodossplice index components item item", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow using index key scenario wo nt work need use unique keys example element removed elements takes place use key work", "d": "7/2017"}, {"body": "thank much big help", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "yes expected vue rather webpack insert remove styles seem think injected head component renders never removed common pattern extarct css single css file production would result", "d": "7/2017"}, {"body": "styles injected head component renders never removed linusborg thank believe means case initially route component rendered nothing injected first component rendered route switch injected second component rendered route switch injected overwrites previous route switches inject anything component already rendered last used therefore stays authoritative one therefore fallback binding outside container class current component also updated question details feel free make answer interested delete mine case", "d": "7/2017"}, {"body": "vdom already optin ui framework responsibility make easy customise vues provide scoped slots props make customisable", "d": "7/2017"}, {"body": "sure understand problem conclusion virtual dom optional", "d": "7/2017"}, {"body": "css frameworks find difficult provide options well port components something virtual dom basically good lists small portion css framework fact deal component table", "d": "7/2017"}, {"body": "would say first question nt care works automatically least nt require another abstraction accomplish basically work close would work component literal values huge part problem nt able solve cases want use enum constants know nt exist js typescript using similar convention js module option values always string thus solution would work types value props literalsexpressions proposal maybe would possible make work similar smart enough warn direct prop mutation really needed way getting prop attributes allowed get access nonprop ones", "d": "7/2017"}, {"body": "robertbcolton example would work hint", "d": "7/2017"}, {"body": "nickmessing thanks much seem work ca nt seem make following work without vue warning directly mutating prop vue key export default props items type object required true value methods update event consolelog eventtargetvalue emit input eventtargetvalue ideally would nt want want add another data section similar would seem redundant way achieving simple component without getting verbose", "d": "7/2017"}, {"body": "robertbcolton github issues asking questions time online official chat try stack overflow forum", "d": "7/2017"}, {"body": "first impulse got try using got little sad nt work would amazing feature imo two options inclined agree first seems simpler far understood", "d": "7/2017"}, {"body": "victoram could experiment implementing option component like simple example", "d": "7/2017"}, {"body": "sure desirable first added make easier pass things parent component child component improve situation hoclike components making work goal original discussion secondly somehow make work use component element component feels like essentially recreated intercomponent twoway bindings originally dropped vue good reason yes hood technically still sending events updating parent happened hood never problem made data flow harder follow recreate weekness allowing seamless chain many components nested element form feels like would", "d": "7/2017"}, {"body": "linusborg think might misunderstand proposal state syncing components used parent component check example issue description agreed work another issue comment suggested like avoid state maintained parent child use case proposal nt related feature request", "d": "7/2017"}, {"body": "oh right sorry misunderstood completely", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow see ways use inputs numbers", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "thats normal guess nonminified build statements would removed minified uglifyjs production use removed", "d": "7/2017"}, {"body": "okey dokey", "d": "7/2017"}, {"body": "using scoped slot syntax instead pass normal slot course scopedslotsdefault empty please read documentation nt help ask forumvuejsorg chatvuejsorg", "d": "7/2017"}, {"body": "rather takes precedence think adding something like would much", "d": "7/2017"}, {"body": "kind api freeze except useful additions new features syntax sugar generally category think", "d": "7/2017"}, {"body": "agree nt seeing syntax sugar really something new achieved moment personally think nit picking nodes render vue vue scope much edge case really performance issues could solved fr doub actually add fr", "d": "7/2017"}, {"body": "well since vueloader already caches static child trees purely static parts template already rendered", "d": "7/2017"}, {"body": "actually thinking cases author component unsure context component appear", "d": "7/2017"}, {"body": "linusborg sure tried quickly using vuecompile wo nt add robertbcolton point using situation", "d": "7/2017"}, {"body": "posva question referring actually user component using vonce prevent", "d": "7/2017"}, {"body": "posva see template generate static render function html text hello imo costs implementing feature heavily outweigh benefits", "d": "7/2017"}, {"body": "segmentfault \u4e0a\u6709\u4eba\u63d0\u4e86\u540c\u6837\u7684\u7591\u95ee", "d": "7/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "7/2017"}, {"body": "seems problem indeed sure already fixed nt released yet though", "d": "7/2017"}, {"body": "posva nt find code dev pr fixed problem", "d": "7/2017"}, {"body": "element tags except striped automatically browser according html spec use attribute avoid see html js var brokenexample new vue el brokenexample template", "d": "7/2017"}, {"body": "api proposed cause syntax error javascript use declare validation prop", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "think", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hello thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow discord chat happy help", "d": "7/2017"}, {"body": "fwiw took look personal interest work cases edited example since closest solution edit still issue slots investigating", "d": "7/2017"}, {"body": "might solved slots hardcoded trivial solve", "d": "7/2017"}, {"body": "seems solution along method lbogdan createelement way taking slots like take scopedslots however still lot effort create hoc lot remember pass react render wrappedcomponent props", "d": "7/2017"}, {"body": "thought simple solution let know missing something", "d": "7/2017"}, {"body": "based examples given linusborg lbogdan minimal hoc implementation handle components slots javascript const hoc wrappedcomponent gt props typeof wrappedcomponent function wrappedcomponentoptionsprops wrappedcomponentprops render h const slots slots const scopedslots objectkeys slots map key gt scopedslots key gt slots key blocka mentioned still lot effort create hoc vuejs", "d": "7/2017"}, {"body": "seems pass test course would adjust depending whether wrappedcomponent constructor object need pass slots events props", "d": "7/2017"}, {"body": "still lot effort create hoc vuejs apart issue slots due fact vue complex api react scenario disadvantage admire reacts minimal api kinds use cases vue designed slightly different deign goals hocs nt come easily react fairly trivial create helper function wraps initial setup nt", "d": "7/2017"}, {"body": "well really depends end goal understand goal hoc somehow change decorate original component wrappedcomponent add inject props methods event listeners etc much like mixin really smile variant changes component definition nt change way instantiated", "d": "7/2017"}, {"body": "blocka goal hocs often get state eg redux vuex inject wrapped component props would work approach", "d": "7/2017"}, {"body": "linusborg right knew good true forgetting something obvious", "d": "7/2017"}, {"body": "think good example implementing real use case hoc vue", "d": "7/2017"}, {"body": "vue hocs would awesome plus since almost always brought vue vs react debate perhaps official repo could created develop vuehoccreator package way could work robust supported implementation", "d": "7/2017"}, {"body": "btw got better way use createelement parent component instead hoc make child resolve slots correctly", "d": "7/2017"}, {"body": "cute reason official tool nt keep reinventing code sun jul pm thorsten l\u00fcnborg notifications githubcom wrote btw got better way use createelement parent component instead hoc make child resolve slots correctly receiving mentioned reply email directly view github mute thread", "d": "7/2017"}, {"body": "sorry coming official solution yet glad think cute though solution perfect either problems sort ie scoped slots wo nt work latest trick edit oh never mind work official solution probably done least would expect thorougly thought tested", "d": "7/2017"}, {"body": "okay played around way make easier look happy api rough idea sketch able anything able take care copying props component swapping witht parent proper slots resolving add name second argument provided example renders component passes props attrs listeners normal slots scoped slots nt useful course fun happens second argument simple component object want write render function course want extend props attrs listeners use helper create render function like default one described merge pass parent want write render function use helper transform object proper array pass comments wanted", "d": "7/2017"}, {"body": "like expected behavior works event fire textarea loses focus specific repro code type character event fired get executed caused rerender rerender vue render value textarea still empty till event never fired process", "d": "7/2017"}, {"body": "looks like template compilation adding many things edit think jkzing right happening render", "d": "7/2017"}, {"body": "closing working expected edge case though workaround putting texarea component", "d": "7/2017"}, {"body": "vue repository vuex repository essentially style question one better documentation design vuex extension vuex documented plugin interface answered question forum assume close wrong place", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "\u8fd9\u662f webpack", "d": "7/2017"}, {"body": "problem resolved latest version enhancedresolve", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "imo issue", "d": "7/2017"}, {"body": "sorry", "d": "7/2017"}, {"body": "deferred done \u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a promise", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "looks like regression", "d": "7/2017"}, {"body": "event triggering beginning well nt", "d": "7/2017"}, {"body": "error message reproduction pleaser provide code leads error likely nt define symbol allowed type prop", "d": "7/2017"}, {"body": "see", "d": "7/2017"}, {"body": "return plain objects provide recommend taking look provide inject", "d": "7/2017"}, {"body": "used work stopped working problem occurs trying recursively merge objects add smarts detect object clone properties thanks", "d": "7/2017"}, {"body": "posva meaning behind note note provide inject bindings reactive intentional however pass observed object properties object remain reactive took mean reactive objects default behavior could used implemented", "d": "7/2017"}, {"body": "jasonsanjose means pass objects observed injected properties become reactive", "d": "7/2017"}, {"body": "posva thanks clarification give try", "d": "7/2017"}, {"body": "would also like chime received issue trying upgrade regression unhelpful error message made really hard track also anything weird copypasting mixin project edit created", "d": "7/2017"}, {"body": "use elementui elupload compoent veevalidate happens wrong info maximum call stack size exceeded mergedata", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "use mixin instead sharing script", "d": "7/2017"}, {"body": "apologies using issue helper definitely another issue thanks quick reply take look mixins thank", "d": "7/2017"}, {"body": "could please remove images make smaller include steps reproduce well description bug please bonus points english", "d": "7/2017"}, {"body": "hi solution elements disappear rendered set scrolltop number let browser dispatch scroll event show like", "d": "7/2017"}, {"body": "thanks solution", "d": "7/2017"}, {"body": "duplicated", "d": "7/2017"}, {"body": "\u6211\u671f\u671b\u7684\u6548\u679c\u662f\u6570\u7ec4\u5b57\u7b26\u4e32\u5bf9\u8c61\u53ef\u4ee5\u81ea\u7531\u8f6c\u6362", "d": "7/2017"}, {"body": "used method buttons check value html", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank specific reason provided reproduction link reproduction vue repository", "d": "7/2017"}, {"body": "nt see could anything since ca nt access attribute value ie", "d": "7/2017"}, {"body": "instantiate vue app inspect element ie elattributes vbind settings result component alpha worksinie false nt know display markdown tab characters still perfectly preserved later manually instantiate app get error invalid expression meanwhile firefox exactly except component successfully renders manually inspect element replace tabs spaces instantiate app successful something evaluating string contains tabs ie like", "d": "7/2017"}, {"body": "unfortunately nothing linusborg said error unrelated vue happens vue even gets parse template", "d": "7/2017"}, {"body": "strange since returns exactly string firefox ie saying vue uses different method access attribute values would return different values ffie", "d": "7/2017"}, {"body": "saying error unrelated vue happens vue runs btw runs fine", "d": "7/2017"}, {"body": "try explain confusion produced new example html eliminating variable pug template renders ff ch ie renders ff ch ie reiterate particular ie ie dozens users found issue due bug reports missing field first example render second example difference two tab characters edit first example remove tabs one one moment remove final tab component render correctly still something considered relevant vue would able point toward part source code reads attribute values", "d": "7/2017"}, {"body": "il reopen take closer look maybe related template parsing", "d": "7/2017"}, {"body": "guessing instead using domnodes vue uses innerhtml tested indeed return different value ff ie versus whereas using elattributes vbind settings returns value case tab characters could still decoded understand issues", "d": "7/2017"}, {"body": "ok thanks explanation makes sense thought error ie vue generating error nt know get error ie", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "7/2017"}, {"body": "happens still running clear beforedestory vue export default name test mounted thisinterval setinterval gt consolelog refstest beforedestroy clearinterval thisinterval", "d": "7/2017"}, {"body": "see", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "comment needs inside root element preserved", "d": "7/2017"}, {"body": "thank effect", "d": "7/2017"}, {"body": "ah forgot mention docs option works using full build inbrowser compilation work single file components", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "personally never used cucumber issues questions like posted please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted discord chat forum stackoverflow thanks", "d": "7/2017"}, {"body": "think new featurei want cli new choice cucumberjs", "d": "7/2017"}, {"body": "kinanson vuecli initialises project whatever template want want option available clone vuejstemplateswebpack make template support anyway vue issue locking conversation", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "bug report usage question please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted discord chat forum stackoverflow thanks", "d": "7/2017"}, {"body": "got nonanswer apparently", "d": "7/2017"}, {"body": "add online demo", "d": "7/2017"}, {"body": "bind value domprops actually attrs think already fix test could anyone help test", "d": "7/2017"}, {"body": "jsx transform issue see nickmessing think would make sense treat necessary attributes domprops default babelplugintransformvuejsx", "d": "7/2017"}, {"body": "next hours sorry offtopic please merge pr", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "minimal repro", "d": "7/2017"}, {"body": "exected behaviour tag child blocks parsed see one root element html limitations ps information available", "d": "7/2017"}, {"body": "complete list elements close available", "d": "7/2017"}, {"body": "hello working intended find explanation smile", "d": "7/2017"}, {"body": "thanks much", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "want keep use string instead boolean", "d": "7/2017"}, {"body": "nt work false argument variable", "d": "7/2017"}, {"body": "stringify variable", "d": "7/2017"}, {"body": "ktsn genius thanks", "d": "7/2017"}, {"body": "reference requested past", "d": "7/2017"}, {"body": "rpkilby ask filing prs smile thanks heads close dupe", "d": "7/2017"}, {"body": "purpose preventing binding showing dom use new option", "d": "7/2017"}, {"body": "sure quite looking along right lines want disable one binding rather whole lot really confused behaviour initially using like suggest changed reported seemed decided nt expected work child components", "d": "7/2017"}, {"body": "apologies modifier would indeed make work components disables dom attribute fallthrough seems solve exact issue unless want rely behavior cases experience quite rare time use affected dom attributes want pass suggest make props bind explicitly child components", "d": "7/2017"}, {"body": "ah cool good know going insane spot weird inconsistency though fiddle demonstrate reported issue nt see docs nt affect solve need thanks much bikeshed would nice somehow behaviour could controlled parent user rather child needing know might ignore stuff probably matter taste", "d": "7/2017"}, {"body": "already series top element template achieve exact example work reason template ca nt multiple root elements second template root level wrapped", "d": "7/2017"}, {"body": "actually asking multiple toplevel elements component something useful right currently requires nontrivial changes vdom implementation support something falls within obviously nice area focus revisit working substantial improvements vdom future", "d": "7/2017"}, {"body": "click one radio list example second item id attribute radio element appears first time console bind value attribute radio id attribute appears time dont understand mean elements seem work great styles applied correctly log printed ot console item click exactly wrong edit maybe want", "d": "7/2017"}, {"body": "linusborg please follow steps open console click one items serveral times see different log find differences first log others first log id others", "d": "7/2017"}, {"body": "however understood problem id seems disappearing expect id converted string issue use vmodel wrong unset id vale every radio selected since id vue ca nt bind id attribute please see pen provided previuos reply correct usage additional questions using vmodel radio inputs offer support forumvuejsorg chatvuejsorg", "d": "7/2017"}, {"body": "linusborg problem add value itemname input radio see logs nt know", "d": "7/2017"}, {"body": "vmodel still still wrong want show pen", "d": "7/2017"}, {"body": "linusborg replace vmodel itemid vmodel itemname problem still existam use vmodel wrong delete vmodel ok please give similar example usage thank", "d": "7/2017"}, {"body": "please look example still wrong need answer questions issue bug usage problem side alrady suggested please post question forumvuejsorg chatvuejsorg happy help forum", "d": "7/2017"}, {"body": "reactive", "d": "7/2017"}, {"body": "simplesmiler know reactive reactive", "d": "7/2017"}, {"body": "explanation hook cached value change keeps still key autocache", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "error add proper error handling", "d": "7/2017"}, {"body": "symptoms suggest recursive import let take look check going", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow sharing whole repo valid reproduction", "d": "7/2017"}, {"body": "posva understand opened task thought error report due checks made solution needed solution new vue decided open issue nickmessing even take look actually problem recursive import solution work still find explanations form presents error simple way import store inside script work normally still believe bug know vue webpack still investigating", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "maybe use", "d": "7/2017"}, {"body": "like considering somehow similar api pass callback get promise", "d": "7/2017"}, {"body": "suppose supported", "d": "7/2017"}, {"body": "whoops sorry missed", "d": "7/2017"}, {"body": "oh check console", "d": "7/2017"}, {"body": "switching input types lead strange behaviors format model value nt match type", "d": "7/2017"}, {"body": "javoski yes list textlike inputs mentioned description ps works value string example", "d": "7/2017"}, {"body": "another way clearly current release avoid ternary example written vuejs codestyle guide better try use simple expressions components attributes move complex ones callback functions", "d": "7/2017"}, {"body": "bug edge going fixed soon reason us add workaround meantime much easier use patched version meanwhile break something could provide repro using vue please", "d": "7/2017"}, {"body": "ms issues prefer write like test work fine", "d": "7/2017"}, {"body": "hi posva thanks looking following link triggers issue edge project supported ie nt quick access machine link might even trigger code path ie may fail load earlier sounds like benvirus reproduced ie maybe provide link sample code monkey patch using benvirus snippet change pushed edge leave implement workaround ie said would surprised also issue ie since quick google search returns long history issue ms browsers", "d": "7/2017"}, {"body": "mean minimal repro use", "d": "7/2017"}, {"body": "unable reproduce jsfiddle sure suspect may related jsfiddle wraps document around yet another iframe dynamically loaded order things evaluated state inside iframe seems hard predict triggering ms edge bug outside vue trivial basically accessing inside iframe minimal repro report filed ms ok feature request rejected ms bug thought would nt hurt ask workaround happy dive deeper need feel free close ticket implementing workaround nt look like priority would nt blame reject thanks", "d": "7/2017"}, {"body": "oh nt worry simple html file enough well bugs affects matter", "d": "7/2017"}, {"body": "tried simple vue examples unable trigger bug minimal app hard isolatereplicate state triggers application javascript stack trace browser croaks general error console console link code causes points function able see first repro link posted interested pasting simple html vue code code used ms bug report link provided sorry ca nt provide targeted repro html html consolelog xxx documentactiveelement", "d": "7/2017"}, {"body": "sorry concrete feature request support question please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted discord chat forum stackoverflow thanks", "d": "7/2017"}, {"body": "maybe related seems modifier nt working properly", "d": "7/2017"}, {"body": "also using render function working great example", "d": "7/2017"}, {"body": "think nt work attr", "d": "7/2017"}, {"body": "nt know works nt plain attr find using makes work", "d": "7/2017"}, {"body": "issue related using", "d": "7/2017"}, {"body": "regression though", "d": "7/2017"}, {"body": "yeah also break things using", "d": "7/2017"}, {"body": "confused manage reproduce consistently think really need use though repro first input component nt update changes works vue", "d": "7/2017"}, {"body": "mutating method copy array calling", "d": "7/2017"}, {"body": "broke world couple years sure mutating method alone", "d": "7/2017"}, {"body": "runnable reproduction please provide small repository similar demonstrates issue lifecycle created commit mutation logger vuedevtool nt understand sentence sorry", "d": "7/2017"}, {"body": "asked issue please use forums chats ask questions", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "7/2017"}, {"body": "sure caused problem changed devclientjs file var const stupid", "d": "7/2017"}, {"body": "looks need small changes", "d": "7/2017"}, {"body": "read docs", "d": "7/2017"}, {"body": "freezing js process loop", "d": "7/2017"}, {"body": "use instead", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "virtual dom", "d": "7/2017"}, {"body": "\u56e0\u4e3a\u4f60\u5728computed \u91cc\u5f15\u7528\u4e86\u554a \u8fd9\u4e0d\u5c31\u662f\u76f8\u5173\u5417", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "jkzing", "d": "7/2017"}, {"body": "zoroweb", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow need visible class put directly attribute since toggle visibility anyway current code removed end transition style removed though end turns something actually bugs gladly take look repro without semantic ui plain css", "d": "7/2017"}, {"body": "special merge behaviors typically used explicitly styling root element child component implicitly passing might result unexpected layout results due nesting obvious user want component expose way style nonroot element exposing dedicated props purpose eg cases suggest exposing datadriven props manage styling inside component", "d": "7/2017"}, {"body": "implicitly passing might result unexpected layout results due nesting obvious user could nt said attributes well eg nesting may obvious user definitely nt obvious nt handled way attributes alone caused unexpected layout results using wrapper component would expect regular html attributes passed wrapped element", "d": "7/2017"}, {"body": "reasoning meant passing generic nonstyling related attributes almost always styling related actually noted docs probably make prominent talking expected result user talking user component provided user framework authoring components nt think good idea encourage user directly style component via classes inline styles said prefer pure data props manage styling inside component example could user component nt even need know class", "d": "7/2017"}, {"body": "personally think focus support since nonstandard likely completely replaced", "d": "7/2017"}, {"body": "agree nickmessing adding really nt bad imo", "d": "7/2017"}, {"body": "need use computed property moment date inputs widely supported something probably skip date widely supported", "d": "7/2017"}, {"body": "okay guess using vue datepicker library currently best option", "d": "7/2017"}, {"body": "hi right wiki nt maintained anymore guess could even deactivate dont use kind documentation website", "d": "7/2017"}, {"body": "yeah wiki disabled", "d": "7/2017"}, {"body": "vue even reach year", "d": "7/2017"}, {"body": "dude showed forum triggering real dom event works like hour ago jquery whatever god knows behind scenes seem work agreed concern aim compatible vanillajs first foremost close lock issue discussion continue forum", "d": "7/2017"}, {"body": "also request ask default injections maybe could consider together", "d": "7/2017"}, {"body": "showcase problem minimal jsfiddle looks ilke looking default values jkzing said keep issue opened instead", "d": "7/2017"}, {"body": "yes issue considered together purpose avoid warning missing inject", "d": "7/2017"}, {"body": "simply pass", "d": "7/2017"}, {"body": "empty string", "d": "7/2017"}, {"body": "using quick fix fiddle", "d": "7/2017"}, {"body": "please see updated link", "d": "7/2017"}, {"body": "listens event detect changes nt trigger event", "d": "7/2017"}, {"body": "yes send documentqueryselector input nametype trigger change", "d": "7/2017"}, {"body": "nt need nt use jquery using vue following would recommend read vue guide particular handling user input might misunderstanding vue used", "d": "7/2017"}, {"body": "use jquery plugin working project select list time plugin make many operation want resive result plugin setting value hidden input variable clean simply way work vue massege accepted state must change value jquery plagin trigger vue update variable work vue update variable", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow vue listen back setting value directly dom element", "d": "7/2017"}, {"body": "please see bug reports writed solved make work may bug nt please help solve problem", "d": "7/2017"}, {"body": "ask", "d": "7/2017"}, {"body": "html export default name app case context styles contextrenderstyles returns empty string contextrenderstyles \u7ed3\u679c\u4e00\u6837\u662f empty string", "d": "7/2017"}, {"body": "reproduction runnable please provide actual repo", "d": "7/2017"}, {"body": "repo npm run prod run server product mode ssr appapp component scoped style src appcss import testcss client side works fine server side contextrenderstyles empty renderer creation code servicesssrjs use apicontrollersindexcontrollerjs", "d": "7/2017"}, {"body": "ok looked setup using essentially component also root component ssr css injected component hook however created root instance render starts injected css never got registered need make root component wrapper js app new vue router extends app store app new vue router store render h gt h app", "d": "7/2017"}, {"body": "thank much lt work like charm king god maestro emperor code meister vuejs forever xd", "d": "7/2017"}, {"body": "\u8fd9\u662fexpected", "d": "7/2017"}, {"body": "jkzing hard got time please translate robotic translate crazy smile", "d": "7/2017"}, {"body": "jkzing", "d": "7/2017"}, {"body": "nickmessing basic idea click \u6d4b\u8bd5\u4e00\u4e0b fiddle hooks get called children like", "d": "7/2017"}, {"body": "jkzing oh told expected behaviour see close issue", "d": "7/2017"}, {"body": "nickmessing yes could close", "d": "7/2017"}, {"body": "iixxoo \u5f3a\u5236\u91cd\u65b0\u6e32\u67d3 \u6307\u7684\u662f\u91cd\u65b0\u751f\u6210\u4e86vdom", "d": "7/2017"}, {"body": "jkzing thank", "d": "7/2017"}, {"body": "dom", "d": "7/2017"}, {"body": "\u591a\u4e2a \u5b9e\u4f8b \u7684data \u4e2d\u53ef\u80fd\u5b58\u5728\u6570\u636e", "d": "7/2017"}, {"body": "\u5982\u679c\u4f60\u7684\u903b\u8f91\u4f1a\u56e0\u4e3a updated hook", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "hook", "d": "7/2017"}, {"body": "bug components resolved based component template used need expose user register together component using", "d": "7/2017"}, {"body": "vue wrapping functions one function register instead listeners simply wrap listeners function instead pushing array", "d": "7/2017"}, {"body": "imagine jsx pass data child components rerender parent component way around see example actually used method expected behaviour", "d": "7/2017"}, {"body": "provide actual reproduction hackernews repo running using scoped styles renders styles server eel scenario working please fork repository edit demonstrates issue", "d": "7/2017"}, {"body": "caused bug resolved upgrade", "d": "7/2017"}, {"body": "boolean string number technically warning asks still look see boo leans fine", "d": "7/2017"}, {"body": "fyi turn boolean number prepending guess adding warning enough could also make check vaule boolean", "d": "7/2017"}, {"body": "online code prevent default wrong event problem paste please provide reproduction new issue", "d": "7/2017"}, {"body": "linusborg thank much got another problem actually problem vuematerial bind clicking dropping would try paste next", "d": "7/2017"}, {"body": "would problem ask forumvuejsorg", "d": "7/2017"}, {"body": "usage question bug please ask question chatvuejsorg forumvuejsorg", "d": "7/2017"}, {"body": "bug may vuejs process message", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "bug even providing valid repro link please ask kind consulting questions forumvuejsorg would glad help", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "question bug report also related party library please make sure follow issue report requirements", "d": "7/2017"}, {"body": "nt possible autorun blaze data affect vue instance update", "d": "7/2017"}, {"body": "yes could see easy way determine one props attrs updating needed", "d": "7/2017"}, {"body": "wrap component inside vue instance example", "d": "7/2017"}, {"body": "yes assigns defined target component props get mapped automatically", "d": "7/2017"}, {"body": "want set attributes", "d": "7/2017"}, {"body": "oh support nonprop attributes could still bound reactive value would like fully support vue", "d": "7/2017"}, {"body": "point root tag inside component le dim juil mitar notifications githubcom \u00e9crit oh support nonprop attributes could still bound reactive value would like fully support vue receiving commented reply email directly view github mute thread", "d": "7/2017"}, {"body": "user set attributes without developer component knowing see description rationale would like support blaze well possible big deal vue would function would allow programmatically set update props attrs like template language would easy", "d": "7/2017"}, {"body": "generally use nonvue libraries likely write least one vue component wrap expose features props events point using vue components blaze anyway", "d": "7/2017"}, {"body": "think needed could directly use vue components least aiming package", "d": "7/2017"}, {"body": "nt get fr already programmatically create vue instances sharing object state allow reuse data multiple instances needed trigger functions things change use watchers missing", "d": "7/2017"}, {"body": "would programmatically create component would equivalent without knowing props component accepting become attributes", "d": "7/2017"}, {"body": "templates render functions access available props diff pass", "d": "7/2017"}, {"body": "trickier seems use render function modify anymore get warning afterwards toplevel component anymore", "d": "7/2017"}, {"body": "still nt see missing", "d": "7/2017"}, {"body": "sorry comment bit rude modify props pass feel like nt dug enough problem time looks like understand average user asked forum discord get help", "d": "7/2017"}, {"body": "worries know sometimes hard communicate online also understand background asked anything forum think good enough grasp vue code read currently possible nt feel questions would need answer course maybe missed something issues using forum try login get ca nt log mitar ip address different issue working blaze integration vue current code issue relates could create nice api render vue components blaze templates ideally wanted support something like following syntax blaze puts arguments object passes code would include vue values reactively change code rerun new object new value allows one push updated values vue component instance two questions know values props args somebody using code push new values instance even care developer using syntax care care using push new values given getting new object new values one approach would ask developer specify props args asking pass arguments something like would prefer developer tried two approaches one wrapping component one without wrapping component code something like object works two issues know props attrs could inspect component options figure manually would require duplicate code already existing vue would great could pass object vue figures update props attrs change without recreating whole component maybe component keeps important state form loose existing user input tried something like throws warning one changing nonroot props directly moreover idea change attributes similar way second approach tried want update props works alternatively suspect could setting values object directly might propagate vue yet tried issue approach know pass attrs manually filter props attrs working wondered api would match template api vue figures one prop one attr maybe instead could vue would split needed augment object detect changes observe provide method think doable without help vue issue think simpler maybe complicating though easier way", "d": "7/2017"}, {"body": "every warning cared warnings exist nt btw warning would gone production", "d": "7/2017"}, {"body": "nt see good reason support ignore warnings", "d": "7/2017"}, {"body": "vforkeys warning really good certainly save time debugging later case problem", "d": "7/2017"}, {"body": "thank consideration agree warnings important observed situation thought might miss warnings console flooded warnings less falsepositives think situations vfor key warning would useful example vfor accepts parameter type array object number string case iterating collection objects nt necessarily know keys object ahead time get around injecting guid field object data loaded iterating array arrays string number would able address warning missing key either way understand edgecase thanks responses vue awesome", "d": "7/2017"}, {"body": "quick addition proposed api api wraps instead", "d": "7/2017"}, {"body": "events already cleaned point", "d": "7/2017"}, {"body": "misunderstood html listeners functions called directly take example time click create new component adds event emitter destroys previous components yet despite destroyed emit listeners still hit emit event button", "d": "7/2017"}, {"body": "um could done via mixins reason make particular case inside vue nt use deal kind situation frequently", "d": "7/2017"}, {"body": "must know least handful vue devs attach event listeners created store somewhere remove one destroyed functions considering one vuejs big points ease use common patterns larger apps always binding events different sources html templates would huge pain relief larger apps could always keep applying mixins considering html templates already clean things automatically sounds logical api event listeners also way clean things automatically", "d": "7/2017"}, {"body": "fiddle really different attaching events another source linked vue instance calling function way normal clean make clear listeners setup cleaned instance destroyed without event ok memory leaks etc note", "d": "7/2017"}, {"body": "fiddle really different attaching events another source yup point example global event bus want component listen event must created function destroyed function event bus may passed via prop imported module ref anywhere usual case seen common work using event bus common pattern sure could call different vue instance functions common pattern know people already simple function wrap nicely within vue makes life bit easier larger apps", "d": "7/2017"}, {"body": "using external event emitter even though vue instance responsible handling suggest create plugin mixin post link", "d": "7/2017"}, {"body": "posva mixin first message thread works fair people see use similar lot code seen applies events forget clean without noticing bugs leaves behind built would help number people", "d": "7/2017"}, {"body": "specific case nt know think super common using instance event emitter useful small projects larger projects use vuex incrementing size vue small projects second thought cool add mixin docs could submit pr", "d": "7/2017"}, {"body": "sure thing specifically would fit familiar repo", "d": "7/2017"}, {"body": "think go", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow vue provide template compiler package well", "d": "7/2017"}, {"body": "maybe project help jaweii", "d": "7/2017"}, {"body": "lovermaker thanks tried vuep compile template", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow unfortunately depends jquery plugin", "d": "7/2017"}, {"body": "current behavior untouched explicitly passed via passed template actually passed removed functional component resolves prop", "d": "7/2017"}, {"body": "yeah guess wondering props removed added always identical", "d": "7/2017"}, {"body": "honestly idea trying", "d": "7/2017"}, {"body": "imagine dialog component named cdialog template like used like problem far component defines content buttons like cform form creates contentblock buttonsblock could nt simply create use like buttonsdiv cform would end maintag cdialog instead footertag solve problem idea would multiple returnslots maybe vue already way simply nt found yet", "d": "7/2017"}, {"body": "splitting sub components like give user use fill content dialog component allow customisation", "d": "7/2017"}, {"body": "instead using one single component fill different slots use different components one slots", "d": "7/2017"}, {"body": "ok thank idea think would work case try", "d": "7/2017"}, {"body": "fyi referring something like", "d": "7/2017"}, {"body": "two small remaining problems order order elements resulting htmlcode ca nt controlled cdialog case big problem use flexbox reorder css solve general case replacement cdialog component let call cpage ca nt change code cform cpage needs work dialogbody etc dialogbody render differently cpage cdialog would need something like dispatching parent optionsname dialogbody bit cumbersome seem problem usecase think solution works", "d": "7/2017"}, {"body": "complexifying things quite lot maybe render functions appropriate suggest ask questions forum discord server gitter stackoverflow", "d": "7/2017"}, {"body": "desired end result", "d": "7/2017"}, {"body": "alternatively way make slot ignores wrapper element would still semantic provide outermost element lost rest injected slot perhaps signifying lose top level way indicate", "d": "7/2017"}, {"body": "demonstrates problem trying solve", "d": "7/2017"}, {"body": "generated html", "d": "7/2017"}, {"body": "alexbowers use tag vue render children vnodes simply pass title prop", "d": "7/2017"}, {"body": "sqal use slot template tag work top level nothing else template though correct still nt semantic allowing child slot rendered children nodes", "d": "7/2017"}, {"body": "use case header bar site may title subtitle buttons breadcrumbs etc would like passed semantic way possible", "d": "7/2017"}, {"body": "please edit title actually requesting", "d": "7/2017"}, {"body": "sorry sure title came changed", "d": "7/2017"}, {"body": "want explain provide examples need something like discord provide", "d": "7/2017"}, {"body": "sqal said want semantic using component put inside tag problem approach user must specify classes solution create sub components like sbheadertitle user nt care original style still able adds personal opinion sqal said semantics matters page rendered developed always use meaningful names like title", "d": "7/2017"}, {"body": "posva sqal provided nt solution solves problem though would example modal header button body content way valid html ie tags within", "d": "7/2017"}, {"body": "creating subcomponents html valid surely means slots effectively useless right circumstances slot wo nt work sub component always work use slot", "d": "7/2017"}, {"body": "creating subcomponents html valid surely means slots effectively useless right circumstances slot wo nt work sub component always work use slot create sub components like sbheadertitle user nt care original style still able adds replaced state style typo", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "\u7f51\u901f\u592a\u6162 \u7ec8\u4e8e\u77e5\u9053\u600e\u4e48\u8fde\u63a5\u4e86 \u8fd9\u91cc\u662f\u94fe\u63a5", "d": "7/2017"}, {"body": "fyi also happens situations eg", "d": "7/2017"}, {"body": "\u521d\u59cb\u503c n\u548cslct \u4e0d\u7b26\u5408\u8981\u6c42 \u4f46\u90fd\u4fdd\u6301\u4e86\u521d\u59cb\u503c \u548c aa \u5f53\u6539\u53d8 n\u548cslct \u65f6 \u4e24\u4e2a\u503c\u4ecd\u4e0d\u7b26\u5408\u8981\u6c42 \u4f46 n \u4fdd\u6301\u4e86\u8d4b\u7ed9\u7684\u503cbb \u800c slct \u5219\u88ab\u5f3a\u5236\u6539\u4e3a\u4e86 undefined \u6211\u60f3\u8bf4\u7684\u662f \u65e2\u7136\u9009\u9879\u4e2d\u90fd\u6ca1\u6709\u5408\u9002\u7684\u503c \u4e3a\u4ec0\u4e48\u521d\u59cb\u53ef\u4ee5\u5b58\u5728 \u4f46\u6539\u53d8\u540e\u5c31\u4e0d\u80fd\u5b58\u5728\u4e86 \u88ab\u5f3a\u884c\u6539\u6210\u4e86undefined \u8fd9\u4e5f\u548c vmodelnumber \u8868\u73b0\u4e0d\u4e00\u81f4 \u503c\u6ca1\u6709\u88ab\u5f3a\u884c\u6539\u4e3aundefined", "d": "7/2017"}, {"body": "hi jstcodes using set value found tag ca nt change behivor may bind another varible tag eg make watcher watch changes non value set value changes remains label unchang", "d": "7/2017"}, {"body": "hi plasmatium \u611f\u8c22 \u8be5\u65b9\u6cd5\u53ef\u4ee5\u4f5c\u4e3a\u51b3\u89e3\u95ee\u9898\u7684\u65b9\u6cd5\u4e4b\u4e00 \u5728\u9879\u76ee\u4e2d\u5f02\u6b65\u83b7\u53d6 slct \u548c option\u9009\u9879\u96c6\u65f6 \u6211\u5c06 select\u7684\u8d4b\u503c\u653e\u5728\u4e86\u4e24\u4e2a\u5f02\u6b65\u64cd\u4f5c\u4e4b\u540e\u8fdb\u884c\u4e5f\u53ef\u4ee5\u907f\u514d \u53ea\u662f\u51fa\u73b0\u4e86\u8fd9\u4e2a\u95ee\u9898\u6709\u70b9\u7591\u60d1 \u65e2\u7136 \u90a3\u53ea\u80fd\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u6765\u907f\u514d\u4e86 thank", "d": "7/2017"}, {"body": "print blocking think much however easily fixable userland creating custom print function", "d": "7/2017"}, {"body": "hi posva unfortunately nt quite work reliant laying stuff javascript depending screen dimensions need read dimensions element inside css media query listener callback like see printed page nt show updated value soon close print preview text updates width measured page print preview looked css usecase could find solution hence bit layout javascript ouch", "d": "7/2017"}, {"body": "hmm well force update sure expose public api though edge case", "d": "7/2017"}, {"body": "ah yep works agreed seems overkill make public api thanks much help david", "d": "7/2017"}, {"body": "vue reusing elements components possible unless tell otherwise", "d": "7/2017"}, {"body": "sorry false report appreciate help linus", "d": "7/2017"}, {"body": "call twice gif call gif", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "got kind similar situation got two components parentcomponent childcomponent parentcomponent deleted vif condition met triggers beforedestroy parentcomponent seems remove dom elements within parentcomponent thus childcomponent beforedestroy childcomponent triggered childcomponent looks something dom nt anymore nt childcomponents beforedestroy triggered first better approach solve problem", "d": "7/2017"}, {"body": "zhangdroid bartdonninger troubled problem many days", "d": "7/2017"}, {"body": "actually expected element longer dom triggers fortunately specific scenario need get element size append back document element compute sizes removing", "d": "7/2017"}, {"body": "posva thanks reply still got trouble try build vue version reactoverdrive need get size position component destroyed way get thanks", "d": "7/2017"}, {"body": "zhangdroid please use forum chat questions alternative consider instead", "d": "7/2017"}, {"body": "zhangdroid hey buddy trying build vue version reactoverdrive", "d": "7/2017"}, {"body": "report way generic please try narrow least error stack trace", "d": "7/2017"}, {"body": "html html msg javascript var appnew vue el app data msg test consolelog vue consolelog app el console", "d": "7/2017"}, {"body": "nt see element id vue could mount", "d": "7/2017"}, {"body": "linusborg", "d": "7/2017"}, {"body": "yeah sorry missed read mobile anyway run code test never used nwjs ca nt verify", "d": "7/2017"}, {"body": "ok problem really vue issue need use full build vue default runtime build nwjs libs required run separate background page different main window use vue mounts instance element background page instead fix need pass vue preselected element main window", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "seems error happen development environmentthis error disappear production environment", "d": "7/2017"}, {"body": "realyalso throw production", "d": "7/2017"}, {"body": "first detect prop mutation direct binding detecting mutation inside arrayobject prop value adds much overhead perf complexity really worth also mutating toplevel prop binding leads scenario mutated value gets reset parent updates directly mutating nested values without changing binding problem although still recommended valid usage", "d": "7/2017"}, {"body": "expected behavior unlikely change would technically breaking piece vdom transitioned destroyed moment leaving transition starts unfortunately polling solution might necessary workaround directives mutates dom directly", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "ditto request typically find overriding injected property data order provide default", "d": "7/2017"}, {"body": "also feature currently components nested within parents provide info children warning always pops root component nt provider injected property specific use case nested layout splitters", "d": "7/2017"}, {"body": "realized pass data attribute directly closing", "d": "7/2017"}, {"body": "issue revert back", "d": "7/2017"}, {"body": "turns bug fixed", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "sorry introduced fault try fix", "d": "7/2017"}, {"body": "worries reverted meantime harm done", "d": "7/2017"}, {"body": "also happens trying extend component implements syntax guess issue", "d": "7/2017"}, {"body": "frandiox yes root cause fixed get merged sorry", "d": "7/2017"}, {"body": "fixed customize merge strategy inject option make workaround kinda like", "d": "7/2017"}, {"body": "please upgrade", "d": "7/2017"}, {"body": "others version lock vue pkg", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "please update", "d": "7/2017"}, {"body": "okay thanks", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "thanks qucly solution great make npm download", "d": "7/2017"}, {"body": "upgrade", "d": "7/2017"}, {"body": "review historic changes pacjkage saw error previos revisio expect inside try itand tell us", "d": "7/2017"}, {"body": "yes solved using using npm vue solved great", "d": "7/2017"}, {"body": "hi compiling got error c throw new error error vue packages version mismatch vue vuetemplatecompiler may cause things work incorrectly make sure use version using vueloader gt simply update vuetemplatecompiler using vueloader lt vueify reinstalling vueloadervueify bump vuetemplatecompiler latest object c modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object c solve must uninstall vuetemplatecompiler reinstall vit version vue npm uninstall vuetemplate compiler npm vuetemplatecompiler completed solved installation compilation thanks", "d": "7/2017"}, {"body": "take closed issue", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "release fix error", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "got error ps node npm", "d": "7/2017"}, {"body": "got error temporarily changed npm err darwin npm err argv npm err node npm err npm npm err code elifecycle npm err errno npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output", "d": "7/2017"}, {"body": "got error npm node zcdll zcdllinfisa npm install nodesass install node scriptsinstalljs cached binary found vue postinstall node buildinstallhooksjs throw err error find module functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn optional skipping optional dependency fsevents nodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os linux arch npm err code elifecycle npm err errno npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script npm err probably problem npm likely additional logging output npm err complete log run found npm err", "d": "7/2017"}, {"body": "got error node version", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "node neither works", "d": "7/2017"}, {"body": "nt work", "d": "7/2017"}, {"body": "npm err linux npm err argv install vue npm err node npm err npm npm err code elifecycle npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script node buildinstallhooksjs npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err node buildinstallhooksjs npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err homejgurepostrdmonfrontnpmdebuglog", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "node npm yarn fails", "d": "7/2017"}, {"body": "vue postinstall hometonytestnodemodulesvue ode buildinstallhooksjs throw err error find module hometonytestnodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup got error", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "entire thing reported fixed realtime", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "happy make pr deletes script commiting publishing npm unless already working", "d": "7/2017"}, {"body": "vue", "d": "7/2017"}, {"body": "jounqin thank sad story", "d": "7/2017"}, {"body": "lavyun works please close issue", "d": "7/2017"}, {"body": "working expected setter work setting value jsbin", "d": "7/2017"}, {"body": "nt think necessary many users successfully using current vue types vscode maybe ktsn octref idea either way actionable", "d": "7/2017"}, {"body": "hmm nt think add current declaration seems expose vue typings global namespace declaration intentionally written module usages shipped via npm would suggest declare local declaration file project expose vue types global ts vueglobaldts import vue require vue export vue export namespace vue", "d": "7/2017"}, {"body": "thank suggestion", "d": "7/2017"}, {"body": "seems wrong import vue vue files see sample setup", "d": "7/2017"}, {"body": "octref know could use npm prefer using use vue global variable instead happen use plain javascript want intellisense way importing possible javascript vscode get intellisense jsdoc comment prefer", "d": "7/2017"}, {"body": "vetur covers sfc nt much plan supporting html file imports vue cdn like general jsinhtml support open issues vscode", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "source issue", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "call install please ask questions forum gitter next time", "d": "7/2017"}, {"body": "realizing probably postprocessor good idea would one using computed filed others could use expect cursor maybe preprocessor would suitable", "d": "7/2017"}, {"body": "difference", "d": "7/2017"}, {"body": "issue asking allow iteration custom objects arraylike things especially able specify multiple things maybe better integrate reactivity object could inform vue values changed like order modified one particular item array changed others maybe allow custom conversion arraylike array object rest code explain key use iterate way help make plugins allow developers return object convert arraylike array instead asking developers pass arraylike objects could also seen sugar top", "d": "7/2017"}, {"body": "post processors something done directly inside computed property really nt see gain registering way configure default key iterate case could check postprocessor cursor set default key iterate prefer explicit setting unlikely happen", "d": "7/2017"}, {"body": "post processors something done directly inside computed property really nt see gain yes would mostly sugar one manually convert arraylike object every time make query similar blaze works people used prefer explicit key setting unlikely happen understand general magic tricky case minimongo pretty clear key", "d": "7/2017"}, {"body": "case going pass adding postprocessors computed properties something extra api worth cost keep mind added plugin parses computed properties add extra post process", "d": "7/2017"}, {"body": "keep mind added plugin parses computed properties add extra post process wanted hear link example plugin", "d": "7/2017"}, {"body": "one issue also realizing postprocessing maybe best approach wrote realizing probably postprocessor good idea would one using computed filed others could use expect cursor maybe preprocessor would suitable way preprocessing", "d": "7/2017"}, {"body": "aware using mixin hook transforms object way preprocessing would computed property", "d": "7/2017"}, {"body": "would computed property note part computed property also used purposes", "d": "7/2017"}, {"body": "wo nt add something already something working vfor amp comp", "d": "7/2017"}, {"body": "think would result lot code due way current virtual dom works still something similar transform vue apps custom elements app scoped shadow dom", "d": "7/2017"}, {"body": "nt solve problem unless use ignoredelements vue config", "d": "7/2017"}, {"body": "avoid mixing templates like instead mount instance injs template string onto empty element either way nt think add api use case way niche", "d": "7/2017"}, {"body": "ps \u7c7b\u4f3c\u95ee\u9898\u8bf7\u81f3", "d": "7/2017"}, {"body": "see", "d": "7/2017"}, {"body": "expected behaviour input recreated specific situation due way vdom diffing works make vue better aware specific elements", "d": "7/2017"}, {"body": "tried adding input nt work nested div appears attribute needs level vif otherwise still replaced probably documented feel stupid trying", "d": "7/2017"}, {"body": "expected behaviour render function reacting data property prop changing working version edit explanation nt clear mean changing value parent prop changing data still linked old reference set property normal component rerender", "d": "7/2017"}, {"body": "stands placeholder represents component parent vdom tree root component parent vdom tree", "d": "7/2017"}, {"body": "maybe need", "d": "7/2017"}, {"body": "looks like check reason behaviour expected ps another potential case", "d": "7/2017"}, {"body": "ok bug vue per html nest inside template gets reformatted browser passed vue template parser would work using purestring template probably avoid regardless", "d": "7/2017"}, {"body": "argh sorry nt think also limited aspect", "d": "7/2017"}, {"body": "thanks taking look amp posva due respect nt trying nest inside attempt common practice nesting inside especially navigations understand limitation may due order events vue control still feel like maybe something worth addressing posva workaround wrapping child template nt difficult least bit significant reason avoiding alternatively potentially way bypass browser reformatting using sort vue custom element setting attribute child eg appreciate", "d": "7/2017"}, {"body": "limitation html problem wont appear compiling templates using vue files tue jul chase giunta notifications githubcom wrote thanks taking look amp posva due respect wasnt trying nest inside attempt common practice nesting inside especially navigations understand limitation may due order events vues control still feel like maybe something worth addressing posva workaround wrapping child template nt difficult least bit significant reason avoiding alternatively potentially way bypass browser reformatting using sort vue custom element setting tag attribute child eg child appreciate receiving mentioned reply email directly view github mute thread", "d": "7/2017"}, {"body": "get around use string template instead indom template see difference logs", "d": "7/2017"}, {"body": "design functional components rerendered every time something affects changes even something unused parent component idea functional components nt cached nt track dependencies toggle button look console always improve docs vuejsvuejsorg repo suggestions please tell us opening issue thoughts even better directly open pr", "d": "7/2017"}, {"body": "yeah looks like fact makes directive bound differently nt working correctly either using instead fix issue render function generated transforms directive pair thanks reporting", "d": "7/2017"}, {"body": "thanks also like add thing happening elements prop likewise dropped", "d": "7/2017"}, {"body": "faster ever", "d": "7/2017"}, {"body": "would also like point run fiddle get following console window vue", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "current userland fix", "d": "7/2017"}, {"body": "declared dts intentionally since actually undocumentedprivate api", "d": "7/2017"}, {"body": "making hoc since vue requires props declared front need grab wrapped component done without reaching options", "d": "7/2017"}, {"body": "may consider exposing definition future closing since easy workaround", "d": "7/2017"}, {"body": "wanted point ktsn relying", "d": "7/2017"}, {"body": "javascript data \u4e2d\u7684\u503c\u4f5c\u4e3a source truth \u6240\u4ee5\u5e94\u5f53\u5c3d\u91cf\u4ee5\u5728 js", "d": "7/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted discord server gitter chat room forum stackoverflow thanks", "d": "7/2017"}, {"body": "\u662f\u6211\u81ea\u5df1\u641e\u9519\u4e86", "d": "7/2017"}, {"body": "previous attempt opening issue", "d": "7/2017"}, {"body": "branch contains development code may stable would even install branch install package skip npm postinstall script needed bu main purpose repository used dev environment package", "d": "7/2017"}, {"body": "use fork repo without publishing important one provide dependency directly git fork inside sure define git dependency", "d": "7/2017"}, {"body": "want install fork anyway remove postinstall repository needs script development process remove obviously", "d": "7/2017"}, {"body": "suggest removing hook fork hook necessary enforcing workflow main repo alternatively take pr makes hook noop repo installed via npm instead local development", "d": "7/2017"}, {"body": "issue effects command git directly wtvuepurenpminstallbug npm install vue save vue postinstall workspacestestingvuepurenpminstallbugnodemodulesvue node buildinstallhooksjs throw err error find module workspacestestingvuepurenpminstallbugnodemodulesvuebuildinstallhooksjs functionmoduleresolvefilename functionmoduleload modulerunmain run startup npm warn vuepurenpminstallbug description npm warn vuepurenpminstallbug repository field npm err code elifecycle npm err errno npm err vue postinstall npm err exit status npm err npm err failed vue postinstall script npm err probably problem npm likely additional logging output npm err complete log run found npm err ok wtvuepurenpminstallbug npm install vue save npm notice created lockfile packagelockjson commit file npm warn vuepurenpminstallbug description npm warn vuepurenpminstallbug repository field vue added package", "d": "7/2017"}, {"body": "confirm working fresh installation laravel immediately run outputs error message previous comment adding tag continue installation without warningserror", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "fyi script renamed causes normal installs fail well", "d": "7/2017"}, {"body": "anyone bandage trying get fresh laravel install working", "d": "7/2017"}, {"body": "say told glad got resolved finally", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "documentation clear matter works inside mustache interpolations vbind expressions way works call function declared object edit realized use syntax", "d": "7/2017"}, {"body": "sqal said", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "design vue", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "reopen even though meeting issue standards since assume meant discussion start see solve goal issue quite clear", "d": "7/2017"}, {"body": "first thank reopening think would good thing could solve problem better solution avoid problem except using directives could discussedif problem could solved next release better solved problem using setinterval updating audio time lazy avoid problem using vmodelbut need know data updates real time need use settimeout input event cumbersome elegant", "d": "7/2017"}, {"body": "description clear saying scrolltype together queue stops working altogether ie nothing updates anymore use promise whenever available microtask queue gets flushed earlier timer queue ideally want fallback uiwebview ios gt tricky part reliable way detect environment empty hack seems work cases never run case described please try provide reproduction steps answer question yes", "d": "7/2017"}, {"body": "answer yes prepared demo tests time everything seems right realized misunderstandingunlike time removed library used think might libraries indirectly cause problem team leader found removed project solve problem one conditions decides whether use native mobile phone testers tested undefined rewritten requires promise polyfill browser carelessness nt keep looking reason great sorry taken valuable time thank reply", "d": "7/2017"}, {"body": "cool good know maybe file issue babel regarding polyfill behavior", "d": "7/2017"}, {"body": "meanwhile created simple reproduction always red toggle color expected see console devtools infomation", "d": "7/2017"}, {"body": "similar parent update slot content vdom reference leading vdom patcher updating dom short treat slot content immutable entity modify accordingly eg", "d": "7/2017"}, {"body": "thank simplesmiler much similar react purecomponent references path certain variable object new one made happen tried also worked thank much", "d": "7/2017"}, {"body": "plasmatium correct safer always clone new node internal helper likely expose future versions", "d": "7/2017"}, {"body": "iterating object see documentation cf", "d": "7/2017"}, {"body": "hi modified observed variable trigger rerender add new member modify variable invoke setter vue watch add new member would invoked getter related document could found add new members observed object observed object member new members would add observer automatically modified would triggered rerender assign new value find member changed rerender triggered triggered watcher next tick means code line executed rerender may try code find rerender triggered modified variable watch responsible add new member kind modified", "d": "7/2017"}, {"body": "see", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "pass argument filter please read docs", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "solve issue", "d": "7/2017"}, {"body": "please follow issue reporting guiddlines issue reported vetur", "d": "7/2017"}, {"body": "vue reusing elements conditions may need add div like vue click click cancel ref", "d": "7/2017"}, {"body": "closing jkzing right", "d": "7/2017"}, {"body": "schema", "d": "7/2017"}, {"body": "prsth version fiddler vue seems ok env amp steps update latest version works well anyone else could help check", "d": "7/2017"}, {"body": "reproduce either safari either way like safari issue rather related vue anyway", "d": "7/2017"}, {"body": "things start contain js expressions others like contain text like html attributes intended make things consistent", "d": "7/2017"}, {"body": "thank clarification", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "reserved attributes little value changing imo", "d": "7/2017"}, {"body": "thank answer see", "d": "7/2017"}, {"body": "cases expose api", "d": "7/2017"}, {"body": "sure find issue app feel like app pretty ugly create many watchers instead one object watcher thanks taking time look", "d": "7/2017"}, {"body": "create generic userland helper exposes api want implementing core would complex due arbitrary depth objects", "d": "7/2017"}, {"body": "specifically used avoid ambiguous use scoped slot vs props agree bit verbose imo necessary ensure always instantly notice scoped slot read code later", "d": "7/2017"}, {"body": "something like feel api verbose", "d": "7/2017"}, {"body": "yep think shortcuts like props javascript simple documentation really emits suggest simple suggest event must bound emits suggest true props style emits suggest required true argument documentation amp validation emit emits suggest required true args name term type string required false default name callback type function required true", "d": "7/2017"}, {"body": "could also offer shortcut describe", "d": "7/2017"}, {"body": "thoughts ping posva chrisvfritz defcc linusborg", "d": "7/2017"}, {"body": "thinking thing", "d": "7/2017"}, {"body": "actually pass function prop event handler easier check whether exists case declare prop instead use", "d": "7/2017"}, {"body": "tend agree fnlctrl already passing callbacks props adding enw api increase api surface code size fo library little gain recently discussed api added unless feature sufficient use large group people ca nt implented currently available options reasonable effort think feature request falls category useful useful enough similar thing achieved", "d": "7/2017"}, {"body": "guess problem really want target request standardised documented way describe events component emits moment one rely component authors either describe events code comments external documentation often find scanning source code components figure events consume another benefit documentation generators could pull information terms functionality priority mentioned fnlctrl alternative ways pass callbacks wanted point useful case emitter definition selfsatisfaction", "d": "7/2017"}, {"body": "whole point events decoupled nt care whether listener many listeners documentation seems whole different issue nt think responsibility api yes nice somewhat selfdocumenting code adding api code self documenting seems wrong approach really care events usage components probably document regardless users nt really care would nt use api even exists", "d": "7/2017"}, {"body": "agree long nt add much value documentation purposes worth thanks help thoughts topic", "d": "7/2017"}, {"body": "sorry fault", "d": "7/2017"}, {"body": "sorry still valid repro need extract problematic code think make runnable jsfiddle otherwise see issue seen", "d": "7/2017"}, {"body": "available vue vue option", "d": "7/2017"}, {"body": "nt affect results", "d": "7/2017"}, {"body": "ah think finally understand problem missing documented porovide actually runnable reproduction problem happy new working version", "d": "7/2017"}, {"body": "thank add key every element use directive velse work", "d": "7/2017"}, {"body": "\u7248\u672c\u592a\u65e7 \u91cd\u73b0\u6253\u4e0d\u5f00 debug", "d": "7/2017"}, {"body": "\u8bf7\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u7684repro", "d": "7/2017"}, {"body": "\u4ee5\u540e repro link", "d": "7/2017"}, {"body": "yes maybe could check context via bot check try", "d": "7/2017"}, {"body": "ok sorry first time use", "d": "7/2017"}, {"body": "tried add debug info imgsrc amazing el nt match use vif change velse result rightdoes involve component reuse use vif company velse", "d": "7/2017"}, {"body": "element reused rerender process exactly one dom element directive bind hook call one time look sure expected add keys work around", "d": "7/2017"}, {"body": "valid reproduction ca nt run please respect maintainers time provide something actually debugged", "d": "7/2017"}, {"body": "bleekbless see component fiddle", "d": "7/2017"}, {"body": "know loading times", "d": "7/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue especially adding repro thanks", "d": "7/2017"}, {"body": "likely problem device powerful enough already lags computer imagine opening phone vue even binding anything removing seems yield result unfortunately nothing manage provide minimal repro much html even take look happily take look otherwise probably related amount html using", "d": "7/2017"}, {"body": "remove vue initialization page loaded fine works iphone ios iphone ios nt nt think related device works even ios maybe somehow related vue creates virtual dom", "d": "7/2017"}, {"body": "may straw broke camel back", "d": "7/2017"}, {"body": "page contains extremely large amount markup mount vue entire page mount part need interactivity", "d": "7/2017"}, {"body": "tried mount need interactivity stuck dividable parts example list products quite complex markup product around lines html need interactivity", "d": "7/2017"}, {"body": "would huge breaking change ca nt happen probably wont happen dont think problem actually exists say found always need declare variables keeping vue instance calling subobjects specificaly subobjects referring experience arrow functions solve problems nicely", "d": "7/2017"}, {"body": "nt agree always need declare variables keeping vue instance always need declare variables maybe need lambda linusborg said would huge breaking change", "d": "7/2017"}, {"body": "special es directly associated scope lives would correct say directly associated execution context libook would easier us help provided examples need assign variable within vue instance variable needed within example provided javascript methods thisisamethod const vm vmaproptie value javascript methods thisisamethod thisaproptie value places trip async callbacks array methods like map etc usually get around using arrow functions binding function explicitly set value might help", "d": "7/2017"}, {"body": "use manipulate component instances using instances classes using new keyword good old functions passing argument would make sense functional oriented approach reuse functions well maybe missing libook", "d": "7/2017"}, {"body": "would great someone could provide example passing argument would advantageous current approach using thanks", "d": "7/2017"}, {"body": "ca nt done due breaking change easily implement", "d": "7/2017"}, {"body": "thank help yes example good enough use arrow function time arrow function replacement function always use functions names make huge complicated programs simple clear sometimes use objects maybe programs heavy yes heavy dashboard complicated features well idea completely break whole design vue may bad idea", "d": "7/2017"}, {"body": "also facing issue workaround", "d": "7/2017"}, {"body": "expected behavior controls outer transition nothing trigger hooks inner transition inner transition constant child never toggled trigger regardless using", "d": "7/2017"}, {"body": "patrickhousley hello experience angular please try describe exactly module example usecase", "d": "7/2017"}, {"body": "imo framework like vuereact idea trying think almost everything way prefer composite components rather", "d": "7/2017"}, {"body": "jkzing looking would agree think really looking could handled honestly really want way cleanly split app pieces router already component level routes still loaded statically making lazy loading large chunks app little problematic", "d": "7/2017"}, {"body": "patrickhousley take look vue async components vuerouter lazy loading vuex async modules merged yet ssr pwa results handy mechanism code splitting high performance know lot gets really easy use get practice", "d": "7/2017"}, {"body": "guess related vue rendering mechanism instead clearly see even put consolelog change value vue instance already changed", "d": "7/2017"}, {"body": "made temporary fix wrapping content getposition delay solves problem somehow see remove animationmove class problem disapears exemplo test variable happens", "d": "7/2017"}, {"body": "suppose nt like little digging accessing cause rerender rendering function remove class fired class added try find way get fixed", "d": "7/2017"}, {"body": "btw try get work around wrap better idea", "d": "7/2017"}, {"body": "comments necessary actually make things consistent blake pointed also use refs instead btw", "d": "7/2017"}, {"body": "thanks opening issue adding option vue constructor mount automatically want control mounts remove property call result way run checks mounting", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "usage questions please use", "d": "7/2017"}, {"body": "valid repro part project like question bug report please either reduce scope minimal repro ask via channels instead", "d": "7/2017"}, {"body": "trick data empty component mounted get asynchronously need additional guard", "d": "7/2017"}, {"body": "shortand actual directive part vuetemplate processed compile time runtime lazy load recommend making custom component like need help please ask forum stack overflow gitter prefer gitter always someone online willing help", "d": "7/2017"}, {"body": "nickmessing suggested use component instead custom directive", "d": "7/2017"}, {"body": "use deep true watcher", "d": "7/2017"}, {"body": "jounqin thanks much", "d": "7/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "7/2017"}, {"body": "guess really want", "d": "7/2017"}, {"body": "knowledge behaviour ca nt access computed properties props", "d": "7/2017"}, {"body": "mixins resolved instance created creation props resolved computed properties much often computed properties rely props rather way around behavior going change changing would breaking affected whether propscomputed defined mixins use case nt understand need prop default value use value directly", "d": "7/2017"}, {"body": "thanks quick response explanation makes sense reason noticed issue use mixin glad see behavior specific mixins jsfiddle example minimal example issue real use cases calendar control locale date properties default values involve logic would convenient locate mixin create components rely similar logic workaround simple enough component use computed property defaults mixin computation rather expecting via prop default key documentation nt cover limitation prop default see send pr enhance section", "d": "7/2017"}, {"body": "create pr chinese version description wish suggestion", "d": "7/2017"}, {"body": "feel like rather use original way understandable string one", "d": "7/2017"}, {"body": "dsonet opinion function original way u meant better data need transform string like getter alias javascript component computed breadcrumb rootviewbreadcrumblist class demo extends vue get availablebreadcrumb return rootviewbreadcrumblistfilter breadcrumb gt breadcrumbstatus clear also u better", "d": "7/2017"}, {"body": "rather prefer computed properties would get context argument could nt add magic makes shorter", "d": "7/2017"}, {"body": "like way proposed nick think added little change string syntax much magic though however trying create aliases could achieved plugin transforms computed properties take account new alias property still go nick syntax instead string one though", "d": "7/2017"}, {"body": "like nickmessing suggestion also concerning makes harder infer types statically deriving property using string path", "d": "7/2017"}, {"body": "like nickmessing idea separate issuepr also need accompanying typing updates ideally merged pending ts typing pr going implement string shorthands obvious disadvantages strings syntax highlighting auto completion type inference error messages", "d": "7/2017"}, {"body": "actually able achieve nickmessing proposed see", "d": "7/2017"}, {"body": "javoski work nickmessing nice job ur good way minimal magic string computed like watches alias mean feature way sad wish u think app bigger data really need short alias like watches option maybe use setter use vuex root data enough cases user nt need know vuex concept", "d": "7/2017"}, {"body": "\u5148\u8bf4\u4e0b\u6211\u7528 vue \u5927\u90e8\u5206\u5f00\u53d1 vue \u7684\u65f6\u5019\u6211\u662f\u4e0d\u4f7f\u7528 vuex \u56e0\u4e3a\u6211\u89c9\u5f97\u5176\u5b9e flux \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u628a\u9700\u8981\u5168\u5c40\u5904\u7406\u7684\u6570\u636e\u653e\u5230 \u7684 javascript import data store new vue data \u6240\u4ee5\u8fd9\u91cc data \u6ca1\u6709\u7528 function \u7684\u8bdd\u5185\u5bb9\u5927\u6982\u8fd9\u6837 javascript import storea storea import storeb storeb export default storea storeb storeajs export default list active storebjs export default list \u5728\u5b50\u7ec4\u4ef6\u64cd\u4f5c\u7684\u65f6\u5019\u5c31\u662f\u6700\u5f00\u59cb\u63d0\u5230\u7684\u65b9\u5f0f \u867d\u7136\u7edf\u4e00\u8bbe\u7f6e\u4e00\u4e2a getter setter \u6211\u89c9\u7684 \u5bf9\u4e8e computed \u7684\u610f\u4e49\u5c31\u548c \u91cc\u7684\u89e3\u6784\u4e00\u6837 syntax highlighting auto completion type inference error messages \u4f46\u6b63\u5982 alias \u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a \u5e76\u4e0d\u662f \u6b63\u5982 \u4f55\u4e0d\u8ba9\u6709\u4f7f\u7528\u573a\u666f\u7684\u4eba\u66f4\u723d\u5462 \u6700\u540e\u5e0c\u671b vue \u8d8a\u6765\u8d8a\u597d\u7528", "d": "7/2017"}, {"body": "working according tests anyway really want feature write plugin may tested function parsepath", "d": "7/2017"}, {"body": "javoski work", "d": "7/2017"}, {"body": "thanks reporting nt happening indeed nt dig workaround moment specifying transitiongroup element", "d": "7/2017"}, {"body": "vuejs", "d": "7/2017"}, {"body": "\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417", "d": "7/2017"}, {"body": "reject issues nonenglish language", "d": "7/2017"}, {"body": "yes make simple solution add command method like", "d": "7/2017"}, {"body": "xavescor sorry poor english still think chinese necessary", "d": "7/2017"}, {"body": "problem english poor", "d": "7/2017"}, {"body": "reasoning adding feature well explained trivial write plugin purpose thought add comment regarding general philosophy new features vue stage already decently sized api surface say bigger wanted opinion size lib grown since release really try keep api surface size small general take somewhat conservative stance new features proposed api value subjective cosmetic stylistic pass proposed api functionality cleanly implemented userland without hacks pass unless strongly needed significant majority user base ie seen raiseddiscussed multiple times proposed api added value justify added code size complexity maintenance cost pass example requires significant chunk code internal changes deal niche use case need think twice rule nt affect fixes correctness though cc vuejscollaborators", "d": "7/2017"}, {"body": "principle totally agree quite subjective considered cosmetic stylistic case consider quite fundamental especially considering vue seems intend promote certain coding styles linusborg wrote another issue constant declarations part every modern programming language using instead mutable data often possible considered fundamental modern programming creating nonconstant data via data computed properties nonobvious initialisation code sensible solution problem using plugins often possible also possible lots things part vue api talking features people need features single right implementation exits like vuex routing etc yes plugin better option everybody need constant fields somewhere code also quite straight forward needs lines implement wo nt require significant chunk code using plugin always requires additional work also need know plugin exists", "d": "7/2017"}, {"body": "many things solve without need vue internals created hook creating plugin feature needs integrated core however could documented please feel free create issue pr", "d": "7/2017"}, {"body": "take parameter filter function also think better support context take advantage style example code like clearer simpler", "d": "7/2017"}, {"body": "cited populated component rendered reactive think use dynamical referring components try use", "d": "7/2017"}, {"body": "might something case change populated initially unexpected", "d": "7/2017"}, {"body": "actually call function generate string attribute full reactive support although somehow difficult even possible change child component add new data parent event child tell parent change although may pollute code", "d": "7/2017"}, {"body": "\u6709\u89e3\u51b3\u7684\u65b9\u6848\u6ca1", "d": "7/2017"}, {"body": "thanks franckfreiburger try reproduce issue mac windows ok please provide information mean reload page", "d": "7/2017"}, {"body": "windows node tested latest google chrome amp firefox cloning demo modified add tag run first time page loaded issue happens issue happens page reload using google dev tools pause script execution issue markup dev tools elements tab foobar continue script execution markup become foobar data network tab seems correct initial http get request contains foobar note issue happens instead", "d": "7/2017"}, {"body": "thanks got trying look", "d": "7/2017"}, {"body": "franckfreiburger seems bug according specification single newline may placed immediately start tag pre textarea elements element contents intended start newline two consecutive newlines thus need included author line break immediately following pre tag ignored vue html compiler seems try fix", "d": "7/2017"}, {"body": "sure preferred think could help situations although using still make arrays disposing components destroy array destroy components inside may result empty arrays take look example pay attention console output", "d": "7/2017"}, {"body": "thanks lot information demo problem bit deeper string refs fine normally use asis cases callback refs far powerful especially cases use templates let say develop kind extension library vue lack callback refs may really show stopper facebookreact switched string refs callback ref moreover vue possible use refs templates functional components would require callback refs react possible cases nonfunctional component may possible simulate behavior callback refs using unique generated ref names additional logic certain lifecycle methods would really ugly cases slow powerful feature allow ref callback would open vue really interessting new possibilites", "d": "7/2017"}, {"body": "general say lowlevel component libs render functions preferred templates getting awkward work agree following would valuable disabling default behavior auto applying bindings found props attributes root element related problem affect bindings well exposing easier way inherit external bindings component onto inner element nt necessarily root ideally consistency templates render functions", "d": "7/2017"}, {"body": "ia kie like vue simple tools", "d": "7/2017"}, {"body": "want say pr excellent", "d": "7/2017"}, {"body": "releases note combining allows us simplify component like seems nice quite true since kind components designed work vmodel far know vmodel wrapping component working box example forward vmodel wrapping component onto input example simplest way found maybe functional component working along template would straightforward", "d": "7/2017"}, {"body": "kind components designed work vmodel far know vmodel wrapping component working box would think vmodel syntax sugar prop event listener attr props thus easily passed suppose thing would require knowledge child options would child changed defaults true would possible read depending circumstances", "d": "7/2017"}, {"body": "sure syntaxic sugar mean could confusing read combining allows us simplify component like actually based example ca nt pass listeners directly achieve control eg use von input emitinput eventtargetvalue anyways pr valuable good job", "d": "7/2017"}, {"body": "alexandrebonaventure works slightly differently components elements dom events provide event object callbacks component events provide value directly result work bound value dom event object think correct would desirable work sure best place solve would ideas maybe nonenumerable property could added eg help detect uses cases object passed listener could wrapped one downside throwing away data someone wants access example luck however modifiers supported object syntax could fix making disable automatic wrapping behavior linusborg thoughts feasibility edge cases missing", "d": "7/2017"}, {"body": "oh see referring vmodel rral form elements thinking components cantshouldnt use props anyway without pr advanced apps rather uncommon use though achievable", "d": "7/2017"}, {"body": "linusborg want make sure page given component template would nt expect code work", "d": "7/2017"}, {"body": "would expect work way understood alexandre referring vmodel element component eventually works mutating local state", "d": "7/2017"}, {"body": "trying say chrisvfritz explained latter post english native language sorry", "d": "7/2017"}, {"body": "linusborg problem latest release still considered antipattern triggers warning mutating state extremely useful working value property something string take example combo component trying use enums imported library values select options vue key export default props items type object required true value example one lists use items parent use combo component trying make work days still getting really frustrated problem eventtargetvalue always string evaluated like", "d": "7/2017"}, {"body": "linusborg alexandrebonaventure robertbcolton opened issue focus future discussion problem", "d": "7/2017"}, {"body": "think quite difficult express pure templates would suggest using render functions sophisticated use cases like", "d": "7/2017"}, {"body": "ericwangqing thread might interest", "d": "7/2017"}, {"body": "rayrutjes thanks lot", "d": "7/2017"}, {"body": "close issue wo nt changed made internal note long list", "d": "7/2017"}, {"body": "annoying hoc must declare props wrapped components two annoying things props normalized sometime array sometimes string keep reimplementing function every project maybe core somewhere component either object literal work figure kind component dealing branch accordingly get props react get props sent hoc directed wrapped component", "d": "7/2017"}, {"body": "blocka understanding correctly situation facing discussing fyi", "d": "7/2017"}, {"body": "blocka already", "d": "7/2017"}, {"body": "jkzing skimmed discussion nt see directly relevant situation referring apologize advance contrived example see order work props need defined component returned hoc example pretty simple wrappedcomponentprops dealing mixing hoc props wrappedcomponent props things get pretty hairy reasons explained earlier", "d": "7/2017"}, {"body": "peeking around seems undeclared props hangout still little awkward seems work considered stable api", "d": "7/2017"}, {"body": "oh sorry wrong relevant", "d": "7/2017"}, {"body": "kingwl could make pr revert behaviour", "d": "7/2017"}, {"body": "linusborg going try tomorrow", "d": "7/2017"}, {"body": "problem working components", "d": "7/2017"}, {"body": "support objects defining iteration protocols instead relaying inheritance could check object defines iterator use iterate would probably break backwards compatibility could done already", "d": "7/2017"}, {"body": "mitar said comments ago vfor using drop support old browsers actual implementation works differently nt think good idea support new iteration support", "d": "7/2017"}, {"body": "reference implemented support iterators meteor vue fork see breaking anything would already implemented call", "d": "7/2017"}, {"body": "mitar evan call looks like decided part point view support code work newer browsers", "d": "7/2017"}, {"body": "hm good question nt know existing vue code uses nt want use", "d": "7/2017"}, {"body": "iteration protocol ensure iterator rewound like generators means break render function called also arraylikes generally nt simply read values memory extra work nt repeated render said nt think would need able iterate arraylike custom object directly instead need array representation underlying values e g computed property always native array possibly builtin iterable supported", "d": "7/2017"}, {"body": "iteration protocol ensure iterator rewound like generators obtain new iterator object want iterate iterate call many times want happens manually obtain iterator use js syntax", "d": "7/2017"}, {"body": "tanmichael another option might wrap vue module store object temporary variable assign require vue restore could work assigned top level scope vue imported first time aware internal framework variable moved behaviour change anytime precise something like create file follows js const windowcopy window window undefined const vue require vue window windowcopy moduleexports vue instead importingrequiring directly use", "d": "7/2017"}, {"body": "closing due lack actionable items", "d": "7/2017"}, {"body": "trying resolve maybe long", "d": "7/2017"}, {"body": "think issue also occurs tab still active hidden getting following adding several elements transition group docs state enterto class removed transition finishes", "d": "7/2017"}, {"body": "yunyu could please check issue related situation", "d": "7/2017"}, {"body": "jkzing actually yeah seems affect well transitions put enteractive class nt work ones enterto move example issue", "d": "7/2017"}, {"body": "yunyu thanks already quite clear reproduce", "d": "7/2017"}, {"body": "nt appear fixed yet still pending release async component transition bug demo", "d": "7/2017"}, {"body": "clingor sure jsfiddle works nicely", "d": "7/2017"}, {"body": "fiddle work correctly code example github repo still exhibits behavior could helper library maybe something code example simple created demonstrate issue franckfreiburger would vuejs changes require update", "d": "7/2017"}, {"body": "put issue jsfiddle without loader take look", "d": "7/2017"}, {"body": "schrieb chris lingor notifications githubcom nt appear fixed yet still pending release async component transition bug demo receiving subscribed thread reply email directly view github mute thread", "d": "7/2017"}, {"body": "culprit steps reproduce see click b button", "d": "7/2017"}, {"body": "posva able reproduce", "d": "7/2017"}, {"body": "franckfreiburger open new issue thanks btw", "d": "7/2017"}, {"body": "would technically require much complex analyzing template structure sure worth achieve equivalent html", "d": "7/2017"}, {"body": "implementation process complex temporarily use warning instead compilation error allow first child node root element btw used component root element vue nonfirst child node discarded think warning treated way ok think may use instead root elements wrapper", "d": "7/2017"}, {"body": "still quite sure plugins would nt enough use case maybe try explain chinese", "d": "7/2017"}, {"body": "thanks", "d": "7/2017"}, {"body": "case somebody still interested could recursion thing figured solve two lines dom manipulation jquery hooked custom rows lifecycle events could look like table template row template best solution code clean works bet could quite easily without jquery jquery project anyway nobrainer took several hours tinkering decided like moves dom element child row correct location table initially mounted destroy ensures sub elements removed needed correct parent child hierarchy dom gets destroyed", "d": "7/2017"}, {"body": "lucastheisen post help also", "d": "7/2017"}, {"body": "posva would component definition like actually throws exception try namespace ps actually warning nt see raised", "d": "7/2017"}, {"body": "sebestenyb done global component definition suppose register component locally", "d": "7/2017"}, {"body": "partially implemented however syntax introduced primarily making easier proxy events components modifiers syntax introduce much runtime complexity supported", "d": "7/2017"}, {"body": "yeah resolve problem cherrygeqi", "d": "7/2017"}, {"body": "ppxialetsgo workaround provided centaur works obviously individual case suggest vuejs team pay attention posva", "d": "7/2017"}, {"body": "franzskuffka encountered similar problem using vue wrap google maps overlayview elements initially nt set attribute wrapping node used overlayview dom nodes rendered google map randomly wrongly got rerendered underlying observed array changed new items pushed existing items array got new items pushed realized need set help vue map dom nodes data array first tried use type uuid item value encountered error issue mentioned situation similar mounted dom node wrapper component got tampered required google maps api specifically root node style property changed changed appropriate ones display map correctly based item changed use pojo value issues solved dom nodes updated correctly underlying array change longer seeing exception mentioned issue guess pojo instance object passed around value initially used string reference helped work around issue", "d": "7/2017"}, {"body": "thank bump actually issue super easy resolve currently tackling similar issue information might valuable", "d": "7/2017"}, {"body": "throws vue warn avoid using nonprimitive value key use stringnumber value instead warning", "d": "7/2017"}, {"body": "hhmmmm", "d": "7/2017"}, {"body": "tested latest version works expected closing", "d": "7/2017"}, {"body": "since valid alterantive strategy seems proposed close new feature nt seem offer tangible benefit", "d": "7/2017"}, {"body": "removed recursion next function async test falling benchrmarks nt use asynccomponents currently scope stacktraces looks nicer see performance improvement sadly difference using nodejs results btw generate dynamic data every loop sure nashorn nt optimize whole scripts loop see results better nodejs sure benchmarks correct simply nashorn optimizes code well loading benchmarks rendertostring complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time complete time", "d": "7/2017"}, {"body": "ca nt find optimized code repo", "d": "7/2017"}, {"body": "still feel extra composition model greatly muddles structure program makes mental model complex although proposed solution may make certain use cases bit manageable really convinced tradeoff", "d": "7/2017"}, {"body": "nudge", "d": "7/2017"}, {"body": "use watch dependent whether component rerendered", "d": "7/2017"}, {"body": "problem also without chinese input keeps triggering blur saw trigger etargetselectionstart sometimes thinking creating data keeps moment click input see type something delete complete fire something correct keep trying", "d": "7/2017"}, {"body": "arrayhuang try binding others events like", "d": "7/2017"}, {"body": "hybrid strategy land raw render perf increase depending much template stringified due hybridness performant pure string templates pretty close scenarios renderfunctionbased components involved also note talk raw render perf means benchmarking render call terms requests per second real app many aspects involved raw render perf small portion overall time xiaogaofudao nothing nuxt nuxt wrapper top vue improvements benefit nuxt well", "d": "7/2017"}, {"body": "vue native webview implementation greater", "d": "7/2017"}, {"body": "feature request open quite time nt gotten much traction far also nt come across wish functionality places forum chat sure large enough use case personal experience directives tend rather small ever since functionality scope reduced vue therefore tend close request reopen enough people express need", "d": "7/2017"}, {"body": "use way", "d": "7/2017"}, {"body": "ends answer yes", "d": "7/2017"}, {"body": "entirely sure actionable imo pure statebased transitions really manipulating state variables javascript responsibility vue core easing curves spring animations etc doable userland thus done userland", "d": "7/2017"}, {"body": "completely forgot posting project back", "d": "7/2017"}, {"body": "trouble using makes sense index dependent number items array changed splicing middle key property bound id item nt going change eg todo example docs uses key probably fine twoway binding changed prevent confusion raise new issue", "d": "7/2017"}, {"body": "todo example docs uses index key probably fine twoway binding changed prevent confusion raise new issue examples already use tha change would make sense would willing submit pr source", "d": "7/2017"}, {"body": "yes bound identifier data structure fine markup look like works one way two way", "d": "7/2017"}, {"body": "kgrosvenor issue using index key using id property works fine make sure tested example docs modified illustrate problem first replaced text output input bound directly property still worked removing items list problem comes binding data property nt get properly updated list spliced", "d": "7/2017"}, {"body": "linusborg happy make changes docs require adding complexity example", "d": "7/2017"}, {"body": "way use checkbox call cause global calls used php blade views", "d": "7/2017"}, {"body": "vinayakkulkarni ran decided add vue class checkboxes handled semantic global call becomes remember add labels label click events pass correctly", "d": "7/2017"}, {"body": "guess unexists value int typed property null instead empty string", "d": "7/2017"}, {"body": "closing nt much actionable items community come decent solutions getting two work together likely guide official unit test util published", "d": "7/2017"}, {"body": "used good stuff mentioned together search ui components library took us time put everything together working well issue far need compile cjs build prior testing vue components use rollup vue preprocessor plugin mentioned thread amp jest snapshots cristian carlesso inspired us lot current setup", "d": "7/2017"}, {"body": "sorry letting sit reply probably late ultimately think type applike navigation really begs dedicated cardstack based touchaware navigation solution still largely designed around nested boxes desktop navigation model builtin transition system really meant fireandforget state toggle animations adding would nt answer root problem", "d": "7/2017"}, {"body": "check element list solves issue still consider issue though think hack necessary", "d": "7/2017"}, {"body": "good way default value adding disabled option always open improve docs vuejsvuejsorg pr closing since documentation issue change breaking change revisit next major release though", "d": "7/2017"}, {"body": "linusborg vue replaces elements added events replace elements give explanation", "d": "7/2017"}, {"body": "gcystar vue controls dom way never rely domelements mutate dom directly times want achieve done vueway need information please ask forum stack overflow gitter prefer gitter always someone online willing help", "d": "7/2017"}, {"body": "hi guys join conversation cause burning brains trying figure making news site fetches data wordpress api using wordpress client upload news naturally made dynamic routes name news post like wwwmywebsitecomnewsanewstitle problem one requirements users able copy paste link facebook get right preview news post image title short description first tried hands vuemeta plugin work see meta tags updating inspect page paste link facebook nt get preview news post lot googling guess facebook crawler wait site run javascript code update metadata reading og tags right information showing right solution problem use ssr render news posts another way zero experience ssr", "d": "7/2017"}, {"body": "leocirculo either use ssr prerendering since using wordpress prerendering may best way go", "d": "7/2017"}, {"body": "userland solution documented alternatively community solutions nuxt also handles", "d": "7/2017"}, {"body": "trying wake dead image want wrapper custom component shows loading spinner slot slot container spinner removed event emitted component occupies slot slot child parent template looks something like mounted function emit loadstatuschange template template txt usage something like order slot child fulfill parent interface emit event turn spinner inactive one argue using parentemit per suggestion complicates issue need take consideration life cycle components example slot child emits event mount slot container register earlier phases mount child mounted parent container case event fired missed parent passed hurdle find odd situation want remove spinner slot container usually mounted thats whole point need code trickery parent order see clear spinner event received parent component mounted long story short order get full slot power believe sort mechanism introduced js expect means short experience vue thoughts welcomed", "d": "7/2017"}, {"body": "ilyasemenov way enough enables interpolation undefined syntax html undefined message undefined const nodelimiter replace function const app new vue el app delimiters nodelimiter nodelimiter data message hello vue result hello vue created pr", "d": "7/2017"}, {"body": "alfajpn good point nt pay attention happens result call since simply concatenated construct regexp returning nonmatching regexp work updated example correspondingly", "d": "7/2017"}, {"body": "way set something like something like", "d": "7/2017"}, {"body": "news feature", "d": "7/2017"}, {"body": "seems work started february", "d": "7/2017"}, {"body": "know thats workaround could use css transitiondelay mode use class mode use class eg scss slideritem display inlineblock amp sliderenteractive amp sliderleaveactive transition opacity amp sliderenteractive transitiondelay amp sliderenter amp sliderleaveto opacity", "d": "7/2017"}, {"body": "unlikely happen due sheer complexity likely introduce much extra code relatively noncritical use case behavior transition modes multiple items vague hard define even implement probably ship separate plugin instead part core", "d": "7/2017"}, {"body": "seems little traction virtual list use case imo designed also cached components already extent controlled via props", "d": "7/2017"}, {"body": "gdomiciano suggested probably would also work much faster", "d": "7/2017"}, {"body": "version", "d": "7/2017"}, {"body": "got around documentqueryselectorall textfield foreach el gt new vue el data function return value said things markup like error messages also want bind model similar point markup becomes little strange aim maybe like original poster try find framework combines template syntax way binding vue progressive enhancement ssr ideals allow sites built fall back js actually makes little sad vue js claims allow progressive enhancement states wont pickup initial model values markup thus contradicting statement", "d": "7/2017"}, {"body": "working solution component bootstrap based also using veevalidate enjoy vue component definition vuecomponent boostinput props gridlayout txtidentifier txttype txtlabel txtval txtvalidation txtplaceholder helpblocktext maxlength parentmodel model prop parentmodel event update parentmodel data function return templaterender null modelvalue typeof thistxtval undefined thistxtval render h return h div thistemplaterender thistemplaterender mounted function var compiledtemplate vuecompile errorsfirst txtidentifier thistemplaterender compiledtemplaterender methods change function newvalue emit update parentmodel newvalue using component html another alternative way framework push could something like", "d": "7/2017"}, {"body": "simplest workaround using", "d": "7/2017"}, {"body": "custom modifiers agree tobei input typedate work automagically", "d": "7/2017"}, {"body": "also issue blocking issue inline script escaped update plan insert script page rendered html", "d": "7/2017"}, {"body": "metekabak hello use", "d": "7/2017"}, {"body": "tupengtongxue since version work version", "d": "7/2017"}, {"body": "metekabak use lodash util", "d": "7/2017"}, {"body": "using lodash already suggested new syntax thanks anyway", "d": "7/2017"}, {"body": "hello toilal hit problem lodash function using vuejs another workaround could use replacing array method lodash function mutate array", "d": "7/2017"}, {"body": "would love helpers something like already", "d": "7/2017"}, {"body": "prograjkamal curious decided execute reasoning behind", "d": "7/2017"}, {"body": "sagv vfor adds extra params ie item index scope vdirectives use hence executed first note nt put vfor vifvshow tag use nest vfor vifvshow shown jsfiddle", "d": "7/2017"}, {"body": "set different name id vue file", "d": "7/2017"}, {"body": "aymkdn works", "d": "7/2017"}, {"body": "examples trying compose mixin approach pourly designed yet place mixin need reach vmdata elements extends common behavior posible instead define private object mixin share behavior data component mixin", "d": "7/2017"}, {"body": "case helps might new vue could nt get static example working static value coming vuex store property seems always lag commit behind example updated classes whenever store changes", "d": "7/2017"}, {"body": "bensmeets probably nt work use inside template never", "d": "7/2017"}, {"body": "tnx sqal tried behaviour nt update class span", "d": "7/2017"}, {"body": "sqal doh found issue safari updating devtools chrome everything works fine seems either safari combination vue dom safari makes showing actual dom inspector", "d": "7/2017"}, {"body": "works controller html", "d": "7/2017"}, {"body": "solution", "d": "7/2017"}, {"body": "small update come ifwhen vue decides drop legacy browsers move evergreen ones instead reactivity alexsandroxpt use computed function returns", "d": "7/2017"}, {"body": "nickmessing try map nt work computed array length value always", "d": "7/2017"}, {"body": "probably solution want lack reactivity changes get propagated vue mentioned earlier sets maps observable vue order use either computed properties methods watchers template expressions etc need create serializable replica structure expose vue naive example uses simple counter providing vue information set updated data mysetchangetracker myset new set computed mysetaslist using tell vue property depends gets reevaluated whenever changes return thismysetchangetracker amp amp arrayfrom thismyset methods add item thismysetadd item trigger vue updates thismysetchangetracker illustrates kinda hacky working method making nonobservable data reactive still real world cases ended serialized versions setsmaps eg probably want store modified versions setsmaps localstorage thus serialize anyway artificial countershacks involved personally think fair solution problem definitely deserves official documentation otherwise impossible justify nonhacky way dealing vue internals", "d": "7/2017"}, {"body": "alexsandroxpt sorry wrong computed hacky inca said another hacky solution would using method example fiddle", "d": "7/2017"}, {"body": "thank nickmessing inca work fine", "d": "7/2017"}, {"body": "noirbizarre resolve end", "d": "7/2017"}, {"body": "mentioned acklenx mixing original properties computed property good solution lead unnecessary computations original property changed showcase fiddle property depends properties however computed even another property originalc changed simple usecase extending computed property looks totally fine organic getting fullname user component data things used accomplished filters ago since really preferred way well regular methods extending user would good spot given large components represent pages multiple users storing fullnames flat structure cumbersome another reallife usecase actually brought namespace properties passed outside modules vuex state example stated issue nested properties methods would provide flexibility distinguish common outside properties direct component ones", "d": "7/2017"}, {"body": "would line rubyrails conventions well global config would plus", "d": "7/2017"}, {"body": "nt think interested line backend technology personally see benefit adding support even casing existing camelcase amp kebabcase enough use cases adding another one like valid reason", "d": "7/2017"}, {"body": "well coffeescript really like rubyrailscoffeescript coding standard probably would nt hard vue look props available determine prop defined assigning finds", "d": "7/2017"}, {"body": "sorry sounded rude nt mean following html javascipt coding standards vue nt follow coding standards since affiliated", "d": "7/2017"}, {"body": "want use submit event form", "d": "7/2017"}, {"body": "hi please explain limitation got vue html dom allows set values hidden inputs meant provide twoway binding react tu userinput hidden fields ca nt user input consequently nt make much sense vmodel hidden input use", "d": "7/2017"}, {"body": "vinayakkulkarni thanks code snippet clue get semantic calendar plugin work vue js", "d": "7/2017"}, {"body": "using modified version bootstrap datepicker created small component usage", "d": "7/2017"}, {"body": "ah guess tried way semantic calendar nt work", "d": "7/2017"}, {"body": "using semantic calendar datepicker listening picker change event updating underlying property works dates chosen picker made directly user input element field properties come prop rather binding individually mutating field prop value key would nt considered best practice props events purists could something similar using custom input component calling code use vmodel native form element html moduleexports name fieldinputdate props field mounted function const f refsvaluefield const fdata thisfield refswrapper calendar type date today true onchange function date text mode fdatavalue text return true", "d": "7/2017"}, {"body": "hope solve someone problem use vue ref username onclick function access like", "d": "7/2017"}, {"body": "alexsasharegan would like know answer question", "d": "7/2017"}, {"body": "works vueloader files", "d": "7/2017"}, {"body": "see thank suppose part confusion results use term string template documentation seems inconsistent following implies templates defined string literals however following defines string template singlefile component seems though number individuals confused perhaps docs could changed kind clear confusion", "d": "7/2017"}, {"body": "also work templatecompiler included full build vue compiles string templates render functions code used vueloader basically issue op browser parsing html vue chance read using inline templates", "d": "7/2017"}, {"body": "string templates probably defined kind like template defined dom could confuse people templates dom string templates easy get right", "d": "7/2017"}, {"body": "deprecated package would love see vue core team supporting custom elements ecosystem", "d": "7/2017"}, {"body": "niluanxy", "d": "7/2017"}, {"body": "kristofferdarj drop calls behaves much reasonably otherwise operations strict inverses fixed point see comment stabilizing expect leads f changes c changes f problem seeing see vue docs ideas round shown values elements integers", "d": "7/2017"}, {"body": "believe people come around post still years later wrote article medium describing optimally setup typescript vue using webpack starter", "d": "7/2017"}, {"body": "typings vueutil recommended use vueutil", "d": "7/2017"}, {"body": "managed programmatically mount vue component element well pass props anyone tell appropriate strategy seems work components nt show vue dev tools big deal datatables provides callback function createdcell allows manipulate td node figured would hand dom control datatables create table go back vue manually mounting vue components callback code letting datatables take control table dom applicabilityicon vue file go back vue code mounting component programmatically", "d": "7/2017"}, {"body": "please see", "d": "7/2017"}, {"body": "working", "d": "7/2017"}, {"body": "gijovarghese given answer stack overflow general syntax incorrect need assign instance variable start using assigning anything try use methods look working example", "d": "7/2017"}, {"body": "nickmessing know actually helped july", "d": "7/2017"}, {"body": "ergonomicus initial issue vue vue please tell browsers behave wrong using simple opposite ternary example", "d": "7/2017"}, {"body": "nickmessing talking whether use ternary thing provided working example vue pointed right direction got desperately googleing around solution might help others future", "d": "7/2017"}, {"body": "ergonomicus good point sorry rude", "d": "7/2017"}, {"body": "took example expanded use case wrong would expect preselected", "d": "7/2017"}, {"body": "guilhermeaiolfi use object designed strings", "d": "7/2017"}, {"body": "sure used working pre selecting using vif", "d": "7/2017"}, {"body": "guilhermeaiolfi fiddle without object gets converted string used object use example possible context", "d": "7/2017"}, {"body": "please nt use github issues questions questions support please use discord chat room gitter chat room official forum issue list repo exclusively bug reports feature requests", "d": "7/2017"}, {"body": "guilhermeaiolfi using nt need hardcode attribute however need aware must strictly equal value order get selected updated fiddle", "d": "7/2017"}, {"body": "example version", "d": "7/2017"}, {"body": "try code still work", "d": "7/2017"}, {"body": "endoplasmic solution also work", "d": "7/2017"}, {"body": "njleonzhang ya edited comment say others stumble bit clear", "d": "7/2017"}, {"body": "endoplasmic great dependence implementation", "d": "7/2017"}, {"body": "njleonzhang example work side", "d": "7/2017"}, {"body": "xiaolp endoplasmic provided sample", "d": "7/2017"}, {"title": "docs error event could improved", "body": "hi guys according docs error event would callback function following signature instead signature looks like think sync event also jquery version", "num": "4149", "d": "7/2017"}, {"body": "nt think need com domain fyi paying market rate com registrations", "d": "7/2017"}, {"body": "domain already expired make offer minimum issue closed link new owner", "d": "7/2017"}, {"body": "oh well interesting see happen domain", "d": "7/2017"}, {"body": "bb works perfectly event mixed marionette would like see support life bb developers marionette great job promoting maintaining user base eco system would like see bb one user said good glue shit hammer already job agree would like add hammer needs improvments better job better one things hope someone jumps board makes bb fork full compatibility puts life back bb agree angular shit", "d": "7/2017"}, {"body": "may start dev branch bb code transferred could split code parts add rollup effectively build distributable version", "d": "7/2017"}, {"body": "respectfully ogonkov already done used jspm systemjs distribution versioning use rollup bundling well bb drops thinking making bb version fully embraces babel esnext stage perhaps extra modularity elements bb focus native functions versus library usage", "d": "7/2017"}, {"body": "nicely done interesting breaking requires deeper inheritance events instead treating mixin like backbone currently would definitely support modular backbone like see smaller iterative nonbreaking steps", "d": "7/2017"}, {"body": "paulfalgout gt breaking requires deeper inheritance events instead treating mixin like backbone currently mainly due documentation purposes esdoc time many documentation tools including tjsdoc finishing nt work mixins knowledge every frameworks mixin api library would necessary personally think deep inheritance mixins generally antipattern versus explicit composition static types available especially comes core framework code recall change effectively works bb mainline nt exactly breaking change though nt got mainline bb test suite hooked would nice thing proof compatibility", "d": "7/2017"}, {"body": "sorry yes mixin meant ca nt extend events another object frankly showstopper many backbone plugins also mixin events already existing objects", "d": "7/2017"}, {"body": "indeed breaking change one worthy potential ever adopted mainline say idiomatic guiding principle bb related refactor efforts move away mixins frameworks react well documented believe removing mixins public framework apis good thing minimizing usage internal implementation needed recent collection mixin addition things debatable gather minority considerable amount around components bb would explicit getter events instance via composition versus mixin inheritance ala adhoc objects something like const anobject event new backboneevents register function thiseventon test trigger thishandler testtrigger triggertest function thiseventtrigger test trigger handler function thistesttrigger", "d": "7/2017"}, {"title": "lookup helper", "body": "trying access handlebars builtin helper get error lookup helper hbs file looks like route need anything special access helper", "num": "15561", "d": "7/2017"}, {"title": "doc explain empty function emberisempty", "body": "", "num": "15558", "d": "7/2017"}, {"title": "asyncawait model hooks fail tests", "body": "given model hook uses calls statement fail acceptance test visiting route error happen rewriting using promises understand correctly root issue seems native promises integrate ember run loop reported thought creating issue would help others getting bitten find reported elsewhere workaround possible replacing native promise tests rsvp one add eg making sure configured make babel transpile asyncawait using native asyncawait eg chrome always lead failing tests", "num": "15556", "d": "7/2017"}, {"title": "maximum call stack size exceeded mandatorysetter", "body": "get following exception callstack looks like upper three functions repeating reason still trying set directly calls object calls idea constellation occurs also nt able reproduce twiddle used case using ember also occurred ember remember correctly nt occur ember", "num": "15555", "d": "7/2017"}, {"title": "error compile error modifier", "body": "one templates line property isbuttondisabled set controller keep getting error ember cli please mine wrong", "num": "15554", "d": "7/2017"}, {"title": "cachefor returns wrong value aliased properties", "body": "aliased properties etc return consumed object try get cached value embertwiddle js export default embercontrollerextend appname ember twiddle aliased embercomputedalias appname init thissuper arguments consolelog thiscachefor aliased consolelog get thisget aliased consolelog thiscachefor aliased expected output actual output", "num": "15545", "d": "7/2017"}, {"title": "images templates missing prepend url", "body": "hi upgrade ember project latest version images assets display template used work isadmin enviromentjs file production environment production emberclibuild images missing idea", "num": "15541", "d": "7/2017"}, {"title": "error events fired twice", "body": "example uses mirage problem fact independent mirage looking developer tools one see error thats responded mirage without mirage gets thrown browser appears twice log statement error handler however fires realworldapp handler somehow also firing twice whats going expected error thrown twice console cause handler fired twice whenever say fired twice means stack trace error exact appearances console verified handler attached twice realworld app", "num": "15537", "d": "7/2017"}, {"title": "controller init hook called query param resolution", "body": "similar issue changes refactor routes lookup controllers query params made causing issue app sure remediate problem route query params route question controller hook runs setup controller prior hook run route question hook run part query param resolution route linked causing unintended side effects something need figure way refactor around something else", "num": "15534", "d": "7/2017"}, {"title": "ember debug classcallcheck issue", "body": "emberdebugjs contains two emberbabel amd modules one one without causes", "num": "15533", "d": "7/2017"}, {"title": "setting backing value oninput action nt trigger textarea value update newlinerelated change", "body": "sorry confusing title repro text box try following emberenter emberenter clarity typed nonwindows since textarea value backed property action runs would expect result first would represents text caret second would second one works expected first leaves caret second despite oninput removing newlines confirm console output twiddle second case demonstrates immediately add another nonnewline character newline problem demonstrated first example rectified try first example hit enter bunch times end notice textarea value rectified nonnewline character typed also try typing placing caret hitting enter see issue type nonnewline character rectified seems like despite action always setting property textarea value property backs nt updated newline changes interesting aside paste behaves expect caret stays first line try macos make sure right string copied trailing chars additionally arbitrary copied strings multiple newlines behave would expect temporary workaround enter", "num": "15531", "d": "7/2017"}, {"title": "behavior around changed", "body": "controller injected user nt specified ember result injection empty controller actively generated behavior throws error solution find predicament create said controller restore previous behavior adding issue case bites someone road immediately close", "num": "15527", "d": "7/2017"}, {"title": "thisset nt return value returned computed property", "body": "twiddle demonstrating issue found piece code behind issue isdescriptor computed property currentvalueset obj keyname value else currentvalue undefined amp amp object typeof obj amp amp keyname obj amp amp typeof objsetunknownproperty function unknown property objsetunknownproperty keyname value else currentvalue value change else let meta peekmeta obj propertywillchange obj keyname meta return value imo instead returning value passed function collect value various set functions called let valueset value isdescriptor computed property valueset currentvalueset obj keyname value else currentvalue undefined amp amp object typeof obj amp amp keyname obj amp amp typeof objsetunknownproperty function unknown property valueset objsetunknownproperty keyname value else currentvalue value change else let meta peekmeta obj propertywillchange obj keyname meta return valueset bug working designed", "num": "15526", "d": "7/2017"}, {"title": "active route", "body": "storing order return route later point expected returns route set correct state current observed behavior calling another route returned route url changes however wrong links class example version ember alpha", "num": "15518", "d": "7/2017"}, {"title": "action handler get ignored production", "body": "mysterious reasons action handler completely ignored production temp solution onclick action actionname cases like asyncbutton working", "num": "15517", "d": "7/2017"}, {"title": "slow embererror constructor", "body": "heard grapevine error handling slow using current versions eg looking constructor main offender probably call used format stack trace lazily access property like builtin error objects since year formats traces eagerly could fairly expensive would explain sudden slowdown error handling code looking reenabling lazy formatting soon also noticed call constructor collects stack trace three times call explicit maybe possible avoid useless work current versions enough call also filter relevant frames cc hashseed bmeurer stefanpenner", "num": "15516", "d": "7/2017"}, {"title": "getowner inconsistent behavior devprod", "body": "factory typesafe enumerations js export default function typesafeenum ids klass ids array ids assert ids must array length gt idslength gt klass klass emberobject return arrayproxyextend container null lt note line originally remind consumers provide one ember created one things passed everything worked fine ember development test mode everything continued work fine emitted warnings hit production blew instance removing fixed problem concerns ember core object classes differing behavior devtest vs prod especially since nt even warnings devtest concerned change behavior something weird devtest environments caught problem upgrade", "num": "15507", "d": "7/2017"}, {"title": "getting classcallcheck function error", "body": "canary seeing following error production nt reproduction trace maybe couple classcallcheck rsvp nt stripped sourcemaps enabled production see rsvpjs var allsettled function enumerator emberbabelinherits allsettled enumerator enumerator", "num": "15506", "d": "7/2017"}, {"title": "quest internals prefer generic array methods prototypeextensions", "body": "supersedes stale x addarrayobserver x removearrayobserver x x x pushobject pushobjects reorg public api etc docs tests goal merely decouple internals observable based prototype extensions hopefully give us flexibility make future call prototype extensions general also eases pain using ember prototype extensions disabled accomplished without breaking semver anyway todo x merge enumerable nativearray x merge mutableenumerable mutablearray deprecate enumerable bugfix release deprecate mutableenumerable bugfix release", "num": "15501", "d": "7/2017"}, {"title": "controller init method called model method application route", "body": "issue ember app breaking upgrading method controller particular route executed method route bunch featuresflags check methods set application model working expected gt gt controller route loaded till ember", "num": "15495", "d": "7/2017"}, {"title": "getowner sometimes returning undefined", "body": "related perhaps appears sometimes returns work around", "num": "15492", "d": "7/2017"}, {"title": "beta onfulfillment function", "body": "stepping stack traces seems rsvp catch logic may changed little versions", "num": "15490", "d": "7/2017"}, {"title": "read property isinteractive undefined", "body": "hey guys running issues upgrading app tests reopens certain modules stub perhaps allowed error hit rather bizarre first got hit error exactly emberwormhole describe stub suggested bug got new error tracing shows comes line somehow environment nt recognized wonder fix lookup intended used many thanks", "num": "15489", "d": "7/2017"}, {"title": "propertiesmethods added emberobject using reopen unless object subsequently created", "body": "hello noticed dynamically adding propertiesmethods existing emberobject class using reopen propertiesmethods show tinkering found arbitrary object class type must constructed propertiesmethods added previously constructed objects class type example reopen example documentation works fine const myobject emberobjectextend name object myobjectcreate oget name object myobjectreopen say msg consolelog msg myobjectcreate hello logs hello osay goodbye logs goodbye unless remove construction const myobject emberobjectextend name object myobjectcreate oget name object myobjectreopen say msg consolelog msg myobjectcreate hello osay goodbye typeerror get typeerror osay function", "num": "15488", "d": "7/2017"}, {"title": "firefox bug data binding html component cause selected option rendering wrong", "body": "hey guys experiencing wired data binding bug happened firefox bind properties tag ember computed property computed value updated selected index even number displayed value dropdown would always first value instead actual selected value also tried vanilla js works fine someone help take look thanks advance reproduce please open firefox ember twiddle vanilla jsbin", "num": "15484", "d": "7/2017"}, {"title": "beta negative integer literal causes null reference positional params", "body": "ember beta component invocation like throws exception change negative one positive number exception goes away exception seems first positional parameter case string literal replaced null reference positional arguments handled glimmer stack trace reproduction repo", "num": "15480", "d": "7/2017"}, {"title": "infinite rendering invalidation detected option increase limit disable check entirely", "body": "emberelementquery addon code js const eqresizehandler gt scheduleonce afterrender thisequpdatesizes next thisequpdatesizes used work flawlessly resizing browser tab causes app carsh infinite rendering invalidation detected problem happens window several seconds amount time movement required app crash arbitrary sometimes crashes almost instantly sometimes takes like seconds crash tried replacing increasing timeout unreasonably large values still crashing even sure crash caused code lines seem cause js let loops function loopend current next let lt rendererslength renderers isvalid loops gt loops todo something better renderers destroy throw new error infinite rendering invalidation detected loops return backburnerjoin null k loops backburneron end loopend see three problems code considers infinite loop appear ten loops ten quite small number certain use cases obviously enough example js max call stack larger inifinite loop detected code chooses crash app sob addon used work without issue thing crashing reason code applied closure way override sure perfect reasoning small magic number chosen user able increase number use case produces many loops user able opt arbitrary crashing", "num": "15479", "d": "7/2017"}, {"title": "glimmer component manager todo", "body": "getting glimmer component manager run ember means must clean things ember env always uses instead deferring manager definition ember glimmer application correctly x allow glimmer subclassed x update ember glimmer master x permit template ember got ta like", "num": "15473", "d": "7/2017"}, {"title": "read methods properties details router class", "body": "api ember website problem go documentation router class click method property example map method info shown reading source code page info shown maybe problem layers javascript properly handling style display none show", "num": "15471", "d": "7/2017"}, {"title": "bug closure actions ca nt receive primitive numbers", "body": "found ca nt pass decimal negative numbers closure actions anymore reproductions twiddle repo", "num": "15470", "d": "7/2017"}, {"title": "upgrading ember app throwing random different errors safari", "body": "hi upgraded ember everything works great chromefirefox app safari broken previous ember release worked perfectly getting errors like ownerlookup function ownerlookup viewregistry main ownerlookup undefined null object evaluating misinitialized undefined object evaluating emberdefaultgetowner lookup undefined object evaluating emberutilsgetowner container happen randomly page load click link idea might problem ember worked safari well", "num": "15468", "d": "7/2017"}, {"title": "deactivate called parent route going child route promise model loading template", "body": "twiddle given following route route async model template navigate parent route gets called appears introduced stepped router changes introduced could gather extra transition called due presence loading route", "num": "15466", "d": "7/2017"}, {"title": "need target information thrown", "body": "need enhancement version include target triggered something similar help currently tracking error logs thrown client would help us eliminate bunch errors logs occur due actions defined unhandled since user visits route rfc change", "num": "15465", "d": "7/2017"}, {"title": "missing sourcemaps", "body": "get error upgrading building app two problems supplied source maps missing build obviously warnings break ci related think reason files contain reference sourcemap end file seems new least published npm package files added indexjs really missing tmp tree tries read put pr together exporting files way go given sure", "num": "15464", "d": "7/2017"}, {"title": "form component bound id submit input form attribute nt handle submit event", "body": "one uses component tagname combination form attribute input uses attribute wo nt handle forms submit event gets rendered correctly one clicks method form component wo nt get called attribute element following according mdn form element input element associated form owner value attribute must id element document attribute specified element must descendant element attribute enables place elements anywhere within document descendants form elements input associated one form example twiddle shows two forms first one uses named input second one nt one clicks second input text changes one clicks first input whole page changes form action gets triggered without calling components submit method sure misunderstood input attribute bug ember", "num": "15461", "d": "7/2017"}, {"title": "tests hanging project successfully built", "body": "trying upgrade ember massive project ran another issue process running hangs projects built looking nothing log verbose output whats happening something special try solve issue nt happen browser cli ember emberdata", "num": "15454", "d": "7/2017"}, {"body": "ember leverages handlebars syntax offers different set helpers builtin standard handlebars setup believe looking helper see guides api docs", "d": "7/2017"}, {"body": "thanks info looks like requires parameter string integer following workaround suggested approach", "d": "7/2017"}, {"body": "yes believe recent versions properly handle numbers inputs helper", "d": "7/2017"}, {"body": "yep listed changelog", "d": "7/2017"}, {"body": "thanks look forward change", "d": "7/2017"}, {"body": "ha reviewed implementation actually certain handling functions", "d": "7/2017"}, {"body": "agreed seems like docs bug nt think want get business distinguishing empty function bodies", "d": "7/2017"}, {"body": "nkgm mind submitting pr updating docs", "d": "7/2017"}, {"body": "problem fact trying avoid returning zeroarg functions", "d": "7/2017"}, {"body": "provide reproduction", "d": "7/2017"}, {"body": "sorry nt able maybe figuring mandatory setter help narrow cause saw something module called nt able figure", "d": "7/2017"}, {"body": "need reproduction", "d": "7/2017"}, {"body": "mandatory setter used property watched development mode development assertion", "d": "7/2017"}, {"body": "know whether ember twiddle release build", "d": "7/2017"}, {"body": "ctusch create fresh app via publish repo would great starting point us debug", "d": "7/2017"}, {"body": "wait would property watched failed attempt reproduce error", "d": "7/2017"}, {"body": "locks comment says failed attempt", "d": "7/2017"}, {"body": "error message telling ca nt handlebars expressions position value attribute like assuming boolean value since issue tracker focused bugs framework likely get better faster answers post stack overflow visit channel ember community slack see around", "d": "7/2017"}, {"body": "surprised marked honest cachefor computed props aliases aliases using cache meta flag nt actually cache values", "d": "7/2017"}, {"body": "think expected behavior default done", "d": "7/2017"}, {"body": "public api ever distinguish computed properties aliases created assumed aliases specialcase implementation performance outwardly behave computed properties", "d": "7/2017"}, {"body": "uses namespace internally different", "d": "7/2017"}, {"body": "seems like work around moving sensitive code route hook avoiding issues controller called unexpectedly", "d": "7/2017"}, {"body": "dhaulagiri fine aware every time hook called hook also called case called", "d": "7/2017"}, {"body": "think ok case thanks kumkanillam reminder", "d": "7/2017"}, {"body": "actually seems correct file bower seems offender", "d": "7/2017"}, {"body": "hmm bower seems fine wtf", "d": "7/2017"}, {"body": "ya ca nt actually figure file coming", "d": "7/2017"}, {"body": "stefanpenner issue trying fix basically uses prod since module already required time loaded subsequent definition prod version clobbers proper debug build version", "d": "7/2017"}, {"body": "also able reproduce twoway bound textarea helper getter setter property", "d": "7/2017"}, {"body": "thanks rondalesc", "d": "7/2017"}, {"body": "question behavior change recently", "d": "7/2017"}, {"body": "bug behaviour changed pre match javascript setters semantics following code let set hola value return consolelog ahola logs check jsbin thank", "d": "7/2017"}, {"body": "stefanpenner wrote recently piece code expecting would return value set value passed know much computed property setters return value set serabe bad thanks taking time clarify based answer verified doc matching said", "d": "7/2017"}, {"body": "alexspeller thanks taking look", "d": "7/2017"}, {"body": "probably related", "d": "7/2017"}, {"body": "active link classes get properly restored call calling", "d": "7/2017"}, {"body": "send reproduction repo thank", "d": "7/2017"}, {"body": "schuay believe usage purely cosmetic reasons remove", "d": "7/2017"}, {"body": "x remove capturestacktrace x remove duplicate super call require quick test ensure nt foobar anything", "d": "7/2017"}, {"body": "call super explicit errorcall message kinda funny bitrot time clean", "d": "7/2017"}, {"body": "also stack trace stuff provide deprecations get hit quite abit wonder log deprecation sans stack provide via console message enable stacks thoughts rwjblue", "d": "7/2017"}, {"body": "bit confused chrome branch seems like dead code least current versions arguments property error objects might also easier use extract relevant info rather expensive calls see", "d": "7/2017"}, {"body": "way formats lazily", "d": "7/2017"}, {"body": "bit confused chrome branch seems like dead code least current versions arguments property error objects ya code look funky suspect needs tlc looking", "d": "7/2017"}, {"body": "provide deprecations get hit quite abit wonder log deprecation sans stack provide via console message enable stacks likely via", "d": "7/2017"}, {"body": "schuay nt seem available", "d": "7/2017"}, {"body": "schuay errorpreparestacktrace nt seem available ah method must implement forgot p", "d": "7/2017"}, {"body": "might also easier use errorpreparestacktrace extract relevant info rather expensive regexppreplace calls see thoughts", "d": "7/2017"}, {"body": "thanks reporting good news fixed duplicate fixed master branch backport beta backport release deployed moments ago", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "jamesarosen issue jsc jit bug hard tell exact scenario addressed workaround please give go nt resolve comment w reproduction possible reopen", "d": "7/2017"}, {"body": "please give go next days hope", "d": "7/2017"}, {"body": "jamesarosen keep us posted", "d": "7/2017"}, {"body": "reproduction click make error button twiddle get rid trycatch watch console see actual stack trace production build debug build", "d": "7/2017"}, {"body": "whomever going fix think babel issue ember build rsvp build add possible also reason reverted classes rsvp", "d": "7/2017"}, {"body": "ember twiddle nt support newer versions ember created demo app screenshots links", "d": "7/2017"}, {"body": "sure without details reproduction believe due change made tried ensure pr description explains rationale change general never guarantee controllers would created specific order related route structure pr definitely fixing number bugs edge cases prior behaviors also one situations good fix happened accidentally break subtle behavior app relying apologize sadly believe need refactor logic case", "d": "7/2017"}, {"body": "commented pr text wo nt fixed reasons specified afraid one rare cases fix edge cases offer support slack help refactor yet use slackin app sign thank sorry", "d": "7/2017"}, {"body": "thanks rwjblue serabe explanation appreciate", "d": "7/2017"}, {"body": "reproduction", "d": "7/2017"}, {"body": "reproduction", "d": "7/2017"}, {"body": "see reproduction production build", "d": "7/2017"}, {"body": "need know problem production builds anyone reproduction production build", "d": "7/2017"}, {"body": "people confirmed affects production builds via error logs", "d": "7/2017"}, {"body": "still would like production build reproduction also confirmed existing reproduction webkit nightly affected", "d": "7/2017"}, {"body": "bisected checked cherry picked commit parent seems improved jit jit deopting late point returning undefined peekmeta", "d": "7/2017"}, {"body": "versions safari checked version problem webkit nightly revision fixed", "d": "7/2017"}, {"body": "stefanpenner checked release safari webkit fixed", "d": "7/2017"}, {"body": "master green merged beta running release running cc rwjblue", "d": "7/2017"}, {"body": "yes upgraded issue", "d": "7/2017"}, {"body": "think rsvp particularly line think need check passed sure error stack leads lines", "d": "7/2017"}, {"body": "stefanpenner please review specifically seems assume actually passed custom promise subclasses bug rsvp somehow assuming first arg always present", "d": "7/2017"}, {"body": "stefanpenner nt think rsvp behaving incorrectly gist reproducing issue native inherited rsvp inherited promise behaving way rejecting inherited null run node", "d": "7/2017"}, {"body": "bekzod agree nt believe rsvp offender although surprised upgrading causes downstream issue dont time root cause analysis one issue embers code fix guy cut new beta", "d": "7/2017"}, {"body": "general strongly recommend occur first class type instantiated caveats addition one mentioned fixing performance constraints unfortunately odds thanks opening issue though much appreciated", "d": "7/2017"}, {"body": "forgive topic issue really really interesting", "d": "7/2017"}, {"body": "confirm bug happens even positions though trying debug firefox dev tools really crappy", "d": "7/2017"}, {"body": "made happened odd continue tomorrow", "d": "7/2017"}, {"body": "firefox needs use selected property appending child options attribute nt seem work via attribute via prop", "d": "7/2017"}, {"body": "dup", "d": "7/2017"}, {"body": "although good know related actions helpers also affected", "d": "7/2017"}, {"body": "thanks saw issue nt sure covered case notice negative agree sat jul pm miguel camba notifications githubcom wrote although good know related actions helpers also affected receiving mentioned reply email directly view github mute thread", "d": "7/2017"}, {"body": "closing dup thank", "d": "7/2017"}, {"body": "sure going added cycle jerking window like minute app nt crash never reached time within another try reaches almost instantly dies", "d": "7/2017"}, {"body": "nested element query components added app wo nt even start emphasize used work flawlessly check introduced", "d": "7/2017"}, {"body": "right lolmaus believe removing solve problem", "d": "7/2017"}, {"body": "lolmaus really need try separating separate method call", "d": "7/2017"}, {"body": "looping loop agree configurable nt low happens invalidate rendering render call emberset hook didinsert update render rare need redoing render loop times quite lot lock browser", "d": "7/2017"}, {"body": "building element query addon component detects size changed must update html classes css recalculate happen flash unstyled content component size changes content styled previous style every element query component must recalculate parent element query component updated", "d": "7/2017"}, {"body": "ok measure another pass gt seems excessive", "d": "7/2017"}, {"body": "easy hit button phone", "d": "7/2017"}, {"body": "ok measure another pass said causes flash unstyled content", "d": "7/2017"}, {"body": "seems fix brand new api page thank", "d": "7/2017"}, {"body": "thanks although halffixed read info methods properties links nt work goes first method addobserver happens firefox mine ubuntu chrome works well versi\u00f3n build oficial bits ubuntu also difference watching page firefox chrome maybe related problem links method listing chrome appears two columns think good one firefox appears one column right space wasted serabe try click map method firefox accesing router page link posted", "d": "7/2017"}, {"body": "scrolling fixed please open issues repository like style difference browsers repository bugs framework thinking way better inform contributors file issues suggestions welcome thank time feedback", "d": "7/2017"}, {"body": "breaking emberconcurrency builds testing beta", "d": "7/2017"}, {"body": "specifically emberconcurrency breakage due following hbs pressandholdbutton press perform incrementby release cancelall incrementby decrease pressandholdbutton pressandholdbutton press perform incrementby release cancelall incrementby increase pressandholdbutton raw primitives causing breakage helper casts task closure action", "d": "7/2017"}, {"body": "also breaks liquidfire test suite anybody wants easy test case run dummy app visit", "d": "7/2017"}, {"body": "problem routes app work nt impression routes return unresolved promise beforemodel hook ones fail tried debug route beforemodel hook embergetowner returns object afterwards routeparamsfor embergetowner returns undefined still route instance", "d": "7/2017"}, {"body": "pieterv provide code", "d": "7/2017"}, {"body": "run first reported bug emberbootstrap addon seem cause able reduce reproduction varunsudhakar made bare minimum still uses external dependency embercpvalidations nt think root issue comes however able reproduce without cc offirgolan recorded following piece showing reproduction using repo enter bunch characters occurance exception seems really deterministic happens less randomly case see meta object component also properties seem return although still valid component dom also happens safari mac version ember", "d": "7/2017"}, {"body": "case also appears affect development builds test production builds work fine", "d": "7/2017"}, {"body": "occurring production builds safari osx ios seems happen trigger number actions inputs quickly cpu usage also abnormally high", "d": "7/2017"}, {"body": "found failing development least helped thanks simonihmig two issue debug flag incorrectly replaced meta file one debugger counter missing added think issue fixed person understands debug striping process locks", "d": "7/2017"}, {"body": "spotting issue image explain debug mishandled", "d": "7/2017"}, {"body": "normal behavior leftover curly braces nt instead", "d": "7/2017"}, {"body": "deployed ember yesterday got ratelimited sentry number events logged plan allows events minute various errors showing starting yesterday rolled back ember errors dropped errors happening production deployment made test deployment reversion still ember manage reproduce errors safari locally frustratingly enough information provide help figure happening let know", "d": "7/2017"}, {"body": "upgrading app ember ember unusable safari simonihmig comment best describes reproduction steps app also uses may may coincidence", "d": "7/2017"}, {"body": "record mentioned yet seems fix ready awesome debugging work thanks krisselden amp stefanpenner", "d": "7/2017"}, {"body": "looks like hit gnarly safari jit issue luckily able work around also seems like safari already fixed issue good thing backports pending release", "d": "7/2017"}, {"body": "want add pretty easy work around using action instead", "d": "7/2017"}, {"body": "issue", "d": "7/2017"}, {"body": "think issue relates rather", "d": "7/2017"}, {"body": "definitely issue perhaps addition embercli", "d": "7/2017"}, {"body": "rwjblue able confirm exporting sourcemap files right path go forward see first comment bit confused case able provide quick pr hopefully", "d": "7/2017"}, {"body": "cancel figured issue start called testhelperjs upgrade thank", "d": "7/2017"}, {"body": "hi stefan upon investigating closely bug seems likely caused js error breaks ember functionality rather something ember code works expected time raises doubts race condition thanks checking issue close", "d": "7/2017"}, {"body": "closing ember seems working expected op alternative resolution feel free reopen otherwise", "d": "7/2017"}, {"body": "sorry twiddle running correct fixed issue bug please let know try workaround project", "d": "7/2017"}, {"body": "recent versions ember confirmed tweak handling assertions message calculated assertions predicate falsey example transpiled code debug builds looks like js function addobserverforcontentkey content keyname proxy idx loc loc gt idx var item objectat content loc item true amp amp typeof item object amp amp emberdebugassert using observe array content array must return object typeof item object see calculating message eg ing actually needed completely alleviate issue", "d": "7/2017"}, {"body": "thanks looks great", "d": "7/2017"}, {"body": "facing issue sideloading relationship field app throws modified twice single render", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "thanks exactly", "d": "7/2017"}, {"body": "feature flag local lookup landed", "d": "7/2017"}, {"body": "using module unification feature flags run issue using linking routes autogenerated controllersroutes example generated error adding empty routescontroller files autogenerated objects acts workaround routes traced back present autogenerated route throws error getqpmeta", "d": "7/2017"}, {"body": "shall close issue marked wontfix", "d": "7/2017"}, {"body": "rwjblue fix backportable still found", "d": "7/2017"}, {"body": "specific fix obvious fixed due large architectural refactor glimmer aka nt identified bug fixed someone time dig specific version glimmervm fix would definitely appreciate help", "d": "7/2017"}, {"body": "cbou satisfy curiosity tell us need support strict xhtml parsing glimmerhandlebars parser based parsing spec kind would nt surprised incompatibilities love know working", "d": "7/2017"}, {"body": "migrating app written xhtml nt know reason xhtml nt want remove xhtml later sure nt notice incompatibilities", "d": "7/2017"}, {"body": "chance pr merged glimmerjsglimmervm", "d": "7/2017"}, {"body": "seems partial polyfill weakset features used internally suggest implementing computed macro uses set suggested", "d": "7/2017"}, {"body": "addressed", "d": "7/2017"}, {"body": "referencing", "d": "7/2017"}, {"body": "since listeners store dependent keys passed function like gt funcemberobserves foo hence subsequent usage function would overwrite gt funcemberobserves bar hence two solution assert using function different create wrapping function inside observeron time already populated might complex solutions probably worth narrow usecase p happy implement either solutions stefanpenner", "d": "7/2017"}, {"body": "stefanpenner understand deprecate pr given information closing issue according contributing document thank", "d": "7/2017"}, {"body": "hi sorry replying sooner getting another opportunity try update dependencies application still running issue serabe work twiddle see ca nt reproduce locks coming seems like core router method unsure would affecting anyone tips tracking certainly appreciate", "d": "7/2017"}, {"body": "getting exact error outside tests inside application trying inject autogenerated applicationcontroller nested subcontroller", "d": "7/2017"}, {"body": "stefanpenner reason keep open", "d": "7/2017"}, {"body": "followup issue fixed", "d": "7/2017"}, {"body": "believe things working properly number addons running test suites without issue", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "fixed thank", "d": "7/2017"}, {"body": "cibernox ping", "d": "7/2017"}, {"body": "u ping next week one verge collapse jul pm sergio arbeo notifications githubcom wrote cibernox ping receiving mentioned reply email directly view github mute thread", "d": "7/2017"}, {"body": "know simulaci\u00f3n en diferido de ping", "d": "7/2017"}, {"body": "closed", "d": "7/2017"}, {"body": "done", "d": "7/2017"}, {"body": "affected unlikely changed point", "d": "7/2017"}, {"body": "created last thing know consensus reached core someone would update topic find anything notes", "d": "7/2017"}, {"body": "serabe conversation issue think addon requested transition plan current users would great land pr still unclear particular issue tracking perhaps superseded", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "seeing", "d": "7/2017"}, {"body": "fixed thank", "d": "7/2017"}, {"body": "update", "d": "7/2017"}, {"body": "discussed believe resolved", "d": "7/2017"}, {"body": "yes resolved found way one recent ember releases though ca nt say one specifically fixed", "d": "7/2017"}, {"body": "lrdiv also happening good catch v destructure ember precisely override native otherwise changed name something like declaration usage went right way would nt call bugbug either agree pretty much everything wrote stuckouttonguewinkingeye", "d": "7/2017"}, {"body": "kellyselden still issue", "d": "7/2017"}, {"body": "longstanding pr bug rebased still broken", "d": "7/2017"}, {"body": "bcardarella sorry lack movement seeing issue agree weird halffollow spec dash constraint constraints existing library encodes custom elements spec rules reuse would open pr issues warning use one reserved names nt think hard error backwardsincompatible change", "d": "7/2017"}, {"body": "closed", "d": "7/2017"}, {"body": "funny thing updated like week ago ember issue able work around previous time fixed", "d": "7/2017"}, {"body": "cwarny tried initializing property corresponding query param eg", "d": "7/2017"}, {"body": "duplicate closing thank", "d": "7/2017"}, {"body": "guys need help error shows try use model property belongsto another one created blank project still shows thing wrong also backend using net core json api net core following instructions ui render broken point however data loads see desired values js hbs template error get assertion failed modified modelprofilecontactprofile twice single render rendered template fuelsemberinternalprofiletemplatehbs modified template fuelsemberinternalprofiletemplatehbs unreliable slow ember longer supported see details ps tried using embercomputed method get property seems work required update also discovered data loads fine inside helper directly template", "d": "7/2017"}, {"body": "lbarsukov maybe related backtracking rerender caused relationships jsonapi response property set issue started ember data try using emberdata see solves problem", "d": "7/2017"}, {"body": "danieldewit thumbs master actually works need happy", "d": "7/2017"}, {"body": "seems fix kellyselden confirm please thank", "d": "7/2017"}, {"body": "nope problem still exists update twiddle", "d": "7/2017"}, {"body": "seems moved fastboot repo", "d": "7/2017"}, {"body": "imo core glimmer question glimmer implement tag omission compliant browser html handling", "d": "7/2017"}, {"body": "krisselden update thank", "d": "7/2017"}, {"body": "reproductions issues found", "d": "7/2017"}, {"body": "currently running app hitting exact issue according sentry even though code includes workaround", "d": "7/2017"}, {"body": "issue also fix chrome well versions chrome could run sure issue", "d": "7/2017"}, {"body": "workmanw yeah pretty sure apparently users still running old chrome versions fact derived browsers sogou explorer opera chromium dragon showing similar behavior according sentry logs", "d": "7/2017"}, {"body": "feel pain customers enterprises lock users specific versions chrome never let upgrade possible issue resurfaced way say certainty time workaround resolve issue us", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "specific versions", "d": "7/2017"}, {"body": "chrome opera chromium sogou explorer chrome chrome chrome far common one reason", "d": "7/2017"}, {"body": "krisselden provide info still problem making list routing problems one thank", "d": "7/2017"}, {"body": "serabe nt directly related routing basically suggesting need register default template still need make sure keep import setting property folks extend custom components", "d": "7/2017"}, {"body": "got hit today also use case need abort transition show confirmation popup model dirty ideas handle", "d": "7/2017"}, {"body": "ended saving flag controller target route use deside whether block transition beforemodel hook target route downside controllers need defined explicitly otherwise resolver starts throwing errors", "d": "7/2017"}, {"body": "hi janwerkhoven explain implemented solutions", "d": "7/2017"}, {"body": "app relies series modals shown top page manage would render page modals templatesapplicationhbs outlet outlet modalparent outlet parentsomemodalthisrender outlet modal routesparentsomemodal rendertemplate function thisrender parentsomemodal application outlet modal routesparentsomemodal export default emberrouteextend modals injectservice aftermodel thisset modalscomponentname somemodalcomponentname servicesmodalsjs componentname null componentsmodalwrappercomponentjs modals injectservice componentname computed modalscomponentname function return thisget modalscomponentname templatesapplicationhbs outlet modalwrapper component componentname modalwrapper beauty ever step along way route service component easier write tests works like charm", "d": "7/2017"}, {"body": "janwerkhoven would like use something similar like ruby rails design namelayout ember want login path load applicationhbs template currently since login loaded inside one put understand use want could help possible", "d": "7/2017"}, {"body": "halleyrv meaning things always page want sometimes nt put applicationhbs source confusion move things applicationhbs something like loggedinhbs instead use route structure like", "d": "7/2017"}, {"body": "hi use thanks prompt response use indicated login longer application design enter desktop path loading different design case friend show content written dashboardhbs happens could help children codes approuterjs import ember ember import config configenvironment const router emberrouterextend location configlocationtype rooturl configrooturl routermap function thisresource login thisroute amigo path function routes go thisroute dashboard export default router appapplicationhbs amigohbs new design templates dashboardhbs", "d": "7/2017"}, {"body": "halleyrv need move route controller template correspondingly route case controller go", "d": "7/2017"}, {"body": "thanks lot kumkanillam janwerkhoven could solve place solution multi template layout ember user users problem want login template different template routes inherit another template login template steps first approuterjs create import ember ember import config configenvironment const router emberrouterextend location configlocationtype rooturl configrooturl routermap function thisroute login thisroute layoutapp path function thisroute welcome export default router layoutapp put new template route important path tell routes take root inside directory applicationhbs file create file called layoutapphbs important since template file routes create layoutapp name route layoutap put content template apptemplateslayoutapphbs applicationhbs put online route login inherit template applicationhbs routes example welcome inherit template layoutapp", "d": "7/2017"}, {"body": "another one working solution", "d": "7/2017"}, {"body": "hi ember issue still seems present", "d": "7/2017"}, {"body": "experiencing issue currently using ugly workaround found stackoverflow please dont shame", "d": "7/2017"}, {"body": "also walked trap calling momentjs recursion order wait seconds updating moment strings disabling recursion set acceptance tests hopefully run long anyway ideal would add parameter would mark unblocking tests otherwise would keep central list timer ids date seems error prone think", "d": "7/2017"}, {"body": "nt know different issue replaced one think considered bug recently hit problem tests time call recursively sets another like use stay within framework instead switching like another comment says codepaths branch based testing vs testing generally bad sign", "d": "7/2017"}, {"body": "aprescott unfortunately current testing api design simply limited way definitely change without semver violation indeed tricky problem solve regardless free hand suggest using emberlifeline polltask provides testable polling mechanism instead loop running forever blocking tests must manually tick polling task test think emberconcurrency similar api considering one future", "d": "7/2017"}, {"title": "regression tests fail timeout android", "body": "commit commit swarmjqueryorg jun swarmjqueryorg jun possibly relevant commits timmywil cdagaming according code review comments commit also affected way mgol", "num": "3743", "d": "7/2017"}, {"title": "ajax test failure android", "body": "commit jquery periodic july commit jquery periodic july possibly relevant commits timmywil", "num": "3742", "d": "7/2017"}, {"title": "jquery ajax work async false", "body": "description updated jquery stopped working properly ajax parameter async false solve problem", "num": "3740", "d": "7/2017"}, {"title": "type chinese ca nt get right result", "body": "use google browser chinese ca nt get right result", "num": "3739", "d": "7/2017"}, {"title": "calling css undefined results unfriendly error", "body": "description calling parameter throws following error unable get property replace undefined null reference would expect silent noop case component passed optional property css icon would helpful could pass value directly jquery handle situation property nt specified nt believe behavior would interfere uses method sounds like design goal invocation instead throw error explains provided argument invalid link test case", "num": "3737", "d": "7/2017"}, {"title": "add unit test getscript signature accepts options object", "body": "description unit test needed getscript options signature see pr jquery added signature passing options object getscript signature documented unit signature blessing allows easy way cancel anticache like link test case", "num": "3736", "d": "7/2017"}, {"title": "accessing input element value field via val unintuitive", "body": "description long established convention accessing input fields value done using named attribute called value jquery trying reinvent wheel function call val unintuitive requires first time user function look manual see happened value attribute jquery great additionally stackoverflow seems trying solve problems exist first place please make value attribute accessible thank link test case applicable", "num": "3734", "d": "7/2017"}, {"title": "regression event tests failing chrome", "body": "last remaining test failure jquery core testswarm affects chrome higher seemed pass chrome time since updated ci test chrome chrome fail traced testswarm job problem test suite consistently times chrome around test event preventdefault focusin throw exception passes consistently chrome browserstack api testswarm pass try manually browserstack live well try locally machine fails chrome browserstack api chrome browserstack api passes chrome windows browserstack live chrome windows browserstack live chrome windows browserstack live chrome mac os x", "num": "3732", "d": "7/2017"}, {"title": "regression dimensions tests broken ie ie", "body": "test failures ie ie module traced issue testswarm job seems commit fixed test failures ie return broke tests ie ie", "num": "3731", "d": "7/2017"}, {"title": "regression support tests broken", "body": "test failures module affected browsers traced testswarm job ie safari", "num": "3730", "d": "7/2017"}, {"title": "fnscrolltop question", "body": "description firefox body scrolltop work link test case elemtagname body elem window var win getwindow elem nt know whether reasonable", "num": "3728", "d": "7/2017"}, {"title": "phantomjs failure", "body": "investigating multiple failures jquery migrate unit tests phantomjs even simple test like throws error bisected line corejs unfortunately returns nodelist looks like function nt property fails test nt wanthave support phantomjs jquery think need fix", "num": "3726", "d": "7/2017"}, {"title": "feature request delay blur", "body": "tried following work inputval blur also work blur moved separate line work blur wrapped settimeout would useful parameter delaying execution blur command certain number milliseconds could implemented might even better delay builtin default ability change delay via parameter", "num": "3721", "d": "7/2017"}, {"title": "include directory npm package", "body": "npm package uses directory directory could excluded npm build adding reduce package size installation", "num": "3719", "d": "7/2017"}, {"title": "amd require jquery module name failed", "body": "description project use module lib process dom ajax zepto jquery always want change lib module dynamic use jquery features lib jquery else keep small use zepto code javascript require config requireconfig paths lib zepto jquery use require lib function consolelog undefined search jquery src found code srcexportsamdjs moved module name jquery works remove module name flexible use", "num": "3718", "d": "7/2017"}, {"title": "jquery determines whether element scroll bars", "body": "jquery determines whether element scroll bars", "num": "3716", "d": "7/2017"}, {"title": "test", "body": "description link test case", "num": "3715", "d": "7/2017"}, {"title": "nuget feed updated", "body": "description jquery nuget versions date updated since september last year link test case", "num": "3714", "d": "7/2017"}, {"title": "css switch setproperty detect important strings", "body": "expect happen calling correct css added element actually happens jquery silently ignores css value tested performing following using jquery see issue around whether added jquery another matter debate think regardless parser return error least information failed parse css passed wasted half hour project trying figure css nt added dynamically created element nt stop think jquery might ignoring part", "num": "3713", "d": "7/2017"}, {"title": "ajax disable parsing", "body": "want parse result ajax manually need responsetext use done callback get data already parsed first parameter see options disable misunderstand something cr", "num": "3712", "d": "7/2017"}, {"title": "ie bug jquery resizable nt work element iframe sibling", "body": "description resizable method nt work amp edge resizable element iframe next example resize element right horizontally towards iframe resize handle drops visually soon cursor enters iframe region however resize left resize handle surfaces back link test case", "num": "3711", "d": "7/2017"}, {"title": "fatal bug initial ref transaction called existing refs git clone", "body": "git clone receive error git clone cloning jquery remote counting objects done remote compressing objects done remote total delta reused delta packreused receiving objects mib kibs done resolving deltas done fatal bug initial ref transaction called existing refs unlink file failed try yn git version", "num": "3709", "d": "7/2017"}, {"title": "commitplease error message", "body": "description invoke following nodejs npm default included version see message printed red fresh clone git hooks present running message suggests cc link test case embedded description", "num": "3708", "d": "7/2017"}, {"body": "looks like dupe single ajax failures tests timeout", "d": "7/2017"}, {"body": "mgol report assertion failure test failure ajax test suite happening android android presumably well see screenshot difference beforeafter time outs tests android preexisting issue since one week earlier filed separately", "d": "7/2017"}, {"body": "ah misread", "d": "7/2017"}, {"body": "read issue template asked test case short report nothing", "d": "7/2017"}, {"body": "result", "d": "7/2017"}, {"body": "ajax call asynchronous example invocation handler attached via always asynchronous see information particular another behavior change required promisesa compliance deferred callbacks always called asynchronously previously callback added deferred already resolved rejected callback would run immediately synchronously", "d": "7/2017"}, {"body": "would help improvement code", "d": "7/2017"}, {"body": "synchronous ajax generally bad idea quick fix would switch", "d": "7/2017"}, {"body": "thanks works", "d": "7/2017"}, {"body": "invoking global context overwriting always casted string avoid writing code global context avoid", "d": "7/2017"}, {"body": "see thank much", "d": "7/2017"}, {"body": "going opposite direction recently guard undefined input let fail may mask errors sometimes better error avoid bug case simple fix wrap declaration statement", "d": "7/2017"}, {"body": "reasonable design choice error expected behavior made explicit detecting case throwing error mentions invalid arguments", "d": "7/2017"}, {"body": "wasabifan practical infinite number invalid arguments api documentation makes clear valid nt please make pr clarify jquery size would extremely large code inside check every possible bad argument interested catching earlier development process look using typescript definitelytyped definitions jquery api", "d": "7/2017"}, {"body": "practical infinite number invalid arguments api documentation makes clear valid nt please make pr clarify docs explain behavior easily fixable however explain check already implemented pass function returns properties map note nothing returned setter function ie function index style undefined returned current value changed useful selectively setting values certain criteria met adding check noop undefined parameter would make behavior consistent existing logic would nt grow size interested catching earlier development process look using typescript definitelytyped definitions jquery api currently working typescript unfortunately typescript nt help cases one discussed pass", "d": "7/2017"}, {"body": "unfortunately typescript nt help cases one discussed pass work strict null checks mode good setting enable nt checked definitelytyped jquery definitions compatible though", "d": "7/2017"}, {"body": "haha although agree strict null checks good way go cause problems pretty large codebase unfortunate amount legacy code laughing", "d": "7/2017"}, {"body": "function signature tbh fan imo mostly complicate api case even cause layout thrashing design removing would big breaking change someone uses api migrating away special handling would harder nonfunction argument comes changing use direct equivalent", "d": "7/2017"}, {"body": "thanks report", "d": "7/2017"}, {"body": "jquery nt use getter properties places consistent rest jquery api people using jquery knows changing would create unnecessary churn also insteaf instead etc sorry something going", "d": "7/2017"}, {"body": "sscholle even sure asking ask test case even pseudocode explaining expect work links stackoverflow issues would make sense something like would setting property jquery collection assume asking nt like easily get attribute via would", "d": "7/2017"}, {"body": "would even used running suite weird", "d": "7/2017"}, {"body": "likely unrelated remember correctly noticed tests failing changed chrome testswarm job started restarted one older job chrome amp ensure fine one passed one failed seems memory nt fail chrome changed something test breaks used work even chrome time likely something changed browserstack side", "d": "7/2017"}, {"body": "sorry noise cisensitive issues always hardest fix however finally back passing anyone would like perform posthoc review comprehensive view changes also one ignoring whitespace", "d": "7/2017"}, {"body": "noted fixed crossedfingers", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "calling good failures chrome focus issues", "d": "7/2017"}, {"body": "expected read information", "d": "7/2017"}, {"body": "never officially supported phantomjs version think fine start testing helps", "d": "7/2017"}, {"body": "yeah nt really want support phantomjs jquery core nt want redo whole unit test code coverage setup migrate either would patch around keep things going nt exposed anymore called within also well protected let see take get migrate working phantomjs maybe bad", "d": "7/2017"}, {"body": "upgrading phantomjs simple famous last words know", "d": "7/2017"}, {"body": "upgraded jquery migrate phantomjs ca nt get work windows travis seems dig one failure looking", "d": "7/2017"}, {"body": "think good would good release notesblog remind people nt support phantomjs next release since break ca nt easily fixed outside", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "template issue requested would like see test case also clearer description work although might totally clear test case", "d": "7/2017"}, {"body": "tried repeating fiddle reproduce occurring code closing issue", "d": "7/2017"}, {"body": "directory amd modules published", "d": "7/2017"}, {"body": "thanks opening issue things want directory included prefer include individual modules publish npm repo build scripts push relevant files jquerydist repo publish npm", "d": "7/2017"}, {"body": "comment file points", "d": "7/2017"}, {"body": "thanks opening issue question better suited stackoverflow able find need requirejsorg", "d": "7/2017"}, {"body": "dmethvin timmywil thanks fault nt pay attention comments search google stackoverflow", "d": "7/2017"}, {"body": "godtail need map option", "d": "7/2017"}, {"body": "please look programming help stack overflow jquery forums gitter", "d": "7/2017"}, {"body": "please nt submit fake issues", "d": "7/2017"}, {"body": "nt parser provided jquery sending full string browser docs already say note css ignores important declarations statement p css color red important turn color paragraphs page red strongly advised use classes instead otherwise use jquery plugin", "d": "7/2017"}, {"body": "rtfm thanks plans using setproperty setting styles fairly trivial add priority case looks like used custom props anything else", "d": "7/2017"}, {"body": "question better answered stackoverflow see property post followup questions", "d": "7/2017"}, {"body": "think mean datatype text obvious since json always text json text written javascript object notation", "d": "7/2017"}, {"body": "seems jquery ui bug tracker imo post issue bugtracker", "d": "7/2017"}, {"body": "thanks johanns pointing right forum created one", "d": "7/2017"}, {"body": "happen every clone attempt remove directory", "d": "7/2017"}, {"body": "thanks report compared results call node node returns different values important uses find configure install commitplease let think bit", "d": "7/2017"}, {"body": "ok taken look reliable way know find path project trying install rely fact inject path ending one could find path suffix chop use prefix get anyone know less hacky approach", "d": "7/2017"}, {"body": "nt work", "d": "7/2017"}, {"body": "gives need need project installing case contains settings like install hook projectspecific", "d": "7/2017"}, {"body": "bad", "d": "7/2017"}, {"body": "reason specifying download github version code look inside old one test however test inside directory worked", "d": "7/2017"}, {"body": "correction installation works actual message linting looking", "d": "7/2017"}, {"body": "nice sarcasm changed empty contain path commit message important commitplease used distinguish run hook go fetch run global script use js lib checks sorry new way distinguish global hook needed ideas right cc jzaefferer update triggered hook contains path message file sentences mistake", "d": "7/2017"}, {"body": "nt think anything jquery let know case", "d": "7/2017"}, {"body": "problem fixed merged yet jzaefferer please let know think pr merge release", "d": "7/2017"}, {"body": "moved sizzle issue", "d": "7/2017"}, {"body": "fixed ie fix subsequently broke ie", "d": "7/2017"}, {"body": "problem seems hinge phantom borders ie investigate reason", "d": "7/2017"}, {"body": "jacobq thanks problem confirm problem windows ff amp chrome jquery versions", "d": "7/2017"}, {"body": "even weirder version problem chrome seems dependant url structure datatables plugin clone npm install make sure jquery noted packagejson open chrome make copy open chrome works wo nt make even weirder move sub folder render correctly", "d": "7/2017"}, {"body": "smasala fun tried exercise shared saw differences perhaps platform differences running linux node chrome official build maybe nt sure look nevertheless would strongly encourage simplify portion code analyzing lots parts work becomes easy become mislead eg accidental caching race conditions dependence inputs user behavior etc make one believe problem caused something root cause number nuances one deal regarding browser behave differently urls based description suspect problem seeing different ones described issue may even related using older version solves problem application would recommend release ready since likely best use time", "d": "7/2017"}, {"body": "jacobq would seen error nt worked looking solution plugin thought post random findings however found narrowed problem one line jquery set updating jquery latest version gt unable replicate issue jsfiddle similar good links examples going crazy tried another machine windows instead chrome works fine odd perhaps something wrong ssd machine try win setup curiosity sanity check", "d": "7/2017"}, {"body": "jacobq fyi works win chrome systems fine however reproduced machine every time without fail works produces exact problem described problem also case chrome give", "d": "7/2017"}, {"body": "everything fixed except problem", "d": "7/2017"}, {"body": "confirmed fixed dimensions tests android exception android consistently failing timing jquery test suites including dimensions likely unrelated likely something setup code either jquery testrunner throwing file separate issue", "d": "7/2017"}, {"body": "one worked take stab", "d": "7/2017"}, {"body": "anyone would like submit pr please feel free contributing guidelines answer questions might contributing jquery specifically suggest look commits pr guidelines js style guide", "d": "7/2017"}, {"body": "working", "d": "7/2017"}, {"body": "regarding incompatibility testswarm independently outside gruntjenkins run context travis ci local development use variable already exists jquery core unit tests make decisions need vary eg change url paths slightly case nt want suffix nodejs version endpoints likely though tell nt need urls could easily implement urls ways ajax tests already written expectation served http eg static server work served ajax tests already skipped tests make requests php files using relative urls configure nodejs server similarly serve files statically nonstatic router higher precedence ajax server mocks eg route javascript based handler vary according script name query parameters accordingly fixed run unit tests normally qunitkarmagrunt eg defaulting headless chrome run travis ci least headless chrome firefox preinstalled addition pass eg headless chrome go run various browsers using saucelabs browserstack various jquery projects already happen whilst tests continue work testswarm well desired", "d": "7/2017"}]