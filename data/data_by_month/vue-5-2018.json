[{"title": "render issue transitiongroup child component loads asynchronously", "body": "version reproduction link steps reproduce nt time create minim repro moment feel free close report feel user error known issue pseudocode parent custom component components subsubcomponent gt new promise resolve gt settimeout gt resolve import subsubcomponentvue adding artificial loading delay make issue reproducible settimeout happens sporadically depending load times remove rendering never fails error message found srccomponentsccoachlistvue srccomponentspagesccoachdirectoryvue expected transitiongroup loads components become available actually happening components take long load first item group displays correctly others fail", "num": "8284", "d": "5/2018"}, {"title": "component data support promise", "body": "problem feature solve want component data access promise show promise auto update view promise resolved proposed api look like", "num": "8283", "d": "5/2018"}, {"title": "hot reload problem use keepalive wrap routerview dynamic key", "body": "version reproduction link steps reproduce code script tag hello component routerview component disappear page find component activated devtools expected hot reload normally actually happening refresh page manually time modify code", "num": "8282", "d": "5/2018"}, {"title": "component name allow first char uppercase", "body": "version reproduction link steps reproduce special steps change componet name mytest mytest make work otherwise componet nt get rendered expected component content \u81ea\u5b9a\u4e49\u7ec4\u4ef6 surrended actually happening componet actually change componet name mytest mytest componet got rendered properly new vue quite sure bug vue component standard", "num": "8280", "d": "5/2018"}, {"title": "transition behavior different uncalled done provided hook method", "body": "version reproduction link steps reproduce demo link click toggle show hide element expected two boxes configured differs enter leave hook one called one called leave el done function thing done callback called expected two boxes enter leave way actually happening box hooked transition properly box hooked leave transition resubmit messed demo one properly demo case", "num": "8279", "d": "5/2018"}, {"title": "make vue available libraries without import", "body": "title needs work idk call problem feature solve writing component library typescript requires importing vue use get typings causes problems webpack decides load different instance vue see proposed api look like local registration accept function synchronously returns component calling parent vue instance library used like js import mycomponent somelibrary export default components mycomponent course would cause problems particularly use methods directly components maybe something adds types like nt runtime behaviour would better instead", "num": "8278", "d": "5/2018"}, {"title": "vuejs site running development mode", "body": "version reproduction link steps reproduce enter browser address bar check console browser development tools expected vuejs site running production mode actually happening vuejs running development mode supposed run development mode", "num": "8277", "d": "5/2018"}, {"title": "trouble vifvelseif", "body": "version reproduction link steps reproduce velseif velse expected \u6b63\u5e38\u663e\u793a actually happening velseif velse", "num": "8276", "d": "5/2018"}, {"title": "transition behavior different uncalled done provided hook method", "body": "version reproduction link steps reproduce demo link click toggle show hide element expected two boxes configured different hook one called one called function thing callback called expected two boxes enter leave way actually happening box hooked hook leave transition", "num": "8275", "d": "5/2018"}, {"title": "nt work global functions event handlers", "body": "example caught error vmalert function", "num": "8274", "d": "5/2018"}, {"title": "el\u5c5e\u6027\u4f7f\u7528class\u9009\u62e9\u5668\u65e0\u6548", "body": "version reproduction link steps reproduce class expected vmodel\u8fdb\u884c\u53cc\u5411\u7ed1\u5b9a\u7684\u6570\u636e\u5e94\u8be5\u5728\u4e24\u4e2adiv\u91cc\u90fd\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528 actually happening \u5b9e\u9645\u4e0a\u53ea\u6709\u7b2c\u4e00\u4e2adiv\u662f\u6709\u6548\u7684 \u8bf7\u53c2\u8003\u91cd\u73b0\u94fe\u63a5", "num": "8273", "d": "5/2018"}, {"title": "set object reactive", "body": "version reproduction link steps reproduce attach object attribute component modify using set methods add delete etc expected changes set would reflect rendered html like arrays actually happening nothing change set nt picked vue making property reactive unusual mutations array works expected see link additional notes shows change set seems detected unless reactive system vue works different understanding view updates set converted array", "num": "8272", "d": "5/2018"}, {"title": "model implementation", "body": "problem feature solve hi everybody would like submit idea order continue make vuejs awesome tool back end world started project vuejs months ago discover javascript ecosystem first realy enthusiastic vue features found something missing way declare modelentity represent data object nt know thinking feature think could good option add library like router even cli guide vue developers data manipulations way promote best practices field thank consider proposition proposed api look like proposition integrate library bring mvc v vue course without dealing persistence least guide developers deal implementation data attribute vue component could composed multiple models instance component data object nt", "num": "8271", "d": "5/2018"}, {"title": "failed compile", "body": "version reproduction link steps reproduce npm run dev expected compiled project actually happening error failed compile errors error resourcesassetsjscomponentshomevue syntax error unexpected token expected return newposttitle newpostdesc vuecomponent home require componentshomevue created resourcesassetsjscomponentshomevue resourcesassetsjsappjs multi resourcesassetsjsappjs resourcesassetssassappscss jsappjs mb emitted big jsapp cssappcss kb emitted jsapp jsapp error nodemodulesbabelloaderlib cachedirectory true presets env modules false targets browsers uglify true plugins transformobjectrestspread transformruntime polyfill false helpers false nodemodulesvueloaderlibselectorjs typescript amp resourcesassetsjscomponentshomevue module build failed syntaxerror unexpected token expected return newposttitle newpostdesc vuecomponent home require componentshomevue created resourcesassetsjscomponentshomevue resourcesassetsjsappjs multi resourcesassetsjsappjs resourcesassetssassappscss npm err code elifecycle npm err errno npm err development npm err exit status npm err npm err failed development script npm err probably problem npm likely additional logging output npm err code elifecycle npm err errno npm err dev npm err exit status npm err npm err failed dev script npm err probably problem npm likely additional logging output", "num": "8270", "d": "5/2018"}, {"title": "issue refs children element vfor refs arrays children", "body": "version reproduction link steps reproduce check console expected ref single dom node since ref element vfor actually happening creates ref single value array weird since never contain one single value wanted behaviour specified docs please though nt understand would wanted behaviour", "num": "8269", "d": "5/2018"}, {"title": "work chenges params change route", "body": "version reproduction link steps reproduce delete routeparamsid template expected works alerts click buttons actually happening nothing add routeparamsid template routes works delete string router work", "num": "8268", "d": "5/2018"}, {"title": "vue always rerenders child components passed default slot", "body": "version reproduction link steps reproduce open sample two simple components row cell iterate array render row array item row renders cells passed default slot let add new item initial array click add button see browser console cell rerendered adding new one time similar react sample renders new cells without rerendering old ones expected new child components rendered actually happening children rerendered", "num": "8267", "d": "5/2018"}, {"title": "transition using js hooks always run initial render", "body": "version reproduction link steps reproduce demo link toggle checkbox odd expected rows appeared inner element transition using css fade transition using hooks slide initial render actually happening transition using css run initial render expected transition using hooks run initial render used nt nt know intended behavior would like know avoid initial render hooked transition", "num": "8266", "d": "5/2018"}, {"title": "ios \u6570\u7ec4\u4e0b\u6807\u91cd\u590d\u95ee\u9898", "body": "version reproduction link fromsinglemessage amp steps reproduce \u6682\u65f6\u8fd8\u6ca1\u603b\u7ed3\u51fa\u54ea\u79cd\u5199\u6cd5\u5b58\u5728\u95ee\u9898 \u662f\u5426\u5df2\u6709\u89e3\u51b3\u65b9\u6848 \u53ef\u4ee5\u4fbf\u6377\u5904\u7406\u7684\u65b9\u6848 expected \u6b63\u5e38\u663e\u793a actually happening \u6570\u636e\u91cd\u590d", "num": "8264", "d": "5/2018"}, {"title": "allow override props validation merging mixin", "body": "problem feature solve hi mixin specified component tried override however results error bug think would useful feature thanks case components take string value need override different text inputs take string value checkboxes truefalse proposed api look like keep api", "num": "8263", "d": "5/2018"}, {"title": "vbind nt work style", "body": "version reproduction link steps reproduce init vue expected div background image actually happening nt attribute disappeared", "num": "8262", "d": "5/2018"}, {"title": "vshow working functional component", "body": "version reproduction link steps reproduce simply put vshow false functional component expected component visible actually happening component still visible wrapping additional div workaround guess intended", "num": "8261", "d": "5/2018"}, {"title": "\u4e2d\u6587\u6587\u6863\u5728\u79fb\u52a8\u7aef\u548cpc\u7aef\u4e0d\u4e00\u81f4", "body": "version reproduction link steps reproduce pc\u7aef\u8bbf\u95ee \u4e8b\u4ef6\u5904\u7406 \u79fb\u52a8\u7aef\u8bbf\u95ee \u4e8b\u4ef6\u5904\u7406 expected pc\u7aef\u548c\u79fb\u52a8\u7aef\u8bbf\u95ee \u4e8b\u4ef6\u5904\u7406 actually happening", "num": "8260", "d": "5/2018"}, {"title": "emit native events", "body": "problem feature solve hi team maybe way let components emit caught native events case writing music player component want allow users component use modifier listen native media events component like know modifier listen native events root element component case apparently ca nt root component also common cases facing similar issue form field component providing inputnative internal file upload component providing progressnative know catch internal native events emit custom event like let user feel using directly intuitive proposed api look like possible forms another modifier lets modifier listens root element directive like maybe nonroot html element lets element emit native events outer listeners method vue instance", "num": "8259", "d": "5/2018"}, {"title": "errorcaptured hook", "body": "problem feature solve hook function used catch subcomponent errors instead catching errors source code follows proposed api look like design way", "num": "8258", "d": "5/2018"}, {"title": "errorcaptured hook", "body": "hook function used catch subcomponent errors instead catching errors source code follows design way", "num": "8257", "d": "5/2018"}, {"title": "generate errors summary find module pagesindexjs e xxx", "body": "version reproduction link steps reproduce tips english poor forgive following part english description translation reproduction step \u590d\u73b0\u6b65\u9aa4 step one \u7b2c\u4e00\u6b65 bash install dependencies yarn install npm install step two \u7b2c\u4e8c\u6b65 add following configuration step three \u7b2c\u4e09\u6b65 bash generate static project yarn generate npm run generate step four \u7b2c\u56db\u6b65 error follows bash generate errors summary route error find module pagesindexjs e gitrepoothervueserverrendererbugminirepo functionmoduleexports sync vueserverrendererbugminirepo resolve r vueserverrendererbugminirepo vueserverrenderer functionrequireensure e arraymap arraymap flatmapcomponents resolveroutecomponents getroutedata setcontext createapp moduleexportswebpackexportsdefault vueserverrendererbugminirepo vueserverrenderer bug tracking bug \u8ffd\u6eaf configuration generate related configuration follows \u7684\u4e0a\u8ff0\u914d\u7f6e\u4f1a\u751f\u6210\u76f8\u5173\u7684 locating problem modified solve problem nt know judgment changed affect places expected compile successfully error actually happening error find module pagesindexjs e gitrepoothervueserverrendererbugminirepo use nuxtjs", "num": "8256", "d": "5/2018"}, {"title": "slove problem", "body": "parser file path given could nt infer parser npm run dev build fail", "num": "8255", "d": "5/2018"}, {"title": "using props initial data child data update prop modified parent", "body": "version reproduction link steps reproduce open fiddle click update button expected child component set value prop documented child component render message hello world actually happening prop passed child component correctly updated child component renders message ran issue fetching data api update parent component data parent data passed child prop used initial value changed within child component passing data right away eg using api works properly displaying prop child directly using child components issue occurs using prop initial value child data updating prop parent child mounted", "num": "8254", "d": "5/2018"}, {"title": "server side render maximum call stack size exceeded vue", "body": "version reproduction link steps reproduce vue elementui nuxt found related call stack size restored vue still prudence issue could produced examples demos jsfiddle product days production servers restart new issuegenerator pls undenstand expected work regular actually happening work os browser ubuntu compatible msie windows nt net clr net clr net clr media center pc tablet pc", "num": "8253", "d": "5/2018"}, {"title": "life cycle invoked component destroyed", "body": "version reproduction link steps reproduce open console click todo item see expected printed life cycle invoked component destroyed actually happening life cycle invoked component destroyed", "num": "8252", "d": "5/2018"}, {"title": "suggestion template render support dom document object", "body": "problem feature solve rendering could support dom document object could eliminate html inside code similar extjs according following example proposed api look like", "num": "8251", "d": "5/2018"}, {"title": "allow component register subcomponents", "body": "problem feature solve developing component library encounter need register subcomponents example component needs register subcomponents vue often necessary register full component js import list listitem listitembrief components vuecomponent listname list vuecomponent listitemname listitem vuecomponent listitembriefname listitembrief list listitem listitembrief react js import list components list listitem listitembrief seems vue approach bit complicated think possible consider supporting components register subcomponents proposed api look like js listvue import listitem listitemvue export default name list subcomponents item listitem js listitemvue import listitembrief listitembriefvue export default name listitem subcomponents brief listitembrief js mainjs import list components vuecomponent listname list appvue import list components export default name app components listname list register", "num": "8249", "d": "5/2018"}, {"title": "vue ssr hydration error nested", "body": "version reproduction link steps reproduce forked added two elements appvue one text inside nested npm install npm run dev javascript enabled see error occurs browser console hydration element nested text nt throw error expected hydration process makes exception children elements assuming nothing done serverside rendering children tags since appears common browser issue actually happening hydration bails early serverside renders children string clientside renders children html element error occurs function vueruntime since undefined due fact string also issue disable javascript text image render fine thoughts ideas much appreciated thanks time", "num": "8247", "d": "5/2018"}, {"title": "issue submission form changing issue type deletes content", "body": "version reproduction link steps reproduce fill form page change type bug report feature request expected content fields persists actually happening content fields deleted another small issue really user friendly since directing new users take time submit issues", "num": "8246", "d": "5/2018"}, {"title": "issue submission form preview open links new tab", "body": "version reproduction link steps reproduce fill form page click preview button click link inside preview window expected link opens new tab actually happening link opens current tab without submitting issue going back browser results empty form sadly discovered hard way trying submit first issue", "num": "8245", "d": "5/2018"}, {"title": "add note camelcasing documentation", "body": "problem feature solve problem documentation custom events event names states recommend always use kebabcase event names modifier must emit event propertyname camelcased kebabcase wo nt work always like always unless emit event proposed api look like add note custom events event names also documentation custom events sync modifier would change example use property multiple word name single word nt help problem andor add note event name incosistency previous recommendation page always use kebab case", "num": "8244", "d": "5/2018"}, {"title": "style bug animationduration\u5c5e\u6027\u5728\u9700\u8981\u6dfb\u52a0webkit\u524d\u7f00\u73af\u5883\u4e2d\u88ab\u6e32\u67d3\u6210\u4e86webkitanimation", "body": "version reproduction link steps reproduce \u8fd0\u884c\u5728 expected \u6e32\u67d3\u7ed3\u679c\u4e3a actually happening \u6e32\u67d3\u7ed3\u679c\u4e3a", "num": "8243", "d": "5/2018"}, {"title": "", "body": "version reproduction link steps reproduce expected \u56fe\u7247\u80fd\u591f\u5728\u66ff\u6362\u6389\u5730\u5740\u540e\u5237\u65b0\u51fa\u6765\u800c\u4e0d\u662f\u5237\u65b0\u9875\u9762\u624d\u5c55\u793a actually happening \u56fe\u7247\u5237\u65b0\u4e0d\u51fa\u6765", "num": "8242", "d": "5/2018"}, {"title": "vuessrserverplugin produces slowtoparse json large projects", "body": "problem feature solve makes better development experience vue ssr looking takes render singlecomponent page server fairly large application found interesting issue webpack creates bundles us altogether weigh way plugin works know combines files single file reading file node fast average us reading need providing takes initially thinking using webpack reduce filesize router dynamically imports toplevel pages chunk could benefit bring common component support throws serverside bundle one single entry file error proposed api look like exactly sure point noticed issue concerned app grows json parse time increase adding seconds loadtime development", "num": "8241", "d": "5/2018"}, {"title": "reordering elements array", "body": "version reproduction link steps reproduce fiddle started console log show proper order elements array clicking button change places two elements console log new array items nt move view stay despite array elements changed places expected elements need change places view actually happening elements stay place view", "num": "8239", "d": "5/2018"}, {"title": "vue reactivity engine mobx", "body": "hey vue cool react land mobx takes similar approach defining getterssetters architectural nature vue apps much closer reactmobx typical react architecture mobx used trusted big companies aware knowledge sharing idea sharing projects think would really cool explore possibilities collaborate areas collaboration could cool standardized benchmarks optimization tips things worked nt good user experience things like circular references code shared libraries extracted discuss transition getterssetters proxies discuss hard language pov provide feedback explicitly suggesting anything concrete get discussion started got idea started participating sinonjs someone jest reached us order use shared code component think want point also perfectly acceptable response full disclosure part mobx team mobx written brainchild mweststrate also probably quite terrible vue possible michel reached past vice versa discussion simply nt public", "num": "8238", "d": "5/2018"}, {"title": "vue nt call watcher change prop beforedestroy", "body": "version reproduction link steps reproduce open reproduction link open console click button toggle testcomponent create testcomponent try change something input see testinfo watcher console means testinfo watcher called click button toggle testcomponent destroy testcomponent beforedestroy hook change testinfo property see beforedestroy console instead beforedestroy testinfo watcher expected expect watcher testinfo property called change beforedestory hook actually happening change testinfo property beforedestroy hook watcher nt called", "num": "8237", "d": "5/2018"}, {"title": "vmodel defaultwrong option get selected ajaxoption render", "body": "version reproduction link steps reproduce see example testselectvue expected select render option value vmodel selected actually happening first option select active workaround", "num": "8236", "d": "5/2018"}, {"title": "vtext\u4e2d\u7ed1\u5b9a\u7684\u591a\u4e2a\u8fde\u7eed\u7a7a\u683c\u65e0\u6cd5\u6b63\u5e38\u663e\u793a", "body": "version reproduction link steps reproduce indentedvue\u9875\u9762\u4e2d\u7684\u5c5e\u6027\u6587\u672c\u5185\u5bb9\u6709\u591a\u4e2a\u7a7a\u683c expected \u8fde\u7eed\u7684\u7a7a\u683c\u663e\u793a\u591a\u4e2a actually happening \u8fde\u7eed\u7684\u53ea\u663e\u793a\u4e86\u4e00\u4e2a", "num": "8235", "d": "5/2018"}, {"title": "vue style bug", "body": "version reproduction link steps reproduce look codepen html expected \u6e32\u67d3\u7ed3\u679c actually happening \u6e32\u67d3\u7ed3\u679c", "num": "8234", "d": "5/2018"}, {"title": "ca nt define prop functional component", "body": "version reproduction link steps reproduce change prop component expected works well like actually happening work key point could u plz add feature render amp", "num": "8232", "d": "5/2018"}, {"title": "vmodel mobile updating space pressed", "body": "version reproduction link steps reproduce type inputtextarea android nt ios test expected input data updated per keypress actually happening input data updated space pressed reproduced android chrome android firefox", "num": "8231", "d": "5/2018"}, {"title": "vmodel support functional components", "body": "version reproduction link steps reproduce set two inputs vmodel one directly another using functional component wrapper expected binding behaviour inputs actually happening standard input works functional component input nt get bind value get binded input event unexpected behaviout reason would wrap input functional component customize look expecting vue still apply vmodel workarounds around", "num": "8230", "d": "5/2018"}, {"title": "error render referenceerror sp undefined", "body": "version reproduction link steps reproduce expected \u6ca1\u6709\u8fd0\u884c\u65f6\u9519\u8bef actually happening \u51fa\u73b0\u8fd0\u884c\u65f6\u9519\u8bef", "num": "8228", "d": "5/2018"}, {"title": "css modules get overridden global styles", "body": "version reproduction link steps reproduce note sandbox behaving diffeerently actual code import bootstrapscssbootstrapscss appvue add set define listgroupitem set expected expected overriding bootstrap styling actually happening global bootstrap styling loaded css module due css specificity order loading wins bootstrap overriding css modules bahavior ok switch", "num": "8227", "d": "5/2018"}, {"title": "consolewarn vue already defined window", "body": "problem feature solve went referencing vue unpkg html using webpack forgot remove went bit crazy vueset nt anything think warning would really help problem people making mistake migrating webpack proposed api look like nt think api would change", "num": "8226", "d": "5/2018"}, {"title": "vue refs works differently template vs render function", "body": "version reproduction link steps reproduce create ref within template render function template returns array render function returns latest item loop expected render functions return array refs actually happening course makes sense render function returns last ref js vue nt return array template", "num": "8225", "d": "5/2018"}, {"title": "error render referenceerror sp undefined", "body": "vuejs version reproduction link codepen steps reproduce please open link inspect console panel expected actually happening information works well latest chrome firefox edge generated code snippets normal wrong", "num": "8224", "d": "5/2018"}, {"title": "render component vbind property disappear", "body": "version reproduction link steps reproduce see age column see difference template template age myage expected show vbind property actually happening span disappear add vbind property", "num": "8223", "d": "5/2018"}, {"title": "trim modifier every vmodel value input like fields form", "body": "problem feature solve team working project using nuxt production one thing missed trim input value know modifier trim works vmodel app used vmodel special cases value attribute input tag proposed api look like many input fields various pages thought would cool option vmodel automatically trim input value bydefault instead adding trim everywhere manually also modifier trim value attribute", "num": "8222", "d": "5/2018"}, {"title": "", "body": "version reproduction link steps reproduce updatephoto apitemplateupdatephoto thischangephoto res gt consolelog update consolelog nexttick function thisphotosplice thistailoringnum thisuserphoto locationreload else thisuploadphoto expected \u5237\u65b0\u9875\u9762\u624d\u80fd\u663e\u793a\u51fa\u6765 actually happening \u89c6\u56fe\u6ca1\u6709\u5237\u65b0\u8981\u624b\u52a8\u5237\u65b0\u624d\u80fd\u5c55\u793a\u51fa\u6765", "num": "8221", "d": "5/2018"}, {"title": "way tell images done rendering", "body": "", "num": "8220", "d": "5/2018"}, {"title": "", "body": "", "num": "8219", "d": "5/2018"}, {"title": "vuejsorg documentation", "body": "version reproduction link steps reproduce go link top google hit search vuejs custom filter expected two way filter guide working depricated labeled removeddepricatedreplaced link solution documentation actually happening two way filter guid working depricated labeled removeddepricatedreplaced link solution documentation two way filter guid working depricated labeled removeddepricatedreplaced link solution documentation", "num": "8218", "d": "5/2018"}, {"title": "automatically populate component name filename", "body": "problem feature solve sometimes vue component nt script properties except name consider instance component includes global components simple displayonly component case script looks like export default name componentname would helpful could removed entirely name extracted component filename would especially helpful beginners could create simple components section proposed api look like", "num": "8216", "d": "5/2018"}, {"title": "dom sync input changes vnode value match new current state", "body": "version reproduction link steps reproduce example input accepts numbers alphanumeric character introduced want reset input initial value default value set typing number letter things work expected value reset default value set typing character result dom sync expected dom always sync property value actually happening dom gets sync dom modification input value happens current vnode value diffing ignore node leave untouched believe due problem algorithm vnode diffing check vnode properties found odd issue nt raised since seems sort inline normalization values could potentially run cases maybe trivial workaround different pattern type cases", "num": "8215", "d": "5/2018"}, {"title": "vue props throw incomprehensible error passing variables starting symbols", "body": "version reproduction link steps reproduce open console see error javascript vue warn property method testmixintestdata defined instance referenced render make sure property reactive either data option classbased components initializing property see found srcappvue expected expected prop defined actually happening prop undefined variable contains symbols beginning completely sure bug intended since think bug opened issue yet intended error shown giving details took time understand error nt clear error message", "num": "8213", "d": "5/2018"}, {"title": "vue support template url", "body": "version reproduction link steps reproduce nt want use vue webpack web page size need smaller use need package components found vue support template must write view string use textxtemplate xtemplate divided view controller two scripts better solution expected like angular templateurl actually happening xtemplate becomes hard maintain components become", "num": "8211", "d": "5/2018"}, {"title": "functioncomponentoptions interface allow", "body": "problem feature solve allows developers use functional way declaring component utilizing config time already possible using pure javascript proposed api look like add missing part interface existing interface", "num": "8210", "d": "5/2018"}, {"title": "tabs keepalive memory leaks", "body": "version reproduction link steps reproduce link step repeated times memory checked memory leaks expected different levels routing jump clear value inside include level order achieve cache local function actually happening repeatedly memory usage continues increase feeling memory vue instance cleared component cleared click several times easy memory leak used method project effect greater click twice use memory tabs keepalive free cached memory", "num": "8209", "d": "5/2018"}, {"title": "indexvue template unpredictable html elements", "body": "problem feature solve hi using vuejs need create indexvue page product people number text box drop list fixed mean product props may tried add html element using vhtml seems wise way offered use components sounds little complicated confusing looking sample good example thanks advance proposed api look like tried add html element using vhtml seems wise way offered use components sounds little complicated confusing", "num": "8208", "d": "5/2018"}, {"title": "indexvue undefined elements", "body": "hi using vuejs need create indexvue page product people number text box drop list fixed mean product props may tried add html element using vhtml seems wise way offered use components sounds little complicated confusing looking sample good example thanks advance", "num": "8207", "d": "5/2018"}, {"title": "resolveasset function", "body": "", "num": "8206", "d": "5/2018"}, {"title": "allow block splitting singlefilecomponents organisationalreadability purposes", "body": "problem feature solve love vuejs vue sfcs occasionally end html template extremely large hard read talking components subparts tightly coupled breaking subcomponents obvious win could break anyway considerable amount work considering tight coupling either send lot state using props move state vuex even though prefer keep state local parent sfc nice solution would allow something akin template macrossplitting within vue see random syntax example proposed api look like javascript lines html lines html lines html one file templates use script style scope copypaste things around organise props imports basically like macros could ide extension would nt need vue code folding never really worked well", "num": "8205", "d": "5/2018"}, {"title": "feature request allow block splitting singlefilecomponents organisationalreadability purposes", "body": "love vuejs vue sfcs occasionally end html template extremely large hard read talking components subparts tightly coupled breaking subcomponents obvious win could break anyway considerable amount work considering tight coupling either send lot state using props move state vuex even though prefer keep state local parent sfc nice solution would allow something akin template macrossplitting within vue random syntax example javascript lines html lines html lines html one file templates use script style scope copypaste things around organise props imports basically like macros could ide extension would nt need vue code folding never really worked well thoughts appreciated keep amazing work", "num": "8204", "d": "5/2018"}, {"title": "\u5728ie \u5728table\u4e2d\u4f7f\u7528templete", "body": "", "num": "8203", "d": "5/2018"}, {"title": "lead data ca nt rendered real time vfor items empty array", "body": "version reproduction link steps reproduce lead data currentindex ca nt rendered real time items empty array maybe key itemid make error remove ok solve expected currentindex change real time iterate right way actually happening lead data currentindex ca nt rendered real time items empty array maybe key itemid make error remove ok solve", "num": "8202", "d": "5/2018"}, {"title": "lead data ca nt rendered real time vfor items empty array", "body": "lead data currentindex ca nt rendered real time items empty array maybe key itemid make error remove running ok solve", "num": "8201", "d": "5/2018"}, {"title": "reimplement async config option", "body": "problem feature solve vue test utils synchronous api walking watchers setting implementation buggy reimplementing async private config option would solve problem vue test utils proposed api look like add config option would used watchers created option removed commit happy make pr add", "num": "8200", "d": "5/2018"}, {"title": "read property pending null using transition component", "body": "version reproduction link steps reproduce open fiddle type anything first field marked broken see console error message error nexttick typeerror read property pending null notice vue stopped working refresh fiddle type anything second field marked working notice everything works expected expected value input field foo computed property evaluate true span display user changes value input field foo anything else computed property evaluate false b span rendered using vhtml display actually happening initially value input field foo computed property evaluated true span displaying user changes value input field foo anything else vue crashes error message displayed error nexttick typeerror read property pending null takes specific scenario error appear fiddle shown removing event listener vue works expected errors three changes made individually result vue working expected removing component surrounding span using instead using instead directives found via question stack overflow", "num": "8199", "d": "5/2018"}, {"title": "vue\u4e2d\u5f00\u53d1\u73af\u5883\u548c\u751f\u4ea7\u73af\u5883\u7684css\u524d\u7f00\u95ee\u9898", "body": "\u5728appvue\u6dfb\u52a0 app display flex \u4f7f\u7528npm run dev \u547d\u4ee4\u540e\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u67e5\u770b\u5230 app display webkitbox display msflexbox display flex \u4f7f\u7528npm run build\u540e \u8f93\u51fa\u5982\u4e0b app display msflexbox display flex \u5728build\u540e\u4f1adisplay webkitbox \u8c22\u8c22", "num": "8197", "d": "5/2018"}, {"title": "additional lifecycle options watchers helps ssr", "body": "problem feature solve less code less bugs improving commonly faced issue proposed api look like background using ssr frequently use watchers loading data components however components nt need rendered serverside debugging harder way source becomes cluttered seo means ca nt use standard immediate true option already implemented watchers would initialize things server like created lifecycle hook proposal solve problem propose additional initialize option watcher api would work like immediate hook would allow us specify point lifecycle immediate behavior take place", "num": "8196", "d": "5/2018"}, {"title": "nodes listeners nt remove destroy vue components vif", "body": "version reproduction link steps reproduce create project vue cli change helloworldvue show msg msg msg msg msg msg msg msg msg export default name helloworld data return show false msg test open chrome dev tools gt performance monitor make fast clicks button showdestroy expected vue remove dom nodes actually happening number dom nodes increases vue remove real projects big problem within seconds get tens thousands domzombies", "num": "8195", "d": "5/2018"}, {"title": "jumping cursor issue contenteditable two way data binding using array objects", "body": "version reproduction link steps reproduce card panel list editable try typing change content using objects panel expected cursor jump start position content editable element two way data binding actually happening cursor jump start position element due rending element", "num": "8194", "d": "5/2018"}, {"title": "webassembly integration split core two parts", "body": "problem feature solve performance improvements proposed api look like split core two parts js keep already framework webassembly experiment syntax sugar walt compiled js core read closed issues topic saw like building completely new framework similar syntax definitely something core team interested bandwidth would nt discourage anyone interested try syntax sugar walt potentially make split muchmuch easier since still js things consider js webassembly called time start mixing parts serverside rendering worst aspect vuejs clientside serverside bundles ridiculous architecture honest used make lambda function optimization possible dependencies tree shaking creating bundles imported render function webpack unable trace parts dependencies nt needed therefore ssr development stage unfortunately poor condition ssr happening serverside nodejs run could totally compiled personally would start making progress incentive us start working moment therefore would great interested parties performance improvements community dedicate time", "num": "8193", "d": "5/2018"}, {"title": "typescript types nt allow multiroot functional components", "body": "version reproduction link steps reproduce npm run serve expected nt errors actually happening page runs works expected build shows type errors type definitions specify single vnode always returned functional componnts render functions fix trivial already fixed locally make pull request", "num": "8191", "d": "5/2018"}, {"title": "one way data flow problem", "body": "version reproduction link steps reproduce pass props component try recover follows expected variable undefined actually happening variable undefined works also works work expected sure", "num": "8190", "d": "5/2018"}, {"title": "one way data flow problem", "body": "works work expected sure", "num": "8189", "d": "5/2018"}, {"title": "need ifelse", "body": "", "num": "8188", "d": "5/2018"}, {"title": "merged class attributes preserved component created render function root node class binding", "body": "version reproduction link updated added directly compare expected vs actual results steps reproduce create component render content render function render child component static class attribute child component add class binding root element class binding applied example condition becomes true static classes passed parent component render function lost expected child component keeps static dynamic classes actually happening dynamic classes added vbind class kept root element looked issues reporting similar behaviors one likely related issue one differs case since components functional components updated actual issue see comment example fiddle simplified version showcase problem usecase parent component render different child component depending prop state parent acts proxy polymorphic component several different children", "num": "8187", "d": "5/2018"}, {"title": "docs vue cli typescript already", "body": "version reproduction link steps reproduce gt manually gt check typescript option expected nt docs missing something actually happening docs actually instead content guide use vue cli typescript", "num": "8186", "d": "5/2018"}, {"title": "icon css relative path error", "body": "path error use using alias", "num": "8185", "d": "5/2018"}, {"title": "deep object returned computed reactive", "body": "version reproduction link steps reproduce create component props computed property create deep object props values inside computed property use object template expected changes object reflected template actually happening changes computed property allways fully reactive", "num": "8183", "d": "5/2018"}, {"title": "vmodel nested gettersetter computed property backed vuex nt behave expected", "body": "version reproduction link steps reproduce type something firstname field see value output immediately right expected uses suggested pattern vuex vmodel see lastname field initial value object object nt expected type something lastname field see value immediately output right nt expected tab lastname field notice output right expected load inputs empty typing lastname behave way firstname immediate output side input event focus actually happening lastname input object object typing lastname nothing output focus basically wanting nest custom gettersetter properties toplevel computed property like nest forms fields computed property called form returns object property object defining gettersetter vuex store potentially flatten map method creates computed property gettersetter field like reason trying normalize vue plugin usage across component state vs vuex state also nesting means form property nestings recalculated every time field changes let know obviously performance consideration may drive flat style force figure document plugin usage", "num": "8182", "d": "5/2018"}, {"title": "export order bug", "body": "version reproduction link steps reproduce clone project npm install npm run serve expected render appvue template browsing localhost actually happening warning thrown vue warn unknown custom element problem occur change order exports srccomponentsindexjs page rendered expected feeling loose comparison going background", "num": "8181", "d": "5/2018"}, {"title": "\u52a8\u6001\u7ec4\u4ef6\u751f\u6210\u7684js\u5f15\u5165\u8def\u5f84\u6709\u95ee\u9898", "body": "version reproduction link steps reproduce vue\u5728webpack\u751f\u6210\u591a\u9875\u9762 \u6bd4\u5982indexhtml loginhtml productsproductdetailhtml \u5728productdetailhtml \u4f1a\u5b58\u5728 \u52a8\u6001\u4ea7\u751f\u7684js\u8def\u5f84\u95ee\u9898 expected \u5728productdetailhtml js\u8def\u5f84\u5f15\u5165\u6b63\u786e actually happening vue\u5728webpack\u751f\u6210\u591a\u9875\u9762 \u6bd4\u5982indexhtml loginhtml productsproductdetailhtml \u5728productdetailhtml \u4f1a\u5b58\u5728 \u52a8\u6001\u4ea7\u751f\u7684js\u8def\u5f84\u95ee\u9898", "num": "8180", "d": "5/2018"}, {"title": "\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ee5id\u540d\u7684\u5168\u5c40\u53d8\u91cf\u8bbf\u95ee\u5230\u8fd9\u4e2a\u5143\u7d20", "body": "version reproduction link steps reproduce \u5217\u5982\u5728appvue\u4e2d \u8bbf\u95ee\u5230\u8fd9\u4e2adiv\u5143\u7d20 \u4e0d\u77e5\u9053\u8fd9\u4e2a\u662fbug\u8fd8\u662f\u6545\u610f\u4e3a\u4e4b expected \u4e0d\u77e5\u9053\u8fd9\u4e2a\u662fbug\u8fd8\u662f\u6545\u610f\u4e3a\u4e4b actually happening \u7ed9\u8fc7id\u5c5e\u6027\u7684dom\u5143\u7d20 \u5168\u5c40\u90fd\u80fd\u8bbf\u95ee \u4e0d\u9700\u8981\u4efb\u4f55\u83b7\u53d6\u64cd\u4f5c", "num": "8178", "d": "5/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u6df1\u5165\u54cd\u5e94\u5f0f\u539f\u7406 \u4e00\u8282\u4e2d\u4ecb\u7ecd\u7684vue\u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u4e2d\u90a3\u4e00\u53e5 \u5f53\u4f60\u628a\u4e00\u4e2a\u666e\u901a\u7684 javascript \u5bf9\u8c61\u4f20\u7ed9 vue \u5b9e\u4f8b\u7684 data objectdefineproperty \u628a\u8fd9\u4e9b\u5c5e\u6027\u5168\u90e8\u8f6c\u4e3a vue objectdefineproperty gettersetter expected actually happening nothing everything works perfect vue", "num": "8176", "d": "5/2018"}, {"title": "disable slot warning duplicate presence", "body": "version reproduction link steps reproduce iterate slot expected want able use separator slot vfor iteration actually happening", "num": "8175", "d": "5/2018"}, {"title": "chrome sorting order array changes gets reactive", "body": "version reproduction link steps reproduce open sandbox chrome main code situated helloworldvue checkboxes sorted default order case size check checkbox checked checkbox appear top results sorted default order see default sorting interupted check checkbox additional information logged console expected make code work clone mode original sorting cloning used json stringify parsed json tested well methods object gets reactive getters setters added sorting order stay actually happening parsing object gets reactive sorting order array changes chrome browsers mozilla internet explorer edge works fine", "num": "8174", "d": "5/2018"}, {"title": "svg icons doublepainted latest firefox", "body": "version reproduction link steps reproduce issue apparent immediately expected svg icon actually happening svg icons seen firefox issue vue causes svg icon library uikit doublepaint icons", "num": "8172", "d": "5/2018"}, {"title": "scoped slots data ca nt passed custom directives", "body": "version reproduction link steps reproduce open link open browser dev tools see javascript error expected would expect use data parameters custom directives actually happening data custom directive", "num": "8171", "d": "5/2018"}, {"title": "vif\u4e2d\u7684\u4f7f\u7528key\u7ba1\u7406\u53ef\u590d\u7528\u5143\u7d20\u7684\u7591\u95ee", "body": "version reproduction link steps reproduce expected \u80fd\u590d\u7528 actually happening \u4e0d\u80fd\u590d\u7528", "num": "8170", "d": "5/2018"}, {"title": "\u6dfb\u52a0\u6837\u5f0f\u540ejs\u6548\u679c\u5931\u6548", "body": "version reproduction link steps reproduce imvuersrccomponentscitypickercitypickeritemvue\u8fd9\u4e2a\u6587\u4ef6\u91cc\u9762 \u53ef\u4ee5\u542f\u52a8\u8fd9\u4e2a\u9879\u76ee \u7136\u540e\u8fdb\u5165 expected \u6dfb\u52a0css\u6837\u5f0f\u540e\u4e0d\u5f71\u54cdjs\u903b\u8f91\u95ee\u9898 actually happening \u6dfb\u52a0css\u540ejs\u65e0\u6cd5\u89e6\u53d1\u4e8b\u4ef6", "num": "8169", "d": "5/2018"}, {"title": "usermade directive", "body": "binding delay", "num": "8168", "d": "5/2018"}, {"title": "ssr always add assets url even publicpath empty", "body": "version reproduction link steps reproduce need repro written code could empty resonable expected generates generates rather different actually happening generate could introduce extra judgement could use directly", "num": "8167", "d": "5/2018"}, {"title": "updating vnodecomponentoptionspropsdata nt trigger render", "body": "version reproduction link steps reproduce click one inactive tabs nt get rerender see parent component tabsjs stateactiveindex updated nothing happens children expected update render function called update component actually happening even though updated render function never called think regression appeared see example working looked release notes think commit one causing problem please let know something help thanks advance", "num": "8166", "d": "5/2018"}, {"title": "watcher hidden component triggered becoming visible", "body": "version reproduction link steps reproduce press change property press show component proptowatch watcher triggered expected watcher component notified changed property became visible actually happening component notified changed property invisible sure really bug intended behaviour understand invisible component active thus notified invisible feel component becomes visible informed changed properties especially differ initial default value empty string example", "num": "8165", "d": "5/2018"}, {"title": "vmcomputedwatchers available", "body": "problem feature solve ihave many variate watched computed property want get variate computed property time put variates array find vue instance vmcomputedwatchers get variate ca nt find vue official website want make sure property available proposed api look like computed quicktype return thisgetsearchvalue quick titleexpre return thisgetsearchvalue title", "num": "8164", "d": "5/2018"}, {"title": "vmcomputedwatchers available", "body": "ihave many variate watched computed property want get variate computed property time put variates array find vue instance vmcomputedwatchers get variate ca nt find vue official website want make sure thisproperty available", "num": "8163", "d": "5/2018"}, {"title": "vueruntimecommonjs vueserverrenderer nt find useragent undefined", "body": "use vue server render node module vue node module vue ssr run server problem tells find useragent undefined find code vueserverrender vueruntimecommonjs var ua inbrowser amp amp windownavigatoruseragenttolowercase nodejs windownavigator undefined window exists nt know", "num": "8162", "d": "5/2018"}, {"title": "prune keepalive cache logic code", "body": "problem feature solve use keepalive routerview request detail id different detail ids need remove notrecentlyused cache leave router beforerouterleave found related issues git nt solve problem way keepalive max props good need remove cache logic code proposed api look like vm prunecache cache", "num": "8161", "d": "5/2018"}, {"title": "ajax method fails firefox fetch works created section methods section", "body": "version solution add link problem user getting redirected method failed steps reproduce access link site fetch call created function works successfully verify accessing link scrolling bottom seeing value createdworks successfully added click link subpage disclaimer clicking link downloads pdf file get networkerror firefox request works chrome safari edge simplified code page removed nonessential functions link content export default created fetch methods count function event fetch expected fetch successfully makes get request actually happening networkerror firefox", "num": "8160", "d": "5/2018"}, {"title": "\u4e0d\u80fd\u8bbf\u95ee pc\u7248 \u4e2d\u6587vue\u5b98\u7f51", "body": "version reproduction link steps reproduce open url expected actually happening \u4e2d\u56fd\u4eba\u6ca1\u5730\u4f4d\u554a", "num": "8159", "d": "5/2018"}, {"title": "ie problem using directive uppercase input vmodel", "body": "version reproduction link steps reproduce using internet explorer type input anything ends letter eg asdas remove focus input expected input keeps new value typed actually happening input value goes back previous value working project input typetext values must uppercase created directive user types value would automatically uppercase letter works chrome way nt ie", "num": "8158", "d": "5/2018"}, {"title": "help neededfeature request custom key needed vue export default", "body": "important note nt want happen vue want know implement projects ca nt done right feature request customkey already happen please tell happy close problem feature solve keeping things short want duplicate stuff make something like proposed api look like exactly sure", "num": "8156", "d": "5/2018"}, {"title": "closed vuebot", "body": "edit issue exported deleted content duplication", "num": "8155", "d": "5/2018"}, {"title": "vuex\u9879\u76eewebpack\u6253\u5305\u95ee\u9898", "body": "vue\u9879\u76eewebpack\u6253\u5305\u4f1a\u81ea\u52a8\u5ffd\u7565", "num": "8154", "d": "5/2018"}, {"title": "vue\u9879\u76eewebpack\u6253\u5305\u4f1a\u81ea\u52a8\u5ffd\u7565", "body": "", "num": "8153", "d": "5/2018"}, {"title": "\u5982\u4f55\u7528vue \u5728for\u5faa\u73af\u4e2d \u52a8\u6001\u7ed9button\u6309\u94ae\u6dfb\u52a0 \u76f8\u5173\u5c5e\u6027", "body": "dname", "num": "8151", "d": "5/2018"}, {"title": "von click work ie", "body": "version reproduction link steps reproduce click something like using click auth modal displayed although working fine browsers work ie component use click work tried fix stuck anyone help please expected von click work well actually happening sure maybe ie supported", "num": "8150", "d": "5/2018"}, {"title": "von click work ie", "body": "click something like using click auth modal displayed although working fine browsers work ie component use click work tried fix stuck anyone help please", "num": "8149", "d": "5/2018"}, {"title": "textalign justify", "body": "justify position relative width height textalign justify justify num width lineheight display inlineblock textalign center background fff color borderradius solid cursor pointer transition easeinout justify content display inlineblock position relative top height lineheight width background zindex list var vm new vue el app data num", "num": "8148", "d": "5/2018"}, {"title": "unexpected behavior velse used vfor tag", "body": "version reproduction link steps reproduce nothing expected tab directive vfor one div actually happening tab three div due previous vfor", "num": "8147", "d": "5/2018"}, {"title": "ca nt use compiler strict mode", "body": "problem feature solve use compiler strict mode uses statement compile templates browser run time strict mode anybody solution proposed api look like change statements another solution", "num": "8145", "d": "5/2018"}, {"title": "vue cancels unmute updating dom", "body": "version reproduction link steps reproduce ensure browser tab unmuted audio audible click button several times observe effects toggle mute without dom update properly toggles mute every time toggle mute require two clicks unmute video expected toggle mute dom update actually happening requires two calls actually unmute video ran trying toggle mute icon based mute state tried vshow class dataattr changes problem", "num": "8144", "d": "5/2018"}, {"title": "support methods functional component template", "body": "problem feature solve way use functions functional template declare methods outside scope functionalcomponent definition access within render method snippet access use functional template snippet snippet function emit listeners eventname args const eventhandler listeners eventname typeof eventhandler function eventhandler args const comp functional true render h ctx return h attrs href click emit ctxlisteners open link export default comp snippet nt work function emit listeners eventname args const eventhandler listeners eventname typeof eventhandler function eventhandler args const comp functional true export default comp proposed api look like const comp functional true methods emit listeners eventname args const eventhandler listeners eventname typeof eventhandler function eventhandler args export default comp", "num": "8142", "d": "5/2018"}, {"title": "click", "body": "", "num": "8141", "d": "5/2018"}, {"title": "add ability access namespaced getters dot notation", "body": "problem feature solve working namespaced module eg users module access items user module state like however ca nt access getters way return error undefined instead access bracket notation true even though without modules access getters dot notation reason nt possible getters would nice could access namespaced getters way namespaced state current behavior seems inconsistent proposed api look like given namespaced module add ability access getters", "num": "8137", "d": "5/2018"}, {"title": "event delivery component inheritance", "body": "problem feature solve component inheritance important dealing large scale web app posted topic know web app solved presentation container pattern presentation components functional programming easier way container components prefer use traditional gui pattern component inheritance could easier via modern javascript especially creating large scale gui app mixin best way proposed api look like premise compatible existing api add events property vue instance", "num": "8136", "d": "5/2018"}, {"title": "development mode official vue page", "body": "version reproduction link steps reproduce open official vuejs page press ctrl shift open developer tools chrome look logs expected vuejs page production environment development mode disabled actually happening page development mode log states disabled production found bug playing around chrome development tool see certain vue elements behave clicking stuff way discovered issue nt crucial think noted", "num": "8135", "d": "5/2018"}, {"title": "use vuejs templating engine send emails", "body": "problem feature solve vuejs components show dashboard would like reuse components send email latest view dashboard serverpart using springboot moment forced duplicate vuejs components thymeleaf templates maintain components templates would possible achieve proposed api look like would like ask vue tool render one components giving data parameters either commandline tool better something compiled java tool languages libraries", "num": "8134", "d": "5/2018"}, {"title": "unreachable code return statement", "body": "version reproduction link steps reproduce none expected none actually happening firefox quantum debugger console unreachable code return statement", "num": "8133", "d": "5/2018"}, {"title": "vmslotsdefault unexpected undefined tag vnode", "body": "version reproduction link steps reproduce register vue component slot html component wrap named slot default content console show default slotsdefaut un expected undefined tag vnode expected slotsdefault div exist actually happening additional undefined tag vnode tag undefined data undefined children undefined text elm text asyncfactory undefinedasyncmeta undefinedchildren undefinedcomponentinstance undefinedcomponentoptions undefinedcontext undefineddata undefinedelm textfncontext undefinedfnoptions undefinedfnscopeid undefinedisasyncplaceholder falseiscloned falseiscomment falseisonce falseisrootinsert falseisstatic falsekey undefinedns undefinedparent undefinedraw falsetag undefinedtext child proto vnode tag div data children array text undefined elm divdefault rendered truelength array", "num": "8132", "d": "5/2018"}, {"title": "linuxmint\u4e0biview table\u663e\u793a\u5f02\u5e38", "body": "mint sylviagoogle chrome \u7248\u672c", "num": "8131", "d": "5/2018"}, {"title": "warn set used property already exist", "body": "version reproduction link steps reproduce see codepen snippet follow comment change vm data see happens expected even prop already exists using still makes reactive thus trigger view update actually happening using later nt update view related source code think users would expect make prop reactive whenever used initially opened issue api doc nt clear comment source code", "num": "8129", "d": "5/2018"}, {"title": "bottom navigation button ugly animation taking full height", "body": "version reproduction link steps reproduce create simple bottom navigation expected animations click take full height button actually happening animations nt take full height button seem cropped remove styling codepen see talking repaired setting fixed height button content probably better solutions problem ca nt really css", "num": "8127", "d": "5/2018"}, {"title": "refsinputfocus works pc nt work phone", "body": "code please try phone however works vue", "num": "8126", "d": "5/2018"}, {"title": "refsinputfocus", "body": "\u6309\u94ae new vue el app data show false methods showbtn thisshow thisshow thisshow nexttick gt refsinputfocus", "num": "8125", "d": "5/2018"}, {"title": "vueset wrong type inferred typescript", "body": "given typescript store state interface export interface office id number name string zip string city string address string phone string string export interface organization key string export interface team id number name string store action const setoffice state organizationstate item office gt vueset stateoffices itemid item matter vueset stateoffices itemid item typescript gives error argument type key string office assignable parameter type team property includes missing type key string office vueset stateoffices itemid item typings versions vueset one object one array case always inferres type array funny thing remove teams team works expected", "num": "8124", "d": "5/2018"}, {"title": "\u5728element\u5c5e\u6027\u4e2d\u7684\u8f6c\u4e49\u5b57\u7b26\u5728vue\u5355\u6587\u4ef6\u6a21\u677f\u4e2d\u6ca1\u6709\u751f\u6548", "body": "version reproduction link steps reproduce \u5728 vue\u5355\u6587\u4ef6\u7ec4\u4ef6 \u7684template\u4e2d\u63d2\u5165\u5e26\u8f6c\u4e49\u5b57\u7b26\u7684\u5c5e\u6027 expected content \u5c5e\u6027\u5e94\u8be5\u88ab\u8f6c\u4e49\u6210unicode\u5b57\u7b26a actually happening content \u5c5e\u6027\u88ab\u539f\u6837\u8f93\u51fa\u6210\u4e86\u672a\u8f6c\u4e49\u7684\u5b57\u7b26\u4e32", "num": "8123", "d": "5/2018"}, {"title": "vfor working version invalid vfor alias expression vfor banner bannerlist", "body": "version reproduction link steps reproduce expected \u6b63\u5e38\u904d\u5386\u5217\u8868 actually happening", "num": "8122", "d": "5/2018"}, {"title": "vfor working version invalid vfor alias expression vfor banner bannerlist", "body": "", "num": "8121", "d": "5/2018"}, {"title": "typescript type null assignable type propvalidator", "body": "version reproduction link steps reproduce paste run expected errors type actually happening type null assignable type propvalidator works disabled type instead", "num": "8120", "d": "5/2018"}, {"title": "vue nt listen item value array changes", "body": "array index array index gt vdom update arraysplice index array index gt vdom update done bug principle", "num": "8119", "d": "5/2018"}, {"title": "vuemixin clearing vueoptionscomponents", "body": "version reproduction link steps reproduce import vue register global component added register global mixin expected nt change actually happening global components registered mixins removed", "num": "8118", "d": "5/2018"}, {"title": "keepalive working inside vfor containing vif", "body": "version reproduction link steps reproduce click toggle button multiple times expected vshow vif toggle two values computed creation components actually happening vif values change time toggle button clicked new instance component created every time", "num": "8117", "d": "5/2018"}, {"title": "falsy values attributes present element", "body": "version reproduction link steps reproduce add attribute open devtools observe expected present element actually happening attribute present element may expected behaviour would workaround usecase attributes form input form dynamically generated components arbitrarily nested need query datavalid attribute check complete form validity", "num": "8116", "d": "5/2018"}, {"title": "vfor\u9762\u5bf9canvas\u6807\u7b7e\u7684\u95ee\u9898", "body": "", "num": "8115", "d": "5/2018"}, {"body": "wrote works use backticks please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "repro mandatory", "d": "5/2018"}, {"body": "done userland may want promise data give try", "d": "5/2018"}, {"body": "please open issue vue loader repo", "d": "5/2018"}, {"body": "youre using html template everything gets converted lowercase vue gets asked multiple times able find extra information necessary also section docs", "d": "5/2018"}, {"body": "read red tip", "d": "5/2018"}, {"body": "also said demo case transition actually css one js hook part set maxheight determined using script looked source code function length effect read provided try detect transition end css interestingly behavior linked gt leave transition run gt leave transition run gt leave transition run gt leave transition run see another demo", "d": "5/2018"}, {"body": "may want use", "d": "5/2018"}, {"body": "handle stuff like mixins usage directly calling methods edit nt rtfm looks perfect try see well actually works though might massage types bit get working", "d": "5/2018"}, {"body": "ktsn close anything could vue core improve situation", "d": "5/2018"}, {"body": "plugin nt work everything seems assume exports edit still get error wrap component", "d": "5/2018"}, {"body": "fine use ideal creates standalone instance would nice vue still resolved component references everything else way bare options objects nt really problem anyway unless one users messes somehow ends two different vue imports", "d": "5/2018"}, {"body": "alternatively may try detect duplicate vue imports", "d": "5/2018"}, {"body": "seems go open issue", "d": "5/2018"}, {"body": "see sorry", "d": "5/2018"}, {"body": "intentional afaik", "d": "5/2018"}, {"body": "mentioned wrong repository yes intentional", "d": "5/2018"}, {"body": "please provide valid repro opening issue note ask questions dircord server forums", "d": "5/2018"}, {"body": "forgot listen leave event transition component enter", "d": "5/2018"}, {"body": "sorry bad cache problem demo bin shall create new issue proper demo", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "according docs template expressions sandboxed access whitelist globals attempt access user defined globals template expressions possible reasons behavior guess security avoiding sideeffects template rendering workaround case creating method calls global function", "d": "5/2018"}, {"body": "working expected option stands single html element vue instance mount uses hood first element matches selector selected ca nt mount single vue instance multiple html elements", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "something like vue feel free way people use way want personally rather build models backend sometimes type objects typescript frontend regarding proposition also vague hang around discord chat forum discuss ideas others get something interesting could open issue keep mind objects easy powerful time want complexify things box also things talked able find things issues want explore ideas", "d": "5/2018"}, {"body": "valid repro please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "order consistent ref used vfor loop must use array probably know nt need bind different refs resulting ref array nt think worth adding docs feel free tell chrisvfritz may different opinion", "d": "5/2018"}, {"body": "ref used vfor loop must use array case like said docs says ref used together vfor ref get array containing child components mirroring data source sorry using said docs missleads developer probably know nt need bind different refs resulting ref array element holding vfor would agree case", "d": "5/2018"}, {"body": "looks like language issue used nt mean used element component", "d": "5/2018"}, {"body": "click url changed params changed template", "d": "5/2018"}, {"body": "everything works expected route object reactive means change route changes results update template updated hook called remove reactive property template change route nt update reactive data would update template fix simply watch changes object update article data", "d": "5/2018"}, {"body": "thanks sqal", "d": "5/2018"}, {"body": "problem nt rerender using template", "d": "5/2018"}, {"body": "reproduction far beyond minimal sorry ca nt locate problem reproduction like", "d": "5/2018"}, {"body": "please provide repro reporting may bug", "d": "5/2018"}, {"body": "works normal according test maybe need provide info", "d": "5/2018"}, {"body": "closing info provided", "d": "5/2018"}, {"body": "ca nt parenthesis expression valid css property value nothing vue", "d": "5/2018"}, {"body": "thx missed", "d": "5/2018"}, {"body": "functional components need pass", "d": "5/2018"}, {"body": "posva thank answer actually used nt render function real code used single file component vueloader related problem", "d": "5/2018"}, {"body": "yes", "d": "5/2018"}, {"body": "\u65e0\u6cd5\u91cd\u73b0 \u53e6\u5916\u4e2d\u6587\u6587\u6863\u6709\u81ea\u5df1\u7684\u4ed3\u5e93", "d": "5/2018"}, {"body": "use capture bindings component selectively forward native html element see binding native events components", "d": "5/2018"}, {"body": "justineo oh nt learned great feature tried nt seem work vue musicplayervue logged musicplayer hook like result empty object without property however remove modifier see function using vue expected nt work modifier", "d": "5/2018"}, {"body": "use modifier see contains parentscope von event listeners without native modifiers", "d": "5/2018"}, {"body": "justineo nt quite get explained binding native events components use listen inner elements comes doc stating ca nt use", "d": "5/2018"}, {"body": "actually works escape hatch using thirdparty components nt provide specific events need using would make code coupled implementation components used decouple parts whether event listener transparent component user means use bindings without", "d": "5/2018"}, {"body": "justineo see btw since version use", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "justineo thanks closing issue", "d": "5/2018"}, {"body": "stylistic difference", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "relevant issues nuxtjs", "d": "5/2018"}, {"body": "nuxt issue please open", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "working expected invoked use computed property instead handling api data fetching may find insteresting please next time consider using forum discord server stackoverflow questions first come back open issue turns bug", "d": "5/2018"}, {"body": "issues repo also require valid reproduction link think better report discuss issue element ui team first", "d": "5/2018"}, {"body": "justineo said need boiled repros external libs te check bugs", "d": "5/2018"}, {"body": "looking probably code repeatedly calling component definition request without minimal reproduction little", "d": "5/2018"}, {"body": "see", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "think hyperscript inside function quite close proposed api touch real dom inside string templates render functions", "d": "5/2018"}, {"body": "html code use build step precompilation", "d": "5/2018"}, {"body": "write custom registration logic like js function globalregister component prefixedname const name subcomponents component const realname prefixedname name vuecomponent realname component objectkeys subcomponents foreach subname gt const subcomponent subcomponents subname globalregister subcomponent use like tested get point assume", "d": "5/2018"}, {"body": "justineo good solution global register sometimes also need componentlevel register js appvue import list components export default name app components list course make helper function extract full components js appvue import list components import extractcomponents utils export default name app components extractcomponents listname list import extra codes increase cost use", "d": "5/2018"}, {"body": "achievable user land custom webpack loader directly specifying sub components main component overloading vue component method creating global mixin feel free create library reference prefer keep explicit way core", "d": "5/2018"}, {"body": "justineo posva thank published plugin implement feature", "d": "5/2018"}, {"body": "nt put vue files put html template", "d": "5/2018"}, {"body": "thanks quick response evan unfortunately actual use case nt allow add html template since images nested lowerlevel component read lot docs nt seen anything sfc miss something chance consider issue", "d": "5/2018"}, {"body": "looking vueruntime bit actually looks like issue production guess deal would nice console errors development thanks", "d": "5/2018"}, {"body": "seems come vueissuehelper open issue", "d": "5/2018"}, {"body": "yep nt aware repo yet thanks letting know moved closing issue", "d": "5/2018"}, {"body": "come vueissuehelper open issue", "d": "5/2018"}, {"body": "yep thanks letting know moved closing issue", "d": "5/2018"}, {"body": "sorry still wrong repository looking one", "d": "5/2018"}, {"body": "seems bug chrome old versions like case android using chrome checked tested chrome got chrome last version required prefixes properties assume nothing vue side", "d": "5/2018"}, {"body": "justineo got", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "production link local url provide information issue better make minimal reproduction problem codesandbox reproduction repo github", "d": "5/2018"}, {"body": "way much code repro nt look related problem want show also external library involved closing boiled repro provided also appreciate take time create issue english anybody answer also benefit", "d": "5/2018"}, {"body": "reload dev seems acceptable fairly large application unless expect app times larger already future", "d": "5/2018"}, {"body": "thanks responding anticipating app grow pages making concerned single json file containing code without least ability split common chunks scale us also subjective course noticeable penalty every refresh app", "d": "5/2018"}, {"body": "vue wraps observed array mutation methods also trigger view updates examples", "d": "5/2018"}, {"body": "please read also", "d": "5/2018"}, {"body": "please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "nt mind closed open order keep tracker bugs ping though", "d": "5/2018"}, {"body": "also try log testinfo destroyed hook see new value object destroyed", "d": "5/2018"}, {"body": "happens right tearing vue instance normal watchers trigger would trigger instance destroyed making watcher functions invalid call watcher hook instead changing data", "d": "5/2018"}, {"body": "would say would nice mention documentation cause called right vue instance destroyed stage instance still fully functional", "d": "5/2018"}, {"body": "vmodel codesanbox keep mind select elements use need attribute option please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "sorry", "d": "5/2018"}, {"body": "normal sequences whitespace collapsed newline characters source handled whitespace lines broken necessary fill line boxes", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "qualified reproduction please provide something real thanks", "d": "5/2018"}, {"body": "special attribute used vue maybe could add warning", "d": "5/2018"}, {"body": "posva special ca nt find comment docs", "d": "5/2018"}, {"body": "yozman element useful work around limitations indom templates", "d": "5/2018"}, {"body": "justineo think case different functional component", "d": "5/2018"}, {"body": "reserved word use something else want us treat keyword element use component would breaking change feasable vue", "d": "5/2018"}, {"body": "linusborg roadmap must feature render vnode vnodes", "d": "5/2018"}, {"body": "linusborg somecase use render function define templates red warning ca nt use slot except fixed", "d": "5/2018"}, {"body": "roadmap vue none yet havent started working finished plans must feature render vnode vnodes somecase use render function react define templates red warning ca nt use slot except fixed nt understand trying say normal slots scoped slots templates use render functions exactly feature functionality missing", "d": "5/2018"}, {"body": "anything listed reserved going change even", "d": "5/2018"}, {"body": "composition mode accents languages like japanese see underline completely normal composition nt finished browser nt inform something typed", "d": "5/2018"}, {"body": "understand correctly happen keyboards current documentation implies happen keyboards require ime", "d": "5/2018"}, {"body": "vmodel already supported functional components need things manually render functions though also use datamodel see", "d": "5/2018"}, {"body": "thank answer posva think work better balance conveniance low level features lot edge cases covered vmodel getting lost mean lot js input text domprops value value input function event eventtargetcomposing return value eventtargetvalue input radio domprops checked q value null change function event value null input checkbox domprops checked arrayisarray value value null gt value change function event var value el eventtarget c elchecked true false arrayisarray var v null v elchecked lt amp amp value aconcat v else gt amp amp value aslice concat aslice else value c input range domprops value value r function event value eventtargetvalue select change function event var selectedval arrayprototypefilter call eventtargetoptions function return oselected map function var val value ovalue ovalue return val value eventtargetmultiple selectedval selectedval code even including vmodel number lazy trim modifiers low level rendering mean automatically loose conveniance vmodel could set listeners workarounds object real input code could choose use directly input ignore completely adjustments perhaps technical limitations ignoring case", "d": "5/2018"}, {"body": "seems duplicate already pr work correctly revert according discussions", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "repro nt even run ie fixing problems nt seem issue btw looks like trying mimc vmodel", "d": "5/2018"}, {"body": "oh yeah forgot say use template inside inbrowser templates browsers strips", "d": "5/2018"}, {"body": "thank much", "d": "5/2018"}, {"body": "example provide display flex applied case find bug investigation vueloader repo", "d": "5/2018"}, {"body": "apart bit much vue also involves bundling done since modules create scopes writing instead may yield different results sure possible make sure warning reported incorrectly also rare problem since people use cli scaffold project already comes indexhtml file", "d": "5/2018"}, {"body": "happen call without explicitly importing warning using eslint either way vue responsibility", "d": "5/2018"}, {"body": "need add manually data object", "d": "5/2018"}, {"body": "yep works thx nt docs", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "use", "d": "5/2018"}, {"body": "justineo tried", "d": "5/2018"}, {"body": "please open issue thank", "d": "5/2018"}, {"body": "please follow instructions issue template thank", "d": "5/2018"}, {"body": "justineo", "d": "5/2018"}, {"body": "recommend reread vbind", "d": "5/2018"}, {"body": "modify use", "d": "5/2018"}, {"body": "call trim value binding attribute value global trim option likely add hard debug bugs increase vue size something already doable easily", "d": "5/2018"}, {"body": "reproduction url vue \u7684 bug", "d": "5/2018"}, {"body": "justineo", "d": "5/2018"}, {"body": "justineo \u62ff\u90a3\u4e2a\u5730\u5740\u5728\u6d4f\u89c8\u5668\u6253\u5f00\u770b\u5230\u7684\u662f\u66ff\u6362\u4e4b\u540e\u7684\u56fe\u7247", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "nt use english everyone understand", "d": "5/2018"}, {"body": "harshob \u82f1\u8bed\u6211\u4e0d\u592a\u884c", "d": "5/2018"}, {"body": "\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u5728\u56fe\u7247\u94fe\u63a5\u540e\u9762\u52a0\u4e0a\u65f6\u95f4\u6233", "d": "5/2018"}, {"body": "hotao thistailoringnum thisuserphoto", "d": "5/2018"}, {"body": "repro working", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "ourt documenttion repository url indicates looking documentation version feel free open issue right repository ask team make version appearant old docs", "d": "5/2018"}, {"body": "link provided thing nearly indicating version number text looking docs", "d": "5/2018"}, {"body": "suggested open issue correct repository", "d": "5/2018"}, {"body": "keep mind name optional devtools already pick name could added behind flag vueloader open feature request", "d": "5/2018"}, {"body": "working expected happening component nt rerender prop nt changed basically already want constrain input value modify actual element another solution always sync value use computed property component use valid value watcher communicate new value options one probably fit project better something discuss communication channels like discord forum", "d": "5/2018"}, {"body": "similar problem think answer may help understand going possible solution", "d": "5/2018"}, {"body": "problem approach fundamentally breaks encapsulation like workaround posva even though requires developer component aware manual sync give context using snabbdom context custom elements web components ca nt freely reach arbitrary nodes interested seeing vuejs take since exhibits behaviorbug reported us developers certainly expecting change since dramatically perf implications everywhere thanks quick responses", "d": "5/2018"}, {"body": "see properties start proxied vue instance may conflict vue internal properties api methods access", "d": "5/2018"}, {"body": "understand yet following style guide mixins still error message comprehensible developers able fix problem without reading whole docummentation words think better error message would appropriate", "d": "5/2018"}, {"body": "want webpack smaller using vue files webpack always codesplit components check async components docs please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "superior route jumps tab page routing memory leaking time created life cycle tabs page switch memory leaks memory leaks", "d": "5/2018"}, {"body": "valid repro must minimal editable otherwise would difficult us know problem comes implementation vue us forum discord server stackoverflow seek help", "d": "5/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "5/2018"}, {"body": "using components fine give guide read", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "doable via custom webpack loader much done vue actually extremely long split multiple components need create new props communicate subcomponents even use tightly coupled", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "reproduction link essential bug reports thanks", "d": "5/2018"}, {"body": "please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "workaround key span", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "\u4f60\u7684 packagejson \u91cc\u9762\u7684 browserslist", "d": "5/2018"}, {"body": "need setup watcher specific point already lifecycle want prefer bloat api", "d": "5/2018"}, {"body": "check right click collect gc button removed", "d": "5/2018"}, {"body": "posva nt understand button say made next tests dev tools chrome number dom nodes increase production version chrome incognito mode chrome number dom nodes increase production version firefox memory snapshots see memory leaks", "d": "5/2018"}, {"body": "tried firefox see memory increasing wait seconds maybe minutes goes back normal around mb", "d": "5/2018"}, {"body": "maxirozay experience minutes nothing changed real app time wait minutes example pagination seconds get dom nodes click big problem performance", "d": "5/2018"}, {"body": "browser needs memory call garbage collector directly wo nt need wait maybe browser calling garbage collector tried chrome linux memory nt increase like firefox number node always vnodes vif false true document dom tree always someone else try try another latoposbrowser", "d": "5/2018"}, {"body": "maxirozay problem vshow problem vif", "d": "5/2018"}, {"body": "sorry meant vif", "d": "5/2018"}, {"body": "tested normal behaviour browser waits cleaning memory", "d": "5/2018"}, {"body": "look button looks like trash use force gc typically engine wo nt gc unless", "d": "5/2018"}, {"body": "reason nt jump reactively setting data see reactivity caveats docs use see behaviour contenteditable needs special treatment would bloat vue code supported box instead recommend using third party plugins see", "d": "5/2018"}, {"body": "clear something nt bandwidth yet either also think early open discussion also sometimes people really mistaken performance vs easytouse tradeoff important vue want make easy people start using vue web asm yet going big impact performance bottleneck dom still sure mention ssr web assembly going change ssr works", "d": "5/2018"}, {"body": "posva ssr key browser support according caniuse could ignored serverside hence migrated completely webassembly whole idea compiling binary drop vueserverrenderer package aspects architected moment simplicity talking nothing major important keep mind js called webassembly vice versa therefore absolutely nothing change majority users continue write absolutely code webassembly triggered based browser support clientside serverside completely rewritten current approach dropped", "d": "5/2018"}, {"body": "one performance examples strong proponent serverless architecture could bring extreme performance improvements well cost savings", "d": "5/2018"}, {"body": "expensive face detection algorithm normal see improvement said main slow thing dom manipulations anyway feel free add points may useful", "d": "5/2018"}, {"body": "believe two things consider makes vue better alternative react angular natural webassembly integration might key brings much attention vue leading increased community nt move back react angular imagine react implements would make community continue using vue going cost much infrastructure perspective file sizes much bigger operates much slower forgetting apps reactnative thinking web perspective could major blow already talks react webassembly believe important community prepare competition arise doubt hopefully vue integrates webassembly sooner later", "d": "5/2018"}, {"body": "imagine react implements webassembly means react lin clark aka linclark reacteurope help performance react applications browser truth shortterm immediate impact performance nt clear euphemism posva said perf bottleneck dom api javascript virtual dom diffing algorithm meaningless speed something already takes like lt still spending dom apis besides webassembly nt magic great limitations ca nt expect compile nodomaccess javascript ca nt use objects wasm barely imagine js library live implement objects top bytes file sizes much bigger operates much slower contrary wasm files way much larger compiled binary thinks size c source code vs compiled executable also check true wasm powered ui framework compiled c see demo gt gzipped files took seconds load baretothebone app counter fetch json truly amazing mind blown fast transitioning views counter fetch data still took power wasm lies boosting cpuintensive applications like face recognition demo shared us help core problem ui frameworks slowness native dom apis", "d": "5/2018"}, {"body": "fnlctrl reference video pointing video year old presenter makes lot points process changing importantly garbage collection gt ongoing work access dom api gt list highlevel goals ongoing work video points contrary wasm files way much larger compiled binary true comparison experimental project alpha stage march strange stating weigh less bytecode false everyone web states well referenced presenter webassembly makes less network overhead resulting faster downloading code hence performance improvements please take look additional runtime passed net anything like running absolutely js gt vm performance power wasm lies boosting cpuintensive applications referenced presenter believes runs faster please keep mind year ago webassembly improving another magnitude javascript ie much faster since many things need improvements expert area nt also make sense games gpuintensive nt playable web playable webassembly also webvr webassembly nobody tells ready make switch however start making progress better later optimizations available might happen time initial preparations made question starting help us better understanding project architecture dom access garbage collection available", "d": "5/2018"}, {"body": "could help change happen faster believe js developers take closer look webpack wasm loader walt syntax sugar top javascript", "d": "5/2018"}, {"body": "fnlctrl said real bottleneck current js framework cpu consumption dom related operations fixed current mvp webassembly standard hand lot overhead executing pointer switching javascript webassembly context another problem need concern olzhasalexandrov btw think need learn dose webassembly work strength kind frontend situations would suitable using current webassembly materials information thanks", "d": "5/2018"}, {"body": "becavalier saying hand lot overhead executing pointer switching javascript webassembly context another problem need concern analyzed short answer incorrect might true exact moment logically right future think would anyone write native nodejs addons switching native modules js would produce less optimized apps would correct task almost nothing anything major one benchmarks obviously find also welcome watch talks could hear mixing js webassembly nt bad thing one point webassembly gained support webpack since version gained first class support year already", "d": "5/2018"}, {"body": "olzhasalexandrov yes agree webassembly change web current time future postmvp standard complete overhead javascript context webassembly context would narrow application scenarios current webassembly pure computing applications graphic processing compressing library related applications apps need frequently switching two context environments really save lot cpu consumption get good running efficiency help webassembly frontend frameworks like vuejs without implementation gc webassembly really help lot nt need much math computing even using virtual dom wrapper real dom diff algorithm still good performance good implementation vuejs deep optimization javascript engine last least cg wg member really trying best achieve post mvp standard webassembly also better llvm backend webassembly think look forward day webassembly change web", "d": "5/2018"}, {"body": "webassembly amp vue think great discussion vue would ultimate number one within jsframeworks high time think", "d": "5/2018"}, {"body": "referenced presenter believes runs faster please keep mind year ago webassembly improving another magnitude javascript ie much faster since many things need improvements nt see chromeffedge recent release notes stating anything vast performance improvements wasm specs changed specs actual implementations also performance talking point wasm fast doubt faster without proper context meaningless many pointed wasm nt speed dom apis giving wasm dom access nt help either removes context switch overhead dom apis still going slow comparison experimental project alpha stage march strange fully functional wasm ui framework today latest release march shows exactly still development could taken advantage wasm improvements talked please enlighten another one better blazor real world example wasm ui framework experimental everyone web states well referenced presenter webassembly makes less network overhead resulting faster downloading code hence performance improvements far referenced talks specs everything look good paper someone actually tried build things would please show us lease one concrete example wasm providing great performance boost size reduction building simple spa requires calling dom apis let propose better question ever since talk wasm really good ui frameworks reactangular announced wasm rewrite plan core", "d": "5/2018"}, {"body": "without getting mixed discussion came across thread accident nt clue wasm makes sense project want add two cents currently process migrating fairly large project asmjs wasm actively following wasm performance browsers said performance improvements browsers straight wrong example take bugticket bugfix increased performance app twofold ff yet nt show ff release notes word advise instead checking browser release notes check release notes javascript engines performance increases implemented also check ticket trackers publicly available also stuff like streaming compilation recently added firefox chrome without much fanfare also nt know relevant project reactnativedom announced reacteurope layout powered wasm", "d": "5/2018"}, {"body": "find topic interesting interested wasm vuejs first bit context actually used wasm real world use case viewing big jpeg images several gb browser run image processing expert get hands dirty play little bit promising new technology vuejs part must confess newbie month two makes happy simplicity expressiveness excellent doc thanks team observations thoughts wasm wasm fast seen times faster javascript image processing algorithm convolution talking algorithm written javascript rewritten c compiled emscripten wasm information emscripten also generate optimized javascript times slower wasm convolution algorithm surprisingly faster algorithms always performance depends lot context conclusion wasm promise speed fullfilled javascript engines also optimised perform well clear win wasm files small already noted fact one requirements mvp wasm file created emscripten big blazor example part emscripten bring code standard library one core advantage wasm compilation target emscripten bring legacy cc code base browser done google earth autocad game etc often lower parts code like physics engine actual display code agree overhead calling wasm js js wasm manipulating dom wasm first identified use cases clearly benefit wasm ui ones experience guess wasm good candidate performance improvement vuejs note olzhasalexandrov everything moving new technology things improve future one want go path guess best first identify bottlenecks vuejs measuring things check wasm good candidate improve performance experiments said killer feature vuejs simplicity prefer slightly slower solution easy use fast one complex wasm used means development technology walt something else comes maintenance cost dev team compromises", "d": "5/2018"}, {"body": "vuejs already typescript support wonder much would take work assembly script vue option may somewhat offtopic issue someone really likes use vue would certainly enjoy taking paradigmframework context game ui would take ton effort would interesting able use vue paradigm compose interact webglui via something like html canvas offscreencanvas ontopic nt think webassembly good firstclass target vuejs unfortunately significant belief browsers never implement firstclass dom api access webassembly get implemented wo nt seeing time", "d": "5/2018"}, {"body": "spent time thinking topic want add extra thoughts lose considering personal experiences using vue hard time believing bottleneck vue js dom api benchmarks showcasing personal experience using vue performance using makes designing ui elegant experience runtime typechecking props ridiculous callstack depth exceptions still thread seem leaning wonder wasm js interop layer would slowdown honestly vue core team really sold wasm performance boon vue olzhasalexandrov want help vue make jump wasm need benchmarks wasm speeds expensive image processing nt mean vue bottlenecks core team really ca nt underestimate power builtin runtime typesafety wasm could give vue manually checking typeof instanceof really nt ideal potential performance boosts hand might possibly include using vuex wasm environment via web workers theoretically possible nt know anyone tried", "d": "5/2018"}, {"body": "core team task exact tech requirements glad assist beginning suggest start replacing bundle renderer production please let know benefits json parsing bundle created vueserverrenderer besides ease debugging ignore production normal usual straightforward rendering please observe reasons bad approach initial comments issue ssr optimization bring value", "d": "5/2018"}, {"body": "short look bad vueserverrenderer link source serverless first cold start triggers huge json parsing lot checks treeshake dependencies since function nt access dependencies bundles file sorry devs using including imagine great would compile wasm", "d": "5/2018"}, {"body": "another cents short look bad vueserverrenderer link source serverless statement answer question webassembly used address mentioned issues fact issue description also nt assumptions webassembly capabilitiesstrongsides less bytes performant examples unrelated usecases meet vue believe better ways fixing mentioned issues without utilizing webassebly webassembly integration lets take look glimmer example nearly close vue goals built compiler compile handlebars templates binaries glimmer vm aims increase network dom updates performance compiler vm still written typescript far know plans webassembly version please note templatingengine part whole thing already clue much effort needed achieve goal mean possible replace one compiler another get webassembly binaries place javascript sources lot work nearly viable reason imho anyone sees possible path vue implement integration guess welcome discuss though", "d": "5/2018"}, {"body": "oevgeny many already highlighted benefits migrating webassembly cons current approach ssr continue repeating things build previously said suggest try rewrite use assemblyscript better walt whole vue ecosystem rewriting small package ssr function vueserverrenderer primitive task start common approach divide big project bunch small pieces experimenting small package vuejs ecosystem good starting point", "d": "5/2018"}, {"body": "webassembly integration lets take look glimmer example far know plans webassembly version pr porting initial small part glimmer rustwasm understanding part mostly done waiting dependency binaryen allow run browsers like lack wasm support dependency ready soon possible see wasm adoption glimmer point", "d": "5/2018"}, {"body": "pr porting initial small part glimmer rustwasm great news happy glimmer team pr title says initial stab porting rust think lot related rustwasm changes pr quite big maybe things go smoother assemblyscriptwalt anyway example assemblyscript walt integration existing js productionready projectlibrary really appreciated rewriting small package ssr function vueserverrenderer primitive task start sure maybe smart enough", "d": "5/2018"}, {"body": "blazor story entirely different blazor runs top mono net runtime compiled wasm actually executes real net assembliesdlls interpreter mode interprets msil guys building stated many times addressed mono team miguel de icaza creator xamarin mono working ahead time compilation make possible compiling blazor apps straight wasm currently entire net vm downloaded app standard libraries plenty meaningless code like file io make sense browser gt size things get optimized enough pretty sure app written angular blazor smaller blazor run faster blazor given angular switched wasm may want take look one way manipulate dom rust interpreting vm vm plain wasm", "d": "5/2018"}, {"body": "mihailshishkov would please build stdweb demo namely todomvc example put repo nt include prebuilt one ca nt seem get demo compile windows machine guess also much hassle people want see demo install complete rust toolchain", "d": "5/2018"}, {"body": "installed ubuntu vm rust toolchain finally built stdweb todomvc demo js wasm todomvc demo gzipped js gzipped wasm gzipped compared vue todomvc demo gzipped js gzipped runtime bigger size perhaps nt complete waste hours setup rust env compile demo since least confirmed assumption actually trying leave built demo see yes course still experimental guess wait see size advantage future perhaps performance difference since todomvc demo simple timeline adding todo item vue stdweb guess wait complex demo find keep assuming wasm wo nt bring much performance improvement traditional applications heavily uses dom apis draw ui", "d": "5/2018"}, {"body": "arrow function expression shorter syntax function expression", "d": "5/2018"}, {"body": "note vuejs docs well use arrow functions options property callback created gt consolelog thisa vm watch newvalue gt thismymethod since arrow functions bound parent context vue instance expect often resulting errors uncaught typeerror read property undefined uncaught typeerror thismymethod function", "d": "5/2018"}, {"body": "used use arrow function forgot basic shame thank guys", "d": "5/2018"}, {"body": "diegolipinskidecastro use arrow functions data definition access component data first argument passed function also mentioned docs p", "d": "5/2018"}, {"body": "sqal last lines yeah thanks", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "closing open right way", "d": "5/2018"}, {"body": "diegolipinskidecastro please nt falling fat arrow scope caveat search ask discord server well known js caveat nvm late party", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "update issue mentioned vueloader pelase see link sorry lack attention", "d": "5/2018"}, {"body": "longer case though documented functional components case either use", "d": "5/2018"}, {"body": "hi posva thanks feedback could nt find part guide api reference usage want make pr adding info guide", "d": "5/2018"}, {"body": "thank let keep sure internal property people use one instead", "d": "5/2018"}, {"body": "cli officially released yet also docs repo", "d": "5/2018"}, {"body": "repost docs nt required", "d": "5/2018"}, {"body": "required update docs cli officially released", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "nt think link qualifies reproduction fiddle sort", "d": "5/2018"}, {"body": "expected behavior computed properties considered immutable never mutated directly", "d": "5/2018"}, {"body": "supposed work object two functions named actually getters setters see proper get shorthand syntax", "d": "5/2018"}, {"body": "fact try native get set syntax app try simpler repro see works thanks", "d": "5/2018"}, {"body": "managed get working think real app issues dealing scope lost able access able create getterssetters proper function method body syntax arrow functions got working repro also used validate computed property nt rerun every time field changed makes sense since returning gettersetter delegates thanks putting back track evan", "d": "5/2018"}, {"body": "import one component inside right order makes sense case vue concern rather bundler", "d": "5/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "5/2018"}, {"body": "browser feature nothing deal vue", "d": "5/2018"}, {"body": "posva forget im said dont know tt", "d": "5/2018"}, {"body": "\u8bf7\u4e0d\u8981\u4f7f\u7528issue\u63d0\u95ee", "d": "5/2018"}, {"body": "using regular slots vue reuses warning important use scopedslot generates different vnodes time", "d": "5/2018"}, {"body": "posva nt warning sometimes customize slot template without scope", "d": "5/2018"}, {"body": "hi thanks filling issue checked link adding log final state clicking checkbox array order correctly reflected dom link vue issue please check implementation", "d": "5/2018"}, {"body": "hi thanks response actual error happening sorting check look console object cloned sorting happening correctly parse stringed facets object becomes reactive reason changes order array reactive variable see code happens anything get sorted happens chrome possible reopen issue", "d": "5/2018"}, {"body": "updated logging position array order changed assigned vue instance", "d": "5/2018"}, {"body": "issue related vue guess uikit library works happens using indom html template check", "d": "5/2018"}, {"body": "rendered context root instance rather case use refer parent component like", "d": "5/2018"}, {"body": "javoski thank response see use please reopen explain access directive opinion access passed component via", "d": "5/2018"}, {"body": "please reopen explain access somemethod click directive sure got point clearly actually access directive according tests invoke function directly", "d": "5/2018"}, {"body": "maoberlehner way ca nt work method defined main vue instance directive evaluated scope main app template everything correct", "d": "5/2018"}, {"body": "javoski linusborg oh sorry idk copy pasted custom directive snippet fault look access value correct way apologize trouble", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "nt see anything wrong repro want vue keep using element use attribute even case would better use another data property bind inputs", "d": "5/2018"}, {"body": "\u8bf7\u4e0d\u8981\u5728\u7ec4\u4ef6\u91cc\u9762\u624b\u52a8\u7ed9 dom \u6216\u8005\u81ea\u5b9a\u4e49\u6307\u4ee4", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "dom dom vue javisperez \u5728 dom", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "hi nt modify outer component props child even less vnode considered readonly instead use scoped slots provide information child parent ways communicating components tightly coupled case work nested trees well", "d": "5/2018"}, {"body": "hi posva thanks quick response look injectprovide want clarify something something working reason breaking change modifying props child setting props children components parent rendering suggested correct approach anymore", "d": "5/2018"}, {"body": "never fair workaround scoped slots need fri may juan p osorio notifications githubcom wrote hi posva thanks quick response ill look injectprovide want clarify something something working vue reason breaking change modifying props child setting props children components parent rendering suggested comment correct approach anymore receiving mentioned reply email directly view github mute thread gt eduardo san martin morote", "d": "5/2018"}, {"body": "intended check option docs think looking", "d": "5/2018"}, {"body": "anything starting pretty much private please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "ok thank sorry bother", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hey discussed earlier others issues want achieve keepalive want cache last x component rendered actually create component basing keepalive source code exposing function actually go declarativity scenario looks like using prop work", "d": "5/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "behaviour may seem weird never directly modify value input use splitting source truth instead use computed property setter sets text uppercase value want keep lazy behaviour play two variables", "d": "5/2018"}, {"body": "thanks posva reply say", "d": "5/2018"}, {"body": "cc", "d": "5/2018"}, {"body": "need probably mixins case please provide information need possible use cases etc", "d": "5/2018"}, {"body": "fnlctrl nt need mixins want custom key load components instead different key name please provide information need possible use cases etc want follow pattern gt might css want javascriptvue components also distinguish components objects article another harry object signify something object may used number unrelated contexts one currently see making modifications types components could potentially knockon effects lot unrelated places tread carefully example component signify something component concrete implementationspecific piece ui changes make detectable context currently looking modifying safe side effects example", "d": "5/2018"}, {"body": "fnlctrl looking reply", "d": "5/2018"}, {"body": "honestly find hard understand trying achieve custom fields eg accessed please note issues well defined feature requests used seeking help nt know want discuss forum first", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "ie support object property shorthand use instead", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "priority vif vif wrong times hence velse rendered times see correct usage", "d": "5/2018"}, {"body": "compiler works fine strict mode maybe mean strict csp either way need provide information reproduction inbrowser compilation works regardless strict mode works", "d": "5/2018"}, {"body": "posted issue seeing gave much clarity hack suggested caused code work however try new function syntax make strict mode work", "d": "5/2018"}, {"body": "also working salesforce problem described issue using runtime compilation getting error keyword add around keyword library work better practice way", "d": "5/2018"}, {"body": "changed main vue code salesforce still threw error saying strict mode code may include statement", "d": "5/2018"}, {"body": "nt unmuting directly manipulating dom instead mutate state let vue vue job making sure dom sync state", "d": "5/2018"}, {"body": "thanks mentioned mutating attribute via state nt work pauses video comparison fluidly unmute targeting element directly trying custom video controls ios compatible way achieve vue missing related new policies ios", "d": "5/2018"}, {"body": "vue functional component define stateless component case applicable functional components pack stateful component", "d": "5/2018"}, {"body": "yunfong feature request asking functionalstateless components support obj question use methods functional components add making functions accessible via functionaltemplate nt make component stateful happy open pr fr approved", "d": "5/2018"}, {"body": "could open issue vue loader instead please", "d": "5/2018"}, {"body": "posva would change core adding object component context compilation step necessary template able access methods syntax like", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "right repo something achieve using proxy custom plugin", "d": "5/2018"}, {"body": "oops sorry put vuex repository posva elaborate little though think done part custom development instead supported natively builtin behaviour seems inconsistent", "d": "5/2018"}, {"body": "let keep discussion forum get something elaborated feature request note component composition works better web applications works well html structure", "d": "5/2018"}, {"body": "feature", "d": "5/2018"}, {"body": "something interest working", "d": "5/2018"}, {"body": "closing nt follow issue requirements way reproduce", "d": "5/2018"}, {"body": "empty text node preserving white space think", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "expected whitespace preserved default nt want whitespace filter use preservewhitespace false vueloader options", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "setting different last line please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "sorry messed example try read read source code linked briefly easy see talking title issue asking design decision way", "d": "5/2018"}, {"body": "im sure get question vue detect assignment need set", "d": "5/2018"}, {"body": "posva think jjpandari would like use make property reactive already added like example nt see use case property already exists think would good provide development warning users know done something wrong example previously created without nonreactive think warning like would useful think", "d": "5/2018"}, {"body": "seems fine also think hardly useful warning ok", "d": "5/2018"}, {"body": "chrisvfritz would see logged browser console something would build process thinking taking stab", "d": "5/2018"}, {"body": "runtime dev warning want add", "d": "5/2018"}, {"body": "think valid use case setting set existing properties application code object initially empty call getting object api called get updated object sent api nt really want check property exist using set since would verbose", "d": "5/2018"}, {"body": "fnlctrl bit unclear way issue initially worded chris codepen good example real issue jjpandari real issue created nonreactive property later called nonreactive property expecting would switch property nonreactive reactive pull request added also addressing usage call set nonproduction environment check trying set nonreactive property case would get warning said property reactive", "d": "5/2018"}, {"body": "see though another question make work already nonreactive property nt see limit", "d": "5/2018"}, {"body": "fnlctrl thinking someone first creates unreactive property tries make reactive later reference property two events likely create difficulttodiagnose bug showing warning make property reactive start encourage best practice eliminates window bugs occur", "d": "5/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow btw vuetify discord server", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "issue", "d": "5/2018"}, {"body": "\u89c1", "d": "5/2018"}, {"body": "duplicated", "d": "5/2018"}, {"body": "thx", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "would even put null type say prop anything done custom validator always returns true", "d": "5/2018"}, {"body": "basic type check matches type also seen mentioned guys quite issues seems work fine regular js", "d": "5/2018"}, {"body": "impossible current typing schema cast manually might change future version exploit conditional type model prop type however might breaking change", "d": "5/2018"}, {"body": "personally prefer rewrite typing schema vue said typing validator impossible current type files let patiently wait vue", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "please read docs", "d": "5/2018"}, {"body": "still property anymore", "d": "5/2018"}, {"body": "expected behaviour keepalive component removed cached component go", "d": "5/2018"}, {"body": "sanchitgn explicitly convert string eg", "d": "5/2018"}, {"body": "bound value boolean use way nt need falsy values bound elements", "d": "5/2018"}, {"body": "expected behavior", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "either use vcloak separate template", "d": "5/2018"}, {"body": "thank kaelwd good workaround hand wonder worth special handling core though problem might also occur ssr nevertheless write directive like focus input hydrated", "d": "5/2018"}, {"body": "tried fix luck think similar issue trying fix idea wo nt work since works differently nature since runs page loads think solution must calling element component mounted nt find implementation use little guidance possible", "d": "5/2018"}, {"body": "nothing vue link reproduces issue vanilla js basically browser feature pressing back button restore final state checkboxes also dom modifications done via javascript ignored scenario speculate browser go link browser takes snapshot final state checkboxes modified javascript second third checked go back browser tries restore state initial load second third checkbox checked vue kicks second checkbox gets unchecked solve simple avoid dom template", "d": "5/2018"}, {"body": "thanks taking time look yaodingyd", "d": "5/2018"}, {"body": "sodatea could share steps used locate bug seems even assign empty implementation bfcache still work website checking still nt know narrow problems", "d": "5/2018"}, {"body": "anyone may interested debug bfcache setup webkit project follow tutorial debug method vue case fail activedomobject called", "d": "5/2018"}, {"body": "even necessary order architecture app hundreds organized components loaded demand crucial part without build step understand high traffic application need optimization opportunities build step provides however company case especially backend engineers want able give maintenance support shipped applications short staffed frontend engineers s\u00f3 leave heavy development us applications require constant changes business requirements want quickly used old way things one page jquery commands think could deliver necessary changes much faster back without build step case performance applications satisfatory clients need deliver changes faster bottleneck development team time time recognize develop modern complex application organized fashion need break components defining clear separation concerns way develop components separately deploy without build step loading asynchronally runtime defined naming pattern structure way components must created rules tell vue load components without predefined component name list without build step would manually mantained reason believe simple change one break backward compatibility simply defining one function gives app opportunity resolve component constructor runtime really shame need really nt possible achieve without modificating framework api constructors pretty well established named components think really nt add complexity future updates framework costly feature designed absolute bare minimum requirements build upon", "d": "5/2018"}, {"body": "want component name list really simple write component loader loads component id runtime", "d": "5/2018"}, {"body": "fnlctrl thank answer considering buildless architecture two problems think top head components loaded dynamically asynchronally every single one replace every single direct component invocation dynamic loader implementation detail obscures unecessarily every component definition noticed dynamic loader example without build step works render functions templates expect backend engineers mantain update nt possible support templates spoiler need one function", "d": "5/2018"}, {"body": "components loaded dynamically asynchronally every single one replace every single direct component invocation dynamic loader component dynamic give invocation different name ca nt would equivalent defined static component name list must least using something like syntax proposed noticed dynamic loader example without build step works render functions templates use templates long use runtimecompiler build vue using render function demo purpose demo using template", "d": "5/2018"}, {"body": "component dynamic give invocation different name ca nt would mean defined static component name list must least using something like syntax proposed exactly beauty elegance approach simply function vue calls searching component constructor definition today already search searches named property component object function vue call voil\u00e1 longer need defined static component name list really awesome check working sites necessary changes diff srccoreinstancelifecyclejs export function initlifecycle vm component vmwatcher null vminactive null vmcomponentloader noop vmdirectinactive false vmismounted false vmisdestroyed false srccorevdomcreateelementjs export function createelement let vnode ns typeof tag string let ctor ns context vnode amp amp context vnodens configgettagnamespace tag configisreservedtag tag platform builtin elements vnode new vnode configparseplatformtagname tag data children undefined undefined context else isdef ctor resolveasset context options components tag else isdef ctor resolveasset context options components tag contextcomponentloader tag component vnode createcomponent ctor data context children tag else unknown unlisted namespaced elements check runtime may get assigned namespace parent normalizes children vnode new vnode tag data children undefined undefined context else direct component options constructor use like javascript myplugininstall function vue options let cache optionscache vueprototypecomponentloader function id id matches expected pattern return component constructor probably async constructor otherwise return nothing normal process continues var factory cache id factory return factory var prefix optionsprefixtolowercase var plen prefixlength idsubstr plen tolowercase prefix var path idsubstr plen replace g var last pathlastindexof last pathsubstr cache id factory getloader path last return factory function getloader path last load component ajax return function resolve reject var html js var done function done html amp amp js jstemplate html resolve js var href optionsbaseurl path last utilsloadscript hrefjs function err err return reject message error loading component path script error err js optionscomponentmap path done utilsloadajax url hrefhtml cb function err response err return reject message error loading component path template error err html response done utilsloadstylesheet hrefcss function err err consolelog error loading stylesheet component path css optional stop component created vueuse myplugin prefix myprefix baseurl mybaseurl components component defines constructor global variable makes script easy debug developer tools componentmap myglobalvarcomponents already spent much time writing answer second point later thank", "d": "5/2018"}, {"body": "work single space space", "d": "5/2018"}, {"body": "would anyone write code way", "d": "5/2018"}, {"body": "syntacticsolutions nt matter fact bug right", "d": "5/2018"}, {"body": "thanks danielsharkov bug root cause different behavior indent bellow maybe add r pattern text interpolation regexp", "d": "5/2018"}, {"body": "video sure nt pages renderer process recorded one tab open", "d": "5/2018"}, {"body": "another confusing thing remembered static classes applied functional component parent applied default like normal component present data object properties available undocumented", "d": "5/2018"}, {"body": "might try give shot week one downside need extra outer div anyway might closed soon throw link come anything", "d": "5/2018"}, {"body": "awesome happy help way testing etc", "d": "5/2018"}, {"body": "updates", "d": "5/2018"}, {"body": "sorry small hack nothing usable yet try get working state weekend thanks reminder", "d": "5/2018"}, {"body": "try repo npm demo similar proposed api nt work since expression javascript needs string variable named work progress leave issue input nt tested super heavily seems working okay let know useful might expand api match javascript statement etc", "d": "5/2018"}, {"body": "cool give try middle perfect use case", "d": "5/2018"}, {"body": "vdefault would cool", "d": "5/2018"}, {"body": "lmk going seems useful add pretty easily ps use case", "d": "5/2018"}, {"body": "simple use case right last option could vdefault", "d": "5/2018"}, {"body": "cool working expected application hope add pretty easily probably tonight within maybe make issue repo move discussion away issue", "d": "5/2018"}, {"body": "thinking could implement switch vue completely untested solution use components rather directives benefit nt render additional html switch cases render functions bring child components", "d": "5/2018"}, {"body": "pretty neat vuecompose library looks cool well check constantly learning new neat things vue either works personally think directive api little readable said think happy write render function use regular statement js posva alluding earlier", "d": "5/2018"}, {"body": "let close api freeze wo nt add enough benefits worth adding happen many ifelse conditions refactor code multiple components use computed property display one use render function either use function refactor statement also possible directly write", "d": "5/2018"}, {"body": "stumbled upon found culprit would nice execute object maybe reason like", "d": "5/2018"}, {"body": "think better component options structure json changed json maybe", "d": "5/2018"}, {"body": "case representing object string tostring made believe jsonstringify used make prettier outputs object array nice tostring formatting might get around checking object tostring method last prototype chain way use tostring added prototype", "d": "5/2018"}, {"body": "right checking object tostring parameter object tostring edited file", "d": "5/2018"}, {"body": "comprehension looks good thanks want submit pr", "d": "5/2018"}, {"body": "mathieutu umm tested failed like bash summary tests completed tests failed failed tests directive vhtml support value types phantomjs linux expected webpack lt shift webpack lt webpack lt flushcallbacks webpack lt directive vtext support value types phantomjs linux expected webpack lt shift webpack lt webpack lt flushcallbacks webpack lt make elaborate", "d": "5/2018"}, {"body": "take look get time likely next monday", "d": "5/2018"}, {"body": "hey guys took time work night thanks help", "d": "5/2018"}, {"body": "mathieutu looks good using something like checks method overwritten without comparing values think would better performance", "d": "5/2018"}, {"body": "actually kind already nt compare values function references tostring defined difference check value plain object place value used ca nt say anything term performance", "d": "5/2018"}, {"body": "mathieutu ah nt know used way awesome maybe isplainobject check needed maybe move last check could performance testing", "d": "5/2018"}, {"body": "ok tested solution complicated test nt work test value like result one want needed avoid arrays fact could make comparison arrays tried benchmark tests nt anything really relevant ways", "d": "5/2018"}, {"body": "mathieutu use check object returned works fine check also seems work correct way checking case", "d": "5/2018"}, {"body": "mathieutu hmmm happens compare trying avoid seems like work objects method", "d": "5/2018"}, {"body": "gaya nt time right explain everything let play unit tests test arrays avoiding ca nt really count nt know first prototype val check doc", "d": "5/2018"}, {"body": "met problem news", "d": "5/2018"}, {"body": "maybe work together hahaha", "d": "5/2018"}, {"body": "wrote issue make sure problem bug asked irc chats discord ventrilo ts nobody answered put issue way thanks somebody helped issue", "d": "5/2018"}, {"body": "glad found problem fyi reporting issues make sure provide boiled repro external dependencies problem come", "d": "5/2018"}, {"body": "english native speaker best describe reason problem element reuse existing elements usually reused efficiency rendering want make function like want need add key input key must unique value", "d": "5/2018"}, {"body": "hi posva little know thank", "d": "5/2018"}, {"body": "tested firefox nt flicker may browser plugin something nt look like vue problem", "d": "5/2018"}, {"body": "tested firefox windows experience flickering transitioning div removed new div nt come tick probably windows firefox issue sure anything vue could workaround could add constant height wrapper around transitioning elements", "d": "5/2018"}, {"body": "fnlctrl seems like windows firefox issue gt tested linux android thank answers", "d": "5/2018"}, {"body": "want set unicode icon font html attribute css like html like think better way thank much", "d": "5/2018"}, {"body": "workaround mentioned api doc ran placeholder", "d": "5/2018"}, {"body": "need newline conditionally title attribute edit fyi simple workaround whew use unicode escape found", "d": "5/2018"}, {"body": "need use wait next release version change", "d": "5/2018"}, {"body": "right two options yes", "d": "5/2018"}, {"body": "need one fixes also patch search replace worked decided revert anyway nt need changes", "d": "5/2018"}, {"body": "give life also much interested regarding feature would though call stay line props", "d": "5/2018"}, {"body": "experiencing thing anything triggers rerender inside slotscope causes warning duplicate slot presence issue seems line slots rendered subsequent executions block true presumably first render would imagine something setting back false rerender triggered admittedly know almost nothing vue works hood wild guess bug seems like unlikely edge case happened couple times recently big fan pattern writing renderless components paired concrete implementations trying pass content consumer concrete implementation issue arising", "d": "5/2018"}, {"body": "ever find resolution", "d": "5/2018"}, {"body": "experiencing issue well using tailwind css vue sfcs helpful break class names onto multiple lines avoid long single lines n character breaking class names hopefully makes next release", "d": "5/2018"}, {"body": "finally got time dig opened pr", "d": "5/2018"}, {"body": "user ssr vshow cause style ca nt displayed", "d": "5/2018"}, {"body": "vue clear slot provide nothing slot later considered bug fixed logical behaviour explicitly provide empty slot therefore want clear default slot easiest logical solution nt get ca nt way anyhow explicit little verbose empty keyword would fine least provide way please", "d": "5/2018"}, {"body": "toooooooooooo long also reads awkwardly one thinks personally go adding declaration using flag realize little outside typical vue approach", "d": "5/2018"}, {"body": "unless use tag general", "d": "5/2018"}, {"body": "returns instead empty string node const jsdom require jsdom undefined const jsdom jsdom undefined const dom new jsdom undefined domwindowdocumentqueryselector p style cssstyledeclaration color values color red importants color length onchange function domwindowdocumentqueryselector p stylecolor red domwindowdocumentqueryselector p styleunexisted undefined solution like fix issue annoying", "d": "5/2018"}, {"body": "\u8bf7\u95ee\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 \u73b0\u5728\u8fd8\u662f\u6ca1\u6709\u6548\u679c", "d": "5/2018"}, {"body": "\u8fd9\u76ee\u524d\u8fd8\u53ea\u662f\u4e00\u4e2a feature", "d": "5/2018"}, {"body": "justineo \u597d\u7684 \u8c22\u8c22 \u4f60\u73b0\u5728\u5982\u4f55\u5728ssr \u60c5\u51b5\u4e0b inline", "d": "5/2018"}, {"body": "hi actually developing application nuxtjs need exact behaviour reported application expected behaviour android need vmodel binding behave composing android keyboard iphone everything working fix thank", "d": "5/2018"}, {"body": "using inline templates nonspa website even vue converts markup valid executed would nt valid initially page loads little confused seems seen issues forum answers recommended imposed way use vue single file components previously compiled despite progressive incrementally adoptable approach know nt common practice anymore cases like use vue library add functionality existing html wordpress theme instance yet valid html worried anyway", "d": "5/2018"}, {"body": "crucial defect syntax type info props type permanently lost standard vue component definition syntax impossible even libraries like vuetsxsupport recover typescript definition unless wrap syntax simple object definition done vuepropertydecorator", "d": "5/2018"}, {"body": "webpackdevserver \u8fd8\u662f\u4e0d\u884c", "d": "5/2018"}, {"body": "one also use propdocs presents pretty neat although maybe original way write documentation vue components add descriptions notes even explanatory code flags etc even render documentation separate component", "d": "5/2018"}, {"body": "posva hi talking spa found vuejs best rapid clientside behavior programming classic roundtrip environment aspnet specific render partial view server side vue directives inside incredible fast easy way also afaik framework suites perfect really sad vueconfig removed happy dmitri provided solution really helped hovewer still issue consider vuefor iterating img tag cant provide correct src point real problem way using vuejs therefore doesnt suit great case assumed first place", "d": "5/2018"}, {"body": "feel like compelling reason simply nt forced using arbitrary sfc especially many use cases cause problems component page root element want overlay list loads wrap need whether solution passing adding nt think matters needs solution real problem people using hacks solve like frightening clever piece", "d": "5/2018"}, {"body": "think agree say missing feature vue developpers say currently difficult implement diff algorithm one solution create child component use case split parent component multiple render functions compose parent easier jsx javascript const genchildren h gt return h div somestuff h div stuff parent component render h return h mygridwrapper genchildren h", "d": "5/2018"}, {"body": "titouancreach would work getting multiple root elements error assume would renderless component rendering slot render function whatever throw going get error tried pretty much everything noavail", "d": "5/2018"}, {"body": "workaround adding wrapping basically around multiple nodes workaround use functional component nt single root limit lose datamethods normal components", "d": "5/2018"}, {"body": "saying current virtualdom diff amp patch algorithm heavily relies fact child component always exactly one root element would break completely one root node child component saying making work one root component complicated adds additional logic challenge make change without negatively impacting render performance current implementation fyi preact currently trying figure well issue asking current pull request linking case gives vue rendering engine developersmaintainers inspiration useful ideas obviously different engines apologies nothing helpful", "d": "5/2018"}, {"body": "another use case know could without multiple root nodes please tell kindof stumped details need two elements component reference could abstract data seems messy scoping weird wrap two elements div anything elements dynamically positioned page elements ca nt elements covering stuff block mouseover events could disable mouse events parent wrapper invisible box seems pointless dataset stuff set script another component listed take granted tname func export default name popups data return tshow false tname tfunctions tcorner methods goto let target documentgetelementbyid targetbox datasetdest target routename return routerpush name target thistshow false hover let target documentgetelementbyid targetbox let popup documentgetelementbyid contextpopup update context popup info thistname targetdatasetname thistfunctions targetdatasetfunctionssplit figure corner render contextpopup let l targetdatasetl true l r let targetdatasett true b thistcorner l position corner popupstyleleft targetdatasetpopleft px popupstyletop targetdatasetpoptop px render popup thistshow true unhover thistshow false", "d": "5/2018"}, {"body": "titouancreach work functional component way aside jquery hacks", "d": "5/2018"}, {"body": "work anything nt create children splitting compose render function pure javascript", "d": "5/2018"}, {"body": "tochoromero solve issue bootstrap came via problem bootstrap really specific ordering addons extra wrapping div breaks update big discussion issue bootstrap including mentions vue anyone else runs many workarounds", "d": "5/2018"}, {"body": "bbugh really nt solve tried make component generic possible still wrapping class", "d": "5/2018"}, {"body": "regarding bug scoped introduce js outside manipulate elements add corresponding subelements elements time newly added subelements design style scoped removed used normally", "d": "5/2018"}, {"body": "manipulate elements manually case encapsulate really lowlevel dom operations like directives", "d": "5/2018"}, {"body": "sad closed also would like able clear default slot content empty slot eg default separator slot sometimes iterated components may htmltags break float css styles also clean use empty tags would logical use empty template using vif quite verbose exists override default value behaviour logical else one define template default content want default content shown simply remove empty template", "d": "5/2018"}, {"body": "updates nearly six months since gotten love vue contributor", "d": "5/2018"}, {"body": "relign try importing code", "d": "5/2018"}, {"body": "opened pr supporting functionalcomponents opened separate issue regarding making accessible functionalcomponents open pr feature request gets approved", "d": "5/2018"}, {"body": "hxfdarling", "d": "5/2018"}, {"body": "\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528vue\u65f6 import \u8fdb\u6765\u5373\u53ef", "d": "5/2018"}, {"body": "hxfdarling", "d": "5/2018"}, {"body": "\u4e0d\u8981\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u5373\u53ef", "d": "5/2018"}, {"body": "definitely add note documentation today spent half hour trying figure nt work problem documentation custom events event names states reasons recommend always use kebabcase event names always like always unless emit event add note also documentation custom events sync modifier would change example use property multiple word name single word nt help problem andor add note event name incosistency previous recommendation always use kebab case page", "d": "5/2018"}, {"body": "good suggestions put issue vuejsorg repository go unnoticed issue old closed", "d": "5/2018"}, {"body": "done", "d": "5/2018"}, {"body": "yeah ran times copypasting click logic warning would nice though admittedly quick google leads solution", "d": "5/2018"}, {"body": "issue version example fast clicking button see chrome de tools performance monitor nodes listener removed", "d": "5/2018"}, {"body": "commenting year old closed issue hardly noticed please file real bug report", "d": "5/2018"}, {"body": "already", "d": "5/2018"}, {"body": "warning error console either", "d": "5/2018"}, {"body": "marktnoonan mentioned css grid issue make crazy", "d": "5/2018"}, {"body": "njleonzhang worth though nt tried yet recently learned portalvue feel workaround may possible relatively easy many cases component structure vue needs different dom structure want actually end looking forward playing post demo get time create clean example wanted go ahead share library anyway others maybe check", "d": "5/2018"}, {"body": "markbrouch currently make grid items one component provide customize component try next time tnx information", "d": "5/2018"}, {"body": "running issue thedutchcoder ever get workaround", "d": "5/2018"}, {"body": "include svginnerhtml make work svgs", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "think change von click submit von click submit", "d": "5/2018"}, {"body": "gufnz trying call function named nt render anything want output string use single quotes", "d": "5/2018"}, {"body": "dsignr see source boolean value case checkbox still attribute set least time writing nt checked", "d": "5/2018"}, {"body": "checked gt checked", "d": "5/2018"}, {"body": "worth work justtesting computed value giving true general computers mess things things named case attribute checked computed value checked still looking clear example using checkboxes combination vuex", "d": "5/2018"}, {"body": "nuxt bash route error find module pagesindexjs e gitrepodoumidoumivipweb functionmoduleexports sync doumivipweb resolve r doumivipweb vueserverrenderer functionrequireensure e arraymap arraymap flatmapcomponents resolveroutecomponents getroutedata setcontext createapp moduleexportswebpackexportsdefault doumivipweb vueserverrenderer", "d": "5/2018"}, {"body": "interests think using object instead function vice versa worked properties properties needed functions verb prefixes eg instead would little confusion would even better vue got rid inside functions added another parameter documentation could remove warnings functions nt support additionally would fewer invalid bugs reported", "d": "5/2018"}, {"body": "thank casbloem solved problem sth like", "d": "5/2018"}, {"body": "yeah feels like extreme solution change rendering engine able set content breadcrumb child template workarounds pretty", "d": "5/2018"}, {"body": "actually simplesmiler herringtondarkholme might need way reuse render logic templates without messing data context another parallel mechanism definitely increase complexity think better introducing something like reuse template pieces", "d": "5/2018"}, {"body": "zeromaster viettranme add script tags using jquery documentcreateelement workaround use javascript let stripscripttag", "d": "5/2018"}, {"body": "including property fixed issue", "d": "5/2018"}, {"body": "tried listening change event nt able work around bug one experience trying work around bug still happening ios ios chrome app", "d": "5/2018"}, {"body": "still problem vue project may ios native autofill trigger vue models update workaround wrote directive update vue model inputs form input receives javascript native onfocus event ios autofill triggers onfocus event share code feel free improve include project autofillcatchjs directive form template notice vautofillcatch directive form element mainjs included directive globally project", "d": "5/2018"}, {"body": "new build review pr", "d": "5/2018"}, {"body": "sniffing code avoid mock cases posva fnlctrl", "d": "5/2018"}, {"body": "update", "d": "5/2018"}, {"body": "accomplished throught customized context fieldjs import consumer mixinscontext export default consume return showrequiredcolumn showrequiredcolumn noleftpadding noleftpadding mixinscontextjs copied herringtondarkholmevueadvancedprogramming renamed transplanted mpvue import lodash import get lodashfpget const getoptions get vnodecomponentoptionsctoroptions const consume vm token gt let parent vm const ret parent const context parent context context amp amp context token const value get context token return value retpush value parent parent parent return ret undefined const exposecontext vm gt const options getoptions vm optionsexpose return optionscomputed context gt optionsexposecall vm vm const consumecontext vm gt const options getoptions vm optionsconsume return const consumemap isfunction optionsconsume optionsconsume optionsconsume optionscomputed optionscomputed foreach consumemap token key gt optionscomputed key gt consume vm token export const exposer beforecreate exposecontext beforeupdate exposecontext export const consumer beforecreate consumecontext beforeupdate consumecontext", "d": "5/2018"}, {"body": "also agree casting null would make sense number contract get back number ca nt number null abrogation contract", "d": "5/2018"}, {"body": "found issue searching thing still nt answer though think want implement exactly thing like way table component element library used straightforward wanted implement something similar less features well know simple table component neat api really confused reading element source code plenty jsx seems like way achieve similar component interface without hacks", "d": "5/2018"}, {"body": "issue year old today would use provideinject functionality issue closed please use forumvuejsorg questions", "d": "5/2018"}, {"body": "still running error ie edge", "d": "5/2018"}, {"body": "lot trouble see high use case least thought would personally card ui carries background inside card content uses cases background text however others would like use link changes background link also component html looks like according documentation work would could pass json make html component using however need access cms resizeimage functions ca nt targets instance rather component case even work firing instance seems impossible avoid using vue element use native javascript created guess nt exactly vue way edit made new component add native javascript mount mounted function var vm hacky vue wish way bubble event inside slot", "d": "5/2018"}, {"body": "holy shit toms mixing php vue punishable death code horribly unmaintainable", "d": "5/2018"}, {"body": "danonk hardly think punishable death fair justify using php cms nt rest api want use vue luckily nt deal code writing", "d": "5/2018"}, {"body": "facing problem currently creating modal contain form components modal contain tag call modal component like place loginform component inside modal component inside loginform component place anchor tag close modal log methods close emit close however button working whenever click button get error stuck already tried suggestion justineo make work idea", "d": "5/2018"}, {"body": "hi using vuejs need create indexvue page product people number text box drop list fixed mean product props may tried add html element using vhtml seems wise way offered use components sounds little complicated confusing looking sample good example thanks advance", "d": "5/2018"}, {"body": "could nt potentially implemented inserting comment node", "d": "5/2018"}, {"body": "fix problem idea regarding", "d": "5/2018"}, {"body": "actually vue reporting bad error console issue dont know tackle problem", "d": "5/2018"}, {"body": "also concerned enlarging apis convenience since also handles case iteration objects nt arrays would indeed value directive iterating eg objects properties direct property etc fact iterator empty seems much symmetrical vifvelse current case iterate properties easy without necessarily needing express template iterator implemented since vfor iterate anyway extending keep boolean emptynotempty rendering empty branch loop content never touched iteration helpful straightforward performant calling objectkeys obj length even template includes understanding iterator implementation empty iterator branches also precedence template languages used far current way seems quite clumsy especially since binds template implementation detail iterator wo nt really get better using component method either key part translations available", "d": "5/2018"}, {"body": "native solution user declare default value promise resolved vue support builtin throttle promise handle events like keychange mousemove even promisebased implementation throttled events makes sense particular scenarios imho tangential main use case would sufficient add minimal core implementation lets asynchronously fetch data absolute minimum amount boilerplate see clever unexpected semantically correct uses people put vue support builtin callback certain promise resolved provide scenario necessary opposed normal vueagnostic use promises seems good way without expanding api surface inspect whether async property resolving resolved default value callback resolve good enough core minimal use case overall vueasynccomputed step right direction core support would major step forward seeing promises asyncawait core part language workflow", "d": "5/2018"}, {"body": "yarn installation problem although specified exact version yarn seems install latest version vuetemplatecompiler cleared yarn cache removed nodemodules folder luck got job done", "d": "5/2018"}, {"body": "got error due comments containing angle braces outside one singlefilecomponents eg file vue readme component alternative", "d": "5/2018"}, {"body": "refs reactive could also watched", "d": "5/2018"}, {"body": "behavior reverted long discussion", "d": "5/2018"}, {"body": "nickmessing nt cover really useful use case described inplace modification input text input box want always formatted like phone user entered text would automatically format seems like basic feature difficult right behavior already exists framework reason restricted frameworkonly code want able add custom modifier would reusable across components projects like filters directives right", "d": "5/2018"}, {"body": "pls change delimiters using vue webpacksimple new vue delimiters el app render h gt h app nt work pls help move delimiters vue use template example nt add delimiters new vue use template", "d": "5/2018"}, {"body": "drasnop fires well children rendered use case rendering array objects vuex store nt know matters fyi anyone else seeing thing", "d": "5/2018"}, {"body": "example could make computed property returning array instead like javascript computedclass let res storestatebodycolor storestatemenu respush navisopen return res", "d": "5/2018"}, {"body": "consider set escape vue observe procedures today met case vue observe map instance mapboxgl weird things happed map get lighter map instance need passed vue instances add problem resolved", "d": "5/2018"}, {"body": "trying watch changes occur based input fields workaround suggested nt apply would really nice limitation removed api newvalue oldvalue properties reflect mutations bound objects example list nested tables inline editable properties able watch root array deep set true diff changes", "d": "5/2018"}, {"body": "still possible ca nt find transition attribute anymore component", "d": "5/2018"}, {"body": "codeofsumit talking list yes possible check doc need class transitiongroup", "d": "5/2018"}, {"body": "maxirozay talking transitioning change list enter leave like text want change background color seconds text changes", "d": "5/2018"}, {"body": "fnlctrl workaround either using exaggerated expression template writing getter object check initialized seems right using typescript vue complicates even one denote objects approach work status issue upcoming release", "d": "5/2018"}, {"body": "thanks update stumbled across thanks everyone good work", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "locking going happen", "d": "5/2018"}, {"body": "thread old know option get removed", "d": "5/2018"}, {"body": "yes", "d": "5/2018"}, {"body": "curiosity would mind sharing reasoning", "d": "5/2018"}, {"body": "facing issue working solution", "d": "5/2018"}, {"body": "set properties element imperatively need dispatch native event force bound data update different elements need different event types element event type property change checked change checked input value inputvalue changeselected", "d": "5/2018"}, {"body": "eddyerburgh tried solution working scenario pls see completed details scenario getting error indexvue uncaught typeerror thiscartformitem n dispatchevent function", "d": "5/2018"}, {"body": "trying several options function worked thanks avijit gupta function copy var output v key output arrayisarray key v key output key typeof v object copy v v return output following works var name name name var b copy var c copy b name consolelog c name", "d": "5/2018"}, {"body": "sharing use case need assign callback attribute object noticed jsonparsestringify approach clone callback functions used lodash clone end", "d": "5/2018"}, {"body": "wanted watch data props emit vmodel together single object ended going", "d": "5/2018"}, {"body": "maybe another solution could", "d": "5/2018"}, {"body": "evan solution already best slight adaptation avoid array construction", "d": "5/2018"}, {"body": "thread seems bikeshed lot answers already provided let stop nt get worse prevent spamming around people see solutions", "d": "5/2018"}, {"body": "solution proposed hcysunyang looks like kind hack misleading seems like something vuerelated fact arbitrary key using would work well confirm intended correct way achieving maybe remove event listeners vue dom management guarantee memory leak issues", "d": "5/2018"}, {"body": "currently loading problem returns invalid template error image load gives errors point fix somewhere", "d": "5/2018"}, {"body": "syntax current version vue simply", "d": "5/2018"}]