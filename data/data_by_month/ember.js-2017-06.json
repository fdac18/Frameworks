[{"title": "css files fetched twice production mode", "body": "generated new project using ember cli order debug issue seeing production application css files fetched twice running production mode screenshot network tab chrome shows behavior nt see behavior nonember applications maintain curious causing behavior also see deployed application livereload running nt appear related help issue diagnose source duplicate css rendering would helpful thanks", "num": "15432", "d": "6/2017"}, {"title": "embercopy ignores graphql meta fields introspection fields", "body": "graphql return meta fields introspection fields prefixed hence copied embercopy right option implement copy function extract function could overwrite implementation ignore graphql specific fields", "num": "15431", "d": "6/2017"}, {"title": "return none promise routemodel hook cause linkto component active unexpected", "body": "tried create jsbin demo quite sure worked got simple demo replace resources template display none color black aactive color red application outlet ticketfilters model item linkto ticketfilterstickets itemid itemid linkto linkto ticketfilterstickets itemid queryparams itemid linkto linkto ticketfilterstickets itemid queryparams itemid linkto var app emberapplicationcreate rootelement app approutermap function thisroute ticketfilters function thisroute tickets path filterid appindexroute emberrouteextend actions didtransition function thisreplacewith ticketfilters appticketfiltersroute emberrouteextend model function return id id appticketfiltersindexroute emberrouteextend actions didtransition function thisreplacewith ticketfilterstickets appticketfiltersticketsroute emberrouteextend queryparams page refreshmodel true model function return slow resolve promise works fine thing want use cached objects sometime return appcontainerregistryregister template application emberhtmlbarscompile templateapplication html appcontainerregistryregister template ticketfilters emberhtmlbarscompile templateticketfilters html problem like linkto ticketfilterstickets linkto ticketfilterstickets got active behave url ca nt find happened find model hook return slow resolve promsie everything works fine", "num": "15422", "d": "6/2017"}, {"title": "addobserverforcontentkey performance", "body": "hi ran issue debug builds taking ages run using test data somewhat large arrays tracked believe already issue earlier problem content arrayproxy native array arraytostring blow things know fixed release builds able test app large datasets good", "num": "15421", "d": "6/2017"}, {"title": "api reference website page working", "body": "trying view methods class page click methods nothing appears presume content methods index panel", "num": "15405", "d": "6/2017"}, {"title": "reload route clicking active linkto helper", "body": "suppose particular route reached using linkto helper click button want route reload need using nested components within route modifies template want click linkto button refresh template basically reloading route one method setting preventdefaultfalse reloads whole page", "num": "15393", "d": "6/2017"}, {"title": "ember server start", "body": "ran quick start hangs warning prevents thing running also would nice either tell version node actually needs installed andor include recipe quick start makes sure right node version", "num": "15388", "d": "6/2017"}, {"title": "assertion failing staging environment build development modified twice single render issue", "body": "prerequisites using matters model hotel relationship many many receiving assertion error breaks staging environment nt affect us developing localhost via property computed property returns fetch main image hotel added logging method gets called find recompute main image never called computed method property looks similar const promiseobject ds const rsvp promise ember image embercomputed images function const id thishasmany images ids store get store id already loaded resolve promise storehasrecordforid image id return promiseobjectcreate promise promiseresolve storepeekrecord image id hotel imgincache else fetch return promiseobjectcreate promise storefindrecord image id catch gt noimages return image object return promiseobjectcreate promise promiseresolve noimages hotel noimgfound thing happens call hotelhoteloptionssomeproperty anything like computed property simply relationship assuming part breaking image issue happens first", "num": "15377", "d": "6/2017"}, {"title": "passing component class component helper", "body": "think feature request tried pass component class component helper hoping would work silently fails renders nothing thing possible hard would make work find weird something powerful component helper able easily generate input contextual component javascript side look compute function helper see expecting either string component definition component definition exactly importantly possible generate one component class without much effort ideally using public api thank", "num": "15370", "d": "6/2017"}, {"title": "lts tag npm", "body": "would possible add lts similar tag applicable releases npm particular usecase come working embertry would convenient able test thencurrent lts release instead manually keep lts semver string date scenario definition imagine could useful others well certainly enough justify slight administrative overhead", "num": "15363", "d": "6/2017"}, {"title": "input helper component longer accepts content input input crashes", "body": "upon upgrading builtin input component longer accepts content might reasonable crashes component cryptic console error rather failing build providing useful error entirely sure template prior versions lt built ran fine upon upgrading however simply pattern page crashes component error error input found catchall block handler nt handle objectdebugassert assert blockscompile compilerscompile inlineblocksplat inlineblockcompile vminvokeblock appendopcodesevaluate vmnext vmexecute vmresume tryopcodehandleexception updatingvmframehandleexception updatingvmthrow throw assertevaluate updatingvmexecute renderresultrerender rootstatethisrender objectrunintransaction interactiverendererrenderroots interactiverendererrenderrootstransaction interactiverendererrevalidate invokewithonerror queueflush deferredactionqueuesflush backburnerend backburnerrun objectrun actionstatehandler htmlanchorelement htmlbodyelementdispatch htmlbodyelementelemdatahandle would nice pattern caught build least notification somewhere pattern illegal", "num": "15361", "d": "6/2017"}, {"title": "loadingerror templates found catchall routes reproduction", "body": "catchall route uses promisehash return model catchall route also errorloading template showing still loading never get used twiddle show happening change route doesntexsist see timeout route show loading substate", "num": "15355", "d": "6/2017"}, {"title": "debug advanced debugging install ember inspector", "body": "upgraded morning environment seeing errors seems like small regression happening", "num": "15354", "d": "6/2017"}, {"title": "wrong depreciation url modelfactoryinjections removed", "body": "url changed quick pr emberjs something fixed docs ref", "num": "15352", "d": "6/2017"}, {"title": "module unification feature flag", "body": "basic support module unification already exists ember however two parts functionality require minor changes eventually want glimmerdi replace ember container however blocking module unification task seems unwise instead feature flag iterative step unblock progress even implementation nt exact final form want feature flag exist flag two pieces functionality local lookup still investigation may minor changes required properly support local lookup ember resolver api module unification namespaces aka support mu addons example invoking component adding service dependency supporting mu namespaces given component invoked like call today codepath blocked assertion assertion removed ember would call pretty much nonsense could parsed avoiding string parsing remangling avoided additionally adding special sigils syntax lookup strings desired especially since public api glimmerdi lands would ideal simply pass partial specifier example however goal feature flag continue using ember container exists today avoid adding public api avoid messing strings private api container proposed something like api whatever internal machinations required get namespaced string property lookup container let us move forward addon support module unification without adding public api serialized path passed resolver absolute specifier serialized requires knowledge ember module unification config temporary abstraction leak eventually plugged glimmerdi supporting partial specifiers lookups lastly whatever current assertions using component service names exist must moved main ember codebase existing resolvers ember default resolver emberresolver classic resolver may need assertions added regarding lack support namespaces", "num": "15350", "d": "6/2017"}, {"title": "internal routing service exposed global apps", "body": "apps without embercli least one internal service accessible userland demonstrates available", "num": "15344", "d": "6/2017"}, {"title": "depracation new ember application", "body": "deprecation newly created ember application", "num": "15343", "d": "6/2017"}, {"title": "inline svg template scaling according viewbox", "body": "description put inline svg element inside emberjs template file attribute svg normally causes content scaled size containing svg viewport seems ignored causing content displayed viewport coordinates rather user coordinates screenshot repo created linked reproduced issue minimal ember app code divs first row result code placed second row result placing code route template issue seen happen dealing template files environment embercli node os darwin repro steps create ember app structure using embercli create index route using embercli add following code run app expected circle svg drawn based viewbox coordinates viewbox scaled best fit containing svg element since viewbox element widthheight ratio viewbox scale completely cover svg area result circle radius units defaults pixels thus diameter equal height width containing svg actual circle takes half width height svg element radius units pixels would expected attribute declared since circle coordinates would drawn relation viewport coordinates ie element repo created steps also added examples better illustrate issue wrapped svgs easier visual comparison made elements width height note interesting note issue seems happen svg declared inline inside template repo linked also copied code changing border color containing viewbox correctly scaled case", "num": "15336", "d": "6/2017"}, {"title": "testing initializer injecting service", "body": "writing unit test controller expects service injected initializer every controller controller test failing service controller method twiddle demonstrates behavior ay duplicate ember changed lot since", "num": "15335", "d": "6/2017"}, {"title": "memory leak ember partials", "body": "rendering partial multiple times keeps adding entries glimmerenvironment cache causing memory leak eg click showhide button notice value keeps going", "num": "15334", "d": "6/2017"}, {"title": "input fields cursor jumps automatically end webpage served xhtml", "body": "bug emberjs helper using xhtml format cursor automatically jumps end keydown example generated app removed content rename plus changes links order opened inside dropbox open directly browser file textareas input field directly built html tags affect issue", "num": "15333", "d": "6/2017"}, {"title": "pods keeps components helpers found", "body": "appears issue resolver pods support steps reproduce embercli embercli ember cli sends analytics information default data completely anonymous times might want disable behavior disableanalytics false usepods true configenvironmentjs eslintenv node moduleexports function environment var env moduleprefix testapp podmoduleprefix testapppods environment environment rooturl locationtype auto emberenv features enable experimental features ember canary build eg withcontroller true extendprototypes prevent ember data overriding dateparse date false environment development envapplogresolver true envapplogactivegeneration true envapplogtransitions true envapplogtransitionsinternal true envapplogviewlookups true environment test testem prefers envlocationtype none environment production return env podsuserroutejs import ember ember export default emberrouteextend model return firstname steve podsusercontrollerjs import ember ember import validatepresence emberchangesetvalidationsvalidators export default embercontrollerextend validators name validatepresence true actions save changeset podsusertemplatehbs validatedform model changeset model validations onsubmit action save submitlabel save f finput label first name name firstname fsubmit label save validatedform expected result form element save button actual result", "num": "15331", "d": "6/2017"}, {"title": "improve computedsetdiff efficiency", "body": "application relies slowed considerably due current implementation quite inefficient lots entries many ember perform lot linear scans arrays could implementation refactored use set object supported major browsers ie offering support code fairly easy add something like js let seta thisget setaproperty let setb thisget setbproperty isarray seta return embera isarray setb return embera seta seta new set seta setb new set setb return setafilter x gt setbhas x", "num": "15329", "d": "6/2017"}, {"title": "error initial render causes nonglobals visit promise hang", "body": "preamble globals nonglobals mode nothing resolver instead refers applications autobooted amongst impacts globals applications set implies single running given app given test like following js import modulefor applicationtestcase autobootapplicationtestcase internaltesthelpers modulefor linkto helper class extends applicationtestcase test linkto helper throws useful error invoke wrong thisroutermap function thisroute post path post postid thisaddtemplate application following tests fail errors like application instance created call never destroyed way destruction supposed happen simple sets thisapplicationinstance test context successful transition teardown instance destroyed initial transition fails say exception raised model hook theory fine transition fails applicationvisit already takes care destroying instance test harness need know success cases however exceptions rendering cause initial promise fail schedules resolution visit promise afterrender exception rendering means nt run promise hangs instance destruction code never gets run nt happen globals mode apps globals mode apps set deprecatedinstance property render globals mode destroyed uses property destroy applicationinstance nonglobals applications nt set property similar instancetracking system fail destroy called application propose track instances creates array upon destruction destroy would permit applications fail initial rendering pass property torn references discovered porting test harness", "num": "15327", "d": "6/2017"}, {"title": "utilize sans addon", "body": "symmetrical question emberrouterscroll appears addon got folded ember core ca nt find documentation use within ember instructions per addon nt work fwiw emberjs", "num": "15324", "d": "6/2017"}, {"title": "defining property ember component named container causes exception production build ember", "body": "hi recently encountered issue upgrading ember nt see anything ember guides docs please correct missed seems add container property component get following error serving app production build ember documented would happy contribute seems could also handle exception informative message track source bug able track source help post put together demo repo ember reproduces bug reproduce run put dist folder running server run local node server like", "num": "15322", "d": "6/2017"}, {"title": "bug input focusout event missing", "body": "hi action called focusout receives current value event sent follow path inside sendaction value sent user action happens events call directly thissendaction use internal sendaction defined textsupport sends value think event always sent", "num": "15320", "d": "6/2017"}, {"title": "searchbar chinese support problem", "body": "type english worked fine changed chinese type result showed", "num": "15313", "d": "6/2017"}, {"body": "aware race scenario could provide reproducible example would love debug seeing", "d": "6/2017"}, {"body": "also see deployed application livereload running share built indexhtml", "d": "6/2017"}, {"body": "stefanpenner html cssember", "d": "6/2017"}, {"body": "stefanpenner default indexhtml edited steps reproduce issue network panel new project", "d": "6/2017"}, {"body": "interesting also seeing chrome firefox browser using", "d": "6/2017"}, {"body": "stefanpenner using google chrome version", "d": "6/2017"}, {"body": "stefanpenner saw post double css loading chrome css links generated ember app integrity attribute also tested firefox noticed double loading problem us well", "d": "6/2017"}, {"body": "ya suspect chrome bug integrity checks", "d": "6/2017"}, {"body": "may need disable default", "d": "6/2017"}, {"body": "stefanpenner way disable integrity attribute via build param disable chrome releases fix", "d": "6/2017"}, {"body": "brandonwtrility two ways remove loose integrity add tag avoids double load problem", "d": "6/2017"}, {"body": "stefanpenner removed emberclisri package checked problem resolved seems good temporary solution thanks suggestion", "d": "6/2017"}, {"body": "brandonwtrility recommendation updated add tag avoids double load problem also think may want change embercli blueprint default", "d": "6/2017"}, {"body": "stefanpenner excellent take suggestion cleaner cli upgrade path thanks help", "d": "6/2017"}, {"body": "brandonwtrility thanks reporting totally unaware issue", "d": "6/2017"}, {"body": "viniciussbs believe design changing would likely result breakage could see us changing symbols fully supported across target environment meantime may need rely alternatively copy function", "d": "6/2017"}, {"body": "thinking extracting current behavior function default implementation dev could overwrite new function implementation needed would change something like javascript function isgraphqlkey key let keys typename return keysindexof key function isemberinternalkey key return keysubstring amp amp isgraphqlkey key would rely instead checking implement copy function though", "d": "6/2017"}, {"body": "twiddle", "d": "6/2017"}, {"body": "duplicate", "d": "6/2017"}, {"body": "hello krnbatta closing since emberjs bug please go help channel slack registered use slackin app thank", "d": "6/2017"}, {"body": "hi thanks letting us know problem future reference likely go guides issue tracker asked one support channels since support question warning prevents thing running would say warning appropriate might work might also problems also would nice either tell version node actually needs installed andor include recipe quick start makes sure right node version error message say version install mostrecent active lts moment also install ember section links full installing ember guide details hope give ember another try ca nt switch node moment ember cli released upcoming days support node", "d": "6/2017"}, {"body": "update even happens relationships sideloaded include param json api says calling render twice looking hotel modelisloaded property", "d": "6/2017"}, {"body": "sorry keep adding ticket able fix issue adding check method component checking isloaded property relationship somehow fixes obviously desirable wanted keep ticket update code added component fixes issue nt even know begin debug", "d": "6/2017"}, {"body": "starting concern another completely separate app removed nodemodules folder fresh npm install places starting something change way gets handled nt previously happening relationships get loaded called template syntax somemodelrelationshipproperty", "d": "6/2017"}, {"body": "found due update emberdata changing emberdata version fixed issue", "d": "6/2017"}, {"body": "thank thorough reporting links issues let track problem ember data issues", "d": "6/2017"}, {"body": "mean pass component class", "d": "6/2017"}, {"body": "artificial exemple clarify", "d": "6/2017"}, {"body": "would feature request would need go rfc process described contributing guide input still easily generable using string somecomponent", "d": "6/2017"}, {"body": "thank serabe pointing however string cut lot situations would save day could pass partially instantiated component third party library component parameters possible htmlbars javascript", "d": "6/2017"}, {"body": "bad idea rwjblue chancancode think", "d": "6/2017"}, {"body": "ya seems reasonable", "d": "6/2017"}, {"body": "loading substate sibling template loaded switched route nested inside would show transitioning child routes cc alexspeller", "d": "6/2017"}, {"body": "would add loadinghbs application route seems like nt make sense edit clarity works routes actually defined catchall routes catchall issue", "d": "6/2017"}, {"body": "tsteuwer sample application catchall route top level meaning path catchall route route expected behaviour sure behaviour running unexpected", "d": "6/2017"}, {"body": "look twiddle added saying route work ca nt catchall without first creating another route index", "d": "6/2017"}, {"body": "tsteuwer think route needs called look guides page see lookup hierarchy loading routes", "d": "6/2017"}, {"body": "confirm seeing errors rather console log messages right", "d": "6/2017"}, {"body": "ah yes sorry clear anything critical causes logged rollbar every page load filling quota pretty quickly", "d": "6/2017"}, {"body": "confirm seem error app also", "d": "6/2017"}, {"body": "looking couple days simple projects something like shell npm install g embercli ember new project add route couple links reproduce please vladucu pedrokost share information projects thank", "d": "6/2017"}, {"body": "comment checks incognito mode ember extension enabled machine thanks", "d": "6/2017"}, {"body": "thanks trying replicate issue serabe today unable duplicate issue nt appeared production past days change time issue last present unrelated commit unable invest much time end week meantime attaching photo rollbar showing errors occurred also also find source code app specifically packagejson file", "d": "6/2017"}, {"body": "new build ember version changed access diff prod versions thanks", "d": "6/2017"}, {"body": "ember version never nt change seems issue started commit commit enabled sourcemaps upgraded changed realized another report rollbar showing issue much frequent previously thought unfortunately nt tag production deploys tend deploy regularly almost commit pinpoint exact commit", "d": "6/2017"}, {"body": "seem able replicate issue production app opening page incognito mode seems come file bodyclassjs emberbodyclass library", "d": "6/2017"}, {"body": "vladucu use rollbar well seems emberdebug returns reason", "d": "6/2017"}, {"body": "serabe yes use rollbar manually ignored errors new build ember version changed access diff prod versions really upgrade noticed", "d": "6/2017"}, {"body": "opened pr fix link", "d": "6/2017"}, {"body": "closed cc rwjblue", "d": "6/2017"}, {"body": "need remove line appjs related pull request sure released embercli version", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "solution issue anyone looking attribute actually capital b looks like chrome parsed element corrected badly named attribute made render properly hand inserted dom ember get treatment browser attribute simply ignored curse chrome trying help hiding dumb mistakes", "d": "6/2017"}, {"body": "thank sharing solution", "d": "6/2017"}, {"body": "based unit integration tests run initializers need unit test something like using explicitly generally better leads understandable code", "d": "6/2017"}, {"body": "thanks reporting including nice reproduction fwiw test canary uses pretty different architecture within glimmer slated ember issue nt exist", "d": "6/2017"}, {"body": "fixed lts", "d": "6/2017"}, {"body": "mention bug also affect", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "addonon using pods structure refactored use default structure resolved problem", "d": "6/2017"}, {"body": "supported ember currently supports ie im mistaken would polyfill added im sure would", "d": "6/2017"}, {"body": "could existing implementation used ie sucks performance wise work", "d": "6/2017"}, {"body": "ensure compatibility two different algorithms worth core team", "d": "6/2017"}, {"body": "would nt polyfill already present later script usage weakset", "d": "6/2017"}, {"body": "yes addon still needed rfc ember simply made addons job tad bit easier allowed rely public apis specifically believe step usage instructions readme longer needed ember since nt really bug ember going close issue lets continue discussion", "d": "6/2017"}, {"body": "awesome thank sat jun pm robert jackson notifications githubcom wrote yes addon still needed rfc ember simply made addons job tad bit easier allowed rely public apis specifically believe step usage instructions readme longer needed ember since nt really bug ember going close issue lets continue discussion dollarshaveclubemberrouterscroll receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "hit bug pretty frustrating hit good error message triggers error even didinsertelement way debug using standard console errors finally happens production build times long takes forever track addition strange occurs production actually kind scary difficult know else might going wrong production difference builds moved dev looked great production completely failing without reasonable way trace error essentially unbuild entire app multiple components issue completely unprecedented kind bug track", "d": "6/2017"}, {"body": "show code reproduce", "d": "6/2017"}, {"body": "homehtml \u804a\u804a item", "d": "6/2017"}, {"body": "sorry mean code implementation text box", "d": "6/2017"}, {"body": "homehtml", "d": "6/2017"}, {"body": "homets import component angularcore component templateurl homehtml export class homepage items constructor thisinitializeitems initializeitems thisitems amsterdam bogota buenos aires cairo dhaka \u4eba\u6c11 geneva genoa glasglow hanoi hong kong islamabad istanbul jakarta kiel kyoto le havre lebanon lhasa lima london los angeles madrid manila new york olympia oslo panama city peking philadelphia san francisco seoul taipeh tel aviv tokio uelzen washington getitems ev reset items back items thisinitializeitems", "d": "6/2017"}, {"body": "enough", "d": "6/2017"}, {"body": "well using emberjs suggest try googling problem file issue ionic angular necessary please close issue", "d": "6/2017"}, {"body": "ok", "d": "6/2017"}, {"body": "closing thank yo cryrivers", "d": "6/2017"}, {"body": "yes switch methods tab thers nothing", "d": "6/2017"}, {"body": "known bug current implementation nt addressed transitioning emberapidocs check", "d": "6/2017"}, {"body": "locks shall close", "d": "6/2017"}, {"body": "confirm thanks reporting sorry confusion", "d": "6/2017"}, {"body": "reopening issue fully solved need way app blow still looking way without logging defaulting empty value", "d": "6/2017"}, {"body": "glad ember moving classes used react moved classes large improvement native classes get rid super problems entirely", "d": "6/2017"}, {"body": "fastfedora big blocker us decorators going push forward call day", "d": "6/2017"}, {"body": "question rwjblue occur master", "d": "6/2017"}, {"body": "believe longer use single shared object time freeze new object fine", "d": "6/2017"}, {"body": "see makes sense thanks looking", "d": "6/2017"}, {"body": "thanks empathy sides writing using platforms understand line needs walked understand actual behavior due implementation rfc may need created implement fix willing write rfc makes sense also limited time issue recognized bug wo nt waste time two issues actual behavior different expected behavior actual behavior breaks principle encapsulation expected behavior would every property bound template would operate fact one property behaves differently unexpected even makes sense implementation perspective mentioned actual behavior depends implementation computed property used implementations model updates template fine others nt update makes ember apps use computed properties model unpredictable need examine implementation determine update fragile changes implementation cause template updates silently break happy write rfc something recognized problem good chance addressed caveat project using ember another month long process wo nt around see meantime specific usecase created asynccomputed function allows properties updated template though right used objects arrays scalar values", "d": "6/2017"}, {"body": "hello borispetrov closing since emberjs bug please go help devrouter channel slack registered use slackin app thank", "d": "6/2017"}, {"body": "bumping bins shows issue", "d": "6/2017"}, {"body": "going released npm", "d": "6/2017"}, {"body": "yep released npm time bower roughly hours ago", "d": "6/2017"}, {"body": "rwjblue could please clarify packages need update fix console error created embercli app thanks", "d": "6/2017"}, {"body": "alexanderkapelyukhovskiy embersource atleast believe", "d": "6/2017"}, {"body": "confirm", "d": "6/2017"}, {"body": "nt embersource npm dependencies updated bower ember package looks like helped error however strange error left think nt connect subject issue one question issue due usage bower package fix remove bower project", "d": "6/2017"}, {"body": "alexanderkapelyukhovskiy upgraded time ago like noticed bower packages moved npm get list changes bowerjson packagejson like looks like embernewoutput yet basically", "d": "6/2017"}, {"body": "robishere alexanderkapelyukhovskiy ah forgot bower version ember bower also resolve issue", "d": "6/2017"}, {"body": "implement emberapplicationinstance emits useful information avoids circular reference", "d": "6/2017"}, {"body": "jamesdixon ping", "d": "6/2017"}, {"body": "left comment", "d": "6/2017"}, {"body": "work arounds getting issue code looks like appcontrollerswidgetinstancesjs javascript import ember ember const computed ember export default embercontrollerextend applicationcontroller emberinjectcontroller application widgetcontroller emberinjectcontroller widget shop computedreadonly applicationcontrollermodel widget computedreadonly widgetcontrollermodel instance computedalias model configurationslug computedreadonly widgetcontrollerconfigure testsunitcontrollerswidgetinstancestestjs javascript import modulefor test emberqunit modulefor controller widgetinstances unit controller widgetinstances specify units required test needs controller foo test exists function assert const controller thissubject assertok controller error", "d": "6/2017"}, {"body": "djones work around issue", "d": "6/2017"}, {"body": "locks thanks response fix error", "d": "6/2017"}, {"body": "even comment get indicates application controller specific seems work fine browser tests", "d": "6/2017"}, {"body": "closing according triage policy please provide reproduction follow thank", "d": "6/2017"}, {"body": "problem violation added nonpassive event listener scrollblocking mousewheel event consider marking event handler passive make page responsive", "d": "6/2017"}, {"body": "related question", "d": "6/2017"}, {"body": "remove events via app needs events use passive listeners mousewheel touchstart touchmove events block scroll via preventdefault matter passive listening add didinsertelement remove willdestroyelement component", "d": "6/2017"}, {"body": "closing according triage policy please provide reproduction follow thank", "d": "6/2017"}, {"body": "looks like fixed", "d": "6/2017"}, {"body": "confirm adamjmcgrath", "d": "6/2017"}, {"body": "sorry middle pacific back september", "d": "6/2017"}, {"body": "work adamjmcgrath check today", "d": "6/2017"}, {"body": "sorry delay confirm working twiddle behaves thanks letting us know", "d": "6/2017"}, {"body": "leooo yes ember though something fixed", "d": "6/2017"}, {"body": "long shot ran issue accidentally overriding native ember object class via something like causing model hook called fail reason exception thrown mentioned dynamic segments present think similar alvincrespo mentions comment", "d": "6/2017"}, {"body": "lrdiv yeah think happening", "d": "6/2017"}, {"body": "brunowego yeah error getting case seems misleading exception actual bug", "d": "6/2017"}, {"body": "workarounds implemented inside routes trying use determine users authenticated redirect login query parameters get back issue blocking", "d": "6/2017"}, {"body": "think something like would", "d": "6/2017"}, {"body": "alexspeller tried based suggestion query parameters still dropped", "d": "6/2017"}, {"body": "query param defined controller", "d": "6/2017"}, {"body": "nt use controllers nt use know deprecated", "d": "6/2017"}, {"body": "erichiggins incorrect ca nt use query params without controllers deprecated fact using autogenerated avoiding controllers ember point", "d": "6/2017"}, {"body": "alexspeller ok thanks heads could point documentation query params needing defined controllers order redirects pass along must missed", "d": "6/2017"}, {"body": "nothing redirects redirect thing probably red herring query params defined controllers work look guides section query params explains use", "d": "6/2017"}, {"body": "adding following controller route worked hopefully helps others worth documentation redirecting state query parameters must declared destination controller mentioned query parameter docs probably missed making explicit docs may help ember newbies like", "d": "6/2017"}, {"body": "anyone coming across search seems work attribute please check docs info", "d": "6/2017"}, {"body": "ksnyde disable app level using event delegation would breaking change events passive subset events prevent scroll preventdefault maybe event handling code plugin adding listener mousewheel touchstart etc common dragzoom code", "d": "6/2017"}, {"body": "would love see fix done currently updating app quit big passing fix deprecation warning run tests app gon na hard know refactoring done correctly", "d": "6/2017"}, {"body": "years changed legacy addon longer solution adding id application object results wrapping elements instead one mess child elements become grandchild elements breaking styling hierarchy element needing targeted generic extreme ember app wrap redundant justincase solution legacy sites yet lead ineverycase layout styling black hole every ember site since element foundation stone site hack workaround required achieve semantic styling desired leaves feeling like used microsoft frontpage build heart app styling methods see others employ achieve letterbox holy grail layout reminiscent decade ago even wellestablished styling options flexbox employed targeting via pseudoelement css selector index leaves site mercy addon dynamic element injection emberwormhole potentially hijacking site styling reason emberapplication class also fulfil needs wrap perhaps including emberview class edit workaround option anyone else adores handicap means fullpage region use flex fluid responsive layout caters browser issues would need scss emberapplication display flex minheight flexdirection column height width emberview firstchild display flex minheight flexdirection column height width", "d": "6/2017"}, {"body": "issue well tell null causing incorrect cache key set transitioning slow model loading template object undefined parent route setup method condition never fulfilled", "d": "6/2017"}, {"body": "still seems issue ember passing property helper cause helper recompute composition array changes eg add item remove item severe limitation workarounds pleasant", "d": "6/2017"}, {"body": "offtopic landed symptoms check problem mentioned faced situation model seems reloaded though setupcontroler fired see changed data conttroller strange could see changed data ember inspector really happened findall promise model event resolved immediatelly existing store data setupcontroller fired old data meantime store reloading api effect call refresh twice get data available controller solution add reload true findall params", "d": "6/2017"}, {"body": "pwfisher thanks would note scratched head looking code realized needed instead also helped", "d": "6/2017"}, {"body": "stumbled across still missing complementary would pr adding methods accepted", "d": "6/2017"}, {"body": "replaced never looked back set component helper route service need", "d": "6/2017"}, {"body": "rwjblue solution implemented yet somehow custom helpers still act arrays mutated without passing another property like array length ember", "d": "6/2017"}, {"body": "know issue old closed legitimate reasons like example like wrap functionality around component provided addon passed block allowing layoutname without error ignoring bit confusing using ember cli", "d": "6/2017"}, {"body": "kanderek yes came across behaviour though", "d": "6/2017"}]