[{"title": "emberarrayproxy method", "body": "think array sort function", "num": "11936", "d": "7/2015"}, {"title": "mut helper change value", "body": "ember experiencing following component dropdown menus using new mut helper value attribute dropdown option trigger update value component declaration output html case select either nothing dog update respectively however selecting cat value nothing want note modelpet attribute type number", "num": "11932", "d": "7/2015"}, {"title": "suggestion update deprecations page oneway info", "body": "turns nt simple mechanical translation semantics different javascript var old emberobjectextend xbinding emberbindingoneway modelx var oldcreate emberrun set model x oget x gt emberrun set x string oget x gt string emberrun set model x oget x gt magic note binding remains nt get clobbered compare javascript var new emberobjectextend x embercomputedoneway modelx var n newcreate emberrun n set model x nget x gt emberrun n set x string nget x gt string emberrun n set model x nget x gt string cp gets clobbered understandable behavior guessing uses form controllers gets set bindings got refreshed controller singleton though new world means work either create cp mimics old style move setting properties etc rate think deprecation warning given seems suggest matter switching syntax writing mention might merit discussion", "num": "11931", "d": "7/2015"}, {"title": "problems linkto child dynamic segment", "body": "description ember route setup like approutermap function thisroute groups function thisroute group path id function thisroute child thisroute thisroute intent want reusable navigation component renders want able use component route example expect able link without passing anything dynamic segment would expect model hook gets called model hook gets called problem various scenarios give unexpected inconsistent results particular case tries transition nonexistent route app steps reproduce fiddle case group route skipped click groups link note route hooks click child link gets weird note transition logged note route hooks like route skipped entirely template nt render even activate hook fires note route hooks note errors case group route ok click link note template pass value dynamic segment click child link note route hooks note route hooks see called expected note route hooks note errors case broken linkto click link note template pass value dynamic segment script error template never renders open browser console see strange error caused ember attempting render", "num": "11930", "d": "7/2015"}, {"title": "dynamic segments nested routes working", "body": "nested route structure routerjs thisroute maps path maps function thisroute show path id function thisroute display path display thisroute layers function thisroute create understanding route mapsshowdisplay take single dynamic segment like however go transition link ie maps route aftermodel function resolvedmodel var newestflight resolvedmodelcontent var newestmap newestflightget map thistransitionto mapsshowdisplay newestmap get error makes even weirder route accepted dynamic segment mapsdisplay nt understand nesting breaks ideas wrong would greatly appreciated edit interestingly awesome tool also seems agree dynamic segment post route", "num": "11928", "d": "7/2015"}, {"title": "lost bindings amp silent deprecations", "body": "running hard explain behaviour cp w getter setters however able recreate twiddle pretty sure defect least suspect best answer may instead change behaviour cp setters feel must stay true documented bad juju twiddle fully commentary run test warning odd please wear safety belts problem thought consisting two stages stages problem represented component exposes cp part api stages two sets buttons one set butttons passes value api returned value expect js setter second set buttons pass value api get different value back seems allowed functionality ember cp backed unit tests computedtest stages stage stage one use buttons return different values works way ember seems specified even changing value setter may considered bad practice js issue deprecation warning good starts anyone heading path wondering stage nt property displayed template value set first button press binding component breaks deprecation warning stage never shows things silently go dark also worth noting stage may fact coder starts case therefore fumbling around long time got deprecation message", "num": "11927", "d": "7/2015"}, {"title": "computed properties recalculate destroyed objects", "body": "work project encountered problem caused computed property recalculated component destroyed removed dom flag isdestroying set true looks undesired recalculate bunch computed properties destroyed objects since may cause exceptions performance issues maybe design jsbin give better insight problem", "num": "11926", "d": "7/2015"}, {"title": "regression attempted register view id already use", "body": "see following jsbin click several times get error uncaught error assertion failed attempted register view id already use labelid component idlabelid rendered twice template condition ensures one element id moment working jsbin ember ps condition inside loop seems important reproduce issue pss tried test ember could make work ember could find helper", "num": "11925", "d": "7/2015"}, {"title": "need expectwarn test helper", "body": "similar handler checking right happened test lead stronger tests therefore even stronger codebase", "num": "11924", "d": "7/2015"}, {"title": "ember api docs", "body": "way access ember api docs", "num": "11923", "d": "7/2015"}, {"title": "click event lost element redrawn", "body": "see working example app input field receives focus added dom also list items whose value depends value input field click element list click event simply lost problem value input element changed causes list redrawn somehow click event lost redrawing list items fiddle", "num": "11922", "d": "7/2015"}, {"title": "nt include computed unchanged properties", "body": "computed properties nt show called object instance also applies properties explicitly initialized via fall back default values declared prototype example properties nt even seem show called instance surely way find given object instance properties including computedunchanged properties", "num": "11921", "d": "7/2015"}, {"title": "component parameters observers triggered one changes", "body": "setup log changes inside components like get change sharedparam see fiddle small differences depending updated value parent view one components may causes logic issues performances issues parameter updated often worst case infinite loops example parameter change triggers ajax request turn modifies another parameter", "num": "11920", "d": "7/2015"}, {"title": "documentation isevery clear", "body": "returns true passed property resolves value second argument items enumerable method often simplerfaster using callback expectation based definition isevery name olivier false result true isevery method follows implementation javascript every iterator definition ember doc could bit better", "num": "11916", "d": "7/2015"}, {"title": "component rerendering properly", "body": "resizing output viewport underover limit updates template accordingly version update template displays updated value version version", "num": "11915", "d": "7/2015"}, {"title": "didinitattrs uses array across two instances component", "body": "created jsbin shows basically add two objects array didinitattrs component component page renders correctly see jon one sam two add component page twice bin continues add array previous component use array correct behavior bug expected components behave distinctly", "num": "11913", "d": "7/2015"}, {"title": "ca nt extend linkcomponent", "body": "tried extend linkcomponent like followed doc get error message jsbin bad idea extend linkcomponent reopen", "num": "11912", "d": "7/2015"}, {"title": "documentation metaissue improve api docs", "body": "checking api docs realized lot opportunity improve documentation examples issue serve coordination point check sister ember data issue instructions checklist temporary notes current preselection", "num": "11911", "d": "7/2015"}, {"title": "using applicationview results warning", "body": "since views deprecated suggested way replace", "num": "11909", "d": "7/2015"}, {"title": "setting attribute null removes attribute", "body": "previously attribute null removed element test attributes added element see jsbin migration htmlbars boundstyle attributes work anymore see jsbin test attributes renders instead test case htmlbars project assume works pure htmlbars related issues", "num": "11907", "d": "7/2015"}, {"title": "best practice views deprecated setup dom application template", "body": "hi quick question onward best practice say want add class application template renders class top level div used creating application view adding custom attributes noview way also applies route views guess heart", "num": "11906", "d": "7/2015"}, {"title": "mousedown blocks focusout event", "body": "looks like mousedown triggered element focusout nt triggered previously focused element element nt even lose focus setup twiddle ember corresponding fiddle equivalent functionality jquery working jquery ember assuming mousedown blocks focusout actually triggered twidde vanilla jquery equivalent", "num": "11904", "d": "7/2015"}, {"title": "documentation rendering helpers comparison tables missing headers", "body": "comparison tables bottom rendering helpers section documentation missing view column header version docs nt issue", "num": "11901", "d": "7/2015"}, {"title": "twice repeated classname", "body": "ember call component rendered html", "num": "11899", "d": "7/2015"}, {"title": "deprecate remove function argument emberassertdeprecateetc", "body": "following throw deprecation message something like functional arguments ambiguous constructors please use constructors iife compute deprecation value future version ember functions treated truthy values instead executed needs deprecated stable removed beta", "num": "11898", "d": "7/2015"}, {"title": "route transitionto url bug", "body": "hello use transitionto pass url inside current route redraw goes another route", "num": "11896", "d": "7/2015"}, {"title": "ember reorder query params url", "body": "hello ember url random ordered query parameters ember sort update url also push previous url random ordered query params history hit back button browser moves page random ordered query params", "num": "11894", "d": "7/2015"}, {"title": "route named select renders outlet", "body": "create route named select dom node rendered instead template named selecthbs app folder ember version ember cli routerjs selecthbs inside templates folder", "num": "11893", "d": "7/2015"}, {"title": "value input helpers appears blank latest firefox", "body": "firefox chrome", "num": "11892", "d": "7/2015"}, {"title": "nested subroutes broken", "body": "im using eager loading sub routes made new ember cli project demo bug example foo foobar routes work expected foobarbaz route nt render correct loading template automatically fallback templatesfoobarbazindexhbs templatesfoobarbazhbs nt found change templatesfoobarbazindexhbs templatesfoobarbazhbs baz render templatesfoobarbazloadinghbs used loading state let know anything else help debug", "num": "11888", "d": "7/2015"}, {"title": "deprecate embercollectionview", "body": "process needs additional fixes added cc martndemus", "num": "11887", "d": "7/2015"}, {"title": "action target specific component", "body": "targeting action specific component working anymore currently using latest ember js release ember complete environment application template overlayfx viewname appoverlay open opensidemenu overlayfx overlayfx component import ember ember import layout templatescomponentsoverlayfx export default embercomponentextend actions action handler enable component catch send actions outher components open function childviewname thissendaction open childviewname sidemenu component import ember ember import layout templatescomponentsoverlayfx export default embercomponentextend actions open function childviewname thissendaction open thisget viewname application controller import ember ember export default embercontrollerextend actions opensidemenu function childviewname consolelog something find code example jsbin bit sluggish nt recommend", "num": "11886", "d": "7/2015"}, {"title": "helper updating changes", "body": "component following template code js componentssortablelistjs export default embercomponentextend preservescroll initsortable function var refreshed false var didinsertelement destroysortable function sortable destroy willdestroyelement updateitemorder function key idx var items thisget items var item itemsfindby id key thisbeginpropertychanges itemsremoveobject item itemsinsertat idx item thisendpropertychanges one templates problem sort items gets called updating array list rerendered used work moved code route view component", "num": "11880", "d": "7/2015"}, {"title": "containerlookup instanceinitializer causes read property lookup undefined error", "body": "container longer available applicationinstance passed instance initializers issue introduced commit setting feature either nt appear effect example instance initializer exhibits issue ember data", "num": "11879", "d": "7/2015"}, {"title": "query params fail route name object prototoype", "body": "given following router query params fail firefox function object prototype offending line easily avoided changing route name tricky figure probably guarded", "num": "11877", "d": "7/2015"}, {"title": "embermap embertemplatecompilermap missing bower package", "body": "hello ember team current release source map files missing ember embertemplatecompiler even referenced end js files checked bower package release page thanks", "num": "11876", "d": "7/2015"}, {"title": "must use emberset set property", "body": "setting binding property route run everytime enter new route works fine first time enter route second time enter route get error going", "num": "11873", "d": "7/2015"}, {"title": "blog post", "body": "ticket summary items discussed release post repo followers please consider guarantee even prediction behavior place notes issue locked keep us focused commit bit please edit description deprecations breaking changes deprecations", "num": "11872", "d": "7/2015"}, {"title": "attributesbindings set id", "body": "following code work", "num": "11871", "d": "7/2015"}, {"title": "ember helpers nt seem work", "body": "tried creating ember helper using made generated code return simple string attempted use inside template unfortunately though template render fails occurring inside function called inside", "num": "11870", "d": "7/2015"}, {"title": "autocorrect working input helper mobile safari", "body": "created input field attribute autocorrect ignored open page mobile safari tested real iphone ios also using simulator various iphone ios versions page contains two elements type textfield autocorrect feature still present type standard html input autocorrect feature disabled also created jsbin demostrate", "num": "11869", "d": "7/2015"}, {"title": "option get shorthand helper array refire item property change", "body": "using array new shorthand helper would possible optionway get refire property item array changes js bin demonstrates trying press test knows property changedis interest list updates still says purple change first value purple start displays found purple ok like way tell helper refire value item array changes text would also change purple found purple understand could write computed observer observe model eachvalue thought would see whether would ever considered whether always computedobserver thing", "num": "11867", "d": "7/2015"}, {"title": "select issue hover pressing modifier key chrome", "body": "seems following behaviour presents chrome firefox ie work fine element plain html tag list dropped mouse pointer hovered option selected press say shift key appears though option selected however clicking another application outside browser item stays semiselected ways item displayed box dropping list see value still previous one event also fired testers picked performing screen prints since option nt actually selected appears incorrect data submitted", "num": "11865", "d": "7/2015"}, {"title": "debugging run loop stacktraces dev friendly possible add function arguments", "body": "hello debugging ember cumbersome due run loop stack trace always useful understand part application code exceptions come line number data used example regular exception every new release ember overwrite emberdebug following lines tells object created exception property getting set naive ask objects could added embererror stacks possible technically sure javascript strict mode routine would systematically add arguments function called context would cover cases maybe try add information frequent errors run loop thanks", "num": "11863", "d": "7/2015"}, {"title": "emberselect value property stops working three changes", "body": "simple fiddle demonstrates problem template view select contentsitems valuesvalue slabel application var items item item windowapp emberapplicationcreate windowappapplicationcontroller embercontrollerextend sitems items svalue items slabel embercomputed svalue function return thisget svalue items picked item picked item tested verified bug exists number browsers ie chrom ium firefox safarai number different platforms os x windows linux exhibit behavior changing value element three times data binding stops working", "num": "11862", "d": "7/2015"}, {"title": "help entry undefined", "body": "may issue run ember without parameters got error end output watcher string default events aliases w launch string default false comma separated list browsers launch tests reporter string test reporter use tapdotxunit aliases r testpage string test page invoke help entry undefined ember update updates embercli newest available version ember version version", "num": "11860", "d": "7/2015"}, {"title": "dynamic segments query params loading state produces error", "body": "route dynamic segment query parameter child route slowloading model loading template error occurs nondefault query parameter provided please see clicking click button produces error error occurs error occur occurs likely culprit", "num": "11857", "d": "7/2015"}, {"title": "emberviewreopen guide binding data attributes nt work since updated ember", "body": "put code form guide application route upgrade start use attributes like works fine nt work upgrade must put attributes one one missing something", "num": "11849", "d": "7/2015"}, {"title": "route queryparams replace work refreshmodel true", "body": "route queryparams replace work refreshmodel set true open jsbin live preview enter something input field submit input modify query parameter refresh template several times back button pass trough submit history expected something wrong", "num": "11843", "d": "7/2015"}, {"title": "update calls include required options", "body": "needed full implementation emberjsrfcs implemented criteria add options hash calls add property hash property comprised package name short code deprecation ie additional criteria add property hash property string value ember version behavior deprecated removed defaulted initial pr subsequently updated review work list x x x x might include bunch tests x x x x x x x x commit updating given package next day two please comment claiming package working ready please submit pr prefix comment pr number followup steps x make required done calling locations updated provide options x make required done calling locations updated provide options", "num": "11835", "d": "7/2015"}, {"title": "fixed element id", "body": "dynamically generated element id attributes pose big challenge automated test function test tool like selenium work around problem using attributes think straightforward method fixing element id dom structure change config ember achieve help greatly appreciated", "num": "11834", "d": "7/2015"}, {"title": "computed properties new gettersetter mixin nt access inheritor properties properly", "body": "particularly unusual computed properties mixin alter target property based upon another property code works fine old syntax regiontop embercomputed key value previousvalue gt target get isscalecomponent assetcmpregionmodelscaletop else regionmodeltop argumentslength gt set target value get target property isscalecomponent assetcmpregionmodelscaletop regionmodeltop regionleft embercomputed key value previousvalue gt target get isscalecomponent assetcmpregionmodelscaleleft else regionmodelleft argumentslength gt set target value return get target property isscalecomponent assetcmpregionmodelscaleleft regionmodelleft changed following regiontop embercomputed isscalecomponent assetcmpregionmodelscaletop regionmodeltop set key value gt prop get isscalecomponent assetcmpregionmodelscaletop else regionmodeltop set prop value get gt prop get isscalecomponent assetcmpregionmodelscaletop else regionmodeltop get prop regionleft embercomputed isscalecomponent assetcmpregionmodelscaleleft regionmodelleft set key value gt prop get isscalecomponent assetcmpregionmodelscaleleft else regionmodelleft set prop value get gt prop get isscalecomponent assetcmpregionmodelscaleleft else regionmodelleft get prop isscalecomponent property inheriting component noticed get isscalecomponent different getter setter appears correct set wrong get pointing another component hard time debugging context component mixin component may causing issue sorry ca nt reproduce ca nt find working fiddlebin example work", "num": "11831", "d": "7/2015"}, {"title": "appears toggling inherited checkbox enables private members api docs", "body": "", "num": "11830", "d": "7/2015"}, {"title": "input readonly attributes added even readonlyfalse", "body": "migration ember found inputs broken site readonlyfalse attribute renders markup jsbin could please fix", "num": "11828", "d": "7/2015"}, {"title": "considering cherrypicking linkto component integration tests fix", "body": "originally noted embertesthelpers issue ember using component integration tests component issue fixed emberjs released ember cycle however many us still making transition ember ember many addons still implementing changes necessary glimmer compatibility specifically shim embereasyforms nt work glimmer going rewrite ember without changes provided emberjs ember limits ability stay uptodate embertesthelpers take advantage extremely helpful component integration tests generated default embermocha emberqunit possible cherrypick aforementioned pr issue realize outside realm normally ember ecosystem think large one many community warrants consideration thanks consideration cc rwjblue", "num": "11825", "d": "7/2015"}, {"title": "one way binding effective initializing", "body": "hi seems embercomputedoneway effective initializing original value modified dependent value refreshed jsbin type value input field submit qp qpfield synced click leave moment qp set null click back index original value qp null qpfield yet holds stale value", "num": "11823", "d": "7/2015"}, {"title": "observer bound property within component invoked twice since", "body": "create component property binding within component add callback observes bound property embed component parent template hook binding field parent controller update property parent controller component observer callback invoked twice example open console click next previous button logged correct whereas logged twice incorrect works fine ember broken", "num": "11821", "d": "7/2015"}, {"title": "containerview template broken without addon", "body": "maybe fine nt thought much yet container view template uses work mixonic opinion also conditionally exported addon present", "num": "11818", "d": "7/2015"}, {"title": "emberselect stops updating value property couple option changes introduced", "body": "aware emberselect deprecated soon odd bug seen latest release given simple select box two options bound display current value everything works fine select option got changed times moment bound attribute nt updated anymore kinda breaking thingies thanks amazing work project though", "num": "11817", "d": "7/2015"}, {"title": "instance initializer called testing", "body": "using embercli javascript import ember ember import module test qunit import startapp insmuitestshelpersstartapp var application module acceptance basetemplateinitialize beforeeach function application startapp aftereach function emberrun application destroy test image template added store function assert var store applicationcontainerlookup store main var templates storeall template toarray filterproperty displayname image assertequal templateslength test checks fixtures got added store instance initializer breakpoint instance initializer get hit test run ideas", "num": "11811", "d": "7/2015"}, {"title": "patternindexof function", "body": "noticed uncaught error upgrading app canary found came docblock specifies string also checks type string calling tests appear test string anyway debugging edited ember source app moved call inside conditional received seems reasonable something must calling wrong however looking cause observers app correct restarted error went away unable replicate happy submit patch make behavior user friendly needed alternatively maybe someone else hit error add details issue", "num": "11803", "d": "7/2015"}, {"title": "passing computed property component template results memory leak", "body": "using ember following example results components stuck state app adds removes items model frequently html using computed alias shown fixes issue suspect bug someone wants work would like memory profile dumps provide", "num": "11802", "d": "7/2015"}, {"title": "deprecate using getset global lookup path", "body": "global lookup x deprecate global lookup x deprecate global lookup special meaning x deprecate special meaning x deprecate special meaning strict arguments x deprecate strictly passing two arguments object keyname x deprecate strictly passing three four arguments object keyname value optional tolerant flag", "num": "11789", "d": "7/2015"}, {"title": "app fails start onready tests fail", "body": "exists scenario boot ready occurs application throw exception currently happens may fail given test likely race qunit ready subscription apps likely best way solve test framework use promise promise represents apps full initialization may alreayd partially exist failure cause propagate error", "num": "11785", "d": "7/2015"}, {"title": "remove context switching support", "body": "remove non scenarios remove", "num": "11784", "d": "7/2015"}, {"title": "action helpers component bubbling", "body": "think seeing bug helpers supposed bubble past component wraps background made json inspector using components loop keyvals routes one depending typeof passed object prints key calls display value prints index calls display value finally displays value right side click formatted json output bubble pathroute value ex component action sends path problem click passing path back nested components using passed action like triggers action higher level sending highershorter path problem observed note path path sent original context thispath path currently logging message click bruce wayne output get jiprimitive path yourvar batman name thispath yourvar batman name jiobject path yourvar batman name thispath yourvar batman jiobject path yourvar batman name thispath yourvar gt stop nt passes higher context jiobject path yourvar batman thispath yourvar batman jiobject path yourvar batman thispath yourvar jiobject path yourvar thispath yourvar jsbin", "num": "11783", "d": "7/2015"}, {"title": "add check subscription action", "body": "would great method could check controller subscription action try trigger parent action check expression trigger action dependency data receive example propose create new method something like", "num": "11781", "d": "7/2015"}, {"title": "remove support", "body": "remove remove fix tests intentionally testing deprecated format delete tests intentionally testing deprecated format", "num": "11780", "d": "7/2015"}, {"title": "remove emberview support using emberlegacyviews addon", "body": "export following set x removed x removed x removed x removed x removed x removed add following ast transforms set x x x add following keywordshelpers set x x x fix tests trollface", "num": "11775", "d": "7/2015"}, {"title": "remove single arg", "body": "transformsingleargeach remove registered ast plugins remove tests explicitly testing deprecated functionality update tests use noncontext switching form", "num": "11773", "d": "7/2015"}, {"title": "remove deprecated ast transform", "body": "remove remove", "num": "11772", "d": "7/2015"}, {"title": "ember regression linkto regression using queryparams route name", "body": "change linkview linkcomponent linkto behavior changed specifically behavior changed using linkto queryparams route example previously app could long lived link parent route link would respect route changes child outlets longer case instead linkto causes route transition whatever route happened link rendered done bit digging appears property linkcomponent set nt change route changes therefore clicking link cause route transition match whatever happened link rendered jsbin help illustrate issue steps reproduce issue using jsbin click authenticated link click open drawer link linkto queryparams route name drawer open right clicking close drawer close drawer change current route click child transition authenticatedchild click open drawer drawer open app transition authenticated route stayed authenticatedchild", "num": "11769", "d": "7/2015"}, {"title": "shorthand helper block nt rerender promise forfilled", "body": "written helper allows check whether least one element array property equal given value helpershasanyjs import ember ember param array iterate param comparison operator use currently supports gt lt param value check optional param property arrayobject check supplied element array checked directly returns true array least one match value export function hasany params var compare function b operator operator return b operator gt return gt b operator lt return lt b return false paramslength lt return false paramslength params foreach function item compare item params params return true return false params foreach function item consolelog itemget params params params compare itemget params params params consolelog returned true return true return false export default emberhelperhelper hasany used components template point component loaded notificationaccount retrieved api already accountcontacts first see console show undefined john api get hit consolelog shows john john returned true know helper returns false initially true second time guessing seems like nt get rerendered second time html see unsure setup js bin showing using api reproduces using one get next level objects ember ember data ember cli", "num": "11768", "d": "7/2015"}, {"title": "component linkto tabindex nt toggle based component property tabindex starts", "body": "tabindex starts linkto component bound component property linkto tabindex nt toggle based component property even though property toggling updating dom see jsbin example see jbin proper tabindex toggling based state required writing accessible components", "num": "11763", "d": "7/2015"}, {"title": "consider making public", "body": "private api one use frequently applications programmatically get current route model mostly convenience especially useful writing reusable route code needs get current route model though private see", "num": "11760", "d": "7/2015"}, {"title": "consider making public", "body": "private api one use frequently applications programmatically get current route name pass along public apis especially useful writing reusable route code needs know current route name", "num": "11759", "d": "7/2015"}, {"title": "beta anglebracketcomponents detect mutative apis attrs", "body": "believe build time warning failure using mutative apis attrs angle bracket components react props mutated well tooling around suggests mutate props example shows mutating arrays objects arrays clearly worst mutating objects object properties propagated becomes hard reason attrs mutated passed along utmost shorten conceptual gap static program dynamic process wink", "num": "11757", "d": "7/2015"}, {"title": "handlebars helpers docs missing since", "body": "noticed today handlebar helpers docs gone missing since released intentional", "num": "11755", "d": "7/2015"}, {"title": "ember component", "body": "extend custom component extend embercomponent mixin hooks didinsertelement willdestroyelement called need inherited class really shor bug", "num": "11753", "d": "7/2015"}, {"title": "think broke travis", "body": "see", "num": "11752", "d": "7/2015"}, {"title": "bug release amp beta detached dom trees application runs", "body": "trentmwillis believe memory leaks arise running acceptance tests new application instance created test resulted able run test suite tests end end simply run memory fall reproduce run tests repro repo see something like following acceptance tests ran series listeners nodes continue rise drop fraction gc comes along heap snapshot taken see several detached dom trees well tested update looking stef last night concluded dom nodes retained per test test harness ui adds row however seems retention app instances certain cases cc stefanpenner wycats repro repo", "num": "11748", "d": "7/2015"}, {"title": "emberbeforeobserver missing", "body": "please see console output", "num": "11742", "d": "7/2015"}, {"title": "hasblock available component init", "body": "initialising component want checker whether called block called block parameter set component works fine template following code behave expected component js export default embercomponentextend init function thissuper possible would consider bad practice", "num": "11741", "d": "7/2015"}, {"title": "component helper allow rendering builtin input components", "body": "example throw error uncaught error assertion failed use textarea component name component names must contain hyphen see jsbin probably exception done builtin components reason rendered using component helper", "num": "11740", "d": "7/2015"}, {"title": "breaks component unit tests", "body": "moving unit tests breaking bit hard nail exactly happens random places context test set nil test renders function assert var subject thissubject gt typeerror thissubject function object objectwrapper objecttestrun process begin dropping debugger test context clearly different", "num": "11738", "d": "7/2015"}, {"title": "undefined embercomputedmap callback", "body": "undefined callback worked latest beta", "num": "11736", "d": "7/2015"}, {"title": "arrayproxy plays poorly array undefined elements", "body": "trying insert element arrayproxy whose content preset like attempt insert element target index finding length array increasing instead swapping value target value example expect following jsbin illustrates", "num": "11734", "d": "7/2015"}, {"title": "cleanup emberget", "body": "x remove support globals x remove support x enforce strict usage two arguments assert object nonnull object amp path string", "num": "11733", "d": "7/2015"}, {"title": "component hook yielded content change", "body": "current version ember using none component lifecycle hooks fire yielded content component change created bug application refactored component one received content attributes block component handlebars lifecycle hooks fire model changes docviewer articlemodel hooks longer fire docviewer model markup things docviewer fact lifecycle hooks nt fire makes sense component changed however seems like valid use case whenever yielded content changes dommanipulating behavior occur syntax highlighting updating urls article another example someone wanted create isotope wrapper component wondering works react components like magic move appears changing inner content works fires hooks like sure next wondered liquidfire handles sort thing uses windowmutationobserver watch changes component element call didmutate hook current workaround using would possible practical add hook would work better practice handle use case", "num": "11731", "d": "7/2015"}, {"title": "ember didinsertelement fired rerender worked", "body": "works expected production environment recently upgraded lesser stage came according doc didinsertelement called element view inserted dom view rerendered nt happen anymore recent version rerender trigger didinsertelement component parent template relevant part component coffee contentframe embercomponentextend contentchanged emobserver content gt consolelog observer works correctly calls rerender rerender didinsertelement gt consolelog get called rerender called however work initial insert worked", "num": "11729", "d": "7/2015"}, {"title": "bug anglebracketcomponents unstable top level elements", "body": "following jsbin weird behaviors event handlers become detached top level dom becomes unstable reason believe due helper top level element noticed class names get concated existing class may reasoning around event handlers removed repro", "num": "11728", "d": "7/2015"}, {"title": "bug anglebracketcomponents boolean attrs coerced strings", "body": "sure expected repro", "num": "11727", "d": "7/2015"}, {"title": "ember route nt refresh model paging", "body": "using ember w data route js approutesitemsjs import ember ember export default emberrouteextend queryparams page refreshmodel true nt work ajax sent data nt updated nothing happens fixed add js appcontrollersitemsjs import ember ember export default emberarraycontrollerextend queryparams page gives deprecation warning deprecation emberarraycontroller deprecated new ember probably something wrong could help", "num": "11726", "d": "7/2015"}, {"title": "tagged builds displayed", "body": "likely something wrong nt time review detail would love help nt time track atm", "num": "11725", "d": "7/2015"}, {"title": "routable components status", "body": "two weeks stable release wondering status routable components aware routable components pushed back release however appears soonest land fine becoming confusing people need controllers still ergonomics around pretty lousy explain numerous people taken training ebryn routable components thing coming sooner land better nt consider programming model complete perhaps wait months like htmlbars trollface cc tomdale wycats", "num": "11721", "d": "7/2015"}, {"title": "component helper documentation missing", "body": "documentation existed since helper moved longer documentation", "num": "11720", "d": "7/2015"}, {"title": "ember component functional initializing component self", "body": "upgraded latest version ember noticed potential issue component function observes outercontext attribute actually initialized even actual component initialized ember version demonstrate following hbs inserts testcomponent previous version ember testcomponentjs previous versions ember alert used work successfully however current version ember selfthis variable referred window object component thought due feedloadedchanged function initialized component self initialized current version ember current version ember made following changes didinsertelement captures self component variable self original alert function called variable exist code fixes issue javascript export default embercomponentextend didinsertelement function var self selfset self observes parentcontrollerfeedloaded sequence alerts occurrs application loaded feedloadedchanged feedloadedchanged self initalized feedloadedchanged feedloadedchanged self initalizedtrue original alert initialization component function component self issue locks irc chat recommend using new component lifecycle hooks", "num": "11719", "d": "7/2015"}, {"title": "ember infinite loop deprecation warning triggered", "body": "trying upgrade addon trying run test fixture upgrade branch testing component block form like component block form ember goes infinite loop spitting following deprecation warning matter anything within block run test component nonblock form test executes would cause infinite loop", "num": "11718", "d": "7/2015"}, {"title": "deprecations exist prodmin builds", "body": "", "num": "11717", "d": "7/2015"}, {"title": "drop willmergemixin stuff actions supporting actions methods", "body": "lukemelia always kind buggy often resulted people needing use actions", "num": "11716", "d": "7/2015"}, {"title": "applymergedproperties assertion jsonstringifies value", "body": "applymergedproperties assertion calls jsonstringify value regardless use message objects unless known json safely stringified without error entirely unrelated assertion", "num": "11715", "d": "7/2015"}, {"title": "property designated mergedproperties mutate prototype set create", "body": "value merge originalvalue value", "num": "11714", "d": "7/2015"}, {"title": "remove root application view", "body": "toplevel application outlet virtual default like outlets would make styling easier cases would also need applicationview override tag name put application template needed would breaking change needs happen", "num": "11712", "d": "7/2015"}, {"title": "testing component addon fails", "body": "getting error trying test component addon component test worked fine regular ember project test works remove function reproduced brandnew addon project gives error moving section rerunning works add function component rerun fails", "num": "11709", "d": "7/2015"}, {"title": "jsonapi", "body": "use jsonapiadapter jsonapiserializer responses like call get error", "num": "11704", "d": "7/2015"}, {"title": "typeerror read property template null", "body": "since get following error seems thrown somewhere deep htmlbars known problem investigate coming stacktrace", "num": "11703", "d": "7/2015"}, {"title": "use function template inside statement", "body": "code handlebars monthoptions option index option function", "num": "11702", "d": "7/2015"}, {"title": "ember array properly updating template", "body": "jsbin click button add item array loop template display new item exmaplearray show change visit distraction route return see examplearray updated", "num": "11701", "d": "7/2015"}, {"title": "property linkto helper nt update", "body": "ember could changed link class would change accordingly finding ember class set initially nt update dynamically changes jsbin", "num": "11699", "d": "7/2015"}, {"title": "test skipped firefox fix", "body": "", "num": "11698", "d": "7/2015"}, {"title": "uncaught typeerror skip function", "body": "", "num": "11697", "d": "7/2015"}, {"title": "uncaught typeerror skip function", "body": "", "num": "11696", "d": "7/2015"}, {"title": "jquery reference changes", "body": "trying migrate one issues seeing inside component longer ability get element using jquery also noticed undefined seems work tho think may related views deprecated read direct mention changes way jquery referenced inside components", "num": "11694", "d": "7/2015"}, {"title": "error run empty directory packagejson", "body": "howdy following ember tried make first ember app running lines top emberjscom experienced error new macbook pro switched shell created new empty folder installed node ran run got error include full output end issue understand went wrong miss step assumption already packagejson seem mentioned getting started page full paste console sh repospersonal cd keysplitui personalkeysplitui ember new keysplitapp version could find watchman falling back nodewatcher file system events visit info installing create bowerrc create editorconfig create embercli create jshintrc create travisyml create watchmanconfig create brocfilejs create readmemd create appappjs create appcomponentsgitkeep create appcontrollersgitkeep create apphelpersgitkeep create appindexhtml create appmodelsgitkeep create approuterjs create approutesgitkeep create appstylesappcss create apptemplatesapplicationhbs create apptemplatescomponentsgitkeep create bowerjson create configenvironmentjs create gitignore create packagejson create publiccrossdomainxml create publicrobotstxt create testemjson create testsjshintrc create testshelpersresolverjs create testshelpersstartappjs create testsindexhtml create teststesthelperjs create testsunitgitkeep create vendorgitkeep enoent open usersahoganrepospersonalkeysplituipackagejson error enoent open usersahoganrepospersonalkeysplituipackagejson error native", "num": "11693", "d": "7/2015"}, {"title": "routing conflict multiple routes", "body": "jsbin demo following definition js approutermap function put routes thisroute foo function thisresource baz thisroute qux resetnamespace true thisroute bar function thisresource baz thisroute qux resetnamespace true expect following routes available foobaz fooqux barbaz barqux route expect would link links seems though accepting last resource route comment routeresource works expected issue actually goes way back nesting resources well jsbin demo", "num": "11692", "d": "7/2015"}, {"title": "beta remove special case behaviors global paths", "body": "global lookup ember several special global behaviors based capitalization removed chains globals emberbinding globals embergeting global", "num": "11689", "d": "7/2015"}, {"title": "ca nt overwrite component template unit tests", "body": "get following error call without template compiler loaded", "num": "11688", "d": "7/2015"}, {"title": "textfield component shows character typed three times", "body": "jsbin create customized component would like rewrite property observer type character input field three times character stays happening connect property external property issue exist ember version canary version well", "num": "11687", "d": "7/2015"}, {"title": "positionalparams causing extra change notifications initial render", "body": "today must create component extract position args place means currently always dirty even initial render best results wasteful changeevents worse may cause hefty work amplification feel strongly need work hard ensure initial render fully formed initial state ideas extract positionargs static property readable creation component passed read positionargs prototype passed create feels icky qp cause much pain add positional args level note true also invalidate keys initial render also need solve tightly related", "num": "11686", "d": "7/2015"}, {"title": "embercli windows", "body": "thanks time looking got weird enoent error ran screenshot explain got enoent error windows nt make sense looking packagejson file desktop", "num": "11684", "d": "7/2015"}, {"title": "ensure needs correctly deprecated", "body": "", "num": "11683", "d": "7/2015"}, {"title": "sure itemview properly deprecated", "body": "", "num": "11682", "d": "7/2015"}, {"title": "emberselect nt update initial selection binding", "body": "emberselect without placeholder automatically selected first item content updated selection binding along looks like selection binding updated different item first option selected js bin replicating issue", "num": "11681", "d": "7/2015"}, {"title": "ember internals generating deprecation warnings way silence", "body": "get ton embercreate emberkeys deprecations even though using anywhere project reason usual approach silencing deprecations ca nt anything work case assuming coming within ember app even boots", "num": "11680", "d": "7/2015"}, {"title": "loader issue since", "body": "hello noticed issue regarding templatecompiler seems related changes loader package issue appear nwjs nodewebkit applications since compiling templates debug environment always get compileembertemplatecompilerjscompileemberhtmlbarscompile embertemplatecompilerjs successfully loaded found commit cause issue statement wrong nwjs applications also global object check htmlbarscompiler packages registered second loader registry missing main one leading error message checking undefined object fixes problem also simply removing isnode check still let tests succeed well sorry ca nt give jsbin demo since wo nt get errors running browser created github gist instead containing simple nwjs application demonstrate problem", "num": "11679", "d": "7/2015"}, {"title": "input action change fire", "body": "change event seem work actions input helper example range input example text input", "num": "11678", "d": "7/2015"}, {"title": "symbol supported type embertypeof returns object", "body": "emberjspackagesemberruntimelibutilsjs", "num": "11673", "d": "7/2015"}, {"title": "observable property didinsertelement willinsertelement etc", "body": "trying access component method hook fired error thrown create custom property make sure never call false seems like common enough pattern would encourage reactive programming example", "num": "11672", "d": "7/2015"}, {"title": "issue embercomputedoneway", "body": "link var user emberobjectextend firstname null lastname null nickname embercomputedoneway firstname var teddy usercreate firstname teddy lastname zeenny teddyget nickname teddy teddyset nickname teddybear teddybear teddyset firstname lucas teddyget nickname teddybear teddyget firstname lucas set seems change accordingly following code block behaviour comment code shows correct behaviour", "num": "11670", "d": "7/2015"}, {"title": "rerender function doest call render function", "body": "javascript import ember ember export default embercomponentextend render function buffer click function e thisrerender click component rerender called render wo nt called component work well previous version nt know bug feature", "num": "11668", "d": "7/2015"}, {"title": "regression property named buffer component comes null", "body": "output buffer null", "num": "11666", "d": "7/2015"}, {"title": "regression routesend longer unit testable", "body": "tested unit testing route actions via broken refers service conditional never hits sample test reproduce js appfooroutejs import ember ember const set emberset export default emberrouteextend actions update key value set key value testsunitfooroutetestjs import ember ember import modulefor test emberqunit const get emberget modulefor route foo unit route foo test action something function assert const expectedresult bar const route thissubject routesend update foo bar typeerror read property trigger undefined assertequal get route foo expectedresult sets value related", "num": "11663", "d": "7/2015"}, {"title": "rubygems", "body": "would possible release rubygems", "num": "11659", "d": "7/2015"}, {"title": "include license built assets supply info metadata files", "body": "dependant believe bowerjson packagejson need updated include license field homepage field points back repo find bowerjson packagejson generated someone point generated go fix", "num": "11658", "d": "7/2015"}, {"title": "generated controllers creating deprecated arraycontroller", "body": "creating route creating controller ember currently generates emberarraycontroller deprecated see issue using base jsbin", "num": "11657", "d": "7/2015"}, {"title": "regression link query params nt work", "body": "link query params used link actual route different query params nt work anymore sure new introduced since skipped version", "num": "11654", "d": "7/2015"}, {"title": "ember adds event listeners events app nt care", "body": "stupid run event handlers touch move mouse move app uses pointandclick navigation someone interested event add listener remove one interested anymore", "num": "11653", "d": "7/2015"}, {"title": "naming conventions table css", "body": "table exceeds width overflow cut read template column chrome", "num": "11652", "d": "7/2015"}, {"title": "dynamicallyadded angle bracket components nt recognized", "body": "component builds property string anglebracket components inside string printed unescaped component template would expect handlebars recognize anglebracket components however treated normal html tags sure bug something wrong functionality nt supported yet attached jsbin showing potential usecase issue", "num": "11649", "d": "7/2015"}, {"title": "bindings attributes passed helper inner component work properly ember", "body": "defined handlebars item index title edit title input valuetitle used following way array strings changing contents text field update property triggers observers component ember versions work fine jsbin demonstrates behaviour", "num": "11647", "d": "7/2015"}, {"title": "support model unwrapping action helper", "body": "ember nifty feature allowing decorators eg unwrapped action helper find decoration useful ember used bunch things throughout app itemcontrollers gone favour moving controllers components gotten harder one solution could use duck typing eg function exist call decorator unwrap thoughts related also curious private found useful various things eg decorators edit marked public", "num": "11645", "d": "7/2015"}, {"title": "safari amp actions native elements function statements must name", "body": "tldr seen demos rounds awesome new actions helpers combination native elements eg works great chrome safari results error event triggered jsbin examples input select raise error", "num": "11640", "d": "7/2015"}, {"title": "ember component observes triggered twice", "body": "observes property passed template observes function always called twice instead jsbin reproduceunderstand problem", "num": "11638", "d": "7/2015"}, {"title": "value bubbling back controller using didreceiveattrs vs didinsertelement", "body": "canary intentional setting properties didreceiveattrs bubble back controller level didinsertelement didreceiveattrs true property controller stays true didinsertelement true property controller gets switched false", "num": "11637", "d": "7/2015"}, {"title": "removal label bindings", "body": "opening issues spirt tell us private propertiesmethods using see public addon uses property example component looks like one could js appcomponentsinputgroupjs export default embercontrollerextend getbindingpath function return thisget valuebindinglabel however since htmlbars functionality seems disappeared property available info binding path basic principle exposing binding label something would considered part ember api public private strategy abandoned thanks", "num": "11635", "d": "7/2015"}, {"title": "make jquery optional", "body": "use jquery heavily like many reasons decoupling ember making optional would good idea long coreteam support tried track places used implications primary usage around events well auxiliary usage fairly easy replace hope primary use require insight people good knowledge browser difference event dispatching code missed something auxiliary use easier replace basic domoperations bootstrap code firefox outerhtml still needed firefox code findelementinparentelement code replacein code appendto code event listening location changes domlookup code getelementbyid lookup code library access remain even library optional friendly message jquery present code core library registration code view wrapper code code please add list missed something since jquery good patching browserdifference care must taken understand relied", "num": "11631", "d": "7/2015"}, {"title": "ember router nt know without routerrouter testing", "body": "line interacts oddly release channel edge testing call fails call nonsensically clearly passed however change works seems counter failure modes familiar ember error message since nt set subsequent call assertion failed call get targetstate undefined object posting primarily search engines", "num": "11610", "d": "7/2015"}, {"title": "avg detected virus", "body": "seriously doubt guys put virus code seem far legit monthly scan though came back thought guys know", "num": "11607", "d": "7/2015"}, {"body": "seems like although encourage people use proxy anymore", "d": "7/2015"}, {"body": "ember data uses", "d": "7/2015"}, {"body": "martndemus see bin sure good enough workaround another reason use arrayproxy uses emberarray give content arrayproxy sorting uses emberarray instancesort method also curious issue instead use rfc issue propose rough idea basically great place test waters see", "d": "7/2015"}, {"body": "pixelhandler ended snippet sure one api method missing warrants rfc issue", "d": "7/2015"}, {"body": "satchmorun perhpas make pull request website project see", "d": "7/2015"}, {"body": "pixelhandler sure like confirmation first intended expected behavior wrt seems likely maybe supposed behave face least people problem search might least stumble across issue less point", "d": "7/2015"}, {"body": "satchmorun emberjsemberjs issues mainly bug tracking least people problem search might least stumble across issue less point questions usage perhaps ask question stack overflow", "d": "7/2015"}, {"body": "london slack conversation discussed quite thoroughly believe growing consensus change cp syntax return value make consistent js setter think remaining issue preserve caching undefined value", "d": "7/2015"}, {"body": "either case think clearly defect currently x currently", "d": "7/2015"}, {"body": "duplicate", "d": "7/2015"}, {"body": "looks similar first blush hard imo detail greater though maybe close link", "d": "7/2015"}, {"body": "cp lazy nt recalculate suspect eager observer runschedule code causing cp consumed", "d": "7/2015"}, {"body": "seen jsbin", "d": "7/2015"}, {"body": "seems work properly beta unless misinterpretting console output", "d": "7/2015"}, {"body": "issue arraycomputed reducecomputed well behaved cp nontrivial fix part unlikely backported", "d": "7/2015"}, {"body": "confirm works properly beta checked sorry time thanks help", "d": "7/2015"}, {"body": "sorry time thanks help need sorry sorry bug exists thanks reporting", "d": "7/2015"}, {"body": "orkon message seems catching bug nonunique ids introduce variety unexpected behaviors", "d": "7/2015"}, {"body": "mixonic ca nt remove element id create different place id nonunique id never rendered twice boolean condition ember thinks plus rewritten like works use case app render component either separately first item list course find workaround looks like kind bug", "d": "7/2015"}, {"body": "orkon since released today tested jsbin example still see issue", "d": "7/2015"}, {"body": "pixelhandler thanks tried test ember could make helper work", "d": "7/2015"}, {"body": "open repo", "d": "7/2015"}, {"body": "moved issue emberdev", "d": "7/2015"}, {"body": "browse repo", "d": "7/2015"}, {"body": "built source also every build travis automatically publishes emberdocsjson file could use file build api docs version also project emberjsapi intends make versioned api docs much easier", "d": "7/2015"}, {"body": "nt really bug though going close continue convo community slack like", "d": "7/2015"}, {"body": "okay cool inside clone repo works thanks", "d": "7/2015"}, {"body": "sberan using chrome alert fire first time click also updated twiddle use release channel ember emberdata see click button alert displayed sure able see issue lost click event perhaps specific steps reproduce issue", "d": "7/2015"}, {"body": "design sorta javascript works computed properties properties provided prototype object interested possible properties used", "d": "7/2015"}, {"body": "ah ok makes sense nt realize skipped prototype fields sorry thanks tip problem though gives etc properties know simple way get filtered version property names ie keys passed minus autogenerated metadata properties including customsuperclass property names reason try create assertion helper determines whether two ember objects contain data guess makes sense skip computed properties comparison autoinitialized properties causing problems one instance set value instance explicitly set default value", "d": "7/2015"}, {"body": "ah ok makes sense nt realize objectkeys skipped prototype fields sorry ya reference basically function keys obj var result obj amp amp typeof obj object var key obj objectprototypehasownpropertycall obj key resultpush key return keys know simple way get filtered version property names ie keys passed emberobjectextend minus autogenerated metadata properties including customsuperclass property names unfortunately theory browsers faster could use pesky internal properties unfortunately like running ember slow mode see related issue opened time ago reasonable solution likely following function properties obj var result var key obj keycharat next typically private stuff prefix typeof obj key function next functions resultpush key return true reality likely something ember ship someone else interested pushing forward opening issue rfc repo likely good start githubcomemberjsrfcsissuesnew", "d": "7/2015"}, {"body": "great thanks much swift response detailed examples", "d": "7/2015"}, {"body": "related", "d": "7/2015"}, {"body": "ya duplicate", "d": "7/2015"}, {"body": "olivierlesnicki guides repository post issues related guides would great could update close issue reopen new one needed guide repos thanks", "d": "7/2015"}, {"body": "jimbeaudoin done", "d": "7/2015"}, {"body": "actually still since api defined source code", "d": "7/2015"}, {"body": "knownasilya yes right defined think issue maybe pr new text", "d": "7/2015"}, {"body": "op pr issue fine till someone else", "d": "7/2015"}, {"body": "template rerendered rerendering cause cp consumed stream dirty fix calling force invalidation remove notifying invalidate cache demo arguably volatile cp always considered dirty think would made original example work setting volatile like ultimately cause work upon rerender needed", "d": "7/2015"}, {"body": "thanks rwjblue actually works using according docs private api something", "d": "7/2015"}, {"body": "thanks pointing nt updated", "d": "7/2015"}, {"body": "jsbin sharing array component prototype small write little back", "d": "7/2015"}, {"body": "good write happened upon much complex component integration tests started blowing weird behaviour tests following fixes simple case real life case", "d": "7/2015"}, {"body": "oops think mistook flushed need extend linkto helper mylinkcomponent", "d": "7/2015"}, {"body": "found helper keyword htmlbars different nt", "d": "7/2015"}, {"body": "found linkto helper keyword htmlbars different nt yes different little extra massaging make work javascript appmylinkcomponent emberlinkcomponentextend positionalparams params init function thissuper arguments emberloggerlog event thisget eventname didreceiveattrs function thisattrsparams thisget params thisattrshasblock true demo downsides approach hard coded block mode meaning ca nt use component inline implement along ensure available internally may fixable ember start using unsure swap using nt properly escaped likely somewhat private api disappointed caveats aside would like make work properly imho users able extend custom links invoke", "d": "7/2015"}, {"body": "rwjblue works thank much helpful instructions nt know exist could nt find doc likely somewhat private api risk use imho users able extend emberlinkcomponent custom links invoke yes agree think close issue please reopen needed thank", "d": "7/2015"}, {"body": "suggestions applicationview routable views sections using applicationview", "d": "7/2015"}, {"body": "nt see anything related routable view special top level view use body scroll animation addingremoving classes body tag", "d": "7/2015"}, {"body": "applicationview routable view absolutely special top level view use body scroll animation addingremoving classes body tag see viable work around use cases routable components land", "d": "7/2015"}, {"body": "alternatively structure template invoke component directly application template way add styled element like avoid using somewhat bizarre work around", "d": "7/2015"}, {"body": "rwjblue thought routable meant adding route router see course suggestion good though feels like hack appviewsapplicationjs appapplicationviewjs import ember ember export default embercomponentextend alternatively structure template invoke component directly application template ryanflorence would happy ok everything component code disturbs", "d": "7/2015"}, {"body": "suggestion good though feels like hack yep agreed ok everything component code disturbs yep agreed smilingimp", "d": "7/2015"}, {"body": "going close nt actionable bug point clear path forward routable components", "d": "7/2015"}, {"body": "using quotes ember automatically concats set curlies emits combined source together attribute value things like work believe case concat called single argument simply return input value allow work properly work around quote attribute attach values hbs demo jsbin unfortunately advice contrary believe changing support angle bracket components quoted nonquoted attributes invoking components treated differently", "d": "7/2015"}, {"body": "orkon looks like rwjblue already made bin well another one added console log attribute values see undefined present", "d": "7/2015"}, {"body": "discussed slack last night came satisfactory solution apparently clean solution available routable components become thing hacked around creating component invoke application template javascript import ember ember export default embercomponentextend didinsertelement let applicationviewelement parent applicationviewelementaddclass foobarapplication pro triggers deprecation warning con works fine pure css gets messy want anything js based class timing somehow relevant", "d": "7/2015"}, {"body": "feared much", "d": "7/2015"}, {"body": "simplest thing though annoying right following javascript appviewsapplicationjs appapplicationviewjs import ember ember export default embercomponentextend classnames foobar jsbin global demo", "d": "7/2015"}, {"body": "closing nt really bug solution works fine interim solution routable components land", "d": "7/2015"}, {"body": "danke", "d": "7/2015"}, {"body": "careful tho ditched hack favor solution rwjblue proposed made applicationview component access controller anymore seems work still need support want incrementally migrate probably better using something like gosh feel dirty javascript import ember ember emberversionstartswith var baseclass emberview else var baseclass embercomponent export default baseclassextend classnames foobar", "d": "7/2015"}, {"body": "miguelcobain issue strange input loose focus button clicked perfect example think sometimes contextual solution needs thought twiddle simplifies using events actions however expected behavior combining actions events result expected behavior use action event changes way pointer works browser actions events seems break web opinion though actions promise lot power think strong reason rely standard browser behaviors ie events case events actions break user expected behavior way mouse works browser break web actions sure fix actually example order use events actions developers supposed manually become responsible triggering focus inputs seems counter productive also docs longer documents use events docs views begin rant discouraging build browser apps nt rely browser events instead relied incomplete implementation actions instead end rant would argue use events need events mix actions especially input events", "d": "7/2015"}, {"body": "believe intentional views deprecated removed", "d": "7/2015"}, {"body": "definitely add documentation helper place view though", "d": "7/2015"}, {"body": "mikenorth using really helper nt think using component template equivalent rendering helper looks like master branch guides project also longer includes page renderingwithhelpers see", "d": "7/2015"}, {"body": "yeah replaced headers tree view general issues guides reported", "d": "7/2015"}, {"body": "recall another related issue quicky find", "d": "7/2015"}, {"body": "dmagunov stefanpenner issue one duplicates", "d": "7/2015"}, {"body": "ya closing duplicate", "d": "7/2015"}, {"body": "hello mmun rwjblue love become new contributor think issue good one start ca nt find work solve issue would mind giving tips thanks", "d": "7/2015"}, {"body": "attempted partially resolve issue would appreciate advice fully satisfying issue problems pr thank", "d": "7/2015"}, {"body": "dmagunov kind redirect eg also api docs nt mention using url see", "d": "7/2015"}, {"body": "dmagunov sounds like browser history url random ordered query params expect back button resolve history url random ordered query params right updating url nt necessarily push url browser history update url sorted params", "d": "7/2015"}, {"body": "sorta expected extremely workaround", "d": "7/2015"}, {"body": "seems pretty weird definitely need fix guess happening using emberselect registered view select known issue globals resolver causes leading dash completely ignoreddropped look view select happening get emberselectview need address two ways fix globals resolver honor leading dash add helpful warning tells using route named select defining appselectview prevent using view select", "d": "7/2015"}, {"body": "initially thought bug within routable components reported problem switch route something else thus might deep problem within glimmer somthing else", "d": "7/2015"}, {"body": "rwjblue please take look pr tackle second steps address adding warning", "d": "7/2015"}, {"body": "proved wrong jsbin", "d": "7/2015"}, {"body": "marksalpeter think issue ran documented well instead use function use templates see", "d": "7/2015"}, {"body": "pixelhandler thanks investigating sending pr showing solution", "d": "7/2015"}, {"body": "rwjblue perhaps use cleanup label", "d": "7/2015"}, {"body": "ill tackle tomorrow morning", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "embwr version put together jsbin embertwiddle demonstrating", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "think might something sortable modifying elements adding classes styles", "d": "7/2015"}, {"body": "rwjblue embertwiddle shows ember", "d": "7/2015"}, {"body": "issue ember jqueryui sortable", "d": "7/2015"}, {"body": "thoughts", "d": "7/2015"}, {"body": "seeing ember relevant bits component javascript componentspagelistjs didinsertelement function var pagelistcomponent ulprocedure sortable items li firstchild update function event ui var sortorder ember sortable toarray attribute dataid var pagemodels handlebars pages page page pageid display pagedisplayindex", "d": "7/2015"}, {"body": "ping rwjblue stefanpenner wagenet", "d": "7/2015"}, {"body": "dmagunov aware issue nt gotten yet krisselden implemented may still maintain ember drag amp drop code maybe free time week", "d": "7/2015"}, {"body": "thank reporting dgeb could take look", "d": "7/2015"}, {"body": "yep saw get fix tests asap sorry mdehoog rwjblue", "d": "7/2015"}, {"body": "worries canary smilingimp thanks working", "d": "7/2015"}, {"body": "thanks speedy fix guys", "d": "7/2015"}, {"body": "cc machty", "d": "7/2015"}, {"body": "thisqpcache objectcreate null", "d": "7/2015"}, {"body": "source map files currently work pending transforms fully ported babel work sure hints files removed output", "d": "7/2015"}, {"body": "calling entering route second time gets rid error really necessary", "d": "7/2015"}, {"body": "nt believe intend observable", "d": "7/2015"}, {"body": "ok changed everything works fine thanks", "d": "7/2015"}, {"body": "reference thank saladfork attributebindings ember ember", "d": "7/2015"}, {"body": "hand component gets called like element gets id", "d": "7/2015"}, {"body": "problem seems line need something like attribute depending computed property object cp depend attribue tried setting directly seems late change hand init works expected official supported way", "d": "7/2015"}, {"body": "feature deprecated documented whether feature supported appear regression bug work someone need confirm whether undocumented use even still work", "d": "7/2015"}, {"body": "headsup nt support id changing initial render although believe support bindings used populate initial render someone likely verify statements may case timings changed preventing id set right time guess", "d": "7/2015"}, {"body": "supported public api issue attribute set essentially hard coded look specifically make work grabbing could likely fix handling essentially moving working test pr", "d": "7/2015"}, {"body": "questions ember version result ember cli version result contents", "d": "7/2015"}, {"body": "ember version ember cli apphelperstesthelperjs js import ember ember export function testhelper params hash return test thing export default emberhelperhelper testhelper", "d": "7/2015"}, {"body": "ember version actually latest github master happens release", "d": "7/2015"}, {"body": "experience issue exact version numbers calling helper part component like", "d": "7/2015"}, {"body": "stevesims think create jsbin jsfiddle example links", "d": "7/2015"}, {"body": "thagul see input behavior expected desktop safari using developer tools mobile device connected desktop developer tools show proper html curious ember bug mobile safari bug", "d": "7/2015"}, {"body": "also seen issues attributes mutating initial render basically browsers bugs nt accept attrs set specific ways could result fix introduced htmlbars recently would handy confirm expected output pixelhandler said", "d": "7/2015"}, {"body": "html generated mobile safari autocorrect following html generated standard tag shown first post suppose bug ember mobile safari standard tag works", "d": "7/2015"}, {"body": "html generated mobile safari input tag withautocorrect following totally mobile safari bug chrome desktop safari work expected said likely something wont fix quickly may find workaround", "d": "7/2015"}, {"body": "chrome safari mobile safari ios simulator safari", "d": "7/2015"}, {"body": "likely properly addressed finish disambiguatation work attrs props likely force slot attrs always", "d": "7/2015"}, {"body": "stefanpenner thought something mobile safari nt like way input tag generated using ember tag written ember bug using normal tag mobile safari set right value autocorrect using ember ignored", "d": "7/2015"}, {"body": "feels like always something needs implemented ember unlikely automatically observer length every array template example developer use long form call needed changes observer demo", "d": "7/2015"}, {"body": "able use example without emberdata watch changes array contents still pass array argument still brainstorming better ways handling also model property array would cause recompute watch property array must use observer document best path would tweak robert suggestion slightly", "d": "7/2015"}, {"body": "tweaks", "d": "7/2015"}, {"body": "thanks rwjblue mixonic ember syntax looks exciting one non obvious thing looked see helper aliases still way generate long form corresponding working test", "d": "7/2015"}, {"body": "really style testing suggested perfect testing helpers key test actual template invocation intend use love get helper tests update embercli integration tests use infrastructure cc trabus", "d": "7/2015"}, {"body": "also going close nt seem like bug correct mistaken", "d": "7/2015"}, {"body": "create issue add helper tests", "d": "7/2015"}, {"body": "ebenroux little confused trying parse seems like may issue chrome", "d": "7/2015"}, {"body": "tell emberchrome combination plain select tag within ember loaded works fine ember application even plain select tag strange behaviour sneaky suspicion something way chrome fires events speculation anyhow nt big deal", "d": "7/2015"}, {"body": "ebenroux provide jsbin accurately demonstrates way confidence look exact code looking", "d": "7/2015"}, {"body": "ebenroux jsbin would definitely help ask chrome issue definitely open issue upstream tracker work around maybe wo nt able fix issue nt know", "d": "7/2015"}, {"body": "jsfiddle never get jsbin run steps chrome drop displays red drop combo box hover blue press shift key click another application browser drop display blue drop still red selected easily bind change show nt fire", "d": "7/2015"}, {"body": "ebenroux able reproduce mac chrome perhaps recoding video quicktime posting link location dropbox would help demonstrate issue also steps reproduce seem like edge case press shift click another app", "d": "7/2015"}, {"body": "created short video demonstrate windows chrome version keep one eye select captions else try pausing everysooften know somewhat edge case one nt really care much testers picked taking screen shots logged issue", "d": "7/2015"}, {"body": "give another example", "d": "7/2015"}, {"body": "give another example already pluggable", "d": "7/2015"}, {"body": "emberonerror gives us access error message stack course great result example supposed know error comes logging objects able see view destroyed weird way view constructor parentcontroller etc immediate debug except monkey patch emberdebug log objects basically could pass objects addition error message emberassert make accessible emberonerror would", "d": "7/2015"}, {"body": "supposed know error comes emberobjectextenddropobject emberobjectextendretainobjectobjectreopenwilldestroy tells came nt provide context code path taken solution exists without platform support make apps dev mode hundreds times slower theory could make mode optin note duplicate arises every months commitment chrome team provide us platform support see details still nt landed may need add longstacks opt going quite costly", "d": "7/2015"}, {"body": "ok meant stack understand undefined object destroyed additional logs understand object view right col panel without additional log debug fine adding logs emberdebug thinking improvement would save lots time developers getting ember", "d": "7/2015"}, {"body": "fine adding logs emberdebug thinking improvement would save lots time developers getting ember think anything optin longstack traces would accepted likely implement tonightsoon hoping friends chrome team would land much faster better work sooner approach would provide useful stacktrace explorer", "d": "7/2015"}, {"body": "sure following thanks case line causing exception given destroy method inside run loop would able trace back function calling yes nt know great", "d": "7/2015"}, {"body": "yes nt know great yes", "d": "7/2015"}, {"body": "great", "d": "7/2015"}, {"body": "curious leooo stefanpenner type request moved rfc", "d": "7/2015"}, {"body": "curious leooo stefanpenner type request moved rfc general yes although maybe fast track thought process please feel free share thoughts nt controversyobjection personally put ages public api needed intend implement something already understood exists promise libs place bb rsvp time tradeoff likely implement time would take write rfc rfc typically used flesh unknowns fairly confident solution accept fact embodied brain risk suspect show code wont risk said likely accept detailed explanation value maybe worth left inline docs", "d": "7/2015"}, {"body": "believe dupe", "d": "7/2015"}, {"body": "ah indeed duplicate sorry", "d": "7/2015"}, {"body": "nathanosman problem time confirm issue contains relevant info", "d": "7/2015"}, {"body": "read issue appear contain relevant details issue js bin sample issue demonstrates exact problem", "d": "7/2015"}, {"body": "embercli", "d": "7/2015"}, {"body": "specific version ember", "d": "7/2015"}, {"body": "ember embercli rwjblue test new app put code wrong place", "d": "7/2015"}, {"body": "imaxhung may helpful able post demonstrating issue", "d": "7/2015"}, {"body": "stefanpenner ok check input field dom element contain data attributebut nt say change ember works find found emberkeys nt contain additional attributes templates since", "d": "7/2015"}, {"body": "reason export deprecated version provide nice warning message use deprecated version placed example ing unfortunately use internal nondeprecated version parent class components views used internally updatechange attributebindings might expect fix would need override deprecated class currently exported somewhere around custom would call main parent class", "d": "7/2015"}, {"body": "think fix probably containerview select etc", "d": "7/2015"}, {"body": "issue seems components inherit views support fix code break sure call release post started notes", "d": "7/2015"}, {"body": "novtor take look see duplicate issue", "d": "7/2015"}, {"body": "reopen demonstrated duplicate", "d": "7/2015"}, {"body": "duplicate opened another one time ago duplicate one independent fact say transition retry work refreshmodel query params dynamic segments exception thrown stacktrace present console problem page visualisation issue describe independently dynamic segments put route result afaiu model refreshed several times different qp browser history hold one reference route url let say user searches artist artistsomeartist looks artist songs artistsomeartistsongs amp artistsomeartistsongs amp let say artistsomeartistsongs stylerock would create one entry browser history artist songs user clicks back browser button routed artistsomeartist route enter input submit submit submit click back browser button work amp amp history hand use send replace query params works expected history pushed", "d": "7/2015"}, {"body": "stefanpenner explanation clear think duplicate issue", "d": "7/2015"}, {"body": "rwjblue commit whatever needed work day friday happy help", "d": "7/2015"}, {"body": "take", "d": "7/2015"}, {"body": "ready work", "d": "7/2015"}, {"body": "take", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "take", "d": "7/2015"}, {"body": "looked package seems like usages tests updates needed", "d": "7/2015"}, {"body": "submitted pr emberroutingviews", "d": "7/2015"}, {"body": "believe saladfork going look emberviews today circle back pixelhandler things oss friday work enforcement items", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "enforcement added", "d": "7/2015"}, {"body": "pleasure business yall", "d": "7/2015"}, {"body": "birbird searched andor posted stack overflow yet testing question perhaps reach embercommunityslackcom group testing channel well since question issue would consider closing", "d": "7/2015"}, {"body": "gladly reopen turns actual issue preventing solved issue quick reproduction problem would help", "d": "7/2015"}, {"body": "justinhackin able mimic scenario new jsbin perhaps based one contributing guides", "d": "7/2015"}, {"body": "code looks functionality different vs return values setters matter sure port one form maintaining return values", "d": "7/2015"}, {"body": "actually nt follow pattern properly need return value set bad please ignore", "d": "7/2015"}, {"body": "actually nt follow pattern properly need return value set bad please ignore problem coffeescript implicit returns trixie", "d": "7/2015"}, {"body": "petey jsbin example describe detail reproduce issue", "d": "7/2015"}, {"body": "test case navigate click checkbox labeled inherited methods disappear click checkbox labeled inherited methods appear existed includes private methods", "d": "7/2015"}, {"body": "petey jsbin example describe detail reproduce issue pixelhandler ia actually docs issue petey believe reported cc locks", "d": "7/2015"}, {"body": "relevant html relevant js", "d": "7/2015"}, {"body": "petey perhaps close issue emberjs project reopen project also curious issue yuidoc general found work around refresh page see correct info also noticed unexpected behavior using generated yui docs ember website usually refresh page", "d": "7/2015"}, {"body": "opened", "d": "7/2015"}, {"body": "regression check says introduced", "d": "7/2015"}, {"body": "alltouch curious possible use readonly attribute value readonly attribute false wondering already found workaround add context issue also based appears presence attribute intended block input prevent text input element also see", "d": "7/2015"}, {"body": "mixonic alltouch sure bug could improper use readonly attribute think html standard use attribute value assignment", "d": "7/2015"}, {"body": "pixelhandler correct presence attribute makes readonly dom ignores actually attribute value though behavior release think check property existing element set instead would make work except property readonly readonly property set nt work", "d": "7/2015"}, {"body": "krisselden seems like may want special case readonly like maxlength sound right", "d": "7/2015"}, {"body": "mmun suggested built map boolean attributes consult doable something done htmlbars", "d": "7/2015"}, {"body": "old check code require map built comparing lowercase key names", "d": "7/2015"}, {"body": "thanks bringing ping rest team see thoughts", "d": "7/2015"}, {"body": "rwjblue likely branch becomes stable easier community propose backports etc", "d": "7/2015"}, {"body": "yes plan general branch need maintain tag tagging really nt yet might obvious repo branches", "d": "7/2015"}, {"body": "blimmer please submit pr commits branch", "d": "7/2015"}, {"body": "tried cherrypick realizing commits cherrypick cleanly routing service introduced unfortunately nt know guts ember well try see clear way forward", "d": "7/2015"}, {"body": "others following along simple example tests broken stacktrace update example proposed fix tests passing", "d": "7/2015"}, {"body": "cherrypicked fix got working see", "d": "7/2015"}, {"body": "blimmer point release highly unusual prefer set precedent anything security releases keeping rather prioritize fixing issues preventing upgrading", "d": "7/2015"}, {"body": "bet embereasyform year ago single biggest point pain upgrading ember versions since handlebars ember hobbling along using shim hacked versionbyversion order get easyforms need rewrite every form production app would take week ca nt sell boss seems like blocked scoped helpers wo nt fix addon get even landed going release version easyform support showed publish fork ember using right app", "d": "7/2015"}, {"body": "bcardarella curiosity would accept fixespatchesadjustments simpleform blimmer likely many others nt stay stuck", "d": "7/2015"}, {"body": "stefanpenner easyform issues stem around move htmlbars specifically could interim release help ease migrations packaged compiled htmlbars templates someone wants merge release far embereasyform embercli willing move forward scoped helpers ember", "d": "7/2015"}, {"body": "merging still addons embertable ported yet block upgrading", "d": "7/2015"}, {"body": "merging unlikely happen block upgrading merging similar fix stretch may possible suspect could drop hooks expose addon similar although tricky without full beta cycle", "d": "7/2015"}, {"body": "stefanpenner already fixed", "d": "7/2015"}, {"body": "stefanpenner already fixed perfect", "d": "7/2015"}, {"body": "novtor correct oneway cp aliases destroyed set value mean oneway suggest use route hooks set property directly page loaded seems like looking controllers singletons thus oneway alias stomped remains disconnected pretty positive docs going close let know missed something", "d": "7/2015"}, {"body": "thank mixonic info see docs look", "d": "7/2015"}, {"body": "hi mixonic first able find doc oneway bindings controllers able find appropriate hook want try explain mean use case really bind queryparams template fields durable manner example user uses bookmark clicks browser back button cases fields got sync query parameters values use convention project fields templates names corresponding queryparam field suffix example postcontroller date query parameter datefield bound template initializing becomes convention tried implementing activate hook queryparams set moment controller initialized didtransition hook reachable app think lot routes use hook already even bubble event returning true result calling hook implementation never called could advice easy way keeping template fields synced query parameters", "d": "7/2015"}, {"body": "believe duplicate", "d": "7/2015"}, {"body": "timkendrick take look see issue would nice coalesce issue previously reported one", "d": "7/2015"}, {"body": "gladly reopen demonstrated duplicate", "d": "7/2015"}, {"body": "thought bit think add deprecation like emberview x expose deprecated using emberlegacyviews addon need land master cherrypicked stable x remove export beta master addon used martndemus want tackle", "d": "7/2015"}, {"body": "rwjblue sure", "d": "7/2015"}, {"body": "big confirm absolutely deprecated removed", "d": "7/2015"}, {"body": "upgrade path container view", "d": "7/2015"}, {"body": "basically move programmatically manipulating childviews something like container view template helper", "d": "7/2015"}, {"body": "martndemus definitely seems deprecation guide worthy many cases sufficient however two parts complete upgrade path first must able dynamically render component helper addresses second must able dynamically decide arguments proposal handlebars syntax get approved add operator ember time latest", "d": "7/2015"}, {"body": "seems pretty bad kinda nt believe description pretty easy reproduce", "d": "7/2015"}, {"body": "findings first load select gets rendered using change first time select gets rendered using change second time select gets rendered using change third time rendering done", "d": "7/2015"}, {"body": "findings view value property continues get set correctly binding seems stop working extended jsbin two observers selected value one extended select view one bound attribute controller init view observed first switch second controller observed second view observed second view observed second switch first controller observed first view observed first switch second controller observed second view observed second switch first view observed first switch second view observed second", "d": "7/2015"}, {"body": "using embercli version ember", "d": "7/2015"}, {"body": "ah quickly read issue acceptance tests app nt fully initialize first occurs sure app boots directly url specified test", "d": "7/2015"}, {"body": "aha got rewrote test javascript test image template added store function assert var store applicationcontainerlookup store main visit andthen function var templates storeall template toarray filterproperty displayname image perhaps nugget go docs instanceinitializers explained", "d": "7/2015"}, {"body": "unsure go cc trek locks", "d": "7/2015"}, {"body": "maybe note deprecation warning start going hit users right migrating separately main doc instance initializers", "d": "7/2015"}, {"body": "fetching store application manner definitely bending lot rules especially relying semantics api flagged doubleunderscore think need add deprecation guide issue likely helpful enough wayward souls going close issue please feel free reopen missed something", "d": "7/2015"}, {"body": "error occur observer function dependent key arguments deprecated see", "d": "7/2015"}, {"body": "teddyzeenny rwjblue unfortunately ember inspector throws error using form observer fn key fixed released version throws error", "d": "7/2015"}, {"body": "jerel provide demo application demonstrates would make actionable", "d": "7/2015"}, {"body": "also sure test canary", "d": "7/2015"}, {"body": "sure sorry nt include initial report jsbin using canary demonstrates problem note html comment noticed seems happen template tag attribute tag inside element teardown works fine", "d": "7/2015"}, {"body": "krisselden pretty sure leak discussed day chains orphan childnodes try get failing test together afternoon", "d": "7/2015"}, {"body": "comparing two heap dumps without leak confident statement going attempt isolated test next", "d": "7/2015"}, {"body": "yesterday quite busy reasons ended good fact finding session ended reduced example failing test find time today transpose test ember test suite", "d": "7/2015"}, {"body": "cc mmun", "d": "7/2015"}, {"body": "wow awesome", "d": "7/2015"}, {"body": "mmun thought removing stuff", "d": "7/2015"}, {"body": "mmun thought removing stuff yes deprecations needed exist", "d": "7/2015"}, {"body": "easier example nested tags clicking block shows action called component template commented left bubble added examples written previous leaving reference scenarios tested easier example nested tags clicking block gives add bubblesfalse event nt bubble another example using nested inside", "d": "7/2015"}, {"body": "believe expected action attach inner dom node negate action handled parent dom node want handle kind event bubbling using dom event handlers access event bubbling controls may appropriate", "d": "7/2015"}, {"body": "thanks completely misread guide mean event would nt bubble component sweatsmile", "d": "7/2015"}, {"body": "andreyutka perhaps adding check subscription action feature would worth discussing rfcs repo raise question issue rfc repo start process considering new api support idea see also heard type request may nice get thread going forums ask around embercommunityslackcom group see patterns people use aside checking subscription already exists prior sending action think design around throwing error intentional seems like discussion needed order make case check subscription action support", "d": "7/2015"}, {"body": "believe martndemus interested one", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "confirm", "d": "7/2015"}, {"body": "hiding behind feature flag easy finding way reload ember feature flag enabled seems impossible done feature flags", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "fixed martndemus days", "d": "7/2015"}, {"body": "note believe different issue least behavior steps recreate different", "d": "7/2015"}, {"body": "actually believe shows may api", "d": "7/2015"}, {"body": "issue", "d": "7/2015"}, {"body": "imagine root cause seems issues updating attributes initial render", "d": "7/2015"}, {"body": "super useful see route always doublecheck see current route name would eliminate source confusion especially seems best practice route handle actions manipulating model ideally route model", "d": "7/2015"}, {"body": "discussed core team meeting afternoon decided like keep private mentioned chimed make public good way public api also use suggestions shoudl remove ambiguity davidgoli mentioned", "d": "7/2015"}, {"body": "thanks opening issue discussion going close discussed decided keep private", "d": "7/2015"}, {"body": "sounds good create alias immensely useful shame getting overlooked shall carry", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "also find using least times apps", "d": "7/2015"}, {"body": "saladfork discussed core team meeting could submit pr updating", "d": "7/2015"}, {"body": "may rfc issue", "d": "7/2015"}, {"body": "close", "d": "7/2015"}, {"body": "something right cc rwjblue page probably exist page include ugh perhaps someone actually preview documentation changes", "d": "7/2015"}, {"body": "docs moved namespace going away need updated use new location", "d": "7/2015"}, {"body": "looks resolved latest release eyes closing", "d": "7/2015"}, {"body": "provide jsbin demo showing mean", "d": "7/2015"}, {"body": "sorry mistake", "d": "7/2015"}, {"body": "thanks suspect misalignment app app instances leaking something likely instance", "d": "7/2015"}, {"body": "appears introduces retained dom nodes without test runs test runs looks really strange", "d": "7/2015"}, {"body": "believe found spiked solutions issues reported provided example afternoon start applying appropriate solutions various offending projects delta comparison heap snapshot also worth nothing exactly leaked emberapplications identified least different ways emberapplication instances leak ultimately resulted", "d": "7/2015"}, {"body": "x first patch x second amp third patch x x x x confirm still prevent leak question", "d": "7/2015"}, {"body": "alright think leak fixed kinda many discrete parts close close things merged released", "d": "7/2015"}, {"body": "worth noting problem partially related fact nt purge modules included would fix small part larger leak maybe something worth exploring road", "d": "7/2015"}, {"body": "hmm strange deprecated removed", "d": "7/2015"}, {"body": "must related", "d": "7/2015"}, {"body": "ya likely going able look today relatively easy piece together differences mind submitting fix", "d": "7/2015"}, {"body": "voila", "d": "7/2015"}, {"body": "fix merged release thx", "d": "7/2015"}, {"body": "available template contexts implemented template layer keyword intended available components js code general would suggest trying different things components js code based block supplied much better sort thing template instead", "d": "7/2015"}, {"body": "component would work well course issue fails silently runtime", "d": "7/2015"}, {"body": "actually keyword name underlying component textarea trick leading means private component ymmv", "d": "7/2015"}, {"body": "prefixed dash private", "d": "7/2015"}, {"body": "provide repo demonstrates make actionable", "d": "7/2015"}, {"body": "version newest version need specify order use", "d": "7/2015"}, {"body": "twokul suspect issue", "d": "7/2015"}, {"body": "running using array flagging integration works tests time tests stefanpenner work extracting failing tests repo thx", "d": "7/2015"}, {"body": "believe bug nt ember repo rather", "d": "7/2015"}, {"body": "default test helper behavior changed unit integration patch release embertesthelpers agree stefanpenner may hitting please confirm bumped testhelpers well cause flag old component test modules restore old behavior", "d": "7/2015"}, {"body": "thanks suggestions digging deeper problem obscured something app munching rsvp errors tests null symptom prior test tearing correctly app root element trying reused real problem template like following simply nullifies weird interplay removing element adding input raises post repo demonstrating desired", "d": "7/2015"}, {"body": "appears issue test helpers end bad state like open issue repo", "d": "7/2015"}, {"body": "absolutely would nt ember related though", "d": "7/2015"}, {"body": "recent update test helpers properly handle errors setup fail like", "d": "7/2015"}, {"body": "yes would say would still ember issue though really related issues title description make demo jsbin reproduces", "d": "7/2015"}, {"body": "reproduce jsbin seems happening testing move issue embertesthelpers", "d": "7/2015"}, {"body": "looking", "d": "7/2015"}, {"body": "yup", "d": "7/2015"}, {"body": "writing test", "d": "7/2015"}, {"body": "submitted fixed", "d": "7/2015"}, {"body": "wowzers impressive response time smile thanks stefan", "d": "7/2015"}, {"body": "debugging jsbin example pretty sure caused implementation passing referred number items remove conten method property line methods called finally reached takes param see information set none existing items acutally really replaced guess quick fix would override gather length inserted objects", "d": "7/2015"}, {"body": "unsure aim support sparse arrays historically array polyfils taken path lodash ignored concept sparse arrays note nt say nt support rather context", "d": "7/2015"}, {"body": "jherdman think would worth creating rfc desired behavior looking alternatively start discussion around best practices managing sparse arrays ember think idea become rfc doc raise question issue rfc repo", "d": "7/2015"}, {"body": "quite interested time premium late realistically problem nt bad relatively easy work around comfortable closing ticket unless someone feels valuable placeholder conversation work done", "d": "7/2015"}, {"body": "many libs like lodash treat sparse arrays exceptional suspect alright us well yes truly blocker reconsider", "d": "7/2015"}, {"body": "going take stab ok", "d": "7/2015"}, {"body": "going take stab ok ofcourse", "d": "7/2015"}, {"body": "mean deprecated", "d": "7/2015"}, {"body": "btecu", "d": "7/2015"}, {"body": "require cleanup", "d": "7/2015"}, {"body": "weird use case ideally component nt interact block yielding seems weird hook triggered children grandchildren rerendered using mutationobserver seems correct", "d": "7/2015"}, {"body": "mitchlloyd curious may value discussing solutions yielded context shoulddoes interact outer component another place perhaps discussion forums may solutions already discussed current work website guide updates also may directly related think may valuable discussion comes raising question pose issue instead discussemberjscom perhaps consider closing issue moving discussion discuss forum andor creating rfc propose solution behavior parent child components yielded content changes", "d": "7/2015"}, {"body": "didinsertelement called didreceiveattr willrender called attrs refreshed dom refresh calling rerender anyway", "d": "7/2015"}, {"body": "working old code taking html content model inserting iframe setting heights etc needed rerendered different item clicked thanks mentioning willrender looks like quickfix using didrender instead didinsertelement works case go time wanted signal change occured possibly contradicted doc nt see changelog", "d": "7/2015"}, {"body": "mszweda change documented sure site docs keep changes", "d": "7/2015"}, {"body": "orkon thanks lot case solved", "d": "7/2015"}, {"body": "chadhietala way add logging jsbin example demonstrates event handlers longer attached steps noticed may contributed event handler becoming detached top level dom unstable would screen recording posted dropbox something showcase unstableness help issue reproducible", "d": "7/2015"}, {"body": "chadhietala definitely seems like regressions angles cc tom wycats", "d": "7/2015"}, {"body": "quite sure bug consider following demo without ember scenario would might annoying way boolean attributes work plain html attempting emulate angle bracket components right using following works properly jsbin see copy", "d": "7/2015"}, {"body": "seems weird properties component controller booleans property names access sure even documented people aware works", "d": "7/2015"}, {"body": "seems weird properties component controller booleans property names person property componentcontroller likely much bigger issues discussing also believe handlebars parser interprets specific boolean node using would nt accessible template anyways", "d": "7/2015"}, {"body": "bug seems weird properties component controller booleans property names use crazy things like", "d": "7/2015"}, {"body": "nt think passing value false really crazy use case maybe missing something", "d": "7/2015"}, {"body": "workmanw thing would crazy property controllercomponent named something like expected able access template via", "d": "7/2015"}, {"body": "workmanw said crazy pass like every value", "d": "7/2015"}, {"body": "yea sorry thought mmun comment referring usage crazy usecase got", "d": "7/2015"}, {"body": "convinced bug", "d": "7/2015"}, {"body": "ember controllers needed listing query params deprecated series routable components land moved route change regular controller arraycontroller objectcontroller deprecated removed series recommended use controller moving forward import ember ember export default embercontrollerextend queryparams page", "d": "7/2015"}, {"body": "thanks advice warning gone pretty complex figure make work put many hopes ember hope simplify lot things btw ember docs route querying examples broken links bottom", "d": "7/2015"}, {"body": "looks like entries returned response according max alphabetical results get additional keys make additional request param set last entry first page tags appear present additional pages page page approach sounds good happy add pr", "d": "7/2015"}, {"body": "sounds like good plan thanks researching quickly", "d": "7/2015"}, {"body": "routable components land need implementation rfc know one point ebryn going work sure status nt really bug likely rfc better place conversation", "d": "7/2015"}, {"body": "perhaps wait months like htmlbars indeed", "d": "7/2015"}, {"body": "post rfc closing", "d": "7/2015"}, {"body": "great catch would mind submitting pr bring back", "d": "7/2015"}, {"body": "maybe could show bug js bin first issue described context observer function inside component js bin showing context observer latest beta tried saw results context component reading rest issue nt see anything appears line ember claims work however narrative code confusing parts might following correctly show running code help people figure might going wrong also tip avoid using observers possible possible time", "d": "7/2015"}, {"body": "curious use case noticed potential issue component function observes outercontext attribute actually initialized even actual component initialized mitchlloyd says dragons observers perhaps video shows alternative implementations use case", "d": "7/2015"}, {"body": "mitchlloyd provide jsbin soon pixelhandler thanks vide definitely go attempt use observers", "d": "7/2015"}, {"body": "warning message absolutely correct testhelper function fillinwithinputevents app selector contextortext textorevents events var el context text typeof events undefined context null text contextortext events textorevents else context contextortext text textorevents typeof events string events events el apptesthelpersfindwithassert selector context elval focus el function fillinwithinputevent character var val elval var charcode charactercharcodeat var l textlength lt l fillinwithinputevent text return apptesthelperswait call like simulate input events manually triggering event fact goes infinite loop still bug though strange infinite loop happens component tested block mode deprecation warning triggered component block mode maybe deprecation always spins infinite loop", "d": "7/2015"}, {"body": "wycats keep count many top level revalidates per run loop error hits certain count", "d": "7/2015"}, {"body": "quick searchscan nt notice could please link build referring possible gist snippet saw seemed wrong", "d": "7/2015"}, {"body": "yes built publishes output correct obvious way build prod strong conventions seems still include noticed trying compare byte size changes recent prod builds nt say anything busted improve largely reminder someone else time help would appreciated", "d": "7/2015"}, {"body": "please make issue actionable command run nt work expected output filename snippet etc look incorrect", "d": "7/2015"}, {"body": "think currently eventdispatcher requires tag root delegation mounted another element body delegation likely scoped root app", "d": "7/2015"}, {"body": "stefanpenner users attach event listeners different element created app demo jsbin", "d": "7/2015"}, {"body": "thought inherited eventdispatcher quick spelunk reveals true", "d": "7/2015"}, {"body": "stefanpenner event dispatcher always dispatch body tying rootelement actually frustrating wished able set dispatch root apart append target", "d": "7/2015"}, {"body": "also love able dispatch capture", "d": "7/2015"}, {"body": "create unique class app instance views instead class emberview dispatch using would greatly improve one app page andor emberwormhole stuff embertether", "d": "7/2015"}, {"body": "cc chrislopresto lukemelia", "d": "7/2015"}, {"body": "stefanpenner event dispatcher always dispatch body tying rootelement actually frustrating wished able set dispatch root apart append target yes comment agreed", "d": "7/2015"}, {"body": "found answer rewriting function like made work", "d": "7/2015"}, {"body": "question related emberdata ember strongly suggest stack overflow community slack channel help issue find links emberjscom community page", "d": "7/2015"}, {"body": "randomly getting ca nt find issue", "d": "7/2015"}, {"body": "nt recall another issue thank reporting investigate coming track need reproduction", "d": "7/2015"}, {"body": "look", "d": "7/2015"}, {"body": "looks like firefox error still nt know yet causing", "d": "7/2015"}, {"body": "seems like timing issue error pops randomly looks trying update dom nt existing anymore", "d": "7/2015"}, {"body": "guess looks like cause problem issue seems happen go least tab get errors immediately every time refresh navigate close page nt matter change tab development tools never get issue ie understand ie jcbvm check problem", "d": "7/2015"}, {"body": "btecu ah interesting look tomorrow access code let know", "d": "7/2015"}, {"body": "teddyzeenny something seen", "d": "7/2015"}, {"body": "yes error guarded yet released", "d": "7/2015"}, {"body": "teddyzeenny awesome thank jcbvm going close issue fixed upstream", "d": "7/2015"}, {"body": "glad know cause problem thanks helping", "d": "7/2015"}, {"body": "interesting glimmer bug jarrodctaylor happens correct", "d": "7/2015"}, {"body": "think related change works expected", "d": "7/2015"}, {"body": "jakesjews nt think problem example working expected working", "d": "7/2015"}, {"body": "see thinking fact lets add one item added many clicked looks like nt work either unfortunately", "d": "7/2015"}, {"body": "created another bin exactly duplicate production issue experiencing check array update class resulting color change however need visit different route return order see change reflected", "d": "7/2015"}, {"body": "jarrodctaylor believe want bind imo behavior correct array always present thus evaluate true", "d": "7/2015"}, {"body": "mixonic behavior inconsistent updated bin updated however", "d": "7/2015"}, {"body": "definitely agree behave consistently", "d": "7/2015"}, {"body": "updated jsbin clarify examples mixonic magic conditional length think consistent else emberisempty", "d": "7/2015"}, {"body": "confirm issue", "d": "7/2015"}, {"body": "seems like regression confirmed", "d": "7/2015"}, {"body": "confirmed keeping us migrating", "d": "7/2015"}, {"body": "someone time submit pr failing test would help get ball moving", "d": "7/2015"}, {"body": "submitted failing test entirely sure yet stack fix needs made looking happy update pr fix get someone else guidance regression might introduced also appreciated", "d": "7/2015"}, {"body": "sure helpful also fails using newer inline syntax imagine uses attributebindings hood tried debugging got lost pretty quickly see correct called somewhere line helper gets called array classes gets old data changes rerendering happening somewhere line updated attrs nt getting passed along correctly", "d": "7/2015"}, {"body": "another pieces information additional debugging wanted confirm seem specific rerendered class bindings like following update raytiley mentions inline subexpression also work side note sure correct render rerender correctly like previous example however following cases rerender correctly binding normal tag standard generated blank component", "d": "7/2015"}, {"body": "dupe move release context", "d": "7/2015"}, {"body": "mixonic awesome tried searching gh search failed thanks correction link", "d": "7/2015"}, {"body": "dup", "d": "7/2015"}, {"body": "gh laggy suspect double submit thanks catching", "d": "7/2015"}, {"body": "seems working simple jsbin tweak jsbin demo issue describing", "d": "7/2015"}, {"body": "check working last upgrade would think something new component hooks", "d": "7/2015"}, {"body": "observers fire stuff dom please consider new component hooks move away observers", "d": "7/2015"}, {"body": "stefanpenner confirming thoughts good deal", "d": "7/2015"}, {"body": "fyi wrong repo related issue tl dr race condition happens first time lame yes hopefully someone maybe time dig soon", "d": "7/2015"}, {"body": "thanks stefanpenner", "d": "7/2015"}, {"body": "alanhogan sorry lame bug", "d": "7/2015"}, {"body": "sure case expected work although understand premise works certainly explicit probably preferred case", "d": "7/2015"}, {"body": "point resource route namespace reset use routescontrollerstemplates separate routes case routes share everything", "d": "7/2015"}, {"body": "moved milestone remember must deprecate bugfix release remove bugfix beta", "d": "7/2015"}, {"body": "stefanpenner globals access templates deprecated least minor versions unless uncover something new caught initially deprecated think require backporting", "d": "7/2015"}, {"body": "mmun gotcha misread thought templates things like deprecated", "d": "7/2015"}, {"body": "oops deleted comment accident chains globals functional deprecated see jsbin", "d": "7/2015"}, {"body": "unless uncover something new caught initially deprecated think require backporting perfect changes bugfix needed", "d": "7/2015"}, {"body": "looks like also deprecated keep goal clear though remove global references paths", "d": "7/2015"}, {"body": "yes", "d": "7/2015"}, {"body": "watch abc buggy split point watch pathnodevalue b wrong", "d": "7/2015"}, {"body": "stefanpenner fixed detecting watch pathnodevalue thisb going normalizetuple produce right thing want backport", "d": "7/2015"}, {"body": "stefanpenner clarify primary goal drop normalizetuple watch uses source nasty bugs uppercase props prefixing supposed disambiguator framework splitting paths unambiguous become ambiguous", "d": "7/2015"}, {"body": "olivierlesnicki intentional template compilation client result good performance never suggested production mode apps use ember jsbin example template compiler included devdebug reasons writing tests strongly suggest excellent addon emberclihtmlbarsinlineprecompile part official testing story soon document story p otherwise find templates compiler download builds pages included bower package embercli could import template compiler devprodtest needed suggest", "d": "7/2015"}, {"body": "mixonic quite happy hopefully story gets documented soon", "d": "7/2015"}, {"body": "wow strange", "d": "7/2015"}, {"body": "seems like changing value rerender scheduling rewrite afterrender queue make thing working well also remove warning think due observers beeing synchronous", "d": "7/2015"}, {"body": "assigned least provide feedback since likely familiar", "d": "7/2015"}, {"body": "concur positionalargs array intended static property class fair game access instantiation component instance", "d": "7/2015"}, {"body": "document assert accordingly take advantage concept addressing issues compat code introduced", "d": "7/2015"}, {"body": "ok think treat positionargs static write assertions ensure users nt use way final resting place likely static support bothwithout cost today enable us begin fixing", "d": "7/2015"}, {"body": "brain dump discussing stefanpenner chat go forward would javascript var thing embercomponentextend stuff thingreopenclass positionalparams stuff export default thing deprecated functional", "d": "7/2015"}, {"body": "please sure read window support section wwwemberclicom windows also incorrect repo enoent initial install appears strange node race condition typically users remove directory try works related issue point hope time track one", "d": "7/2015"}, {"body": "ok thank", "d": "7/2015"}, {"body": "heroiceric got sec dig one", "d": "7/2015"}, {"body": "headsup select deprecated leaving us going forward likely better option use dom directly said try fix although suspect may bit low priority", "d": "7/2015"}, {"body": "point emberdata believe also fixed emberdata may stale emberdata maybe lagging behind release upgrading emberdata nt help sure open issue appropriate repo", "d": "7/2015"}, {"body": "stefanpenner oof realized course forgot check issue tracker time running latest ed fix master believe ed release", "d": "7/2015"}, {"body": "running latest ed fix master believe ed release believe pr exists merged address remember giving feedback best open issue ed get moving forward", "d": "7/2015"}, {"body": "jerel add gets released fixes added", "d": "7/2015"}, {"body": "strange work around", "d": "7/2015"}, {"body": "similar", "d": "7/2015"}, {"body": "real symbol polyfiled one", "d": "7/2015"}, {"body": "likely needs similar treatment", "d": "7/2015"}, {"body": "hrm polyfilled one", "d": "7/2015"}, {"body": "aww man rwjblue looked issue might already addressed missed sorry", "d": "7/2015"}, {"body": "hrm polyfilled one embers potentially many", "d": "7/2015"}, {"body": "stefanpenner whatever default babel configuration ember cli made modifications assuming play perhaps gap understanding", "d": "7/2015"}, {"body": "im sure polyfil decorates correctly", "d": "7/2015"}, {"body": "let check", "d": "7/2015"}, {"body": "perfect seems like require corejsshim symbol function symbol objectprototypetostringcall symbol object function objectprototypetostringcall symbol object symbol", "d": "7/2015"}, {"body": "decided freeze broken landscape likely revisit future point time landscape become reasonable example insanity chrome version canary chrome version", "d": "7/2015"}, {"body": "would loved fix unfortunately requireing something like corejs always time page feature work nt something commit especially something like changing embers codebasse actually uncovered several issues hope revisit future", "d": "7/2015"}, {"body": "understanding research correctly tostringtag run problem listed using typeof instead correct", "d": "7/2015"}, {"body": "problem listed using typeof instead nope", "d": "7/2015"}, {"body": "olivierlesnicki suggest using hook schedule three advantages runs render instead initial render component component may change height based change contents schedules change actions several components change height properties single expensive rerender scheduling actions ensure children parent components completed rendering components may change layout component nt believe observable property avoided adding one performance concern related firing property change notification rendering additionally want avoid rerenders much possible making part render process observable would encourage rerendering code", "d": "7/2015"}, {"body": "mixonic wo nt called schedule callback trigger rerender", "d": "7/2015"}, {"body": "olivierlesnicki correct still trigger rerender however finish current pass first cause single rerender even multiple components values set", "d": "7/2015"}, {"body": "expected behaviour per statement docs directly set values property longer connected original property", "d": "7/2015"}, {"body": "maheshsenni thanks explanation want achieve behaviour set values oneway property meanwhile also observer update original property rather disconnected existed method ember used", "d": "7/2015"}, {"body": "lucaszheng case would require use observer please follow stackoverflow community slack chat details", "d": "7/2015"}, {"body": "duplicate", "d": "7/2015"}, {"body": "edited js formatting", "d": "7/2015"}, {"body": "chriscareycode suspect", "d": "7/2015"}, {"body": "stefanpenner actually issue change build jsbin bug fixed due memory leak issue go yet perhaps mind worth time jump bug break feature existing app mine working thought worth noting fix end user simple enough rename variable something else", "d": "7/2015"}, {"body": "chriscareycode leak maybe unclear go back fix maybe enough things", "d": "7/2015"}, {"body": "yes anxiously awaiting fix test", "d": "7/2015"}, {"body": "chriscareycode leak merged able check", "d": "7/2015"}, {"body": "included", "d": "7/2015"}, {"body": "jsbin works", "d": "7/2015"}, {"body": "rwjblue ah yes tonights release", "d": "7/2015"}, {"body": "looks great far developer tools timeline see ever increasing js heap usage looks flat", "d": "7/2015"}, {"body": "buffer null issue also issue", "d": "7/2015"}, {"body": "yes addressed", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "fivetanley rubygems guy cc tricknotes", "d": "7/2015"}, {"body": "get published hour", "d": "7/2015"}, {"body": "rwjblue update thanks", "d": "7/2015"}, {"body": "published", "d": "7/2015"}, {"body": "cc tomdale wycats", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "tayhobbs thanks reporting definitely bug", "d": "7/2015"}, {"body": "update checked broken blockless version linkto fails works", "d": "7/2015"}, {"body": "cibernox could post jsbin minute", "d": "7/2015"}, {"body": "rwjblue sure", "d": "7/2015"}, {"body": "jsbin confirmed added", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "see discussion stupid aside please respectful opening issues may seem stupid reasons way works like way suggest actually rather nuanced complicated discussed similar issues", "d": "7/2015"}, {"body": "well said rlivsey closing duplicate", "d": "7/2015"}, {"body": "thanks reporting unsure already fixed master guides repo would mind reopening emberjsguides", "d": "7/2015"}, {"body": "sure thing sorry wrong place grimacing", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "problem", "d": "7/2015"}, {"body": "ya nt something support also suspect wo nt would require htmlbars compiler client side would likely pretty slow wish add components dynamically component helper may best bet may also want look context component rfc", "d": "7/2015"}, {"body": "stefanpenner okay makes sense thanks response take look context component rfc also preglimmer able something like successfully postglimmer still works initialization however changed function run nothing updated ui call regression intentional side effect glimmer thanks", "d": "7/2015"}, {"body": "also preglimmer able something like successfully know running compiler production really nt something would recommend infact would strongly advise unclear particular approach ever something intended support thisset layout newtemplate rerender said suspect line issue trying call rerender template component", "d": "7/2015"}, {"body": "intention call component changing layout see come alternative approach nt use compiler slow acceptably slow worstcase scenario highlighting modifying dom directly instead using component", "d": "7/2015"}, {"body": "possible change layout initial render least one issue open", "d": "7/2015"}, {"body": "got thanks follow issues", "d": "7/2015"}, {"body": "failing test rerendering updating layout", "d": "7/2015"}, {"body": "seem remember related fix tomdale extra invadation fix landed earlier week", "d": "7/2015"}, {"body": "exopit check canary", "d": "7/2015"}, {"body": "fixed latest release channel builds released soon demo", "d": "7/2015"}, {"body": "rwjblue", "d": "7/2015"}, {"body": "likely something openned rfc issue rfc repo bug", "d": "7/2015"}, {"body": "sandstrom general suggest one three using component possibly block params handle decoration creating decorator class one default proxy behavior perform better compatible removal later time using new emberhelper api create formatting helpers instead using decoration object general solution decoration may welcome definitely requires design likely rfc going close please let know missed anything note", "d": "7/2015"}, {"body": "fair point stefan right nt bug mixonic thanks less done wired using component decorator classes write rfc instead", "d": "7/2015"}, {"body": "sandstrom fwiw also need go straight rfc done poor job suggesting also open issue rfc repo gather usecases organize thoughts everyone large trying design api might better start since lots people experimenting different ideas still", "d": "7/2015"}, {"body": "mixonic thanks nt know option opened issue", "d": "7/2015"}, {"body": "hmm kind troubling see marked private given many things rely eg emberdata emberbufferedproxy sure hope nt going away anytime soon nevermind saw update marked public", "d": "7/2015"}, {"body": "done poor job suggesting also open issue rfc repo gather usecases organize thoughts everyone large trying design api add rfc repo", "d": "7/2015"}, {"body": "sandstrom got sec add option readme", "d": "7/2015"}, {"body": "believe duplicate unlikely fix unless someone knows solution cryptic error hand intend submit another rfc something calling kabab actions idea enable per element event handling like example still use standard event dispatcher avoids adding ton event listeners", "d": "7/2015"}, {"body": "cool could nt find duplicate issue must missed close one nt sure intended supported seemed like happy accident seen demos knocking thought give go makes sense go dispatcher opposed going back attaching handlers shop", "d": "7/2015"}, {"body": "worries could wrong dupe many emails smileycat", "d": "7/2015"}, {"body": "lets keep open duplicate linked", "d": "7/2015"}, {"body": "believe bug safari results detection code thrown rwjblue directly related email yesterday", "d": "7/2015"}, {"body": "let confirm", "d": "7/2015"}, {"body": "could terrible news glad nt enabled new feature", "d": "7/2015"}, {"body": "yes related guess need role fix sooner rather later", "d": "7/2015"}, {"body": "duplicate believe although one currently closed", "d": "7/2015"}, {"body": "idea one closed intent htmlbar props first attrs later approach highest possible fidelity underlying dom webcomponent nodes obviously loss fidelity addition actually illuminating flawed existing behaviors results serious issues failing tests away appears like much better solution", "d": "7/2015"}, {"body": "failing tests away appears like much better solution failing tests away solution", "d": "7/2015"}, {"body": "right failing tests waiting things", "d": "7/2015"}, {"body": "raytiley ah nt find thanks", "d": "7/2015"}, {"body": "believe address", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "thanks releasing", "d": "7/2015"}, {"body": "want add passing model observing modelproperty instead triggers expected", "d": "7/2015"}, {"body": "seyz locks guys confirm canary", "d": "7/2015"}, {"body": "confirmed still occurs canary", "d": "7/2015"}, {"body": "stefanpenner confirm", "d": "7/2015"}, {"body": "additional example see may duplicate jsbin link", "d": "7/2015"}, {"body": "number computed property component addon mine longer works upgrading sure root cause issue tried add observer dummy app controller found fired twice every time input value changed eventually found property getter also fired twice every update weird part property getter always returns correct value fired observer evaluates value every first time gets fired every second time tried adding observers properties component fire test behaviour addon use tag ember master branch ember", "d": "7/2015"}, {"body": "believe landed pr fixes", "d": "7/2015"}, {"body": "stefanpenner fix landed prevents double observers initial render address issue", "d": "7/2015"}, {"body": "update jsbin canary", "d": "7/2015"}, {"body": "appears trigger following legacyattrdidchange legacydidreceiveattrs rwjblue legacyattrdidchange fires drop legacydidreceiveattrs link together would also help initial render aswell", "d": "7/2015"}, {"body": "fyi passing data recommended using action way databinding may case new hook support older behavior good see existing api support behavior believe lacking docs new lifecycle hooks cc wycats trek", "d": "7/2015"}, {"body": "makes pretty awkward combined assures rendered attribute bound end components rendered state property value inconsistent state example click image see components value src different one rendered least supposed set attributes inside methods tell log message", "d": "7/2015"}, {"body": "stefanpenner tom yehuda decided nt ready public documentation yet", "d": "7/2015"}, {"body": "trek public correct", "d": "7/2015"}, {"body": "stefanpenner think angle brackets", "d": "7/2015"}, {"body": "stefanpenner think angle brackets sounds reasonable think posted comment days ago nt clear thanks clarifying", "d": "7/2015"}, {"body": "basic principle exposing binding label something would considered part ember api public private streams believe talking exposed outside ember internals considered bug definitely fix think componenthelper care value passed path value using path later looking value going cause issues template keyword scoping nontrivial eg path represent yielded block param could look need path make components api instead bound value described trying make case want functionality", "d": "7/2015"}, {"body": "thanks quick response case would like associate path input bound property various properties without requiring second property bound component example render html like create binding controller every use case using path access property manipulating path string use cases plausible components api could take care requirements plan idea part ember api would preferred solution would minimize boilerplate input", "d": "7/2015"}, {"body": "assuming talking something like embereasyform api case given string path provided model use new supported addon versions prior helper eg get value portion point value path right", "d": "7/2015"}, {"body": "relies place aswell ongoing effort migrate away form unfortunately core helpers utilized functionality changing hefty effort", "d": "7/2015"}, {"body": "thanks gents confirm seems like one move away relying functionality asap", "d": "7/2015"}, {"body": "confirm seems like one move away relying functionality asap yes would say relying private api big hazard", "d": "7/2015"}, {"body": "sirdunxalot yes digging private apis helpful us know cooperate try findbuild public apis cover use case case already gone label path pretty far might little trickier refactor away would suggest using strings like rwjblue suggested", "d": "7/2015"}, {"body": "created new label category report", "d": "7/2015"}, {"body": "great thanks guys good idea issue label", "d": "7/2015"}, {"body": "mmun leave open", "d": "7/2015"}, {"body": "stefanpenner using label anything besides debugging wrong promises example label subexpression handlebars code generated subexpression api looks like using property get access string bar change api", "d": "7/2015"}, {"body": "stefanpenner using label anything besides debugging wrong obviously true asked asked uses report private api usage next steps provide migration path deprecating carefully storing state symbol merely concerned closing acknowledge path forward", "d": "7/2015"}, {"body": "streams private let alone internal properties private streams interested reopening issue attempt deprecate label may want use label property future path forward rework api worth wo nt work gimmer never set", "d": "7/2015"}, {"body": "mmun whats point users telling us using private api tell nope nt", "d": "7/2015"}, {"body": "stefanpenner actually said noop instead besides issue nt representative every single private api usage report come", "d": "7/2015"}, {"body": "set seems worse recovering would make component work one version would still break glimmer", "d": "7/2015"}, {"body": "although think good idea remember core members stating jquery nt going away least", "d": "7/2015"}, {"body": "absolutely plan support using ember without jquery point would fully semver compliant removing required dependency nt break anything definitely making using ember along jquery error would semver violation imho", "d": "7/2015"}, {"body": "would love see thorough cross browser older mobiles exploration", "d": "7/2015"}, {"body": "seems like rfc rfc issue", "d": "7/2015"}, {"body": "seems like ember needs use abstract interface similar environment used internally allow ember boot node context", "d": "7/2015"}, {"body": "stefanpenner possible something like delay loading jquery used component view", "d": "7/2015"}, {"body": "stefanpenner possible something like delay loading jquery used component view possible also use jquery cross browser event delegation quirky bubbling cross browser behavior currently still eager also could made lazy", "d": "7/2015"}, {"body": "hugely favor ember requiring jquery issue wonderfully researched links believe belongs issue emberjsrfcs since bug perse ember closing heart favor issue", "d": "7/2015"}, {"body": "done", "d": "7/2015"}, {"body": "minimalist reproduction tracing tomorrow notes yes syntax incorrect helper however nt believe cause fail way appears matter helper morecomplicated scenario fixing syntax simply creates second error read property generateurl undefined something fishy", "d": "7/2015"}, {"body": "original report collection symptoms one problem issue simply container set testing nt resolve service router means router becomes results different failures depending upon tried something reference router nt decided best fix documenting", "d": "7/2015"}, {"body": "nathanhammond lines ensure default built registry contains incorporated emberqunit ensures registry contains default items using emberqunit", "d": "7/2015"}, {"body": "still error moving emberqunit different one updated dependencies latest versions minimal reproduction emberrouterrouter undefined untraced point continue look", "d": "7/2015"}, {"body": "two issues never made branch compare master stable rwjblue nt know build magic fix submit identical pr stable branch need add routersetuprouter", "d": "7/2015"}, {"body": "open cherrypicked pr", "d": "7/2015"}, {"body": "targeted release branch want start routing integration tests latest beta builds able use linkto emberqunit integration tests without calling startrouting", "d": "7/2015"}, {"body": "answer ca nt nt use move directly going actually receive first class support long term bridge deprecations need testing components actually work stands still nt story game code solutions minimallyinvasive approach proposals consolidate conversation things cc tomdale", "d": "7/2015"}, {"body": "commented pr need vet changes make sure make matters worse", "d": "7/2015"}, {"body": "okay calling clarification nt kosher inside embertesthelpers primarily build routerjs api surface available nt better solution landing nt fix everything", "d": "7/2015"}, {"body": "offline conversation summary acceptance test generic inside component guard routerrouter instead running", "d": "7/2015"}, {"body": "discussed safe solution essentially adding guards attempt access routerrouter nathan minutes ago think land fixes branches along tom fix", "d": "7/2015"}, {"body": "nt elegant ok pragmatic approach returning compatibility series like revisit entire code path", "d": "7/2015"}, {"body": "closed", "d": "7/2015"}, {"body": "identified esperanto one ember cli dependencies would mind opening issue", "d": "7/2015"}, {"body": "lol really nt virus", "d": "7/2015"}, {"body": "believe fixes issue", "d": "7/2015"}, {"body": "fix since tildeiohtmlbars merged", "d": "7/2015"}, {"body": "elaborate proper structure mean app structure using ember cli help illustrate standardish app structure course use pods deviate provided app makes sense follow structure", "d": "7/2015"}, {"body": "im going close please feel reopen appropriate repo issue reopened please try include extra detail believe bradcypert comment great future issue attempt elaborate points", "d": "7/2015"}, {"body": "added failingtest", "d": "7/2015"}, {"body": "possibly related", "d": "7/2015"}, {"body": "possibly also related rwjblue meant address", "d": "7/2015"}, {"body": "mgenev believe tomdale detailed technical posts planned", "d": "7/2015"}, {"body": "briangates took look example jsbin still wondering could start look issue tried adding logging help add clarity describing issue", "d": "7/2015"}, {"body": "worked briangates bit via slack might able provide background information posted jsbin two routes child dynamic segment name application template contains link child route segment values upon clicking link transitioning template correctly shows two values seems four issues arise go subroute link links rather expected transitioning url incorrect rather expected refreshing page actually result different app state set changing url manually seems update app first changed second change url updates values correct change url nothing happens change url updates values correct suspect somewhere along way something considering whether multiple routes dynamic segment name", "d": "7/2015"}, {"body": "might related moving config routes trek machty could one yall take look free minute", "d": "7/2015"}, {"body": "rlivsey use case using computed property qp default value honestly nt expect work might accident like understand using app", "d": "7/2015"}, {"body": "usecase display formatted url using computed property string form javascript const dateformat yyyymm export default embercontrollerextend queryparams datestr date date null datestr embercomputed date get const date thisget date return date dateformat dateformat null set k v thisset date windowmomentutc v dateformat return v suppose instead could instead invert behaviour instead computed property make set instead javascript datestr null date embercomputed datestr get const datestr thisget datestr return datestr windowmomentutc datestr dateformat null set date thisset datestr date dateformat dateformat null return date works would nice option way using cp value could assume default", "d": "7/2015"}, {"body": "added meeting agenda suggesting contributors cleanup branches removed stale branches", "d": "7/2015"}, {"body": "removed pinged last branches remain owners", "d": "7/2015"}, {"body": "thanks bringing attention", "d": "7/2015"}, {"body": "awesome boat", "d": "7/2015"}, {"body": "closing favor rfc", "d": "7/2015"}, {"body": "monkey patched side verify line suggested works", "d": "7/2015"}, {"body": "fyi arraycontroller sortable deprecated please transition cp arraysort work one would expect glimmer handles rerender case nicely", "d": "7/2015"}, {"body": "cibernox may easy one", "d": "7/2015"}, {"body": "cibernox got sec help transition internal usages deprecate public seems related controller extraction", "d": "7/2015"}, {"body": "already renamed commit suggesting standalone pr", "d": "7/2015"}, {"body": "suggesting standalone pr nope addition need deprecate public api", "d": "7/2015"}, {"body": "npm ends tethering read tomorrow afternoon likely", "d": "7/2015"}, {"body": "npm ends tethering read tomorrow afternoon likely many deps", "d": "7/2015"}, {"body": "apparently minutes enough", "d": "7/2015"}, {"body": "cibernox commit attached pr", "d": "7/2015"}, {"body": "stefanpenner attached pr removing arraycontrollers extracted separate one", "d": "7/2015"}, {"body": "thanks think get pr asap", "d": "7/2015"}, {"body": "michaelvdheeren rafaltrojanowski random question issues go away run tests ember seeing might similar problem think tracked added beta ga", "d": "7/2015"}, {"body": "mmahalwy components would suggest using new style integration tests nearly scenarios", "d": "7/2015"}, {"body": "hi wanted follow happy close something end", "d": "7/2015"}, {"body": "going close think fixed available release beta canary channel builds raytiley happy reopen solved end", "d": "7/2015"}, {"body": "looking far found nt specific reproduce thing well new view added", "d": "7/2015"}, {"body": "put together pr bit hack probably nicer solution possible feedback welcome least simple test case someone could reuse problem seems come fact parent component dirty htmlbars never asks generate children solved keywords special check visiting nodes hooked function keywords equivalent place components provide callback populating directly node perhaps problem env right place store info first place", "d": "7/2015"}, {"body": "ran also also breaks think breaks type set looked bit cause seems ember trying set type input element inserted dom tree ie allow also tried workaround nt seem update value", "d": "7/2015"}, {"body": "xrxr tried", "d": "7/2015"}, {"body": "stefanpenner yes", "d": "7/2015"}, {"body": "looked bit cause seems ember trying set type input element inserted dom tree fragment nt trying insert inserted regular tree", "d": "7/2015"}, {"body": "stefanpenner turns half correct p quick search found setting element regular tree would cause error assumed cause quick judge happens error happens element part document fragment small test case html", "d": "7/2015"}, {"body": "type input element must set inserted tree sounds reasonable thanks digging attributes like", "d": "7/2015"}, {"body": "nt know attribute behaviour sure bug reports", "d": "7/2015"}, {"body": "opened another issue htmlbars track fix shame since wont needed", "d": "7/2015"}, {"body": "way enough break", "d": "7/2015"}, {"body": "xrxr ya would imagine", "d": "7/2015"}, {"body": "update bug simple page showing problem", "d": "7/2015"}, {"body": "update bug plan look soon sorry delay queue full", "d": "7/2015"}, {"body": "tracking issue", "d": "7/2015"}, {"body": "stefanpenner preventing updating getting error upgrading", "d": "7/2015"}, {"body": "pixelhandler advice error help", "d": "7/2015"}, {"body": "believe plan make transparent may may backported yet implemented krisselden mmun likely speak clearly", "d": "7/2015"}, {"body": "tried still error tried smallest app maybe need everwhere core library party code seems like deprecation caused breaking error", "d": "7/2015"}, {"body": "seems like deprecation cased breaking error nt deprecation tried smallest app share repo demonstrate jsbin im sure whoever looks would interested seeing", "d": "7/2015"}, {"body": "stefanpenner api change oh perhaps error swear saw deprecated around early oh well everything broke guess would caught earlier able run beta could kept churn large codebase", "d": "7/2015"}, {"body": "pixelhandler plan make transparent binning like hash map collision", "d": "7/2015"}, {"body": "made transparent clearly breaking change", "d": "7/2015"}, {"body": "error suggests using following case duplicate", "d": "7/2015"}, {"body": "rwjblue confirm breaking change must use duplicates iterating array using fix error suggests use guid added blog post breaking change broke apps lol", "d": "7/2015"}, {"body": "pixelhandler feel free pr update blog post would love get fixed real point release expertise required fix", "d": "7/2015"}, {"body": "rwjblue confirm breaking change must use duplicates iterating array using fix error suggests use key index guid pixelhandler imho bug time consuming fix hope wycats someone time fix might worth calling known bug hopefully fixed", "d": "7/2015"}, {"body": "krisselden rwjblue stefanpenner handle error create unique id fly stefanpenner company work values privacy ca nt share app tinker blog project code share project able add suggested tiny app background core library party libs well core lib imported gem apps require template compiler since htmlbars deps tightly coupled templates compiled core lib apps using asset pipeline guess things nt getting unique ids ca nt repro jsbin", "d": "7/2015"}, {"body": "stefanpenner company work values privacy ca nt share app reproduction need full app jsbin isolated repo would best honestly nt want sift someones app unless", "d": "7/2015"}, {"body": "seems better generate unique id fly instead throwing error maybe inline compiler nt know prolly best use time deal error try use key everywhere", "d": "7/2015"}, {"body": "seems better generate unique id fly instead throwing error maybe inline compiler nt know nt related compiler runtime concern listdffing takes account key identify list changes time", "d": "7/2015"}, {"body": "stefanpenner rwjblue knew apps would find regression much test coverage ember", "d": "7/2015"}, {"body": "stefanpenner rwjblue knew apps would find regression much test coverage ember tests believe known regression sure deemed tolerable choice nt made", "d": "7/2015"}, {"body": "pixelhandler generated id may collide future key based dup may collide future key", "d": "7/2015"}, {"body": "krisselden use guid may still fail ok update things apps core libs see works", "d": "7/2015"}, {"body": "could hash dup key count dup", "d": "7/2015"}, {"body": "stefanpenner possibility adding blanket test coverage tools ember projects", "d": "7/2015"}, {"body": "want try get reuse pick reuses unlikely result massive amount diffs", "d": "7/2015"}, {"body": "krisselden sounds like work", "d": "7/2015"}, {"body": "stefanpenner possibility adding blanket test coverage tools ember projects would good addition maybe someone contribute lcov output coverals via istunbul although worth noting scenario nt missed branch test coverage nt help data permutations mentioned believe explicit choice workaround error emits deemed sufficient considering costbenefit tradeoff", "d": "7/2015"}, {"body": "guess good exercise regression would write failing test stefanpenner ping whoever let one slip ask help writing failing test uttered words ship anyway", "d": "7/2015"}, {"body": "added useful error error previously super obtuse take look jsbin fix issue duplicates general", "d": "7/2015"}, {"body": "pixelhandler already failing example provided jsbin offers everyone aware issue solving function available time", "d": "7/2015"}, {"body": "stefanpenner offer friday day rwjblue tell fix etc time think question priority time hrs", "d": "7/2015"}, {"body": "pixelhandler worth noting issue already well known well fleshed beating nt going make happen faster please note important unreported issues reported existing issues valuable add missing information ensure issue fully formed additionally commentary provides diminishing returns offend problem solution tell easy suspect rwjblue would landed days ago machine afterall may consider exploring suggestions kris gave seeing apply", "d": "7/2015"}, {"body": "pixelhandler seem motivated capably eager help lets plan hangout friday morning would love harness availability time", "d": "7/2015"}, {"body": "could work", "d": "7/2015"}, {"body": "stefanpenner spoke mmun slack mentioned maybe looking tonight", "d": "7/2015"}, {"body": "raytiley looks similar bucketing approach krisselden talking get weigh sure exact approach thinking elaborate different entirely would lovely adjustment", "d": "7/2015"}, {"body": "stefanpenner sounds good send invite fri morning like taking larger blocks time offering help week football kids meetings teams work meetup w ember night wife kids yr old grandpa house understand juggling priority emberjs priority friday day unless server burnt fire work", "d": "7/2015"}, {"body": "emberjs priority friday day unless server burnt fire work understood mindful suspect everyone motivationscostsavailiabity hashed work harmony smooth upgrade pains make world better place saturdays go surfing", "d": "7/2015"}, {"body": "stefanpenner suggestion though inside yielditem current map use binning duplicating already seen also inside yielditem", "d": "7/2015"}, {"body": "seen map needs binning", "d": "7/2015"}, {"body": "stefanpenner us tried work around key nt work us oh well", "d": "7/2015"}, {"body": "stefanpenner yeah nt deprecation warning removed", "d": "7/2015"}, {"body": "unrelated concerns warning versions prior key specified would received hairy error message deep inside htmlbars error instructs recover added intended stop gap measure provide least small amount insight cause error happening", "d": "7/2015"}, {"body": "wooohoo magic mmun", "d": "7/2015"}, {"body": "rwjblue stefanpenner mmun thanks fixing regression patch release soon", "d": "7/2015"}, {"body": "yes next patch release soon relative though dancers", "d": "7/2015"}, {"body": "rwjblue curious us broken apps blocked upgrading wait patch workaround use master branch wait", "d": "7/2015"}, {"body": "pixelhandler building ember documented unsure rwjblue chance backport fix stable branch likely build stable theory buildsemberjscom every commit built published currently tricky find version want would nice someone could help", "d": "7/2015"}, {"body": "stefanpenner backported stable would published release channel", "d": "7/2015"}, {"body": "stefanpenner backported stable would published release channel ah even unreleased merely backported commits correct", "d": "7/2015"}, {"body": "rwjblue release version ember website source emberdebugjs release page says updated days ago tag repo made days ago mean nonpatch release code release guess since issue blocks upgrading need build source manage fork something future back ported someone tell expect official release series regression patched really happy fixed extremely bummed released missing something guess impression patch release warranted regression breaking", "d": "7/2015"}, {"body": "big buttons download tagged release list builds bellow quote website builds listed incremental improvements made since may become tl dr fix list files bellow way becoming", "d": "7/2015"}, {"body": "pixelhandler release version ember website version source emberdebugjs release page says updated days ago tag repo made days ago mean nonpatch release code release every commit branches published bower use builds time need wait tagged release builds page discovered shows asset paths feel free use quite literally become next tagged version release channel builds generally always date last tag guess since issue blocks upgrading need build source manage fork something future back ported nope builds already discovered include patch want feel free use wink someone tell expect official release series regression patched ember version includes regression fix released done really happy fixed extremely bummed released available use via channel already checked", "d": "7/2015"}, {"body": "may ux issue builds place also confused someone interested pursuing likely discussion website repo appropriate", "d": "7/2015"}, {"body": "rwjblue ah makes sense team need clarity builds listed incremental improvements made since may become thanks get started latest release channel update", "d": "7/2015"}, {"body": "thanks get started latest release channel update awesome keep us posted", "d": "7/2015"}, {"body": "diogoko open issue repo instead", "d": "7/2015"}, {"body": "updates", "d": "7/2015"}, {"body": "timevans sorry yet", "d": "7/2015"}, {"body": "okie dokey thanks quick response", "d": "7/2015"}, {"body": "anyone interesting championing", "d": "7/2015"}, {"body": "runspired still looking costbenefit run", "d": "7/2015"}, {"body": "yes", "d": "7/2015"}, {"body": "runspired would fastpathing component events ember work would step initiation tree walked identify relevant listeners", "d": "7/2015"}, {"body": "likely events moved back events hash sure moved one auto registered initialization might require ember knowledge component tree trade offs sure quickest gain usecapture", "d": "7/2015"}, {"body": "events hash look like classes runspired think core would love see us switch capture based delegation time thing interested pushing forward rfc", "d": "7/2015"}, {"body": "stefanpenner absolutely favor pushing forward rfc although might humbly suggest pushing forward two rfcs first use better possibly go back hash component bugs event callbacks intermingled functions properties controllers components much simpler think know something event handler within events hash would also possibly allow ember detect events required ensure events listened second convert using events instead mousetouch events would make ember one first frameworks truly play well immediately mobile box", "d": "7/2015"}, {"body": "question hash would look like classes sure follow perhaps nt know enough limitationsimplementation classes", "d": "7/2015"}, {"body": "pardon ignorance two questions performance advantage using usecapture understanding usecapture triggers event event propagates root dom node instead bubbling way original reasoning behind moving away events hash pointer event though sounds like might deserve ticket", "d": "7/2015"}, {"body": "info pep", "d": "7/2015"}, {"body": "asakusuma yes perf advantage event would captured ember immediately instead bubbling phase prior reaching ember ideal ember eventing believe originally within confusion layer needed done away think basically encourage use someting like see", "d": "7/2015"}, {"body": "performance advantage using usecapture understanding usecapture triggers event event propagates root dom node instead bubbling way motivation nt performance advantage rather enable sanity dealing complex event scenarios may also positive perf sideaffect addition today actually incur several reentrant scenarios causing perfbugs blindly allow bubbling delegation trying finish tests memory leak raytiley try post detail later", "d": "7/2015"}, {"body": "think sane first step might remove use run loop actual user code execute vs bubble run loop call", "d": "7/2015"}, {"body": "think sane first step might remove use run loop actual user code execute vs bubble run loop call already case partially already case bubble phase runjoin moved viewhandleevent likely", "d": "7/2015"}, {"body": "would nt runjoin dispatch event create new loop nt one", "d": "7/2015"}, {"body": "move run risk naively implemented spewing sequently loops handler reached via bubbling likely need add js viewhasorancestorhas eventname emberrunjoin bubble else noop", "d": "7/2015"}, {"body": "yeah code referring", "d": "7/2015"}, {"body": "since breaks compatibility get point release", "d": "7/2015"}, {"body": "fix already stable branch included", "d": "7/2015"}, {"body": "thanks letting know looking forward smiley", "d": "7/2015"}, {"body": "release date waiting fix move code production preferably next week", "d": "7/2015"}, {"body": "release date waiting fix move code production preferably next week typically weekly release good chance towards end weekend early week", "d": "7/2015"}, {"body": "confirm", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "default ember used two way data binding long time transitioning away moment still much twoway binding land object seeing mutable object represent two way bound attributes property method using update set upstream source point generally suggesting folks use much confusion confusion cleared migrate angle bracket invocation change default binding twoway oneway see emberjsrfcs details get scenario working forcing param readonly using subexpression force one way binding", "d": "7/2015"}, {"body": "thanks rwjblue taking time explaining unfortunately nt see different jsbin still empty exact rendered keystream thought different solution problem helper know everything parameters passed nt know call helper used worked anymore since passed", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "raytiley yes exactly issue created track exact scenario closing favor", "d": "7/2015"}, {"body": "currently trying update actual release channel encounter symptoms like pass current controller helper call", "d": "7/2015"}, {"body": "also maybe related sometimes parentview wrong migrating legacy emberview view helper embercomponent resolves issues", "d": "7/2015"}, {"body": "confirm bug", "d": "7/2015"}, {"body": "anything going issue blocking upgrade", "d": "7/2015"}, {"body": "nt chance dig yet definitely seems like regression though going away definitely make sure works properly", "d": "7/2015"}, {"body": "krisselden likely rfc issue proposal rfc repo", "d": "7/2015"}, {"body": "rwjblue stefanpenner found old benchmark compares performance major frameworks using todo app benchmark using old version ember migrated ember surprisingly ember turns times slower maybe could take look app experts hope something terribly wrong app test git live", "d": "7/2015"}, {"body": "test abit quirky although likely issues initial render please nt assume dismissive potential problem let explain ember makes following assumption click producing changes realistic sequential clicks producing change batch work optimizations per click overhead optimizations means sequential clicks case poor benefit realistic scenario benefit optimizations quick adjustment instead perform optimization consider unrealistic scenario results worth noting still nt really realistic simulating sequential clicks nt app would normally delete items even highly unlikely user could issue clicks would result idle time suspect test adjusted single actions added single actions removed another action merely mutated would able see something useful thats saying improvements could nt provide benefit run risk focusing wrong things maybe even making important case worse", "d": "7/2015"}, {"body": "created simple example app initial rendering performance basically bunch small components perhaps useful investigations", "d": "7/2015"}, {"body": "think get idea seems quite working moment although tests support idea see app faster items inserted still slower others modified angular ember apps insert items update amp removal previously insertion items wo removal update insertion wo removal update thought ember app may slower due emberdata locale storage adapter uses changed app use embera batch insert items real app got problem dropdown items take initial rendering gets worse mobiles pretty much like screen backbone included also want say apps seem lowlevel harder understand ember app performance important", "d": "7/2015"}, {"body": "complete aside fwiw constantly reference benchmarks understand ember performance changes time please contribute benchmarks repo improve oneoff repo may helpful immediate discussion longterm impact thanks", "d": "7/2015"}, {"body": "thanks mixonic make conributions test captures difference", "d": "7/2015"}, {"body": "huge heavily loaded components page since switched way slower tt transitions liquidfire freezes glitches seconds without liquid fire takes around amount time instead renders loading template case liquidoutled odd reason", "d": "7/2015"}, {"body": "ya lots compat layer stuff seems borking performance hopefully someone dives", "d": "7/2015"}, {"body": "stefanpenner pointers begin looking", "d": "7/2015"}, {"body": "question feels like trap start profiler grab coffee put good trance music hang amp hope best", "d": "7/2015"}, {"body": "emberconf talk also related", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "rather sleeping resorted coffee checking noticed large number small issues issues potential cause pretty hefty work amplification although fixing result small win currently death thousand papercuts scenario plan slowly time permits go issue detail inspection root cause analysis proposed solution outcome etc anyways first finding appears far many change related events firing initial render obviously needed since initial render sufficient state initial render rely change events complete render atleast situation reference added extra debugging code see going since near top profile initial render really nearly unused resulting instrumentation output js fine array array change enumerable enumerable change activate arrangedcontent arrangedcontent change unexpected initial render attrscontext attrscontext change attrslayoutname attrslayoutname change attrstemplatename attrstemplatename change attrs attrs change fine content content change unexpected controller controller change expected lifecycle hooks didinitattrs didinsertelement didreceiveattrs didrender routing didtransition expected init strange low care length length change model model change might unexpected parentviewdidchange expected willinsertelement willrender expected willtransition well apparently componentsviews lifecycle events happening clearly lots really happening dispatches wasteful potential consumers may considerably amplify work anyways reviewing instrumentation two discrete problematic areas appear parentview lt view invalidating initial render results events thisattrs invalidating initial render parentview lt view smaller two also easiest fix quickly based assumption render top bottom turns true reason create child parent able give parent child creation ensures parentview reference part initial state childview costing us changeevents looking componentcreation code clearly already setup parent child relationship child creation time offending code actually linkchild explicitly calls set correctly detects nothing changes nt emit observer change event nt ware fires regardless causing unexpected work proposed fix need fixup things write tests result marginally improved experience dropped clearly also note container ownerview change post initial bit dubious still left also removed container set invalidations second one involved also break two chunks first reset render believe largely positionalargs provided left idea discussion second currently always broadcasts changes even state initial state nt opened targeted issue one yet hope thats likely keep busy time session notice many offenders future iteration try explore", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "awesome wizard eyes hugely appreciated dizzy", "d": "7/2015"}, {"body": "seeing small improvement using emberperformance pr", "d": "7/2015"}, {"body": "gavinjoyce also noticed mandatory setter mistakenly left enabled mega slow rwjblue quick fix suspect another release imminent", "d": "7/2015"}, {"body": "updated builds instead immediately releasing builds gavinjoyce used emberperformance see pr include mandatorysetter mistake", "d": "7/2015"}, {"body": "rwjblue thanks", "d": "7/2015"}, {"body": "ember pr shows significant change ember", "d": "7/2015"}, {"body": "seeing degrade rendering performance components huge degrade big noticeable user need loading spinners content nt use waiting times higher one blog posts wrote initial render componentheavy pages shows improvement tests using glimmer engine different components different routes complex nested etc depreciation code expert either seeing improvement slower rendering times checked big ember implementations random sites people use ember etc could really see glimmer shine rest current glimmer version would degrade render performance without benefit please correct wrong like everyone use case list companies stock market elements updated every ms really love ember really love developing ember concepts version performance acceptable taking consideration benefits framework state said expert maybe expert could answer question possible glimmer future least fast engine version", "d": "7/2015"}, {"body": "possible glimmer future least fast engine version nt glimmer related code glimmer layer causing issues large due compatibility comment begins investigation got fixing another piece puzzle gavinjoyce ya expected nt believe performance tweaks would landed release atleast regress time adding comprehensive tests emberperformance would fantastic", "d": "7/2015"}, {"body": "stefanpenner sure happy", "d": "7/2015"}, {"body": "stefanpenner sure happy always wanted good thorough regression suite could easily use test regressions also run regular basis think automation would stretch goal requires dedicated hardware reduce variability vms introduce machine handy needed", "d": "7/2015"}, {"body": "stefanpenner thank clarification hard work investigating core issue hope best", "d": "7/2015"}, {"body": "trouble well takes around load select menu built components ember mobile really really slow tested android chrome live test related code menus select menu items items takes around", "d": "7/2015"}, {"body": "implemented fixes first work amplifications described resulted speedup whole story good step right direction appear work amplifications still exist mentioned chat try report issue form sometime soon got family next unsure active small adjustments appeared another considered low hanging fruit quick test shows friend slower safari running sandstrom code difference partially non trivial portion related emberconf talk poorly excess shape allocations occur appears recent view layer refactoring although much nicer actually introduced additional related issues keep diving long hanging fruit gives us best bang buck", "d": "7/2015"}, {"body": "stefanpenner appreciate ongoing investigations fruit harvest greenapple", "d": "7/2015"}, {"body": "interestingly non variant basically using dom directly nt leak attrnodes edit still leaks something like also billion times faster nt speculatively setup bindings swear past made pay go must regression rwjblue remember making pay go nt case still going look leak though", "d": "7/2015"}, {"body": "found problem least found source one leaks need spend time tonight yet thinking solution puts better path", "d": "7/2015"}, {"body": "leak demonstrated fixed", "d": "7/2015"}, {"body": "mixonic understand well case way scheduling calculations afterrender queue want get rid deprecation warning", "d": "7/2015"}, {"body": "yes believe correct", "d": "7/2015"}, {"body": "ok thanks rwjblue thought wrong manipulate run loop cases many places app compute width parent component use children using", "d": "7/2015"}, {"body": "hehe saying good solution way today smilecat", "d": "7/2015"}, {"body": "ok great edge smileycat", "d": "7/2015"}, {"body": "added link releases page fixing css site weeks ago happy add references needed think deprecations obvious current ember dev reads every release blog new dev clear", "d": "7/2015"}, {"body": "think several things address issue deprecation messages improved releases warnings like one removed pushed rfc exposing api customizing deprecation warning handling still needs implementation moving forward rwjblue plans backwards compatible addon supporting proposed api fresh explanation deprecations link page builds going close let know missed anything essential", "d": "7/2015"}, {"body": "issue work around", "d": "7/2015"}, {"body": "regression likely caused attrs proxy related attrs code", "d": "7/2015"}, {"body": "stefanpenner exactly agree almost certainly related attrs proxy little background prior spelunking time attribute changed set entire object triggers root attributes via attrs proxy", "d": "7/2015"}, {"body": "yes new code issues phases component initialization lt pretty sure solution plan work week post initialization changes lt idea nt thoroughly investigated", "d": "7/2015"}, {"body": "seeing issue", "d": "7/2015"}, {"body": "also seeing issue ember works expected ember initialization component causes observer fire observers fired twice everytime bound property changed", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "naming convention use dashes underscores", "d": "7/2015"}, {"body": "yes quickly realized beginner would nt know since guides said anywhere ca nt use underscores double checked routing section failing silently nt help either", "d": "7/2015"}, {"body": "samsinite work thought simple fix haha would still argue class renamed since views longer supposed exist though", "d": "7/2015"}, {"body": "rwjblue let add today agenda", "d": "7/2015"}, {"body": "started application monday needed add application view addchange classes", "d": "7/2015"}, {"body": "solution specific case discussed way add classes application view element must use additional dom node inside application template discussed issue detail today seems use case remain awkward land routable components users absolutely require customization application view element suggest using emberlegacyviews addon addon silence deprecation warnings regarding views cause api continue present routable components land able safely migrate away addon going close issue wontfix please feel free comment reopen missed something significant", "d": "7/2015"}, {"body": "specified quoteless path action helper resolve action name string resolve", "d": "7/2015"}, {"body": "progress issue", "d": "7/2015"}, {"body": "persons interested think close issue dammage everyone implement thing components handle model changes could handled helper", "d": "7/2015"}, {"body": "take look demo see block param indeed updated properly expecting fired update block param true ember every rerender deleted recreated element associated viewcomponent however ember element inserted updated change using mentioned earlier used similar behavior case sorry delay responding seems like sorted", "d": "7/2015"}, {"body": "believe running acceptance tests esa esa devise js describe invalid login function beforeeach function thisoptionsstatus validate session function andthen gt expect currentsession isauthenticated toequal false expect currentsession get contentsecure nottoincludekeys objectkeys thisresp alternative way testing user flow", "d": "7/2015"}, {"body": "stefanpenner seems dubious allow rejections tests seems perfectly normal else would test show appropriate error message get response api also behavior bad also inconsistent nt break test first case test adapter ignores", "d": "7/2015"}, {"body": "note intimately related emberclirfcs proposes switching embercli default ajax adapter wrapper unlike per spec resolves successfully error object may case longterm path ember nt use control flow apps expect right", "d": "7/2015"}, {"body": "jamesarosen clarified unhandled rejections error objects dubious allow handle rejections unhandled without reason instanceof error fine already asserted", "d": "7/2015"}, {"body": "somehow think heading towards conclusion yet nt quite understand said following ok mind js reject undefined catch new emberrsvppromise function resolve reject reject reject undefined catch new emberrsvppromise function resolve reject reject catch emberk reject string catch new emberrsvppromise function resolve reject reject tsk tsk reject string catch new emberrsvppromise function resolve reject reject tsk tsk catch emberk reject object catch new emberrsvppromise function resolve reject reject old object literal reject object catch new emberrsvppromise function resolve reject reject old object literal catch emberk reject error catch new emberrsvppromise function resolve reject reject new error tsk tsk reject error catch new emberrsvppromise function resolve reject reject new error tsk tsk catch emberk", "d": "7/2015"}, {"body": "except unhandled rejection rejects error sorry mobile would cited one", "d": "7/2015"}, {"body": "except unhandled rejection rejects error get board", "d": "7/2015"}, {"body": "jamesarosen yup thought also current behavior also handles rejection scenarios long handled turn actions queue flush good go likely expand yet recently added extra hooks runloop anyways believe current state actually one wants described happen must consider regression fix", "d": "7/2015"}, {"body": "marcoow think work around depends", "d": "7/2015"}, {"body": "also current behavior following code breaking js function failtodox return new emberrsvppromise function resolve reject emberrun null reject error test catches function assert var caught false failtodox catch function e caught e assertok caught null get test still fails runloop wrapping", "d": "7/2015"}, {"body": "jamesarosen might wrong think depends setup rsvp onerrordefault check adapter set depending result either throw error causes called wo side effects print error console add assertion test work isolation might work running whole test suite acceptanceintegrationunit tests", "d": "7/2015"}, {"body": "twokul yeah nt jibe stefanpenner saying except unhandled rejection rejects error ok also current behavior also handles rejection scenarios worries long handled turn actions queue flush good go suggests something runloopwrapping ca nt prevent promise failure bubbling", "d": "7/2015"}, {"body": "emberrun null reject error things run forces flush early said sure nonerror object causing assertion throw appears like bug", "d": "7/2015"}, {"body": "lines dont quite look correct", "d": "7/2015"}, {"body": "ultimately something nt jive said likely bugomissionregression", "d": "7/2015"}, {"body": "marcoow think work around embertestadapter null beforeeach depends qunit mocha really nt advised aware footprints gun", "d": "7/2015"}, {"body": "stefanpenner yeah might hide problem course nt actually solution iirc ran actually makes test fail regardless whether rejection handled test", "d": "7/2015"}, {"body": "enumerated added tests current behavior", "d": "7/2015"}, {"body": "marcoow fixed turns using quite old version rsvp recent refactoring scenario solved problem correctly align statements also add appropriate test cases", "d": "7/2015"}, {"body": "stefanpenner great looks good", "d": "7/2015"}, {"body": "anybody working still issue ember call hook fires nt fire", "d": "7/2015"}, {"body": "jslippy setupcontroller runs controller initialization refresh triggers model hooks", "d": "7/2015"}, {"body": "setupcontroller associated route hooks refire well", "d": "7/2015"}, {"body": "model hook called setup controller also called example provided demonstrates issue would good place start debugging", "d": "7/2015"}, {"body": "facing problem wanted prepare polyfill came", "d": "7/2015"}, {"body": "dschmidt", "d": "7/2015"}, {"body": "bigger issue affecting components link views called early access called late get add", "d": "7/2015"}, {"body": "measurable performance hit using init event vs overriding init yes willdestroy destroy methods super api", "d": "7/2015"}, {"body": "nathanhammond yeah still seems issue canary another bin working previous version", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "works chromium amp firefox use polymer global setting include versions tested ember js polymer chromium firefox", "d": "7/2015"}, {"body": "bjornharrtell provide example project ember working polyer", "d": "7/2015"}, {"body": "question better asked stackoverlfow appear bug", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "couple months progress issue fixed would much like know proceed accordingly one major hurdles updating ember", "d": "7/2015"}, {"body": "nt look like anyone time prioritize yet", "d": "7/2015"}, {"body": "mixonic yeah understand higher priorities guys intention never fix fine stuck limbo knowing like definite eventually fix definite one effects never going fix rework naming components conflict occur could someone answer please", "d": "7/2015"}, {"body": "quoting definitely bug need fix", "d": "7/2015"}, {"body": "yes main special meaning better worse", "d": "7/2015"}, {"body": "think closed", "d": "7/2015"}, {"body": "addressed", "d": "7/2015"}, {"body": "ran thanks idea running setting async value old service still need available throughout app p would love see kind support async delaying instanceinitializers added back ember", "d": "7/2015"}, {"body": "flyswatter personally think asynchronous instance initializers bad idea nt participate router promise chain love use casedriven discussion improve syntactic sugar adding promises chain fwiw apps asynchronous setup give method returns promise rsvpall js export default routeextend auth service websocket service beforemodel let auth thisget auth let websocket thisget websocket effects async instance initializers without carving entirely different path system", "d": "7/2015"}, {"body": "tomdale suggestion also benefit presenting completely blank screen async done since use loading templates", "d": "7/2015"}, {"body": "hi tomdale zot zot works fine nt realize initializers prevented even loading templates taking place good argument continue way look back think mostly holding semantics initialization nt think use case left requires otherwise short maybe note docs async transactions recommended approach", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "timohofmeijer share solution using childviews mark menu items active navigation dropdown eg bootstrap navbar childviews able observed tree type navigation structures bit difficult work", "d": "7/2015"}, {"body": "basically wrapper component active classbinding observes route changes looks classes super elegant long application scope direct access painless else need pass along something triggers route transitions activelinkcomponentjs export default embercomponentextend classnamebindings active external binding currentpath null currentpath trigger could also use didtransition within route combined active embercomputed currentpath gt return amp amp active length applicationtemplatehbs activelink currentpathcurrentpath linkto parent parent route linkto parentfoo class ishidden linkto parentbar class ishidden activelink port alex speller pre solution within repo issues perhaps versatile solution offered rwjblue good luck kilowhisky", "d": "7/2015"}, {"body": "ended modified version topaxi turned array made recursive still seems like lot boilerplate", "d": "7/2015"}, {"body": "fixed due", "d": "7/2015"}, {"body": "please confirm close", "d": "7/2015"}, {"body": "wayplans provide context warning", "d": "7/2015"}, {"body": "found discussion trying update use new cp syntax ember automatically call thisget thisset returns undefined include ugly getters end setters would nice write", "d": "7/2015"}, {"body": "spruce aligned regular javascript getterssetters must return value setter function however good news ember changes behaviour returns value set instead target aligned js getterssetters means able write still explicitly return nice oneliner", "d": "7/2015"}, {"body": "nice thanks", "d": "7/2015"}, {"body": "would one solve one javascript streetcomplete embercomputed street streetnr get function", "d": "7/2015"}, {"body": "appears regression implemented work", "d": "7/2015"}, {"body": "ping dgeb resolver refactor got merged", "d": "7/2015"}, {"body": "igort ember version working making calls application application instance initializer sure working container removed container class available registry updated example would great updated failing test would even better", "d": "7/2015"}, {"body": "last checked update issueretest latest code next week", "d": "7/2015"}, {"body": "thrown example calling container understand core issue need communication channel registries associated containers clears associated caches", "d": "7/2015"}, {"body": "reopen seems lost changes rwjblue another syntax using", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "may good explore rfc rfc issue appears feature request bug report", "d": "7/2015"}, {"body": "stefanpenner start discussion appropriate place", "d": "7/2015"}, {"body": "make issue pr rfcs repo emberjsrfcs gather feedback interested seeing actual use cases rather foo bar discussion asap feedback taken account work angle bracket components", "d": "7/2015"}, {"body": "mmun made issue rfcs awhile since actual use case try come better example foo bar", "d": "7/2015"}, {"body": "hello running issue parent route want template default content render child route example import ember ember import config configenvironment router emberrouterextend location configlocationtype routermap channels route channels path route channel path slug export default router templateschannelsindexhbs brown fox jumped outlet content cool component displays within parent index view outlet templateschannelschannelhbs content child routetemplate possible seems touch template inheritance found issue way achieve currently", "d": "7/2015"}, {"body": "chiming lot exceptions production mobile safari", "d": "7/2015"}, {"body": "sure link cloutierlp jdurand kemenaran appear working apps used french speaking users idea could come play never know mobile safari different note anyone updated still getting", "d": "7/2015"}, {"body": "jbourassa interesting find start logging client locale see checks could stopped paying attention nt seen issue embersource emberdata jbourassa cloutierlp kemenaran ever linked user reported issue guys regularly seeing popup production fixed embersource emberdata deprecations amp breaking changes app end month either open new issue link post depending seeing logs", "d": "7/2015"}, {"body": "jdurand nope single user report anything seems linked updating last week hope fix still way behind emberdata might root cause report back production thanks update", "d": "7/2015"}, {"body": "thanks everyone continued investigation", "d": "7/2015"}, {"body": "itemcontroller deprecated removed point future definitely suggest refactoring avoid using deprecated features rwjblue really deprecated nt look like deprecation notes definitely believe say deprecated though", "d": "7/2015"}, {"body": "definitely deprecated apparently deprecation guide needs updated demo deprecation message", "d": "7/2015"}, {"body": "without reproduction information issue nt actionable seems gone stale closing gladly reopen actionable information provided", "d": "7/2015"}, {"body": "discussed someone via ember slack cases replace connecting attribute form element simply wrapping label content form element within use example instead subverts need unique maintaining niceties labels activating form element label clicked", "d": "7/2015"}, {"body": "sirzach able solve seems related possibly component error goes away strip template", "d": "7/2015"}, {"body": "visoft nt tested latest yet try remember update get chance", "d": "7/2015"}, {"body": "addressed", "d": "7/2015"}, {"body": "actual solution see original repo array added module call nt seem solve essentially identical problem mixonic exactly done pull object container issue opened detailing case", "d": "7/2015"}, {"body": "seems like bug password lib appears work correctly", "d": "7/2015"}, {"body": "scenario resource async relationship resource one viewsroutes want display composed string tags given contentitem attempted create property model using matter structure set return values results promise thread ember discussion forum shows even heavy hitters struggle require hack like one get around", "d": "7/2015"}, {"body": "plans making promises work natively streams bindings systems nt fix annoyances moves stuff along correct direction nt bug rather feature exist someone wants push forward feel free open issue rfc repo inclined full rfc", "d": "7/2015"}, {"body": "thanks update stefanpenner", "d": "7/2015"}, {"body": "docs fixed", "d": "7/2015"}, {"body": "took pass added failing tests morphrange tried narrow bug chrome failed find good reproduction got kris change order insertion hopes think repair issue would welcome eyes would like time dive back super frustrating", "d": "7/2015"}, {"body": "fixed special case list", "d": "7/2015"}, {"body": "throw case helps someone meantime", "d": "7/2015"}, {"body": "ember cli redering", "d": "7/2015"}, {"body": "use", "d": "7/2015"}, {"body": "ooohhh force wave never", "d": "7/2015"}, {"body": "guys hear something", "d": "7/2015"}, {"body": "looks like fixed perhaps workmanw please check also fixed", "d": "7/2015"}, {"body": "novtor checked canary issues still working updated jsbin canary links edit permant nonannoymous jsbin link", "d": "7/2015"}, {"body": "right workmanw bug persists checking route refreshmodel false queryparams worked looking forwrard fixing", "d": "7/2015"}, {"body": "shameless bump know everyone busy glimmer stuff still issue us spent minutes trying figure async promise architecture leads believe requires good amount ramp figure know lot code likely refactored routable components looks like least releases really like see easy fix advice would really appreciated", "d": "7/2015"}, {"body": "might right look", "d": "7/2015"}, {"body": "question based asked stackoverflow feel free cross link future travelers find way answer", "d": "7/2015"}, {"body": "currently freeze additional api like largely easily added via community addons without bloating ember time addons prove pivotal core reconsider", "d": "7/2015"}, {"body": "running issue well ended patching server side would nice ember didnt explode", "d": "7/2015"}, {"body": "railsjedi added pull request passes tests works fix error however like said ember folk might want fix differently might get lost pull anyway", "d": "7/2015"}, {"body": "could fix always pushing absolute url instead relative one eg instead since information allows us eliminate url parsing ambiguity explicit", "d": "7/2015"}, {"body": "tomdale yup think considering use shimmed version prefix url stated nt fix wo nt match route stefanpenner mentioned think suitable test", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "following turns referenced issue fix though would needed step original jsbin longer works updated one spent little time trying figure quite new ember take grain salt delegates routerjs microlib hits hits transitionbyintent note hits object example calls finally example would purposefully throw error convenience comment ideally throw error provide maximal information user enough context objects provided proves cumbersome ember cases inner template helpers evaluated parent helpers unrender cases error somewhat prematurely fires boils routerjs purposefully throwing error even would swallow still slightly better since see rejected promise error ie may also eventually complicated optional segments routes becomes thing reference failing test routerjs think helpful going humble suggestion move issue routerjs possibly routerecognizer change repo throw error avoid issue noted comment maybe handle leave someone knows good idea", "d": "7/2015"}, {"body": "machty take look", "d": "7/2015"}, {"body": "littlejon worked well thanks", "d": "7/2015"}, {"body": "facepunch noting still ongoing issue latest release ember", "d": "7/2015"}, {"body": "probably right regression bug stuck low priority seems affect tiny slice actual apps three major releases single bug report lot underspecified corner cases old implementation tried fix many practical would like fix one nt found time", "d": "7/2015"}, {"body": "bumped issue today app also jumped updated jsbin latest version seeing issue changing nested route rendertemplate seems working moment", "d": "7/2015"}, {"body": "glad one issue looked example workaround could nt get working original broken jsin", "d": "7/2015"}, {"body": "alexdiliberto seems fix make act like version bugs removed transfers route", "d": "7/2015"}, {"body": "yea still unfortunately removing block transition looks messed hopefully issue fixed", "d": "7/2015"}, {"body": "believe several fixes landed allow destroy called appinstance fix unrelated analysis potentially related leaks given example try upgrading latest canary ensuring instance destroyed rss levels stays stable submitted adjustments sure run process see lovely logging demonstrates rss settles time indicates leak reported issue fixed suspect additional leaks likely around someone finds nice reproduction would great making tracking issue relatively easy anyways joshvfleming thank detailed report suspect close issue", "d": "7/2015"}, {"body": "great thanks stefanpenner check today", "d": "7/2015"}, {"body": "confirmed", "d": "7/2015"}, {"body": "yessssss", "d": "7/2015"}, {"body": "stefanpenner whoops looks like actually leak remaining namespaces leak nt appear test app previously creating reusing one application updated create application request see steadily increasing rss run test script edit occurs might using application object wrong intended usage create single application use service requests really leak", "d": "7/2015"}, {"body": "may related issues tests well getting new instance acceptance test", "d": "7/2015"}, {"body": "intended usage create single application use service requests really leak yes", "d": "7/2015"}, {"body": "cool thanks stefanpenner looks like sorted", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "grantovich still open feel free close resolved mentioned discorick loading routesubstate seems disabled design", "d": "7/2015"}, {"body": "sandstrom right particular issue resolved close could problems resolved anyway nt able check yet", "d": "7/2015"}, {"body": "line comment use nt know fixes problem embercomputed used object space functions since rerun depending keys change", "d": "7/2015"}, {"body": "reside intended used part base class rather instance example approaching demo would likely separate object js var settings emberobjectextend editingculture embercomputedalias editingculture editorcomponents function let topicobj thisget topicobj property topicobj note technically possible add computed properties object fly would deem happy path recommend", "d": "7/2015"}, {"body": "rwjblue mentioned using quoted value results pass helper method makes final value believe happens fact case know needs happen fix maybe help need direction", "d": "7/2015"}, {"body": "ok digging understand problem issue fact helper found added following code method js var map arraymap function element return value element safe element instanceof emberhandlebarssafestring join function issafestring element return element instanceof emberhandlebarssafestring consolelog safe arraysome issafestring concat values map consolelog safe arrayevery issafestring concat values map following template model import ds emberdata project dsmodelextend attributes color dsattr string safecolor function return new emberhandlebarssafestring thisget color property color fixture data projectreopenclass fixtures id color id color get following web console output guess ca nt make return new know safe update would need know variables assumed safe please correct wrong assuming happens called seems like whatever parses dom element attributes calls need look", "d": "7/2015"}, {"body": "rwjblue embertemplatecompiler make attribute strings html safe words add embertemplatecompiler saying notice became", "d": "7/2015"}, {"body": "unable reproduce much work specifically around viewcomponent lifecycle cleanup leaks fixed someone able demonstrate please provide demo demonstrates gladly reopen", "d": "7/2015"}, {"body": "would also like understand test async responsibilities component something component unittest instead acceptance test pointers around think separating acceptance tests units tests would helpful", "d": "7/2015"}, {"body": "lifeinafolder may good reference nt cover async stuff covers alot maybe future iteration include support integration mode", "d": "7/2015"}, {"body": "stefanpenner thanks helpful clearing doubts", "d": "7/2015"}, {"body": "helpful clearing doubts hopefully eventually mostly cleared", "d": "7/2015"}, {"body": "stefanpenner would one go testing async stuff component integration tests component renders based promise hard time getting tests wait promise resolved moving next state quick example something like projectitem projectsprojects assertok check loading state deferredresolve array projects assertok chat loaded projects", "d": "7/2015"}, {"body": "rwjblue hi robert still throwing error input type tel number seems ember fixed branch stuck require support would nice get patched branch well", "d": "7/2015"}, {"body": "alright believe issue props attrs correctly reflect think best solution special casing heightwidth detecting string etc", "d": "7/2015"}, {"body": "note need fixed htmlbars keep open tracking issue", "d": "7/2015"}, {"body": "wycats tomdale reminder cc", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "also check", "d": "7/2015"}, {"body": "rwjblue fyi apps back white screen doom today updated sure yet similar regression changes ca nt run beta anymore least timeframe ember release cycles", "d": "7/2015"}, {"body": "pixelhandler sounds bad please open issues track cause happily fix anything bugs ember side", "d": "7/2015"}, {"body": "stefanpenner looks fixed", "d": "7/2015"}, {"body": "nt believe bb update sync", "d": "7/2015"}, {"body": "ianbale subscribe", "d": "7/2015"}, {"body": "reduce computerarray computed gone simply use basic mapfiltersortslice utilizing glimmers data diffing", "d": "7/2015"}, {"body": "work expected", "d": "7/2015"}, {"body": "jnfingerle work around still think work fixing backporting change version ember sure plans releases security releases", "d": "7/2015"}, {"body": "using elementid also addresses slightly though exact use case", "d": "7/2015"}, {"body": "breaks semver understand happen said nt problem fine closing rwjblue already", "d": "7/2015"}, {"body": "vasilakisfil exactly looking thanks totally unrelated issue though", "d": "7/2015"}, {"body": "sortablemixin deprecated goingforward please use works great glimmer box", "d": "7/2015"}, {"body": "stefanpenner documentation sortablemixin deprecated mention deprecation able find issue single stackoverflow answer deprecations doc example mentions arraycontroller going mixin api docs sortablemixin also nt yet mark deprecated question twofold official mixin way chance mark deprecated docs", "d": "7/2015"}, {"body": "viewcomponent lifecycles quirks earlier betacanary nicely reworked issue still present please report back sure using versions ideally sort reproduction repojsbin", "d": "7/2015"}, {"body": "using liquidfire best possible way get really good affects like basically liquidfire keeps dom around long enough animations cleanly would strongly recommend approach taken animation", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "would love angle bracket components land", "d": "7/2015"}, {"body": "glimmer fixed", "d": "7/2015"}, {"body": "deprecated", "d": "7/2015"}, {"body": "although strange appears working expected instead example written using datadown actions work expected", "d": "7/2015"}, {"body": "seems like browser bug dont believe fix end someone suggestion feel free let us know", "d": "7/2015"}, {"body": "wycats although want kill likely need way broadcast arbitrary enumerableiterable changed rerender", "d": "7/2015"}, {"body": "already gone", "d": "7/2015"}, {"body": "everything work", "d": "7/2015"}, {"body": "ok try update", "d": "7/2015"}, {"body": "nt something plan support directly merely wrap another component structure", "d": "7/2015"}, {"body": "cc tomdale likely broken boot order stuff guys changed", "d": "7/2015"}, {"body": "public api love solve use case leojh would mind explaining needing bare instance maybe public api could surface", "d": "7/2015"}, {"body": "tomdale ember app embedded inside aspnet web forms app know using api order request route transitions ember app host app breaking change achieved behavior following", "d": "7/2015"}, {"body": "leojh thanks reply sounds like workinprogress routing service exactly need wrap glimmer loose ends would love try get prioritized meantime fix approximately correct although may less brittle register instance initializer exports router rather poking", "d": "7/2015"}, {"body": "tomdale aware using recommended explore suggestion", "d": "7/2015"}, {"body": "tomdale breaking change likely fixed series potentially deprecated drop", "d": "7/2015"}, {"body": "stefanpenner nt believe ever public", "d": "7/2015"}, {"body": "stefanpenner believe documented public", "d": "7/2015"}, {"body": "feel free close fyi used many early jsbins leaked globals world", "d": "7/2015"}, {"body": "believe fixed reopen assuming reproduction provided", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "fixed routerjs fix merged", "d": "7/2015"}, {"body": "reposting nt needed best venue need keep bug tracker topic focused bugs become unwieldy", "d": "7/2015"}, {"body": "seeing similar issue using replace together queryparam definition", "d": "7/2015"}, {"body": "also came across today stands ca nt use keypress event work whether pressed", "d": "7/2015"}, {"body": "yes make sure id documented", "d": "7/2015"}, {"body": "github", "d": "7/2015"}, {"body": "also issue discovered today issue nt appear occur anymore", "d": "7/2015"}, {"body": "without reproduction actionable", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "unable reproduce someone able provide runnable reproduction gladly reopen", "d": "7/2015"}, {"body": "mixonic hi matthew still throwing error input type tel number seems ember fixed branch stuck require support would nice get patched branch well", "d": "7/2015"}, {"body": "adambuczynski backport nonsecurity bug fixes affected versions fix included forward", "d": "7/2015"}, {"body": "cheers rwjblue thanks prompt reply see convince upgrade", "d": "7/2015"}, {"body": "issue belong guides repository post issues related guides would great could update close issue reopen new one needed guide repos thanks", "d": "7/2015"}, {"body": "appears work expected view layer resilient changes prevent unexpected view churn", "d": "7/2015"}, {"body": "throw exception nt supported confuse users", "d": "7/2015"}, {"body": "mmun mind assigned problem p", "d": "7/2015"}, {"body": "checked still broken chains bindings still support globals", "d": "7/2015"}, {"body": "mmun must kill", "d": "7/2015"}, {"body": "basically boils nt valid html theory may able move delimiter high priority solve part new angle components stay tuned", "d": "7/2015"}, {"body": "ca nt wait work since last update", "d": "7/2015"}, {"body": "experiencing issue version causing acceptance tests fail using ehntoo hack temporarily run tests feedback would appreciated", "d": "7/2015"}, {"body": "seeing issue", "d": "7/2015"}, {"body": "reduce computed array computed overhauled implement simple cps lazy semantics correctly preserved way", "d": "7/2015"}, {"body": "working ember input event names list assumed would", "d": "7/2015"}, {"body": "looks like general bug work around use input directly html action helper ex best solution works", "d": "7/2015"}, {"body": "although good idea really bug report hope someone creates addon", "d": "7/2015"}, {"body": "pattern nt used long time service injection would better", "d": "7/2015"}, {"body": "tried reproduce issue could nt find problems problem still persisting please share jsbin steps reproduce fix bug", "d": "7/2015"}, {"body": "sortablemixin arraycontrollers deprecated bug invalid since glimmer landed suggested sortfilter cp let glimmers data diffing handle rest", "d": "7/2015"}, {"body": "working expected class inherits mixin classes different mixins instances var mymxin embermixincreate var myothermixin embermixincreate myobjectreopen mymixin apply mixin eventual mixins myobjectreopenclass myothermixin apply mixin class following cant true since describe different objects mymxindetect myobject myothermixindetect myobject", "d": "7/2015"}, {"body": "map observable neither use partial polyfil", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "looks like working confirm rwjblue", "d": "7/2015"}, {"body": "behavior exactly want exactly opposite", "d": "7/2015"}, {"body": "reducearray computed gone infavor naive mapfiltersort glimmers data diffing less bugs much faster", "d": "7/2015"}, {"body": "computed arrays reduce computed gone infavour naive sortfiltermap gp glimmer using data diffing efficiently handle render", "d": "7/2015"}, {"body": "theory could use seems called transition complete specifically currentroutename application controller nt updated future able inject routing service instead go application controller", "d": "7/2015"}, {"body": "confirm releasecanary", "d": "7/2015"}, {"body": "believe may sorted maybe", "d": "7/2015"}, {"body": "provided jsbin still reproduces problem", "d": "7/2015"}, {"body": "mmun consider bug internal api less leaky", "d": "7/2015"}, {"body": "imo addressed please reopen missed anything new helpers api nested helper usage seems cover usecases discussed without exposing streams could still improve offering interpolation helper outofthebox ember streams may eventually become public discussion issue rfc", "d": "7/2015"}, {"body": "everything good new helper api thanks hard work", "d": "7/2015"}, {"body": "handled recent implements kalmanh confirm canaryrelease", "d": "7/2015"}, {"body": "really bug much fundamental limitation named outlets painfully stateful tricky switching component right solution enter admin route chooses render content sidebar leave admin route content gets cleaned reentering application route never left appropriate application route rendertemplate run empty sidebar correct outcome personally favor deprecating named outlets entirely stop confusing people ca nt think anything components services ca nt better", "d": "7/2015"}, {"body": "switching component definitely felt right thought missing something named outlets glad switching component right thing", "d": "7/2015"}, {"body": "fyi embermobiletouch updated use ast transform provide default action none specified", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "seems reasonable believe larger effort exists run many ember addons nightly canary via combination travis support ember try", "d": "7/2015"}, {"body": "embera decorates real arrays extendprotoypes dom arrays funky things", "d": "7/2015"}, {"body": "work correctly", "d": "7/2015"}, {"body": "needs controller property deprecated", "d": "7/2015"}, {"body": "mixonic believe may know still valid", "d": "7/2015"}, {"body": "appears work correctly", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "eviltrout maybe interest", "d": "7/2015"}, {"body": "unfortunately nt device handy someone still sees issue gladly investigate maybe work device question", "d": "7/2015"}, {"body": "today run ember live tests android android test pass stefanpenner want fix bug test provide information btw tests failing every browser firefox", "d": "7/2015"}, {"body": "firefox emberhtmlbars emberselect usage inside templates upon content change dom reflect selection dom reflects correct selection expected result source applycurrent lt firefox bug ca nt work around also disabled", "d": "7/2015"}, {"body": "today run ember live tests android android test pass stefanpenner want fix bug test provide information btw tests failing every browser emberroutinghtmlbars action helper global failure uncaught typeerror skip function source surprising", "d": "7/2015"}, {"body": "new bug", "d": "7/2015"}, {"body": "firefox bug ca nt work around also disabled test disabled canary believe issue simulating behavior js works user interacts", "d": "7/2015"}, {"body": "opened issue ff test remember", "d": "7/2015"}, {"body": "components form inputs work dom intended issue exists please report repro", "d": "7/2015"}, {"body": "believe fixed works expected", "d": "7/2015"}, {"body": "working expected class inherits mixin mixins mixed class future instance prototype everything appears working correctly", "d": "7/2015"}, {"body": "seems gone stale reproduction provided gladly look", "d": "7/2015"}, {"body": "qp moving routes", "d": "7/2015"}, {"body": "fixed due rsvp upgrade", "d": "7/2015"}, {"body": "glimer believe addressed feel free reportreopen", "d": "7/2015"}, {"body": "largely fixed glimmer newly refactored acrc helpers", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "eviltrout samsafron may interest", "d": "7/2015"}, {"body": "closed reason rfc also plan ensure works", "d": "7/2015"}, {"body": "late", "d": "7/2015"}, {"body": "believe works", "d": "7/2015"}, {"body": "arraycontroller itemcontroller deprecated", "d": "7/2015"}, {"body": "igort bmac fivetanley whats status emberdata one", "d": "7/2015"}, {"body": "thanks fix ran updating code views components trying things ember way used fix component example modal dialog boxes pieces modal puzzle used approach mastering modals used bootstrap modals using jqueryui dialogs modal nonmodal javascript import ember ember export default embercomponentextend didinsertelement function bug fix save original position text nodes var domelement thisget elementid thisset originalposition parent domelementparent index domelementparent contents index thiselement end bug fix var var diagref dialog title thisget title minheight height minwidth width modal true autoopen true close function consolelog modal dialog close function called diagrefdialog destroy bug fix restore element original position text nodes var domelement thatget elementid var originalposition thatget originalposition var next originalpositionparentcontents eq originalpositionindex nextlength amp amp next domelement nextbefore domelement end bug fix thatsendaction close", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "yay seems working thanks lot hard work", "d": "7/2015"}, {"body": "problem would appear emberdata issue", "d": "7/2015"}, {"body": "api", "d": "7/2015"}, {"body": "nice see tidying", "d": "7/2015"}, {"body": "rcac gone glimmer data diffing simple mapsortreduce cp replaces wonderful results", "d": "7/2015"}, {"body": "likely going happen due making stubbing mocking tests trickier", "d": "7/2015"}, {"body": "itemview deprecated simpler recommended", "d": "7/2015"}, {"body": "rcac gone infavor glimmers data diffing naive sortfilters", "d": "7/2015"}, {"body": "helpers calling helpers", "d": "7/2015"}, {"body": "confusing", "d": "7/2015"}, {"body": "likely revisit drops support concept enumerable vs non enumerable properties across target platforms infact aspects ember already rely concept someone interested championing rfc may able reopen things thought", "d": "7/2015"}, {"body": "hack even unreliable", "d": "7/2015"}, {"body": "codebase try anymore idea ones might try copy see works codebase embercrumbly breadcrumbs component add poteto uses injection access makes computed property top wonder issue still present app information gathered particular way", "d": "7/2015"}, {"body": "looks like accessing directly router instance reliable however sync js didtransition thissuper arguments emberrunonce function consolelog thiscurrentroutename accurate consolelog thisget url stale", "d": "7/2015"}, {"body": "hey guys quick question clear confusion looking code change make checkbox extend wondering implications change mean next release ember able write triggered something else related question gon na able write something like issue right like notified user toggles checkbox programmatically change value way notified change set observer checkbox value unfortunately observer triggered user clicks checkbox toggle value programmatically therefore wondering change would help accomplish trying", "d": "7/2015"}, {"body": "gzurbach ember following", "d": "7/2015"}, {"body": "awesome thanks quick reply stefanpenner always", "d": "7/2015"}, {"body": "likewise problematic creating query param property base controller causes transitioning route child controller fail error", "d": "7/2015"}, {"body": "revisit part ember objects look land classes", "d": "7/2015"}, {"body": "itemcontroller arraycontrollers deprecated", "d": "7/2015"}, {"body": "think recent work sorts", "d": "7/2015"}, {"body": "needs deprecated", "d": "7/2015"}, {"body": "think issue closed specific issues reopened glimmer landed", "d": "7/2015"}, {"body": "must kill time basically quit computers dont", "d": "7/2015"}, {"body": "cc martndemus", "d": "7/2015"}, {"body": "implement select following way note make complex simple want dom example also emberselect deprecated", "d": "7/2015"}, {"body": "case someone still problem requires solution right js approutesyourroutejs export default emberrouteextend actions willtransition transition var model thiscontrollerget model modelget hasdirtyattributes amp amp confirm going discard unsaved changes sure transitionabort nt like use methods directly like way right handle types locations", "d": "7/2015"}, {"body": "updated jsbin last year issue still exists", "d": "7/2015"}, {"body": "release build also aware seems issue updated jsbin", "d": "7/2015"}, {"body": "andrewle im sorry im slightly confused issue deemed expected behavior reporting expected behavior still remains issue exists", "d": "7/2015"}, {"body": "stefanpenner ah sorry read response incorrectly right indeed intended behavior certainly one trips fairly often expect happen", "d": "7/2015"}, {"body": "itemcontroller arraycontroller deprecated", "d": "7/2015"}, {"body": "issue still present ff deved least case deprecation warnings one developing ff user reporting", "d": "7/2015"}, {"body": "proxying controllers deprecated", "d": "7/2015"}, {"body": "reduce computed gone glimmer allows us simpler sortfilterreduce simple arrays return fresh one time", "d": "7/2015"}, {"body": "wont supported enumerable private planned future use", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "maybe rsvp try coerce toarray unsure rsvp support ember", "d": "7/2015"}, {"body": "checked likely runtime started shipping isarray", "d": "7/2015"}, {"body": "support", "d": "7/2015"}, {"body": "super async wont solved migrate full classes luckily simple workaround exists less transpiler export default embercontrollerextend something var boundsuper thissuperbind", "d": "7/2015"}, {"body": "issue single select js objectcontroller klasses embercomputedfilterby klasses isnew false route controllerset klasses modelklasses know deal", "d": "7/2015"}, {"body": "readonly macro meaning consume either via api template try set throws assertion check jsbin working example", "d": "7/2015"}, {"body": "thankmodel section", "d": "7/2015"}, {"body": "yeah example would nice wonder people deal nested components currently bubbling actions", "d": "7/2015"}, {"body": "issue well case nested components addon view ember listview would prefer add actions", "d": "7/2015"}, {"body": "issue would rather create component list view able catch clicks item components", "d": "7/2015"}, {"body": "think worth noting entire point components selfcontain logic scope moment allow actions bubble could end confusing soup chaos say wo nt send action accidentally caught addon using unfortunately also defined action name opinion using syntax force pass handlers perfect wed jul pm laura williams notifications githubcom wrote issue would rather create component list view able catch clicks item components reply email directly view github", "d": "7/2015"}, {"body": "improved actions landed docs", "d": "7/2015"}, {"body": "thank doc links helpful", "d": "7/2015"}, {"body": "stuff blindly enumerates foreachs", "d": "7/2015"}, {"body": "bit trying test code uses emberrunlater really nt like idea running different code path testing vs production sign code nt testable begin", "d": "7/2015"}]