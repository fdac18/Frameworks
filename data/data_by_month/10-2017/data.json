[{"title": "treat value null empty string", "body": "per gaearon request opening new issue based currently create input like null value flag react treat uncontrolled input console warning generated however often valid condition example creating new object initialized w default values server passed component props form requires address address line often optional passing null value controlled component reasonable thing one workaround ie errorprone approach quite awkward per issue referenced react team planned treating null empty string nt yet occurred like propose tackling problem near future please let know help", "num": "11417", "d": "10/2017"}, {"title": "reactchildren support call return types", "body": "include react defined subrepo children enumerated similar support added issue follow suggested gaearon", "num": "11416", "d": "10/2017"}, {"title": "componentdidcatch fired expected", "body": "hello guys try build custom blog app branch mentioned issue issue ca nt bring live errorboundary though everything like described react docs debugging shows componentdidcatch never called errors synthetic new error real ui errors use errorboundary navigation component errorboundary component jsx export class errorboundary extends reactcomponent lt children jsxelement ierrorboundarystate state ierrorboundarystate haserror false blog component bugged natural way code cause render bug runtime also try conditional throw error inside blog render method wrap root application component errorboundary every time exatly effect componentdidcatch fired expected behavior componentdidcatch fired child component ca nt render properly due unhandled exception like described docs project technology stack packagejson windows chrome react typescript config extended file webpack webpackdevserver config redux reactredux reactrouterredux materialui components repository", "num": "11415", "d": "10/2017"}, {"title": "serverside rendering async routing", "body": "hi render synchronous route serverside client side hydrate dom get warning client side asynchronous route nt find component hand react fiber reconciliation tries remove non hydratable node page makes blank flash client side", "num": "11414", "d": "10/2017"}, {"title": "\u4e66\u5199\u683c\u5f0f\u9519\u8bef", "body": "jsx prevents injection attacks default react dom escapes values embedded jsx rendering thus ensures never inject anything explicitly written application everything converted string rendered helps prevent xss crosssite scripting attacks reactdom", "num": "11413", "d": "10/2017"}, {"title": "jsx \u4ee3\u8868 objects", "body": "babel\u5c06jsx\u7f16\u8bd1\u6210reactcreateelement \u8f6c\u8bd1\u5668\u4f1a\u628a jsx\u8f6c\u6362\u6210\u4e00\u4e2a\u540d\u4e3a\u7684\u65b9\u6cd5\u8c03\u7528", "num": "11412", "d": "10/2017"}, {"title": "reactdom \u4e66\u5199\u683c\u5f0f\u4fee\u6539", "body": "", "num": "11411", "d": "10/2017"}, {"title": "error boundaries triggered event handlers", "body": "want request feature report bug feature question current behavior componentdidcatch triggered error occurred event handlers react components expected behavior honest without reading full documentation error boundaries first attempt test error boundaries trigger error event handler ouch discovered componentdidcatch triggered react lifecycle methods render wondering design decision done like would convenient one component handle unexpected exceptions inside components instead two ways handle errors inside component also created stackoverflow question concern thanks versions react browser os affected issue work previous versions react react", "num": "11409", "d": "10/2017"}, {"title": "web development", "body": "use laravel react js mysql building site like yelp tripadvisor good option rendering csr ssr approach good website initially want stay monolithic architecture year later go microservice architecture method follow make shifting easier mono micro moreover target make site progressive web app beginning need suggestion guys", "num": "11408", "d": "10/2017"}, {"title": "errors guys help pls", "body": "want set yarn terminal shows error entering command packagejson name workspace private true scripts start meteor port ip port dependencies babelruntime bcrypt classnames history meteornodestubs moment proptypes react reactaddonspurerendermixin reactdom reactrouter help pls", "num": "11407", "d": "10/2017"}, {"title": "proposal promise setstate first arg", "body": "recommend way use setstate use function instead object async functions push inside setstate add arg write instead", "num": "11406", "d": "10/2017"}, {"title": "focusinfocusout relatedtarget ie", "body": "currently react lt support events problem ie lt blur event relatedtarget great support events question support later versions problem mentioned answer", "num": "11405", "d": "10/2017"}, {"title": "cases lose components", "body": "want request feature report bug problem understand current behavior behind react div components loaded current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react document structure looks like thisthe second div used react components first div able load properly dom last div load dom expected behavior divs loaded normally versions react browser os affected issue work previous versions react react system", "num": "11403", "d": "10/2017"}, {"title": "wip rfc improvements ref system", "body": "formal discussion talk future refs within react improve upon current behavior currently two ways refs react string refs callback refs string refs string refs applied composite components class components ie host components ie example might look like types jsx host components class mycomponent extends reactcomponent componentdidmount thisrefsinputfocus render return composite components class inputwrapper extends reactcomponent focus thisrefsinputfocus render return class formcomponent extends reactcomponent componentdidmount thisrefsinputwrapperfocus render return callback refs callback refs also applied composite components class components ie host components ie example might look like types jsx host components class mycomponent extends reactcomponent componentdidmount thisinputnode thisinputnodefocus render return composite components class inputwrapper extends reactcomponent focus thisinputfocus render return input domnode type text class formcomponent extends reactcomponent componentdidmount thisinputwrapperfocus render return inputwrapper instance proposed behavior propose three major changes current ref system works deprecate string refs removal react ref api broken several aspects taken refer thisrefs myname strings closure compiler advanced mode compatible nt allow notion multiple owners single instance magical dynamic strings potentially break optimizations vms needs always consistent synchronously resolved means asynchronous batching rendering introduces potential bugs currently hook get sibling refs one component refer sibling context reference works one level breaks ability wrap one encapsulation ca nt statically typed cast use languages like flow typescript way attach ref correct owner callback invoked child ref attached callback issued current owner require access react runtime find current owner creation reactelement making aheadoftime optimizations hard deal callback refs issues recommended choice react team time already everything callback refs personally feel need keep string ref system around libraries inferno preact already removed string refs reported performance optimization deprecate ref prop entirely feel refs components lead problematic patterns make apps much harder scale easily break unidirection flow component tree opinion class components nt able access instances components communication use instead alternatively cases access root dom node needed unavailable wrapper component could used escape hatch example something personally feel problematic pattern one seen bite teams past jsx class itemcontainer extends reactcomponent render let subscribe unsubscribe propssubscriptionhandler example couples handling items item container breaking control flow ideally passed child prop child control flow another usage refs composite components related usage passing component instance ref get back root dom node example follows approach avoided instance passing refs via props add special hostref prop works host components reduce confusion would normal prop composite components keeping current ref naming might cause unintended problems would also allow apps move new system incrementally furthermore accept callback refs string refs example jsx function button classname props return hostref simple prop gets passed child via jsx spread downsides migration cost changes proposal cost migration string refs still widely used thirdparty components likely trackable upgraded via codemodding refs composite components far widely used string refs may make sense make changes vs cost react ecosystem unlikely upgraded via codemod codemodding may possible automate vast majority string refs callback refs via codemod need form checking owner ref differs cases string refs vs callback refs point needs broken apart discussed might possible automate codemod refs composite components would require change structure components app work point needs broken apart discussed considerations react native currently nt host components composite components refs core components need special consideration may function maybe could function prop called something similar would work like refs currently", "num": "11401", "d": "10/2017"}, {"title": "follow want go microservice architecture building large scale website planning use laravel react js mysql initially beside type rendering best csr ssr implement things prooperly", "body": "", "num": "11399", "d": "10/2017"}, {"title": "elements components", "body": "code react element react component asking told render instance used case react element given according doc react elements immutable would pass different props instance render latter immutable", "num": "11398", "d": "10/2017"}, {"title": "mismatch node type hydrating svg ssr", "body": "want request feature report bug report bug current behavior getting following error trying hydrate ssr content current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react following check returns false expected behavior node types compared correctly svg uses camelcase tagname versions react browser os affected issue work previous versions react react", "num": "11397", "d": "10/2017"}, {"title": "function also iterable treated inconsistently", "body": "want request feature report bug bug think current behavior codesandbox plop html function makerenderable fn valuegetter const iteratorsymbol typeof symbol function amp amp symboliterator iterator function iterator let timescalled return next const done timescalled gt return done value done undefined valuegetter fn iteratorsymbol iterator return fn const renderablefunction makerenderable function b kinda irrelevant goes return b gt rendered version function function working return works renderablefunction function notworking return work renderablefunction reactdomrender documentgetelementbyid root expected behavior expect things render regardless whether child member array children versions react browser os affected issue work previous versions react yes worked react suggested solution fairly confident issue array children case getiteratorfn call within statement whereas original reconcilechildfibers puts getiteratorfn call outside mistaken simple fix would move curly brace lines wink happy complete test given little direction like test go thanks", "num": "11396", "d": "10/2017"}, {"title": "occams software", "body": "reasonably familiar react coder looking simple template image oriented app downloaded reviewedhackedplayed many examples section useful notice something felt worth mentioning perhaps alone find many files confusing trying figure code works perhaps hangover java trained engineers bringing coding style javascript really wish party nice emoji search app good example one consolidates files one file one make version clear readable easily understood fewer lines code code modules wade figure code works actually thought impossible impossible character character lines full use monitor easy mentioning react seems particularly sprawling framework could bit grooming demo fb react single page demo less anyone else agree would like propose section examples called full app snippets something equally silly us get directory vertigo easily sometimes reminds sitting back car reading book windy road", "num": "11394", "d": "10/2017"}, {"title": "feature assign multiple jsx attributes value", "body": "would like propose feature going keep real simple often times like similar multiple variable assignment javascript good idea bad idea", "num": "11393", "d": "10/2017"}, {"title": "calling setstate inside requestanimationframe loop causes leak", "body": "want request feature report bug bug current behavior component implements loop calls inside endlessly create listeners page shown picture chrome developer tools understand react uses raf reconciliation algorithm running multiple raf work without producing behavior understanding raf callbacks appended next frame callstack current behavior bug please provide steps reproduce possible minimal demo problem minimal code required trigger behavior profiling fiddle produce result previous picture expected behavior react behavior happen running code produce unwanted listeners seen picture versions react browser os affected issue work previous versions react tested react ubuntu chrome behavior happen previous versions react", "num": "11392", "d": "10/2017"}, {"title": "createportal support option stop propagation events react tree", "body": "want request feature report bug feature also bug cause new api breaks old current behavior stop events propagation portal react tree ancestors layers mechanism modalspopovers completely broken example dropdown button click click opens popover also want close popover clicking button createportal click inside popover fires click button closing use stoppropagation simple case tons cases need use stoppropagation also stop events expected behavior createportal option stop synthetic events propagation react tree without manually stopping every event think", "num": "11387", "d": "10/2017"}, {"title": "please simplify component event binding", "body": "request feature class toggle extends reactcomponent constructor props super props thisstate istoggleon true handleclick simple like class toggle extends reactcomponent constructor props super props thisstate istoggleon true event register like spring handleclick", "num": "11384", "d": "10/2017"}, {"title": "chain dependency causes warnings createreactclass", "body": "want request feature report bug potential bug current behavior render react app produces warning development mode current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react create new project uses create component build project library minify js assets create another project include dependency create another react component use bundle production build create third project include dependency build react app uses warnings expected behavior warnings regarding third party dependency versions react browser os affected issue work previous versions react react version one quick example installing dependency create react app uses component component implements uses", "num": "11382", "d": "10/2017"}, {"title": "show better warning accidentally returning constructor", "body": "based conversation vjeux wrote instead error super confusing told render defined component nt make sense since returned fix show different message gave us something without method", "num": "11381", "d": "10/2017"}, {"title": "ondrop breaks onselect event", "body": "want request feature report bug bug current behavior event fired inside editable element input textarea contenteditable event element longer fire changing selection using keyboard see gif onselect event gets called time move cursor around using arrow keys event fired longer fire move cursor around also using keys jsfiddle used record video expected behavior event always fire selection changes versions react browser os affected issue work previous versions react react chrome", "num": "11379", "d": "10/2017"}, {"title": "separate rendertostring rendertonodestream", "body": "currently possible run rendertostring client reactdomserver imports nodejs fs package would nice could still support rendertostring client", "num": "11377", "d": "10/2017"}, {"title": "reactchildren support portals", "body": "nt think currently checked probably treat elements", "num": "11373", "d": "10/2017"}, {"title": "get right enativeeventcurrenttarget use drag api", "body": "component looks like js handledrop e gt consolelog drop enativeeventcurrenttarget ecurrenttarget render return panellayerview thisstatedragover panellayerviewdragover ondragenter thishandledragover ondragover thishandledragover ondragleave thishandledragleave ondrop thishandledrop gt thispropschildren drag element set draggable true component get console message add listener dnd operation docbodyi tried find problem please help lookthanks ahead", "num": "11370", "d": "10/2017"}, {"title": "react recognize property dom elements", "body": "property definition yet recognized react though property relieves pain deal browsers support date inputs nt former require property form latter require nicely formatted date eg since user see exactly react wo nt even allow conjunction though proclaim machine readable format used browsers support date input alternatively support date passed property use always put nicely formatted date property pain relieved also react allow format property case indicated browser support still lacky best even avant garde browsers hence urgent issue react get relevant though herein duly noted", "num": "11369", "d": "10/2017"}, {"title": "add way opt user timing api calls", "body": "want request feature report bug bug feature dont know current behavior building dev environment performance timeline measures appear default ie without query string described bug way disable perf measures need way clear timeline focus custom perf measures", "num": "11366", "d": "10/2017"}, {"title": "fix coverage reporting", "body": "reason coverall says master pointing commit makes sense probably bug either reporting side removed badge readme", "num": "11363", "d": "10/2017"}, {"title": "npm recognized internal external command", "body": "want request feature report bug bug installation issue first time use react current behavior create app refered guide npm recognized internal external added node enviornment variables user variables system variables os win node version npm version", "num": "11358", "d": "10/2017"}, {"title": "bug onmouseevent nt exsit canvas", "body": "want report bug use onmousemove event canvas ca nt get mouseevent get proxy use addeventlistener get mouseevent test code import react component react class canvascolor extends component constructor super thiscolor ffffff componentdidmount thiscontext documentqueryselector canvas thisctx thiscontextgetcontext thisrendercanvas getcolor e gt consolelog e etarget const x elayerx const elayery const data thisctxgetimagedata x data parsefloat data thiscolor rgba datajoin consolelog thiscolor rendercanvas gt const imagesource documentqueryselector img thiscontextwidth imagesourcewidth thiscontextheight imagesourceheight thiscontextstyleposition absolute thiscontextstylezindex thiscontextstyletop thisctxdrawimage imagesource imagesourcewidth imagesourceheight onmousemove e gt thisgetcolor e render return", "num": "11357", "d": "10/2017"}, {"title": "lineargradient produces server side rendering warning", "body": "report bug server side rendering warning using svgs react current behavior get following warning using svg tag lineargradient attribute one components since server side warning reproduced warning repo simple example svg tag steps reproduce clone repo visit browser open javascript console see warning expected behavior expected behaviour warning server side rendering like none rendering client side worked react tested branch repo", "num": "11354", "d": "10/2017"}, {"title": "error boundary stack traces show components unknown", "body": "want request feature report bug bug unless missed something required support current behavior error boundary component stack traces show every component name current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react trigger error catch error boundary observe string shingo yamazaki codepen demo reproduce issue expected behavior versions react browser os affected issue work previous versions react react windows na", "num": "11353", "d": "10/2017"}, {"title": "invariants nt error codes yet missing production builds", "body": "see comment verified introduced regression", "num": "11348", "d": "10/2017"}, {"title": "rfc plan custom element attributesproperties react", "body": "meant address doc outlines pros cons various approaches react could use handle attributes properties custom elements tocsummary background proposals option set properties pros easy understandimplement avoids conflict future global attributes takes advantage custom element upgrade custom elements treated like react component cons possibly breaking change need ref set attribute clear serverside rendering would work option propertiesifavailable pros nonbreaking change cons developers need understand heuristic falling back attributes may conflict future globals option differentiate properties sigil pros nonbreaking change developers optin similar libraries handle attributesproperties system explicit cons new syntax clear serverside rendering would work option add attributes object pros system explicit extending syntax may also solve issues event handling cons new syntax may breaking change may larger change previous proposals option api consuming custom elements pros system explicit nonbreaking change idiomatic react cons could lot work complex component may bloat bundle size config needs keep pace component background react tries pass data custom element always using html attributes attributes must serialized strings approach creates problems data passed object array scenario end something like workaround use manually set property workaround feels bit unnecessary majority custom elements shipped today written libraries automatically generate javascript properties back exposed attributes anyone handauthoring vanilla custom element encouraged follow practice well like ideally see runtime communication custom elements react use javascript properties default doc outlines proposals react could updated make happen proposals option set properties rather try decide property attribute set react could always set properties custom elements react would check see property exists element beforehand example code would result react setting property element equal value camelcased property names react could use style uses today properties like pros easy understandimplement model simple explicit dovetails react javascriptcentric api dom element created libraries like polymer skate automatically generate properties back exposed attributes elements work approach developers handauthoring vanilla components encouraged back attributes properties mirrors modern ie oddballs like elements etc implemented avoids conflict future global attributes react sets attribute custom element always risk future version html ship similarly named attribute break things concern discussed spec authors clear solution problem avoiding attributes entirely except developer explicitly sets one using may sidestep issue browsers come better solution takes advantage custom element upgrade custom elements lazily upgraded page prpl patterns rely technique upgrade process custom element access properties passed properties set definition use render initial state custom elements treated like react component react components pass data one another already use properties would make custom elements behave way cons possibly breaking change developer handauthoring vanilla custom elements attributes api need update code app break fix would use set attribute explained need ref set attribute changing behavior properties preferred means developers need use order explicitly set attribute custom element reversal current behavior developers need order set property since developers rarely need set attributes custom elements seems like reasonable tradeoff clear serverside rendering would work clear model would map serverside rendering custom elements react could assume properties map similarly named attributes attempt set server far bulletproof would possibly require heuristic things like camelcased properties dashcased attributes option propertiesifavailable runtime react could attempt detect property present custom element property present react use otherwise fallback setting attribute model preact uses deal custom elements pseudocode implementation possible steps element defined property react use element undefined property react trying pass primitive data stringnumberboolean use attribute alternative warn set element undefined property react trying pass objectarray set property someattr object object useful alternative warn set element rendered server react trying pass stringnumberboolean use attribute element rendered server react trying pass objectarray anything pros nonbreaking change possible create custom element uses attributes interface authoring style encouraged may happen regardless custom element author relying behavior change would nonbreaking cons developers need understand heuristic developers might confused react sets attribute instead property depending chosen load element falling back attributes may conflict future globals sebastian raised concern using check existence property custom element might accidentally detect property superclass htmlelement also potential conflicts global attributes discussed previously doc option differentiate properties sigil react could continue setting attributes custom elements provide sigil developers could use explicitly set properties instead similar approach used glimmerjs glimmer example example sigil indicates pass data custom element using properties serialized attribute string react components already pass data one another using properties would need use sigil although would work would redundant instead would primarily used explicit instruction pass data custom element using javascript properties ht developit preact suggesting approach pros nonbreaking change developers optin preexisting react custom element apps would continue work exactly developers could choose wanted update code use new sigil style similar libraries handle attributesproperties similar glimmer angular vue use modifiers differentiate attributes properties vue example angular example system explicit developers tell react exactly want instead relying heuristic like propertiesifavailable approach cons new syntax developers need taught use needs thoroughly tested make sure backwards compatible clear serverside rendering would work sigil switch using similarly named attribute option add attributes object react could add additional syntax lets authors explicitly pass data attributes developers use attributes object data passed using javascript properties example idea originally proposed treshugart author skatejs implemented val library pros system explicit developers tell react exactly want instead relying heuristic like propertiesifavailable approach extending syntax may also solve issues event handling note outside scope document maybe worth mentioning issue requests react bypass synthetic event system declarative event handlers added custom elements custom element event names arbitrary strings means capitalized fashion bypass synthetic event system today also mean needing come heuristic mapping event names jsx however syntax extended allow attributes could also extended allow events well model variable name used event name heuristic needed cons new syntax developers need taught use needs thoroughly tested make sure backwards compatible may breaking change components already rely properties named could break may larger change previous proposals react may easier make incremental change like one previous proposals position proposal something take consideration later bigger refactor option api consuming custom elements proposal offered sophiebits gaearon react team react could create new api consuming custom elements maps element behavior configuration object pseudocode example code returns proxy component knows pass data custom element depending configuration provide would use proxy component app instead using custom element directly example usage pros system explicit developers tell react exact behavior want nonbreaking change developers optin using object continue using current system idiomatic react change require new jsx syntax feels like apis react example proptypes even though moved package somewhat similar approach cons could lot work complex component polymer paperinput element properties would produce large config developers using lot custom elements app may equal lot configs need write may bloat bundle size related point custom element class incurs cost definition config object size note sure true someone familiar react build process could verify config needs keep pace component every time component minor version revision adds new property config need updated well difficult add maintenance maybe configs generated source less burden may mean needing create new tool generate configs web component library cc sebmarkbage gaearon developit treshugart justinfagnani", "num": "11347", "d": "10/2017"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11345", "d": "10/2017"}, {"title": "unexpected rerenders production enviroment", "body": "want request feature report bug report bug current behavior react making unexpected rerenders used along happens production enviroment current behavior bug please provide steps reproduce possible minimal demo problem application running development mode setting key prop properly thus making rerenders route calls inside component app production mode appending new value existing key resulting rerender expected behavior application production mode setting proper key value rerendering versions react browser os affected issue work previous versions react nt believe browser problem issue safari chrome tested react react tried isolate issue much could help please let know", "num": "11344", "d": "10/2017"}, {"title": "support onend svg event", "body": "hi trying use warning unknown event handler property ignored workaround", "num": "11342", "d": "10/2017"}, {"title": "hydration breaks html class", "body": "updated application react app using reactresponsive since updated react bugs related invalid html outputted react hydration server generates html desktop client mobile rendering mismatch previously causing full rerender perfect worked react supposed notrerender everything mismatching parts run html invalid mix sliced html generated server desktop mode html served server hydration html generated client without ssr normal mobile mode html rendered react disable ssr wrong html generated hydration client mobile mode invalid html rendered react tries hydrate expected html versions chrome react", "num": "11336", "d": "10/2017"}, {"title": "iframe content getting initial document differs actual result", "body": "want request feature report bug bug sure react browser current behavior made static iframe display url run script iframe parent window works fine second refresh entire page every time load body innerhtml differs innerhtml supposed correct rendered html effected javascript within iframe page script shows html initial html loaded behavious watched pausing script even several time calling reload iframe problem persists fixed entire page reloads parent window current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react something like sorry know make import work fiddle expected behavior versions react browser os affected issue work previous versions react chrome macos high siera", "num": "11335", "d": "10/2017"}, {"title": "componentdidcatch getting called error promise", "body": "per new react release doc says react prints errors occurred rendering console development even application accidentally swallows parent component child component triggered error block promise call catch method promise componentdidcatch parent getting called sure whether expected behaviour jsfiddle", "num": "11334", "d": "10/2017"}, {"title": "consider publishing external requestidlecallback polyfill", "body": "require high fidelity requestidlecallback polyfill pretty much always fallback internal fallback still means others ship nt cooperating even fb two builtin one yet implementing option since want start using probably become even interesting priority queue option lands sufficient us since start polyfilling option even native requestidlecallback implementations", "num": "11330", "d": "10/2017"}, {"title": "get react full flow coverage", "body": "dialog gaeron want update typings package react think need help community", "num": "11328", "d": "10/2017"}, {"title": "release tool statistical perf analysis replacement reactperf", "body": "want request feature report bug feature current behavior na expected behavior great react integrates timeline browsers dev tools helpful cases trying fix performance specific thing however miss perf tool previous versions could find issue tracking reimplementation tool great perf tool covered well timeline integration easily see components render needlessly therefore easily eliminated scu impact give easily see collective render time component might example component renders fast many instances thus contribute significant render time anyway give overview components slow fast render slow components flamegraph shows find specific scenarios much detail distract basically wasted exclusive inclusive tables dom table feel much better represented timeline integration versions react browser os affected issue work previous versions react yes perf addon good", "num": "11326", "d": "10/2017"}, {"title": "webpack config docs request aka", "body": "like", "num": "11324", "d": "10/2017"}, {"title": "templates apart jsx non programmatic situations", "body": "view please take look examples hello world react gt appjsx hello world vue gt appvue identical nt yes two different paradigm hey expressing things way taking benefits virtual dom feature request like vue supports jsx programmatic situations think react also support templates non programmatic situations also imagine trying create website based existing theme purchased changing jsx literally feel like sticking knife eyeballs templates existing html works please also note programmatic situations low use case non programmatic situations high use case", "num": "11322", "d": "10/2017"}, {"title": "jsx alternative namespaced tagsxml", "body": "currently working template engine uses namespaced xml tags jsx support xml namespaced tags actively maintained alternative someone point right place question", "num": "11321", "d": "10/2017"}, {"title": "strict ordering commitupdate", "body": "exactly order calls related structure tree note question asking example following several ways could rendered strict relationship assuming nt know technical terms difference though feel free use look em examples sorry using madeup terms example bottomtotop etc example bottomtotopperlevel etc example toptobottom etc example toptobottomperlevel etc also prompts another related question commitupdate element guaranteed happen children adjusted", "num": "11319", "d": "10/2017"}, {"title": "remove warnings unsupported style properties", "body": "safelist blocklist basically react seemingly allows write jsx reactdomrender documentgetelementbyid root renders style properly warnings perhaps could remove warnings writing pure react use names reason hoping remove warnings bit lenient little python wrapper uses react jupyternteract frontends", "num": "11315", "d": "10/2017"}, {"title": "ssr result render browser incorrectly", "body": "want request feature report bug bug current behavior dangerouslysetinnerhtml render html string real document well server side render environment return rendered html right browser side render sanitize html tags content example html string browser rendering difference tag removed normal behavior react sure ssr right demo expected behavior browser got ssr html render tags removed versions react browser os affected issue work previous versions react react macos try done previous version react", "num": "11314", "d": "10/2017"}, {"title": "adding support component factories createelement etc", "body": "problem let assume implementing component suite providing dozen superfancy readytouse components react users however know whether users library preferring jsx normal javascript nonjsx case users surely want write instead far nonjsx users providing component component factory seems better solution whereas jsx users would surely prefer component class createelement support component factories yet convenient component suite provider decide whether components shall provided factories classes respectively render functions case stateless functional components whether shehe always provide versions feature request promote component factories firstclass citizens react world instead downgrading legacy currently planned make sure functions like createelement etc support component factories level component classes respectively render functions case stateless functional components supported currently btw access component factory also access component classfunction via factorytype considered deprecated react team know factorytype seems helpful little example many thanks advance", "num": "11313", "d": "10/2017"}, {"title": "example links reactreconciler readme broken", "body": "reporting since says links break please file issue fix intentionally link latest versions since api still evolving knowing place uptodate examples would help lot issue template really fit trying follow anyway want request feature report bug bug readme current behavior links reconciler configuration examples links broken current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react visit reactreconcilerreadmemd expected behavior correct links wanted fix pr could find appropriate replacement reactnative versions react browser os affected issue work previous versions react issue exists branch", "num": "11310", "d": "10/2017"}, {"title": "add property", "body": "want request feature report bug improvement current behavior synthetickeyboardevent currently support property mdn nice want write keyspecific inputspecific dependent layout modifier keys handling expected behavior already exposes property property well currently want use must access versions react browser os affected issue work previous versions react affects react earlier assume", "num": "11306", "d": "10/2017"}, {"title": "express tests via public api", "body": "great contribution opportunity need rewrite unit tests terms public api means import npm entry points like etc internal modules like bad requires already marked todo tests miss help find unclaimed test files comment issue want take particular unit test file name submit pr rewrites test use public apis instead step requires thinking use previous examples rewrote tests public api inspiration example generally need think behavior testing actually reproduces react app test rare cases may involve exposing api public need discuss separately hesitate start discussion figure rewrite particular test public api comment brainstorm full list tests need change may simple oneliner changes may involve bit rewrite may require rewriting scratch may even impossible research leading conclusion still valuable love know try let us know update tests taken subscribe issue might free future somebody time finish work comment test becomes available try taken madeinfree see taken accordeiro taken reznord x taken gordyd x taken anushreesubramani x taken dphurley x taken skiritsis x taken timjacobi x taken x taken jeremenichelli x x taken jeremenichelli x taken audyodi x taken gordyd x taken enapupe x taken sadpandabear x taken minerado x taken silvestrijonathan x taken x taken smaniotto x taken timjacobi x taken douglasgimli x taken ethanarrowood x taken accordeiro x taken jstejada x taken adsonpleal firsttime contributor refer contribution instructions clear fix specific test comment tried brainstorm gave test please post findings comment decide next fine find time figure try help maybe somebody else pick later", "num": "11299", "d": "10/2017"}, {"title": "react spread operator still official documentation", "body": "bug documentation current behavior react spread operator removed react still documentation expected behavior word caution included include react maybe also add ways spreading props versions react browser os affected issue work previous versions react react worked previous releases", "num": "11293", "d": "10/2017"}, {"title": "branch tag type checking", "body": "follow neat also means sometimes comparing strings numberssymbols could potentially deopt type hints function might actually better check childtag ensure hostcomponent fragment compare type separate branches fact might already bug incase ever add strings fibertype fibers hostcomponent checking tags type comparison branches ensure nt possible bugs well optimize type hints monomorphic functions", "num": "11290", "d": "10/2017"}, {"title": "make invalid prop type warnings specific falsy", "body": "common pattern however condition correctly warns used instead could suggest specifically warning longer term alternative use proposed concise operator", "num": "11289", "d": "10/2017"}, {"title": "add", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11287", "d": "10/2017"}, {"title": "react release script followup", "body": "x verify safe run including extracting errors see comment thread context pr x decide mechanism relax peer dependency constraints see context pr", "num": "11285", "d": "10/2017"}, {"title": "jest watching mode seems unexpectedly cache sources", "body": "probably configuration issue transitioning workspaces restart watcher see changes sometimes", "num": "11283", "d": "10/2017"}, {"title": "react test utils nt bundle copy reconciler", "body": "way currently set incorrect downright broken blow faces later specifically currently uses brings copy parts reconciler however also depends example would give accurate results nt bump use stateless fix forbidding bundle reconciler secret stuff exposed work could separate stateless helper safe share seems easier", "num": "11280", "d": "10/2017"}, {"title": "react test renderer peer dependency keeps getting bumped", "body": "noticed reacttestrenderer peer dependency react gets bumped every version update least happens version still required could peer dependency version stay even versions package get bumped say ask makes hard libraries pull reacttestrenderer end users use directly nt pull package never use directly specific example mind enzyme version peer dependency dependency react installed enzyme tries install latest reacttestrenderer pull requires satisfy recently made test renderer peer dependency annoying user library manually install package nt use directly changed regular dependency noticing peer dependency testrenderer react gets bumped every version change causes problem possible leave peer dependency within major version least going forward another way library pull test renderer without forcing user", "num": "11278", "d": "10/2017"}, {"title": "latest version react deleted content asproptypes provided allow users decide whether delete contain contents", "body": "example react releases new version may require two new versions one containing deleted content included", "num": "11277", "d": "10/2017"}, {"title": "yarn workspaces followup", "body": "soon x package called weird maybe rename clarify difference x better strategy shared code currently pile code without particular structure import directly haste master though least worse might want tighten little bit future maybe firstclass entry points need clear code duplicated renderers using modules x server nt depend reconciler modules noticed depends seems like always miss warnings server maybe depend shared file instead regardless already issue master regression x find solid way avoid jest skipping modules current hack gross hack otherwise jest skips code thinking need compiled resolved hack dangerous cause false positives thirdparty code specifically check resolved symlink path jest transformer still means add package whose name start babeled tests add another exceptional case live hack little bit since plan publish packages start near future file issue jest though come better solution update fixed via later x get rid flag bundle config x rename entry points intuitive eg react entry point etc x make internal folder structure sensible x move requires around prettier x fix relative requires tests x get rid bundle config x bundling prod bundle x general remove anything bundle config determined using package folder x fix gross hack forbid importing packages move flow types odd packagelevel deps must top level split bundle config per package autodiscover packages bundling version check autogenerate simple entry point files npm exception move packages", "num": "11275", "d": "10/2017"}, {"title": "redirect first doc page", "body": "want request feature report bug bugbroken link thinking react section docs line current behavior broken link sends user page found current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior go appropriate link need help executing step versions react browser os affected issue work previous versions react", "num": "11274", "d": "10/2017"}, {"title": "dangerouslysetinnerhtml working ie", "body": "hello today spotted bug setting inner html element using property browser raise error use ssr actual html received server good probably problem func code string contains html", "num": "11271", "d": "10/2017"}, {"title": "reactdomhydrate falsely warns text content mismatch", "body": "want request feature report bug bug current behavior javascript function foo return foo function test return bar hydration serverside rendered produces following warning expected behavior warning versions react browser os affected issue work previous versions react react reactdom", "num": "11268", "d": "10/2017"}, {"title": "way set svg transformorigin attribute", "body": "list supported svg attributes actually supported dom current behavior attribute ignored warning shown console property supported possible set another error attribute valid course set dom makes spinner look correct expected behavior attribute set tag", "num": "11265", "d": "10/2017"}, {"title": "new way bind event handler function", "body": "currently way use event handlers functional components without performance degradation eg unnecessary function recreations bind arrow functions case render new handler created also react need perform bookkeeping remove previous handler dom element add new handler ok event delegation system react touch dom elements replace handler somewhere internal structure events nt bubble take noticeable time application sure change class components solve problem bind handlers component created want use functional components application came new fastest method binding handlers actually preform binding reason binding function event handler need access current component props current component state another way get props state component react describe docs yes access props state current component without unnecessary functions recreations render function node node return nodetext function onclick e const node getprops e nodeparentremovechild node function getprops e return etarget objectkeys etarget filter k gt kindexof reactinternalinstance debugownermemoizedprops demo perform event delegations efficient way react need assign current vdomelement rendered dom element vdomelement link actual owner component get props state react concealed developers made suffer performance degradation also choosing problem many articles advices recommend investigate rule bind handlers render function many solutions exist use bind constructor use class field properties arrow functions use autobind decorators solution need even recreate handlers component instantiation like current solutions definitely fastest way highly suggest make api public make helper get current props state eventtarget", "num": "11263", "d": "10/2017"}, {"title": "ref set null every render", "body": "want request feature report bug possible bug current behavior ref callbacks always passed subsequently passed reference current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react attached code sample following life cycle functions ref callbacks executed nullrefexamplezip initial render app render myapp render myportal render myapp ref set myapp myportal ref set myportal second render app update app render myapp update myapp render myportal update myportal render myapp ref set null myportal ref set null myapp update myapp ref set myapp myportal update myportal ref set myportal app update expected behavior nt expecting refs set null render although gets set shortly thereafter expected behaviour nt see documentation versions react browser os affected issue work previous versions react react macos chrome amp safari", "num": "11258", "d": "10/2017"}, {"title": "apply files npm whitelist build time", "body": "make build step apply logic npm whitelisting field way issues like would get caught early", "num": "11257", "d": "10/2017"}, {"title": "reactart npm missing lib folder", "body": "seems like intended public apis published npm folder whitelist", "num": "11254", "d": "10/2017"}, {"title": "uncaught typeerror thisupdaterenqueuecallback function", "body": "bug stack trace", "num": "11253", "d": "10/2017"}, {"title": "react server side rendering clientserver mismatched html differences", "body": "want request feature report bug bug current behavior migrating react helped us discover bug code safariios devices sort functionality would cause result return different order compared node server response chromefirefox rendered component component tag wrapping optional image elements react components completely rerendered overriding tag new url client react client component rerendered everything inside nt change wrapped url lead links leading peoples incorrect locations hopefully makes sense current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react nt know good way creating fiddle however best answer questions expected behavior would expected client side html overridden server side html react completely rerender component versions react browser os affected issue work previous versions react functionally different react react sure listed intended changes react raising make aware incase issue", "num": "11248", "d": "10/2017"}, {"title": "create property nonextensible object", "body": "want request feature report bug bug current behavior error thrown ie error message states create property nonextensible object originates following location file webpack nodemodulesreactdomlibpooledclassjs line expected behavior errors versions react browser os affected issue work previous versions react version number reactdom used work error messages started implemented dllplugin webpack involved outputting dependencies single file sure would problem though", "num": "11240", "d": "10/2017"}, {"title": "combine themebreakpoints react", "body": "need configuration app resposnive example used component searchicon materialui want adjust screen take consideration make margin also second option using react google chrome browser", "num": "11238", "d": "10/2017"}, {"title": "test", "body": "test", "num": "11237", "d": "10/2017"}, {"title": "shallow test renderer calls shouldcomponentupdate forceupdate", "body": "extra guard clause calling means always calls block even forced rerender tests example breaks shallow rendering enzyme using mobx observables minimal test case javascript import react react import shallowrenderer reacttestrenderershallow const renderer new shallowrenderer class testcomponent extends reactcomponent render return describe forceupdate gt call shouldcomponentupdate gt let called testcomponentprototypeshouldcomponentupdate gt called const component rendererrender rendererinstanceforceupdate expect called tobe lt throws called", "num": "11236", "d": "10/2017"}, {"title": "react props available arguments set html tag", "body": "want request feature report bug bug current behavior props passed dom element available react via thispropsattribute current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react issue visible expected behavior attribute passed html tag passed react props returns html tag containing world inside thispropsname props empty inside app react element versions react browser os affected issue work previous versions react browsers tested react", "num": "11234", "d": "10/2017"}, {"title": "request release react based mit license", "body": "updated react license bsd patent license mit license could release thank", "num": "11233", "d": "10/2017"}, {"title": "keyup event fired firefox android", "body": "want request feature report bug bug current behavior keyup event fired using vanilla js issue str android smartphone ensure autocompletion autocorrect enabled open firefox android works desktop chrome android type letter input field expected behavior alphanumeric char typed alert displayed versions react browser os affected issue work previous versions react version used react browser firefox android work previous versions react nt know", "num": "11231", "d": "10/2017"}, {"title": "reactiveformsmodule like react", "body": "struggling forms react reduxform library library arrive reactive forms lot bugs reactive form control field state nice way group fields validations asyn validations validator librarary included library react ecosystem better build library templates css another libraries lot bugs beta mode new versions example materialui compatible react frustating devine future solve important bugs", "num": "11229", "d": "10/2017"}, {"title": "issue dangerouslysetinnerhtml markup rehydration", "body": "want request feature report bug bug current behavior trying rehydrate markup argument optional error thrown happens component dangerouslysetinnerhtml prop example expected behavior error thrown versions react browser os affected issue work previous versions react react version browser", "num": "11228", "d": "10/2017"}, {"title": "async componentwillreceiveprops allow state update", "body": "want request feature report bug feature current behavior almost immediate rerender due called unless says otherwise expected behavior new props cause async call soon going update state anyway wo nt cool react might well wait async call thing calls one render instead two potential solution react see returns defers rerender", "num": "11224", "d": "10/2017"}, {"title": "reactwarningkeys thrown components returned iterator", "body": "want request feature report bug bug current behavior steps reproduce see expected behavior key warning versions react affects chrome macos warnings react solutions fix key warning edit docs explain needed react element dynamic props changed every render elements returned iterator", "num": "11222", "d": "10/2017"}, {"title": "code snippet docs unexpectedly throws", "body": "bug report docs present example code snippet crashes js process see particular notice highlighted parts code snippet first sentence snipppet reads react call ref callback dom element component mounts call null unmounts ref callback called null callback moment user clicks second input button method since null really yet method throw would suggest adding little guard code snippet people copypaste without worry replacing something like found docs react", "num": "11221", "d": "10/2017"}, {"title": "add flow coverage renderer fixture use maintained renderer tests", "body": "renderer package contains fixture updated every time change apis however covered flow full test coverage tedious make sure get exactly right messed making changes api also means updating lot renderers point would nice fixture could built top noop renderer something cc iamdustan gaearon", "num": "11220", "d": "10/2017"}, {"title": "way input rendering checking strategy reactdom", "body": "sure appropriate way ask like opinion notice use often code wondering way build pure function components apply logic shallow comparison rendering rendering component using reactdom reason something like guys think", "num": "11218", "d": "10/2017"}, {"title": "reactaddonstestutils needs older version reactdom", "body": "installed latest reactaddonstestutils latest npm also latest version reactdom also npm reactdom dependency would expect would trick however npm sends warnings really need older version reactdom able use testutils ok use latest reactdom version using react reactdom reactaddonstestutils", "num": "11214", "d": "10/2017"}, {"title": "use native event supported", "body": "want request feature report bug improvement current behavior right synthetic event created based two events webkit fallback days chrome safari opera spec event available actually fires includes spec properties extremely helpful tells whether event inserting text replacing text inserting line break etc tells input taking place dom right information nt exposed even browser supports checked expected behavior instead react treat slightlypreferred fallback native support add true goal end fallback stack guarantees always spec relevant information associated event extra properties critical situations want prevent default browser behavior firing perform logic internal model instead looking slate without extra information fallback hackier event occur trying parse dom change rerendering remove etc want avoid modern browsers results reduced performance another situation fixes spellcheck right nt trigger react handler even though modern browsers fire event listened right", "num": "11211", "d": "10/2017"}, {"title": "vs push", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11209", "d": "10/2017"}, {"title": "investigate nested update overflow caused coalescing", "body": "internal issue manifested infinite nested update loop triggering invariant trueadm investigated introduced fixed however failing tests related even though removed coalescing implementation feel like need investigate happened add regression test prevent issue occurring future might also valuable think additional information surface error least development example component names last ten fibers scheduled update", "num": "11207", "d": "10/2017"}, {"title": "react component passed children component nullifies effect purecomponent", "body": "nt know would come feature request bug expected things handled differently shouldcomponentupdate current behaviour component renders b passes c children b rerenders state change part passed b c basically nothing changes subtree b b still always rerenders fiddle reproduce issue click c make state change b rerenders effect much cases children passed level deep cause unnecessary rerenders previous versions question observations posted feel free answer expected handled different way", "num": "11203", "d": "10/2017"}, {"title": "react error decoder page broken", "body": "example following decode page broken described", "num": "11201", "d": "10/2017"}, {"title": "docs older versions react unavailable", "body": "want request feature report bug bug current behavior documentation older versions react deleted react documentation website shows documentation current version react current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior documentation previous versions react available somewhere ideally version picker top page select version react working like pythonorg example versions react browser os affected issue work previous versions react every version react latest", "num": "11199", "d": "10/2017"}, {"title": "automated release script", "body": "create command line tool automate release steps outlined", "num": "11198", "d": "10/2017"}, {"title": "reacttestrenderer breaks trying use internal property", "body": "using version get sample test case really error thrown fail testspecjs test suite failed run offending code var reactinstancemap var reactinternals reactsecretinternalsdonotuseoryouwillbefired var reactglobalsharedstate reactcurrentowner reactinternalsreactcurrentowner seems like maybe change", "num": "11197", "d": "10/2017"}, {"title": "add warnings adding functions components state", "body": "want request feature report bug feature hey wanted add type check state development order educate saw couple times codebase saves functions even components state checking codebase first time blush saw check method allow functions part state would say may wrong could warn developer well nt see case function live inside state saw lot posts stakoverflow putting components functions redux global state might conception want create pr order address warning development think", "num": "11196", "d": "10/2017"}, {"title": "onmouseenter lost hovering children", "body": "want request feature report bug bug current behavior event triggered element event lost mouse comes child rendered based event nt happen react hovering newly created child would persist event current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react react expected behavior react code reproduce hover anywhere red menu opens try hover anywhere blue background expected behavior hovering newly created child element persist event versions react browser os affected issue work previous versions react testes react chromelinux latest ubuntu mate tested anywhere else", "num": "11191", "d": "10/2017"}, {"title": "use testrenderer", "body": "want request feature report bug nt know current behavior codes javascript setupjs init dom const jsdom require jsdom const jsdom new jsdom const window jsdom function copyprops src target const props objectgetownpropertynames src filter prop gt typeof target prop undefined map prop gt objectgetownpropertydescriptor src prop objectdefineproperties target props globalwindow window globaldocument windowdocument globalnavigator useragent nodejs copyprops window global javascript import react react import expect chai import testrenderer reacttestrenderer import setup const testrenderer testrenderercreate test consolelog testrendererroot consolelog testrenderertojson consolelog testrenderertotree packagejson javascript babel options babel plugins addmoduleexports presets env react npm test test mocha require babelcoreregister console show current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior like versions react browser os affected issue work previous versions react jsdom mocha use mocha jest babelcore react reactdom reacttestrenderer chai os npm", "num": "11190", "d": "10/2017"}, {"title": "need hook hydration mismatch", "body": "want request feature report bug feature current behavior react attribute removed server rendered markup previous versions used attribute beacon checksum mismatches log servers notified production issues attribute removed mechanism determine checksum mismatch occurred aware checksum issues longer cause entire dom rerender however still important know occur typical use case display ads autoplay video want know ad gets rerendered double counted autoplay video interrupted due react rerendering dom related bugsrequests ability debug checksums production expected behavior solution necessarily need reintroduce checksum attribute could event hook callback applications leverage handle checksum issues versions react browser os affected issue work previous versions react react browsers worked lt react", "num": "11189", "d": "10/2017"}, {"title": "update performance optimization documentation reflect react", "body": "want request feature report bug bug date documentation current behavior current react documentation talks flag however since react appears behavior new default development builds shinier output yay pull request seems became new normal expected behavior would expect first step suggesting add reactperf gets deleted would also expect screenshot reflect new improved output perhaps one screenshots gaearonspull request linked versions react browser os affected issue work previous versions react react happy make pull request expectation aligned projects", "num": "11185", "d": "10/2017"}, {"title": "compatible", "body": "bug feature used able use react great react able use property generate custom elements custom attributes could picked ie get many warning messages custom tag elements likewise seems certain attributes nt getting rendered either instance elements like get output without size attribute nt think react know tags hardcoded react got way react output custom tags without throwing warning messsages reintroduce attribute indicate custom tag custom attributes", "num": "11184", "d": "10/2017"}, {"title": "flowify reactpartialrendererjs", "body": "annotation start flowifying avoid bugs like iamdustan wan na take", "num": "11175", "d": "10/2017"}, {"title": "react render text area placeholder initially", "body": "bug current behavior windows text area placeholder rendering initially expected behavior placeholder visible initial render versions react browser os affected issue work previous versions react windows appears regression", "num": "11172", "d": "10/2017"}, {"title": "react use requestanimationframe default", "body": "consider following sample code pasted class extends reactcomponent private canrender boolean false private latestdata outputstats hit getting framerates like words seem limiter react correct slightly separate topic true animation things think would good simply wrap block guess really react question though since observablething could also capped via ticks", "num": "11171", "d": "10/2017"}, {"title": "react official site work chrome", "body": "react official site show white screen show error", "num": "11170", "d": "10/2017"}, {"title": "react mismatched html warning logged hydrating portals rendered documenthead", "body": "want request feature report bug bug current behavior rendering portal server causes react log warning unexpected markup hydrating server markup currently happens using reacthead current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react sure possible simulate jsfiddle since requires serverrendering access fairly minimal repro case reacthead example app clone run via following see react warning logged thoughts simpler way repro happy well expected behavior entirely possible usage react portals nt anticipated sure invalid use case would like get thoughts better approach currently reacthead besides warning moduleapp seems function exactly expected high level reacthead works serverrendering tags eg etc collected array rendertostring placed server template client serverrendered tags queryselected removed replaced reactdomcreateportal order support spa functionality issue reacthead versions react browser os affected issue work previous versions react react", "num": "11169", "d": "10/2017"}, {"title": "reacttestrenderer find method documented incorrectly", "body": "mismatch behavior method documentation claims find first descendant test instance test testinstance returns true fact throws error multiple descendant test instances way docs worded expected work like happy submit pr fixing like guidance whether docs incorrect implementation incorrect worth implementation wrapped seems likely docs incorrect ie intentional choice whoever wrote methods also happy go split two separate methods eg", "num": "11166", "d": "10/2017"}, {"title": "someone point react actually updates dom", "body": "want learn performance react trying get sense exactly react manipulates dom stepping source inspecting devtools profiler see finally called react triggers update dom understand reconciliation works looking actual mechanics read specific line code react appends new elements dom eg someone point right direction asked reactjs freenode nt get response looking thanks advance", "num": "11165", "d": "10/2017"}, {"title": "support srcobject attribute video element", "body": "want request feature report bug feature current behavior currently set srcobject video get error current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react another issue closed issue never resolved firefox deprecated using safari nt support expected behavior ability set video element common webrtc applications versions react browser os affected issue work previous versions react react", "num": "11163", "d": "10/2017"}, {"title": "background color issue", "body": "hi got issue background colors simple component rendering div tested crome safari firefox visible chrome size dark rectangle affected rendered div give background color", "num": "11162", "d": "10/2017"}, {"title": "shallow renderer subsequent calls inside discard previous ones", "body": "current behavior multiple calls last one works shallow renderer current behavior bug please provide steps reproduce possible minimal demo problem dom renderer correctly renders hello world test shallow renderer renders undefined world versions react browser os affected issue work previous versions react issue introduced react reason must lines replacing fix", "num": "11161", "d": "10/2017"}, {"title": "server rendering meta tags attributes non camelcase result warning", "body": "want request feature report bug bug current behavior server rendering srcset attributes used needed camelcased results change renders camelcased version remove warning also happens srcset etc current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior warning given versions react browser os affected issue work previous versions react previous versions react passed camelcase rendered case correctly either snake lowercase renders camelcase executed server using react happening latest chrome", "num": "11160", "d": "10/2017"}, {"title": "autofocus nt work ssr react", "body": "works client hydrated used implemented js special case nt cause commit effect scheduled call like question even bother implementing js anymore emit attribute ssr let browser take care", "num": "11159", "d": "10/2017"}, {"title": "typeerror read property create undefined using reacttestrenderer", "body": "want request feature report bug bug current behavior trying run simple jest snapshot test failing reacttestrenderer current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react import react react import header componentsheaderheadercontainer import renderer reacttestrenderer test header loaded correctly gt const component renderercreate let tree componenttojson expect tree tomatchsnapshot running jest throws following error header loaded correctly header loaded correctly expected behavior snpashot test pass versions react browser os affected issue work previous versions react reacttestrenderer react reactdom", "num": "11158", "d": "10/2017"}, {"title": "react expected server html contain matching", "body": "seems like putting end tag makes react think missing react warns compensates adding another one looks like bug another different issue", "num": "11155", "d": "10/2017"}, {"title": "onchange get executed react", "body": "want request feature report bug bug current behavior react onchange gets fire reproduced bug link current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior onchange get executed maany times select radio button versions react browser os affected issue work previous versions react", "num": "11154", "d": "10/2017"}, {"title": "onmouseenter triggered children react", "body": "hi issue triggered children component occurs react created codepen shows issue simplified structure component needs capture events trigger simple component waits image passed loaded displaying using created open console see triggered hovering normal behavior also hovering div supposed happen remove whole logic element works intended possible coding way nt appropriate look like bug anyway", "num": "11152", "d": "10/2017"}, {"title": "react missing global context", "body": "hey using internationalize component wrap app component provide translation whole app like inside intlprovider set translation context getchildcontext could access anywhere global context global context removed nt seen change breaking changes wrapping every component use translations intlprovider use thiscontext instead sounds like overkill better approach", "num": "11151", "d": "10/2017"}, {"title": "update props commitupdate", "body": "given instance contains object attempts update object result error since object frozen correct approach set new props instance commitupdate see art renderer example sets properties instance directly eg correct approach ability wrap changing properties container object", "num": "11150", "d": "10/2017"}, {"title": "react recognize prop dom element", "body": "versions react reactrouterdom reactrouterredux next test case server side client side steps reproduce error occurs first navigation client side", "num": "11147", "d": "10/2017"}, {"title": "link file json", "body": "demohtmltxt demodatajstxt want ask away take file json react js file name orb folder htdocsorbdemo demodatajs demodatajs take filejson return dont show localhost example file demodatajs windowdemo windowdemodata var data getdata stockvsjson var lt var j j lt datalength j windowdemodatapush data j function getdata return stockvsjson function return stockvsjson demohtml function refreshdata pgridwidgetrefreshdata windowstockvsjson edit code example file number", "num": "11146", "d": "10/2017"}, {"title": "react component updates dom nt", "body": "upgrading react noticed regression one apps navbar would rerender upon loginlogout verified consolelog statements dom would nt get corresponding updates abbreviated component question js class navbar extends reactcomponent render const isauthenticated thisprops return isauthenticated thisrenderauthenticatedmenu thisrenderunauthenticatedmenu renderauthenticatedmenu return lt adding key fixed renderunauthenticatedmenu return lt adding key fixed export default connect state gt isauthenticated stateauthisauthenticated routing staterouting navbar worked without requiring annotated keys react became necessary upgrading expected behavior indicative regression", "num": "11144", "d": "10/2017"}, {"title": "react amp bad ux amp scroll bug", "body": "react amp bad ux right menu bad ux left menu much better", "num": "11143", "d": "10/2017"}, {"title": "input type number onchange vs oninput", "body": "entering text eee onchange fired oninput tested react chrome firefox safari edge dom behavior react react onchange equivalent dom input event", "num": "11142", "d": "10/2017"}, {"title": "deduplicate update mounted mounting component warning", "body": "note anushreesubramani working please send prs similar anushreesubramani wan na take one well would need deduplicate based ownerstack info similar works", "num": "11140", "d": "10/2017"}, {"title": "infinite loop maximum update depth exceeds", "body": "want request feature report bug bug current behavior wrote component recreate warnings fix javascript class app extends component constructor super thisstate value null render thissetstate value test process found error came uncaught error maximum update depth exceeded happen component repeatedly calls setstate inside componentwillupdate componentdidupdate react limits number nested updates prevent infinite loops execution stop going infinite loop printing variants error one another screenshot reference current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react snippet given expected behavior nt infinite loop execution stop printing error versions react browser os affected issue work previous versions react react chrome ubuntu tested older versions react problem present", "num": "11136", "d": "10/2017"}, {"title": "dom test fixtures unable load react", "body": "far tell path umd version react changed makes impossible test latest version react test fixtures probably need add condition react loader change path certain version", "num": "11132", "d": "10/2017"}, {"title": "dom test fixtures add caveats range inputs unsupported things", "body": "confusing recall range input type supported invalidating test cases example test case verifies changing range slider arrow keys works expected however looks like standard input plan make test fixtures public wonder would worth adding caveat language marking test invalid certain browser maybe would annoying thought might nice collect opinion others", "num": "11131", "d": "10/2017"}, {"title": "website old docs link redirect", "body": "open link old documentation link redirect redirect current documentation url", "num": "11130", "d": "10/2017"}, {"title": "website jsx editor documentation need padding bottom", "body": "found every live jsx editor scroll", "num": "11129", "d": "10/2017"}, {"title": "react client side render nt update dom style comes ssr", "body": "want request feature report bug bug current behavior react clientsiderender problem update dom style update prop detail repo current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react created repo expected behavior update dom style correctly versions react browser os affected issue work previous versions react using chrome dev os x el capitan macintosh intel mac os x khtml like gecko react work previou version like", "num": "11128", "d": "10/2017"}, {"title": "missing docs transferring props jsx", "body": "noticed latest docs nt talk transferring props jsx rest properties really useful building reusable react components curious omitting documentation intentional would great understand good practice anymore otherwise would happy send pr adds back docs changes community want see overall think important info surface current docs", "num": "11124", "d": "10/2017"}, {"title": "react document breaking changes nt warn react", "body": "want request feature report bug bug current behavior path upgrading react simple docs minor exceptions app runs without warnings work cases found nt true longer declared never declared anyways never yelled amp found old component amp completely broken callback longer falsy would write write sloppy code never existed anyways worked react expected behavior adding things migration guide maybe reenabling support falsy callback versions react browser os affected issue work previous versions react react browsers worked react", "num": "11123", "d": "10/2017"}, {"title": "reconciler gone", "body": "question know intentional one able track index newremoved node going provide api important able integrate correctly thirdparty code example pixijs threejs addchildremovechildaddchildat apis important able tell node imagine something like could beneficial even terminal ui native ui illustrate mean get expanded new children appended andor removed preferrably react", "num": "11118", "d": "10/2017"}, {"title": "using setstate inside function child component generates warning functions valid children", "body": "want request feature report bug reporting bug current behavior context react native app error nt related renderer using handcrafted component fetches data passes function child component rendered however using save call result get pretty interesting error see gives current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react tried remove business logic reproduce error react native app codesandbox fully reproduce expected behavior expected error versions react browser os affected issue work previous versions react know error occurs react renderer got react native first place started project react related issues might related ping gaearon", "num": "11116", "d": "10/2017"}, {"title": "wrap events react", "body": "per discussion react rc asked open separate issue regarding opening event system react currently use disappeared react blocking ability upgrade basically grab order wrap certain piece code fire afterward asked nt wrap instead least time believe experiments showed nt work react seemed firing internal synthetic events later time possibly batching nt know new hacky way thing happy punt question want request feature report bug depends certainly used work sense bug would require api creation perhaps maybe feature current behavior access event firing expected behavior way inject code fire events fire versions react browser os affected issue work previous versions react react solution existed react", "num": "11115", "d": "10/2017"}, {"title": "check raf polyfill lazily", "body": "cases like pretty confusing probably move warning happen first rather immediately", "num": "11114", "d": "10/2017"}, {"title": "consider providing umd build testutils", "body": "noticed stopped providing bunch fiddles old bugs use wonder add back eg let hear people say", "num": "11111", "d": "10/2017"}, {"title": "document deep equality checks jsonstringify shouldcomponentupdate bad idea", "body": "inspired", "num": "11107", "d": "10/2017"}, {"title": "asynchronous componentwillunmount react", "body": "react called first rendering next component dom current version called mounting next component creates issue existing code since reuse component history changes invokes new props change url thereafter invokes component still way synchronous way", "num": "11106", "d": "10/2017"}, {"title": "server render missing nodes recreated correct classname", "body": "possible regression looks like recreating missing nodes working correctly react nodes get recreated one copy classname sibling node instead getting recreated correct classname pen demonstrating issue works fine react jsx rendered html", "num": "11104", "d": "10/2017"}, {"title": "ssr reactdom client server handling newlines differently causing mismatch warnings", "body": "bug report noticed warning text content match warning certain pages isomorphic react app using react reactdom boiling simple test case seems different kinds newlines handled differently failing match everything fine mismatch error words separated browser however get except js error console second foobar reads one word seems chrome issue mishandling single r carriage return try echoes string console one word browser see foobar one word importantly though windows newlines result app definitely seems like bug react reconciliation logic setup full list npm deps nodeexpress app node browser macos chrome workaround preprocess text useruploaded content normalize newlines", "num": "11103", "d": "10/2017"}, {"title": "make undefined ref message better", "body": "reported could clearer", "num": "11102", "d": "10/2017"}, {"title": "type fiber tag disjoint union", "body": "sebmarkbage tried flow could nt handle well might worth trying someday", "num": "11101", "d": "10/2017"}, {"title": "react continues incorrectly handle disabled", "body": "would like report bug please closed gaearon said reopen still problem currently understand react incorrectly handling common case construction fairly normal create first element disabled remains preselected react render case instead renders first deselected control attempted fix forcing selection normal approach set relevant react disallows preferring novel property instead mimicing firstwrite version property attempt set set ignored may case defaultvalue broken select react inability render disabled either default selected initial present since least sometime first found first documented january prior faster tell core devs irc know far goes back past", "num": "11100", "d": "10/2017"}, {"title": "may broken", "body": "would like report bug refiling another outstanding bug closed despite reproducible decided create repro case since repro involves setting confronted human inability remember whether html zeroindexed oneindexed since repro also involves determining whether given selectable decided control four select see get third fourth joke got neither got first selectable winner testcase series see see instead see currently believe honored first time noticed tested", "num": "11099", "d": "10/2017"}, {"title": "allow suppressing error boundary logs intentionally throwncaught errors", "body": "repost erikras want request feature report bug somewhere current behavior running tests library behaviors want test throw error currently result output console error great application great library test expected behavior would great could something like please provide exact jest configuration mention jest node yarnnpm version operating system see also", "num": "11098", "d": "10/2017"}, {"title": "umbrella react dom bugs", "body": "since going open issues yesterday today also compiled list things seem broken reactdom grouped areas think issues equally important like start discussion around start attacking shorter longer term example potential fixes onchange event logic would need take account even inform think would good topic next chat cc jquense aweary nhunzaker maybe could also broadcast time autofill provide way handle browserautocompleted form values controlled components ie edge longer prompt remember password controlled form dom fixture form coverage restored state autofill composition events issues x incorrect data compositionend event typing korean change event fires many times inputing chinese characters onchange work well japanese ime react prs x try generate beforeinput event buggy composition scenarios ie x handle composition events changeeventplugin mouse enter leave mouseenter fires disabled inputs whereas mouseleave mouseenter event triggered cursor moves disabled button onmouseenter propagation double reactroot onmouseleave working expected input checkbox select x change event fire ie edge certain circumstances x pressing spacebar checked radio button fires click browsers x input type email controlled component control white spaces changing state onfocus onchange select multiple element work firefox x select onchange firing using keyboard input onchange triggered every time epreventdefault used input element backspace work x radio buttons correctly checked using multiple lists radio buttons input autofocus causes focus emitted ref undo behavior controlled textareas works differently default behaviour chrome triggers onchange twice replacing text selection x textarea onfocus stoppropagation incorrect cursor rendering firefox x onbeforeinput fires edge updates dom clear button ios date input return correct event value eventpreventdefault click handler prevent onchange called x reset select ignores defaultvalue", "num": "11097", "d": "10/2017"}, {"title": "programmatically filled input fire onchange event", "body": "want request feature report bug bug current behavior react generated input fire event programmatically filled demo expected behavior react generated input fire event programmatically filled demo versions react browser os affected issue work previous versions react reported bug tested chrome safari macos experience bug bug present react core goal create browser bookmarklet autofills form within react app", "num": "11095", "d": "10/2017"}, {"title": "add inline syntax errors website editor", "body": "tsriram suggested proof concept like wonder new editor", "num": "11094", "d": "10/2017"}, {"title": "add error boundaries website", "body": "places could handy live editor homepage show crashes search box gets broken fair adblocker global missing maybe", "num": "11093", "d": "10/2017"}, {"title": "investigate compiling react google closure compiler advanced mode", "body": "creating track already compile bundles gcc simple mode bunch things break advanced mode gradually moving closer able think prerequisite since otherwise never sure still correct landed open question still keep devtools working wonder fiber could array fixed indexes would nt need sourcemapping", "num": "11092", "d": "10/2017"}, {"title": "react spillover", "body": "dumping items since want close umbrella x convert oss repo modules block release nicetohave follow x move docs update fbmereactpolyfills point x fix rn crash dev x worth looking existing entries attribute table might mean bugs x decide flat bundles one create custom fiber renderer nt block final ideally final internal pr wip fb gaearon bvaughn context update unknown property warning documentation new behavior currently warning points blog post update crossorigin doc warning clarify throwercatcher semantics gaearon bvaughn sebmarkbage add closure compiler advanced deal mangling properly block release nicetohave follow whitelistblacklist warnings add yellow box warnings could make optin minor release bvaughn let make optin default rn make sure instanceprops reactnativecomponenttree nt leak sebmarkbage bvaughn rn ensure keep important invariants text must wrapped dan moved back blockers shipping without invariants adding later painful decide handle situation container content changed outside react right warn also either silently fails throws cryptic error also throw error canshould fix behavior match previous react see comments flarnie consider logging caught errors immediately rather commit gaearon bvaughn improve component stack usability issue pr ssr probably lowercase attributes html namespace pr", "num": "11088", "d": "10/2017"}, {"title": "read property func undefined updated react", "body": "updated react version get error bundlejs created webpack line use proptypes separately lib webpack config import path path import webpack webpack export default entry babelpolyfill webpackhotmiddlewareclient pathjoin dirname clientindexjs output path filename bundlejs publicpath plugins new webpackhotmodulereplacementplugin new webpackoptimizeoccurrenceorderplugin module loaders test js include pathjoin dirname client pathjoin dirname servershared loaders reacthotloaderwebpack babelloader test css loader styleloader cssloader resolve extensions js css", "num": "11087", "d": "10/2017"}, {"title": "deduplicate warning functions valid children", "body": "one", "num": "11086", "d": "10/2017"}, {"title": "even though using webpack uglifyjs plugin minification reactdevtools telling unminified code production quality", "body": "want request feature report bug bug current behavior reactdevtools showing red icon deployed application even though using webpack uglifyjs plugin webpack defineplugin processenvnodeenv jsonstringify production current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior react devtools would show black icon indicating production quality code versions react browser os affected issue work previous versions react using latest version google chrome version official build app running react reactdom", "num": "11085", "d": "10/2017"}, {"title": "errorboundary behavior", "body": "breaks app windows mac high sierra chrome tried new errorboundary functionality reactjs trying use catch undefined variables rendering certain components causing whole app behave strangely trying encapsulate side effects undefined variables components break gracefully errorboundary component defined like errorboundary imported correctly sitting container component render function wrapping child component like order test broken app functionality put undefined variable render function component errorboundary included undefined variable gets rendered happens browser rest app stops working correctly syntax error errorboundaries supposed behave", "num": "11084", "d": "10/2017"}, {"title": "difficult track source boolean prop warning", "body": "want request feature report bug dx issue think certainly frustration upgrade would submitted gaearon told thrice current behavior build works strewn warnings would like fix warnings like library provides hoc provides boolean props first concerned react would longer allow think problem one tests carelessly leaking props way even created dumbest hoc ever test hoc could pass boolean prop seems like however stacktrace componenttrace even remotely clear tests causing warning previous versions would show exact stacktrace file names line numbers generated error versions react browser os affected issue work previous versions react react yes worked previous additionally several tests need throw errors alert library users something wrong test logs full bright red new fact life library developers test somehow replicated current master branch reduxform", "num": "11083", "d": "10/2017"}, {"title": "error boundaries causes multiple errors thrown development mode", "body": "want request feature report bug bug maybe current behavior error caught react lifecycle methods thrown twice development mode current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react look console see one errors caught one still thrown could possibly confusing people see two identical errors console expected behavior error thrown versions react browser os affected issue work previous versions react stumbled fixing one tests checked component throw conditions test started failing react second thrown react really sure bug wanted clarify whether made intentionally seems like trick causes behavior bug happy help fix someone would suggest start", "num": "11082", "d": "10/2017"}, {"title": "deduplicate render methods pure warning", "body": "note task already claimed saw fiddle nested update bug would nice dedupe first place instead calling thousand times note task already claimed", "num": "11081", "d": "10/2017"}, {"title": "idea host codemods website", "body": "would nice provide repl codemods website especially createclass proptypes conversion handy oneoffs like converting stackoverflow answers fiddles also introduces people idea codemodding playful way repl include instructions running locally bottom", "num": "11080", "d": "10/2017"}, {"title": "improving browser qa", "body": "manually test lot behavior captured jsdom change events number input quirks event pooling error handling etc despite test suite comprehensive unit tests alpha beta release candidates number bugs slipped particularly around change events want explore would look like reduce burden manual browser qa possible particularly around things like change events hook javascript dom apis automatable filed issue explore following areas though happy others pitch deploying dom test fixtures public url distribute manual qa run automated tests investigate browserstack sauce labs possible browser automation options deploy nightly edge build react accompanying jsfiddle make easier determine fix works master without needing know setup react locally automation place extremely laborious comprehensive tests could run help fight regressions probably missing something going start post followup comments learn stuff", "num": "11079", "d": "10/2017"}, {"title": "tutorial doc incorrectly formatted babel url", "body": "bug documentation links users babel link incorrectly formatted code clicking link goes incorrect link prints instead code current url evaluates percent encoding instead link replaces", "num": "11078", "d": "10/2017"}, {"title": "old fiddles still broken due httphttps issue", "body": "see example mixed content page loaded https requested insecure script request blocked content must served https redirect happens without preserving protocol", "num": "11077", "d": "10/2017"}, {"title": "reactdom problems csp", "body": "want request feature report bug bug current behavior refused apply inline style violates following content security policy directive stylesrc self either unsafeinline keyword hash nonce nonce required enable inline execution expected behavior error csp try use reactselect app csp enabled result mentionedapparently problem reactdom line", "num": "11076", "d": "10/2017"}, {"title": "move website source new reactjsorg repo", "body": "new website launched propose following cleanup steps move gatsby source dynamic content md yml files new repo update external tools like netlify crowdin use new repo delete jekyll website source offer several benefits including improve focus simplify triage process website framework repos cut noise netlify preview comments prs nt related website creating issue mostly facilitate discussion around new proposed directory structure proposed directory structure cc ericnakagawa flarnie joecritch", "num": "11075", "d": "10/2017"}, {"title": "performance enhancements niche situations", "body": "hit couple things bit surprising sure really asking things documented somewhere also kinda going flow seems place raise generic issues even bugs keys make things slower bunch items thing changed xy positions adding key index made rendering slower possible shortsighted though since could well change layer items changing abovebelow found interesting rendering null makes huge difference two test cases full graphics pipeline vs essentially empty pojo renderer difference speed nt matter data graphics rather returned components dom nt work course custom renderers known certain type element edge node side effects render lifecycle returning significantly faster even straight functional component returns simple element side effects makes sense since react less branches consider even branches point nothing simple objects", "num": "11073", "d": "10/2017"}, {"title": "component respect defaultprops rendered react element", "body": "want request feature report bug bug current behavior component respect defaultprops rendered react element js object current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior defaultprops applied provided example two identical buttons versions react browser os affected issue work previous versions react tested chrome versions nt work", "num": "11071", "d": "10/2017"}, {"title": "componentwillmount calls order deterministic reactdomhydrate reactdomserverrendertostring", "body": "question related serverside rendering support materialui usecase generate class names based react tree traversal order one users djeeg noticed react tree potentially traversed different order serverside clientside using hence question calls order deterministic", "num": "11070", "d": "10/2017"}, {"title": "tests failing using createportal react", "body": "bug two files indexjs import react component react import reactdom reactdom export default class somethingcool extends component render return reactdomcreateportal thisportal indextestjs import react react import reactdom reactdom import somethingcool itonly renders without crashing gt const div documentcreateelement div reactdomrender div app started createreactapp run test get console renders without crashing change component render empty div without works fine info createreactapp reactscripts react reactdom macos sierra note also used suggested workaround requestanimationframe tests please let know info needed help figure going thanks", "num": "11068", "d": "10/2017"}, {"title": "read namespaceuri null error rendering comment", "body": "see internal task", "num": "11067", "d": "10/2017"}, {"title": "react known regressions", "body": "going track since website issues creating lot noise fixed master x extra variable umds fixed x instead component stack warning fixed x crash hydrating development fixed x getting lost svg fixed x crash rendering shadow root fixed x allow running test shallow renderers production fixed x ssr nt separate unrelated text nodes cases fixed x ssr reactdom client server handling newlines differently causing mismatch warnings fixed x peer dependencies warn beta x fires twice child added fixed x fires hovered child fixed x shallow renderer merge multiple calls correctly fixed x ssr throws obscure error bad prop fixed x loses textarea placeholder first render fixed x false positive warning rehydrating camelcase svg tag names fixed x false positive warning rehydrating fixed x nt work ssr new features added master x allow attribute attributes x allow explicitly shallow ignore hydration warning", "num": "11065", "d": "10/2017"}, {"title": "bug reactdomhydrate detects fix diff", "body": "intentional difference client vs server rendering image component displays different src depending screen pixel density import react react import proptypes proptypes function image props let src propssrc const style props const width propswidth stylewidth const height propsheight styleheight const pixelratio globaldevicepixelratio width height amp amp pixelratio gt const lastdotindex srclastindexof return imageproptypes src proptypesstringisrequired width proptypesnumber height proptypesnumber imagedefaultprops width undefined height undefined export default image current behavior render retina screen get warning warning prop match server imagepng client image browser shows serverrendered content correct client one expected behavior client mutates dom changes src attribute img versions react browser os affected issue work previous versions react react chrome previous versions react good approach render would rerender whole dom instead diff", "num": "11064", "d": "10/2017"}, {"title": "onblur event triggers trying set focus input type number conditional rendering firefox", "body": "want request feature report bug bug current behavior trying render active focus event triggers firefox even focus set current behavior bug please provide steps reproduce possible minimal demo problem click name column render active focus works chrome edge firefox please see live example expected behavior clicking name column input appears active versions react browser os affected issue work previous versions react react firefox sure react issue actually noticed change input type works perfectly firefox problem related input type number", "num": "11062", "d": "10/2017"}, {"title": "relationship render updatecontainer requestanimationframe", "body": "highly related call reactdomrender accurately updatecontainer within renderer seems param called somewhere updating rendered specifically callback call eg recursive approach get error flushsync called inside lifecycle method called react already rendering tangential note happens even triggered elsewhere like may bit misleading someone please explain little order look like updatecontainer callback use case described issue sake clarity like call toplevel render components finished rendering rely react requestanimationframe timing rather inject another one triggering prop changes without making root node manage via setstate componentdidupdate realworld scenario using react drive animation via custom renderer thanks", "num": "11060", "d": "10/2017"}, {"title": "componentdidcatch receiving props", "body": "want request feature report bug feature current behavior triggered errorboundary component additional props passed component goes render props available deliberate current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react pass props like trigger error children expected behavior expect props case still passed versions react browser os affected issue work previous versions react react reactnative new feature", "num": "11059", "d": "10/2017"}, {"title": "svg image onload event getting dispatched", "body": "svg element getting onload event dispatched example tested react", "num": "11058", "d": "10/2017"}, {"title": "reacttestrenderershallow throws nodeenvproduction", "body": "want request feature report bug feels like bug open correctioncontext current behavior reacttestrenderershallow throws details versions react current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react count jk specs comparing snapshots shallow rendered components utilizing libraries change behavior ex recompose expected behavior able shallow render components wouldwill built deployed production versions react browser os affected issue work previous versions react reacttestrenderershallow runs happily check error throw appears new related comment response difference dev prod versions react great news terms react disallowing prod version shallow render nt cover prod code path librariesdependencies", "num": "11055", "d": "10/2017"}, {"title": "resolution failure bundlecollapser nonunique file contents", "body": "want request feature report bug report bug expected behavior expected behavior recommended optimization resolve requires correctly produce functionally equivalent output current behavior observed behavior bundlecollapser causes browserified bundle resolve files incorrectly components different paths identical contents steps reproduce full reproduction see bundlecollapseruniquenessfailure react render different values coming respectively since component content identical erroneously resolves wrong component displays value simpler reproduction specific react see bundlecollapseruniquenessfailure versions react browser os affected issue work previous versions react browserifybundlecollapser issue react version irrelevant real issue officially recommended optimization may result invalid bundle", "num": "11049", "d": "10/2017"}, {"title": "active tab included current route permalinks new docs site", "body": "want request feature report bug bug new docs site current behavior new docs site active tab included current route permalinks attempting send someone instead dropped correct tab active current behavior bug please provide steps reproduce possible minimal demo problem via similar template go click add react existing app tab grab permalink within section ex open permalink within incognito window expected behavior taken correct linked section within docs versions react browser os affected issue work previous versions react issue react new docs site", "num": "11043", "d": "10/2017"}, {"title": "warning documentation found", "body": "want request feature report bug bug current behavior documentation warnings returns current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior redirect correct documentation versions react browser os affected issue work previous versions react workaround look cached version google search check markdown", "num": "11036", "d": "10/2017"}, {"title": "missing documentation nullundefined input value", "body": "want request feature report bug like request documentation pass input get following warning warning prop null consider using empty string clear component uncontrolled components warning clearly states problem fails mention supposed pass could find explanation online found link url controlledinputnullvalue sounds page explain exactly looking merely redirects nt mention issue warn input value null states warning added nt say open pull request document value undefined controlled component adds following documentation similarly setting attribute setting make react assume component controlled may produce warning explanation react behaves way naively expect perfectly valid value eg numeric input empty passing empty string indicate absence numeric value seems odd really like information documentation", "num": "11031", "d": "10/2017"}, {"title": "loosen type requirements event handlers", "body": "want request feature report bug feature current behavior adding event handlers common practice something like fine react reports warning technically correct expected listener function instead got value type however forces use verbose variant expected behavior think makes sense allow addition function types event handlers anything falsy although may much ask definitely understand rationale type safety perspective make less pragmatic personally huge fan js evaluates reduces amount boilerplate needed conditionally wire handlers versions react browser os affected issue work previous versions react react browsers emit warning react", "num": "11027", "d": "10/2017"}, {"title": "create pr eg createreactclass module", "body": "lots react modules listed repository would like create prs createreactclass reactdomfactories code repo somewhere", "num": "11024", "d": "10/2017"}, {"title": "feature request disable unrecognized tag warning react specific tags", "body": "want request feature report bug feature current behavior firefox element implemented use polyfill able support everything works well react warns element unrecognized page load quite useless specific case would like possibility disable warning elements utility warning remains developer mistype component name expected behavior specified tag acceptednormal react warn specified unrecognized tags versions react browser os affected issue work previous versions react react firefox previous versions warning clear enough need information cheers", "num": "11023", "d": "10/2017"}, {"title": "error error info logged wrong order firefox", "body": "react component throws error development mode error referenceerror x defined additional info error occurred component logged firefox happens wrong order error actually works fine google chrome firefox version macos react reproduce open browser console component throw error like javascript const helloworld gt hello world x reactdomrender documentgetelementbyid root", "num": "11022", "d": "10/2017"}, {"title": "leading zeros controlled input integer value", "body": "want request feature report bug bug current behavior text input see leading zeros pass digit value current behavior bug please provide steps reproduce possible minimal demo problem via similar template reason ca nt reproduce bug jsfiddle codepen moreover react works fine steps create controlled text input add listener saves input value integer pass value input write input value equal value input expected behavior value input state without leading zeros versions react browser os affected issue work previous versions react cra react chrome ie firefox understand low amount information happy provide need know else would useful", "num": "11021", "d": "10/2017"}, {"title": "deprecate remove testutilsmockcomponent", "body": "jestism nt open source package people using jest implement similar pattern directly", "num": "11019", "d": "10/2017"}, {"title": "old fiddles broken new domainwebsite", "body": "longer works causes old fiddles like break fix", "num": "11018", "d": "10/2017"}, {"title": "fiber render documentfragmentshadowroot", "body": "want request feature report bug bug current behavior react able render within documentfragmentshadowroot possible fiber anymore demo js import react component react import render reactdom class mycomponent extends component render return hello react class myelement extends htmlelement static myelement constructor super const shadowroot thisattachshadow mode open try fails render shadowroot catch e consoleerror e shadowrootinnerhtml connectedcallback consolelog myelement mounted customelementsdefine myelementis myelement related expected behavior able render shadow root like previous versions react versions react browser os affected issue work previous versions react react chrome", "num": "11017", "d": "10/2017"}, {"title": "hoistnonreactmethods", "body": "know discussed various places past specifically requesting gaearon add redux iirc know reasoning behind using something like somewhat sound topic nt really perfect solution time drawbacks guys think package utilizing hoc way previously nt work fiber recently rewrite bit move logic use ref child rather component prototype appears job well enough want make sure forgetting something significant especially fiber works obviously using heavily would nt good idea case hoc largely invisible implementation simply injecting prop changing passing refs works simply nt seem appropriate solution implementation would look something like obviously nt ideal trying consider best way implement transparent way handling far real problem see implementation would methods present child time mounting think acceptable drawback would think would nt hard adjust situation well though", "num": "11016", "d": "10/2017"}, {"title": "reactjsorg website displays empty page cookies disabled firefox", "body": "using firefox cookie whitelist plugin enabled preventing cookie storage loading flashes page content removes content body producing empty white page following content loading page content initially loads flashes security exception thrown console content removed page cookie whitelist set allow temporary cookies page loads normally", "num": "11015", "d": "10/2017"}, {"title": "warn unexpected html inside svg", "body": "react reactdom versions js const createelement h require react const rendertostaticmarkup require reactdomserver rendertostaticmarkup h div null h svg null h span nt mixed browser console guess programmer responsibility avoid case understand performance nt check", "num": "11013", "d": "10/2017"}, {"title": "reset select ignores defaultvalue", "body": "want request feature report bug report bug current behavior resetting form contains select defaultvalue selected option becomes first option element list one valuedefaultvalue current behavior bug please provide steps reproduce possible minimal demo problem via similar template put piece code click reset button formreset form expected behavior expect select select option valuedefaultvalue like applying formreset versions react browser os affected issue work previous versions react reactdom seems browser independent tried chromium firefox fedora nt try prior version react", "num": "11010", "d": "10/2017"}, {"title": "announcement page broken adblocker", "body": "announcement page broken using chrome mac", "num": "11008", "d": "10/2017"}, {"title": "question buildscripts sources", "body": "build scripts tirelessly typed fb exist fancy versions somewhere import statements object rest spread await lightly transpiled actually typed using unpleasant ecmascript offers direct untranspiled execution recent nodejs nice one search unique wordings one without finding anything", "num": "11005", "d": "10/2017"}, {"body": "sophiebits interpretation correct reason nt", "d": "10/2017"}, {"body": "like take able pr tonight", "d": "10/2017"}, {"body": "please create minimal reproducing example get new issues every day spend hour trying reproduce every issue would nt time left development good guide", "d": "10/2017"}, {"body": "clarify published demo helpful nt notice link top first would still appreciate could extract part nt work show simpler environment without router libs typescript etc", "d": "10/2017"}, {"body": "thanks fast response try additional research gradually removing libs ts maybe cause problem", "d": "10/2017"}, {"body": "also try opposite direction starting fiddle adding two three minimal components", "d": "10/2017"}, {"body": "according screenshot generated node server side rendering remove node divhomepage dynamic component current route", "d": "10/2017"}, {"body": "question", "d": "10/2017"}, {"body": "believe issue also referring following blog post true think might want notify author maotr instead", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "michael \u5218\u5e05 notifications githubcom receiving subscribed thread reply email directly view github mute thread", "d": "10/2017"}, {"body": "believe suggesting space react dom nt eg react dom reactdom sure referring though", "d": "10/2017"}, {"body": "seems like text may copied true think might want notify author maotr instead", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "bvaughn patient thanks think got mean react issue contact author using email", "d": "10/2017"}, {"body": "error boundaries nt supposed catch errors event handlers render lifecycles", "d": "10/2017"}, {"body": "documentation", "d": "10/2017"}, {"body": "yeah followed documentation however convinced reasons catch errors event handlers also know catch error trycatch blocks would mean develop new way handle display errors component instead using error boundaries also read react nt need know errors event handlers developers would convenient wanted dig bit reasons design decision thanks", "d": "10/2017"}, {"body": "ok let keep open discussion nt think specific reason could nt agree behavior whether beneficial acdlite might remember better", "d": "10/2017"}, {"body": "great think main benefit uniform way handle errors across components using error boundaries otherwise encourage develop two ways handle exceptions extend current behavior eb support besides adopters new feature may tempted trigger errors event handlers case waiting behavior perhaps one example codepen move exception handler ui get blocked users nt glue going according documentation save error would implement trycatch block set state display errors instead relying eb", "d": "10/2017"}, {"body": "reasons decided event handlers passed multiple levels throw nt know component error originated dom node triggered event component owns handler latter case even clear know component even could reliably figure component originated error would work error surfaces synchronously end event dispatch however many errors occur asynchronously like promise handler timeout way catching react similar previous point gave event errors semantics render errors raises question whether types events like network events userdefined subscriptions would require us exposing api like wrap arbitrary function error handling", "d": "10/2017"}, {"body": "thanks explanation acdlite humble thoughts event handlers passed multiple levels throw nt know component error originated dom node triggered event component owns handler latter case even clear know component difference pass props subtree components guess may also happen exception inside subtree component case keep reference dom trigger exception even could reliably figure component originated error would work error surfaces synchronously end event dispatch however many errors occur asynchronously like promise handler timeout way catching react would nt case async side effects render lifecycle methods like componentdidmount call external api ticket closed useful fiddle supported lifecycles think also supported event handlers similar previous point gave event errors semantics render errors raises question whether types events like network events userdefined subscriptions would require us exposing api like invokecallback wrap arbitrary function error handling understanding react error handling", "d": "10/2017"}, {"body": "difference pass props subtree components guess may also happen exception inside subtree component case keep reference dom trigger exception react component throws rendering know component react called component components nt call methods sure last component called event handlers pass handler one consider source one could possibly track", "d": "10/2017"}, {"body": "already asked please nt create duplicate issues bug tracker react discussion board please refer previous answer appropriate places ask questions cheers", "d": "10/2017"}, {"body": "hey looks like issue build environment setup want keep issue tracker bugs feature requests react would suggest trying one many support resources help", "d": "10/2017"}, {"body": "require promise right using things like render", "d": "10/2017"}, {"body": "might seem good worms promise rejected call twice two promises arrive different order last one win want newer value older value intentionally assuming already know want set need wait promise first call ready", "d": "10/2017"}, {"body": "likely support unfortunately microsoft nt gon na fix really way effectively work around event system tried best way found handle depending use case listen blur focus container set timeout coordinate two events", "d": "10/2017"}, {"body": "jquense totaly correct also fix using focusinfocusout react lifecycle example using however stuck testing using common react test tools react ca nt simulate unsupported events", "d": "10/2017"}, {"body": "try like fiddle", "d": "10/2017"}, {"body": "thankyou solved problem brought react babel version bug", "d": "10/2017"}, {"body": "yakiler nt mind share problem babel fixed", "d": "10/2017"}, {"body": "clemmy ok html use convert jsx library correctly parse jsx html official library perfect solution", "d": "10/2017"}, {"body": "note nt using version babel real websites meant quick prototyping extremely slow", "d": "10/2017"}, {"body": "deprecate refs composite components approach avoided instance passing refs via props unfortunately solution nt resolving problem receiving component instance parent component example component librarydeveloper nt props refs need pr merged week month never break many existing apps using refs without way achieve functionality", "d": "10/2017"}, {"body": "approach avoided instance passing refs via props mentioned bunch eslint thread deprecating finddomnode taion using props pass refs dom node access untenable libraries may either parents children approach works everyone agrees prop names imagine every library specified name css classes nothing would interop well need handle etc bit less concern still great root problem composite refs seems encourages using instance imperatively could address behavior host refs always return underlying host node ref probably use case refs anyway", "d": "10/2017"}, {"body": "alternative approaches getting root dom node class component need special cases via wrapper component jsx class rootnodewrapper extends reactcomponent componentdidmount thispropsrootref reactdomfinddomnode componentwillunmount thispropsrootref null render return usage ways without using", "d": "10/2017"}, {"body": "strongly agreed css class name example point alternatives work promulgated canonical name like something otherwise interop becomes miserable every library ends inventing convention agree always returning host ref would clever neat though still backdoor getting instance might nice cases sure cutting entirely really best", "d": "10/2017"}, {"body": "guess system nt need support outofthebox parent could always pass callback child calls render time neat web pass host node usefulmeaningful eg react native context though", "d": "10/2017"}, {"body": "taion thinking sure naming big problem looking different codebases contract passing though ref via explicit props seems declarative opinion rather generic specifying type node want ref say actually lends descriptive even prevalent component render returns fragment case generic root dom node return via composite component free name prop want though could use generic name even would longer special case composite components legacy components still work change long pass props jquense feel logic composite components become even confusing developing react native api refs remain consistent across renderers opinion", "d": "10/2017"}, {"body": "trueadm works single level nesting multiple levels nesting sort breaks want work like purposes able receive something generically attach popover tooltip single prop would best especially also works dom components", "d": "10/2017"}, {"body": "taion using generic name like expect callback return single ref likely become confusing added fragments react theory could many refs might something could better tackle future still feel better explicit use pass via prop would conflict", "d": "10/2017"}, {"body": "think case would throw attempting attach something fragments entirely ideal better suggestion deal case example comes something like suppose needs find dom node thing wrapping position calculations figuring render tooltip like exist convention works someone implementing standard convention follow otherwise interop across component libraries becomes hairy mess", "d": "10/2017"}, {"body": "taion case wrap child component use calculations based possible ca nt put additional something like probably better route could adapt alternative wrapper component using really expect fragments become common return type component renders future throwing error nt ideal core api", "d": "10/2017"}, {"body": "generally acceptable add extra wrapping markup sort utility component components really come quite lot generic utility component ca nt eg assume user component wrapped something without breaking markup may indeed case components return fragments also case components nt need parents inject eg event handlers add eg tooltip hover behavior components care nt going return fragments anyway eventually render something relevant cares expose api lets get handle dom element use position calculations strongly rather something takes consistent convention makes possible support without adding extra user never asked reactcallreturn could interesting longerterm solution semantics quite different ca nt eg shimmed perspective something like assuming react ships fullybaked reactcallreturn nt really great options maintaining forwardbackward compatibility already bitten us extent portals old api least explicitly unstable ref api", "d": "10/2017"}, {"body": "taion case expect single component nothing stopping using get dom node proposal nt suggesting deprecate api suitable replacement escape hatches want avoid something work fragments could use marker dom node fragment wanted support range children could placeholder end could support handling many children refs", "d": "10/2017"}, {"body": "example per breaks conceptually presence fragment returns well mean fine purposes nt need generic way get handle dom node arbitrary react element may well fragment see pattern facebook page think looks little bit like renders tooltip portal maybe react portal positions tooltip shows next really common pattern generically almost every ui library exposes something like often nt make assumptions beyond tooltip shows element take mouse events certainly mandatory extra markup case want something implicitly asserts renders single dom element work literally", "d": "10/2017"}, {"body": "actually going become normal prop composite elements case serve role hypothetical composite component choose forward along wishes expose root node way case great preferred solution though sure handle deprecation way nt warn legitimate uses along lines", "d": "10/2017"}, {"body": "motivating example consider component like pretty natural way write component becomes another prop case parent gets exactly wants", "d": "10/2017"}, {"body": "taion maybe deprecate entirely use alternative api prevent confusion case ideally react equivalent would normal prop trying explain whole time proposing actually fits better like showed still wip rfc update tomorrow reflect name change personally feel might best make go away cases instead specific escapehatch host nodes maybe would normal prop composite components meaning passed freely needed thoughts", "d": "10/2017"}, {"body": "sure rename something like eg react would invoke callback host node everything else another prop think something like getting earlier think would great ends asking eslint discussion purposes would replace", "d": "10/2017"}, {"body": "would super sweet btw exactly wanted", "d": "10/2017"}, {"body": "updated original post slightly bit tired let know anything missed used example", "d": "10/2017"}, {"body": "looks great two small notes considerations think handles proposed case well rn composite components could implement semantics note replaces least remaining use cases", "d": "10/2017"}, {"body": "broad question clear answer best people directly use react laravel server run js php code projects attempting mitigate speak stability could also two server layers php node seems complex googled laravel react server rendering found thread hope find useful encourage turn community resources question", "d": "10/2017"}, {"body": "case component whereas element element stateful component gets rendered instance created instance preserved across renders whereas new elements created every render good blog post goes detail", "d": "10/2017"}, {"body": "amannn doc state statement react elements immutable said true element question custom react component instance one mutable afaik gaearon", "d": "10/2017"}, {"body": "element never mutable eg consider code js const element hello world elementpropschildren goodbye world reactdomrender element documentgetelementbyid root throw note user defined custom components stateful hand properties instance mutated time react user", "d": "10/2017"}, {"body": "amannn class clock extends reactcomponent constructor props super props thisstate seconds componentdidmount thisinterval setinterval gt thistick tick thissetstate prevstate gt seconds prevstateseconds render return would example classify mutating instance react element second passing different", "d": "10/2017"}, {"body": "well yes properties instance mutated react mutation element however rather new one created every render terminology bit tricky linked article maybe helps bit", "d": "10/2017"}, {"body": "amannn yeah think terminology thing give thought later", "d": "10/2017"}, {"body": "rendering new instances", "d": "10/2017"}, {"body": "would example classify mutating instance react element second passing different someprop exactly immutable create new element every time react remembers old one internally type key match case mutates old instance props new element detail", "d": "10/2017"}, {"body": "related", "d": "10/2017"}, {"body": "ask called", "d": "10/2017"}, {"body": "reconciles component say screen actually screen", "d": "10/2017"}, {"body": "duplicate fixed master thanks report", "d": "10/2017"}, {"body": "could move make sure still throw something neither supported object types still throw unsupported type nt object call unnecessarily eg element maybe could duplicate code path figure smart way test go place existing iterable tests currently go search definitions see one find one similar put next", "d": "10/2017"}, {"body": "look examples sprinkled throughout docs section fairly small even though technically hosted files", "d": "10/2017"}, {"body": "yes viewed fine beginners code useful grab unless missing something four five built several materialui apps redux redux forms written distilled subset use many components mui however react native compatible appear movement direction would really love see something akin threejs extensive example application library examples lt modules plus threejs library components yarn webpack lint mocha thousands special case frameworks react ecosystem beginning resemble java spring good way find surprising even building several full production reactreduxformsrest apps learning curve react apps using different set components ui much shorter learning react first place solution issue lot distilled single module applications cover range potential use cases", "d": "10/2017"}, {"body": "tried use create react app handles build dependencies nt need think configuring setting", "d": "10/2017"}, {"body": "yes used deconstructed understand exactly great piece software good fit last app great start last app used koa server telemetry sensors app three facing web viewing data sensors telemetry acquisition database admin archival react superb environment able store routes react component definitions tables query needed generate front end apps thinking user oriented take picture stuff take another picture write note normal stuff fairly pedestrian react native environment problem party example lots unique extra special dependencies standard way show core functions minimalist linting minimal error handling complex regression testing set modules would willing contribute repository knew others would value fun learn new stuff every time take new bleeding edge project nt mind bleeding new stuff half fun stuff mature boilerplate simple boilerplates ones see set many modules directory vertigo think like new term", "d": "10/2017"}, {"body": "thinking much thought createreactapp great piece software also good example problem newbie hard figure exactly entry point one software exists hidden nodemodule directory part user code would bet cra made explicit instantiates placing code module root directory created app use would skyrocket google generally alphabet describes functions happen implicitly magical considered poor design hard control maintain modify complex directory structures hidden critical files perform magic matter cool suffer issue problem degree training history also bit ego making thing look trivial hard looks trivial appreciated much", "d": "10/2017"}, {"body": "another way look think compiled languages need understand c compiler works write c would expect complete source code c compiler explicitly written every c project call command line utility abstraction think cra way starts make sense think", "d": "10/2017"}, {"body": "sure clear big believer react please take denigration instead profound desire help improve c language issue great example turns struggling today use glreact repositories keep running problems like missing obviously react issue illuminating upgraded node broke many gl oriented react libraries reinstall node plus make sure microsoft developer utilities installed support high performance version sqlite somehow figure make work react native also bought mac hopes sidestep issues entangled hope see point believe set really well executed minimalist examples types react app components widely used would really help sort react rocks distilled core components tested user confident examples work simply pointing directory running npm init amp npm start simplified app set would go along way reduce stress level venturing one react comfort zone especially one could cut paste examples create full solutions ideally repository example would limited optimally one directories nodemodules directory modularization fine create directory vertigo way help others feel afterall hard trash talk java spring ultimately nodereact ecosystem inscrutable sun oct dan abramov notifications githubcom wrote another way look think compiled languages need understand c compiler works write c would expect complete source code c compiler explicitly written every c project call command line utility thats abstraction think cra way starts make sense think receiving authored thread reply email directly view github mute thread", "d": "10/2017"}, {"body": "js const updateusername e gt thissetstate username etargetvalue solves quite nicely explicit require changes jsx", "d": "10/2017"}, {"body": "react nt use raf least", "d": "10/2017"}, {"body": "good know however still seems like creates listeners page calling setstate raf loop prior versions nt chrome profiler let see listeners attached unfortunately tried testing browsers also nt list total number listeners page", "d": "10/2017"}, {"body": "run long enough see getting gc eventually also see happen production mode think real leak expected create listeners trick use intercept exceptions keeping pause uncaught exceptions checkbox working maybe could restructure code reuse single listener keep stack callers sure worth effort", "d": "10/2017"}, {"body": "thanks clarification close issue", "d": "10/2017"}, {"body": "also propagation mouseoverleave looks completely unexpected", "d": "10/2017"}, {"body": "move portal outside button eg wo nt bubble button", "d": "10/2017"}, {"body": "first thought imagine mouseenter handler component container need nothing events component mouseenter simply works mouse really enters button dom element fired mouse popover portal event fires mouse popover actually moment need stop propagation component break event firing mouse button popover using common popover component application also break logic app parts really nt understand purpose bubbling react tree need events portal component simply pass handlers props worked perfect open modal window button deep react tree receive unexpected firing events modal also stop propagation dom get events really expect fired", "d": "10/2017"}, {"body": "nt use arrow function case look like exactly asking class toggle extends reactcomponent constructor props super props thisstate istoggleon true handleclick gt", "d": "10/2017"}, {"body": "parrker becourse looks like strange humanity hope component ugly work let codes nice sharp", "d": "10/2017"}, {"body": "proposed way thing typescript js class toggle extends reactcomponent state istoggleon true handleclick gt know mean strange humanly already consistent languages also similar arrow functions work javascript syntax currently stage proposal means decent chance becoming part javascript babel plugin included default create react app", "d": "10/2017"}, {"body": "fri oct pm dan abramov notifications githubcom wrote closed receiving subscribed thread reply email directly view github mute thread gt", "d": "10/2017"}, {"body": "duplicate happy take fix", "d": "10/2017"}, {"body": "hi would like work could please point specific direction would really appreciate", "d": "10/2017"}, {"body": "think relevant code reactfiberclasscomponent would suggest adding test first eg try reproduce existing warning try make changes better warning help", "d": "10/2017"}, {"body": "hey mzubairahmed thought good starting bug went ahead fix exercise nt ultimately take bug let know create pull request", "d": "10/2017"}, {"body": "mzubairahmed able look yet", "d": "10/2017"}, {"body": "deanbrophy yes even started working since beginner taking time complete think wise hold welcome continue gaearon keep looking space issues future", "d": "10/2017"}, {"body": "mzubairahmed thanks next good first issue", "d": "10/2017"}, {"body": "discovered serverbrowserjs", "d": "10/2017"}, {"body": "import client app bundler automatically use instead field remember verifying worked webpack browserify bump case nt happen", "d": "10/2017"}, {"body": "interesting didnt know perhaps oy importing something else causing issue trying render email previews client", "d": "10/2017"}, {"body": "looking taking issue first sourcecodetouching pr sure much take someone knows wants take please let know look something else work", "d": "10/2017"}, {"body": "see comment curious breaking change", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "intentional react listens events document level better performance", "d": "10/2017"}, {"body": "thank muchi miss point", "d": "10/2017"}, {"body": "yes intentional docs nt updated yet ideally wish browser vendors offered way group filter cc samccone way opt yet open adding proposed way", "d": "10/2017"}, {"body": "ideally wish browser vendors offered way group filter guess would best option proposed way nt like query string way much global var looks good maybe something like", "d": "10/2017"}, {"body": "fyi started discussion timeline filtering feature chrome", "d": "10/2017"}, {"body": "gaearon fixed", "d": "10/2017"}, {"body": "yep thanks reminding", "d": "10/2017"}, {"body": "run npm terminal", "d": "10/2017"}, {"body": "close definitely issue setup cra ca nt run shell problem path configured system node experts ca nt help able use node npm support forums resolve", "d": "10/2017"}, {"body": "proxy get development mouse event proxy warn accessing fields unsupported way technically event object need fields work", "d": "10/2017"}, {"body": "thanks report fixed released yet watch next release", "d": "10/2017"}, {"body": "support functions thus components unnamed unless either set polyfill getter provides polyfill", "d": "10/2017"}, {"body": "ah sure enough polyfilling trick thanks kovensky wonder added javascript environment requirements section docs polyfills error boundaries section", "d": "10/2017"}, {"body": "please file new issue documenting thanks", "d": "10/2017"}, {"body": "think fix", "d": "10/2017"}, {"body": "apologies long read wanted make sure thoroughly exploring option nt want bias things much opinion position choose think go option option backwards compatible declarative explicit need maintain fallback heuristic libraries already provide similar sigilsmodifiers", "d": "10/2017"}, {"body": "apologies long read wanted make sure thoroughly exploring option nt want bias things much opinion position choose think go option option backwards compatible declarative explicit need maintain fallback heuristic libraries already provide similar sigilsmodifiers", "d": "10/2017"}, {"body": "option option think react handled behavior api changes well past introducting warnings links docs might serve well help developers understand happening hood option looks attractive declarative nature reading jsx code new coming developers know immediately react rendering element", "d": "10/2017"}, {"body": "comments option developers might confused react sets attribute instead property depending chosen load element consumers custom element need understand distinction important author custom element seems like author element need handle attributes anything used html since way data gets passed html usage properties want support complex values property getset dom even possible author could something initially implemented attribute later add property name support flexible data types still back property value stored attributes naming collisions future htmlelement attributes properties seems like weakness web components standards general since lead errors regardless binding approach element undefined property react trying pass objectarray set property someattr object object useful seems confusing bind differently based value author element specified property gettersetter handle value setting property would cause element behave like value never specified might harder debug comments option another potential con option requires consumer custom element know whether element implemented something property attribute using mix react components custom elements could confusing set react props using one syntax custom element properties using different syntax", "d": "10/2017"}, {"body": "consumers custom element need understand distinction important author custom element doubt actually huge issue pointed element author define attribute property underlying value accept data would also add keep attribute property sync setting one sets naming collisions future htmlelement attributes properties seems like weakness web components standards general since lead errors regardless binding approach agree sure something react needs try work around library feels like problem needs solved part custom elements spec see discuss part upcoming tpac standards meeting add properties nt bad elementdefined property shadow future property added htmlelement passing data custom element js property would continue work main issue seems around attributes since global seems confusing bind differently based value author element specified property gettersetter handle value setting property would cause element behave like value never specified might harder debug case custom element lazy loaded upgraded initially undefined properties addresses use case making sure elements still receive data use postupgrade true author nt define gettersetter value would useful also useful since nt know property truly undefined definition lazy loaded seems safest set property another potential con option requires consumer custom element know whether element implemented something property attribute think essentially boat today nothing forces custom element author define attribute instead property could element properties api would receive data react current system would need know use directly set js properties custom elements meant primitive nothing enforces creating corresponding attributes properties trying hard encourage best practice libraries know today create backing properties attributes edit stated earlier point seems like author element need handle attributes anything used html since way data gets passed html usage properties want support complex values property getset dom never know user try pass data element end needing attributeproperty correspondence anyway imagine option shipped folks would bind everything using sigil easiest work custom elements vue today since expose modifier", "d": "10/2017"}, {"body": "requires consumer custom element know whether element implemented something property attribute something react worry rob said opinion custom element author responsability inform user element works actually way need today example think element let say need mute change current time inside component works boolean attribute current time need create pointing video element change property create event handler instance method manually set property dom element think kinda breaks declarative model react imposes api jsx abstract layer since clearly state wrapper component property binding would still need event handler jsx abstraction model would declarative refs would nt necessary point whether relying native custom elements still need know way around based documentation difference second case come custom element author cjorasch two cents", "d": "10/2017"}, {"body": "designing scratch without needing consider backwards compatibility think option would idiomatic per react javascriptcentric api dom regard serverside rendering could problem solved providing api application code inform react map custom element properties attributes similar maps react already maintains platformdefined attributes api would need invoked per custom element name instance properties nt follow straight correspondence attribute hopefully relatively rare concerned much breaking change though think option pretty appealing well sigil signifies property would suggest since already javascript property accessor however think unfortunate make every instance custom element used application responsible knowing use attribute vs use property prefer option even property attribute map needed mapping code isolated jsx usages", "d": "10/2017"}, {"body": "case custom element lazy loaded upgraded initially undefined properties addresses use case making sure elements still receive data use postupgrade maybe nt understand upgrade process elements would typically properties defined getterssetters class prototype checking would return true existence gettersetter even property value still undefined upgrade property values get set temporary instance later get copied actual instance lazy load complete", "d": "10/2017"}, {"body": "upgrading process custom element receives class prior instance class property getterssetters nt available", "d": "10/2017"}, {"body": "jeremenichelli muted works boolean attribute checked also corresponding property though nt seem documented mdn p current time need create ref pointing video element change property yeah occasionally encounter propertiesonly apis modern html elements updates high frequency would nt make sense reflect html attribute point wether relying native custom elements still need know way around based documentation yep unfortunately onesizefitsall attributesproperties rule think generally speaking lean heavily properties provide syntax developers use attributes special cases", "d": "10/2017"}, {"body": "robdodson yeap knew muted property used two prove already wild nt onesizefitsall rule mentioned rely documentation native custom elements something would nt mind decision writing last code snippet kinda liked property binding though", "d": "10/2017"}, {"body": "effulgentsia however think unfortunate make every instance custom element used application responsible knowing use attribute vs use property think already case today though since major custom element libraries polymer skate possibly others automatically create backing properties exposed attributes developers could use sigil every property custom element would probably rare occurrence need switch using attribute cjorasch upgrade effulgentsia mentioned possible custom element page load definition later time initially instance load definition later upgrades becomes instance class point lifecycle callbacks get executed use technique polymer starter kit project kind like example wo nt load definition router changes entirely possible set property element upgraded definition loaded element grab data one lifecycle callbacks", "d": "10/2017"}, {"body": "developers could use sigil every property custom element developers started would differentiate using property using property must nt differentiation needed serverside rendering", "d": "10/2017"}, {"body": "developers started would differentiate using property using property must sorry maybe phrased wrong meant developers would likely use sigil would give consistent result use pass primitive data rich data like objects arrays always work think working properties runtime generally preferred working attributes since attributes tend used initial configuration nt differentiation needed serverside rendering might case server sigil would fallback setting attribute", "d": "10/2017"}, {"body": "might case server sigil would fallback setting attribute nt think would work reason sigil property nt exist attribute video currenttime differentiate using property using property must think differentiation important entirely different reasons choosing use attribute property optimization eg ssr preferring attributes vs clientside rendering preferring properties vs something exists either attribute property regard serverside rendering could problem solved providing api application code inform react map custom element properties attributes specific suggesting something like examples muted set either property attribute reactdomdefinecustomelementprop xfoo muted muted muted currenttime set property reactdomdefinecustomelementprop xfoo currenttime currenttime null myattribute set attribute reactdomdefinecustomelementprop xfoo myattribute null myattribute richdata set either property attribute setting attribute set json string rather object object reactdomdefinecustomelementprop xfoo richdata richdata richdata jsonstringify something property null ssr would skip rendering hydrate client something attribute null react would invoke currently something react could choose whatever strategy optimal perhaps means always setting property clientside attribute serverside perhaps means setting attribute initially creating element setting property later patching vdom perhaps means setting attribute value primitive type ideally react able change strategy whenever wants internal implementation detail react encounters prop nt called nt defined html spec global property attribute react implement default logic example perhaps version maintain bc set attribute version assume either follow optimal strategy case keeping separate api jsx objects kept clean within single namespace like react components noncustom html elements", "d": "10/2017"}, {"body": "sorry excessive comments thought another benefit proposal like share calls could provided js file maintained custom element author repository custom element maintaineddistributed would nt needed custom elements strict correspondence propertyattribute per issue background statement recommendation majority case anyway custom element authors following recommendation would need provide react integration file author nt provide eg custom element author nt care react community people use custom element within react apps could selforganize central repository housing integration file think possibility centralization preferable solution requires every user custom element always explicit sigil", "d": "10/2017"}, {"body": "option would preferred huge breaking change inverse attributes prefix props", "d": "10/2017"}, {"body": "sigils react nt know feel jsx spec regarded universal overly reliant dependent browser specifics especially irregularities due backward compatibility behaving different unfortunate looking browsers api whole surprise would make implementation detail leak surface contradict javascript centric approach unless spec following think bad idea rely web component glad semantics hidden away react jsx well making sure introduce breaking changes options leaving place seems favourable specifically designed access object least developer knows exactly going sigilleak neither new attributes could break existing projects", "d": "10/2017"}, {"body": "leecheneler option would preferred huge breaking change inverse attributes prefix props would breaking change current behavior attributes default would remain sigil would optin developers would use replace spots code currently use pass data custom element js property drcmda neither new attributes could break existing projects clarify meant", "d": "10/2017"}, {"body": "fyi anyone following discussion updated rfc option suggested members react team", "d": "10/2017"}, {"body": "robdodson referring option add attributes object cons may breaking change", "d": "10/2017"}, {"body": "option seems safest us lets us add feature without make decision implicit api right since ecosystem still figuring phase always revisit years polymer paperinput element properties would produce large config developers using lot custom elements app may equal lot configs need write impression custom element users react eventually want wrap custom elements react components anyway appspecific behaviorcustomizations nicer migration strategy case everything already react component eg happens generated lets replace react component custom component uses even use custom elements point time people going create react components interop points might well provide powerful helper also likely people share configs custom elements use eventually see ecosystem stabilize adopt configless approach think next step would write detailed proposal config look like satisfy common use cases compelling enough custom element react users since nt answer common use cases like event handling going end limbo feature nt provide enough benefit offset verbosity", "d": "10/2017"}, {"body": "building earlier comment logic would react prop xfoo instance prop null register event handler invokes prop value assumed function else rendering clientside null set element property prop value else null set element attribute stringified prop value null use stringify prop value otherwise polymer paperinput element properties would produce large config like suggest config necessary outlier props prop xfoo instance nt included config default value function else", "d": "10/2017"}, {"body": "alternatively maybe makes sense keep events separate namespace case remove everything last comment instead let events registered", "d": "10/2017"}, {"body": "gaearon effulgentsia yall think combination option option option would make easier casual user custom element pass rich data imagining scenario building app want use couple custom elements already know work invested want write config option would folks want use something like paperinput app would really like expose entire api everyone team", "d": "10/2017"}, {"body": "ssr option heuristic could always use attribute rendering server camelcase property gets converted dashcase attribute seems pretty common pattern across web component libraries", "d": "10/2017"}, {"body": "like idea combination lot meaning custom elements would work expected set property clientside dashcased attribute serverside people could switch anything nt suit would breaking change though way react works anyone experiences breakage eg using custom element attributes nt backed properties could switch still break leave react team decide acceptable", "d": "10/2017"}, {"body": "ah get reading quickly train robdodson really fan option read props prefixed hence hesitation option seems reasonable straightforward like effulgentsia heading reason could nt supporting multiple types single prop valuable hesitant flow though effulgentsia value function eventname prop name else propertyname prop name attributename camelcasetodashcase prop name nt think want function prop default event assigning propertyname attributename sensible would want supported mimic question", "d": "10/2017"}, {"body": "leecheneler quoting issue summary option pros element created libraries like polymer skate automatically generate properties back exposed attributes elements work approach developers handauthoring vanilla components encouraged back attributes properties mirrors modern ie oddballs like elements etc implemented reason assigning propertyname attributename sensible reflects actually case elements follow best practice making react aware allows react decide use based situation using properties clientside rendering attributes serverside rendering custom elements nt follow best practice attributes without corresponding properties andor properties without corresponding attributes react would need aware attributelessproperties nt rendered ssr propertylessattributes set setattribute clientside rendering proposal could potentially done bitcombining flags however would nt provide way express attribute name different property name eg camelcase dashcase would provide way express serialize rich object attribute ssr current behavior object object nt useful nt think want function prop default event yeah think agree well hence followup comment thanks validating hesitance", "d": "10/2017"}, {"body": "thought less verbose version earlier suggestion const xfoo reactdomcreatecustomelementtype xfoo unreflectedattributes unreflectedproperties reflectedproperties default casing conversion could omitted per code comment strongly urge requiring every reflected property defined rather default anything nt defined automatically reflected property whose attribute name dashcased version", "d": "10/2017"}, {"body": "makes sense effulgentsia like second example open combinatorial explosion types gets added ala events whatever might make sense although suppose would nt want mix event prop attribute anyway attribute amp prop probably things want mimic", "d": "10/2017"}, {"body": "think opportunity react web component community align best practice react opinion go long way custom element authors guided right direction due widespread adoption weight opinions carry although authored implementation option always caught separate attributes events properties ideally prefer option practically think prefer option escape hatch option ideal many types attributes nt corresponding properties aria data require extra heuristics around edgecases elements may attribute property implement one whatever reason feel option considered carefully may viable longterm option preferable nonbreaking change work situations custom element definition registered prior instance created loaded properties set prior art option preact cc developit worked well thus far going path gives reasonably robust nonbreaking implementation proven successful react variant works situations anything gives react shortterm solution better solutions assessed longterm situation situations nt work deferred loading custom element definitions others nt covered escape hatch like incremental dom done could implemented similar effulgentsia proposing would scale better number custom elements consumers want percustomelement basis still function allows react opinion escape hatch satisfy usecases handing responsibility consumer edgecases also something previously discussed developit implementing preact alignment preact react would big win concern future html attributes something ca nt solve nt think get caught concerning", "d": "10/2017"}, {"body": "calls could provided js file maintained custom element author would tie custom element implementation libraryspecific implementation case react opinion high burden custom elements authors moreover authors use react convincing ship definition gets politics discussions one wants defining invocation api user custom element propertiesattributes user actually uses less code maintain expressive", "d": "10/2017"}, {"body": "even library author use react arguing better ux client web components define property configuration use first time use web component needs property hard adding sigil verbose also explicit easier subsequent uses nt need think every single callsite component either case need understand propertiesattributes difference adopting new web component single shared configuration nt need every user component within app think could potentially allow remapping property names configuration allow making reactidiomatic names upgrade path sophisticated wrapper one ever needed also smoother since replace xfoo custom react component whatever fancy translation logic needs basically possible people think property configuration every time use component rather approach suggested option think ergonomic equally flexible option nt work super well server rendering html generation option also creates upgrade hazards web component authors adding property name existing attribute breaking change decide ssr nt useful option pretty appealing react perspective familiar would comprehensive enough practice though component authors expose everything via properties", "d": "10/2017"}, {"body": "treshugart without getting deep bikeshedding think could show expect escape hatch work pseudo code fine page", "d": "10/2017"}, {"body": "sorry sophiebits seeing reply like respond points reading times wanted quickly respond one familiar would comprehensive enough practice though component authors expose everything via properties component built polymer skate expose everything via properties might rare outliers maybe setting attribute styling something otherwise think things always backed properties pretty confident majority inproduction web components built using one two libraries someone handauthoring vanilla web component nothing forces expose everything via properties encourage best practices docs examples worth also nothing forcing use attributes custom element definition class developer whatever want practice folks prefer using abstraction like polymer skate mint components getting properties api free", "d": "10/2017"}, {"body": "maybe best approach properties always client side support option configuration map primitive property names attribute names people want support ssr apps", "d": "10/2017"}, {"body": "sophiebits think great idea except extent breaking change people written react apps using attribute names example rule properties propname nt dashes attributes robdodson aware custom element frameworks practices people would different casing attributes corresponding property without containing dash ie attribute property actually seems much common pattern builtin html elements global attributes eg gt unclear sufficiently discouraged custom element attributes thanks polymer skate still issue existing jsx would fail property set property", "d": "10/2017"}, {"body": "effulgentsia speak skate recommend using attribute api writing html intents purposes also classified server rendering anything via js setting props api automatically oneway sync deserialisation attributes derives attribute name dashcasing property name camelcase becomes camelcase etc behaviour whole configurable encourage best practice aforementioned stated many props make ssr hard valid concern since sounds like would prefer option maybe try push forward sophiebits proposal setting props client providing fallback mapping assume means attributes set server sake example could implement carrying state props server client skate custom element implements setters custom element level trivial react went road setting attributes server rehydration would essentially skate component authors actually would nt anything already provide deserialisation logic robdodson would similar thing incremental dom would look something like js const isbrowser true would actually detection const oldattributehook reactdomsetattribute much like idom impl arguably clear name reactdomsetattribute element name value gt essentially option added browser check keep attr sets server isbrowser amp amp name element element name value else oldattributehook element name value", "d": "10/2017"}, {"body": "sophiebits option also creates upgrade hazards web component authors adding property name existing attribute breaking change think may unavoidable given way attributes work platform ssr custom element therefore must write attribute also run risk platform ship similarly named attribute future treshugart mentioned nt think something react really library empowered solve something want take web component spec authors tpac see fix custom element space sure changes mind option wanted mention since option nice bonuses preact seems proving practice maybe best approach properties always client side support option configuration map primitive property names attribute names people want support ssr apps supportive continuing head direction effulgentsia think great idea except extent breaking change people written react apps using attribute names option would solve otherwise would probably need heuristic coupled option maps dashcased attributes camelcased properties rule properties propname nt dashes attributes looks like preact set attribute dash name assuming use option nt pass check falls back attribute source personally like behavior gets back realm setting attribute possible future conflicts think sophiebits weigh aware custom element frameworks practices people would different casing attributes corresponding property without containing dash know dash easy way library know camel case handauthoring vanilla web component could option would save would nt find property fallback previously used attribute worth looks like preact last resort call tolowercase property nt recognize setting attribute ssring would also properly fall back attribute treshugart maybe try push forward sophiebits proposal setting props client providing fallback mapping assume means attributes set server yes yes would similar thing incremental dom idea every element base class would need mix", "d": "10/2017"}, {"body": "btw thank continuing participate discussion know gotten quite long", "d": "10/2017"}, {"body": "sure understand last example highly unlikely provide global overridable hook like", "d": "10/2017"}, {"body": "gaearon think trey showing net change monkeypatch presumably written reactdom implementation", "d": "10/2017"}, {"body": "based recent comments think proposal bc nt change anything lowercase custom elements work react words jsx like would continue work way react minor bug fixes wanted open separate issue discuss add configless api create react component better custom element semantics eg component created employ following semantics prop xfoo reserved react prop name others apply usual react semantics set either attribute property custom element dom node htmlelement global attribute property defined html spec including thing props react would element words react applies props dom node identical clientside ssr prop xfoo contains dash global attributes permitted emit warning inform developer xfoo propertycentric attributecentric api nothing neither set property attribute prop xfoo starts underscore upper ascii letter nothing maybe emit warning neither recommended way name properties custom elements reserve namespaces future semantics example see props xfoo rendering clientside set dom node property ssr value primitive render attribute nonprimitive skip rendering set property clientside hydration ssr rendering attribute camelcasetodashcase name components created via api reserve prop name use event listeners eg wanting conflict potential custom element property names reactdomcreated implementation would automatically register event listeners dom node edge cases eg using custom element implementation nt desired sufficient app developer could implement react component whatever special thing need ie nt need use could extend people want behavior want jsx use lowercase custom element names instead similar reasons people familiar writing html prefer monkeypatch reactcreateelement would pretty simple monkey patch take first argument matches custom element name want whether specific list string lowercase letters least one dash invoke name forward result remaining arguments original", "d": "10/2017"}, {"body": "developit gaearon could either mapping necessary think hook sustainable however also intended show net change implemented reactdom core jason pointed", "d": "10/2017"}, {"body": "bc nt change anything lowercase custom elements work react words jsx like would continue work way react minor bug fixes wanted open separate issue discuss personally prefer able use element easily pass properties without first needing wrap possible rather go sohpiebits suggestion option clientside properties config ssr still holding hope maybe folks reconsider maybe option backwards compatability bonus gaearon opinion change trey proposal part reactdom core maybe could flesh example would help", "d": "10/2017"}, {"body": "main concern option creating lot boilerplate allow interoperability breaking dx would shame react core team contributors spend lot time changes wo nt desired impact really loved react team handled last changes repo like proptypes would good think plan involving one switch educate developers possible changes future custom custom elements think solution satisfy us one combining options steps api addition warning deprecation behavior change maybe options warning later option deprecation needed wrapper", "d": "10/2017"}, {"body": "maybe options warning later option deprecation needed wrapper actually thinking opposite would better series steps option less dramatic change measuring goes ssr story starts look like web components following option adds new api notion proxywrapper components", "d": "10/2017"}, {"body": "main problem option pretty large bc break main problem option race condition depending element done upgrading sure either truly acceptable project widely used react given availability option wonder instead make much safer still useful improvements usages example inverse option simply introduce props stuff like fully backwards compatible virtue uppercase letters valid attribute names except react currently calls setattribute even prop names upper alphas relying browsers internally lowercase name however could future minor release react emit warning encountering custom element props valid attribute names people fix casing mistakes prior upgrading react addition preserving bc approach easy understand attributecentric meaning react props treated element attributes fits given element name lowercase dash therefore htmlcentric however provided relatively rare cases need pass properties pass rich data people want switch mental model propertycentric ala option option style api could come syntax every prop treated property option fits element name xfoo also following jscentric convention think still want minimum support props treated attributes could either limit generalize treating prop dash attribute meanwhile support option configuration ssr could add config api perhaps could callback function similar one treshugart comment think", "d": "10/2017"}, {"body": "way isolate without third party dependencies", "d": "10/2017"}, {"body": "also experience bug development mode render html array unique keys array entry removing keys rendering everything div around remove whole array seems fix might suggest something wrong way react works keys", "d": "10/2017"}, {"body": "unfortunately vague help diagnose problem need minimal reproducing case involve libraries", "d": "10/2017"}, {"body": "understand possible reproduce description hard thing happens one specific location code use lot array constructions code work fine suddenly one location started break everything standard cra application also nt show errors using keys try see findmake reproducing case without libraries", "d": "10/2017"}, {"body": "chance using babel plugins like inline elements transform try disabling", "d": "10/2017"}, {"body": "support custom attributes include events event still whitelisted react sure implement event react try work around using dom apis js constructor props super props thishandleend thishandleendbind componentdidmount thisnodeaddeventlistener endevent thishandleend componentwillunmount thisnodeaddeventlistener endevent thishandleend handleend render return help", "d": "10/2017"}, {"body": "looks like svganimationelementonend part svg animations level specification currently editor draft means currently part official specification process yet browser support also unclear think whitelisted events either part official specification andor wide browser support use case think manually listening event likely best solution", "d": "10/2017"}, {"body": "fair", "d": "10/2017"}, {"body": "react reactdomhydrate supposed notrerender everything mismatching parts correct understanding react supported render different things secret client performance reasons need fix cases markup differs react patch cases text content attempt patch attributes text content exception often different server due example timestamps see information", "d": "10/2017"}, {"body": "note okay extra rerender really need render something different client use approach render server first components need show something different hope helps", "d": "10/2017"}, {"body": "thanks new behaviour react makes sense confused documentation react attach event listeners preserving much existing dom possible best results try render content server client differences possible guess fixed maybe warning console improved currently logs something like could error log precisions fix cases markup differs find solution stop using use css media queries instead js media queries server client always hell", "d": "10/2017"}, {"body": "track better docs better warnings", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "think bug react tried vanilla dom apis", "d": "10/2017"}, {"body": "hi sorry think might confused body content", "d": "10/2017"}, {"body": "says error boundaries catch errors rendering lifecycle methods constructors whole tree showing error promise callback happened fire thing called error nt technically happen inside error boundaries wo nt catch error boundaries mechanism prevent react getting inconsistent state nt know render due error case example even despite error rendering unaffected example promise lead rerendering throws gets swallowed see case error boundary receives error working designed", "d": "10/2017"}, {"body": "thanks gaearon explaining doc little confusing would great give example application accidentally swallow error dont think child component swallowing error", "d": "10/2017"}, {"body": "referring block leave clause empty log error effectively swallowing react still report unhandled browser pass error boundary even though caught intentionally people accidentally swallowing errors like years got dozens different issues time", "d": "10/2017"}, {"body": "thanks gaearon removed catch block said even removed error boundary parent component even though child components throws error without swallowing render whole component tree rendered possibility developer notice time development testing correct wrong think swalling error means even error thrown child component rendered", "d": "10/2017"}, {"body": "sure asking yes expected error thrown rendering tree unmounted unless created error boundary swallowing error means using block ignoring object makes impossible developers figure went wrong saying react protects printing error console even caught", "d": "10/2017"}, {"body": "wrote implementation launch async actions browser based requestanimationframe support priorities frames break may useful", "d": "10/2017"}, {"body": "think start small fixes pr first experience contributed react want understand structure approaches development cc gaearon", "d": "10/2017"}, {"body": "maybe compose task list filesfunction need typings", "d": "10/2017"}, {"body": "script called counts number files flow coverage pushes branch perhaps could modify list files instead could make dashboard reads github api shows list remaining files kinda like isfiberreadyyetcom", "d": "10/2017"}, {"body": "think watch tonight", "d": "10/2017"}, {"body": "looked seems could figure need change maybe someone help would really like understand", "d": "10/2017"}, {"body": "tried", "d": "10/2017"}, {"body": "nt understand file gaearon maybe go messenger email speed discussion", "d": "10/2017"}, {"body": "script greps many files calls script writes branch proposing maybe change keep list files flow instead think", "d": "10/2017"}, {"body": "instead number files output list files understand correctly", "d": "10/2017"}, {"body": "thought could yes", "d": "10/2017"}, {"body": "basically wasted exclusive inclusive tables exclusive inclusive tables might make sense build something top performance observer api exposed browsers uses high precision timings emit via integration user timing api fact wwwillchen already created proof concept ago would great someone could take polish turn npm module wasted table complicated rather get figure async story fiber clear work async mode rather invest effort break later anyway", "d": "10/2017"}, {"body": "mean createreactapp", "d": "10/2017"}, {"body": "sure issue indeed use create react app officially supported", "d": "10/2017"}, {"body": "mean builtin webpack specific template kind thing hope understanding react examples gaearon would request reopen issue makes sense", "d": "10/2017"}, {"body": "cra uses webpack hood get typical webpack boilerplate want make sense", "d": "10/2017"}, {"body": "gaearon nice checked thankyou actually coming vue learning react nt knew said mention docs need change sure make sense", "d": "10/2017"}, {"body": "moreover separation concerns big issue jsx moreover days people going ahead moving css within jsx according good questions facebookreact arguably agree css js paradigm feature request templates make sense reactjs future separation concerns", "d": "10/2017"}, {"body": "think kind abstraction behind scenes converts equivalent jsx render function would ideal", "d": "10/2017"}, {"body": "hey danielruf jsx specification technically allow namespaced tags see identifier jsx specification reason nt work babel plugin throws jsxnamespacedname since supported react would recommend referring jsx repo issue tracker reading existing issues topic jsxnamespacedname needed worst case could fork implement version allows namespaced tags easy since ast node already hope helps", "d": "10/2017"}, {"body": "example using astexplorer shows namespaced tags parsed babel", "d": "10/2017"}, {"body": "hm usable solution far careless seems unmaintained find solutions", "d": "10/2017"}, {"body": "commitupdate element guaranteed happen children adjusted yes pretty important guarantee example closest siblings first last instead last first think correct order etc however best authoritative answer test see happens since things change subtle ways sometimes", "d": "10/2017"}, {"body": "sebmarkbage heads super quick rough test order described exactly right specific name lookup searching", "d": "10/2017"}, {"body": "hey rgbkrk even though blacklist behavior lenient react still warns using noncanonical names attributes recognizes example use instead still get warning canonical name attribute seeing consistent camelcased names still canonical names style properties warning issued like attribute names use property names still recommended use camelcased versions also worth noting would worked react well attributes consistent style properties also warnings devonly nt affect behavior production", "d": "10/2017"}, {"body": "agree aweary answer behavior style properties indeed new trying encourage consistency third party components feel obligated support kinds patterns time better ecosystem people argue conventions feel works best point wrap logic components read props passing add similarly named props natural convention js always forcesilence warnings overriding might provide kind apis opt warnings future disabling particular one want continue enforcing naming consistency provide wrapper around nonreact code always convert things part wrapper", "d": "10/2017"}, {"body": "perfect thanks response guide people using python bindings towards using proper let accidentally work passing", "d": "10/2017"}, {"body": "specific reason nt want make helper camelcase things", "d": "10/2017"}, {"body": "fine making helper curious ok leave let pass minispec state need use camelcase link back react docs blog", "d": "10/2017"}, {"body": "misunderstanding pass attributes nt mean guaranteed work correctly use wrong casing react pass apply special behavior might attribute property behavior visibly different less crossbrowser normalization", "d": "10/2017"}, {"body": "provide complete example since tests server rendering example also use server rendering", "d": "10/2017"}, {"body": "gaearon hi found point result issue another package imported cause even though called sorry pls close issue thanks", "d": "10/2017"}, {"body": "deprecated think using correctly intentionally want people wrap components factories definition time unnecessary set problems solving described release however wrap things factories import time fixed example want print warnings yes bit typing solves problems introduced extra wrapping difficult testing confusing type systems always wrap exports", "d": "10/2017"}, {"body": "thank much dan information gave perfectly fine mostly everything written first component factory factory accessing factorytype allowed retrieve react custom component class course everything react custom component class also done factory using factorytype sense component factory bit powerful component class also used directly without explicit need createelement second seems react team consider createfactory important see following react warning factorytype deprecated access class directly passing createfactory says considered legacy several issues wish lists read things like reactcreatefactory moved separate package etc third let simplify feature request follows please let createfactory including factorytype property remain main react module without labeling legacy deprected javascript const factorytag symbol isreactfactory prefer const factorytag isreactfactory function createfactory type const factory createelementbind null type like add please let createelement support factories directly even seems kind unnecessary canonical react programming may unnecessary cases like one remark stated javascript const fancybutton createfactory remark maybe helps bit tell concrete reason feature request think javascript ui world really missing kind ui library abstraction api example implement datepicker libraryagnostic way use later directly react component vue component whatever depending systemjs webpack configuration gt packagemodule aliasmapping btw something like custom elements onsen ui mean least virtual dom based ui libraries abstraction api could look like follows function createelement create virtual dom node signature react function iselement check whether something proper virtual dom node function mount mountrender virtual dom tree real dom element reactdomrender function definecomponent define actual component types discussed maybe functions forget concrete argument function definecomponent interessting question exactly function definecomponent return return class says underlying component system objectorientedclassbased return class end day concrete classes whatever implementation details correct answer returns component factory return value component factory virtual dom element represents concrete component important factorymeta could give access meta information component type like supported properties etc ideally returned component factory supported directly createelement counterpart underlying ui component system case counterpart actually existing component types represented component factory could also used directly jsx without inconvenience unwrapping things everything feels natural exactly reason feature request described rare cases concrete component type representation underlying ui library example concrete react component class really needed retrieved factorytype", "d": "10/2017"}, {"body": "ones called reactdom reactart please submit pr", "d": "10/2017"}, {"body": "created pr", "d": "10/2017"}, {"body": "take look weekend see tackle short term", "d": "10/2017"}, {"body": "great thanks pick particular test please comment filename thread someone else start working test", "d": "10/2017"}, {"body": "definitely interested contributing look weekend find opportunity refactor", "d": "10/2017"}, {"body": "interested well", "d": "10/2017"}, {"body": "published list tests first post let know ones like take assign", "d": "10/2017"}, {"body": "fine", "d": "10/2017"}, {"body": "sadpandabear got", "d": "10/2017"}, {"body": "work", "d": "10/2017"}, {"body": "take look", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "work", "d": "10/2017"}, {"body": "take", "d": "10/2017"}, {"body": "like give shot", "d": "10/2017"}, {"body": "take", "d": "10/2017"}, {"body": "like work", "d": "10/2017"}, {"body": "like work", "d": "10/2017"}, {"body": "would like take", "d": "10/2017"}, {"body": "like take synthetickeyboardeventtestjs thanks", "d": "10/2017"}, {"body": "let take", "d": "10/2017"}, {"body": "like work", "d": "10/2017"}, {"body": "take", "d": "10/2017"}, {"body": "taking", "d": "10/2017"}, {"body": "like work", "d": "10/2017"}, {"body": "like work reacttreetraversaltestjs", "d": "10/2017"}, {"body": "hi like work", "d": "10/2017"}, {"body": "take", "d": "10/2017"}, {"body": "like work", "d": "10/2017"}, {"body": "could take", "d": "10/2017"}, {"body": "like try", "d": "10/2017"}, {"body": "hello like try muscle", "d": "10/2017"}, {"body": "hello like try", "d": "10/2017"}, {"body": "take", "d": "10/2017"}, {"body": "getnodeforcharacteroffsettestjs", "d": "10/2017"}, {"body": "burnsbeaver one like start one test per person", "d": "10/2017"}, {"body": "getnodeforcharacter please deleted comment sorry confusion", "d": "10/2017"}, {"body": "still free", "d": "10/2017"}, {"body": "take fallbackcompisitionstate", "d": "10/2017"}, {"body": "try reactfiberhostcontexttestjs", "d": "10/2017"}, {"body": "update tests taken subscribe issue might free future somebody time finish work comment test becomes available try", "d": "10/2017"}, {"body": "people took want reiterate solution always clear cases might even possible reasonably test behavior without changes react source ever feel stuck comment try figure plan", "d": "10/2017"}, {"body": "adsonpleal sorry disappoint checked unfortunately accidentally already fixed realize first todo outdated test see already fixed", "d": "10/2017"}, {"body": "gaearon wow refactoring gon na take time hope finish everything weekend small doubt ok repace behavior function uses something like way check pr see remove know tests may rely specific stuff wondering effectively used instead", "d": "10/2017"}, {"body": "jquense context best long get working review see approach works", "d": "10/2017"}, {"body": "heads anyone else older version yarn installed trying run tests locally everything breaking upgrading yarn latest fixed issue tests running fine", "d": "10/2017"}, {"body": "sadpandabear module test file going check implementation soon", "d": "10/2017"}, {"body": "gaearon tests feel like dependent upon existence test suite make sense write tests replace existing functions test suite along lines setting inner html vs anything specific suppose getting little hung naming test suite edit unless mistaken svgs property sure second chunk tests file even necessary", "d": "10/2017"}, {"body": "silvestrijonathan think tests really trying verify works expected react modify tests use reactdom render content enough fine rename test feel would appropriate", "d": "10/2017"}, {"body": "couple hours playing test file strong suggestion newcomers like start tests clean env file editing existing file mocked internal functions functions broken took awhile realize things nt working intended", "d": "10/2017"}, {"body": "gaearon think need clarify including simulating events considered private api indirectly reaches internal apis nt let us properly test would work otherwise eg hamper ability test compiled packages without exposing hooks wo nt let us test new nonsynthetic event system", "d": "10/2017"}, {"body": "dphurley noticed working also working test suite uses wanted give heads pr sure already submitted pr nt might good idea base accepted", "d": "10/2017"}, {"body": "gaearon thanks advice thought utilizing tests go way yes probably rename tests case look pr next day", "d": "10/2017"}, {"body": "got first merged pr take look working anything related events suggest read discussions reviews common themes may valuable use discussions steer prs right direction", "d": "10/2017"}, {"body": "great convos referencethanks work got little busy think able get pr opened weekend tests", "d": "10/2017"}, {"body": "yet look test picked got busy things try raising pr another couple days buy time", "d": "10/2017"}, {"body": "sounds fine sure", "d": "10/2017"}, {"body": "spread operator language feature could removed react referring", "d": "10/2017"}, {"body": "salehhamadeh may thinking removed gaearon pointed spread operator entirely different thing hope clears things", "d": "10/2017"}, {"body": "figured happening code used jsxtransformer compiled spread attribute thanks helping figure", "d": "10/2017"}, {"body": "oh see yeah jsxtransformer might broken since also note unsupported two years using production please compile jsx babel ahead time", "d": "10/2017"}, {"body": "would like take issue need little direction start", "d": "10/2017"}, {"body": "run code see emitted warning find message source tweak message helpful help", "d": "10/2017"}, {"body": "yes thank", "d": "10/2017"}, {"body": "hi beginner think warning located line reactdomdevelopmentjs file correct wrong", "d": "10/2017"}, {"body": "specific file local nodemodules directory install reactdom via npm", "d": "10/2017"}, {"body": "yes search source code though find", "d": "10/2017"}, {"body": "proposed fix", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "looks similar", "d": "10/2017"}, {"body": "nt think moved files though", "d": "10/2017"}, {"body": "bumped", "d": "10/2017"}, {"body": "ok get works real map keeps things object still works even though directly uses nevertheless still fragile", "d": "10/2017"}, {"body": "worked around", "d": "10/2017"}, {"body": "cc bvaughn would say fine leaving actually something would require bump two modules afaik access around public api maybe hard keep better compatibility", "d": "10/2017"}, {"body": "thanks bringing attention bdwain agree gaearon probably okay leave peer dependency unless made changes require bumping worry may cause problem future though since tests release process nt step past versions peer deps verify still work eg test latest test renderer latest react would require release manager knowremember actively consider peer dep constraints implications bit hard nt context changes gone certain release", "d": "10/2017"}, {"body": "see react test renderer rely private apis react public api nonmajor bump fine right", "d": "10/2017"}, {"body": "renderers rely private apis package scope limited add flow types think try safely keep compatible", "d": "10/2017"}, {"body": "sweet thanks", "d": "10/2017"}, {"body": "separate package way react chosen reactproptypes deprecated think works back", "d": "10/2017"}, {"body": "better good version compatibility includes newest functionality know maybe easylet user decide one use", "d": "10/2017"}, {"body": "dependency updated use old version react course reactnative ca nt use latest version painful", "d": "10/2017"}, {"body": "run codemod convert old pattern new one", "d": "10/2017"}, {"body": "please run codemod convert code hope links help", "d": "10/2017"}, {"body": "edited title potential actionable issue", "d": "10/2017"}, {"body": "oh wait wrong repo", "d": "10/2017"}, {"body": "filed", "d": "10/2017"}, {"body": "hey fixed known issue fix next release however thank great write", "d": "10/2017"}, {"body": "fixed master duplicate", "d": "10/2017"}, {"body": "possible set transformorigin another error attribute valid course set dom makes spinner look correct see another error setting works chrome however seem like valid svg attribute first place find specification mdn either probably fiddle work safari firefox however exist style property name still work safari work chrome firefox part css transforms level spec per mdn probably use instead", "d": "10/2017"}, {"body": "expected please see also", "d": "10/2017"}, {"body": "ahh thanks gaearon figured must somewhat design makes sense similar purecomponent works inline functions assumed specific react since issue manifested upgrade thanks link previous issue caveats super helpful", "d": "10/2017"}, {"body": "hi like work im beginner would appreciate pointers start", "d": "10/2017"}, {"body": "run repo root start build process relevant part probably see gets populated content npm packages want make sure respect entry package skip filesfolders whitelist way something missing package copied check change works example change would exist change folder would copied whitelist", "d": "10/2017"}, {"body": "thanks really helpful solution thinking involves parsing packagejson file packages comparing filesdirectories copied parsed array right track", "d": "10/2017"}, {"body": "sounds right", "d": "10/2017"}, {"body": "sorry nt mean hijack issue apravink playing possible fix pushed repo happy discuss", "d": "10/2017"}, {"body": "nt chance work working solution please go ahead", "d": "10/2017"}, {"body": "thanks informing apravink pick please feel free share ideas suggestions", "d": "10/2017"}, {"body": "please see discussion behavior expected documented breaking change although prominently future", "d": "10/2017"}, {"body": "gaearon mistake nt see thanks information", "d": "10/2017"}, {"body": "worries bit confusing agree", "d": "10/2017"}, {"body": "react back production us performance greatly improved thanks great work", "d": "10/2017"}, {"body": "glad hear", "d": "10/2017"}, {"body": "enough information unfortunately think react anything wrong encourage investigate webpack side also likely problem react file first place", "d": "10/2017"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "10/2017"}, {"body": "done", "d": "10/2017"}, {"body": "yep take look blog post", "d": "10/2017"}, {"body": "encountered bug looks like triggers except az", "d": "10/2017"}, {"body": "encountered bug looks like triggers except az yup autocompletionautocorrect triggered alphanumeric chars", "d": "10/2017"}, {"body": "look antform", "d": "10/2017"}, {"body": "thanks looks nice design form replaces reduxform design use validator copyright license clear", "d": "10/2017"}, {"body": "bug tracker react please use community resources library discussion", "d": "10/2017"}, {"body": "webmobiles refer himhe big introduce increase size js antd library containing reduxform license", "d": "10/2017"}, {"body": "confirmed offending code duplicate fixed case thank filing providing reproduction case", "d": "10/2017"}, {"body": "awesome thx", "d": "10/2017"}, {"body": "happy send pr gets green light", "d": "10/2017"}, {"body": "hey pirate seeing key warning running example provided chance returning fragment using array like need add key root please provide full example reproducing warning investigate thanks", "d": "10/2017"}, {"body": "nope returning array rendered conditionally part larger component working providing full example createreactapp give couple hours", "d": "10/2017"}, {"body": "aweary repo minimum amount code required reproduce open see error error disappears removed suspect issue lies babel plugin code want close issue reopen babel issue tracker", "d": "10/2017"}, {"body": "thanks clarifying pirate nt using inlineelements transform development using applying production build check information thanks", "d": "10/2017"}, {"body": "happy update docs open issue instead", "d": "10/2017"}, {"body": "yes please file website issues repo", "d": "10/2017"}, {"body": "ended new issue another repo", "d": "10/2017"}, {"body": "wanting try generate file distribution well consumers get flow typechecking userland renderers run fixture file release fails know breaking api change", "d": "10/2017"}, {"body": "would nice fixture could built top noop renderer something", "d": "10/2017"}, {"body": "use maintained renderer tests could look caveat renderer internal dependencies", "d": "10/2017"}, {"body": "understand asked sorry benchmarked interactions app evidence makes faster use places otherwise sorry helpful sure else looking maybe clarify example could give better answer", "d": "10/2017"}, {"body": "test utils included react dom import like", "d": "10/2017"}, {"body": "word maintainers curious opinion thanks", "d": "10/2017"}, {"body": "cc acdlite sebmarkbage", "d": "10/2017"}, {"body": "progress update bug running using react waypoint trouble replicating reliably", "d": "10/2017"}, {"body": "wardenunleashed sure issue pr introduced issue released public releases", "d": "10/2017"}, {"body": "anything maximum update depth exceeded error think might give brief summary physical symptoms see encountering problem component essentially tries setstate enters leaves viewport onleave event fires completely freeze entire browser become unresponsive starting utilize significant amount memory hits upper limit events error logged duration freeze logging error varies seemingly never seconds figured might related due infiniteloop nature problem fact nt experienced problem previously", "d": "10/2017"}, {"body": "internal bug fixed wardenunleashed infinite loop bugs could caused number things could open separate issue details ideally isolated repro case", "d": "10/2017"}, {"body": "closing duplicate yes expected", "d": "10/2017"}, {"body": "documentation source code reactjsorg lives different repository please open new issue repository thanks", "d": "10/2017"}, {"body": "broken mean nt see page please disable fair adblocker known cause issues new website fixing soon case please file issues website repository instead", "d": "10/2017"}, {"body": "verified page displays correctly probably ad blocker breaking", "d": "10/2017"}, {"body": "documentation source code reactjsorg lives different repository please open new issue repository thanks", "d": "10/2017"}, {"body": "awesome thanks", "d": "10/2017"}, {"body": "believe already issue", "d": "10/2017"}, {"body": "code alone reproduce jest says fail testspecjs test suite failed run", "d": "10/2017"}, {"body": "modified code js var react require react var reacttestrenderer require reacttestrenderer things gt var inst reacttestrenderercreate reactcreateelement null qwe expect insttojson tomatchsnapshot ran fine guess something wrong environment actually maybe bad something like make sure using work happy reopen provide reproducing example reproduce bug", "d": "10/2017"}, {"body": "provide reproducing example repo fresh clone changed test file code ran npm install npm test still got thing log nt generate packagelock files default see versions got installed gaearon please reopen", "d": "10/2017"}, {"body": "eddiemonge verisons using also tried repro yarn npm unable trigger error see output gaearon noted", "d": "10/2017"}, {"body": "hmm ok troubleshoot side", "d": "10/2017"}, {"body": "im getting error typeerror read property reactcurrentowner undefined add import renderer reacttestrenderer test file dependencies follows name testapp version private true dependencies react reactdom reacttapeventplugin reacttestrenderer devdependencies reactscripts scripts start reactscripts start build reactscripts build test reactscripts test envjsdom eject reactscripts eject flow flow name testapp version private true dependencies react reactdom reacttapeventplugin reacttestrenderer devdependencies reactscripts scripts start reactscripts start build reactscripts build test reactscripts test envjsdom eject reactscripts eject flow flow please find screen cast description eddiemonge thank help naveen", "d": "10/2017"}, {"body": "hey eddiemonge changed version react reacttestrenderer npm install work", "d": "10/2017"}, {"body": "older version reacttest installed globally somehow removing forcing cache clean reinstalling locally fixed problem think something trying use global version", "d": "10/2017"}, {"body": "eddiemonge thank discovering similar issue removing global react package allowed tests run reference issue saw", "d": "10/2017"}, {"body": "naveendk ran issue latest disttag version requires peerdependency kept running issue looks like bumped cleared everything ca nt upgrade yet need older version find older compatible version registry", "d": "10/2017"}, {"body": "peer dependency disregard install", "d": "10/2017"}, {"body": "make sure version version", "d": "10/2017"}, {"body": "supported put functions react state nothing wrong pattern although used often example dynamic loading code common store component react state check looking relevant relevant api lets set state based previous state cause functions part state although supported well hope explains", "d": "10/2017"}, {"body": "fixed release fix soon", "d": "10/2017"}, {"body": "new method unrelated also nt need jsdom test renderer", "d": "10/2017"}, {"body": "ps printed testrenderer got reacttestinstance javasrciprt consolelog testrenderer reacttestinstance component reactcompositecomponentwrapper currentelement typeof symbol reactelement type object key null ref null props object owner null store rootnodeid compositetype instance toplevelwrapper props object context refs updater object reactinternalinstance circular state null hostparent null hostcontainerinfo createnodemock function createnodemock updatebatchnumber null pendingelement null pendingstatequeue null pendingreplacestate false pendingforceupdate false renderednodetype renderedcomponent reacttestcomponent currentelement object renderedchildren object toplevelwrapper circular hostcontainerinfo object mountindex mountimage null debugid context mountorder toplevelwrapper null pendingcallbacks null calledcomponentwillunmount false warnedaboutrefsinrender false mountindex mountimage null debugid", "d": "10/2017"}, {"body": "documentation react", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "test renderer new nt properly documented basically except nt methods words nt support traversal", "d": "10/2017"}, {"body": "nt intercepting logging warnings errors enough", "d": "10/2017"}, {"body": "syranide like monkey patching consoleerror looking checksum errors ideally would properly supported api react one idea could callback call believe callback already return error object perhaps checksum issues could exposed way well", "d": "10/2017"}, {"body": "diffing attributes innerhtml longer happens production build way issuing possible mismatches even text content run normalization stuff dev know whether actually mismatch theory could issue hook particular mismatches actually currently track production like tag mismatches would limited since many mismatches nt actually end different dom structures probably run dev build work fully callback hydrate would nt work want able asynchronously lazily hydrate parts tree time particular time done matching monkey patching seems like way whatever hooks expose would end looking similar talked alternative way intercept warnings generic way maybe way", "d": "10/2017"}, {"body": "thanks response sebmarkbage react today get diff production know know mismatch occurred run local dev build investigate main concern losing ability know error occurred less concerned getting diff production try monkey patching nt know best solution advocate going forward general curious apps handle production checksum issues concern applications react isolates checksum issues tree perhaps less issue", "d": "10/2017"}, {"body": "possible attach data attribute eg datareactmismatch better name altered dom node root one would enough application code check reporting purpose", "d": "10/2017"}, {"body": "sebmarkbage ping", "d": "10/2017"}, {"body": "sorry saying new strategy react nt even know something mismatch nt actively patch everything everything compared general curious apps handle production react lot use production yet early adopter think nt handle production rely showing point development lot needs systemic handling building frameworks around ensures common patterns nt cause", "d": "10/2017"}, {"body": "also noticed duration marks consistent expected duration steps computed subtracting react related marks", "d": "10/2017"}, {"body": "could please file nt track doc issues main repo anymore", "d": "10/2017"}, {"body": "examples images size output react", "d": "10/2017"}, {"body": "general recommendation add custom tags without dash dash way define custom element idea otherwise safe way browsers add new tags spec fact might already broken raise issue asking following recommendation likely existed recommendation well known planning changing like know concerned thing whether break rationale", "d": "10/2017"}, {"body": "see would need changed like point react raise warnings camelcased attributes custom element seems reasonable nt clear reading", "d": "10/2017"}, {"body": "resolved issue changing custom elements accidentally thought attribute deprecated need dash convention", "d": "10/2017"}, {"body": "see sneak time next day", "d": "10/2017"}, {"body": "need somebody else confirming reproduces reproduce", "d": "10/2017"}, {"body": "verified provided example using render windows render using example", "d": "10/2017"}, {"body": "idea going", "d": "10/2017"}, {"body": "matches logic find probably one", "d": "10/2017"}, {"body": "aweary take", "d": "10/2017"}, {"body": "probably one gaearon looks like issue focusing blurring causes placeholder show behavior saw first time looking", "d": "10/2017"}, {"body": "check fixes", "d": "10/2017"}, {"body": "gaearon stepping found call site verified reason set let build locally verify fix", "d": "10/2017"}, {"body": "react currently use raf although future plan use polyfill requestidlecallback true animation things think would good simply wrap thiscanrender block requestanimationframe sounds good forget schedule another frame already scheduled one", "d": "10/2017"}, {"body": "found reason use ad blocking extension problem program", "d": "10/2017"}, {"body": "documentation source code reactjsorg lives different repository please open new issue repository real issue thanks", "d": "10/2017"}, {"body": "also wanted say awesome work react really excited make use portals bit ahead", "d": "10/2017"}, {"body": "instead reading put initially would match server trigger rerender hydration produce warning", "d": "10/2017"}, {"body": "ah course get following advice avoiding thanks gaearon working pr", "d": "10/2017"}, {"body": "please fix docs thanks think misunderstood documenting close issue track docs nt find time send pr please refile issue thanks", "d": "10/2017"}, {"body": "heavy lifting reactdom injects host component class react react handles traversal diffing calls various update methods reactdomfibercomponent work moving host node dom node new markup", "d": "10/2017"}, {"body": "jquense exactly looking thank", "d": "10/2017"}, {"body": "would note realistically big react apps rarely dom manipulation ends expensive mostly reconciliation react offers strategies avoid like purecomponent encourages use virtualization large lists", "d": "10/2017"}, {"body": "gaearon thanks makes sense question trying answer small component vastly larger component tree needs updated literally react update dom question arose reading reconciliation wondered say leaf components require updating react replace toplevel root node eg w updated root element allow browser rebuild render tree accordingly react perform individual mutations leaf elements directly ask imagine scenarios either approach could present performance bottleneck excuse asking wrong questions well documented somewhere far nt come across anything answer question though", "d": "10/2017"}, {"body": "react updates leaf nodes case please see", "d": "10/2017"}, {"body": "love create pr", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "see would related react seems like question css think belongs issue tracker sure reactspecific please create vanilla htmlcss demo also reproduce issue", "d": "10/2017"}, {"body": "dark rectangle render component think react related", "d": "10/2017"}, {"body": "nope issues vanilla js also sorry", "d": "10/2017"}, {"body": "want send pr", "d": "10/2017"}, {"body": "sure", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "change charset renders camelcased version bug html case insensitive completely valid output browser understand fine agree little bit surprising tracking real problem", "d": "10/2017"}, {"body": "bug html case insensitive charset completely valid output hyphenated attributes treated", "d": "10/2017"}, {"body": "think emit autofocus attribute looks like key drawback autofocus supported ios safari android browser drawbacks missing hardmechanical would add autofocus via js", "d": "10/2017"}, {"body": "always js pretty easy seems pretty bad semantics take scripts load actually gets focused user focus things meantime suddenly becomes focused since fiber asynchronously rehydrate might also want partial hydration might make even worse already weird artifacts might get focused switch gets focused could potentially js normal one fails sure detect could add lot code", "d": "10/2017"}, {"body": "sure right tradeoff given browser support issue", "d": "10/2017"}, {"body": "take scripts load actually gets focused think strong case emitting attribute sounds like ca nt guarantee correctness even check user might already flow scrolled page nt want page jump someone start typing another input box midway key stroke sorry rehash argument would make someone filed issue", "d": "10/2017"}, {"body": "emitting attribute sounds like right way go want autofocus work browsers nt support seems sane add script end body guess causes issues html page large guess could also check activeelement none body focus might overkill", "d": "10/2017"}, {"body": "cc", "d": "10/2017"}, {"body": "initial reason emitting autofocusattribute browser implementations widely inconsistent treated support focus page load etc imho means anyone serious autofocus apply manually via js anyway however vaguely remember mobile browsers nt really listen js focus honor autofocus extent mess merit emitting attribute feel strongly focus manually given tools", "d": "10/2017"}, {"body": "chatted trueadm think sounds like plausible way forward react emit ssr html ensure call js polyfill hydrated elements keep blacklisting clientcreated elements use js polyfill react remove js polyfill completely warn one element added commit since browser inconsistencies occur make sense", "d": "10/2017"}, {"body": "warn one autofocus element added commit since browser inconsistencies occur browsers least long ago inconsistent interpret autofocus attribute well know eg ff would honor pageload totally ignore dynamically inserted nt surveyed long time still think approach correct", "d": "10/2017"}, {"body": "basic investigation looks like modern browsers except safari respect page load probably made sense html documents apps would expect respected dynamically inserted elements since basically page transitions much first page load spas probably keep polyfill", "d": "10/2017"}, {"body": "gets weirder chrome respects dynamically added elements one even creating input adding document removing next tick enough disable autofocusing elements added future chrome firefox care dynamically added elements safari always respects", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "please provide complete project reproducing", "d": "10/2017"}, {"body": "since use typescript guess would need configure something import commonjs modules", "d": "10/2017"}, {"body": "hi dan npm jest able replicate error", "d": "10/2017"}, {"body": "typescript project please provide javascript project reproducing instead typescript experts bug react reproducible calling javascript fix related typescript configured encourage reach typescript community help instead hunch default syntax work commonjs react modules maybe named import syntax work read section blog post happy reopen demonstrate problem without typescript cheers", "d": "10/2017"}, {"body": "sounds good thanks", "d": "10/2017"}, {"body": "actually think bug caused running mounting document ssr fixture seems like render right hydration go last could also work around delaying rendering close hear people confusing maybe make message better", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "sounds like duplicate", "d": "10/2017"}, {"body": "thanks dan seen issue jsfiddle example seemed like different cause", "d": "10/2017"}, {"body": "let keep open suspicion might related could wrong", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "never supported access anything internal name nt documented public api reserve right break internal apis versions including patch releases semantic versioning covers public api currently read something context declare create helper utility find cumbersome js function addintlcontext mycomponent mycomponentcontexttypes componentcontexttypes intl proptypesobject usage class button extends reactcomponent addintlcontext button possible lift restriction future part larger context api redesign", "d": "10/2017"}, {"body": "heavily edited original question since poor choice object naming code led false assumptions specifically object named props thought might something gets especially frozen rather fixed see question updating object instance", "d": "10/2017"}, {"body": "attempts update object commitupdate result error since object frozen object nt freeze instances must something else updating frozen freeze react elements props nt ones need mutate see question updating object instance still sure understand instance object provide free anything like including mutating adding removing properties using nested objects etc", "d": "10/2017"}, {"body": "gaearon sorry delay took closer look get error dev mode production mode fine specifically given reconciler attempt modify get error happen modifying ie scalar", "d": "10/2017"}, {"body": "react nt limit anything instances error getting message stack etc provide reproducing example", "d": "10/2017"}, {"body": "hmmm thought maybe rebuild reactreconciler package install might fix getting oo", "d": "10/2017"}, {"body": "ah seems working old version api changed", "d": "10/2017"}, {"body": "yeah put stuff object", "d": "10/2017"}, {"body": "rather flow types reactfiberreconciler help", "d": "10/2017"}, {"body": "got working see error sure helpful create new repo minimal setup give debug info objectisfrozen instanceprops true dev mode false production mode props happens name object instance", "d": "10/2017"}, {"body": "ahhh mistake assigning props came createinstance directly without copying new empty object course props frozen", "d": "10/2017"}, {"body": "sake clarity case anyone else hits issue everything gaearon said correct react freeze anything instance rather freezes copy props passed instance least dev mode makes perfect sense perspective props definition immutable nt prevent making unfrozen copy storing mutable object instance", "d": "10/2017"}, {"body": "ah makes sense nt thought yes nt want modify", "d": "10/2017"}, {"body": "btw totally right nt need keep around yet least hehe reason compare old new prepareupdate commitupdate note using prepareupdatepayloadcommitupdate instead commitupdate eg always sending updatesignal prepareupdate guidelines approach better", "d": "10/2017"}, {"body": "nt need update case optimize skipping signal", "d": "10/2017"}, {"body": "correct thinking prepareupdate might good place deal async props well example let say component loads data net data loaded something useful render way solve react would usually give component local state load even wrapped hoc reuse across components idea local state pipeline custom renderer thinking could instead handled mapping object keys unloaded data omitted data ultimately loaded included although wo nt trigger new load finished use case single global state constantly updated anyway according frame tick continually called check loaded data terms implementation details mapping function could come instance checks sort cache loaded data access using lenses could use generic function property list comes instance thinking loud thoughts", "d": "10/2017"}, {"body": "nt recommend implementing things like custom renderer expect work well custom renderers meant strictly deciding render things platform primitives data loading concerns typically solved application level renderers low level completely unaware components", "d": "10/2017"}, {"body": "came reactuniversalcomponent", "d": "10/2017"}, {"body": "hi question nt seem reactspecific suggest ask stack overflow similar website generic javascript tag", "d": "10/2017"}, {"body": "hi sory post bad ask respon source take orb react folder demo help", "d": "10/2017"}, {"body": "implemented", "d": "10/2017"}, {"body": "please provide full reproducing example", "d": "10/2017"}, {"body": "syranide right bug component sorry confusion js import react react import proptypes proptypes import navlink reactrouterdom import isfunction lodashisfunction import routemap routes export default class loadablenavlink extends reactcomponent static proptypes children proptypesnode proptypesstring params proptypesobject constructor props super props thisroute routemap propsto method missing componentwillreceiveprops nextprops thisroute routemap nextpropsto maybepreloadcomponent gt thisroute return render const children params props thisprops return", "d": "10/2017"}, {"body": "briancappello great curious behavior still change unrelated ie broke component time upgrading", "d": "10/2017"}, {"body": "syranide yea must broken upgraded noticed afterwards mistakenly attributing fault version change downgraded indeed component still broken without call still works", "d": "10/2017"}, {"body": "scroll bug", "d": "10/2017"}, {"body": "serious site built users pleasure", "d": "10/2017"}, {"body": "docs site lives standalone repo believe issue belongs", "d": "10/2017"}, {"body": "yes please file website issues new repository", "d": "10/2017"}, {"body": "hey tkrotoff known limitation number inputs see react emit change event value input actually changed enter invalid number number input get value dom value change event wo nt dispatched since react detect change hope helps", "d": "10/2017"}, {"body": "gaearon sure would happy take", "d": "10/2017"}, {"body": "actually gaearon want full check warnings better raising individual issues", "d": "10/2017"}, {"body": "yea would amazing nt think necessarily always deduped might easier discusss specific cases convert rest", "d": "10/2017"}, {"body": "pointers go identifying specific cases nt need deduped gaearon", "d": "10/2017"}, {"body": "nt clear guideline think useful one warning happen render likely happen spam console deduped whereas warning happen user calls specific api api typically called outside render phase might make sense dedupe", "d": "10/2017"}, {"body": "found versions update mounted mounting component warning first reactfiberschedulerjs imported reactfiberreconcilerjs warning update mounted mounting component usually means called gt setstate replacestate forceupdate unmounted component noop please check code app component second one reactnoopupdatequeuejs imported reactbaseclassesjs warning setstate update mounted mounting component usually means gt called setstate unmounted component noop please check code app component gaearon doubts repetition intentional serve different purposes dedupe warning reactfiberschedulerjs alone thanks advance", "d": "10/2017"}, {"body": "one likely almost never happen happens somebody creates instance react component manually eg tries call let dedupe think means unlikely case fire two warnings rather one okay", "d": "10/2017"}, {"body": "totally warnings react codebase checked came list warnings deduped fixed ones felt duplicated rerender per suggestion given pr still list warnings unsure need deduplication share list wish take look apologies delay giving pr gaearon", "d": "10/2017"}, {"body": "hey anushreesubramani thanks report ran snippet provided seems like stopping maximum update depth error verify jsfiddle working expected differ code running get infinite loop", "d": "10/2017"}, {"body": "jsfiddle might work differently worth checking locally", "d": "10/2017"}, {"body": "gaearon tested locally html file saw results chrome production development builds html class app extends reactcomponent constructor super thisstate value null lt p gt render thissetstate value test return reactcreateelement div null reactdomrender reactcreateelement app null documentgetelementbyid container", "d": "10/2017"}, {"body": "could also specific cra environment", "d": "10/2017"}, {"body": "aweary gaearon fiddle works fine well also tested html fine well happening cra generated app guess dan guess right could specific cra open issue cra instead", "d": "10/2017"}, {"body": "yes please although let keep one open posterity", "d": "10/2017"}, {"body": "opened issue cra", "d": "10/2017"}, {"body": "nhunzaker really resolve thought problem cdn paths using", "d": "10/2017"}, {"body": "sorry got wrong issue", "d": "10/2017"}, {"body": "fixed still broken alphas pretty borked anyway might need blacklist somehow", "d": "10/2017"}, {"body": "problem added little work around seemed good blacklist", "d": "10/2017"}, {"body": "sophiebits mentioned maybe probably ok support get confirmation would nonissue", "d": "10/2017"}, {"body": "yo would awesome support", "d": "10/2017"}, {"body": "fwiw works nt range inputs range input test case nt test arrow keys want add disclaimer case someone comes page public site gets confused blames react", "d": "10/2017"}, {"body": "nhunzaker unsupported browsers maybe add browser detection logic render message like browser officially supported react discover issue occurs browser likely expected behavior reuse detection logic browserspecific quirks like", "d": "10/2017"}, {"body": "could use something like bowser browser detection", "d": "10/2017"}, {"body": "might worth pulling like modernizer attaching prop something fn running test going crazy obvious cases like whatever clear cases", "d": "10/2017"}, {"body": "wow odd", "d": "10/2017"}, {"body": "new react done poc looking contribute something community fine try hand mean something open community", "d": "10/2017"}, {"body": "thank filing issue however documentation source code reactjsorg lives different repository please open new issue repository sorry inconvenience", "d": "10/2017"}, {"body": "ps gursimarsinghchawla would love contribute check issues tagged good first issue new repo", "d": "10/2017"}, {"body": "filed", "d": "10/2017"}, {"body": "thank filing issue however documentation source code reactjsorg lives different repository please open new issue repository sorry inconvenience", "d": "10/2017"}, {"body": "expected please see worked sense react removed whole markup rendered client produces jarring experience always warned please fix differences server client render need render different things server client mounting illustrated approach", "d": "10/2017"}, {"body": "gaearon thanks confirming feature react would mind tell detail updated react question example js import react react const isbrowser typeof document object export default function app return style state got updated dom however content inside div browser server got updated mean children prop updated rely rerender need something updated according browser environment", "d": "10/2017"}, {"body": "mean children prop updated current strategy react patches text content mess reconciliation often happens due eg timestamps harder anything meaningful difference eg attributes without making performance worse everyone rely rerender need something updated according browser environment preferably yes schedule extra render really need different although sebmarkbage adding way intentionally opt inconsistencies text far context read decision likely document broadly eventually action item", "d": "10/2017"}, {"body": "gaearon thanks lot dan answer useful could", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives repository nt mind please open new issue repository discuss sorry inconvenience", "d": "10/2017"}, {"body": "send pr", "d": "10/2017"}, {"body": "pr would great since reimplementation entirely plausible things changed rare bumped neither sound like would lines fixes though see point fixing back new behavior line originally intended usage", "d": "10/2017"}, {"body": "fyi documentation source code reactjsorg lives different repository would willing open new issue repository iinsta sorry inconvenience still welcome pr", "d": "10/2017"}, {"body": "cztomsik react dom immutable manipulation happen generating new structure", "d": "10/2017"}, {"body": "please look currently implemented internally uses undocumented react classes hook inside transaction see changed apply updates actual threejs mutable api possible react", "d": "10/2017"}, {"body": "solution progress give firstclass access creating renderer", "d": "10/2017"}, {"body": "yes solvable new reconciler api unfortunately none existing code work good news real api rather bunch hacks make consumable soon track exposing", "d": "10/2017"}, {"body": "sure understand trying seems like calling inside bad idea obvious error makes pretty clear even smaller reproduction", "d": "10/2017"}, {"body": "yes problem example called rendering start rendering call starts rendering call etc results infinite loop component takes care keeping state calling prop render data need component try thing render gives js import react react import render reactdom import fetch fetch class app extends reactcomponent renderchildren data gt jsonstringify data render return render documentgetelementbyid root working sandbox", "d": "10/2017"}, {"body": "thanks tombonnike gaearon quick answers actually little bit different trying achieve saw idea fetch data save use data component would need answers make sense put indeed", "d": "10/2017"}, {"body": "idea fetch data save use data component would need solution case would modify render callback pass data components need know bit counterintuitive since went pattern need bring data component tell render", "d": "10/2017"}, {"body": "thanks advice exactly exploring different patterns see another approach could interesting anyhow thanks time", "d": "10/2017"}, {"body": "one way think every piece data one component holds state need pick either fetch use gives via render prop app case need different fetch api would call data loads instead trying keep state", "d": "10/2017"}, {"body": "leaning toward second option see achieve first place wanted lift state using share data probably mistake would lead strange pattern sibling fetching data lifting inside parent state siblings could exploit data second thought nt seem natural another note also access inside react native component tied dom thinking component maybe exactly want", "d": "10/2017"}, {"body": "probably mistake would lead strange pattern sibling fetch fetching data lifting inside parent state siblings could exploit data second thought nt seem natural think actually ok think fetch like input mistake trying set state render phase instead could call data ajax callback fetch render app would change handler sets state like", "d": "10/2017"}, {"body": "also access handlechangeonchange inside react native component tied dom sure mean suggest fetch accept onchange custom prop call data fetched", "d": "10/2017"}, {"body": "example second approach referring close originally without state duplication updatestateduringrender issue hope helps", "d": "10/2017"}, {"body": "okay got thought referring method used nt get custom prop exactly trying achieve naively inside render phase plus like approach similar able incrementally adopt without breaking anything definitely solved problem thank", "d": "10/2017"}, {"body": "happy help", "d": "10/2017"}, {"body": "basically grab executedispatchesinorder order wrap certain piece code fire afterward describe detail", "d": "10/2017"}, {"body": "sure use immutablejs cursor library handle everything single state atom gets passed root element event handlers may something like bit pseudocodeish custom shouldcomponentupdate whatnot cursor actually represents something like wrap something like javascript const executedispatchesinorder require reactdomlibeventpluginutils executedispatchesinorder require reactdomlibeventpluginutils executedispatchesinorder function previousroot deref rootcursor executedispatchesinorderapply arguments things behave expected asynchronous changes keypaths leading root cursor trigger rerenders appropriately immutablejs comparison invalidate expected components aka everything along parentpath leaf change edit clarified things example since kind relied knowledge internal workings", "d": "10/2017"}, {"body": "would expect wrapping browser event handlers still let", "d": "10/2017"}, {"body": "tried indeed work trying recall whether specific event diverged required technique back wrote years ago react top head happen know either different earlier version react whether certain events nt matched native call addeventlistener perhaps event react generates synthetically something words switch wrapping addeventlistener events wo nt see go happy consider closed", "d": "10/2017"}, {"body": "tolmasky events built synthetically based events specifically almost often synthetic composed events like etc calculated using events pretty complicated lots going events depend key mouse events along events correspond browser events listen could also potentially listen dependent event synthetic events example listen events", "d": "10/2017"}, {"body": "synthetic events still always happen inside browser events call stack right even names nt match", "d": "10/2017"}, {"body": "gaearon yes synthetic events extracted dispatched inside event listener registered whatever dependent event triggered", "d": "10/2017"}, {"body": "idea possibly move event synthetic path use browser events directly point point required wrap events wonder better way solve though strategy calling outside batch example bypasses optimizations mind asynchronous rendering idea use event wrappers hint priority level default update associated flush synchronously shortest path textbox issued event case controlled components wonder solve use case integrated way still lets react normal work ultimate goal design avoid coupling logic function react", "d": "10/2017"}, {"body": "see", "d": "10/2017"}, {"body": "code use check props state equal tuned works basic types js", "d": "10/2017"}, {"body": "issue relocated", "d": "10/2017"}, {"body": "current version componentwillunmount called mounting next component exactly right called next component created mounted ca nt revert old way incompatible want take react future want enable asynchronous rendering future versions impossible nt create new instance early made change exactly clear trying perhaps moving logic help give assistance need know use case detail create small fiddle demonstrates trying", "d": "10/2017"}, {"body": "tried create search user query appear url user tries search user searches xyz call new route previous url check code due async behaviour calling rendering component cases", "d": "10/2017"}, {"body": "ajanuragjain hope nt mind chiming another case change ordering caused existing code function expected anymore application maintain array acts like stack application state expect parent components push data onto children using example displaying following components resulting application state would resemble note using instead would lead reverse ordering child components would call first change route would cause new displayed components become case react popping item stack using would remove one item list causing temporarily push names onto stack resulting correct react called first resulting temporary two pop operations called resulting undesired basically looking tools allow make consecutive application state modifications parent child order setup b child parent order teardown c order torn components first newly setup components later alternative solutions possible issue would great know case somehow fits react general vision", "d": "10/2017"}, {"body": "sounds like expected behavior react nt guarantee result correct mismatch inserts extra nodes nt patch attributes would pretty expensive negate performance benefits expected fix mismatches development app fast production plan document prominently future read", "d": "10/2017"}, {"body": "nt know issue exists prior react", "d": "10/2017"}, {"body": "browsers normalize newlines based best rendering ssr react normalize newlines rendering dom perhaps measurable impact performance although kind doubt would preferable perform less strict runtime check text comparison fails alternatively react could also emit warning encounters rendering text seems strict cc gaearon", "d": "10/2017"}, {"body": "also fairly certain similar issues special unicode codepoints dom may discard browsers could encode differently edit one dom discard browsers", "d": "10/2017"}, {"body": "tried text search reactfiberchild ca nt seem find would love make first contribution making warnings clear anyone point right direction full text article save others time finding ran error took us days track library may find console kept telling us reactfiberchild could render element ref undefined tore hair puzzling could happen eventually dug react code saw error generated react like undefined ref attributes null fine took us discover elements created core external library set ref undefined forked fixed everything rendered beautifully", "d": "10/2017"}, {"body": "post repro js fiddle read code mess thanks", "d": "10/2017"}, {"body": "jquense looks like someone added fiddle three year old version", "d": "10/2017"}, {"body": "thanks cc aweary perhaps reset pr could also cover saying pain tho instinct would recommend controlling select case", "d": "10/2017"}, {"body": "jquense looks like issue whitespace option value property option element strips whitespace fail match due leading trailing whitespace example without whitespace see matches native dom behavior solution would separate could trim comparison try use something like nt trim whitespace sure yet best solution would", "d": "10/2017"}, {"body": "aweary replication given space option value remains broken sure able repair guy silly overcomplicated code way one gave subject form fix", "d": "10/2017"}, {"body": "hope consider testing bug reporter actual test case", "d": "10/2017"}, {"body": "please post test case jsfiddle one nt cover bug thanks", "d": "10/2017"}, {"body": "already said bug four years old already written three productions cut paste want", "d": "10/2017"}, {"body": "maybe someone else see act", "d": "10/2017"}, {"body": "hey stonecypher sorry bad experience trouble shooting methods work ton issues react repo times need little help finding stuff get jsfiddle reproduces issue think could diagnose issue create test case manual dom test fixture ca nt reproduce best resolve issue inputs selects hot topic team right want make work seamlessly possible need little help", "d": "10/2017"}, {"body": "nhunzaker third time declining copy working reproduction already given jsfiddle last time someone asked closed ticket", "d": "10/2017"}, {"body": "already given jsfiddle stonecypher sorry jsfiddle provided already identified issue another jsfiddle previous issue would really help us could link us hundreds hundreds closed issues sometimes hard go back find one specific one", "d": "10/2017"}, {"body": "opened eight tickets far four years team closed active ticket without even investigating five days ago gotten lot little help nhunzaker open link open console observe clear instructions show problem real move forwards see fit interested copy pasting reproduction case ticket jsfiddle please take quality seriously please stop asking copy repro cases aweary repro case ignoring shows thing found correct please nt involve ticket anymore thanks", "d": "10/2017"}, {"body": "aweary really ca nt find ctrlf testcase issue read issue", "d": "10/2017"}, {"body": "stonecypher opened three issues us including one issue closed nt provide reproducible test case thankfully nhunzaker spent time putting together jsfiddle linked issue issue read issue reason asking jsfiddle ca nt easily read source code test case ca nt make modifications debug providing hosted example without source helpful us please understand every single person trying help volunteer free time making easier us help goes long way acting rude makes difficult us work together resolve issue please take consideration", "d": "10/2017"}, {"body": "aweary please disinvolve ticket would less work make fiddle keep arguing convincing longer contribute react opened lot three issues nt know interested getting volunteers speech nt get credit collaborator already work want lazy open comment ticket closing leaving closed guys nt able find four years despite one basic test cases happy leave react broken another four years collaborators nt interested enough quality cut paste single stretch text single time", "d": "10/2017"}, {"body": "jsfiddle semirelated codepen native behavior sure directly assigning accurate result select showing blank least chrome far know internal methods involve finding matching option selecting assign value directly work every browser", "d": "10/2017"}, {"body": "nhunzaker correct browsers honor correct thing explicitly disallowed react", "d": "10/2017"}, {"body": "nhunzaker far sort open discussion react idea fairly different htmls guys nt allow makes multiselection impossible causes weird edge problems nt important require instead someone set assume strategy get around dealing controlled uncontrolled components would turn mess involve container way good argument imagination react look defaultvalue count appropriate number nodes set attribute relevant nt know enough internals clear matching would involved distance count", "d": "10/2017"}, {"body": "stonecypher know frustrating understand old issue open long time sorry want work resolve kind behavior acceptable continues take action please keep civil focused technical discussion thanks", "d": "10/2017"}, {"body": "guys nt allow selected makes multiselection impossible causes weird edge problems nt important understanding would willing enumerate weird edge cases far understood multiple selection possible providing array demonstrated jsfiddle good argument imagination react look defaultvalue count appropriate number nodes could explain approach detail function runs select options inside react short enumerates select options adds selected options matching values bails early singular selects however processes options set select maybe get away assigning singleselect case wonder browser support think worth exploring", "d": "10/2017"}, {"body": "nhunzaker seems like reported issue ca nt use index option element select element would nt expect work first place behavior described spec sounds like stonecypher looking set nt support using indices", "d": "10/2017"}, {"body": "nhunzaker oh jesus supposed use value documentaton says use defaultvalue nt mention supposed use value assumed would index html okay maybe edge cases nt exist memory tested one values index coincidence may tried arrays gave unexpected result half dataset coincidentally correct half also four years ago job company nt exist anymore nt actually ability dig old code nt remember clearly make effort reproduce locally amount time things may fixed misunderstanding api may nothing repro would embarrassing left bug open four years misunderstanding api relevant docs relevant stretch documentation page addresses multiple input types nonexhaustively examples actual example use thus indicator", "d": "10/2017"}, {"body": "aweary thank neglected identify think page agree use indices select options using prop always direct comparison question whether want support way select options stonecypher use case requires select option index could maintain index state pass value extracting element array index something like", "d": "10/2017"}, {"body": "allergic state also would appropriate serverside rendering nt really care whatever think misunderstood supposed would appreciate told way could rendered static html without props state something like would also appreciate told contribute documentation worried misunderstanding part api expected work", "d": "10/2017"}, {"body": "clearer someone would modify oneliner disabled option could initially selected one shut go away bug", "d": "10/2017"}, {"body": "far use cases satisfy design requirements ui work nt cared years came back original ticket got closed request reopen still broken time thought still broken", "d": "10/2017"}, {"body": "nhunzaker also matter able html feel supporting would pleasant choice", "d": "10/2017"}, {"body": "pushing long overdue fix issue", "d": "10/2017"}, {"body": "gon na close since bug talk supporting selectedindex specific feature request issue moment nt see super compelling reason add easy enough work around defaultvalue clear additional controllable prop would interact existing ones terms parity html think fair point however inputs react already pretty specialized divergent normal behavior may worth added complecity", "d": "10/2017"}, {"body": "jquense renew request told contribute docs give opinion strong signal wrongly", "d": "10/2017"}, {"body": "cc acdlite sebmarkbage bvaughn", "d": "10/2017"}, {"body": "error great application great library test one way prevent unwanted messages appearing tests onerous could also globally jest setup file nt think saw warnings probably mocked something jest point regarding gaearon comment original issue believe nt see mix spying consoleerror mocking reactfibererrorlogger unfortunately mocking nt really recommended outside context react project come cleaner story order simplify external testing", "d": "10/2017"}, {"body": "pr fixed", "d": "10/2017"}, {"body": "cc jquense", "d": "10/2017"}, {"body": "duplicate manually calling controlled input longer work due heuristic use dedupe change events", "d": "10/2017"}, {"body": "workaround helpful", "d": "10/2017"}, {"body": "dcalhoun example showing workaround gaearon linked works example hope helps", "d": "10/2017"}, {"body": "thank much help example allow accomplish need sorry duplicate", "d": "10/2017"}, {"body": "use formidablelabsreactlive left hand side new editor need either reimplement component ideal add functionality upstream sure interested latter given already component cc philpl thoughts", "d": "10/2017"}, {"body": "bvaughn super biggest conflict see adding custom transpilers implementation feature might vary slightly depending transpiler used unfortunately also site currently using fully custom transpiler top babelstandalone reconcile problems sure hard add", "d": "10/2017"}, {"body": "maybe custom format could define would enable user inject error messages row optional column number would sufficiently compileragnostic", "d": "10/2017"}, {"body": "bvaughn great could added editor without much effort sure soon time mind copying issue suggested api issue reactlive please", "d": "10/2017"}, {"body": "got", "d": "10/2017"}, {"body": "moved", "d": "10/2017"}, {"body": "moved", "d": "10/2017"}, {"body": "years message documentation use instead enable advanced optimization closure compiler react finally support advanced optimization great news", "d": "10/2017"}, {"body": "continue case code reference surely build react closure compiler danger mode", "d": "10/2017"}, {"body": "ljharb yes already clear real problem often case code nt constitute majority bundle", "d": "10/2017"}, {"body": "nt message documentation days use string instead use callback save variable", "d": "10/2017"}, {"body": "string refs legacy yes nt recommendation advise string refs issues considered legacy likely removed one future releases currently using thisrefstextinput access refs recommend callback pattern instead source", "d": "10/2017"}, {"body": "yes reactproptypes deprecated version removed proptypes moved packages check blog post info migrating", "d": "10/2017"}, {"body": "jquense wrote use proptypes separately lib means know proptypes package use open issue back", "d": "10/2017"}, {"body": "sorry quick close line clearly showing old usage may code problem someone depending reactproptypes app reason breaking", "d": "10/2017"}, {"body": "jquense work project fixed bug related reactrouter used old proptypes", "d": "10/2017"}, {"body": "hey try fix one", "d": "10/2017"}, {"body": "sure sounds good holler need help", "d": "10/2017"}, {"body": "added commit fixing bug hope okay", "d": "10/2017"}, {"body": "unfortunately help share url happens project example", "d": "10/2017"}, {"body": "hey dan working fine closed silly mistake still sourcemap issue however nt generate build css think might webpack issue link see working thanks always help knowledge sharing everywhere", "d": "10/2017"}, {"body": "still sourcemap issue however nt generate build css odd could file issue cra repo example would helpful glad production detection seems working cheers", "d": "10/2017"}, {"body": "fyi using cra however ongoing thing heavily discussed webpack threads conflcts plugin arise well know reason however done extensive testing anything like webpack config webpackprodconfigjs packagejson variation scripts packagejson sourcemaps emitted production using webpack uglifyjs plugin even regular uglifyjs plugin nt think use flags cra right maybe nt issue smart one day figure circumvent problem said still post issue cra please advise thanks", "d": "10/2017"}, {"body": "oh nt use cra nt apply nt think use flags cra right nt use instead separate production config explicitly use two webpack plugins specify produce separate sourcemap files hope helps", "d": "10/2017"}, {"body": "thanks dan great start look", "d": "10/2017"}, {"body": "totally different ballgame nifty", "d": "10/2017"}, {"body": "error boundaries catch errors child components wo nt catch error component wrap something error boundary since case fails manages render error boundary learn exists", "d": "10/2017"}, {"body": "something like would work js function mycomponent return brokenvar function app return usage", "d": "10/2017"}, {"body": "however stacktrace componenttrace even remotely clear tests causing warning previous versions would show exact stacktrace file names line numbers generated error sure confusing js traces component traces show screenshot consider good behavior like understand mean better believe particular warning existed see could better stack trace perhaps referring different warnings better stack traces show screenshot ones useful component stack traces note js traces component traces show line numbers use plugin development enable see root element defined line number probably find test impression issue referring js traces well nothing make disappear saw browser see well click expand arrow see additionally several tests need throw errors alert library users something wrong test logs full bright red running browser really considered use case always run tests jsdom comment", "d": "10/2017"}, {"body": "sum need screenshots draw conclusions", "d": "10/2017"}, {"body": "yes obviously new warnings request somewhat unfulfillable previously errors unit tests pretty easy know exactly really considered use case always run tests jsdom tests also running jsdom thanks plugin trying", "d": "10/2017"}, {"body": "seconds think plugin needed confirm close issue", "d": "10/2017"}, {"body": "previously errors unit tests pretty easy know exactly error warning never printed js stacks warnings although technically could possible overrode printed", "d": "10/2017"}, {"body": "tests also running jsdom case seeing additional error boundary log nt look expected figure minimal reproducing project", "d": "10/2017"}, {"body": "think problem one tests carelessly leaking props way suspicion correct nearly impossible isolate without plugin trivial find remedy plugin guess recommend advertising bit incorporating functionality library thanks dan", "d": "10/2017"}, {"body": "still could share minimal project spits unhandled error noise please incorporating functionality library possible would done", "d": "10/2017"}, {"body": "still could share minimal project spits unhandled error noise please issue", "d": "10/2017"}, {"body": "yeah", "d": "10/2017"}, {"body": "basically close favor", "d": "10/2017"}, {"body": "also wrote explanation", "d": "10/2017"}, {"body": "oops sorry went issues page missed", "d": "10/2017"}, {"body": "worries many", "d": "10/2017"}, {"body": "one", "d": "10/2017"}, {"body": "interested taking would one first open source contributions really excited", "d": "10/2017"}, {"body": "sounds great need search codebase find fire two warnings add boolean variables fire set boolean next time check boolean firing skip boolean already set", "d": "10/2017"}, {"body": "questions feel free ping", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "sounds fun see relation reactjsreactcodemod one link would fork common codemods repl", "d": "10/2017"}, {"body": "imagined somehow run browser honest nt think", "d": "10/2017"}, {"body": "fair seems like could add npm module website deps embed way happy play around point enjoy repl stuff", "d": "10/2017"}, {"body": "another thing missing html jsx converter one apparently points back website nt provide anymore host link invalid prop classname warnings", "d": "10/2017"}, {"body": "nt actually one site let update doc talking point nt need continue support redirect reason reactmagic docs link react website redirect back reactmagic website edit open pr", "d": "10/2017"}, {"body": "let update doc talking point nt need continue support redirect sorry clarify meant would prefer official tool volunteerrun project breaks every time release would feel comfortable linking warnings mean hosting making visible somewhere website know link actually making solid official tool course would involve work currently time", "d": "10/2017"}, {"body": "well pr sent pull us loop would nt break future releases", "d": "10/2017"}, {"body": "moved", "d": "10/2017"}, {"body": "cc aweary jquense", "d": "10/2017"}, {"body": "deploying build fixutres prs would really helpful inadvertently already feature docs site possible would nice fixtures app jsfiddle like functionality way could quickly test dom changes locally without write new test case deploy nightly edge build react accompanying jsfiddle make easier determine fix works master without needing know setup react locally zpao used host site deployed builds master try find get home", "d": "10/2017"}, {"body": "still builds ci", "d": "10/2017"}, {"body": "think sophiebits also suggested contractors run qa tests different browsers sure hard would", "d": "10/2017"}, {"body": "think focused selenium tests via sauces labs like particularly fraught areas reasonable idea yes flakey least provide canaryinthecoalmine early warnings inform spend time manual qa unittest nature tests reduce flakeyness plus get insight break peoples selenium workflows circleci workflows feature also makes easier set flows nt required need manual approval", "d": "10/2017"}, {"body": "helps also experience saucelabsbrowserstack found sl less flakey across browsers done bunch testing protractor react better expected results glad help", "d": "10/2017"}, {"body": "also want call back definitive list browsers need test could make sure wasting time testing unsupported browsers", "d": "10/2017"}, {"body": "identified current documentation production actually already fixed code", "d": "10/2017"}, {"body": "important keep fiddles working stable official react documentation reference fiddles", "d": "10/2017"}, {"body": "many old issues refer broken fiddles harder check latest version mention code examples people built education documentation", "d": "10/2017"}, {"body": "relocated", "d": "10/2017"}, {"body": "know much csp says refused apply inline style inline styles allowed nothing react work around need ensure code dependencies contain", "d": "10/2017"}, {"body": "liking think streamline efforts sides", "d": "10/2017"}, {"body": "another benefit could since moving docs along license able display mit license navigation bar per discussion", "d": "10/2017"}, {"body": "whole lot benefits favorite one hopefully people stop trying read docs github also reduce issue noise hopefully community members commit access unreasonably excited bvaughn let know help love deletingmoving things better real work", "d": "10/2017"}, {"body": "let know help love deletingmoving things better real work thanks dan enjoy take care one", "d": "10/2017"}, {"body": "bvaughn would require help effort keen help", "d": "10/2017"}, {"body": "thanks offer think good bulk help would great project moved file bunch issues", "d": "10/2017"}, {"body": "one thing consider creating issue best keep scriptserrorcodescodesjson sync lesser extent also applies way read current react version packagejson file already little janky think okay us move siteconstants file accept fact need bump please let know seems onerous see couple options currently leaning toward first one option website build scripts could load latest error codes facebookreact repo build time think could done way gatbsy source plugin pros adds complexity facebookreact repo change userfacing behavior performance website cons additional point failure reactjsorg repo ci eg github api error codes json gets moved etc website must separately rebuilt whenever error codes updated option could justintime load latest error codes facebookreact repo user opens error page pros website automatically stays insync latest error codes updated nt add complexity build step cons added latency user looking error messages additional point failure reactjsorg website eg github api error codes json gets moved etc option could fork error codes json store copy new repo pros flexibility error codes live website cons easy forget forked file release", "d": "10/2017"}, {"body": "wrote gatsby source plugin loads data react repo using github user content api js const request require requestpromise const errorcodesurl exportssourcenodes async boundactioncreators gt const createnode boundactioncreators const jsonstring await request errorcodesurl createnode id errorcodes children parent errors internal type errorcodesjson contentdigest jsonstring think reasonable let talk anyone concerns though", "d": "10/2017"}, {"body": "sounds good mean ca nt run website offline", "d": "10/2017"}, {"body": "sounds good mean ca nt run website offline run website offline need first reenable service workers figure causing intermittent problems change wo nt preclude plugin wrote embeds data build dev startup time end result", "d": "10/2017"}, {"body": "believe possible preserve history new repo following sh git filterbranch supports single folder start creating one pruned repo per folder want preserve copy history docs folder step take long time lot history copy git clone git githubcom facebookreactgit reactdocs cd reactdocs git filterbranch pruneempty subdirectoryfilter docs master cd copy history www folder git clone git githubcom facebookreactgit reactwww cd reactwww git filterbranch pruneempty subdirectoryfilter www master cd create new repo unify filtered repos mkdir reactjsorg cd reactjsorg git init least one commit needed steps work git commit allowempty initial empty commit merge docs changes git remote add reactdocs reactdocs git fetch reactdocs git merge nocommit reactdocsmaster allowunrelatedhistories git readtree prefixdocs u reactdocsmaster git commit import docs merge www changes git remote add reactwww reactwww git fetch reactwww git merge nocommit reactwwwmaster allowunrelatedhistories git readtree prefixwww u reactwwwmaster git commit import www move things around outlined issue description commit commit edit seems suggest nt work correctly may related flag sure edit able get working copying history folder think okay since folder much newer history less useful", "d": "10/2017"}, {"body": "website build scripts could load latest error codes facebookreact repo build time something similar babel site loads package readmes main babel repo part build script believe possible preserve history new repo following glad could work splitting one yarn repositories two separate ones took forever work actually", "d": "10/2017"}, {"body": "gatsby plugin system made ridiculously easy pull data graphql via plugin read data template graphql", "d": "10/2017"}, {"body": "hard say anything without seeing specific cases measured", "d": "10/2017"}, {"body": "workinprogress repo see live demo pick strategy click add bunnies hoping add test cases livetinkering thing proper benchmark think playing around get feel sorry organized right anything make easier discuss please let know interesting bits mostly though moved custompixi renderer repo linked specifically empty renderer nt really push anything placeholder objects feels similar performance either pixidom renderer pixicustom renderer depending whether rendering null edges toggle empty view though right easy way via live demo feel live demo screendrawing extra computation pixi nt really changing much get certain number bunnies seems difference whether rendering null edges seems biggest performance factor far rather using one renderer vs another using keys also makes difference hope helps", "d": "10/2017"}, {"body": "updated demo two separate cases use source difference edges per bunny one version renders proper element renders also updated description demo explain results test cases think much clearer also little confused rendering null fits tree see nt call via renderer added props parent component understand bit better goal would think special elements definitively containers therefore somehow see performance gains though rendered null makes sense sukkot israel soon probably afk usual happy followup later thanks taking look", "d": "10/2017"}, {"body": "bit busy things try look time next week forget please ping", "d": "10/2017"}, {"body": "also forgot since focused actually using renderer still interested ping", "d": "10/2017"}, {"body": "design taken account jsx generates however enumerate props merge default props means performance hit object form meant target optimising compiler compiler would need smart enough inline default props directly object literals bail impossible determine default props", "d": "10/2017"}, {"body": "bad using form means render dynamic content server received json anyways guess either implement already traverse tree work around thanks prompt response", "d": "10/2017"}, {"body": "well always pass props fill give complete element", "d": "10/2017"}, {"body": "explain order difference see obvious would expect currently work depth first appear earlier amongst siblings fire earlier seeing different results said probably nt rely order calls client break async mode future mounting paused aborted restarted etc", "d": "10/2017"}, {"body": "explain order difference see gaearon unfortunately nt access reproduction example issue description hopefully soon able dig issue one reproduction understand answer expect tree traversal algorithm hence call order hooks break async mode future good know also heard end situation called called challenging handle gon na need rethink cleanup logic assuming scheduling timeout waiting hook good workaround materialuireactjss side way remove css page component mounted cc kof thanks answer", "d": "10/2017"}, {"body": "cc acdlite might context implications right", "d": "10/2017"}, {"body": "provide full example please nt see thisportal defined code although error message still odd", "d": "10/2017"}, {"body": "sorry looks like stripped much use works fine import react component react import reactdom reactdom export default class somethingcool extends component constructor super thisportal documentcreateelement div documentbodyappendchild thisportal render return reactdomcreateportal thisportal close since nt think related directly react also using storybook looks like could something going strangely get error thanks quick reply sorry false alarm", "d": "10/2017"}, {"body": "thanks report anyway need example work", "d": "10/2017"}, {"body": "think likely due swapping root nodes creating new root node comment node parentnode null specific error handling", "d": "10/2017"}, {"body": "would possible get updated next npm react regressions fixed", "d": "10/2017"}, {"body": "ptomasroos releaed nottoodistant future", "d": "10/2017"}, {"body": "maybe issue keep open released", "d": "10/2017"}, {"body": "thanks feedback iamdustan", "d": "10/2017"}, {"body": "release within week two work problems done need keep issue open lock comments help get release faster need test facebook first", "d": "10/2017"}, {"body": "understanding expected patch differences since production expensive negates performance benefits new approach see also", "d": "10/2017"}, {"body": "intentionally want render something different client one popular approach set boolean state flag like use rendering way initial render pass server additional pass change want see client", "d": "10/2017"}, {"body": "ok thanks think docs bit misleading least unclear render used hydrate container whose html contents rendered reactdomserver react attach event listeners preserving much existing dom possible best results try render content server client differences possible", "d": "10/2017"}, {"body": "agree would like send pr make clearer", "d": "10/2017"}, {"body": "fwiw believe current order events callback provided updatecontainer called via rendererflushsync correct bit confused error message since callback happens initial render initial mount happens renderer updates finish renderer batchedupdates renderer unbatchedupdates renderer flushsync component render component componentdidmount callback renderer deferredupdates state changes component componentdidupdate", "d": "10/2017"}, {"body": "sure going research suggests oddities tag practically get event work js see codepen adding inline plain markup work able get work scant fixes could find online one supppper ugly probably tenable insight nhunzaker resident svg guru", "d": "10/2017"}, {"body": "use case sounds reasonable mentioned would take pr makes proper production builds", "d": "10/2017"}, {"body": "also let keep conversation thanks", "d": "10/2017"}, {"body": "ah sorry issue nt come searches feel free close one favor", "d": "10/2017"}, {"body": "guess important anymore react since ship flat bundles nt long module ids want send pr remove", "d": "10/2017"}, {"body": "ah mean react still affected savings nt great react distributed makes sense submit pr remove recommendation goal get core issue fixed maybe nice thing use", "d": "10/2017"}, {"body": "ah mean react still affected savings nt great react distributed yep", "d": "10/2017"}, {"body": "important fix linked quite times specific sections maybe even website", "d": "10/2017"}, {"body": "hmm interesting works correctly locally devmode correct tab opened body scrolls specified anchor tag production website correct tab usually active body nt scroll correctly", "d": "10/2017"}, {"body": "think might remove tabs mechanism entirely htmlcss embedded markdown file approach nasty oneoff anyway think post pr either breaks file files adds nested sidenav entry depends whether need support previous links like docsinstallationhtml usingacdn make work b makes single page links top instead tabs", "d": "10/2017"}, {"body": "thank much reporting pushed fix deploy minutes", "d": "10/2017"}, {"body": "sorry confusing redirects rewrote docs last year best effort redirects worth updating warnings better locations recall right reason warning wanted change behavior using ensures code wo nt break change nt changed yet", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "seems like would work fine would look verbose explicit course caller passes see warning presumably already declare proptype function type flowtypescript would warn anyway", "d": "10/2017"}, {"body": "presumably already declare onclick func proptype nt always use prop types allow avoid warning gets around parent passing falsy values", "d": "10/2017"}, {"body": "right understand annoying change surely something like every level necessary probably often much verbose", "d": "10/2017"}, {"body": "certainly right less verbose explicitly trying remove responsibility checking falsy values consumer issue related event handlers native dom elements custom components choose enforce nt enforce scope issue example declare component explicitly accepts handler write prop type validation anyway example following style guide lot people goal issue reduce amount forced typechecking imposed react consumers everyone likes code typed order pragmatic think type systems js optin react", "d": "10/2017"}, {"body": "lot support certainly change back sure use case conditional event handlers common enough ternary worse boolean shortcut experience components ecosystem use either proptypes flowts already push responsibility consumer anyway would want special case booleans behavior passed empty string numbers strings event handlers treated differently attributes warn unexpected booleans attributes way understand user meant pass boolean something take boolean might even realize attribute take boolean case takes etc would easy remember attributes events different tolerance type requirements", "d": "10/2017"}, {"body": "event handlers treated differently attributes warn unexpected booleans attributes way understand user meant pass boolean something take boolean might even realize attribute take boolean case autocomplete takes name etc would easy remember attributes events different tolerance type requirements actually going go detail nt want bother case proposal shut immediately thank openminded passed error honestly doubt would ever happen idea use boolean shortcut approach either avoid adding handler add result truthy expression handler course truthy value must function think falsy values treated like warn either use error obviously intended disable regard current behavior perfect yes guess means event handlers treated differently agree let wait see others think heck maybe one thinks annoying ps unrelated particular issue related typing react render method sometimes avoid rendering empty block following shorthand often used would get expected output falsy comments block rendered numerical text node rendered numbers valid elements means problem pointing illustrate gotchas related typing react prop types catch nt perfectly valid sure headscratcher first see everyone knows falsebranch value result logical binary expression evaluates false", "d": "10/2017"}, {"body": "let wait hear people", "d": "10/2017"}, {"body": "like feature hard add anything jeffijoe said taste whether like pragmatic hacks", "d": "10/2017"}, {"body": "branch maintaining code actively anymore want change", "d": "10/2017"}, {"body": "rogierschouten react modules searching packages folder root project open pr repo changes correct folder like would main code see amp nt available anymore branch", "d": "10/2017"}, {"body": "thanks gaeron michaeldeboey wanted add peer dependencies react packagejson build system nt like fact modules require react without referring packagejson however nt maintained upgrade seems modules master packages directory already peer dependency set", "d": "10/2017"}, {"body": "build system nt like fact modules require react without referring packagejson unfortunate problem peer dependencies nt add value make testing prereleases awkward noisy warnings seems modules master packages directory already peer dependency set sure referring nt maintain modules anymore nt exist master", "d": "10/2017"}, {"body": "wo nt making customizable happy take prs silence warning specific tags known standards track soon implemented browsers already exception would like send pr", "d": "10/2017"}, {"body": "okay thanks see wise silence dialog nt know implemented ticket tracking issue mozilla already months old nt seem lot movement", "d": "10/2017"}, {"body": "mdn spec seems like fair game let add", "d": "10/2017"}, {"body": "start dig see could thank cheers", "d": "10/2017"}, {"body": "elements use lot custom elements generate webgl scenes", "d": "10/2017"}, {"body": "please file new issue example could add special cases", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "wonder happens", "d": "10/2017"}, {"body": "thanks report zonzujiro aware issue react compares values numbers determine needs update input value equal assumes nt need update value see information thanks", "d": "10/2017"}, {"body": "aweary thank response far understand input logical react compares values inputs numbers input suppose react nt compare values numbers inputs tested codepen code project works fine behavior depend execution environment could issue something else", "d": "10/2017"}, {"body": "test utils documentation sorry colors", "d": "10/2017"}, {"body": "oh whoops apologies", "d": "10/2017"}, {"body": "also noticed fiddles linking broken assume wereare linking place something keep mind examples seem broken", "d": "10/2017"}, {"body": "take minutes deploy site hopefully fixed", "d": "10/2017"}, {"body": "unfortunately recharts examples broken nt specify react version accidentally updated react different file names could potentially fix side providing fallback one commonly used builds nt even exist anymore fixed side anyway", "d": "10/2017"}, {"body": "hi determined issue days ago might related second note describes fix problem method getroothostcontext rootcontainerinstance reactfiberreconciler apply fix source recompile get another warning says warning validatedomnesting appear child lt document issue needs investigation application work shadowdom thanks markus", "d": "10/2017"}, {"body": "fix", "d": "10/2017"}, {"body": "note places source compare compare want audit check cases", "d": "10/2017"}, {"body": "fix looks good gaearon thx super fast response note places source compare documentnode compare documentfragmentnode want audit check cases think check within getroothostcontext enough webcomponents", "d": "10/2017"}, {"body": "maybe also adding addition test tag render const templateinstance templatecontentclonenode true reactdomrender reactcreateelement helloworld templateinstance", "d": "10/2017"}, {"body": "would like contribute fixture added send pr fork branch know web components", "d": "10/2017"}, {"body": "hi mentioned warning validatedomnesting occur development bundle forget activate nodeenv production tags cover test might discussion dedicated thread tag also tag introduced shadow dom", "d": "10/2017"}, {"body": "fixed warning", "d": "10/2017"}, {"body": "would like contribute fixture added send pr fork branch know web components huh afk next time sure thanks gaearon much appreciated", "d": "10/2017"}, {"body": "imo hoisting clumsy workaround missing feature react let keep discussion", "d": "10/2017"}, {"body": "kyleamathews", "d": "10/2017"}, {"body": "dunno gatsby pretty normal reactjs ssr app loads server rendered html hydrates nt seen heard anyone encountering error gatsby googling error found stackoverflow discussion maybe relevant since reactjsorg load external scripts though feels bit red herringish jfarlow plugin break react ssred apps", "d": "10/2017"}, {"body": "also getting empty page regular chrome canary flashes rendered page goes blank hitting view source shows appears full working page compared working page firefox react dev tools show components amp children failed google chrome version official build google chrome version official build canary clearing browser cache nt anything works incognito page also worked switched guest logged chrome profile also get following errors logged console referenceerror docsearch defined tcomponentdidmount component commitlifecycles n u c h objectupdatecontainer objectunbatchedupdates n u c h updatecontainer anonymous unbatchedupdates pt render anonymous settimeout async anonymous anonymous anonymous anonymous anonymous anonymous homejs r anonymous windowwebpackjsonp bootstrap anonymous component component referenceerror babel defined component tupdatestate component new component constructclassinstance beginwork u c h tupdatestate component component constructclassinstance beginwork u c h updatecontainer anonymous unbatchedupdates pt render anonymous settimeout async anonymous anonymous anonymous anonymous anonymous anonymous homejs r anonymous windowwebpackjsonp bootstrap anonymous component uncaught referenceerror docsearch defined tcomponentdidmount component commitlifecycles n u c h objectupdatecontainer objectunbatchedupdates tcomponentdidmount component commitlifecycles n u c h updatecontainer anonymous unbatchedupdates pt render anonymous settimeout async anonymous anonymous anonymous anonymous anonymous anonymous homejs r anonymous windowwebpackjsonp bootstrap anonymous component new page super fast works", "d": "10/2017"}, {"body": "looks like fair adblocker version culprit whitelisting site solved problem", "d": "10/2017"}, {"body": "website opensource project", "d": "10/2017"}, {"body": "yes source folder repo soon extracted repo looks like fair adblocker version culprit whitelisting site solved problem perhaps need add error boundary", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg backstory made move see issue meanwhile move issue let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "maybe could warn warnings invalid nesting eg inside another", "d": "10/2017"}, {"body": "aweary", "d": "10/2017"}, {"body": "zehiro seeing click button reset form without changing value sets value select element first first change select value first click reset nothing happens reporting verify seeing behavior thanks", "d": "10/2017"}, {"body": "aweary exaclty thie behaviour would expect situations clicking reset button default option selected", "d": "10/2017"}, {"body": "thanks confirming zehiro according html spec select elements following reset event happens reset algorithm select elements go option elements element list options set selectedness true option element selected attribute false otherwise set dirtiness false option elements ask reset looks like depends attribute preset set property elements never set attribute hit case option reset algorithm select element display size option elements select element list options selectedness set true set selectedness first option element list options tree order disabled true think need utilize defaultselected attribute element keep sync spec nt really say attribute works reset algorithm quick testing shows help us resolve issue", "d": "10/2017"}, {"body": "thanks analysing deeply subject help chose appropriate solution though", "d": "10/2017"}, {"body": "worries mostly documenting future reference rest team thanks report", "d": "10/2017"}, {"body": "thanks adressing", "d": "10/2017"}, {"body": "sebmarkbage remember opinions past affect issue", "d": "10/2017"}, {"body": "try incognito window maybe caching issue", "d": "10/2017"}, {"body": "yup works incognito window normal window even clear cache hard reload", "d": "10/2017"}, {"body": "maybe chrome extension messing", "d": "10/2017"}, {"body": "yes looks like fair adblocker causing loads fine disable", "d": "10/2017"}, {"body": "add error boundaries nudging people whitelist site adblockers", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository made sure mention specific issue new repo via let continue discussion", "d": "10/2017"}, {"body": "exist form see fancy versions", "d": "10/2017"}, {"body": "hey compuives thank filing issue love idea documentation source code reactjsorg lives different repository would please open new issue repository discussion sorry inconvenience", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository issue mention due mismatch node versions specified actually corrected yesterday", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "additional detail noticed attributes rendered using dom property name instead html attribute name react react incorrect client server side react reported think seems related particular bug", "d": "10/2017"}, {"body": "nt think technically incorrect html caseinsensitive although nt hurt lowercase", "d": "10/2017"}, {"body": "ah yes already forgotten used xhtml many years stuck reason would full backwards compatibility unless xhtml compatibility considered thing", "d": "10/2017"}, {"body": "note usual caveats downcasing svg apply svg casesensitive attributes instance needs use attribute name recent prs looks like similar issues gaearon mind posting posterity naively downcasing everything sound", "d": "10/2017"}, {"body": "regarding case sensitivity existing issue", "d": "10/2017"}, {"body": "ok seems happening assigning innerhtml attribute actually enough content parsed without knowing inside maybe always wrap extra tag normalizing", "d": "10/2017"}, {"body": "fix", "d": "10/2017"}, {"body": "thanks much gaearon", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "thanks confirming issue struggling identify reason svg component stopped working update component made clickable lost focus blur functionality tabindex rendered camelcase style ignored browser tried adding property tabindex tag jsx swallow react rendered final component", "d": "10/2017"}, {"body": "created fix", "d": "10/2017"}, {"body": "closed", "d": "10/2017"}, {"body": "thank", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "intentionally drop assume totally unaware", "d": "10/2017"}, {"body": "fixed via", "d": "10/2017"}, {"body": "another benefit componentwillmount also use methods defined class set state since way sets state following example docs code class clock extends reactcomponent constructor props super props thisstate date new date componentdidmount thistimerid setinterval gt thistick componentwillunmount clearinterval thistimerid tick thissetstate date new date render return hello world thisstatedatetolocaletimestring reactdomrender documentgetelementbyid root could rewritten like following componentwillmount class clock extends reactcomponent componentwillmount thistick componentdidmount thistimerid setinterval gt thistick componentwillunmount clearinterval thistimerid tick thissetstate date new date render return hello world thisstatedatetolocaletimestring reactdomrender documentgetelementbyid root confused using constructor suggested way things seems like benefits say use constructor thanks", "d": "10/2017"}, {"body": "maybe article help", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "according react docs following lifecycle mount saying makes total sense could probably done way however little bit asynchronous state handling going render called state begins case always safest use constructor define initial state course use redux control default behavior using reducers default props", "d": "10/2017"}, {"body": "documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue feel free open issue repository continue conversation sorry inconvenience", "d": "10/2017"}, {"body": "aweary thanks understand risk one takes using undocumented features suggestion trysound worked thanks", "d": "10/2017"}, {"body": "moved", "d": "10/2017"}, {"body": "moved", "d": "10/2017"}, {"body": "nothing new front follow case add something", "d": "10/2017"}, {"body": "bvaughn would like solve issue need guidance", "d": "10/2017"}, {"body": "looks like people already submitted prs related fumblehool think covered", "d": "10/2017"}, {"body": "bvaughn please update status issues also", "d": "10/2017"}, {"body": "nt know issue talking", "d": "10/2017"}, {"body": "meant issues prs submitted users difficult see issue already covered", "d": "10/2017"}, {"body": "best review prs triage issues also working things way people submitting prs copies see issue looks outdated please feel free leave comment", "d": "10/2017"}, {"body": "going close currently unreproducible suspect reason accidentally rendering outside another possibility bug track namespaces check reproducing example find one let us know reopen feel free file new issue thanks", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "couple points equivalent note passing component class function reference string strings pass dom elements like div b etc also required capitalize function names foo foo using jsx see read creating elements components", "d": "10/2017"}, {"body": "thanks alex guess continue discussion rather discord believe custom renderer pass string like long supported renderer function additionally unable get approach work way could get work specifically words bypassing custom renderers internal type lookup thing rather supplying function returns nondom type object work adding nondom type objects using createelement foo worked fine kneejerk perspective makes sense since react must somehow turn plain object proper element still clear exact pipeline happen outside renderer happen generically specifically given object satisfies methods renderer expects eg call appendchildremovechild etc needed possible bypass renderer internal thing simply supply function returns sort object", "d": "10/2017"}, {"body": "limitation correct custom renderers custom elements require going keystring lookup original question best practices exposing end user think comes two options documentation telling available strings roll components exporting components simple helpers use jsx straight import", "d": "10/2017"}, {"body": "leaving issue open might confusing since got stuff wrong going deeper seems like really varies usecase closing thanks help alexkrolick", "d": "10/2017"}, {"body": "believe custom renderer pass string like reactcreateelement long supported renderer createinstance function yes possible bypass renderer internal createinstance thing simply supply function returns sort object reactcreateelement element description react reconciles descriptions decides whether create append update remove instances think comes two options options reasonable would probably go documenting supported tags throwing unsupported ones", "d": "10/2017"}, {"body": "right think thought would surprising react add px depending whether string contents looks like number", "d": "10/2017"}, {"body": "note self reenable also reenable shallow rendering testutils", "d": "10/2017"}, {"body": "gaearon also one potential solution problem outlined right difficult test error boundaries dev build real browser since error ends thrown asynchronously production build let users use standard assertions since error utils use typical block best solution specific problem least solution", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "going assume issue closing one", "d": "10/2017"}, {"body": "triggering state change like suggested existing solution aware bumped issues react executes synchronously precisely accommodate use cases like", "d": "10/2017"}, {"body": "work around set dangerouslysetinnerhtml something else client like blank content space wo nt try manipulate tree dangerouslysetinnerhtml node client even wrong still trigger warning way suppress definitely hacky though", "d": "10/2017"}, {"body": "sebmarkbage hacky may definitely try thanks", "d": "10/2017"}, {"body": "quick question error boundaries ok multiple error boundaries different levels hierarchy let say one root level another one route level another one nested component level", "d": "10/2017"}, {"body": "bogdansoare read error boundaries like blocks whenever feelknow something throwfail wrap error boundaries nt know anything performance issues stacked eb tho", "d": "10/2017"}, {"body": "please refer post describes behavior detail adopt doc format", "d": "10/2017"}, {"body": "doc file ready adopted blog post gaearon said one concern though mentions parameter lifecycle method blog post mention contains use put notes", "d": "10/2017"}, {"body": "yes please worth documenting contains string field object try see string looks like provide example", "d": "10/2017"}, {"body": "documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg tagged inprogress belonging krizzu let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "confirm see difference behavior maybe bug", "d": "10/2017"}, {"body": "side note awesome speak different languages yet understand code", "d": "10/2017"}, {"body": "gaearon hey dan created fiddle issue click button hover right div new trigger event twice seems bug need help much willing something", "d": "10/2017"}, {"body": "really idea coming start looking code path event different maybe", "d": "10/2017"}, {"body": "another possible place enterleave issues piling maybe worth getting switch native events", "d": "10/2017"}, {"body": "clarify behavior nt two events dispatched element newly added element also dispatching event captured parent handler mouse slowly see first event fires mouse enters parent black border second fires mouse enters new child red border", "d": "10/2017"}, {"body": "another possible place jquense looks like part root issue seeing child divs nt triggering events inside equal newly added div equal ends populating arrays event gets processed", "d": "10/2017"}, {"body": "valid bug please close", "d": "10/2017"}, {"body": "issue checks checked", "d": "10/2017"}, {"body": "fix", "d": "10/2017"}, {"body": "issue moved new repo free work like", "d": "10/2017"}, {"body": "fixed moved docs another repo", "d": "10/2017"}, {"body": "awesome", "d": "10/2017"}, {"body": "issue worked anyone encountered following along documentation looked reference pr looks like pr nt getting merged could try tackle one currently working beginner", "d": "10/2017"}, {"body": "hey engineeringrobert thanks asking prs submitted fix issue though one needed rebased could merged website issues though might interested looking", "d": "10/2017"}, {"body": "bumped would awesome supported", "d": "10/2017"}, {"body": "yup issue", "d": "10/2017"}, {"body": "express support pressing issue please nt add comments nt particular context nt helpful spamming notifications", "d": "10/2017"}, {"body": "gaearon using prettify package mentioned still get issue code javascript export function renderstaticmarkup req const context const markup reactdomserverrendertostring return javascript import react react import reactdom reactdom import browserrouter reactrouterdom import app app reactdomrender documentgetelementbyid root happening due white spaces template string literal", "d": "10/2017"}, {"body": "please provide complete runnable minimal example reproducing well screenshot exact warning get", "d": "10/2017"}, {"body": "ok solved sorry alarm static markup template literal changed eliminated whitespace rendering node error warning went peace", "d": "10/2017"}, {"body": "could smart cases text node whitespace would semantic meaning would nt ignore warning case sebmarkbage realistically determine looking html put documentlevel whitespace affect rendering involving cssrules seems fragile entirely certain prettifiers account really serving prettified generated html unsafe guarantee affect rendering", "d": "10/2017"}, {"body": "published small fiberlike reconciler yesterday maybe helps someone extract core idea", "d": "10/2017"}, {"body": "close issue track documentation feel free refile cc keyanzhang also asked", "d": "10/2017"}, {"body": "please see", "d": "10/2017"}, {"body": "already fixed record also affected original problem error thrown line containing call", "d": "10/2017"}, {"body": "tagging feature request technically bug fix", "d": "10/2017"}, {"body": "think react bug using browser event system give different behavior", "d": "10/2017"}, {"body": "mistake thought might something react synthetic event managing ff chrome behave way", "d": "10/2017"}, {"body": "worries thanks checking", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue please open new issue repository continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "amount npm packages named react things react way amount tutorials using react amount stackoverflow questions asking reactrelated things amount articles written react whether tutoriallike newslike blog post new features otherwise much changed okay let actually say everyone involved agreed let change react name think happen returning developers watch old unrenamed tutorials read articles search react first thing hit due google removing reactjs first results searching react confused look way communicate owners reactos react stop js library became os anything change lead people way someone misspelling reactjs reactos thing bothering far best way address concerns logically think start conversation probably saying renaming reactjs damaging whole reactjs ecosystem also causes came address alternative propose", "d": "10/2017"}, {"body": "obviously case people going reactos irc channel andor telegram group looking reactjs help already stated thread frequently yes something solvable without solutions like changing logos names community support problem also facebook reactjs enough popular presence moment name change would visible likely leave many people confused imo wrong impact change really huge changing name much younger reactjs project personally would vote right react js much younger react js much much impact content presence internet reactos changing something point would bad would say probably good solutions involve changing image projects far point issues described community support channels think something fixeable nt know enough community support channels reactos order give proposals", "d": "10/2017"}, {"body": "discussion pierre schweitzer represents reactos project adding disambiguation note irc page hope helps reduce confusion", "d": "10/2017"}, {"body": "lol see mistake reactos channel reactos react wrote patch", "d": "10/2017"}, {"body": "hmm pierre told ask comment clarify", "d": "10/2017"}, {"body": "probably guys taken channel see belong reactos team edit oops nt somebody hijacked netsplit changed tagline", "d": "10/2017"}, {"body": "ok indeed confusing assure nobody react team channel either nt know set change docs point instead want make clear neither manage claim ownership", "d": "10/2017"}, {"body": "clarified", "d": "10/2017"}, {"body": "changing names sides would extremely difficult due public recognition problems possibly internal documented apis whose names include react jo etc would need renamed thus breaking backwardcompatibility", "d": "10/2017"}, {"body": "easy give emoji really better give statement must thought name react take net programming know name imho pardon old reactos project best regards blacky", "d": "10/2017"}, {"body": "going offtop facewiththermometer", "d": "10/2017"}, {"body": "note confusion regarding irc channel would appear someone took advantage netsplit changed topic channel modes channel still effectively owned reactos always forwarding still place way join previously joined netsplit jeditobe please ask around next time jumping conclusions please", "d": "10/2017"}, {"body": "blackcrack old reactos project check archived august history logo first known reactos logo ever updated radioactive reactos logo new atomic reactos logo", "d": "10/2017"}, {"body": "pity exist old forum google cache see dez correct someone delete login recreate new date ask jaix give idea rapps comes mandrake inside story however older years freewin project windows livecd", "d": "10/2017"}, {"body": "fresh example confusion", "d": "10/2017"}, {"body": "dear believe keeping issue open ages bring anything new discussion think hbelusca summed everything previously projects personality identity name logo would make sense rename change logo two projects gaearon already made huge step direction disambiguation glad play fool already happy reduces amount lost people irc channels could done address last remark jeditobe would put extra explanation website stating based reactjs way often state based linux way really issue different project propose close issue given statements issue lasted long enough none projects gain anything fighting side note observers may wonder since specific issue opened mailing gaearon find constructive answers issue telling others constructive reactos folks still happy invite discuss next monthly meeting thanks gaearon help topic cheers pierre", "d": "10/2017"}, {"body": "thanks pierre close issue feel like something else could help reduce confusion let us know", "d": "10/2017"}, {"body": "fix get released", "d": "10/2017"}, {"body": "released happen within week two", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "child element removed transitiongroup children list actually yet removed transitiongroup render result react nt unmount clones last used props sets prop false actually maintaining common ui component rcdialog prohibit developers unmount dialog problem us know may problem others", "d": "10/2017"}, {"body": "problem us workaround think cache dom restore unmount hope nt flicker pretty horrible", "d": "10/2017"}, {"body": "issue solution found use createportal", "d": "10/2017"}, {"body": "hey yall nt think old behavior actually supported even sort worked time subtree component may stayed rendered would orphaned state likely break update occurred assumption subtree always actually parented personally run bugs parent component unmount break something portal component next update cycle", "d": "10/2017"}, {"body": "best workaround think asap escape react lifecycle stack trace control element unmounted also need magic copy context ca nt think disadvantages would api look like would inflexible", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue please open new issue repository sorry inconvenience", "d": "10/2017"}, {"body": "understood gets installed default initializing reactnative project reactnative init projectname something wrong reactnative part understand said web rn fine nt use alpha version reconciler hard provide fiddle since figured part app causes meaning even provide fiddlelike example basically almost entire app wanted know kind behavior generally possible something must wrong app hard guess describe sounds odd ca nt say without seeing reduced example", "d": "10/2017"}, {"body": "gaearon alright thanks provide arising details come", "d": "10/2017"}, {"body": "cc jquense", "d": "10/2017"}, {"body": "dedupe logic obvious candidate deduce might happening wrong get result got bunch webdriver tests testing seeing nt help debugging hmm great maybe small repo dirt simple app textbook saucelabs setup inputs text test zouning care put something together", "d": "10/2017"}, {"body": "jquense app might little bit complex take time try", "d": "10/2017"}, {"body": "seeing issue", "d": "10/2017"}, {"body": "please share complete example github", "d": "10/2017"}, {"body": "line quick fix", "d": "10/2017"}, {"body": "maybe check namespace apply caseinsensitive check html", "d": "10/2017"}, {"body": "two different systems nt make sense conflate people may even use proptypes eg use typescript flow instead still use understanding tempting reduce typing two separate concerns", "d": "10/2017"}, {"body": "agree moving website repo soon let get started done", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue willing please open new issue repository sorry inconvenience manually moving issues one bit long nt want misrepresent", "d": "10/2017"}, {"body": "oh sure make work one", "d": "10/2017"}, {"body": "sorry closed moved already morning brain starting fall asleep", "d": "10/2017"}, {"body": "regressed pull request", "d": "10/2017"}, {"body": "fixed nt exist", "d": "10/2017"}, {"body": "issue master", "d": "10/2017"}, {"body": "jquense change versions imports codepen see change event still fires first time unable test react codepen whatever reason", "d": "10/2017"}, {"body": "right sorry sure happened", "d": "10/2017"}, {"body": "clarify also seems broken swapped import codepen html", "d": "10/2017"}, {"body": "broken orz", "d": "10/2017"}, {"body": "could please explain extra indirection hot parts code making development builds run slower made faster removing really want pick work want understand work stopped actually work nt think adding reactinstrumentation back manner existed general interested way expose perhaps based protocol react devtools already uses first step would probably move react devtools backend react repo integrate tests know regresses first step even require implementor dive devtools works might bit overwhelming", "d": "10/2017"}, {"body": "created pr", "d": "10/2017"}, {"body": "well question rendering portals node still actual scenario replace content prefered something unusual actually one almost every project ever would nice opportunity opinion current behavior appending new nodes quite confusing want sure component rendered separate node append new node manually component done tutorial example", "d": "10/2017"}, {"body": "current implementation makes perfect sense conceptually understand motivations behind wonder real world usage coherent concept pretty sure people use portals placeholders living containers implicitly think behave like behavior back good part code using partially breaks react might good idea let people choice every use case covered gaearon would consider implement either another api technical constraints fiber implement", "d": "10/2017"}, {"body": "leeoniya great hear actually aware improvements thanks letting us know", "d": "10/2017"}, {"body": "yes think interesting good place new website start exploring something like", "d": "10/2017"}, {"body": "gaearon happy open pull request one two articles documentation made interactive article would good start", "d": "10/2017"}, {"body": "really cool love talk however documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue let continue discussion create issue get started", "d": "10/2017"}, {"body": "thanks bvaughn let start discussion", "d": "10/2017"}, {"body": "okay please feel free continue", "d": "10/2017"}, {"body": "regarding warning internal error react performance measurement code one due mistake actionable nt printed first place react nt child array iterator unique key prop strict error often indicate bugs must specify keys react otherwise subtle problems reordering lists example facebook show warnings modal window developers fix might eventually start open source react well please treat important today", "d": "10/2017"}, {"body": "either one works hard say without knowing use case guess parent knows whether child needs data pass boolean prop like trigger abort data fetching changes", "d": "10/2017"}, {"body": "ideally automate parts potentially fixing rrm work model happy", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue please open new issue repository sorry inconvenience", "d": "10/2017"}, {"body": "suppose bug separate", "d": "10/2017"}, {"body": "also ran issue upgrading react using intentionally rendering different classnames based viewport size using css media queries hide default html output desktop broke upgrading since would render mobile view class first idea solve add different values nt effect basic example solved using css class using media queries modify container", "d": "10/2017"}, {"body": "thebuilder want render something different client set state", "d": "10/2017"}, {"body": "thanks fast response see behavior called new serverside rendering couple suggestions willing open pr react blog post calls mismatches recommended indicates changes ok eg timestamps page react docs could updated point dangerous missing nodes server render might get recreated incorrect attributes used clientside warnings serverrender match client expected see warnings unhelpful innertext changes single dom node entire node missing would helpful show warning since case unsupported", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue issue bit tricky seems like couple calls action documentation bit created issue new repo reactjsreactjsorg someone dustinsoftware open new issue proposed warning message modifications continue discussion close issue sure reference discussion thread new issue", "d": "10/2017"}, {"body": "think leave unfixed already released", "d": "10/2017"}, {"body": "cc zpao", "d": "10/2017"}, {"body": "added three add list things make easier outside", "d": "10/2017"}, {"body": "sweet", "d": "10/2017"}, {"body": "going go ahead close since pulled away different project unable come minimal example", "d": "10/2017"}, {"body": "sort syntax like", "d": "10/2017"}, {"body": "agree behavior nt make sense jest environment actually nt think happens tests maybe mocking something seeing please raise separate issue seeing jest", "d": "10/2017"}, {"body": "one datapoint env utilizing sentry loaded via cdn ended masking errors passed error boundaries cross origin errors due way sentry hooks async apis nt normally run dev mode global error handling connected obvious reasons led lot confusion concern debugging figuring scope problem anyone searching reactcrossoriginerror error", "d": "10/2017"}, {"body": "think gcc probably strips way nt see gcc builds", "d": "10/2017"}, {"body": "closing favor activity", "d": "10/2017"}, {"body": "issue", "d": "10/2017"}, {"body": "oh man", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "expect happen react", "d": "10/2017"}, {"body": "problem comes react development mode soon switch production mode works fine one helped accesscontrolalloworigin", "d": "10/2017"}, {"body": "ran problem using webpack code splitting webpack dev server similar cdn setup setup initial bundle loaded script tag bundles loaded via jsonp webpack attribute added script tag initial bundle errors handled thrown code initial bundle handle errors bundles necessary configure webpack crossorigin script loading option like webpack config adds attribute jsonp script tags used load bundles", "d": "10/2017"}, {"body": "hey jjjjw thanks additional info chance could point minimal reprosetup setup describing like better understand update crossoriginerrors page react docs", "d": "10/2017"}, {"body": "bvaughn sure simple demo project worth noting case webpack dev server used different portdomain web server additionally first go doc addition", "d": "10/2017"}, {"body": "experiencing issue webpack running different domain whole application wired together using nginx way see error start chrome disablewebsecurity flag actually idea even possible fix", "d": "10/2017"}, {"body": "idea sentence means removing", "d": "10/2017"}, {"body": "secretly true nt think advertising yet", "d": "10/2017"}, {"body": "docs predate addition though must referred something else", "d": "10/2017"}, {"body": "think must meant future sure would said ca nt remember ever wanting commit past", "d": "10/2017"}, {"body": "landermkerbey love wording tweaked tiny bit landed nt go propagation consumption end propagation specific meaning event systems nt want confuse people good eye documentation constraints appreciate could take pass parts docs perhaps send prs", "d": "10/2017"}, {"body": "think duplicate", "d": "10/2017"}, {"body": "looking", "d": "10/2017"}, {"body": "prashanthr talks style key names talk values specifically loss documentation case say value become dom looks like reason linked wrong page part supposed show gone fix link", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "variation let keep discussion", "d": "10/2017"}, {"body": "gfx created package reactdomcore copies exposes modules lib", "d": "10/2017"}, {"body": "even mismatch consider testutils would say isolated pr probably worth unless prepare complete proposal revamp apis mirror well work codemods since already lot code using", "d": "10/2017"}, {"body": "context reason happens intentionally let browser interpret error uncaught rethrow justification discussed follow advice error add error boundary see error huge problem daytoday workflow fact nudges people add error boundaries nice another justification accidentally swallow error still print alone makes worth imo hundreds comments dozens issues caused people swallowing errors fact print least seems like enough benefit compensate printing twice uncaught unswallowed boundary", "d": "10/2017"}, {"body": "currently way prevent dispatching error event twice case simple error thrown click handler rather error boundaries nt seem help ps sure belongs different issue open new one", "d": "10/2017"}, {"body": "approach like help", "d": "10/2017"}, {"body": "probably something like works well javascript windowaddeventlistener error evt gt evterrormarkedforreactweirdness evtpreventdefault return evterrormarkedforreactweirdness true regular error handling considered temporary hack hoping elegant solution available", "d": "10/2017"}, {"body": "important duplication happens development mode presumably error logging etc happen production", "d": "10/2017"}, {"body": "ah good point forgot would nt issue production mode case minor annoyance app displays errors caught global handler developing error display feature always show twice unless hack duplicates away", "d": "10/2017"}, {"body": "tagging wontfix behavior intentional explained", "d": "10/2017"}, {"body": "maybe nt firing earlier reason nt firing going close since supported use transform development somebody finds simple fix though happy take pr", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "record error enzyme adapter using react adapter react version changing adapters solved issue", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "appreciate discussion think way fulfil feature request without significant downsides general suggest worry much little extra typing going make break application think strive clear data flow keeping components easy compose rather avoid extra keystrokes compromise goals perhaps generic way configured global scale thinking maybe api looks something like global apis pretty bad effects ecosystem components written assuming one configuration work global configuration exactly react essentially global configuration", "d": "10/2017"}, {"body": "gaearon could elaborate prefer use tree deep benifits using functoinal component instead thanks", "d": "10/2017"}, {"body": "callback would live somewhere also slow new architecture want discourage usage need refs pass like described another way could address", "d": "10/2017"}, {"body": "almost got rid", "d": "10/2017"}, {"body": "documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg", "d": "10/2017"}, {"body": "without reproduction unfortunately much please feel free ping provide consistent repro react thanks", "d": "10/2017"}, {"body": "experiencing problem affecting users firefox repro well wanted note issue continues", "d": "10/2017"}, {"body": "better performance guess talking overthewire bundle size vs runtime perf additionally react really using either classes arrow functions code convinced makes lot difference debugging actually really important topic ran tests weekend swapped closure compiler target one closure anywhere efficient insane magic bundle size actually went also tried babelminify similar results uglify support projects case see payload reduction babel helpers large transpiled results etc react specifically win react codebase uses little expensive sizewise transpilation syntax module discussion topic might good keep alive think close one due lack anything approaching current efficiency closure react currently get wins delivering mostly begin", "d": "10/2017"}, {"body": "react specifically win react codebase uses little expensive sizewise syntax impression", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "verified still issue react", "d": "10/2017"}, {"body": "yes due way polyfill implemented nt really fixable current strategy since relies infering paired event enterleave relatedtarget opposite means since disabled elements nt emit entering element wo nt get", "d": "10/2017"}, {"body": "really big trouble tried get around attaching tag wrapping disabled exhibited behavior nonetheless", "d": "10/2017"}, {"body": "gon na give shot first contribution", "d": "10/2017"}, {"body": "bit confused longer seems exists tests renamed somehow", "d": "10/2017"}, {"body": "logic old engine gone", "d": "10/2017"}, {"body": "ok think good handle upon deeper inspection error happens earlier lifecycle placing invariant higher originally suggested error actually gets thrown mountindeterminatecomponent nt even reach several lines lower check going simply seems work ie throw pure functional components well extended react components throwing plain js classes think exactly want", "d": "10/2017"}, {"body": "anyone else watching made instead requested dan also added test", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "either form makes sense removed deprecated apis wo nt see warnings anymore", "d": "10/2017"}, {"body": "another possible approach browseronly", "d": "10/2017"}, {"body": "would nice see feature react message explicit could tell elements different says also rendering issues due warning new react codebase try give hand issue", "d": "10/2017"}, {"body": "sorry focused getting release nt look existing prs yet", "d": "10/2017"}, {"body": "seems like fixed", "d": "10/2017"}, {"body": "going close duplicate", "d": "10/2017"}, {"body": "solution outlined work react", "d": "10/2017"}, {"body": "awesome thank aweary", "d": "10/2017"}, {"body": "plan current ad hoc process works read nt feel strongly close revisit next time deprecate something", "d": "10/2017"}, {"body": "something commenters flagged confusing one releasechecklist items since joining team observed ad hoc process works nt something seems useful document let close thanks", "d": "10/2017"}, {"body": "related", "d": "10/2017"}, {"body": "rollup made aware issue exposed bug rollupplugincommonjs way thanks would happened react module export given recent improvements rollup treeshaking algorithm pipeline least rollup users exposing bundle might positive effects bundle size depending react features used want go bundle ideally provide named exports create global variables makes easier treeshaking algorithm work even though must admit understand every aspect react build script would expect could basically solved adding another build target correct format possibly entry point right exports btw noticed using rather old version rollup anything preventing updating please file issue interesting todo comment still current", "d": "10/2017"}, {"body": "lukastaegert named exports default ones different sense named export afaik treated differently imported", "d": "10/2017"}, {"body": "andarist default export changed runtime named exports bindings changed file", "d": "10/2017"}, {"body": "maybe comment named exports little cryptic elaborate referring uncommon practice exporting things twice named export member default export latter often prevents treeshaking named export even though default export used reason exporting file default export still needs assembled assembled object included happen easily various members included bundle practice probably stems fact bundlers like webpack indeed rollup commonjs plugin converting commonjs files libraries include lodashes remove default export nodemodules bundle size treeshaking currently nearly halved would possible future improvements mean react make possible interchanged always need assemble object likelihood break treeshaking whole package however understand decisions ease use always preferred premature optimisation point consider especially plan move native modules future opinion", "d": "10/2017"}, {"body": "ah sure understand aware nt like though recommending named exports kind rule thumb way better educate people consequences attaching things default one hint hint eslint plugin however understand decisions ease use always preferred premature optimisation point consider especially plan move native modules future opinion personally see harder use assuming would exported purely named export attachment default one migration newer export style could easily run codemod also babel plugin could created allow people using syntax", "d": "10/2017"}, {"body": "trysound note export like export changed runtime statement complicated one named function declaration named class reassigned reassigning functionclass name otherwise appears nonreassignable always mutable export declaring recommend immutability good", "d": "10/2017"}, {"body": "make work manually exporting named exports separate file bundling file rollup", "d": "10/2017"}, {"body": "want make clear going get awesome benefits tree shaking react code internals always used might shave one two kb code never uses high priority optimization us reason", "d": "10/2017"}, {"body": "main benefit es module option react able use native modules development avoid rebundling every change code", "d": "10/2017"}, {"body": "also es modules place webpack could scope hoist react moment simply bails react treats commonjs", "d": "10/2017"}, {"body": "chiming kind late consider something like jsx const test props gt example testproptypes prop function props propname componentname recursivetypecheck props propname strong throw error nooo function recursivetypecheck element type elementtype type return true else return reactchildrentoarray elementpropschildren child gt recursivetypecheck child type edit disregard believe missing case classfunctional component renders", "d": "10/2017"}, {"body": "hi ljharb react team talked issue came concerns tldr right thinking best implement react return type nt mean accept props interact css environmental things would nt give enough type safety address cases thought additionally moved react core would generally prefer type checking outside react detail considered tried get sense high level problem meant solve seems like feature would help validate components gets passed via props certain behavior similar api based type component render though proposed feature would work cases also thought common cases pitfalls common pattern seen takes prop clones passes even verify returns ca nt guarantee accepts passes also seen cases may return may even accept props css implementation details compatible could assume would work children also considered idea could implemented outside react sebastian commented earlier coroutines fiber let implement kind thing user space wider solution kind parentchild relationships indirections could said without react enforcing adding arbitrary convention imo potentially dangerous ecosystem said point moved react core separate module seems like might similarly ok module outside react address concern hope helpful please let know sounds anything clarify thanks also bringing issue attention could bring team", "d": "10/2017"}, {"body": "thanks response think module outside react definitely better way go still devonly hooks inside react feature need similar devonly hooks eg happy make separate package react willing add hooks even verify returns ca nt guarantee accepts propx passes sure known implementation", "d": "10/2017"}, {"body": "fancychild known implementation clarify objection might button component takes buttonstyle maybe buttongroup seems like common use case practice feature today pass fancybutton instead fancybutton renders button buttongroup clone fancybutton element add buttonstyle prop fancybutton instead fancybutton nt necessarily take buttonstyle could take totally different set props typechecks cloneelement nt primary value see curious see value proposition enforcing", "d": "10/2017"}, {"body": "tend avoid much main goal example take want allow children nt want teach exists allow explicit claim renders proptype say want children either render", "d": "10/2017"}, {"body": "buttongroup care fancybutton returns button guarantee allows otherwise", "d": "10/2017"}, {"body": "application easily see helping enforce css constraints eg kinda enforce contain immediate children yet see else would useful since rendered child opaque interface directly", "d": "10/2017"}, {"body": "sophiebits gaearon design consideration nt want devs able freely put whatever want wherever want restricting buttongroup buttons devs ca nt naively stick dropdown menu something buttongroup perhaps common pattern us proptype called textlike allows string component internal translation component component internal design library however lots wrapper components might render custom hardcoded props let say want usable wherever allowed without embed knowledge inside proptype", "d": "10/2017"}, {"body": "subtyping vs nominal typing sometimes makes sense add restrictions wo nt technically fail organizationally fail", "d": "10/2017"}, {"body": "restricting buttongroup buttons devs ca nt naively stick dropdown menu something buttongroup yes bad happens fine answer nothing primarily documentation enforced code want make sure missing anything wherever allowed authoring component whenwhy would want restrict children allow kinds text components seems css argument even since heading likely different appearance text", "d": "10/2017"}, {"body": "bad thing interface inconsistent designers without realizing users sad got nothing css want entire codebase restricted possible heavily use custom children proptypes already nontext allowed people devsengspms put icons nt accessible abuse existing styling use containers layout often breaks various responsive breakpoints employ multitude subpar ux patterns without realizing want nothing permitted except knowngood patterns rendertypes anything provides similar functionality help close remaining loopholesawkward surfaces approach", "d": "10/2017"}, {"body": "bit worried add turn cargo cult people adding case understand initial use case bit awkward api decorating child components actual use case validating parentchild relationship obvious looking api", "d": "10/2017"}, {"body": "fair criticism solution made sense another way meet use case would obviousintuitive", "d": "10/2017"}, {"body": "seems like would easy fix clearing container suggested indeed ca nt really unit test occurs manual test want send pr", "d": "10/2017"}, {"body": "ah sorry missed one happy make pr get today sure test see", "d": "10/2017"}, {"body": "let track rewriting tests via public api", "d": "10/2017"}, {"body": "nt appear issue using new portal api", "d": "10/2017"}, {"body": "unable reproduce issue sullenor reported latest react release issue fires single change event per input seems still problem investigate separately thanks", "d": "10/2017"}, {"body": "\u30c4", "d": "10/2017"}, {"body": "could also use set flag reactdevtoolsglobalhook object icon devtools extension could use indicate misconfigured build sounds reasonable", "d": "10/2017"}, {"body": "seems like stalled nt feel strongly fixing said happy remove misleading example somebody sends pr", "d": "10/2017"}, {"body": "reference made quick effort resolving", "d": "10/2017"}, {"body": "fixed react", "d": "10/2017"}, {"body": "mentioned associated pr documentation source code reactjsorg lives different repository reactjsreactjsorg going close issue", "d": "10/2017"}, {"body": "agree better document expected cause side effects synchronously update state willupdate willreceiveprops hmm gaearon nt okay call changed since last checked", "d": "10/2017"}, {"body": "thank filing issue raising concerns documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue closed associated pr added comment explaining also moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "happy take pr nt see sense keeping issue open", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "aweary think mean fixed", "d": "10/2017"}, {"body": "iansu thanks copypaste error", "d": "10/2017"}, {"body": "closing duplicate already closed", "d": "10/2017"}, {"body": "documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue please feel free open pr new repository suggestions improve documentation like discuss proposed changes first please open issue talk", "d": "10/2017"}, {"body": "fixed released", "d": "10/2017"}, {"body": "think better place", "d": "10/2017"}, {"body": "unlikely implement way parentchild introspection pretty niche use case providing api would break key invariant react tree understand writing custom renderer seems excessive renderer api exposed lot easier thanks", "d": "10/2017"}, {"body": "also super secret coroutine api might helpful yielding data child back parent exposed publicly yet ways hack around really want live edge", "d": "10/2017"}, {"body": "gracias mis amigos", "d": "10/2017"}, {"body": "new might know talking suppose component state set internally using changes timer maybe requeries weather given date periodically would actual behaviour expectation widget render method called changes example parent component rerenders passes different value weather render method called whenever parent rerenders purely weather render method called whenever changes state component ie whenever refetches data wrong wrong nt read next paragraph time please let know wrong right render thing regardless give props renders div date render function matter child component changing periodically like feels roughly equivalent const weather rmemoize date gt return day format date weather render gt weather date const date datenow expect weather date weather date tobe true expect weather date weatherrender weather date weatherrender tobe false weather function pure nt care weather impure returning render function right full disclosure walked conversation facebook may waaaay league", "d": "10/2017"}, {"body": "nt heard many complaints error wording straightforward plus gives list keys component stack trace think clear enough unless specific feedback", "d": "10/2017"}, {"body": "second huge number buttons text tictactoe game actually fixed since issue reported datatable table think table div elements css says table make accessible one needs use table tag th tag tr tag td tag fantastic article make html tables please correct wrong aria attributes also valid alternative actual html incorrect documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue flarnie done accessibility auditing new reactjsorg website sure still improve create issue new repo reactjsreactjsorg let continue discussion", "d": "10/2017"}, {"body": "answer question since asked please correct wrong aria attributes also valid alternative actual html incorrect technically valid discouraged since aria came rules aria appeared accompany aria use first rule aria native html carry necessary semantics use aria reasons tend browsers exposed native html nearly years depending tag aria newer bugs browsers properly exposing aria browsers properly exposing native html elements aria spec also changing rapidly html semantics time using pile divs plus bucket aria code write maintain read refactor code break say bit fragile right writing tests example use span rolebutton etc instead button tag writing tests ensure refactoring lose focusability button name event listener spacebar things harder lose native button reasons yes technically pile divs aria attributes roles damn near every tag could allowed technically accessible done correctly end user would know difference ew", "d": "10/2017"}, {"body": "browsers exposed native html nearly years depending tag aria newer bugs browsers properly exposing aria browsers properly exposing native html elements aria spec also changing rapidly html semantics seems like important point admittedly one familiar chance references show support percentages like curious learn time using pile divs plus bucket aria code write maintain read refactor hand nt convincing argument easily imagine scenarios work use aria eg like button one mentioned ones less work use aria often case tables choice better development maintenance perspective casebycase page linked says visual design constraints rule use particular native element element styled required experience generally motivator divsaria roles preferred traditional elements", "d": "10/2017"}, {"body": "accessible version little bit look tutorial worth massive complexity aria brings project know many companies big companies try get away using aria one small problem whole table becomes unusable using screen reader would never know one wishes use aria imperative screen reader user test several screen readers several browsers using aria like trying version css completely new syntax css without looking results using html using widgets look fantastic box incomprehensible html widgets look bad buttons x labeled trick copy paste webpage text document see pretty much screen reader sees layout words get little like edit fields say edit buttons word button end copy paste method shows worst errors", "d": "10/2017"}, {"body": "btw title change say tutorial example accessible docs beautiful never read amazing documentation framework nt even know need tutorial docs lol", "d": "10/2017"}, {"body": "hey frastlin let continue chat new issue one closed since docs moved new repo", "d": "10/2017"}, {"body": "bvaughn choice better development maintenance perspective casebycase yes though nt seen faketableariadup code table things ymmv page linked says visual design constraints rule use particular native element element styled required experience generally motivator divsaria roles preferred traditional elements yes almost always form controls since browsers tend disallow styling os takes big hand styling get ariadupthewahoo dropdown tag would worked instances ca nt style options browsers even styling main body takes bunch hacks means though developer responsible things select would automagically collision detection work mobile oses dealing onscreen osbased keyboard appearingdisappearing script behaviours lot teams willing work default styles fugly css ca nt job even shadowdom nt looking like option either table harder sell team willing add extra code tests whatnot indeed ultimately decision open edgecase bug reports also recommend developers prototyping locally part tech stack pushing run accessibility testing tools catch things like mismatched aria parentchild roles roles child roles required parent roles since becomes thing structures like tables get created purely aria yeah might need actually go test screen reader since currently getting benefit aria screen magnifiers dragon bit well one place seen interesting take aria tables responsive table knowing changing css display states table removed table semantics several browsers booo firefox safari booo seen team use list markup aria minimum screen sizes plus css turn list table desktop sizes small show useful table aria roles removed user ends semantic slightly complex list weird neat idea anyway frastlin using html using widgets look fantastic box incomprehensible html widgets look bad oh form controls look pretty terrible p", "d": "10/2017"}, {"body": "let continue chat new issue", "d": "10/2017"}, {"body": "let make sure also fix testing linting running flow really anything broken", "d": "10/2017"}, {"body": "gaearon scripts running correctly expect linc windows nt grep command prettierall long command issue screenshots left windows right ubuntu windows nt grep command issue long command pr output rest fixed pr windows ubuntu", "d": "10/2017"}, {"body": "longer reproduce issue latest releases", "d": "10/2017"}, {"body": "looks nice changed website interested filed new issue", "d": "10/2017"}, {"body": "close nt goal gcc compatible yet rather like gcccompile need fix issues part work prefer track issue", "d": "10/2017"}, {"body": "longer issue react", "d": "10/2017"}, {"body": "link longer appears docs", "d": "10/2017"}, {"body": "would like test see still broken", "d": "10/2017"}, {"body": "let track", "d": "10/2017"}, {"body": "resolved react", "d": "10/2017"}, {"body": "yes thanks", "d": "10/2017"}, {"body": "thinking based checking browser stats nt provide full list least provides list browsers definitely need support things list need discuss hoping list least helpful baseline definitely supported full support chrome last available xpvista firefox esr ie safari edge probably supported full support safari chrome seeing bunch traffic windows sure probably ok support safari sure definitely supported would nice enumerate means anything work", "d": "10/2017"}, {"body": "determining current firefox esr found downloads page helpful", "d": "10/2017"}, {"body": "changing context works nt think properly exposing current form goal said probably get rid masking hijack issue track", "d": "10/2017"}, {"body": "nt know means long prevent wasted renders based props state context happy camper something automatically handled even better", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "nt think likely", "d": "10/2017"}, {"body": "gone back forth currently think much churn ecosystem little gain quoting feel like ship sailed ton libraries react ecosystem already rely better worse changing involve ton churn worse change people update configs code silently fail deadcode eliminate popular bundlers like webpack also mention regarding environment react ships separate entry points production commonjs bundles alias bundles force production environment even says otherwise workaround", "d": "10/2017"}, {"body": "confirm whether still happens master native web components wc support borked fixed master", "d": "10/2017"}, {"body": "first also observed first hand react today also confirmed fellow opened related issue wrote working temporary fix see use case web components react applications considering using react building complicated web components delivered platforms thinking wordpress bloggers similar", "d": "10/2017"}, {"body": "problem created component react want include sites similar iframe way work retarget events think realy hurts performace", "d": "10/2017"}, {"body": "react use event delegation listen clicks react components imagine shadow boundary would get way want make sure understand problem", "d": "10/2017"}, {"body": "seems like nt seen much confusion area probably worth spending extra doc warning space thus confusing people nt problem common ones", "d": "10/2017"}, {"body": "thank consideration", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "clear good solution problem solutions compared elements nt changed trying short circuit rendering force skipping maintaining cache elements react bail reconciling constant elements hand really want particular child might well wrap class components get refs particular one index react already lets way hope helps", "d": "10/2017"}, {"body": "elements nt changed trying short circuit rendering force skipping maintaining cache elements react bail reconciling constant elements handle constant hoisted elements nested components children might return different snapshots bail point hoisted element would nt uninternationally also short circuit child components could update render heuristic intentional regard", "d": "10/2017"}, {"body": "yes intentional wo nt work something child tree depends prop mutation descending without actual new element created", "d": "10/2017"}, {"body": "beautiful", "d": "10/2017"}, {"body": "see warning nested case react nt know fixed good know", "d": "10/2017"}, {"body": "somewhat related discussion", "d": "10/2017"}, {"body": "nt support close experiencing problems versions please file new bug full instructions reproduce example", "d": "10/2017"}, {"body": "python somthing called deprecation warning proptypes warning since april automated codemod change code link", "d": "10/2017"}, {"body": "provide complete example pass array children third argument lack keys get warning avoid thing jsx passing child variadic arguments case consider content static like never change child order thus ask keys hope helps please create new issue complete example could run", "d": "10/2017"}, {"body": "think correct fix emit different warning set case want suggest empty array rather empty string", "d": "10/2017"}, {"body": "submitted proposed fix pull request", "d": "10/2017"}, {"body": "hendeca looks like pr approved", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "case different providers order incorrect hence errors raised facing warning try reordering nested providers kind dependency concise order", "d": "10/2017"}, {"body": "yes bug misunderstanding indeed passing set browser", "d": "10/2017"}, {"body": "perf addon removed react might revive point relevant anymore", "d": "10/2017"}, {"body": "let track", "d": "10/2017"}, {"body": "zpao still good time", "d": "10/2017"}, {"body": "chatting sophiebits couple weeks ago planning getting guess let try knock next week", "d": "10/2017"}, {"body": "remaining items moved", "d": "10/2017"}, {"body": "seems like issue due user mistake calling function instead passing closing", "d": "10/2017"}, {"body": "react perf work react might resurrect point clear work new algorithm case close", "d": "10/2017"}, {"body": "perf addon nt work react anyway close", "d": "10/2017"}, {"body": "seems like unrelated react react fault let us know reopen", "d": "10/2017"}, {"body": "yeah bug react sorry taking time", "d": "10/2017"}, {"body": "nt think understand original request helps solve general problem hot reloading knowing enough need know whole key path think developing system builtin notion stores already bigger react might well attach implicit keys override attach bigger issue related hot reloading think let close one", "d": "10/2017"}, {"body": "know", "d": "10/2017"}, {"body": "yep explained intentional lets us differentiate dynamic children need ask specify keys static children know order never changes jsx transform relies", "d": "10/2017"}, {"body": "actually went way show stack cases good thing stack enable babel plugin development see filenames line numbers think valuable enough warnings show component stack specific suggestions improve stack format please file issue thanks", "d": "10/2017"}, {"body": "close duplicate", "d": "10/2017"}, {"body": "inside supported guess could warn nt seen people practice get reports like maybe could", "d": "10/2017"}, {"body": "fixed docs", "d": "10/2017"}, {"body": "react get infinite loop example", "d": "10/2017"}, {"body": "yep implement custom need control", "d": "10/2017"}, {"body": "react released official support error boundaries fully supported client side supported server side since would incompatible forwardonly streaming server side use nt obscure errors though", "d": "10/2017"}, {"body": "think could try react report whether issue still exists", "d": "10/2017"}, {"body": "gone", "d": "10/2017"}, {"body": "seems like nt need anything side let know misunderstood", "d": "10/2017"}, {"body": "something nt remember close somebody curious bet acdlite answer", "d": "10/2017"}, {"body": "pretty certain issue nt exist react wrong please let know", "d": "10/2017"}, {"body": "react uncaught error find module reactdomlibreactperf webpackmissingmodule indexjs eval indexjs", "d": "10/2017"}, {"body": "react currently support react perf addon please read announcement blog post mentions", "d": "10/2017"}, {"body": "heads react hack wo nt work internal property names changed might work though js function getreactlisteners node function getprops let key node keystartswith reactinternalinstance return node key memoizedprops return null node nodewrappedjsobject node let handlers let props getprops props let name props namestartswith let prop props name let listener propreactboundmethod prop return handlers note might give wrong one pooled two alternating buffers easy way tell current one", "d": "10/2017"}, {"body": "provide better message quite related seems react tries put component jsx like component also reactcreateelement simply swallowed think warning would useful see also fixed", "d": "10/2017"}, {"body": "need reproducing example", "d": "10/2017"}, {"body": "closing since reactperf available react might resurrect future clear work new algorithm view wasted time chrome performance tools functionality right see performance tab components rerendering give idea something rerenders nt also use highlight updates checkbox react devtools highlight updating components note works correctly react higher", "d": "10/2017"}, {"body": "add component stack like warnings", "d": "10/2017"}, {"body": "gaearon like try one firsttime contributor react project pointers would appreciated", "d": "10/2017"}, {"body": "example warning includes component stack test warnings contenteditable warning see nt include stack add relevant test change also test warning message single word like presence stack hope helps", "d": "10/2017"}, {"body": "thank give shot later today", "d": "10/2017"}, {"body": "agree bit confusing actually think fix later want make site dynamic every field become readonly spam warnings better use beginning case also serializes markup completely avoids warning problems", "d": "10/2017"}, {"body": "ca nt reproduce maybe temporary issue got solved still repro please provide example", "d": "10/2017"}, {"body": "go facebook messenger right chrome mac behaviour still input string flflflflf message field try move caret using arrow keys right left", "d": "10/2017"}, {"body": "oh wow right tried different place mistake look like bug reproduce isolated example", "d": "10/2017"}, {"body": "cc flarnie case known issue draft", "d": "10/2017"}, {"body": "tried different apps lying around last one reproduce uses react reactdom version tried creating new fresh app using react reactdom nt able reproduce problem yet assuming inputs example app controlled although nt matter last time looking maybe actually fixed", "d": "10/2017"}, {"body": "still happening messenger since uses could draft issue rather react issue", "d": "10/2017"}, {"body": "nt use draft first encountered using older apps currently reproduce also remember making really barebones app still exhibited strange behaviour happened check facebook messenger trying think high profile app would use latest react help ideas ways get information", "d": "10/2017"}, {"body": "playing around facebook messenger noticed seems related handling f character lowercase try string fffffff get behaviour lowercase english norwegian character produces behaviour simply repeated f inserted next l characters also get strangeness nt found pairing reproduces problem maybe could clue", "d": "10/2017"}, {"body": "new knowledge try reproducing vanilla react", "d": "10/2017"}, {"body": "since data changing every single render much speed react staying declarative model first option declarative always going slower second option imperative practice bump issues like good idea ensure use fast production version use virtualization avoid rerendering necessary sometimes resort imperative escape hatches like hope helps", "d": "10/2017"}, {"body": "browser event thing think possible us detect case without convoluted hacks", "d": "10/2017"}, {"body": "comment referenced really old would nt read much since react changed lot last years meanwhile would great docs specified componentdidmountupdate use requestanimationframesettimeout access rendered dom sure understand necessary could elaborate didmount didupdate called changes flushed dom synchronously access refs backing dom elements methods documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue let reopen new issue repository continue discussion still interested", "d": "10/2017"}, {"body": "bvaughn methods get called changes flushed dom irrelevant problem get called first browser painting happens give example element set property report incorrect values however correct values get reported wrap code retrieving values", "d": "10/2017"}, {"body": "element set property report incorrect values however correct values get reported wrap code retrieving values point repro shows behavior chance methods get called changes flushed dom irrelevant relevance pointing required access dom elements cdmcdu elements already exist accessible updating docs say add async delay accessible dom elements might give incorrect impression elements nt created appended yet lifecycle hooks called", "d": "10/2017"}, {"body": "sorry looks like hasty solve problem particular case nailed padding causing problem reason clientwidth received cdm smaller total padding amount surrounding component maybe gets painted first without padding accurate obtained bit later attach fiddle reproduce", "d": "10/2017"}, {"body": "caused style chance something may inherited parent style may changed okay thanks", "d": "10/2017"}, {"body": "nevermind issue caused something else sorry", "d": "10/2017"}, {"body": "happens", "d": "10/2017"}, {"body": "yes refs free making always available going hurt performance memory usage maybe future could solved", "d": "10/2017"}, {"body": "required string refs eventually get deprecated anyway encourage generate objects directly", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue created issue new repo already think related let continue discussion new issue", "d": "10/2017"}, {"body": "aweary thoughts", "d": "10/2017"}, {"body": "issue seems line seems like noop cases lack comment makes bit tough understand even see sets value guarded think space bit afraid change without understanding", "d": "10/2017"}, {"body": "jquense know something sideeffect produces something called value detachment term stole sophiebits assigning value attribute changes value property check codepen still seems fixable map possible sequences assignments see easily avoid needing also worth identifying line forces validation required date inputs", "d": "10/2017"}, {"body": "nt think term either maybe jimfb", "d": "10/2017"}, {"body": "looks like still need following test defaultvalue uncontrolled input gt var container documentcreateelement div var node reactdomrender container expect nodevalue tobe reactdomrender container expect nodevalue tobe expect nodedefaultvalue tobe remove line setting defaultvalue changes value property error far react concerned think could debated correct behavior remove check defaultvalue would change set different value user interacted determine relatively static may reasonable trade alternatively wonder could perform detachment input never changed input receives new defaultvalue prop sounds mechanical complicated", "d": "10/2017"}, {"body": "love html api changing validation state", "d": "10/2017"}, {"body": "almost fix investigating unhelpful error set pick tomorrow", "d": "10/2017"}, {"body": "huh got use instead review", "d": "10/2017"}, {"body": "ran adding reactredux app made using aspnet core template template splits webpack config two separate configuration files need modify array put top order get work also fully clean environment namely delete folder rebuild project order changes get properly picked", "d": "10/2017"}, {"body": "hard tell something without example", "d": "10/2017"}, {"body": "hard time convincing something react would say likely browser issue encourage recreate vanilla js test still experience convinced reactonly please file new issue test cases verify", "d": "10/2017"}, {"body": "would surprised case since apps would break therefore probably something localized app since reproducible test case issue way verify happened closing", "d": "10/2017"}, {"body": "fixed best results use plugin development", "d": "10/2017"}, {"body": "got rid", "d": "10/2017"}, {"body": "since fixed", "d": "10/2017"}, {"body": "hard say issue since provide reproducible example regardless sounds like browser issue related react", "d": "10/2017"}, {"body": "specific use cases always expose need learn", "d": "10/2017"}, {"body": "think already expose portals react native", "d": "10/2017"}, {"body": "haha realize wonder anybody tried use yet", "d": "10/2017"}, {"body": "still nt think currently way make new container short making new root view native land starts new tree automatically", "d": "10/2017"}, {"body": "think insert root view manually register tag without rendering need native though makes sense need build wrapper manage gets inserted", "d": "10/2017"}, {"body": "think support immutable dom nodes sometimes need keep state associated weakmaps supported everywhere", "d": "10/2017"}, {"body": "react nt use checksums anymore", "d": "10/2017"}, {"body": "seems like bringing something back dead gaearon idea disable class transforming babel using preset fragment thanks time", "d": "10/2017"}, {"body": "use react preset babel wo nt transform classes unless babel config parent directories eg webpack options", "d": "10/2017"}, {"body": "think intend support seems like relatively uncommon request easily work around using applying", "d": "10/2017"}, {"body": "works react", "d": "10/2017"}, {"body": "warn react", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue already created issue new repo relates let move discussion", "d": "10/2017"}, {"body": "migrating", "d": "10/2017"}, {"body": "love contribute would assign issue get started thank", "d": "10/2017"}, {"body": "nt think anyone assign something go ahead pick something looks good go said issue really migrated new docs site repo", "d": "10/2017"}, {"body": "migrated interested picking guides let talk new issue make inprogress", "d": "10/2017"}, {"body": "fairly happy context name already unnecessarily relying proptypes defining context relationship nt think go direction fact probably decouple future since many people nt use proptypes", "d": "10/2017"}, {"body": "sure proper place post react documentation creative commons licensed end leads github page", "d": "10/2017"}, {"body": "yeah think licencedoc removed commit maybe remove paragraph migration document website", "d": "10/2017"}, {"body": "documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion", "d": "10/2017"}, {"body": "rolled", "d": "10/2017"}, {"body": "think fixed", "d": "10/2017"}, {"body": "reproduce original case react", "d": "10/2017"}, {"body": "nt show particular warning anymore thoughts future similar warning please post", "d": "10/2017"}, {"body": "still relevant", "d": "10/2017"}, {"body": "coming back old one entire purpose unit testing test isolated component obviously soon component depends context ca nt purely isolated still setup wrapping component may set context bit counterintuitive context unit testing guess would really nice reacttestrenderer would actually allow get rid step", "d": "10/2017"}, {"body": "nt maintain addon anymore", "d": "10/2017"}, {"body": "sounds like right explanation", "d": "10/2017"}, {"body": "tracking windows fixes build system let make sure fix tests", "d": "10/2017"}, {"body": "clarify attributes work react need specify explicitly different unknown attributes treat booleans different ways eg considered truthy ask explicitly specify strings", "d": "10/2017"}, {"body": "ah thanks clarification gaearon", "d": "10/2017"}, {"body": "indeed thanks gaearon", "d": "10/2017"}, {"body": "thank", "d": "10/2017"}, {"body": "seems like tag support generally flaky sure anything would suggest detecting ie showing fallback content", "d": "10/2017"}, {"body": "could get whole world drop ie good", "d": "10/2017"}, {"body": "well hopefully wo nt take long die", "d": "10/2017"}, {"body": "still issue", "d": "10/2017"}, {"body": "gaearon nope", "d": "10/2017"}, {"body": "greatly appreciated documenting pulling hair input getting focus", "d": "10/2017"}, {"body": "note use talking dom use", "d": "10/2017"}, {"body": "pretty broken general since react offer firstclass portal api replaces suffer interleaving issues", "d": "10/2017"}, {"body": "see work react closing please provide reproducing case", "d": "10/2017"}, {"body": "still happens", "d": "10/2017"}, {"body": "syranide workaround works great everybody else might need aware difference pick one fit needs", "d": "10/2017"}, {"body": "closing enough info help", "d": "10/2017"}, {"body": "works", "d": "10/2017"}, {"body": "hi update also would helpful changing global theme app", "d": "10/2017"}, {"body": "updates issue might look months", "d": "10/2017"}, {"body": "seems like less issue let keep discussion", "d": "10/2017"}, {"body": "think ever something like public api possible something like compile target trueadm experimented inferno think gave lot benefit real products compared benchmarks might wrong", "d": "10/2017"}, {"body": "jtadmor one way deal use hoc js const compwithmessage message gt props gt const mycomp compwithmessage message always one string though get tired extra step instantiate hocs wish compiler would hoist props constant including functions nt depend variables scope like entire element subtrees constant even reconciliation nt skip comparing constant props hoisting would prevent reconciliation thinking anything changed", "d": "10/2017"}, {"body": "really necessary strings immutable anyway guess would make sense objects instead", "d": "10/2017"}, {"body": "trueadm yes functions main reason things like hocs begin think", "d": "10/2017"}, {"body": "case would easier hoist functions safe thus ensure identity come workarounds react", "d": "10/2017"}, {"body": "gaearon true optimizing compiler label babel plugins type compiler within react", "d": "10/2017"}, {"body": "generic label potential optimizations reactaware compiler could necessarily existing ones", "d": "10/2017"}, {"body": "warn devtools working well also docs", "d": "10/2017"}, {"body": "sure would still reproduce since rewrote shallow renderer actually changed behavior browser keep two nodes rely behavior though completely unsupported two siblings react reserves right keep duplicate omit one something inconsistent case strictly warn", "d": "10/2017"}, {"body": "switching switches input uncontrolled react warns think happens next click manually browser toggles uncontrolled see changing whereas simulate event nothing happens click handler switched uncontrolled mode real click warning suggests use unless mean component uncontrolled case keep uncontrolled whole lifetime hope helps", "d": "10/2017"}, {"body": "related insertion order juggle react ieedge perf nt anymore react assume fixed please file new issue thanks", "d": "10/2017"}, {"body": "seems like fixed somehow", "d": "10/2017"}, {"body": "still issue react", "d": "10/2017"}, {"body": "fwiw solve problem fb agree firstclass api would nice", "d": "10/2017"}, {"body": "nt use code anymore also react explicitly asks polyfill map use elsewhere", "d": "10/2017"}, {"body": "active discussion close", "d": "10/2017"}, {"body": "landed react another issue blocking rendering let close one", "d": "10/2017"}, {"body": "see us changing much ecosystem already depends convention churn dangerous changing anything likely result breaking people dead code elimination pipelines react ships separate entry points production commonjs bundles alias bundles force production environment even says otherwise", "d": "10/2017"}, {"body": "gaearon alright thanks update", "d": "10/2017"}, {"body": "seems like temporary issue nothing side", "d": "10/2017"}, {"body": "removed reactperf might readd later need rewrite anyway", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "closing stale", "d": "10/2017"}, {"body": "nt seem like happens", "d": "10/2017"}, {"body": "work react support unknown attributes please file new issue minimal reproducing example", "d": "10/2017"}, {"body": "problem methods take dom nodes arguments need first get dom node component pass example like", "d": "10/2017"}, {"body": "please file discuss react native community instead rn maintainers okay could take pr implementing", "d": "10/2017"}, {"body": "sounds interesting nt checksum validation anymore still need report differences mentioned approach let keep discussion", "d": "10/2017"}, {"body": "need full example reproducing look", "d": "10/2017"}, {"body": "confirm still happening react", "d": "10/2017"}, {"body": "looks like perf gone fiddle nt run running minimal example requirebin link seems fixed", "d": "10/2017"}, {"body": "thanks checking yea nt figured recreate perf new engine yet assumptions nt really hold true async case", "d": "10/2017"}, {"body": "also thanks backbone packages first open source js packages used life", "d": "10/2017"}, {"body": "glad help huge fan redux means lot", "d": "10/2017"}, {"body": "vanilla dom event work", "d": "10/2017"}, {"body": "sure executed snippet react works closing issue", "d": "10/2017"}, {"body": "still able reproduce issue react react", "d": "10/2017"}, {"body": "reproduce probably fixed chrome bug", "d": "10/2017"}, {"body": "pretty conservative adding deps think useful us thanks", "d": "10/2017"}, {"body": "investigation topic really annoying still problems custom components", "d": "10/2017"}, {"body": "working makes sense change behavior useful one react however require somebody actual research different options weigh pros cons come comprehensive proposal changes want see would like start working", "d": "10/2017"}, {"body": "happy help much react expert think pretty good idea things work custom element side wondering thought toward supporting model preact uses would help could put together doc outlines approach", "d": "10/2017"}, {"body": "happy help implement changes react plan formulated", "d": "10/2017"}, {"body": "yes doc proposal would help concern know preact model adding new property base class platform would become breaking change reactpreact users", "d": "10/2017"}, {"body": "gaearon ok put together doc ping thread review ready", "d": "10/2017"}, {"body": "sounds good robdodson thx doc idea", "d": "10/2017"}, {"body": "think got doc written reaching couple people feedback draft able share next week", "d": "10/2017"}, {"body": "sweet thanks", "d": "10/2017"}, {"body": "getting increasingly skeptical properties model infeasible use properties current ecosystem seems alternative feature test property use attribute basically prevents dom adding new properties least nodeelementhtmlgenericelement possibly even subclassing enabled since property added parent class switch use maybe could hasownproperty even would sketchy break many use cases serverrendering story custom elements way knowing property translates equivalent attribute even names render attributes add properties client seems two namespaces ca nt reliably combined alternative provide two namespaces react really idiomatic", "d": "10/2017"}, {"body": "possibly even subclassing enabled according customized builtin elements add new attribute names ones cover subclassing concern form subclassing concerned basically prevents dom adding new properties least nodeelementhtmlgenericelement seem like potential problem though also moment time may browser differences example global attribute currently supported firefox automatically added dom property chrome currently part html specification nt know get removed see seems quite possible cases global property additions future potentially would introduce breaking changes custom element implementations well react strategy basing attributeproperty decision property existing", "d": "10/2017"}, {"body": "seems two namespaces ca nt reliably combined alternative provide two namespaces react really idiomatic agree would nt idiomatic specified jsx via sort subdivision props subobjects eg thispropsattributes thispropsproperties etc providing api application code inform semantics custom element eg could object similar htmldompropertyconfig properties defined custom element rather platform still use properties defined platform", "d": "10/2017"}, {"body": "posted rfc discuss pros cons different options", "d": "10/2017"}, {"body": "kevinslin problem commenting unrelated issue never know problem since nt always check notifications known issues problem overall approach particular warning missed actionable since nt reported directly read comment year later close issue react allows return types give better messages component stack traces", "d": "10/2017"}, {"body": "clear expected warnings fire earlier might actionable errors fire later example refs warning includes component name stack traces", "d": "10/2017"}, {"body": "recent discussion", "d": "10/2017"}, {"body": "traversal", "d": "10/2017"}, {"body": "find see pull requests username", "d": "10/2017"}, {"body": "gaearon stale worked totally correctly unfortunately ever heard pushback seemed like simpler solution possible reexamined work several times see solutions feasible repeatedly came conclusion happy talk code follows general pattern necessary also came conflict longstanding request nuclide team regarding event bubbling nested roots necessarily version react nt looked see resolution issue", "d": "10/2017"}, {"body": "believe get fix free switch native events vs polyfill provided event bubbling nt wonky across roots normally", "d": "10/2017"}, {"body": "jquense could clarify reason polyfilled lack support native events mouseenter mouseleave events bubble per specification", "d": "10/2017"}, {"body": "quite right polyfill mimics native mousentermouseleave event behavior nt bubble either polyfill older chrome versions nt supported anymore", "d": "10/2017"}, {"body": "jquense saying instead using event delegation mouseenter mouseleave register native handlers underlying native elements nt recall would need done make approach play nice rest event system nt understand wondering event bubbling nt wonky across roots normally bubbling involved matter", "d": "10/2017"}, {"body": "sorry unclear suggesting instead react polyfill events rely native events would remove lot special code exists solely implement events bubbling poor choice words meant react tree traversal required implement polyfill react uses hunch avoid lean native events like dom events bug go away course may p", "d": "10/2017"}, {"body": "definitely worth consideration one thing lose ability batch think pretty edge case relevant single mouse event issued mouse moved way trigger one handler eg two boxes occupying screen space enter handlers mouse crosses boundary currently able single rerender would settle triggering one still necessary think hook native handler browsereventemitter", "d": "10/2017"}, {"body": "error exist anymore react", "d": "10/2017"}, {"body": "andreioprisan think issue readonly flag", "d": "10/2017"}, {"body": "gaearon question snippet posted really necessary manually remove event listener listener attached node directly wo nt removed automatically along node upon unmount know antipattern got curious would nt snippet suffice class mycomponent extends reactcomponent componentdidmount thisnodeaddeventlistener render return", "d": "10/2017"}, {"body": "case used html p p p tag nested webpack dev server works without error build project run code express ssr server side rendering error logged even though disable ssr component problem solved change parent tag solved problem", "d": "10/2017"}, {"body": "whatever cause error ca nt possibly happen react code rewritten also nt use comment nodes closing still experience similar error upgrading perhaps different message please file new issue reproducing example", "d": "10/2017"}, {"body": "think leave wontfix unless somebody motivated takes sends pr actually makes work", "d": "10/2017"}, {"body": "web living standard since jsx compiled html misunderstanding jsx compiled html compiled js meant represent ui components render react still uses js hood used browser js dom apis nothing react know automatically update attributes react decision browsers work obvious react update attributes tried cases due popular requests turned rabbit hole edge cases inconsistencies sure continue future please rely react changing attributes dom case reasonable thing search", "d": "10/2017"}, {"body": "react handles errors user code gracefully emit cryptic errors", "d": "10/2017"}, {"body": "get uncaught promise typeerror read property replacechild null see crashed explained means code dependencies using swallowing original error verify enabling break caught exceptions debugger closing react released surfaces original error even code accidentally swallows hopefully help people particular error happen anymore either", "d": "10/2017"}, {"body": "agree documented creating array elements reactcreateelement nt sure specify key nt question would nt answer documentation also would happen fi pass children prop also children third argument would take priority would result would throw error seems like loose ends need cleaned", "d": "10/2017"}, {"body": "documentation changes please file issue", "d": "10/2017"}, {"body": "affect propagation react event react component hierarchy", "d": "10/2017"}, {"body": "somebody confirm still happens react", "d": "10/2017"}, {"body": "never jest moved away automocking doubt add hacks jest core either", "d": "10/2017"}, {"body": "repro chrome maybe old chrome bug got fixed", "d": "10/2017"}, {"body": "gaearon chrome fine however safari still affected version macos", "d": "10/2017"}, {"body": "seem like common point confusion close", "d": "10/2017"}, {"body": "deleted need figure something future releases closed", "d": "10/2017"}, {"body": "face ondoubleclick event nt work ios device works well android iphone nt work also added cursor pointer still luck could issue", "d": "10/2017"}, {"body": "note code earlier comments work react also needed react passes custom attributes including long values strings numbers booleans need written explicitly strings close issue necessary specifically amp please file new one details", "d": "10/2017"}, {"body": "found google case importing", "d": "10/2017"}, {"body": "really relevant anymore", "d": "10/2017"}, {"body": "sound react related let know mistaken", "d": "10/2017"}, {"body": "regression getting issue windows", "d": "10/2017"}, {"body": "please file new issue details old issues lot outdated info hard track", "d": "10/2017"}, {"body": "tried using flow react createreactapp flow type errors nt show createreactapp console play nice standard eslint abandon last bit integration working flow nice use", "d": "10/2017"}, {"body": "nt reactperf need rethink", "d": "10/2017"}, {"body": "feel like ship sailed ton libraries react ecosystem already rely better worse changing involve ton churn worse change people update configs code silently fail deadcode eliminate popular bundlers like webpack", "d": "10/2017"}, {"body": "also mention regarding environment react ships separate entry points production commonjs bundles alias bundles force production environment even says otherwise workaround", "d": "10/2017"}, {"body": "also mention regarding environment react ships separate entry points production commonjs bundles alias bundles force production environment even says otherwise workaround", "d": "10/2017"}, {"body": "still issue original code would load videos would nt play ios fixed produces laggy experience video nt play immediately javascript class video extends component componentdidmount thisupdate see difference going ios desktop nt tried android", "d": "10/2017"}, {"body": "sorry check still reproduces react", "d": "10/2017"}, {"body": "think api like could make sense imagine might bit chaotic main idea render function generator able next states components would replace maybe could next level declarative nature react right able declarative describing ui looks basing current data approach could able declarative describing everything happen component lifetime complex scenarios could look like component really obvious component look state also next possible thing could happen current version react see possible scenarios possible sequences", "d": "10/2017"}, {"body": "omg sense today world better would use async javascript class userdata extends component render return good morning renderasync async gt const userdata await whendidmount fetchuser thispropsuserid return hello userdatausername gt loading e gt error", "d": "10/2017"}, {"body": "heuristic settled handling transient states dio allow promises render return types amp element types additionally allow promise component describe children render resolves example jsx const something promiseresolve something render loading", "d": "10/2017"}, {"body": "think particular warning anymore react instead detect development builds react devtools", "d": "10/2017"}, {"body": "vast majority cases error caught earlier error application code got swallowed thirdparty library application code react surface original error better case closing still experience upgrading react please file new issue complete reproducing example", "d": "10/2017"}, {"body": "believe fixed", "d": "10/2017"}, {"body": "use case like use method prevent container scrolling user dragging element inside need register event listener nonpassive passive false browsers switching passive true default like able opposite unfortunately able use style applied touch started probably nt effect", "d": "10/2017"}, {"body": "indeed going problem really soon surprised two years solution found creating event listeners manually antipattern react creates breaking changes may missing part story though", "d": "10/2017"}, {"body": "like new event listener signature proposed romulof besides fixing issue described would possible specify eventlisteneroptions", "d": "10/2017"}, {"body": "ran issue canvas user draw drawing android sometimes pull refresh instead paintstroke shows realworld problem avoiding manually use workaround much like approach romulof suggested seems solution also nt require breaking changes", "d": "10/2017"}, {"body": "bobvanderlinden adding canvas style work really shines use case possible values also quite convenient however piotrcz pointed nt universally solve passive events issue whole also running issue preventing container scrolling dragging child element workarounds pretty hacky add technical debt", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "hi folks progress similar jquense mentioned microsoft tracking fixing far populated expected react strips props thereby leaving way access", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "error exist react happen see different error instead please file new issue instructions reproduce thanks", "d": "10/2017"}, {"body": "close since different things discussed hard say status either please file new issue reproducing example still experience problems related", "d": "10/2017"}, {"body": "let track", "d": "10/2017"}, {"body": "think fixed react please file new issue", "d": "10/2017"}, {"body": "apply", "d": "10/2017"}, {"body": "reference solution", "d": "10/2017"}, {"body": "checksum warning checks still use notify differences might add way hook warning system later let track", "d": "10/2017"}, {"body": "nt maintain transitiongroup repository anymore new home", "d": "10/2017"}, {"body": "closing works designed use controlled inputs need ensure flush value changes react exits event handler", "d": "10/2017"}, {"body": "seems reasonable mirror browser api", "d": "10/2017"}, {"body": "like look could affect draftjs post get time", "d": "10/2017"}, {"body": "documentation turning production mode", "d": "10/2017"}, {"body": "close stale could certainly run testutils production mode wanted need bundle react commonjs obvious reasons include production build ship everyone actually regressed tracking", "d": "10/2017"}, {"body": "still issue", "d": "10/2017"}, {"body": "assume transient chrome bug later fixed still occurs please file new issue", "d": "10/2017"}, {"body": "aweary seems onload event getting dispatched supported", "d": "10/2017"}, {"body": "let track", "d": "10/2017"}, {"body": "clear react bug report question close stale problem please file new issue reproducible example preferably without third party libraries well please explain expected happen actually happens", "d": "10/2017"}, {"body": "realize old ticket might idiomatic ways things react hit issue related figured good place comment best way handle situations need measure component mounted prefer avoid need actually call component also dealing custom renderers sure implement furthermore css tricks like visible may apply example mean class mycomponent extends reactcomponent private instancewidth number issues approach bordering like within really since happen first time via cdm still feels icky extra private var dunno feels odd going blip wrong position truly rendered way around think manage via visual tricks like setting opacity love hear thoughts nt right way thanks", "d": "10/2017"}, {"body": "absolutely fine call read something dom supposed pure fact measurement use case one reasons exists react designed use case mind nt blip react processes synchronously avoid problem", "d": "10/2017"}, {"body": "closing stale", "d": "10/2017"}, {"body": "hello would like revive conversation adding another point view wir react possible mount components certain points dom using portals use case building different components like modals notifications rendered certain component mount like appjsx notificationjsx javascript import react react import reactdom reactdom import notificationcomponent notificationjs import singletonoverlay generaloverlayjs export default class notification extends reactcomponent constructor props super props thisstate element null componentdidmount thissetstate element reactdomfinddomnode singletonoverlay render return thisstateelement reactdomcreateportal notification thisstateelement null option would find domnode similar functions pass makes feel unpleasent forced leave reactcosmos therefore would love able search instances certain component pass function instead passing instance mentioned feature im also interested approaches solve problem jimfb would worth feature proposal", "d": "10/2017"}, {"body": "reproduce react", "d": "10/2017"}, {"body": "agree benmmurphy istarkov solution effectively using since nt solve garbage collection problem benmmurphy solution closer nulls wrong variables promise handlers dereferenced key passing function closure dereferences handlers const makecancelable promise gt let cancel gt const wrappedpromise new promise resolve reject gt cancel gt resolve null reject null wrappedpromisecancel cancel return wrappedpromise explanation solution allows garbage collection previous solutions found went ahead turned npm package trashable since use case react made hoc component tracks promises cancels component gets unmounted trashablereact", "d": "10/2017"}, {"body": "noted sophiebits likely use case think create dom element try assign different see one sticks example tell right syntax use helper function uses right syntax based feature test", "d": "10/2017"}, {"body": "close works designed think use controlled inputs expected update value synchronously need example debounce updating value example one might maintain two values state one input one debounced value", "d": "10/2017"}, {"body": "closing stale something fix react please let us know", "d": "10/2017"}, {"body": "end extensible system tried design really work even warnings quite slow development also pretty complicated design better one new engine like begin scoping warning hook first track", "d": "10/2017"}, {"body": "think likely going support anytime soon", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "lt", "d": "10/2017"}, {"body": "seems like particular bug fixed react", "d": "10/2017"}, {"body": "actually gone opposite direction minify even commonjs version production mode lets us apply optimizations would nt otherwise easy consistently regardless bundler consuming side nt expect people need debug react code nt plan provide unminified production mode feel strongly build react source disable minification", "d": "10/2017"}, {"body": "react nt use checksum validation anymore similar problem react please file new issue", "d": "10/2017"}, {"body": "close stale", "d": "10/2017"}, {"body": "unfortunately still issue old browsers unless globally polyfill symbol strategies discussed internally nt make", "d": "10/2017"}, {"body": "nt impression nt support use case could either use global polyfill enable transform", "d": "10/2017"}, {"body": "think many tool authors would happy even one version long gets job done otherwise done implicitly simply reliable worse still works fine modern dev browsers break hardtofind way legacy users hope team consider", "d": "10/2017"}, {"body": "react throw meaningful message gt nested updates", "d": "10/2017"}, {"body": "allow returning updaters prevent update", "d": "10/2017"}, {"body": "thing perfectly acceptable initial value example creating new object initialized w default values server passed component props form requires address address line often optional perfectly aware may may add value completing form suggested workaround seems hackey tell issue causes console warning know ignore warning distracting debugging actual errors", "d": "10/2017"}, {"body": "think first post bit misleading problem null value problem react treats flag make input uncontrolled turned confusing added warning discourage existing users passing null lets us safely change behavior future version treat null empty string nt done yet plan understand right maybe good time mind raising new issue discuss", "d": "10/2017"}, {"body": "gaearon thx", "d": "10/2017"}, {"body": "react nt transformation feel free file issue babel zpao say issue person badge repo downvote nt solution best react practice issue yet possible", "d": "10/2017"}, {"body": "wzup need combative zpao saying nothing react side needs fixed react assigning names functions production expected see minified names whole point minifying removes unnecessary code mangles identifiers development using minification first place minification causing minify developing minification needed ship production version app users finally absolutely need names minified builds assign manually bundle size larger case nothing done react side react issue rather issue locking discussion taking unnecessarily emotional tone feel free file new issue believe bug react handles please provide context think problem negative towards people trying help", "d": "10/2017"}, {"body": "seems like fixed", "d": "10/2017"}, {"body": "jest using supports printing react elements js import prettyformat prettyformat const reactelement reacttestcomponent prettyformatplugins test const renderer const element renderergetrenderoutput const formatted prettyformat element plugins reactelement printfunctionname false", "d": "10/2017"}, {"body": "yes use jest snapshots nowadays", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "attribute nt seem solve react workaround", "d": "10/2017"}, {"body": "use component stack trace would nt expect still problem", "d": "10/2017"}, {"body": "think probably solved portals", "d": "10/2017"}, {"body": "diu bu diu ren", "d": "10/2017"}, {"body": "close since fix also nt care prop order", "d": "10/2017"}, {"body": "henlz perhaps time file new issue reproducing example one pretty stale hard say even related", "d": "10/2017"}, {"body": "gaearon right create one details steps reproduce better discussion", "d": "10/2017"}, {"body": "close one unlikely make meaningful progress issue", "d": "10/2017"}, {"body": "currently exposed future plan batch default", "d": "10/2017"}, {"body": "think close hard type extra hand implicitly lead surprises", "d": "10/2017"}, {"body": "documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg", "d": "10/2017"}, {"body": "react render one element need enclose elements one single tag like case opening div element div closing div element div ie elements enclosed single div element making single element whole react render work", "d": "10/2017"}, {"body": "nt validate checksums anymore", "d": "10/2017"}, {"body": "realize replying comment year old anybody know workaround get scenario mentioned scottnonnenberg working unfortunately gaearon workaround applicable warnings still triggered quick test dan hackaround still seem work far see although realize far ideal example js import proptypes proptypes import react react import reactdom reactdom const customcomponent gt null customcomponentproptypes requiredbool proptypesboolisrequired let counter beforeeach gt customcomponentdisplayname test gt const div documentcreateelement div reactdomrender div test gt const div documentcreateelement div reactdomrender div test result following warnings consoleerror warning failed prop type prop marked required value", "d": "10/2017"}, {"body": "updates still seems inconsistency browser behavior demonstration shows differences adding listeners react plain js chrome react triggers event disabled button nt react nt trigger event parent node safari react triggers event disabled button nt firefox behavior consistent expected browser behavior", "d": "10/2017"}, {"body": "updates would issue would like look happens", "d": "10/2017"}, {"body": "yeah well finding happens hardest part basically react nt listen events probably bubble instead listens event one special case document uses reverse logic element moved sent synthetic mouseleave event element entering sent synthetic mouseenter event mouseout event typically fired move cursor element element viewport also fires move cursor button butting becoming native event react consistently sends event enter disabled button even browser nt consider mouseenter leave disabled button browser except firefox sends mouseout event react nt send left asymmetry next subtle difference wrap disabled button another element chrome still nt fire mouseout events safari fire mouseout event wrapper element possible solutions move cursor away disabled button browsers fire mouseover event disabled button becomes case using reverse logic consistently send appropriate mouseleave event therefore obtaining consistent probably expected behavior browsers react already uses event one special case mouse enters viewport one special case disabled form elements least invasive solution following cons detect user agent needed avoid sending duplicate events keep list node elements problem disabled chrome example disabled textarea nt suffer problem according mdn input types nt either chrome probably ie still miss event parent element size button chrome nt send mouseover event attach listeners node directly nt know possible current event system think remember talks concerning events delegating scroll events document sometimes actually worse performance personally think solution would best one would directly reflect native browser behavior case basically bug produces inconsistency browser behavior may least let decide path take fixing", "d": "10/2017"}, {"body": "thanks analysis nt enough context helpful next person visits try compile list issues need fix", "d": "10/2017"}, {"body": "hmm sure possible javascript directly possible something somewhat similar kin would allow hoc catch accesses undefined properties choose wants handle case may breaking thousand javascript laws concept seems help types situations languages perhaps something simple expecting returned prop either call provider caller expecting method calls function returns value otherwise throwing standard error js class forwardunknown extends component unknownpropaccessed prop thiswrapped amp amp thiswrapped prop return thiswrapped prop render return something along lines would think provide necessary options allow blind passthrough also hoc intelligently handle situation said hoc significantly complex looks like proxies could used provide kind functionality albeit performance hit likely problem", "d": "10/2017"}, {"body": "particular cache nt exist anymore react find others let us know", "d": "10/2017"}, {"body": "closing favor recent discussion", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "think might well consider converging test renderer api", "d": "10/2017"}, {"body": "year passed since last message facebook still pushing irrelevant ads dev console install msn toolbarww browser extension idea put youtube video autoplay stay classy", "d": "10/2017"}, {"body": "mvasilkov irrelevant believe possible install react devtools opera least heard pushing hard developing real apps without devtools pretty complex importance getting newcomers try larger annoyance brings minority users nt need really browser thing eg nt work opera happy add check disables opera specifically let us know", "d": "10/2017"}, {"body": "gaearon still nt see problem adding sort optin method disable message runtime definitely legitimate situations message might ideal even dev environment", "d": "10/2017"}, {"body": "gaearon rossipedia like example angular application", "d": "10/2017"}, {"body": "still nt see problem adding sort optin method disable message runtime method already even though hacky documented think want warning show app always use", "d": "10/2017"}, {"body": "gaearon probably hacky non solution offered especially hook changes since double underscore variable edit also dangerous approach submodule chooses optout opts everything", "d": "10/2017"}, {"body": "also dangerous approach submodule chooses optout opts everything problem added official api fact primary reason api seems unfortunate", "d": "10/2017"}, {"body": "gaearon optin", "d": "10/2017"}, {"body": "making optin defeats purpose people want reach wo nt know opt please try see annoyance affecting broader context think useful benefits ecosystem solution solve original problem", "d": "10/2017"}, {"body": "react developer able bootstrap react app whatever settings want meaning someone like could disable within react instance components would enabled current solution hook global variable really big problem every module type mentality would quickly called console spam", "d": "10/2017"}, {"body": "global hook absolutely understand appreciate value prefer optout instead", "d": "10/2017"}, {"body": "meaning someone like could disable within react instance components would enabled nt understand somehow opted would effect react nonreact consumers way could possibly help behavior global fact advocating global flag pretty much setting global gives agree hacky though open proposals", "d": "10/2017"}, {"body": "clarify nt react instance unless bundles whole react npm rightfully deduplicate react people whose apps already using react nt end two reacts bundle", "d": "10/2017"}, {"body": "like said react developer nt know workflow angular bootstrap multiple applications absolutely separate flag leave log react instance developer could toggle released widget currently global variable able mean bundled react instantiated react application", "d": "10/2017"}, {"body": "gaearon whoa talking dan abramov huge fan repetitive advertising browser toolbar irrelevant js console developer tool use accident actively want use stuff thing promoting developer tool want need also accidental made informed decision nt want could please allow developers choice adfree development environment pretty please imagine developers seeing facebook trendsetter start promoting stuff js console necessarily browser extensions referral links books amazon also thing youtube series lessons beginners would nt awesome download react devtools msn toolbar better development experience funky progress bar coolest thing npm click download new book jquery write like buy amazon check new trending sansserif fonts available google fonts failed load resource net errblockedbyclient consolelog let die together hell", "d": "10/2017"}, {"body": "sieabah sure concepts angular translate react specific api suggestions please let know mvasilkov agree theory practice need educate users devtools higher downsides noise users note two year old issue dozen people complained need invoke slippery slope message years nothing described happened open solving somehow open proposals proposal turn shows interested solving problem holistically including finding another way achieve initial goal educating beginners devtools", "d": "10/2017"}, {"body": "gaearon like said disconnect knowledge angular thing vs react works put simply angular run must bootstrapped essentially angular knows start module module instantiated configuration example module definition may something similar react would module instantiation actual react app could pull devtools module logs nt devtools installed disable logging instantiated application least offers optout method preferred enabled would look variable undefined log", "d": "10/2017"}, {"body": "sieabah know library using react render things loading react without rendering anything latter could change react log first render instead app startup former wo nt help", "d": "10/2017"}, {"body": "sophiebits essentially widget offers login prompt culprit line reactdomjs looking finds environment fbjslibexecutionenvironment application push something executionenvironment something equivalent saying disable logging environment instance believe fair tradeoff logs presented people react app devs publish widgets optout log", "d": "10/2017"}, {"body": "widget brokenbuggy would valuable users know tool debugging", "d": "10/2017"}, {"body": "gaearon still would useful developer choose optout logging narrowed bug would going github creating issue learn need configure debug widget", "d": "10/2017"}, {"body": "think nt expect care built react probably use production react build nt warning wonder currently always using dev build switches depending app prod mode", "d": "10/2017"}, {"body": "sounds like good solution could even offer two options one react users relies app react version one nonreact users includes bundled production react makes sense two audiences might want different apis react component vs imperative api nonreact consumers might build system nt know switch development production versions react", "d": "10/2017"}, {"body": "want pass startup config option whether debugdev mode enabled reliably compiled ahead time also good issue currently want app dev mode using production widget rely nodeenv nt correctly handle case", "d": "10/2017"}, {"body": "hi widget uses prod version react cdn add widget via npm users required bundle applications module bundler use prod mode set processenvnodeenv production make sense", "d": "10/2017"}, {"body": "getting error warning installed version react devtools old work current version react please update react devtools need put instead", "d": "10/2017"}, {"body": "easiest way completely disable something like webpack config disable warning devtools integration nt use webpack equivalents browserify plugin rollup simple string replacement like nt use bundler consume react single file set build step performs similar string replacement bundle sorry still frustrating believe sufficient address problem buildtime flag makes sense runtime one pretty build time flag would look like anyway dependencies use work top react may bundle react production mode see message first place use bundler approach suggested work closing", "d": "10/2017"}, {"body": "see explanation simulates react event fire event listeners added browser api", "d": "10/2017"}, {"body": "close report specify crucial details like os browser version able reproduce lack details assuming transient browser bug", "d": "10/2017"}, {"body": "think somewhat exotic use case unlikely provide hooks probably achieve overriding browser base implementations though", "d": "10/2017"}, {"body": "use since need react synthetic events react starts rendering never mind get point", "d": "10/2017"}, {"body": "react synthetic event handlers called inside browser event handlers react sets want something end every react event might well end every browser event said use case described probably solutions sends change event within sending event getters called store b store needs robust indeed annoying facebook flux implementation lets store express dependencies api lets ensure always processes event b also forbids cycles ie throw try register reverse dependency practice enough protection look derivative architectures lean functional territory eg redux nt many stores instead pure reducer functions result store updates always atomic would completely eliminate problem relying event system whether react browser seems like wrong direction actions could also dispatched inside timeouts ajax callbacks always outside events hope helps", "d": "10/2017"}, {"body": "get warning using tag intended warning tag unrecognized browser meant render react component start name uppercase letter", "d": "10/2017"}, {"body": "wildhoney nt seem right also nt seem happen create isolated example triggers preferably file new issue since easy lose reports old issues", "d": "10/2017"}, {"body": "sorry gaearon probably bit hasty posting message get warning running tests via enzyme perhaps related investigate take action necessary", "d": "10/2017"}, {"body": "oh means unsupported jsdom mind filing separate issue maybe somehow disable jsdom environment", "d": "10/2017"}, {"body": "jondum agreed also use things like search engines like since load run js react getting warning tag unrecognized browser meant render react component start name uppercase letter yes make question sanity", "d": "10/2017"}, {"body": "want ask follow question using create react app reactscripts okay define initial states javascript class foo extends component static defaultprops static proptypes state difference compare using constructors define initial states javascript class foo extends component static defaultprops static proptypes constructor props super props specifically performance implications first approach", "d": "10/2017"}, {"body": "exactly thing difference", "d": "10/2017"}, {"body": "jhabdas well defaultprops defined access class methods since returns", "d": "10/2017"}, {"body": "majioa nt know classlevel api one idea cache default props separate object refer think", "d": "10/2017"}, {"body": "majioa", "d": "10/2017"}, {"body": "reactperf nt work need reevaluate approach introducing something like think close since specific old reactperf", "d": "10/2017"}, {"body": "warn", "d": "10/2017"}, {"body": "seems like address", "d": "10/2017"}, {"body": "mistadikay warning referring", "d": "10/2017"}, {"body": "gaearon wish remembered almost years ago", "d": "10/2017"}, {"body": "seems like would reasonable fix anyone wants try probably want ensure test suite always end test", "d": "10/2017"}, {"body": "fix would suggest windowing eg reactvirtualized nt mind lower level caching react elements child referentially equal react skip reconciling", "d": "10/2017"}, {"body": "situation adding functionality component extending class button extends component componentdidmount logic setup listeners etc class lightbutton extends button componentdidmount make execute method componentdidmount button additional logic add even listeners let say button party library code modified", "d": "10/2017"}, {"body": "use jquery actually trigger dom events see approach yagudaev vitalyq helpful", "d": "10/2017"}, {"body": "think sophiebits example also presents less obvious place could break js class parent extends reactcomponent state person name dan cachedel handleclick gt thisstatepersonname dominic thisforceupdate even thissetstate render return function child props return hi propsname example one get updated one even though nothing wrong depend external data happened accept prop happened mutated instead copied", "d": "10/2017"}, {"body": "happened accept prop happened mutated instead copied nt understand sentence mutable props supported nt bad practice avoided cost", "d": "10/2017"}, {"body": "nice supported pointing case works react breaks optimization", "d": "10/2017"}, {"body": "specifically note mutating props mutating object state calling forceupdate always supported often way start integrating legacy codebase react", "d": "10/2017"}, {"body": "node etc use test renderer shallow renderer depend dom", "d": "10/2017"}, {"body": "portals crossrenderer yet think use cases thread fixed", "d": "10/2017"}, {"body": "close actively exploring web workers reasons exploring async work main thread cooperative scheduling though", "d": "10/2017"}, {"body": "react add dom attributes add element get work however would nice server side rendering translated rendered markup", "d": "10/2017"}, {"body": "react add dom attributes add autofocus true element get work believe react warn since intended spelling one handled specially probably planning pass normal version track", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "closing stale seeing reactdom size already become concern community probably stay userland unless somebody suggests really compellingcompact implementation", "d": "10/2017"}, {"body": "know issue old closed got googling thought leave note posterity since found easy way use reactchildrenmap approximate filter return nothing condition false return child condition true", "d": "10/2017"}, {"body": "seems like changing would solve practical problems experiencing would introduce new ones", "d": "10/2017"}, {"body": "seems like thoughts influenced new architecture currently actively thinking parallels closing", "d": "10/2017"}, {"body": "seems like use case niche effort make happen trivial close unlikely work", "d": "10/2017"}, {"body": "still problem react please file new issue", "d": "10/2017"}, {"body": "refiled", "d": "10/2017"}, {"body": "react docs recommend using plugin however work encountered nonunique ids managed avoid issue", "d": "10/2017"}, {"body": "sounds unfortunate file issue stop recommending docs find alternative", "d": "10/2017"}, {"body": "full reproduction vanilla react babel file separate issue", "d": "10/2017"}, {"body": "filed separate issue see", "d": "10/2017"}, {"body": "checksum validation anymore still expect trees match", "d": "10/2017"}, {"body": "understanding fixed please raise new issue", "d": "10/2017"}, {"body": "solution right", "d": "10/2017"}, {"body": "closing favor", "d": "10/2017"}, {"body": "closer able", "d": "10/2017"}, {"body": "thank filing issue documentation source code reactjsorg lives different repository reactjsreactjsorg info made move see issue moved issue new repo reactjsreactjsorg let continue discussion sorry inconvenience", "d": "10/2017"}, {"body": "closing stale still want let create new issue also mentions plays along prerendering", "d": "10/2017"}, {"body": "issue pretty stale close specific features miss shallow renderer please create new issues proposals work note added new test renderer much featurecomplete", "d": "10/2017"}, {"body": "close stale somebody needs please create new issue describing use case detail", "d": "10/2017"}, {"body": "verified print sensible messages cases lack deduplication filed", "d": "10/2017"}, {"body": "preferred way today", "d": "10/2017"}, {"body": "throwing trigger think nested updates", "d": "10/2017"}, {"body": "react return arrays need extra dom nodes", "d": "10/2017"}, {"body": "trueadm work creating nt used much browser vendors worked tests involving react nt think likely spending time close", "d": "10/2017"}, {"body": "seems like pretty odd api decision think want encourage relying could deprecated oddity also working new powerful toplevel api think becomes less valuable would let slide", "d": "10/2017"}, {"body": "see action item portals new react propagation works correctly across subtrees use case could fixed think support entirely correct behavior different roots close let know wrong", "d": "10/2017"}, {"body": "fiddle work anymore last comment several years ago close stale warn bad nesting hopefully problem", "d": "10/2017"}, {"body": "wanted add common way different clientserver markup set flag components need differ use clientonly elements", "d": "10/2017"}, {"body": "react component defined componentwillreceiveprops inside always called setstate object several members including objects seems caused runaway loop rerenders added code make call setstate conditional loop longer observed thought calling setstate componentwillreceiveprops also componentwillmount meant trigger rerender wrong changed", "d": "10/2017"}, {"body": "therealdebater nt sound related issue nt trigger extra rerenders please file new issue example reproducing", "d": "10/2017"}, {"body": "yes duplicate", "d": "10/2017"}, {"body": "closing stale use case makes difference please file new issue describe", "d": "10/2017"}, {"body": "dropped support imagine going last much longer special checks relevant days closing stale", "d": "10/2017"}, {"body": "seems like impossible support server rendering currently supporting subset attributesproperties compatible client server rendering need trivial implement component js class checkbox extends reactcomponent componentdidmount thiselindeterminate thispropsindeterminate componentdidupdate prevprops prevpropsindeterminate thispropsindeterminate thiselindeterminate thispropsindeterminate render return checkboxdefaultprops indeterminate false usage reactdomrender documentgetelementbyid root might gotchas see thread hope shows easy achieve react even without react directly supporting", "d": "10/2017"}, {"body": "think pretty unlikely crash app failing prop overriding note makes app less predictable since prop validation happens development means app fail development different ways production potentially leading unreproducible error reports production said fail fast crashes new error handling behavior react instead keeping tree around broken state unmount let opt graceful handling error boundaries way think add failfast mode react achieve warnings overriding wish caveats", "d": "10/2017"}, {"body": "hello guys watch link data server side rendering example", "d": "10/2017"}, {"body": "idk may seems like lot code get request post request", "d": "10/2017"}, {"body": "sorry busy rewrite react actively reviewing prs", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "sweat figured much react absolutely worth great work", "d": "10/2017"}, {"body": "portals introduced react let unite several dom trees single conceptual react tree understand correctly help address original problem described post event bubbling works respects react hierarchy portals sophiebits noted clear generic fix would like comments like sad bring us closer solving problem closing issue believe reasonable workaround portals exists react libraries providing modals migrate using portals experiencing problem different use case please file new issue describe detail preferably example unfortunately comments thread brief lacking details", "d": "10/2017"}, {"body": "apis like intersection observer react wrappers", "d": "10/2017"}, {"body": "closing stale practically solution would make sense seems like maybe best solution parent smarter realize removing active child unset active state property one would either update together treat recommendation rendering derive actual active item", "d": "10/2017"}, {"body": "closing stale enough interest please reopen file new issue", "d": "10/2017"}, {"body": "seems like went different direction longer viable", "d": "10/2017"}, {"body": "closing stale interest please file new issue", "d": "10/2017"}, {"body": "specialcasing specific operations like last child becomes first looks great benchmarks syranide noted leads unexpected differences performance make profiling harder issue moving different good solution either sure solving would worth complexity introduces close issue generic ideas improving diffing algorithm make better average case without hurting edge cases opposed adding special case let discuss new issue", "d": "10/2017"}, {"body": "update wrong see updating value input right away cause react actively revert old value would thought nt actually seem case need debounce someone typing supersonic become issue seems like common thing example rerendering preview embedded video changing url granted specific scenario people copypaste rather typing would pretty awful performance anyone manually typed wanted trim extra parts accidentally copied etc also important keep mind huge segment people around world nt working powerful computers like many developers people nt rich smooth experience also react takes care case anyway elaborate", "d": "10/2017"}, {"body": "iandunn scenario would nt need debounce related text field still want update text field synchronously response user input want debounce extra work triggered changes example code could look like js constructor props super props thisstate inputtext currenturl thishandlechange thishandlechangebind thisupdateurl thisupdateurlbind debounce thisupdateurl debounce thisupdateurl handlechange e thissetstate inputtext etargetvalue debounced thisupdateurl updateurl thissetstate currenturl thisstateinputtext render return way text updates happen synchronously expected video updated necessary", "d": "10/2017"}, {"body": "ah yeah conflating debouncing element debouncing update video preview also mistakenly thought input field working controlled actually uncontrolled wrapped component nt notice opened looked thinking debouncing controlled field would nt interfere value updated bad thanks reply", "d": "10/2017"}, {"body": "hmm neither see warning see apply style think fixed", "d": "10/2017"}, {"body": "closing stale built something static want make dynamic would annoying fix key warnings think fine always show", "d": "10/2017"}, {"body": "damusnet best way report problems react file new issues likely problems entirely unrelated issue discussed discussion buried three year old thread know problems", "d": "10/2017"}, {"body": "gaeron alright thanks nt sure deserved new issue open one", "d": "10/2017"}, {"body": "close stale argument consistency important also argument might want callback fired early possible changes flushed sometimes browsers looking ios safari prevent certain actions late think changing new thoughts would like revive discussion please file new issue", "d": "10/2017"}, {"body": "chrome ios make sure test autofill chrome suggestions ios keyboard emits autofilling values mobile safari hand emits chrome safari mac react nt use event regular seems root cause issue would nt possible react also trigger dom events would harm related issue chrome ios tested autofilling events following little page html windowonload function let elements documentqueryselectorall input let actions documentgetelementbyid actions let events focus blur keydown keyup change inputsplit lt p gt elementsforeach element gt eventsforeach event gt elementaddeventlistener event e gt consolelog e let etypenode documentcreatetextnode elementname gt etype ecode ekeyidentifier actionsappendchild etypenode actionsappendchild documentcreateelement br", "d": "10/2017"}, {"body": "reason want put input create many handlers really true example using single event handler multiple controlled inputs cases really want break react model use uncontrolled components escape hatch show warning use case neither options works well please file new issue describe detail", "d": "10/2017"}, {"body": "sort issue handling value changes onkeydown fix adding noop onchange handler mentioned seems absurd work around inaccurate warning sure uncontrolled component would really work case either mean guess could add handler using vanilla js ref element sounds dangerous", "d": "10/2017"}, {"body": "closing easy workaround string manipulation sending markup doctype comments react also support anymore remaining browser conditional comments relevant adding support comments doctype would span multiple projects react babel eslint etc yields little benefit unlikely working", "d": "10/2017"}, {"body": "problem rare hard enough unlikely spending time complexity increase code size introduce probably worth effort close issue unsolved open reviving somebody comes simple solution see", "d": "10/2017"}, {"body": "closing stale", "d": "10/2017"}, {"body": "closing stale someone affected please raise new issue discuss", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "advent portals react first time react event system felt dramatically different dom raised fact events bubble portals handy far seems make logical sense something works nicely current fallbacks adding dom events think divergence makes need api react event system even relevant", "d": "10/2017"}, {"body": "seems like use case niche noted separate imperative api unlikely seems like intermediate component best solution use case problems mentioned felipeochoa seem related thread let track", "d": "10/2017"}, {"body": "hmmm still need allow custom attributes regular dom elements used happy react longer expose object although see still use source code write release notes reactlib reactdomlib anymore lt gt let us know specific case new issue try figure migration strategy well please rely library turn relies custom elements web components provide layout happy chose path adding custom attributes elements feel like providing required markup accomplishable short still way tell react certain attributes okay nt issue reopened", "d": "10/2017"}, {"body": "everdimension attributes trouble arbitrary custom attributes work fine react default closed", "d": "10/2017"}, {"body": "ok found going current behavior something like bit surprising perhaps intended first case react also gives warning warning received nonboolean attribute expected cast value string intended update code accordingly", "d": "10/2017"}, {"body": "everdimension surprised custom boolean attributes supported examples use angularjs material angular flexlayout html first item row second item row probably legit use custom boolean attributes imho supported react", "d": "10/2017"}, {"body": "supported explicitly asks pass string value sure way tell apply boolean attribute cases applied setting empty value true removing false cases expects strings always pass automatically interpreted truthy string need explicitly specify depending used", "d": "10/2017"}, {"body": "gaearon would make sense simply treat versions flags still warn certain scenarios like passing custom attributes supporting libraries others may rely attribute simply existing specifically equal cases following would considered true following would considered false especially think proptypes flowtype typescript others attributes used boolean flags probably done explicitly also true bit cumbersome check rather methods", "d": "10/2017"}, {"body": "form works understand shorthand form feels nicer might actually confusing future discussions jsx spec repo changing semantics compile would align object shorthand form also make less cumbersome pass many props recommend relying shorthand form anyway changing anytime soon within", "d": "10/2017"}, {"body": "using works according html spec semantically using empty attribute latter implicit way give value empty string", "d": "10/2017"}, {"body": "everdimension gaearon indeed principal problem possibility falsepositive definitely high case becoming especially since principally values entirely opposite might well setting tests would yield result specifically talking boolean attributes current implementation consistent boolean attributes work boolean attributes number attributes boolean attributes presence boolean attribute element represents true value absence attribute represents false value attribute present value must either empty string value caseinsensitive match attribute canonical name leading trailing whitespace argue side intention specifically obviously setting absolutely pass boolean attributes specific types attributes specifically valid truthy value truthy values think big issue would moreso following result undesired truthy outcome instead rendering would rendered creating sort falsepositive desired intent would prevent attribute attached setting false current state true problem ensuring truthy value instead intuitively ensuring false value truthy real issue component example explicit course practice could current implementation much verbose cumbersome solution especially case large sets jsx markdown seems like viable one intuitive solution p", "d": "10/2017"}, {"body": "swivelgames get warning mentioned earlier boolean value unknown attribute render example remove boolean attribute use please refer previous issues topic context make onoff yesno boolean attributes work decide desired behavior boolean value passed unknown prop rfc plan attributes react boolean attributes web components understand html spec says boolean attributes recognize inconsistency react higherlevel abstraction boolean values sometimes represent enumerable attributes boolean set values example important implement solution context mind", "d": "10/2017"}, {"body": "thread getting really long every message spams lot people feature implemented react specific concerns ideas please file new focused issue thanks", "d": "10/2017"}, {"title": "changing basehref angular along upgrade module work angularjs router causes infinite redirect", "body": "submitting current behavior using angular router angularjs router together upgrade module define routes router handle router since route defined go sink state populate routeroutlet ngview respectively works great except want host app anywhere root soon define basehref things go haywire get seemingly infinite redirect two frameworks information project setup visit victor savkin tutorial expected behavior able define basehref two routers still play nice like hosted root minimal reproduction problem instructions detailed steps along things tried fix problem stackoverflow summarize clone repo bare bones angularcli project demonstrating issue would used plunker systemjs appears rely tag makes ca nt demonstrate problem navigate view working normally clicking back forth links change angularclijson file like adding basehref see break clicking two angularjs links navigate angular angularjs page motivation use case changing behavior everyone app hosted root able use routing along upgrade module whether environment aid debugging enabletracing true app module consolelog statements angularjs locationchangestart locationchangesuccess events see order events regarding navigation", "num": "20061", "d": "10/2017"}, {"title": "tests appear run multiple times", "body": "submitting x bug report current behavior running tests chrome tests appear run multiple times number tests run appears correct however putting console statements show multiple logs running test chrome browser console statements show browser however show multiple times cli window running chromeheadless shows multiple log statements output even though log itdescribe expected behavior tests run minimal reproduction problem instructions run ng test ng test cc motivation use case changing behavior console output show correctly tests run ca nt tell tests actually running multiple times simply reporting issue environment angularcli node os angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice typescript", "num": "20060", "d": "10/2017"}, {"title": "error trying serve project", "body": "submitting current behavior got error trying serve ionic project random issue found many times actually happens whentry use appmodulets comment error disappers ps working today found expected behavior run normally ionic project minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20059", "d": "10/2017"}, {"title": "confusing property highlight description reactive forms formcontrols section", "body": "submitting regression behavior used work stopped working new release bug report feature request x documentation issue request support request current behavior reactive forms page formcontrols section find following description reminder ignore many mentions formgroup formcontrol centerblock checkbox markup bootstrap css classes angular ignores pay attention formgroupname formcontrolname attributes angular directives bind html controls angular formgroup formcontrol properties component class expected behavior mentioned description replaced according provided example motivation use case changing behavior clarify provided description", "num": "20058", "d": "10/2017"}, {"title": "angular work aot dependenciesimports ngfactoryjs files", "body": "submitting current behavior compiling ngc ngfactoryjs files nt declared dependenciesimports belive multiple commas var keyword also setters look like properly generated noticed new compiler generates ngfactoryjs files modules well upgrade ngfactoryts files modules angular generated contactinformationcomponentngfactoryjs expected behavior ngfactoryjs files contain proper importsdeps generated contactinformationcomponentngfactoryjs minimal reproduction problem instructions compile application simply use following function gulp const main ngc require angularcompilerclisrcmain function compileapplication log compiling ngc tsconfigjson environment angular version tooling issues node version platform windows others package manager npm", "num": "20057", "d": "10/2017"}, {"title": "allow guards redirect route object", "body": "submitting current behavior define route register routermodule may configure guard however configure route redirect guard ignored expected behavior guess good reason maybe considered allow guards redirect routes since find useful motivation use case changing behavior example sso login option way sso provider works send login token preconfigured url catch router url success login error would like guard go back login page error redirect main page saving token success environment", "num": "20056", "d": "10/2017"}, {"title": "provide compiler switch keep attributes", "body": "since implementation attributes always removed compilation without attribute useful scenarios longer work attribute runtime allows use different style translated elements eg green border useful identify elements yet translated compiler switch would sufficient issue reasons attribute", "num": "20055", "d": "10/2017"}, {"title": "angularcompilercli ignoring class field initializations", "body": "submitting current behavior maybe missing something really crucial seems totally disregards class field initializations given simple dummy class defines initializes property export class dummyclass transpiled stable javascript output generated expected however using latest class field gets completely removed transpiled javascript code expected behavior class field initializations ignored environment", "num": "20053", "d": "10/2017"}, {"title": "async validator gets called many times using formgroup directive", "body": "submitting current behavior building dynamic forms way documented async validator specific control gets called many times directive usages happening binding triggers tree validation update expected behavior sure solved current approach building dynamic forms described docs nt good async validators often async validators network related could huge impact performance minimal reproduction problem instructions open console reload preview see console prints increases every new question added think complex form fields plunker taken added async validator nothing changed", "num": "20052", "d": "10/2017"}, {"title": "animations including style inside animate causes transition ignore target state style", "body": "submitting current behavior including style inside call style target state ignored transition ends expected behavior styles inside merge styles defined target state determining animation minimal reproduction problem instructions define animation trigger thus apply follows observe transition taking place element enlarge transition ends second instantly snap state style stackblitz reproduction motivation use case changing behavior possible apply styles transitions without breaking normal transition behavior environment", "num": "20051", "d": "10/2017"}, {"title": "language service ca nt find component local module imported forroot", "body": "submitting current behavior local module imported language service ca nt recognize components throws error expected behavior ls able correctly find components form modules imported minimal reproduction problem instructions folder structure shared module appmodule ts ngmodule imports browsermodule export class appmodule template html title lt error shown find repo environment", "num": "20050", "d": "10/2017"}, {"title": "provide better message error module nt exist", "body": "submitting current behavior removed upgrading app get following error note issue raised importing module expected behavior minimal reproduction problem instructions see motivation use case changing behavior environment angular version xyz browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform linux angularcli", "num": "20049", "d": "10/2017"}, {"title": "please provide docker image angularcli angularmaterial angularfirebase", "body": "submitting current behavior trying build docker image angular application using angular cli angularmaterial ng build command recognize expected behavior official docker image hubdockercom angular app easily containerized deployment motivation use case changing behavior environment", "num": "20048", "d": "10/2017"}, {"title": "angulario could reached chrome working safari", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20046", "d": "10/2017"}, {"title": "feature request docs migrate plunkr examples stackblitz", "body": "since docs moving use cli per would make easier people learning angular see examples stack blitz due ui similar vsc since stack blitz uses cli handle bundling autocompletion ts support would make transition browser local projects much easier", "num": "20045", "d": "10/2017"}, {"title": "bundled current version closure compiler", "body": "submitting current behavior closure compiler interpret angular packages working solution based fork gregmagolan rejected pr closure compiler team published solution writing closure conf compatible latest version closure compiler possible greg fork bunch monkeying around closure conf expected behavior angular packages interpretable closure compiler angular bundled closure compiler conf formatted lazyload angular bundles expectation done angular rely fork closure compiler make happen minimal reproduction problem instructions look alex eagle demo repo relies fork motivation use case changing behavior company using fork would violate open source software policy include acceptable license specific version besides good practice environment", "num": "20044", "d": "10/2017"}, {"title": "unable resolve service provided ngmodule", "body": "submitting current behavior ngmodule exposes service providers array alternatively could service returned providers array forroot returning modulewithproviders instance import module include application ngmodule imports supposedly makes imported module exports declarative stuff available makes providers available di however following meaning use assets import myservice mymodule supposed work get components filters importantly services module path nodemodules folder ferret around file hopefully case expected behavior able import services provided module minimal reproduction problem instructions publish module exposes services via providers property try use services inside application module includes service providing module motivation use case changing behavior rational simple intuitive use module assets environment", "num": "20043", "d": "10/2017"}, {"title": "rollforward fix compiler recover structural errors watch mode", "body": "rollforward", "num": "20037", "d": "10/2017"}, {"title": "animation state reapplied", "body": "submitting current behavior even disabled styles animation preserved bad however animation state changes enable animation styles updated expected behavior styles update animation becomes active minimal reproduction problem instructions sidenav switches mobile mini variant depending window width xs mobile gtxs mini go mini variant state active go mobile variant state still active open sidenav close longer active go mini variant active lt problem motivation use case changing behavior inconsistency environment", "num": "20036", "d": "10/2017"}, {"title": "update contributingmd mention email address requirements cla", "body": "submitting current behavior currently doc contributing angular discuss email address use cla submitting prs git commits expected behavior section submitting pull request pr could enhanced adding information checking email address associated angular git commits dependencies relationship email used cla also mentioned minimal reproduction problem instructions see motivation use case changing behavior someone working one github repo nt matter someone works multiple github repos using identity nt matter matter want keep angular work identity separate github repo work things nt set correctly also believe attempts submit prs fail indicating cla signed signed different identity environment", "num": "20034", "d": "10/2017"}, {"title": "hashlocationstrategy leave url untouched hash", "body": "submitting current behavior currently replace complete current url browser one given embedding html means manipulates url sign even though documentation says use url hash storing application location data expected behavior hashlocationstrategy manipulate browser url sign url motivation use case changing behavior current behaviour intuition name well mentioned documentation cumbersome integration scenarios angular app embedded page eg served content management system cumbersome setting current page distort asset loading also depends base href seems workaround latter using building app already two steps find also badly documented", "num": "20033", "d": "10/2017"}, {"title": "creating server bundle cli results bundle require statements ngfactory files", "body": "extracting ngc bug part server bundle generated using cli refers ngmodule nodemodules generated bundle left external correct since ngfactory files actually part nodemodules inlined created bundle server webpack config makes references nodemodues remain external inline generated modules change behavior seems way paths generated one ngfactory file refers another ngfactory file previously relative leading ngfactory files inlined import path makes look webpack module nodemodules fix would generate relative paths ngc referencing ngfactory files", "num": "20031", "d": "10/2017"}, {"title": "feature ideia ngswitchcase multiple binding", "body": "submitting new feature motivation use case changing behavior many languages power using multiple binding inside switchcase like go proposal create new directive handle multiple options match think name could possible pass one array values matches case example html guys think", "num": "20027", "d": "10/2017"}, {"title": "ngfor working inconsistently changedetectionstrategyonpush", "body": "submitting bug ngfor changedetectionstrategyonpush current behavior implemented form renders using json configuration facing current problem maintain layout order elements array objects inside array item lines property matrix using nested directives render layout components also using following case want create new layout elements layout get updated configure links components links might change layout first behavior dom nodes rerendered reference change current behavior update references arrays new array references directives rerender dome also mark components change detection check nt mark components change array references dom updated click somewhere else screen second problem onpush detecting reference change change reference changed nodes mark components contain directives check changed references rerendered nt mark components check want change references changed dom updated click somewhere screen nt change inner elements arrays reference making sure also rerender needs done expected behavior would expect behave consistently change reference array rerender node change arraylength rerender changed references inside array also nt understand need mark check component contains input changed reference would expect rerender array reference changed right find little bit confusing minimal reproduction problem instructions reproduction repository public add plunker pretty big already hard write steps reproduce clone repo switch master branch yarn install yarn start go file search function code comment todo report domes rerendered reference changed uncommented first described behavior line bellow todo report need mark check changing references onpush comment works rerendes correct nodes nt understand need mark components inside change detection motivation use case changing behavior building component application uses lot forms need scaleable solution also application components need use onpush strategy also like efficient possible environment also sure bug think inconsistent works maybe nt understand well change detection works decides rerender nodes", "num": "20026", "d": "10/2017"}, {"title": "angulario website ca nt reached", "body": "submitting current behavior angulario website ca nt reached uncaught promise typeerror read property match undefined expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20025", "d": "10/2017"}, {"title": "mouseover mousedown events", "body": "submitting current behavior trying bind element mouseover mousedown events noticed mousedown event nt gets triggered expected behavior expected see events triggering component methods minimal reproduction problem instructions motivation use case changing behavior trying simulate selection mouse click environment", "num": "20020", "d": "10/2017"}, {"title": "unexpected routereusestrategy behaviour", "body": "hi working angular angularrouter instagramlike post grid timeline want remember scroll point getting back post etc use customroutereusestrategy shown gives unpredictable behaviour anybody please give solution alternative thanks", "num": "20018", "d": "10/2017"}, {"title": "docs aio typo guidearchitecture", "body": "submitting current behavior export appcomponent show export expected behavior export appmodule show export minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20016", "d": "10/2017"}, {"title": "view template refreshing model values got changes angular", "body": "model values appending every time template modifying model print model console giving updated values view previous model values new values showing fix issue new angular please help", "num": "20015", "d": "10/2017"}, {"title": "loading third party library specific component", "body": "load third party libraries component easy library like amp use instance library loading nt find best way angular work easily specific components per r amp someone please look amp let know thoughts amp better approach like use loading script", "num": "20012", "d": "10/2017"}, {"title": "update packagejson angular webpack tutorial please add karmajasminehtmlreporter dependency", "body": "submitting current behavior following webpack tutorial running test terminal threw message load reporter kjhtml registered perhaps missing plugin expected behavior tests run without errors solution update packagejson archive configuring webpack section tutorial add karmajasminehtmlreporter karmajasmine dependency avoid error minimal reproduction problem instructions motivation use case changing behavior avoid error programmers new webpack angular environment", "num": "20011", "d": "10/2017"}, {"title": "allow access proxyconfig unit testing", "body": "submitting current behavior unit test access proxyconfig therefore access backend expected behavior possible access backend instance api tests often wanted run real server mocking response motivation use case changing behavior case desirable able access real backend testing example tests services know doable tests testing services cumbersome often easier api testing unit tests", "num": "20010", "d": "10/2017"}, {"title": "angular unhandled promise rejection failed load", "body": "aspnet mvc project using angular web components application load successfully experiencing unhandled exception thrown zonejs apionunhandlederror screen shots zonejs exception packagejson name angularquickstart version description quickstart packagejson documentation supplemented testing support scripts build tsc p src build watch tsc p src w build tsc p serve liteserver cbsconfigjson serve liteserver prestart npm run build start concurrently npm run build watch npm run serve npm run build concurrently npm run serve npm run protractor killothers success first preprotractor webdrivermanager update protractor protractor protractorconfigjs pretest npm run build test concurrently npm run build watch karma start karmaconfjs pretest npm run build test karma start karmaconfjs singlerun lint tslint srcts verbose keywords author license mit dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter devdependencies concurrently liteserver typescript repository systemjsconfigjs function global systemconfig baseurl paths paths serve alias npm nodemodules map tells system loader look things map app within app folder app app appcomponentts import component angularcore component selector moclanding template templateurl appcomponentshomecomponenthtml styleurls appcomponentshomecomponentcss export class appcomponent appmodulets import ngmodule angularcore import appbasehref angularcommon import browsermodule angularplatformbrowser import appcomponent appcomponent import routing approuting import homecomponent componentshomecomponent ngmodule imports browsermodule routing declarations appcomponent homecomponent providers provide appbasehref usevalue bootstrap appcomponent export class appmodule indexcshtml banging head wall working nt update config files systemjsconfigjs packagesconfig etc could go wrong please help", "num": "20009", "d": "10/2017"}, {"title": "enable reactive form using formcontroldirective", "body": "submitting current behavior currently formcontroldirective ca nt handle property change true false expected behavior formcontroldirective update control disabled property true false minimal reproduction problem instructions click button formcontroldirective update control disabled property false true click button formcontroldirective update control disabled property true false motivation use case changing behavior would like able use formcontroldirective set disabled property control true false environment browser x chrome desktop official build x ie version x microsoft edge", "num": "20008", "d": "10/2017"}, {"title": "memory leak formcontrolname createddestroyed times", "body": "submitting current behavior formcontrolname objects provided ngvalidators may collected gc refs formgroup caused collecting closures created provided validators via ngvalidators token called many times form recreated expected behavior destroying formcontrolname collected gc even refs formgroup provided validators removed formcontrol destroying formcontrolname minimal reproduction problem instructions used example material demo starting point steps reproduce showhide form clicking checkbox displayed number listeners increasing messages validate called appears console editing input project issue validators set outdated errors use workaround inputs show synchronized significant reason store closures last motivationuse case changing behavior allow permanent formcontrolformgroup without memory leaks allow dynamically create formcontrolname custom control knows validate providing ngvalidators without calling validators destroyed controls environment", "num": "20007", "d": "10/2017"}, {"title": "incorrect import path generated ngfactory external library", "body": "submitting current behavior generated component ngfactory js inside aot dir following import expected behavior generated component ngfactory js inside aot dir following import minimal reproduction problem instructions angular library tsconfigjson main distserverumdjs module types distsrcserverdts compileroptions target module moduleresolution node noimplicitany true skiplibcheck true allowsyntheticdefaultimports true suppressimplicitanyindexerrors true strictnullchecks true experimentaldecorators true emitdecoratormetadata true sourcemap true removecomments false lib dom outdir compiledaot baseurl paths angular nodemodules angular files compiledsrcfrontendapplicationappmodule compiledsrcfrontendapplicationbootstrap angularcompileroptions skiptemplatecodegen false skipmetadataemit true annotationsas static fields annotateforclosurecompiler true motivation use case changing behavior generated ngfactory includes imports relative paths external modules wrong external modules unique entry point based packagejson module entry environment", "num": "20006", "d": "10/2017"}, {"title": "viewproviders available depth", "body": "submitting current behavior attempting host inside child component parent component host declaration parent child causing provider found expected behavior superparent component viewproviders declaration provided child component child child minimal reproduction problem instructions example made motivation use case changing behavior goal formcontrol component template one tag template class named formcontrol component declaration assigning viewprovider fieldcontrol components declaration fieldcontrol expected used inside formcontrol works correct fieldcontrol visible within template formcontrol sub component within formcontrol without constructor declaration sub component sub component within gt fieldcontrol within sub component causes error provider found environment", "num": "20005", "d": "10/2017"}, {"title": "failed load resource using angular http module localhost", "body": "hi encountered bad request calling api endpoint using httpget method application running missing important config would enable angular application run localhost message spitted browser console also put post stackoverflow details project laid quite new angular luck bumping article lead solve help greatly appreciated", "num": "20003", "d": "10/2017"}, {"title": "using produce small bundle size", "body": "submitting current behavior size quite large minified animations polyfill even disabling using expected behavior least would like small size using", "num": "20002", "d": "10/2017"}, {"title": "convert requestargsbody based contenttype", "body": "submitting current behavior requestconstructor taken asis regardless content type might actually provided smartly attempts detect content type however content type provided match format parameter naturally angular send correct request example code would send body essentially value returned object tostring receiving end php example would parse post bueno expected behavior since already defines internal helpers specifically case solution already needs wired minimal reproduction problem instructions following plnkr demonstrates current behavior received serverside motivation use case changing behavior consistency http api pass object params right thing stumbled setting digging source code github seems lot folk think set content type applicationxformurlencoded manually process data environment", "num": "20000", "d": "10/2017"}, {"title": "view component recreated navigating away soon parammap callback", "body": "submitting current behavior view component ie component rendered router navigate away view component directlyafter callback router assume destroy view component expected recreate component immediately run lifecycle destroy well last part demo however route changed based vanilla href link hitting back button manually editing url guessing sort racecondition expected behavior component recreated right destroyed minimal reproduction problem instructions plunkr blog post motivation use case changing behavior clearly bug may cause unnecessary ajax requests calls server recreation view component runs lifecycle environment", "num": "19999", "d": "10/2017"}, {"title": "uncaught typeerror undefined function", "body": "submitting current behavior minimal reproduction problem instructions create new app using cli ang run ng build environment production browser chrome desktop version xx x chrome android version chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform linux", "num": "19998", "d": "10/2017"}, {"title": "compilercompilemoduleasync related issue memory leak", "body": "submitting current behavior component getting destroyed completely ngondestroy getting called amp also getting removed dom stays memory invoking compilemoduleasync method dynamically created components getting destroyed completely one created dynamic component getting destroyed expected behavior component supposed destroyed router outlet navigating another component minimal reproduction problem instructions clearly written issue stackoverflow question used chrome developer tool take snapshot memory analyze memory motivation use case changing behavior creating components dynamically environment", "num": "19997", "d": "10/2017"}, {"title": "routerlinkactive options inconsistent query handling navigating imperatively gif included", "body": "submitting current behavior imperatively navigating activerouterlink configurations route calllogs nt highlight seemingly inconsistent ways code routerlink observe gif expected behavior link keep selected class matter query params matter navigated set routerlinkactiveoptions exact false environment", "num": "19995", "d": "10/2017"}, {"title": "failed load templateurl path", "body": "submitting current behavior targeting template parent folder got following error ng serve expected behavior work minimal reproduction problem instructions motivation use case changing behavior environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform linux angularcli", "num": "19994", "d": "10/2017"}, {"title": "rollup recipe guide nt work", "body": "submitting current behavior rollupconfigjs sample file references mainjs file exist maints result rollup command fails expected behavior rollupconfigjs needs corrected steps need added succeed environment angular version according website footer", "num": "19991", "d": "10/2017"}, {"title": "allow option suppress duplicate errors angular cli aot compile", "body": "bug report feature request mark versions c pmlcliphoenixphoenixlmsphoenixweb ng version angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularupgrade angularcli angularcompilercli typescript windows repro steps log given failure duplicate identifier component desired functionality allow suppress duplicate errors let duplicate errors affect emitting code dist folder see duplicate identifier code ngfactory file never outputted leaves nothing debug mention details might useful template code like see active marked duplicate identifier code works perfecttly fine jit", "num": "19990", "d": "10/2017"}, {"title": "run blacklistedevents outside ngzone documentation missing", "body": "ciao trying use feel missing documentation plug feature production app submitting environment angular version", "num": "19989", "d": "10/2017"}, {"title": "ctrlclick behaviour open new tab work routerlink component projected within routeroutlet", "body": "submitting current behavior ctrlclick behaviour open new tab still working used routerlink directive within component rendered within example code works fine takes jobs right click hyperlink jobs code work route homecomponenthtml present within app navigation component homecomponenthtml jobs using angular version could anyone please help expected behavior user able right click anchor tag let open new tabwindow work per routing minimal reproduction problem instructions motivation use case changing behavior environment angular version browser browsers others looks relevant however noticed issue reproducible component present within router outlet", "num": "19987", "d": "10/2017"}, {"title": "map files written factories emitted", "body": "submitting current behavior compiler write file factory file emitted expected behavior factory emitted produce map file minimal reproduction problem instructions angular sources aio directory run note map file produced file written motivation use case changing behavior parsimonious builds", "num": "19986", "d": "10/2017"}, {"title": "bug strange behaviour error handlers events", "body": "submitting trying implement general error handler capable showing message error let application continue catch errors coming something breaks current behavior catch rethrow error http request application stops updating templates everything stops working error come http request comes observable message error updates fine expected behavior matter source error application update respond without problems minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19984", "d": "10/2017"}, {"title": "ng lint typecheck respect strictnullchecks", "body": "submitting current behavior respect expected behavior raise error uses violation strict null checks minimal reproduction problem instructions add remove necessary type definition nullable member run see tells everything fine fine motivation use case changing behavior type checking work fully partially environment", "num": "19983", "d": "10/2017"}, {"title": "feature request css modules support", "body": "submitting regression behavior used work stopped working new release bug report x feature request documentation issue request support request gt please submit support request instead see others love use css modules angular tried use like following ts democomponentts import classes democomponentscss component template democomponenthtml export class democomponent classes classes enabled true democomponenthtml thrown en error invalid template expression seems disheartened use write another directive something like ngclass support dynamic keys tiny workaround directive still hope support builtin feature css modules", "num": "19982", "d": "10/2017"}, {"title": "error rangeerror maximum call stack size exceeded production build faulty export module", "body": "moved opened bartnetjs bug report feature request mark versions angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice typescript repro steps create module export module export tag fault build production build ng build prod log given failure error rangeerror maximum call stack size exceeded staticreflectorannotations pathremovedfordemonodemodules ngmoduleresolverresolve pathremovedfordemonodemodules compilemetadataresolvergetngmodulemetadata pathremovedfordemonodemodules compilemetadataresolvergetngmodulesummary pathremovedfordemonodemodules pathremovedfordemonodemodules arrayforeach compilemetadataresolvergetngmodulemetadata pathremovedfordemonodemodules compilemetadataresolvergetngmodulesummary pathremovedfordemonodemodules pathremovedfordemonodemodules arrayforeach compilemetadataresolvergetngmodulemetadata pathremovedfordemonodemodules compilemetadataresolvergetngmodulesummary pathremovedfordemonodemodules pathremovedfordemonodemodules arrayforeach compilemetadataresolvergetngmodulemetadata pathremovedfordemonodemodules compilemetadataresolvergetngmodulesummary pathremovedfordemonodemodules desired functionality ng cli detect fault report module causes call stack exception mention details might useful issue found compileumdjs function compilemetadataresolverprototypegetngmodulemetadata code var exportedmodulesummary thisgetngmodulesummary exportedtype gt cause recursion endless loop getngmodulemetadata called module suggestion watch deep recusion going example start logging warnings reached nested call something like course function calling getngmodulemetadata modified someone core cli team confirm good approach another approach course checking module name calling self suppose something like modulex gt export moduley gt exportmodulex create pull request", "num": "19979", "d": "10/2017"}, {"title": "lambda loadchildren handled target", "body": "submitting current behaviorexpected added new ticket since still issue ticket closed target writing works whereas nt hence normally transpiling fixes problem oh plunkr transpile least nt know turn ca nt reproduced minimal reproduction problem instructions see environment angular browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "19978", "d": "10/2017"}, {"title": "apply loading animation loadchildren loading", "body": "app spends lazyload beacuse put components one loadchildren divided components loadchildren would solved anyway want use one loadchildren although idea use loading animation loadchildren loading sos", "num": "19977", "d": "10/2017"}, {"title": "site rendering ios devices white screen death", "body": "submitting current behavior application built uploaded render ios devices havnt tested huge array tested devices personal iphone running ios friends ipad recall version simply render white page matter many refreshes going private etc refuses render eliminate potential phone first discovered issue fully formatted factory settings still result tried multiple locations aka varying ips tried vpn wifi mobile etc running return white page real errors expected behavior pages renders like ios devices andriod minimal reproduction problem instructions full date github project sure fully tested even debug potential console errors mac use safari web inspector feature motivation use case changing behavior want site actually run note older versions working fine phone sure point started breaking environment", "num": "19976", "d": "10/2017"}, {"title": "httptestingcontrollerexpectone working queryparameters", "body": "submitting current behavior related testing request contains query parameters test throws errors expected one matching request criteria match url assetsmockmodulesjson found none expected open requests found get assetsmockmodulesjson appending paramters expected url work either expected behavior test failure message show full path including parameters able specify expected parameters ignore minimal reproduction problem instructions motivation use case changing behavior currently impossible test http requests service contain query parameters environment", "num": "19974", "d": "10/2017"}, {"title": "routerlink foo foo encoded", "body": "html result question change change html like", "num": "19973", "d": "10/2017"}, {"title": "unit test case able mock service", "body": "able mock user service service mocked working fine commenting user service unit test case working fine many components using user service unit test cases components working user service injected error ca nt resolve parameters alertservice object object object object object object code mock user service injectable class mockuserservice private data observable readonly user observable readonly privilege observable using mock service like", "num": "19972", "d": "10/2017"}, {"title": "custom validator make formgroup invalid unless least one control enabled", "body": "submitting current behavior custom form validator make form invalid controls disabled expected behavior validator execute regardless state controls minimal reproduction problem instructions update button disabled form invalid sum currently happens least one control enabled fromgroup motivation use case changing behavior similar plunker validating sum multiple controls sum want users able save values however validator executing controls enabled environment", "num": "19971", "d": "10/2017"}, {"title": "angular animation behaves differently routed component vs app component", "body": "submitting current behavior animation execute component routed reproduction repository find two examples animation behave differently component routed animation nt fire beginning second list animation played appcomponent first list everything fine wanted behavior matsko maybe say something expected behavior animation behaves regardless whether component routed minimal reproduction problem instructions reproduction demo reproduction src motivation use case changing behavior environment tested recent version angular src repo browser x chrome desktop version xx x chrome android version xx chrome ios version xx x firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "19970", "d": "10/2017"}, {"title": "jsdoc type annotation cause angularcompilercli ngc build failed", "body": "submitting current behavior following jsdocstyle comment auto generated visual studio code build angularcompilercli output warning type annotations redundant typescript equivalen ts following gulp task failed data fields readonly type ichartoptions public get datafields ichartoptions return thisdatafields const ngc require angularcompilerclisrcmain main gulptask ngc function return ngc project exitcode gt exitcode error caught compile task runsequence method callback ngc fails compile whole compile process stops running throw new error ngc compilation failed notes type annotations cause issue remove type line comment build ok expected behavior build without error minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19969", "d": "10/2017"}, {"title": "angular integrate closure compiler", "body": "submitting current behavior currently works webpack expected behavior work closure compiler", "num": "19968", "d": "10/2017"}, {"title": "navigate new url changing route parameters", "body": "submitting current behavior routing code like effect expected navigation like gt x prod test want change parameter group remain routes unchanged maincomponent write code idea navigation expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19967", "d": "10/2017"}, {"title": "use compilercli instead tscwrapped", "body": "writing node command line tool internally compiles angular code use compilercli instead tscwrapped difference", "num": "19964", "d": "10/2017"}, {"title": "angular projects fail path", "body": "submitting current behavior angular project path containing somewhere fail start expected behavior like character minimal reproduction problem instructions mkdir test cd test ng new helloapp cd helloapp ng serve motivation use case changing behavior bug report angularcli debugged fix also fix environment", "num": "19960", "d": "10/2017"}, {"title": "component lifecycle hooks firing another component calls detectchanges first component first ngonchanges call", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior two components displayed time first existing second added page code run second component results first component calling second component receive expected behavior even first component calls second component continue receive lifecycle hooks minimal reproduction problem instructions please see repro steps probably minimal could boiled larger example working motivation use case changing behavior undesirable bug particular repro slightly convoluted though actively working larger version use configuring single application toolbar general believe sort issue could arise many instances environment angular version sure test rc plunker browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "19959", "d": "10/2017"}, {"title": "reportrecover errors", "body": "submitting current behavior report errors correctly recover expected behavior would report errors correctly recover minimal reproduction problem instructions wait compilation complete comment whole contents hit save show show uncomment whole contents show show successful compilation add hit save show show successful compilation show following error thrown program creation motivation use case changing behavior environment cc tbosch", "num": "19951", "d": "10/2017"}, {"title": "input value behaving strangely comma regions example turkish", "body": "submitting current behavior typing inside input type number actually shows input value empty string expected behavior input value instead typing period type comma input value correct minimal reproduction problem instructions change browser language turkish using chrome go type without quotes inside input input value becomes empty string motivation use case changing behavior comma regions handle comma period inside input environment", "num": "19949", "d": "10/2017"}, {"title": "docs show replaces deprecated usages", "body": "submitting current behavior currently webstorm informs code deprecated however check code docs says nothing deprecation supersedes expected behavior order upgrade would nice know need upgrade minimal reproduction problem instructions use angularhttp modules webstorm show deprecated check module docs notice says nothing deprecation motivation use case changing behavior like continue forefront angular versions stumbling upgrade comb code figure everything boss nt fond paying environment", "num": "19948", "d": "10/2017"}, {"title": "parsing array json object pipe uppercase number", "body": "submitting current behavior array json objects export class productlistcomponent show boolean true public products name person age salary name person age salary name age salary template parsing show hide load page first time get output person click button get page details person well ie person person click button get page details person well ie person person person expected behavior alwasy get minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19947", "d": "10/2017"}, {"title": "bug serviceworker path omitted ngswconfig", "body": "submitting current behavior currently index path omitted command supported old ngsw version ngswbasejson generated ngswjson expected behavior emitted cache indexhtml offline support minimal reproduction problem instructions motivation use case changing behavior tried migrate app new ngsw referrence never cached environment angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router serviceworker cc alxhub webmaxru", "num": "19945", "d": "10/2017"}, {"title": "failed load chunk x redeploy", "body": "submitting current behavior application open redeploy still viewing navigate another route exception thrown application longer usable refresh expected behavior new chunks get loaded without issue user able navigate without forced refresh minimal reproduction problem instructions follow instructions current behavior motivation use case changing behavior environment nginxaws", "num": "19944", "d": "10/2017"}, {"title": "keypress firefox backspace handled", "body": "submitting current behavior backspace handled keypress firefox chrome edge expected behavior firefox handle backspace keypress event minimal reproduction problem instructions motivation use case changing behavior environment browser chrome desktop version xx chrome android version xx chrome ios version xx x firefox version safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "19943", "d": "10/2017"}, {"title": "way get active locale aot", "body": "submitting current behavior looking way get active locale runtime found jit compiling would like able get active locale aot expected behavior way get active locale using aot minimal reproduction problem instructions motivation use case changing behavior libraries need know locale able configure runtime environment", "num": "19942", "d": "10/2017"}, {"title": "able access attributes connectedcallback webcomponents", "body": "submitting current behavior generated code attaches element dom sets attributes able access attributes connectedcallback wc expected behavior static attributes available connectedcallback wc environment", "num": "19940", "d": "10/2017"}, {"title": "bug skiplocalchange manually navigating falls back default", "body": "submitting current behavior possible navigate without changing url resolve works getting guard within app however navigating directly page ex typing router changes url fallback route though pagenotfound component correctly displayed false everything works expected url expected behavior prevent url changing even navigating manuallyexternally route minimal reproduction problem instructions example project modified tour heroes clone install run project navigate hero details page clicking see page found still dashboard manually navigate taken root motivation use case changing behavior nt want user experience url change resolver fails want able display etc page environment browser", "num": "19937", "d": "10/2017"}, {"title": "components name via alias results ngfactory duplicate function implementations", "body": "steps reproduce clone run runs rerun build dependencies well expected app compiles successfully angular actual emits error file written file system commentary declares marks two classes called module file imported like renaming one resolves error cc tbosch chuckjaz crisbeto", "num": "19935", "d": "10/2017"}, {"title": "routerlinkactive onpush lazy routes strange behavior", "body": "submitting current behavior using directive inside component using lazy loaded module routes directive update clicking link lazy loaded route already loaded also nav component set correctly default route loads non nav component works fine expected behavior directive updates element correctly navigating lazy loaded route first time minimal reproduction problem instructions reproduction live simple app two lazy routes two eager routes two navs one one without motivation use case changing behavior would prefer able set components change detection nt look like going work correctly combination described environment angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "19934", "d": "10/2017"}, {"title": "add optionconfig property within httprequest object", "body": "submitting current behavior current httprequest several options set http method happened expected behavior implementing httpinterceptor would nice optionsconfig property within httprequest able set configuration specific request minimal reproduction problem instructions httpinterceptor possible implement general error treatment application however may want suppress error specific request would handle withing component motivation use case changing behavior give flexibility request talks interceptor environment", "num": "19933", "d": "10/2017"}, {"title": "reportprogress bubbling", "body": "submitting current behavior issue regarding reportprogress property request nt good documentation sure bug intended work set reportprogress true request http interceptor progress event nt happen service happens interceptor much lower service receives angular remove reportprogress property returns body highest level know documentation method says construct get request interprets body json returns expect reportprogress bubble use actual method better documentation reportprogress code interceptor service call subscribing reportprogress nt happen resultsresponse returned change service request way progress returned supposed allowed use expected behavior expect reportprogress bubble angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "19930", "d": "10/2017"}, {"title": "feature request unify toboolean behavior boolean attributes", "body": "submitting current behavior warning issue may pedantic different directives using different mechanism convert string boolean ngmodel conversion requiredvalidator emailvalidator result pattern object definition inlined demonstration expected behavior angular provide unified mechanism string boolean transformation boolean attributes minimal reproduction problem instructions likely needed oneline code console motivation use case changing behavior angular provide guideline covert string boolean boolean attributes environment another question declared still accepts value design empty string expected consider typechecking inputs day", "num": "19929", "d": "10/2017"}, {"title": "like folder path routing", "body": "submitting hello know issue want know one task create folder path routing angular want routing look like infinity folder path finally want see path try nt work found one solution deprecated feature solution case maybe good solution task environment", "num": "19925", "d": "10/2017"}, {"title": "feature request use forroot lazyloaded modules", "body": "submitting feature request would great able use forroot method lazyloaded module motivation use case changing behavior module lazyloaded nt mean nt configurable least extent environment", "num": "19924", "d": "10/2017"}, {"title": "incorrect error logging resolve guards", "body": "submitting current behavior regular errors http errors correctly logged error occur resolve guard get weird stack trace expected behavior expect resolve error logged handled error send error collector raygun minimal reproduction problem instructions example correct error log example incorrect error log environment angular version tested angular angular occurs fresh cli generated project", "num": "19923", "d": "10/2017"}, {"title": "routing example broken", "body": "submitting current behavior navigate click contact displays expected behavior would expect contact route illuminated initial component removed dom removed routes minimal reproduction problem instructions please see motivation use case changing behavior illustration routing example environment recent angular evidently version reported systemjs config", "num": "19922", "d": "10/2017"}, {"title": "angular import browseranimationsmodule noopanimationsmodule production mode", "body": "submitting current behavior getting following error browser console running prod flag found synthetic property carxposstate please include either browseranimationsmodule noopanimationsmodule application imported browseranimationsmodule appmodulets also imported part imports appmodule import browseranimationsmodule angularplatformbrowseranimations ngmodule imports browseranimationsmodule declarations appcomponent providers bootstrap appcomponent export class appmodule also included angularanimations packagejson using angularcli application works per expected behavior running development mode create build using ng build prod open browser error occurs animation also happen expected behavior show error running prod mode animation work minimal reproduction problem instructions motivation use case changing behavior unable use animation module production environment", "num": "19921", "d": "10/2017"}, {"title": "keyboard event fired character", "body": "submitting current behavior code html ts handletyping event keyboardevent const pattern patterntest eventkey eventkeycode invalid character prevent input eventpreventdefault symbol keyboardevent even called moreover type keyboardevent event fired invalid symbols prevented expected behavior fire event press keyboard button prevent symbols buttons allowed minimal reproduction problem instructions steps reproduce implement method input field amount motivation use case changing behavior error allows input symbol strictlyruled inputs", "num": "19919", "d": "10/2017"}, {"title": "property controls exist type abstractcontrol angular", "body": "trying nested reactive form angular working fine try build aot throwing error controls exist type abstractcontrol googled tried things luck could anyone tell fix issue remove add typescript code constructor private fb formbuilder ngoninit thismyform thisfbgroup addresses thisfbarray thisinitaddress initaddress return thisfbgroup city addaddress const control thismyformcontrols addresses controlpush thisinitaddress removeaddress number const control thismyformcontrols addresses controlremoveat", "num": "19918", "d": "10/2017"}, {"title": "symbols referenced type imported js output", "body": "steps reproduce clone install angular builds later run equivalent running subpackage correct order examine run debug issue gulp task needed build dependencies expected includes import actual import missing comments example scrollstrategyoptions used type space omit imports js output symbols imported use types however output js includes imports symbols used generated code cc chuckjaz tbosch fyi crisbeto", "num": "19916", "d": "10/2017"}, {"title": "fix bug please", "body": "current behavior bug described stackblitz link however one paste hot twice text seen work expected behavior expect text cleared paste minimal reproduction problem instructions reproduce link motivation use case changing behavior need text change want certain conditions environment angular latest using chrome browser", "num": "19914", "d": "10/2017"}, {"title": "compiler cli requests angular cli builds done via webpack", "body": "submitting current behavior compilercli throws following error angular cli installed even build done angular cli ie via webpack please update angularcli angular requires least angular cli expected behavior compilercli throw error used cli tool webpack still issue using ngtoolswebpack error thrown minimal reproduction problem instructions motivation use case changing behavior use angular cli unit testing building better error reporting used via cli environment know using really old versions ngtoolswebpack angularcli shouldnt throw error build isnt done angularcli tested ngtoolswebpack works fine", "num": "19913", "d": "10/2017"}, {"title": "pushing element formarray respects updateon", "body": "submitting current behavior formarray emiting valuechanges without respecting updateon blur expected behavior formarray respects updateon blur minimal reproduction problem instructions environment", "num": "19911", "d": "10/2017"}, {"title": "topromise works angularcommonhttp doesnt angularhttp", "body": "current behavior multiple services requesting api written angular getting called downgrading angular context order convert observable service inside angular promise using changes service using request api working fine without problems changes serving using make requests result function undefined expected behavior expected use way used since return observable object ps hybrid app services working situations without problems using angular components maybe downgrading issue", "num": "19907", "d": "10/2017"}, {"title": "null pointer exception template parser", "body": "submitting current behavior compiler throws null pointer error points line full stack trace minimal reproduction problem instructions check environment cc chuckjaz", "num": "19906", "d": "10/2017"}, {"title": "compiler fulltemplatetypecheck raises errors router forms", "body": "submitting current behavior follows still issues beta testing even better opened findings simple template throws forms sign login login required password password required birth year birth year required let go raises environment tooling issues node version platform mac cc chuckjaz", "num": "19905", "d": "10/2017"}, {"title": "httptestingcontroller different behavior test based place verify put", "body": "submitting current behavior test behaves differently based place verify put always full path unexpected requests shown well put aftereach sends two errors first error expected request full path second error unexpected request without params screen verify placed aftereach put end test sends one error error expected request full path none unexpected requests screen verify end test expected behavior test show expected unexpected requests full path regardless place verify put minimal reproduction problem instructions code bug reproduction available github motivation use case changing behavior make tests reliable environment", "num": "19903", "d": "10/2017"}, {"title": "big idle gaps jit compilation", "body": "submitting current behavior lot idle gaps dynamic component compilating jit performance profile expected behavior gaps faster compilation motivation use case changing behavior compiling runtime markup lot components dom nodes instert directly html template parsing takes lot time also template dynamically added angularjs upgrading app takes instead environment", "num": "19902", "d": "10/2017"}, {"title": "jit compiler use already precompiled aot components factories", "body": "submitting current behavior runtime compilation dynamic component template received backend ignores already existing components factories jit recompile every component provided imported modules expected behavior jit uses existing factories compile new dynamic component motivation use case changing behavior forced use jit runtime compile random markup received backend markup components known already precompiled aot current app added list imported main module jit starts compile markup expecting see particular dynamically created component compilation jit ignores everything compiles every component used templates anything modules imported dynamically created one takes pc much customers computes components also cant see way use jit case cause markups unkown frequently change thousands cant use approach calls dom nodes due lot content projection supported via method environment", "num": "19901", "d": "10/2017"}, {"title": "aot build hang lazy route loading using new compilercli", "body": "submitting current behavior start hang initial navigation url without aot compiler works ok expected behavior work minimal reproduction problem instructions get minimal reproduction due private project may related rxjs using environment", "num": "19900", "d": "10/2017"}, {"title": "provider animationengine thrown switch", "body": "submitting current behavior error thrown server side rendering switch expected behavior error thrown minimal reproduction problem instructions server ng module common ng module rendering code environment", "num": "19899", "d": "10/2017"}, {"title": "multiples providers work core module", "body": "hello bug project modular two modules one called coremodule appmodule adding multiple providers config localization error handler coremodule calling coremodule appmodule expected behavior call different provider work correctly current behavior one different providers working correctly methods initconfigprovider invoked crash also explicit error steps reproduce folder app folder called core put errorhandlerservicets appconfigproviderts calling coremodulets module call coremodule appmodulets angularcli structured project usecase motivation changing existing behavior really useful put many common providers module call ngmodule versions angular material os typescript browsers affected angular os windows typescript browser chrome hope clear thanks lot help", "num": "19898", "d": "10/2017"}, {"title": "angularcompilercli outputs wrong folders gt aot build fails", "body": "submitting current behavior since immense changes compilercli aot build fails due generated files ngsummary etc put wrong folders expected behavior aot compilation output correct folders build works details command used outputs seen images srctsconfigappjson tsconfigjson environment", "num": "19897", "d": "10/2017"}, {"title": "using angular app one project avoiding conflicts", "body": "hey guys using latest version angular project needs need app living project like include every headerjs files rootjs files projects compiles files issue obviously conflicts two files currently one zonejs best practices want use app projects avoiding conflicts thanks", "num": "19896", "d": "10/2017"}, {"title": "error angularrouter", "body": "using angular angularrouter getting error code value provisioning getting correctly getting error", "num": "19895", "d": "10/2017"}, {"title": "angularplatformbrowser issue", "body": "error implementing server side rendering angular", "num": "19894", "d": "10/2017"}, {"title": "aio linter ignore files", "body": "examples contains extra helper files like etc instances case leas files needs ignored linter files fixed well helper files meant run", "num": "19893", "d": "10/2017"}, {"title": "noopanimationsmodule animation callbacks right order", "body": "submitting current behavior browseranimationsmodule mode animation callbacks order correct would fired noopanimationsmodule mode animation callbacks order correct would fired could see demo console message demo expected behavior fired minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19891", "d": "10/2017"}, {"title": "email validator makes form invalid field empty", "body": "submitting current behavior input marked email directive form becomes invalid even field empty touched", "num": "19890", "d": "10/2017"}, {"title": "httpclient httperrorresponse json blob", "body": "submitting sure bug intended behavior ca nt check bug although seems like one current behavior sending http request like server responds header body returns json object property type expected behavior would expect property according server returned since documentation says error property contain either wrapped error object error response returned server ref puts server returned body feels like obey servers header describing minimal reproduction problem instructions use request motivation use case changing behavior environment", "num": "19888", "d": "10/2017"}, {"title": "test issue", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19887", "d": "10/2017"}, {"title": "httpclientxsrfmodule breaks compatibility httpmodule handling get requests", "body": "submitting current behavior could use xsrf support get requests added xsrf header requests including get requests send xsrf header get requests understand implemented way corporate world might want protect everything well point though point undocumented breaking change moving could cost lot debugging time code depending old behaviour tell problem looking source code accident long debugging googling seeing expected behavior either document different behaviour allow overriding options keep minimal reproduction problem instructions server supports xsrf create get api call observe call working fine change httpclientxsrfmodule see call fail motivation use case changing behavior working breaks environment", "num": "19885", "d": "10/2017"}, {"title": "reexport less symbols ngfactory files", "body": "nt reexport symbols user already reexported never reexport symbols part arguments non simple function calls", "num": "19883", "d": "10/2017"}, {"title": "events swallowed using ngtemplateoutlet context surrounded element click listener", "body": "submitting current behavior sorry long confusing title listener handler function nothing inside template outlet simple template template nothing single provided case empty object since template references variables setup clicking checkbox mark checked remove works remove listener surrounding works expected behavior checkbox toggled minimal reproduction problem instructions try click checkbox wo nt work remove listener checkbox works motivation use case changing behavior environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx x safari desktop version safari ios version xx ie version xx edge version xx tooling issues node version xx platform others", "num": "19882", "d": "10/2017"}, {"title": "question cascade drop nested forms", "body": "hello question could nt find answer online cascade drop list nested reactive form thank bilal", "num": "19881", "d": "10/2017"}, {"title": "hostlistener option always run ngzone", "body": "submitting current behavior runs function whatever zone creation expected behavior allow optional zone specified boolean parameter always run alternately provide zone creation context component creators may easier implement general purpose minimal reproduction problem instructions create component event outside every time event fired run zone created motivation use case changing behavior creating virtual scroller creation virtual components component register zone created ngzone looks ugly events wrapped functions would nice way bind function call particular zone declaratively", "num": "19878", "d": "10/2017"}, {"title": "angular tutorials", "body": "submitting current behavior tutorial live demo working expected behavior working live demo minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19877", "d": "10/2017"}, {"title": "support lazyloaded event plugins", "body": "currently event plugins must loaded bootstrap issue lazyloading subset application would need certain plugin loaded", "num": "19874", "d": "10/2017"}, {"title": "httpclient throws contenttypejson response json encoded string", "body": "submitting x bug report current behavior api talks json everything json encoded sometimes return json encoded strings json fine encodingdecoding strings httpclient blindly jsonparse even browser already decoded mentioned directly codeblock jsonparse fails like code debugger responsetype json response already decoded httpclient jsonparse anyway code debugger browser returns json encoded object see object already javascript object thing preventing throwing jsonparse error condition expected behavior nt ever jsonparse browser already parsed httpclient nt throw accepting json encoded strings environment", "num": "19873", "d": "10/2017"}, {"title": "viewchild results inconsistant oninit lifecycle", "body": "submitting current behavior lifecycle provides result inside template expected behavior lifecycle provide result inside template updated due feedback feel expected behavior simplified behavior split static queries better tooling error trying access query properties inappropriate times dynamic queries lifecycle minimal reproduction problem instructions notice values different depending reference motivation use case changing behavior adds inconsistent behavior leads hard find bugs better fail fast actual issue could found easily failed fast environment", "num": "19872", "d": "10/2017"}, {"title": "ngfor updates html comments changes", "body": "submitting current behavior set use directive inside components new instance array passed updates html comment regardless whether new instance array different previous one triggers mutation observer angular sees asynchronous operation triggers new instance array passed updates html comment turns eternal cycle browser hangs expected behavior nt change html comment actual changes changes html comment old instance array mutated crucial noticed minimal reproduction problem instructions instance look uncomment run application see browser hangs motivation use case changing behavior allow mutationobserver set element uses case found bug tried use resizeobserver angular application environment would appreciate least see workaround issue", "num": "19871", "d": "10/2017"}, {"title": "route param allow example param work", "body": "submitting x feature request current behavior trying access path app catchall route caught instead expected behavior want navigate profilemodule path minimal reproduction problem instructions add route app routes typescript const routes routes path pathmatch full loadchildren homehomemodule homemodule path username loadchildren profileprofilemodule profilemodule path redirectto foo export const approutesmodule routermoduleforroot routes environment angular version browser chrome desktop version tooling issues node version platform mac related stackoverflow post made", "num": "19868", "d": "10/2017"}, {"title": "input twoway binding", "body": "hi want access text text area child component put parent component keep updated told input angular supposed perform twoway binding ca nt way nt understand found workaround issue includes output send info parent component input already way nt know want avoid example parent component import component angularcore component selector appsettings templateurl settingscomponenthtml export class settingscomponent html child component import component oninit input angularcore component selector appsettingsstudydesign templateurl settingsstudydesigncomponenthtml export class settingsstudydesigncomponent implements oninit input studydesigntext string constructor ngoninit superoninit loadcontrols loadcontrols void thisstartalltextareas private startalltextareas thisstarttextarea studydesigntextarea private starttextarea htmlid string code configure text area right change value text area send signal output parent component notified console log value printed value initial one friend thing worked missing thanks advance", "num": "19867", "d": "10/2017"}, {"title": "ca nt pass parameters template animation", "body": "written small animation nt much myanimationsts registered animation component template trying works ignore specified value toppixels still takes also tried still ignored missing something angular modules", "num": "19866", "d": "10/2017"}, {"title": "ngfor bug referring unknown properties throw error", "body": "submitting current behavior using example defined component class nt see errors console cli maybe misspelled collection name maybe copy paste mistake currently app shows empty template without error message expected behavior compiler throw error referring unknown property collection component example language service via vs code report unknown properties minimal reproduction problem instructions demo problem code open console see errors motivation use case changing behavior could save valuable debugging time clear error message like one language service environment", "num": "19863", "d": "10/2017"}, {"title": "angular onwards regular expression causes screens hide", "body": "submitting current behavior angular onwards tested following pattern validatorspattern form control causes screens duplicate ie hide see screen previous screen displayed tracked issue pattern validation dash hash character together pattern causes issue java script error console following works okay also works okay dash together expected behavior going one component another previous screen shown least error message console minimal reproduction problem instructions motivation use case changing behavior defect environment", "num": "19862", "d": "10/2017"}, {"title": "component ngfactory sourcemap sources include links root directory", "body": "submitting current behavior aot compilation generated ngfactory component sourcemap sources property contain directory entry root directory appcomponentngfactoryjs logincomponentngfactoryjs provokes rollup fail bundling enabled sourcemap comparing source root folder different content following error shown expected behavior sourcemap contains references valid sources ngfactoryts html template environment", "num": "19861", "d": "10/2017"}, {"title": "angular nt compile aot version", "body": "submitting current behavior following guide angular ngc compiler nt create aot directory angularcompileroptions gendir aot expected behavior minimal reproduction problem instructions files tsconfigaotjson packagejson included repo motivation use case changing behavior environment", "num": "19860", "d": "10/2017"}, {"title": "compiler warn bogus click handler expressions", "body": "puzzled event handlers firing stuff like valid expression obviously meant", "num": "19859", "d": "10/2017"}, {"title": "ngc nt option generate source template maps", "body": "submitting current behavior template source maps generate make sourcemapexplorer unusable see would nice option via angularcompileroptions disable source map generation templates ngc honor sourcemap flag turns source maps even typescript code expected behavior like ngc honor flag today allow template disabled template source maps via flag environment", "num": "19858", "d": "10/2017"}, {"title": "size regression due host view factories generated nonentrycomponents", "body": "submitting current behavior aot compiler generated host view factories entrycomponents generate even components marked entrycomponents example aio searchresultscomponent marked entrycomponent upgrading noticed started generating component way tightly couples rest component factories ca nt eliminated relevant snippets generated code js function l return viewdef l elementdef null null aiosearchresults null null null rendertypesearchresultscomponent directivedef null searchresultscomponentsearchresultscomponent null null null null stylesfilenotfoundsearchcomponent createcomponentfactory aiosearchresults searchresultscomponentsearchresultscomponent searchresults searchresults rendertypefilenotfoundsearchcomponent encapsulation styles stylesfilenotfoundsearchcomponent data expected understanding host factories needed entrycomponents ca nt estimate significant size regression aio unfortunately updating various dependencies due bugs api incompatibilities ca nt isolate change change compiler overall looking size increase might might contain size regressions", "num": "19857", "d": "10/2017"}, {"title": "sorting array displayed ngforof applies void animation state elements", "body": "submitting current behavior displaying elements array using ngforof animations defined elements sorting array using arrayprototypesort void animation state applied elements expected behavior void state applied elements displayed minimal reproduction problem instructions click create display list items configured animations api colored blue state red void state transition two items correctly transition red blue upon creation click sort sort list sorted see items transition blue red indicating void state even though items still displayed motivation use case changing behavior environment", "num": "19855", "d": "10/2017"}, {"title": "httpclient interceptor issue zonejs", "body": "submitting current behavior using interceptor convert urls absolute urls nt work throw error works fine expected behavior work working minimal reproduction problem instructions import injectable angularcore import httpevent httpinterceptor httphandler httprequest angularcommon import observable rxjsobservable injectable export class myinterceptor implements httpinterceptor", "num": "19853", "d": "10/2017"}, {"title": "make http interceptor configuration available component level", "body": "submitting current behavior http interceptors added inside ngmodule add component http client ignores interceptor interceptor called expected behavior interceptor added component providers section affect component minimal reproduction problem instructions motivation use case changing behavior need add interceptor one component components need another interceptor environment thank", "num": "19852", "d": "10/2017"}, {"title": "angular custom validators priority", "body": "submitting feature request current behavior apply multiple custom validators directives template driven forms input control ordering executing validators example input type number ngmodel requiredvalidator onlynumbervalidator morethantenvalidator assumed directives never rely priority component directives may use following attributes priority terminal angular components may use used angular better write code relies expected behavior validators execute orders declared dom means requiredvalidator first executed one onlynumbervalidator morethantenvalidator", "num": "19851", "d": "10/2017"}, {"title": "formbuilder supporting new angular abstractcontroloptions", "body": "submitting current behavior based seems formbuilder updated support new angular abstractcontroloptions respectively creating expected behavior allowing passing new creating angular motivation use case changing behavior able use well new angular environment", "num": "19849", "d": "10/2017"}, {"title": "ca nt override providers", "body": "simplified version see aio component class maticoncomponent constructor http ngmodule providers httpmodule class maticonmodule injectable class mycustomhttp ngmodule imports maticonmodule providers provide http useclass mycustomhttp class appmodule current behavior opposed expected behavior maticoncomponent injected mycustomhttp http nt appear anywhere generated code makes eligible treeshaking", "num": "19848", "d": "10/2017"}, {"title": "feature request json schema angularserviceworker", "body": "submitting current behavior nt json schema file expected behavior used testing motivation use case changing behavior angular cli schema useful validate json file think better ngswjson schema cc alxhub", "num": "19847", "d": "10/2017"}, {"title": "bug reactive form validation documentation page", "body": "new angular following code snap doc page created user form html try validation modify code snap doc change name username usernameis required however serve chrome tells ca nt ready invalid undefined change username userformget username usernameis required runs without problem get correct error message way use node chrome running", "num": "19846", "d": "10/2017"}, {"title": "angular soap client example easy way", "body": "please provide samples angular soap request using xml difficult using soap call using angular thanks advance provide required information submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19844", "d": "10/2017"}, {"title": "reconnect ts sourcemaps", "body": "temporarily removed sorcery waiting new version tsickle ts updates able hook sorcery rollup plugin back", "num": "19841", "d": "10/2017"}, {"title": "template source maps cause issues sourcemapexplorer", "body": "current behavior recent fix enabled template source maps sourcemap explorer showed generated factories full path recent update least two issues template source maps source maps prefixed path original component template file causing component templates mixed lot unaccounted space sourcemapexplorer expected behavior template source maps prefixed path original componenttemplate nt significant unaccounted space minimal reproduction problem instructions environment", "num": "19840", "d": "10/2017"}, {"title": "service worker api docs missing nextangulario", "body": "please add service worker entrypoint dgeni configuration", "num": "19838", "d": "10/2017"}, {"title": "change detection quirk ngformresetform", "body": "submitting current behavior right calling instance clear validation mark everything pristine change value one form controls bound using templatedriven forms control update new value instead gets stuck value sets happens control untouched expected behavior change detection pick change make bound variable calling minimal reproduction problem instructions using example fill name field choose yes press submit form reset dropdown revert expected fill name field choose press submit form reset dropdown reverted empty value rather import component viewchild angularcore import clonedeep lodash import ngform angularforms class user ishappy false name component selector approot template name styleurls appcomponentcss export class appcomponent user new user viewchild myform myform ngform submit consolelog submitted clonedeep thisuser thismyformresetform thisuser new user motivation use case changing behavior behavior confusing even nt change angular response probably documented somewhere environment browser x chrome desktop version official build chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "19835", "d": "10/2017"}, {"title": "translation russian documentation", "body": "hello wanted ask working group translate stable documentation russian would glad translate russian beginning developers russia popularity angular would increase see localization documentation everything good react vue would great official site architecture like mdn mozilla would easy bring new changes audience italian spanish french russian would significant event exit angular opportunity directly official site deal translation documentation least repository want engage popularization framework", "num": "19834", "d": "10/2017"}, {"title": "ngmodulengc reports metadata error rather typescript error", "body": "modify mispell import like build bazel changing gives expected error", "num": "19833", "d": "10/2017"}, {"title": "metadata output wrong location w angular", "body": "steps reproduce clone expected behavior metadata output actual behavior metadata output reproduction captures issue affecting angular material using angular cc tbosch chuckjaz originally reported crisbeto devversion", "num": "19832", "d": "10/2017"}, {"title": "replace picture official site", "body": "official website angulario map shows import however current stable versions imported differently angularcore also picture principle nothing visible translucent overlap somehow fixed", "num": "19831", "d": "10/2017"}, {"title": "ngsubmit working ie angular", "body": "submitting current behavior clicking enter work internet explorer angular reactive form ngsubmit expected behavior pressing enter key would cause reactive form trigger ngsubmit minimal reproduction problem instructions steps reproduce create reactive form add standard form input fields internet explorer press enter filling form see ngsubmit fail pick keypress motivation use case changing behavior form submission issue existed fixed angular environment ie windows machine", "num": "19830", "d": "10/2017"}, {"title": "proposal renderer setstyle invokeelementmethod", "body": "submitting current behavior way pass object removed motivationuse case changing behavior allow passing object comfortable use multiple properties need able run things like etc ssr web workers", "num": "19828", "d": "10/2017"}, {"title": "change parent component", "body": "hi possible change parent component component something like trying implement drag drop functionality want able drag parent parent b", "num": "19827", "d": "10/2017"}, {"title": "leave animation triggers child ngondestroy immediately", "body": "submitting current behavior called animation starts expected behavior called animation finishes minimal reproduction problem instructions reproduction plunkr wait animation finish element background red whole duration animation click hide button red background removed immediately animation starts replays necessary use show button restart reproduction motivation use case changing behavior destroy method makes visual changes component directive visible leave animation results unexpected behavior user environment", "num": "19826", "d": "10/2017"}, {"title": "http naked value correctly parsed using json response type", "body": "submitting current behavior case backend returns straight body without nested object console print outs keeps yes know strongly recommended json apis return pure values wrapped object still forbidden seems like javascript supports parsing values happening line obviously expected behavior keep falsy value unchanged current workaround set parse environment", "num": "19825", "d": "10/2017"}, {"title": "feat ngswitchcase add ngswitchbreak optional directive", "body": "submitting current behavior value tested matches multiple case option evaluated expected behavior case directive following cases nt evaluated minimal reproduction problem instructions let consider arrays filled values compared size empty size displayed plunker motivation use case changing behavior case size relevant nt want cases evaluated directive introduced accomplish environment", "num": "19824", "d": "10/2017"}, {"title": "date pipe add skeleton formats", "body": "submitting current behavior date pipe nt offer way use custom date formats respect ordering date components according locale expected behavior way specify custom format keeping ordering locale suggested achievable adding support cldr skeletons see additional datetime formats following example illustrates expected output pipe without respecting ordering locale localeid engb date date eee mmm current tue oct locale ordering tue oct localeid enus date date eee mmm current tue oct locale ordering tue oct localeid huhu date date eee mmm current k okt locale ordering okt k minimal reproduction problem instructions motivation use case changing behavior believe would useful feature internationalised apps instance multiple apps render specific date components expressed using standard format environment", "num": "19823", "d": "10/2017"}, {"title": "pipes docs add input test format", "body": "add input docs test format would clearer", "num": "19822", "d": "10/2017"}, {"title": "httpclientmodule httprequest params property delete success httpinterceptor", "body": "angular version interceptor follow export class requestinterceptor implements httpinterceptor idparams delete success debug image follow", "num": "19821", "d": "10/2017"}, {"title": "provide validation function ngform", "body": "submitting requirement current behavior must use loop manual control form validate ts code expected behavior provide validate function environment", "num": "19820", "d": "10/2017"}, {"title": "support twoway bindings item ngfor", "body": "submitting current behavior following code throws exception following code works also works oneway binding expected behavior consistent behaviour expected across ways declaring loop preferably always working environment angular version others see discussion stackoverflow", "num": "19819", "d": "10/2017"}, {"title": "aot unit tests cache ngsummaries loaded test", "body": "want make ngsummary used test configurable spec level would mean would end processing transitive ngsummary tree per test would slow cache known ngsummary functions child tree cached value nt walk tree every test", "num": "19817", "d": "10/2017"}, {"title": "aot unit tests error aoted component jited", "body": "inittestenvironment takes summary function used make use aoted components unit tests could problem summary nt link component test test would wrongly end compiling component add treeshakeable flag tsickle output aoted component indicates component aot compiled jot compiler throw error encounters flag", "num": "19816", "d": "10/2017"}, {"title": "aot unit tests need overridetemplate support aot mode", "body": "order help developers switch aot unit testing need make easier mock child components way decided would testbedoverridetemplate component newtemplate function would jit compile new template existing aoted component", "num": "19815", "d": "10/2017"}, {"title": "change detection updating view mark check", "body": "submitting current behavior change detector marked check external http response case facebook sdk callback continued timeout new angular http subscription view updated new values event triggered browser view updated new values note remove timeout set lower value like view updated expected note even remove strategy expected behavior view updated new values mark check minimal reproduction problem instructions click set user button gt gt user displayed second click fire event button gt gt user displayed motivation use case changing behavior view updated properly wait next event environment", "num": "19814", "d": "10/2017"}, {"title": "docs aio phonecat upgrade tutorial nt work typescript gt", "body": "submitting current behavior phonecat upgrade tutorial upgrading phone service receive error browser console uncaught referenceerror exports defined downgrade typescript lt everything works typescript added functionality adds top every js file ts file includes imports statement expected behavior application runs without error minimal reproduction problem instructions follow phonecat upgrade tutorial end upgrade phone service section motivation use case changing behavior appears tutorial valid typescript released typescript needs clarification best way import upgraded components angular components environment", "num": "19813", "d": "10/2017"}, {"title": "programatic api create component work templateref", "body": "submitting current behavior currently easy way instantiate component programatically actual component instance bind inputs work want go even farther nest different dynamic components use nativeelement dom methods make component wrap component limitation componnet instantiating programatically ngtemplate modify rendered content way pass dynamically created template component ex programatically instantiate mycomponent way dont know also pass templateref item html custom template expected behavior ideally able turn programatically instantiated component template kind form bind programatically instantiated component example let say component rendering list items want modify items rendered html template would something like html name itemname code could something like ts let resolvedcompfactory thisfactoryresolverresolvecomponentfactory mylist let mylist thisviewcontainercreatecomponent resolvedcompfactory let itemdetailfa thisfactoryresolverresolvecomponentfactory itemdetail let myitemdetail thisviewcontainercreatecomponentastemplate itemdetailfa way bind current context item could technicallity mycomponentinstanceitemref myitemdetail mycomponentinstancelist b others workaround see api code would help private maybe api first cut way could use wrap component component ts let content new ngcontent buttoncomponent bindingsmap contentadd click somepaneltempalteaddadd content add component hierarchy ts let containerelement ngconcretetemplate viewcontainer factoryresolver let content new ngcontent hovercardcomponnet bindingsmap contentadd createlayout containerelementadd content see either elementcontent eg string case button eg last example hovercard needs elementcontent shows details since parent concretetemplate aggregating everything reference viewcontainer resolverfactories child elements access instantiate things course applying bindings need access metadata apply bindings jit used probably easier retrive metadata aot would probably utilize outcome feature angularcompileroptions", "num": "19812", "d": "10/2017"}, {"title": "nested route animatechild play leave animation", "body": "submitting current behavior two nested routes go directly nested route enter animations play routes leave route leave animation first route plays nested route disappears immediately expected behavior leave animations play navigating away nested route minimal reproduction problem instructions example slideins open one another playing enter animations code click backdrop navigate root route slowed slide animation demonstrate issue see nested slidein disappears immediately first slidein plays animation fine environment", "num": "19807", "d": "10/2017"}, {"title": "elementref documentation links deprecated renderer class", "body": "submitting current behavior note end elementref api links renderer deprecated expected behavior link replacing renderer minimal reproduction problem instructions go elementref api look warning message bottom page motivation use case changing behavior people pointed preferred class nt deprecated class", "num": "19806", "d": "10/2017"}, {"title": "de", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19805", "d": "10/2017"}, {"title": "date pipe return false value chrome", "body": "submitting current behavior date pipe returns false value chrome chrome correct value firefox safari correct value expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19801", "d": "10/2017"}, {"title": "strange guard behavior reinstalling nodemodules rxjs changed added minimal reproduction project", "body": "hello perfectly working project built several computers days old nodemodules folder deleting reinstalling nodemodules yesterday project working anymore propably super dependency compatible older angular version submitting x bug report current behavior observables subjects dont work correctly code working like charm old nodemodules canactivate snapshot activatedroutesnapshot state routerstatesnapshot newer doesnt jump line stacktrace angular apionunhandlederror handleunhandledrejection apimicrotaskdraindone drainmicrotaskqueue promise resolved async schedulemicrotask webpackjsonp zonejsdistzonejszonedelegatescheduletask webpackjsonp zonejsdistzonejszonescheduletask webpackjsonp zonejsdistzonejszoneschedulemicrotask scheduleresolveorreject zoneawarepromisethen webpackjsonp core webpackjsonp core bootstrap srcmaints webpackrequire webpackrequire webpackjsonpcallback anonymous packagejson expected behavior code working weeks stopped working reinstalling nodemodules never ending story environment angularcli node os angularanimations angularcdk angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularlanguageservice typescript browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx minimal reproduction steps download extract angularbugzip npm ng server port navigate browser add breakpoint externalloginguardts would found jump line everytime throws error updating nodemodules yesterday", "num": "19799", "d": "10/2017"}, {"title": "prefix component selector input output", "body": "submitting current behavior expected behavior ngmodule gives options means compoentdirective selector prefix input output course final combine result camelcase inputoutput dash case selector minimal reproduction problem instructions motivation use case changing behavior angular components maker create prefix coded code someone forks project order reuse componentdirective consistency must rename prefix global search think namespace module used solving nt namespace code almost every class function specific prefix happening angular mention css prefix guilds css prefix code literal nt like xxx environment", "num": "19798", "d": "10/2017"}, {"title": "ca nt resolve parameters service", "body": "submitting current behavior following classes injectable export abstract class abstractservice constructor protected readonly httpclient protected readonly router router private readonly endpoint string injectable export class userservice extends abstractservice constructor protected readonly httpclient protected readonly router router super router users getting following warning warning ca nt resolve parameters abstractservice abstractservicets object object object object become error angular sure remove works really ca nt say version angularaot stopped working environment", "num": "19797", "d": "10/2017"}, {"title": "weird behavior happening canactviate used resolve", "body": "current behavior suppose protecting admin canactivate redirect user login resolve directly hit admin browser noticed browser temporarily go root resolve completes go login expected happens user directly hits admin browser expected behavior angular shouldnt go root resolve pending minimal reproduction problem instructions plunker set exactly official angular router example resolve added login download run app localhost see happen though motivation use case changing behavior using canactivate redirect user route waits resolve environment browser chrome havent tried browsers", "num": "19796", "d": "10/2017"}, {"title": "ci uses unpinned version local chrome", "body": "filipesilva removed chrome installation scripts replaced travis chrome addon installs latest stable chrome vm boots problematic chrome version changes uncontrollably face tests failing timing unexpectedly happened today chrome version change reasoning documentation hard tell way mhevery nt know filipesilva know checked docs addon nt allow us specify concrete version suggest go back original way installing local chrome via script pin recent stable chrome", "num": "19793", "d": "10/2017"}, {"title": "rollout", "body": "", "num": "19792", "d": "10/2017"}, {"title": "question angular package format documentation location", "body": "submitting documentation describing angular package format another place besides google docs reason ask link blocked company proxy would like easily share information members team wanted avoid pasting gist lol apologies correct repo issue thanks", "num": "19790", "d": "10/2017"}, {"title": "deprecated http still used platformserver", "body": "submitting current behavior deprecated angular still used places meaning install deprecated package work break also getting bigger build size expected behavior used anymore environment", "num": "19788", "d": "10/2017"}, {"title": "parameters inside stagger nt work", "body": "submitting current behavior using animation parameter inside stagger like animation fails parameter replaced expected behavior parameters work inside stagger timings well minimal reproduction problem instructions create stagger animation parameter inside staggers timing motivation use case changing behavior parameter replacement works timing properties work stagger well environment", "num": "19786", "d": "10/2017"}, {"title": "test google analytics flaky fails consistently", "body": "", "num": "19785", "d": "10/2017"}, {"title": "static fields removed transpiled code", "body": "submitting current behavior reference static field another class transpile using ngc generated file static field contain original data example export default class refdata static countries country ireland continent europe language english country spain continent europe language spanish import component angularcore import refdata refdata component selector myapp templateurl appcomponenthtml export class appcomponent countries transpiled generated refdatajs file empty function data countries present expected behavior transpiled files contain original static data worked expected versions angular minimal reproduction problem instructions motivation use case changing behavior created simple repo issue instructions npm install nodemodulesbinngc p tsconfigaotjson look aotsrcapprefdatajs see longer contains countries data cause runtime error environment", "num": "19782", "d": "10/2017"}, {"title": "ngcontainer working expected", "body": "submitting current behavior need repeat component inside another component let say component accepts inside ngcontent component type b something like work ca nt modify componenta compoenentb approaches nt render componentb ideas overcome thanks ps may need add multiple componentb item minimal reproduction problem instructions created plunker demo ppreview see intended result appcomponenthtml", "num": "19781", "d": "10/2017"}, {"title": "aot ngc find module", "body": "submitting current behavior taking angular quickstart repo baseline adding aot instructions ngc compiler look module factory compiled nodemodulesbinngc p tsconfigaotjson srcmaints error find module aotsrcappappmodulengfactory expected behavior compilation work minimal reproduction problem instructions repo issue instructions npm install nodemodulesbinngc p tsconfigaotjson motivation use case changing behavior regression works expected previous versions environment angular", "num": "19780", "d": "10/2017"}, {"title": "queryparams loading ios win phone", "body": "submitting current behavior using url queryparams like problem windows mobile ios devices nt get pin value use component however works desktop browsers android devices expected behavior work like browsersdevices minimal reproduction problem instructions see current section behavior motivation use case changing behavior environment angular browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx x safari ios version xx ie version xx edge version xx x windows phone", "num": "19779", "d": "10/2017"}, {"title": "add global object", "body": "submitting current behavior amp amp expected behavior currently want profile angular change detection add call code base pass moment calling component however would convenient expose part global object run profiler console without modifying code example production environment understand simple change requires two calls function functions parameters willing make pr blocking issues", "num": "19775", "d": "10/2017"}, {"title": "tour heroes tutorial fail add new hero delete heroes", "body": "follow toh tutorial part implementing delete hero feature tried delete list add new hero nothing happened also tried download example page install run test result adding hero list length gt works normally following error threw console error error uncaught promise object object resolvepromise resolvepromise zonedelegatewebpackjsonp zonejsdistzonejszonedelegateinvoketask objectoninvoketask zonedelegatewebpackjsonp zonejsdistzonejszonedelegateinvoketask zonewebpackjsonp zonejsdistzonejszoneruntask drainmicrotaskqueue zonetaskwebpackjsonp zonejsdistzonejszonetaskinvoketask invoke invoketask", "num": "19774", "d": "10/2017"}, {"title": "browserstack fails access api denied", "body": "investigate make browserstack required", "num": "19768", "d": "10/2017"}, {"title": "compiler throwing place throw", "body": "submitting current behavior throw style urls resolved expected behavior avoid stack trace minimal reproduction problem instructions see steps motivation use case changing behavior stack trace unnecessary ugly", "num": "19767", "d": "10/2017"}, {"title": "angular compiler ca nt find files next source files", "body": "submitting current behavior build nt work angular working issue compile ts files ends throwing error find files next source files one example failures expected behavior build work minimal reproduction problem instructions patch pr run run motivation use case changing behavior environment", "num": "19765", "d": "10/2017"}, {"title": "evaluate template expression component", "body": "submitting current behavior documentation evaluate template expression runtime within component without rendering expected behavior would like documentation call template expression evaluator minimal reproduction problem instructions let template itemrefcreatedon date ymd valid template expression let item thisitems thisitems array objects whose type known item createdonevaluationresult evaluate itemref item template eval context template real issue nt nt documented evaluate function documentation components used evaluation process motivation use case changing behavior would like evaluate template expression items array order filter result template expression element environment", "num": "19763", "d": "10/2017"}, {"title": "dgeni able find unused docregions report", "body": "docregions docs used anywhere", "num": "19761", "d": "10/2017"}, {"title": "document ngc places generated files nodemodules", "body": "submitting current behavior places files wrong directory plus name directory run case compiled files placed running command files tsconfig using angular works expected files placed reproduction expected behavior places compiled files environment", "num": "19760", "d": "10/2017"}, {"title": "form control state correctly changedetectionstrategyonpush", "body": "submitting current behavior compoent changedetection changedetectionstrategyonpush form control required value empty state ngvalid cklicked state ok use formcontrolname state ok expected behavior statenginvalid minimal reproduction problem instructions appcomponentts js component selector approot templateurl appcomponenthtml styleurls appcomponentscss changedetection changedetectionstrategyonpush export class appcomponent domain b c new date constructor html b c scss form ngvalid required ngvalidrequired borderleft solid green nginvalid form div borderleft solid red motivation use case changing behavior environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows others", "num": "19759", "d": "10/2017"}, {"title": "version duplication method one class", "body": "nodemodules angularcore angularcorecorejs closure compiler report advanced mode", "num": "19758", "d": "10/2017"}, {"title": "aot compilation allowjs true fails", "body": "submitting current behavior aot compilation fails expected behavior aot compilation works minimal reproduction problem instructions git clone cd ngcallowjs npm npm run ngc ngc failure npm run ng build aot angular cli failure remove allowjs false srctsconfigappjson make builds work motivation use case changing behavior environment compilation fails different ways angular cli kamik dsandboxngcallowjs npm run ngc masterproject ngc sandboxngcallowjs ngc p srctsconfigngcjson error typeerror read property type undefined objectgeteffectivetypeannotationnode assigncontextualparametertypes checkfunctionexpressionorobjectliteralmethod checkexpressionworker checkexpression checkbinarylikeexpression checkbinaryexpression checkexpressionworker checkexpression checkbinarylikeexpression npm err code elifecycle npm err errno npm err masterproject ngc npm err exit status npm err npm err failed masterproject ngc script npm err probably problem npm likely additional logging output npm err complete log run found npm err c angular cli kamik dsandboxngcallowjs npm run ng build aot masterproject ng sandboxngcallowjs ng build aot date hash time chunk inline inlinebundlejs inlinebundlejsmap inline kb entry rendered chunk main mainbundlejs mainbundlejsmap main bytes initial rendered chunk polyfills polyfillsbundlejs polyfillsbundlejsmap polyfills bytes inline initial rendered chunk styles stylesbundlejs stylesbundlejsmap styles kb inline initial rendered error srcmaints module build failed error typescript compilation failed plugindonethen sandboxngcallowjsnodemodules processtickcallback multi srcmaints error srcpolyfillsts module build failed error typescript compilation failed plugindonethen sandboxngcallowjsnodemodules processtickcallback multi srcpolyfillsts error error write file would overwrite input file error write file would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesafunctionjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesaninstancejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesanobjectjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesarrayfromiterablejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesarrayincludesjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesarraymethodsjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesarrayspeciesconstructorjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesarrayspeciescreatejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesbindjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesclassofjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulescofjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulescollectionstrongjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulescollectionweakjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulescollectionjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulescorejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesctxjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesdefinedjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesdescriptorsjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesdomcreatejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesenumbugkeysjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesexportjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesfailsjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesforofjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesglobaljs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmoduleshasjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmoduleshidejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmoduleshtmljs would overwrite input file error write file would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesinheritifrequiredjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesinvokejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesiobjectjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesisarrayiterjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesisarrayjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesisobjectjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesitercalljs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesitercreatejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesiterdefinejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesiterdetectjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesiterstepjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesiteratorsjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmoduleslibraryjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesmetajs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesmetadatajs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesobjectassignjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesobjectcreatejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesobjectdpjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesobjectdpsjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesobjectgopdjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesobjectgopnjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesobjectgopsjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesobjectgpojs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesobjectkeysinternaljs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesobjectkeysjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesobjectpiejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesownkeysjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulespropertydescjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesredefinealljs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesredefinejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulessetprotojs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulessetspeciesjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulessettostringtagjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulessharedkeyjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulessharedjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulestoabsoluteindexjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulestointegerjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulestoiobjectjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulestolengthjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulestoobjectjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulestoprimitivejs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesuidjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulesvalidatecollectionjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmoduleswksjs would overwrite input file error write file sandboxngcallowjsnodemodulescorejsmodulescoregetiteratormethodjs would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file would overwrite input file error write file sandboxngcallowjsnodemoduleszonejsdistzonejs would overwrite input file error typeerror read property type undefined objectgeteffectivetypeannotationnode assigncontextualparametertypes checkfunctionexpressionorobjectliteralmethod checkexpressionworker checkexpression checkbinarylikeexpression checkbinaryexpression checkexpressionworker checkexpression checkbinarylikeexpression checkbinaryexpression checkexpressionworker checkexpression checkexpressionstatement checksourceelement objectforeach npm err code elifecycle npm err errno npm err masterproject ng npm err exit status npm err npm err failed masterproject ng script npm err probably problem npm likely additional logging output npm err complete log run found npm err c original issue cc tbosch", "num": "19757", "d": "10/2017"}, {"title": "angular templates nt play well strictnullchecks", "body": "submitting current behavior currently typescript strictnullcheckstrue hard work variables nullable example hero hero inside herodetailcomponent class heroes tutorial error heroname might null binding wo nt work expected new behavior template engine able determine variable hero null within statement components work alternatively could add syntax allow explicitly cast variable specific type would pass information template minimal reproduction problem instructions open heroes demo change hero nullable variable add strictnullchecks tsconfigjson angularjs version browser chrome anything else current workaround", "num": "19756", "d": "10/2017"}, {"title": "ngoninit longer safe place change service data", "body": "submitting defect current behavior changing service variable child ngoninit causes uphill component trigger expressionchangedafterithasbeencheckederror expected behavior ngoninit acts event handler safely change shared data minimal reproduction problem instructions ng new myapp routing ng g component first ng g component second ng g service shared sharedservicets create shared value injectable export class sharedservice somevalue boolean false firstcomponentts inject sharedservice export class firstcomponent constructor public sharedservice sharedservice firstcomponenthtml somevalue secondcomponentts inject sharedservice change shared value load export class secondcomponent implements oninit constructor public sharedservice sharedservice ngoninit thissharedservicesomevalue true appmodulets add sharedservice providers providers sharedservice approutingmodulets add second component route const routes routes path component secondcomponent appcomponenthtml ng serve open result error error expressionchangedafterithasbeencheckederror expression changed checked previous value false current value true environment angularcli", "num": "19755", "d": "10/2017"}, {"title": "versioning", "body": "submitting documentation issue request current behavior trying understand use new httpcientmodule problem old classapis still appear latest version use response httpresponse use httpresponse typing response supposed know urlsearchparams requestoptions deprecated expected behavior rather documentation latest version eg detailed system etc latest version mention going get deprecated link new classapi minimal reproduction problem instructions mention going deprecated link mention going deprecated link motivation use case changing behavior better documentation less searching stackoverflow faster development", "num": "19754", "d": "10/2017"}, {"title": "aio remove comments api typealias types", "body": "see", "num": "19751", "d": "10/2017"}, {"title": "set typescript peerdependency tested verified minor version typescript", "body": "current behavior currently peerdependency typescript angularcompilercli suggest newer version typescript ok used compiler uses typescript ast need specify version ts tested example verify compatibility", "num": "19750", "d": "10/2017"}, {"title": "dependency injection documentation", "body": "submitting current behavior documentation question registered services angular inject constructor component service anywhere application still import service every component wish use expected behavior expect import service root app component call import servicename dir every component wish use including service constructor able use service component without additional import statements minimal reproduction problem instructions look active demo look srcappherobioscomponentts still import userservice motivation use case changing behavior point importing service main app component call import service dir every component wish could import service root component include service component constructor import environment", "num": "19749", "d": "10/2017"}, {"title": "proposal initial original value api abstractcontrol", "body": "submitting current behavior right form controls remember original value expected behavior formcontrol formgroup formarray property holding original value property holding value differ otherwise property stream indicating current value differs original method changes value original value method set existing value new original value interface could looks like typescript interface enhancedabstractcontrol readonly original readonly differ boolean readonly valuediffer observable commit void rollback options onlyself boolean emitevent boolean motivation use case changing behavior creating form updates current data also nice feature allow user revert changes individual field instead whole form set css class value differ show hide elements sometimes also user changes value state original b end modal warning need displayed form submitted value changed values changes ex c nothing happens validators candidates value valid new feature use cases easy implement rollback revert css html html typescript save const control thisformget control controloriginal amp amp controlvalue b ex show modal", "num": "19747", "d": "10/2017"}, {"title": "tour heroes open parameter added start script", "body": "moved winksaville tour heroes needs updated reflect server open automatically flag used also see cli projects nt open automatically tour heros tutorial says npm start command runs typescript compiler watch mode recompiling automatically code changes command simultaneously launches app browser refreshes browser code changes start ng serve open parameter needed cause launching app browser created pr adds open parameter corrects problem", "num": "19746", "d": "10/2017"}, {"title": "prototype extend javascript library angular typescript", "body": "want use definedtyped typescript please let know file extend javascript library angular please let know whether following correct approach please suggest correct approach var customeditor handsontableeditorsbaseeditorprototypeextend rest editor code put editor dedicated namespace handsontableeditorscustomeditor customeditor register alias handsontableeditorsregistereditor thebesteditor customeditor handsontable declare var handsontable constructor const handsontableeditorsautocompleteeditorprototypeextend handsontableeditorsregistereditor", "num": "19745", "d": "10/2017"}, {"title": "routereusestrategy detachedroutehandle still listens observables detached", "body": "submitting current behavior using custom routereusestrategy notice detached route stored observables still active causes issues use ngrx multiple pages listen observable detached route perform actions along current route expected behavior would expected detached route would nt able listen observables detached minimal reproduction problem instructions create subscription listens scroll event logs console continue log console scroll detached motivation use case changing behavior detached routes listening observables creating http requests detached causes unexpected behavior scroll bottom page current route send http request detached route send http request environment", "num": "19744", "d": "10/2017"}, {"title": "angular datefromat pipe ie error", "body": "need format date standard german format works fine chrome ff nt work ie example chrome etc outputs ie works outputs across browsers mintues makes sense accordiong documenation shoud output minutes demo app dokumentation ps copy writing realized bug", "num": "19743", "d": "10/2017"}, {"title": "component host element removal delayed animation module added project", "body": "submitting imported browseranimationsmodule observed host nodes destroyed component instances old route removed dom ngafterviewinit lifecycle hook called newly component instance new route without imported browseranimationsmodule host nodes destroyed component instances old route removed ngafterviewinit lifecycle hook called understand presence browseranimationsmodule host nodes destroyed component removed dom animations ended possible delay node removal animations present possible please add fact documentation browseranimationsmodule current behavior imported browseranimationsmodule removal host node destroyed component instance old route happens ngafterviewinit call new component instance even animations present expected behavior imported browseranimationsmodule animations defined component instances old route remove host nodes destroyed components dom ngafterviewinit called new component instances new route minimal reproduction problem instructions motivation use case changing behavior nt break anything importing unused browseranimationsmodule environment", "num": "19742", "d": "10/2017"}, {"title": "ngform register controls template", "body": "submitting current behavior formvaluejson formvalid ngform controls formvalue always formvalid always true controls registered ngform expected behavior controls registered ngform minimal reproduction problem instructions environment", "num": "19738", "d": "10/2017"}, {"title": "loadchildren working children router", "body": "previously developed angular project based asp mvc framework want change angularcli met router problems lazy loader children router industries module ca nt changed wrong code export const approutes routes path redirectto home pathmatch full path login component logincomponent path home component homecomponent canactivate authguard children path industries loadchildren industriesindustriesmodule canactivate authguard path loadchildren canactivate authguard ngmodule imports routermoduleforroot approutes exports routermodule export class approutingmodule nt lazy loader works fine correct code previous project asp mvc use following router homemodule angularcli says find module please help export const homeroutes routes path component homecomponent children path industries loadchildren appindustriesindustriesmodule canactivate authguard path loadchildren canactivate authguard ngmodule imports commonmodule reactiveformsmodule formsmodule routermoduleforchild homeroutes declarations homecomponent export default class homemodule dzmitryshylovich could please help new angular thanks", "num": "19737", "d": "10/2017"}, {"title": "tutorial inmemorywebapimodule date", "body": "submitting current behavior simulated web api get undefined data expected behavior simulated web api get data like defined tutorial minimal reproduction problem instructions follow tutorial till motivation use case changing behavior use inmemorywebapimodule mock http service environment due breaking change angular inmemorywebapi tutorial add replace said", "num": "19736", "d": "10/2017"}, {"title": "disabling controls form group adds controls form group values", "body": "submitting current behavior using reactive form form group controls form group disabled values controls added value object form group eg form group two controls first control disabled second control part value object form group disable second control controls part form groups value object expected behavior controls disabled form group values minimal reproduction problem instructions open plunker disable controls using buttons next controls code angular v versionfull thisfg fbgroup b b thisfgvaluechangessubscribe value gt thiscontent value public toggle name string thisfgget name enabled thisfgget name disable thisfgget name enable thiscontent contain value amp b controls disabled motivation use case changing behavior currernt behaviour seems strange environment angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx likely also problem browsers nt checked", "num": "19735", "d": "10/2017"}, {"title": "change geterror haserror signature flexibility", "body": "submitting current behavior currently methods abstractcontrol geterror abstractcontrol haserror accept parameter let specify path control ex however methods following signature geterror errorcode string path string haserror errorcode string path string boolean behind scenes methods call abstractcontrol get method one accepts nt make sense change signatures method geterror errorcode string path string number string haserror errorcode string path string number string boolean call method usual expected behavior instead example call method motivation use case changing behavior flexibility", "num": "19734", "d": "10/2017"}, {"title": "angular listening progress firefox aot work", "body": "submitting current behavior listening progress firefox aot work want show progress bar file download using angular httpclient without aot succeed display progress bar chrome firefox using aot succeed display progress bar chrome firefox expected behavior get progress event value loaded total minimal reproduction problem instructions working angularcli angular use script startprod ng serve basehref prod deployurl proxyconfig proxyconfjson code downloadfile filename const headers new httpheaders upgradeinsecurerequests const req new httprequest get someurl reportprogress true headers headers responsetype blob gt eventtype httpeventtypedownloadprogress thisprogresspercentage mathround eventloaded eventtotal else event instanceof httpresponse const data new blob eventbody filesaversaveas data filename thisondownloaderrorbind environment", "num": "19732", "d": "10/2017"}, {"title": "angular freezes without error navigate next page external library callback", "body": "submitting current behavior components login main page use google js api login navigate main page logged successfully google main page freezes yet go main page without logging first main page works go back login page login google api redirect main page works fine expected behavior works consistently navigate another page external callback minimal reproduction problem instructions motivation use case changing behavior want users login first navigating pages broken environment", "num": "19731", "d": "10/2017"}, {"title": "separate httpclient instances sets interceptors", "body": "submitting current behavior interceptors seems applied class level expected behavior hoping interceptors applied instance level motivation use case changing behavior package called provided separate instance http called great however version http nt support interceptors hoping implement several instances http client different sets interceptors applied without interceptor seems right interceptors applied class level makes impossible create separate instances would respective sets interceptors", "num": "19730", "d": "10/2017"}, {"title": "injectiontoken resolved downgraded component", "body": "submitting note originally posted stack overflow suspect bug dependency injection setup hybrid apps current behavior downgraded components appear page errors initially loading hybrid angularangularjs route example downgraded angular component fails load dependency injection system resolve material menu needs method bootstrapping angularjs angular app based victor savkin work stepping code see object injected default options object depends default options object referenced via injectiontoken dependency coming back undefined reloading page however hybrid angularangularjs application dependency loads correctly switching page another page simplified view dom structure note components interlaced error refers top downgraded component rather downgraded component wraps expected behavior dependency injection work downgraded component dropdown load without issue minimal reproduction problem instructions open stackblitz app click link app load angularjs page reload app iframe angular js route button load console show error motivation use case changing behavior dependency injection work downgraded angular components environment", "num": "19729", "d": "10/2017"}, {"title": "receiving error xliff parse errors trying compile angular app aot using ngc", "body": "submitting current behavior compiling angular app localization described guide command consistently returns message error resource line localization file expected behavior aot compilation completes would localization file passed using parameters minimal reproduction problem instructions followed tutorialsdocumentation outlined angular site aot put together following reproduction using tour heroes tutorial source code readily available download angular tour heroes tutorial source code extract folder refer folder get latest packages using edit file change first line b b add new file named following content create translation file running command root folder produces file following content compile application aot compiler localization file running root folder produces following message run translation file completes without warning generates expected output also tried translation formats supported received similar errors update angular packages demotutorial latest file behavior necessary reproducing behavior motivation use case changing behavior create aot packages based supported localizations environment", "num": "19728", "d": "10/2017"}, {"title": "enter animation nt work tracked ngfor", "body": "submitting current behavior template markup chatlike collection messages animation defined results top element flying new text displayed bottom expected behavior new element animated minimal reproduction problem instructions animate something adds items lists beginning environment", "num": "19727", "d": "10/2017"}, {"title": "limitation ngfor", "body": "new angular finding issues using ngfor want dynamic textinputs binding number textinputs ca vary depends user input code got error tried following code time nt get error behavior unexpeacted type something input input gets populated amp writing input also fills input constantly keep losing focus input wrong", "num": "19726", "d": "10/2017"}, {"title": "show minimum version compatibility docs", "body": "submitting current behavior new features appear docs without showing version included may mislead people using older angular versions expected behavior instance httpclientmodule nt indicate introduced version project version updated moment try implement fail hard know search minimal reproduction problem instructions examples httpclientmodule httpclienttestingmodule motivation use case changing behavior would useful indicator class module introduced know used within project would love help trying find ways help project would need kind style guide follow think best way start recent releases go back older ones since may imply changing lot pages", "num": "19725", "d": "10/2017"}, {"title": "form validation dynamically created input elements work", "body": "submitting current behavior create simple form two text input elements required second input created dynamic sub component validation check fails following statement returns true even inputs empty html output app sub form example valid first input second input commit expected behavior since input elements part referenced form value truthy elements invalid minimal reproduction problem instructions observe commit button initially disabled enter something first input element see commit button enabled although second input filled unexpected motivation use case changing behavior simple way prevent submitting invalid forms sub component used divide form manageable chunks based choices inside form environment", "num": "19724", "d": "10/2017"}, {"title": "selectcontrolvalueaccessorcomparewith tests options seems excessive", "body": "submitting current behavior using options function called times initialization form runs tested object refresh option list runs tested object peculiar order happens development production expected behavior would expect test max times depending selected option minimal reproduction problem instructions demo plunker see console output motivation use case changing behavior performance environment", "num": "19723", "d": "10/2017"}, {"title": "compilercli metadatajson ngsummaryjson going wrong output directory", "body": "submitting current behavior angularuniversal repo building module tsconfig following options compileroptions outdir distcommon rootdir creates dist directory structure dist common common indexmetadatajson wrong indexngsummaryjson wrong src transfer wrong transfer wrong indexjs files side expected behavior metadatajson ngsummaryjson files go side js files generated ngc minimal reproduction problem instructions git clone git githubcom angularuniversalgit npm install npm run build common files end wrong place dist folder angular version", "num": "19718", "d": "10/2017"}, {"title": "docs tutorial could clear expose heroes section", "body": "submitting current behavior part tutorial clear line go exactly motivation use case changing behavior make easier newcomers angular follow tutorial environment", "num": "19714", "d": "10/2017"}, {"title": "bug animations read property insertnode undefined", "body": "submitting current behavior sorry english good try best describe problem animation bug views removedinserted quickly expected behavior error occur minimal reproduction problem instructions yarn yarn start updated link stackblitz updated reproduce steps click table link graph link show click graph link chart show click refresh button stackblitz preview browser refresh stackblitz bundling app text bundling app appearing hit back button mouse error occur bundling app finish time error occur every time try hardware info update gif file show reproduce step motivation use case changing behavior environment actually sent pull request fix problem seem like one noticed post issue add bug gone", "num": "19712", "d": "10/2017"}, {"title": "fragment fragment trigger wildcard redirect route routes", "body": "submitting current behavior routes fragment activated button tag like fragment subscription code like route click button route info triggers wildcard redirects setup info expected behavior setup able click button route remain info page scroll id fragment dom environment", "num": "19708", "d": "10/2017"}, {"title": "router upgrade helpers ngupgradelite", "body": "submitting router upgrade helpers allow angularjs router coexist angular router assume ngupgrade trying inject upgrademodule need way provide behavior ngupgradelite ie upgrademodule present", "num": "19707", "d": "10/2017"}, {"title": "feature request debounce ngmodeloptions", "body": "regression behavior used work stopped working new release bug report x feature request documentation issue request support request gt please submit support request instead see current behavior support expected behavior angular nt yet support inputs would like know logic behind implementing example usecase debounce text input like google docs save typed text secs keypress typing", "num": "19705", "d": "10/2017"}, {"title": "docs api bug link builder angulario", "body": "submitting current behavior formgroup api registercontrol name string control abstractcontrol abstractcontrol registers control group list controls method update value validity control cases want use formgroup instead see bold formgroup expected behavior method update value validity control cases want use addcontrol instead links also incorrect", "num": "19701", "d": "10/2017"}, {"title": "tracking better error messages compiler", "body": "see also internal hotlist bad error messages compiler", "num": "19700", "d": "10/2017"}, {"title": "drag drop event using working", "body": "using directive get files dropped html element working fine chrome working following code drag drop event import directive hostlistener output eventemitter angularcore directive selector appdragdrop export class dragdropdirective constructor output filedragevent eventemitter new eventemitter hostlistener window drop event public ondrop event hostlistener window dragover event public ondragover evt evtpreventdefault evtstoppropagation hostlistener window dragleave event public ondragleave evt evtpreventdefault evtstoppropagation hostlistener dragover read blog asked change like also tried give minheight element directive drag drop still facing issue functionality running smooth chrome facing issue", "num": "19699", "d": "10/2017"}, {"title": "ng ngc throws error closures static methods", "body": "submitting current behavior class contains static method uses arrow function ngc throws error expected behavior ngc compile without errors minimal reproduction problem instructions class contains static method public well private uses arrow function like one typescript import observable rxjsobservable import defer rxjsobservabledefer import observableof rxjsobservableof export class noncegenerator json compileroptions target module moduleresolution node experimentaldecorators true emitdecoratormetadata false declaration true listfiles true sourcemap false skiplibcheck true lib dom noimplicitany true noimplicitreturns true noimplicitthis true nounusedlocals true alwaysstrict true files publicapits angularcompileroptions annotateforclosurecompiler true strictmetadataemit true flatmoduleoutfile indexjs flatmoduleid mymodule skiptemplatecodegen true environment", "num": "19698", "d": "10/2017"}, {"title": "implement interface create new hammer events", "body": "submitting current behavior extending hammergestureconfig angularplatformbrowser allow override existing hammer events events overrided application expected behavior would nice angular also implements interface hammer allow user add new hammer events would nicer also newly created events overrided events could defined locally components directives example pan event would different properties componenta componentb minimal reproduction problem instructions na motivation use case changing behavior implement new hammer events using hammer also defined hammer events specific html elements would nice angular would provides interface things would encourage developers use angular touchscreen projects environment", "num": "19697", "d": "10/2017"}, {"title": "binding required attribute nt update required set true false hiding control", "body": "submitting current behavior form hides shows fields sets fields required depending values fields however field set required value entered another field results changing false control hidden ngif control still thinks required issue appears around combination required ngif remove ngifs works fine swapping different addresses looking form object controls errors control still says required would appear nt update required field control hidden screen despite still component form object expected behavior control required requited attribute set true matter previous value required field whether field visible minimal reproduction problem instructions done plunker basic form hiding showing address field changing required property see save button enable click home work despite entering name work address thinks home address also required please see plunker issue update issue due control hidden required update changed works use timeout update required binding hide controls means solution nt think use detect changes point control already hidden never update required binding plunker shows workaround far ideal motivation use case changing behavior hidingshowing changing required attribute fields depending user input needed across multiple scenarios forms environment browser chrome desktop tooling issues node version platform windows", "num": "19696", "d": "10/2017"}, {"title": "custom form control templatedriven form nt apply correctly initial value", "body": "submitting current behavior custom form control counterinput used templatedriven form add ngmodel counterinput counterinput component internally sets initial value value passed ngmodel initialization fomcontrolsetvalue called expected value eg formcontrolsetvalue right page loaded phantom second call setvalue results inconsistent view form model view shows formmodel empty expected behavior initial value one internally set component nothing provided ngmodel binding minimal reproduction problem instructions see formvalue counter counter view shows instead ngmodel myvalue myvalue defined result formvalue view showing expected given implementation controlvalueaccessor writevalue value method explicitly check value motivation use case changing behavior environment", "num": "19692", "d": "10/2017"}, {"title": "cli build support loading modules tsx extension", "body": "submitting current behavior ng buildserve throwing ts module importing tsx module expected behavior compiler difference extension module minimal reproduction problem instructions call cd testproject rename srcappappcomponentts srcappappcomponenttsx add tsconfigjson compileroptions jsx react jsxfactory h call result got motivation use case changing behavior tsx providing extended syntax sugar used different porpoises case using monorepo approach delivering part components webcomponents using jsxtsx environment", "num": "19691", "d": "10/2017"}, {"title": "array nested object params useanimation", "body": "submitting current behavior pass arrays nested objects params expected behavior allow array nested object params minimal reproduction problem instructions first defined animation expecting array offsets use nt work also tried passing object numeric keys like using instead luck environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform macos sierra", "num": "19690", "d": "10/2017"}, {"title": "decimalpipe uses syntax rename either class syntax consistency", "body": "submitting current behavior class called uses syntax expected behavior maintain consistency either rename class rename syntax minimal reproduction problem instructions motivation use case changing behavior want transform something outside template need import pipe one would expect import numberpipe strange call class something different environment", "num": "19689", "d": "10/2017"}, {"title": "input elements inside ngfor damn slow safari performance issue", "body": "submitting bug report current behavior create array samplearray length ngfor samplearray create input element inside run enter something textbox chrome works fine safari takes minimum one second character appears textbox type fast characters textbox take seconds appear expected behavior text needs appear immediately typing safari minimal reproduction problem instructions created plunker please open safari amp chrome see difference macos sierra browser safari desktop version angularjs version investigation ngfor rerendering every keypress textbox even focusing textbox prevent run digest cycle textboxes eventhough nt attach model textbox digest cycle ngdocheck running every key press anyone please help thanks advance", "num": "19688", "d": "10/2017"}, {"title": "proposal medatdata extras property abstractcontrol", "body": "submitting current behavior currently way construct formcontrol formgroup formarray set metadata extras info ex allowedvalues etc expected behavior possibility set metadata extras info motivation use case changing behavior possibility set metadata info specific control would helpful writing forms example generating select options would looks like html control optionsomeprop control optionsomeprop form table cells controls let say row cell id control value user html controlmetadataid may many usage examples proposal api setting new property possible using pass optional property arg pass optional arg pass optional property arg example", "num": "19686", "d": "10/2017"}, {"title": "document compiler flag least release notes", "body": "submitting current behavior html view referring variable nt exist wo nt catched unless someone consumes library using ngc bin directly compile ts ngc export class maincomponent ngfactoryts see error however emitted compilation expected behavior compiling ngc throw error compiling minimal reproduction problem instructions motivation use case changing behavior throw error environment tooling issues node version platform windows others", "num": "19681", "d": "10/2017"}, {"title": "angularjs soundmanager progressbar issue clicking progress bar making player start begining chrome", "body": "bug report current behavior angularjs player click progress bar starts playing beginning chrome firefox working fine expected behavior start playing selected location time minimal reproduction problem instructions always reproduce playing query related url ex playing urls like motivation use case changing behavior user click progress bar play specific time environment angular version angularversionfull browser chrome desktop version xx version official build tooling issues node version platform windows others posted issue couple forums yet got solutions hope get solution", "num": "19680", "d": "10/2017"}, {"title": "write html content x axis add value bar graph", "body": "want write html content xaxis eg using br tags write br tag displaying br tag graph also want write custom data bar see value showing tha bar eg etc want write xaxis like product removal date", "num": "19679", "d": "10/2017"}, {"title": "dynamically change deploy url app start", "body": "know use angularcli config deployurl like want change deployurl must build want write somethings global like root html set deployurl use already exist variable app start change url without build", "num": "19678", "d": "10/2017"}, {"title": "tutorial chapter http api broken change inmemorywebapi october", "body": "submitting current behavior going chapter tour heroes tutorial getheroes implementation heroservicets return heroes following change indicated inmemorywebapi github http response data longer wrapped object w data property october dataencapsulation configuration default changed false true http response body holds data values directly rather object encapsulates values data breaking change affects almost existing apps expected behavior return heroes change documentation follows applies gethero id number minimal reproduction problem instructions motivation use case changing behavior tutorial work live environment case using bleeding edge versions inmemorywebapi environment live environment plinkrco linked tutorial", "num": "19676", "d": "10/2017"}, {"title": "single bind multiple events template", "body": "current behavior expected behavior motivation use case changing behavior think requested shot sure could make directive even native event binding template ca nt natively bind multiple events cleanly seems silly maybe something missing maybe would deceptively hard implement nt know sorry waste time seems like lot people would happy implemented", "num": "19675", "d": "10/2017"}, {"title": "aspnet core angular nodeinvocationexception prerendering failed error referenceerror window defined", "body": "trying use ngxchips taginput issue importing browseranimationsmodule importing browseranimationsmodule get error comment browseranimationsmodule import appmodulesharedts app works normal uncomment come error please trash working suggest angular taginput library using aspnet core spa template thanks", "num": "19667", "d": "10/2017"}, {"title": "overriding panmove hammer event multitouch work", "body": "submitting current behavior extending hammergestureconfig overriding panmove event pointers parameter higher work fingers moves panmove regnonized trigger events want inform issue overriding parameters events expected behavior setting pointers parameter panmove event application shall trigger panmove event panning fingers minimal reproduction problem instructions example test touchscreen motivation use case changing behavior user want able pan touchscreen one finger environment", "num": "19666", "d": "10/2017"}, {"title": "problem tour heroes part http", "body": "submitting current behavior live demo provided code nt work expected behavior live demo provided code work minimal reproduction problem instructions trying retrieve data inmemorywebapi data casted array heroes also live demo issue following code seems problem necessary remove data responsejson resulting following code motivation use case changing behavior people would get less frustrated trying finish tour heroes environment", "num": "19665", "d": "10/2017"}, {"title": "httperrorresponse error field string response json", "body": "submitting current behavior angular httpclient gets jsonformatted error response error field httperrorresponse returned string expected behavior json formatted error returned httpclient error field httperrorresponse json angular version browser x chrome desktop version", "num": "19664", "d": "10/2017"}, {"title": "angular documentation offline use", "body": "hi project developed computer without instant internet access would like run offline version documentation newest angular ive tried follow instructions without luck another way get work maybe update needed thanks", "num": "19660", "d": "10/2017"}, {"title": "angular tutorial live example working", "body": "submitting current behavior live example http page angular tutorial opens code plunker fails error console error uncaught promise typeerror read property slice undefined typeerror read property slice undefined expected behavior used work without errors minimal reproduction problem instructions steps reproduce go click live example link note functionality app missing open console note error message motivation use case changing behavior used work helpful working example tutorial environment", "num": "19659", "d": "10/2017"}, {"title": "pipe working expected", "body": "submitting current behavior use data binding expression ternary inside pipe called example case need change use instead sure use ternary data binding good solution tought pipe called throw error possible parse value expected behavior pipe called even ternary inside data binding expression minimal reproduction problem instructions create pipe transform string import shared module import module component module try use pipe ternary inside data binding expression motivation use case changing behavior ternary make code cleaner nt need create another element wrap ngif environment", "num": "19657", "d": "10/2017"}, {"title": "http interceptors pass parameters http requests", "body": "submitting current behavior currently working big company providing module developers order help repetitive task security add token http request header order provide interceptors global application interceptors helping global level sometimes developers would like bypass example adding token header right move add given header sending request check header present interceptor things accordingly expected behavior would possible pass optional configuration object request get post put etc might retrieve optional parameter interceptor motivation use case changing behavior people provide high level interceptor app would handy able send parameters", "num": "19656", "d": "10/2017"}, {"title": "accepting official documentation translations", "body": "submitting current behavior currently tour heroes tutorial interested right available english chinese expected behavior tour heroes available spanish motivation use case changing behavior met lot people tech jobs speak english good enough level given uruguay easily find tutorials angular spanish neither complete easy follow tour heroes realize enough motivation guys since native spanish speaker offering help", "num": "19654", "d": "10/2017"}, {"title": "use anchor link angular page", "body": "set fragment attribute router navigate function work help thanks", "num": "19653", "d": "10/2017"}, {"title": "angular issues npm start", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment npmdebuglog", "num": "19652", "d": "10/2017"}, {"title": "feature request rename useexisting usetoken provider interface", "body": "submitting current behavior bit confuses inclined interpret follows di sees return instance existing wrote like expected behavior seems describes essence much clearly inclined interpret follows di sees continue search instance class token", "num": "19650", "d": "10/2017"}, {"title": "engine specification node packagejson", "body": "current behavior current specification fails run version node gt expected behavior works node nt change much nt excluding versions nt know work assume work unless know otherwise current practice future safe minimal reproduction problem instructions install new version node try build aio environment node tooling issues node version", "num": "19648", "d": "10/2017"}, {"title": "domsanitizer keep style attributes html sanitize needed", "body": "submitting current behavior dom sanitizer removes style attribute elements expected behavior dom santitizer keeps style attribute elements sanitizes actual style value needed something innocuous like nt lost minimal reproduction problem instructions motivation use case changing behavior displaying blog posts cms content uses inline styles layoutstyling environment", "num": "19645", "d": "10/2017"}, {"title": "tour heroes tutorial part http broken display heroes responsejson data", "body": "submitting current behavior live example official tour heroes tutorial part http broken see issue open live example plunker notice heroes displayed problem seems heroservicets would seem occurrences replaced data seems longer needed causes errors example following code replaced following code expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19644", "d": "10/2017"}, {"title": "validator behavior different using ngmodel versus formcontrol attribute versus programmatic validators", "body": "submitting current behavior creating control angular take care calling control either caller uses however usage validators either case follow two separate paths making creator control need handle many cases example first case control display validator second case control display validators however cases contain nginvalid class marked required get different paths case hidden formcontrol gets validator injected abstractcontrol constructor validators set via attributes case formcontrol gets validator validators set via typescript code control wants fancy ui work based validators associated host complicated handle cases expected behavior provide way get validators inside component ones applied host undocumented solution go get ngcontrol like ngcontrolstatus motivation use case changing behavior need display custom validation based component without ngcontrol hack control compositions forward validation formcontrol children parent control environment", "num": "19643", "d": "10/2017"}, {"title": "server compiles right clicking file windows explorer", "body": "submitting current behavior rightclick open ts file src directory project triggers compilation long sometimes infinite loop using windows notepad open file expected behavior compilation get triggered modify relavant file minimal reproduction problem instructions reproduce everytime runing skeleton application app running following commands ng new myfirstapp cd myfirstapp ng serve open browser loaded application showing ui go src folder windows explorer right click open ts file compiler starts buiding project loop sometimes forever sharing command line log attached file logtxt motivation use case changing behavior environment angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli typescript browser chrome tooling issues node version platform windows professional others", "num": "19640", "d": "10/2017"}, {"title": "router", "body": "hello developing navigation service go one page application another save address position scroll everything works well go links go page using browser buttons forward backward arrows windowpageyoffset windowscrolly assigned vallue position scroll future page rather current hope help", "num": "19639", "d": "10/2017"}, {"title": "spirit svg always displayed", "body": "whole app always problem display svg correctly sometimes show icon sometime nothing sometimes displayed dont understand example come page often icons displayed always navigate trough app lazyloading another menu come back result another gif action switch tab lazy loading inside app fyi gif croped nt see tab clicked outside image see sometimes show icons sometimes nt know linking svg spirit works one icons never dissapear called markallasread symbolssvg however syntax add icon x spiritesymbolssvg inside indexhtml tag always displayed move certain module lazyloading x icon someties displayed sometimes behavior partically icons use svg spirit like file im linking symbolszip nt know angular angularcli dev mode browser problem plunker works everytime please switch home menu infos dom works chrome displayed code menu list code icon nt always displayed ans one icon seems always displayed another ngif another important info weird navigate route browser make two http calls symbolssvg file remove one browser make correctly one call icons seems displayed time nb works firefox event second condition ngif resume really wonder second condition ngif browser make another call remove make one call browsers impacted bug actually tested chrome last version seems works firefox time browser last chrome desktop angular version amp co angularcli node os angular typescript", "num": "19638", "d": "10/2017"}, {"title": "get data one component another using click button update functinality", "body": "hello one crud application one employeelist component listed employees list particular list entry added one edit button edit call another edit component passing employee id retrieve particular employee details based passed id able update employee data one help resolving issue regards anita patil", "num": "19636", "d": "10/2017"}, {"title": "json replaced existing", "body": "expression changed checked previous value wrtwrt current value efgh json headers key wrtwrt value abcd key efgh value abcd angular code thisprofile data let lt thisprofilelength let stringaray jsonparse thisprofile headers consolelog stringaray stringaray thisprofile stringaray html code tryed oninit ngafterviewinit didnt solve issue please help fix bug", "num": "19635", "d": "10/2017"}, {"title": "formgroup registercontrol expressionhaschanged error", "body": "submitting current behavior create empty formgroup parent component child components add formgroup using expect status since control added using currently get error prodmode expected behavior would get error formgroup valid formcontrol invalid would need manually trigger update formstate using updatevalueandvalidity minimal reproduction problem instructions motivation use case changing behavior building large forms based application wish create mini formcontrol components eg mytextboxcomponent mydatepickercomponent myageselector etc use components without create full formgroup ahead time components self registering formgroup self initialising data dropdowns etc means parent component need ahead time knowledge form environment angular browser browsers attempt debugging issue helps think issue comes second check debug mode causing formgroup trigger ngmodelchanges subsequently updatevalueandvalidity function updates correct first time check values registering components effect parent debugmode another ngmodelchanges cycle run updates invalid child control status", "num": "19634", "d": "10/2017"}, {"title": "styleguide suggest use class instead interface", "body": "style guid says consider use class instead interface also example file heromodelts using class export class hero id number name string think case better use interface instead class typescript best practice case unlike classes interfaces completely removed compilation add unnecessary bloat final javascript code reason use class instead interface case better use interface case", "num": "19632", "d": "10/2017"}, {"title": "httpclient parse json error body", "body": "current behavior last release angular angularcommon dont parse error body json expected behavior result http error angular must parse response body json environment angular version actual code ok amp amp reqresponsetype json amp amp typeof body string attempt parse fails parse error delivered user body bodyreplace xssiprefix try body jsonparse body catch error even though response status still error ok false parse error contains text body failed parse body error text body httpjsonparseerror parse executed response ok", "num": "19631", "d": "10/2017"}, {"title": "language service checking templates seems need restart vs update", "body": "submitting current behavior one changes look include angular html templates checked validated language service plugin also properly detect needs included go ahead add error persists restarting vs way get update expected behavior templates checked language service various language service feature would update upon editing saving files restart would required minimal reproduction problem instructions use change include option intentionally include intentionally create template error pointed editor motivation use case changing behavior includes support language service plugins intention enable users entire team basis around environment", "num": "19629", "d": "10/2017"}, {"title": "external library corrupted go directly level route app using url navigator field", "body": "submitting current behavior code works fine normally ng serve angularcli making update use url field navigate level deep app console get errors external libraries defined indexhtml external libraries nfc check system const approutes routes path admin component cpcomponent children path component adhomecomponent data title adminpanel path reports component reportscomponent data title adminreports happened code source update go manually second level app route app work find use links routelink mean use mouse pointer navigate throw pages way pass issue without including libraries inside angularclijson scripts expected behavior work fine update like first time initialized issue console report error report get net erraborted get net erraborted get net erraborted get net erraborted get net erraborted get net erraborted get net erraborted get net erraborted get net erraborted get net erraborted get net erraborted get net erraborted angular running development mode call enableprodmode enable production mode error referenceerror defined cpcomponentwebpackjsonp srcappcomponentscpcpcomponenttscpcomponentngoninit checkandupdatedirectiveinline checkandupdatenodeinline checkandupdatenode debugcheckandupdatenode debugcheckdirectivesfn objecteval updatedirectives objectdebugupdatedirectives updatedirectives checkandupdateview callviewaction proxyclass webpackjsonp core webpackjsonp core anonymous webpackjsonp zonejsdistzonejszonedelegateinvoke webpackjsonp zonejsdistzonejszonerun webpackjsonp core webpackjsonp core anonymous webpackjsonp zonejsdistzonejszonedelegateinvoke oninvoke webpackjsonp zonejsdistzonejszonedelegateinvoke webpackjsonp zonejsdistzonejszonerun webpackjsonp core next schedulerfn webpackjsonp rxjssubscriberjssafesubscribertryorunsub webpackjsonp rxjssubscriberjssafesubscribernext webpackjsonp rxjssubscriberjssubscribernext webpackjsonp rxjssubscriberjssubscribernext webpackjsonp rxjssubjectjssubjectnext webpackjsonp core checkstable onhastask webpackjsonp zonejsdistzonejszonedelegatehastask webpackjsonp zonejsdistzonejszonedelegateupdatetaskcount webpackjsonp zonejsdistzonejszoneupdatetaskcount webpackjsonp zonejsdistzonejszoneruntask drainmicrotaskqueue promise resolved async schedulemicrotask webpackjsonp zonejsdistzonejszonedelegatescheduletask webpackjsonp zonejsdistzonejszonescheduletask webpackjsonp zonejsdistzonejszoneschedulemicrotask scheduleresolveorreject zoneawarepromisethen webpackjsonp core webpackjsonp core srcmaints webpackrequire bootstrap webpackrequire bootstrap webpackjsonpcallback bootstrap anonymous error context debugcontext view nodeindex nodedef eldef elview environment windows", "num": "19628", "d": "10/2017"}, {"title": "read property type undefined embedding uservoice widget prod environment", "body": "submitting current behavior embedding uservoice widget gives error read property type undefined one polyfills attached screenshot widget loads properly local environment gives mentioned error prod expected behavior user voice widget loaded without errors minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19627", "d": "10/2017"}, {"title": "poor performance ie using webcomponent polyfill", "body": "submitting honest sure issue must submitted repository webcomponents one current behavior reason must use webcomponents angular project since support webcomponent still poor adding webcomponent polyfill polyfill working fine without angular seems working together performance really bad seconds every route change particularly visible ie expected behavior better performance libraries working together minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19626", "d": "10/2017"}, {"title": "test aio fix upgradephonecat tests", "body": "fix reenable upgradephonecat examples tests temporarily disabled master unblock work branches issue seems typings incompatible typescript", "num": "19625", "d": "10/2017"}, {"title": "please update documentation regarding microtask macrotask boolean ngzone class", "body": "submitting current behavior currently documentation ngzone documentation lacking idea microtask macrotask consisted first place find documentation states response boolean documentation around might affect values expected behavior something akin explanations post found would nice documentation haspendingmacrotasks haspendingmicrotasks check minimal reproduction problem instructions motivation use case changing behavior better documentation people lost protractor nt working know type task macrotask regards ngzone environment", "num": "19623", "d": "10/2017"}, {"title": "setvalidators mark form nginvalid properly", "body": "submitting current behavior validation state form evaluated first created called lifecycle events called eg form nt update validation state properly side note calling using correctly reevaluate validators set appropriate fields seems like possible workaround time detailed example form controls initially set constructor validators one controls required form initially created component stabilized lifecycle events called method called perhaps clicking button calls nt previously required sets new validator control observe dom point form clicked modified way control updated new validator fails class control form others pass validation default form would marked worth noting newly required field modified validators run work correctly thereafter also worth nothing scenario two control b required control called control add validator without subsequently touching filling control b filled satisfy required state form marked valid incorrectly expected behavior called form reevaluate fields new validation validation configured new validators formgroup initialized minimal reproduction problem instructions plunker functions correctly could nt get angular material work motivation use case changing behavior seems reasonable expect form update validation state called new validators immediately evaluated set example field nt previously form validation state update called environment", "num": "19622", "d": "10/2017"}, {"title": "iframe content change breaks angular", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19620", "d": "10/2017"}, {"title": "routing nt trigger native hashchange event window using hashstrategy", "body": "submitting current behavior angular routing using hash strategy doesnt trigger native hashchange event makes difficult detect hash changes needed app rendered iframe containing app needs determine angular app changed location expected behavior currently fire hashchange event using either routerlink javascript using router service minimal reproduction problem instructions embed version motivation use case changing behavior containing application uses iframes render subapps built angular needs subscribe location changes subapplications using works use case routerlink first router navigations javascript trigger hashchange events window embedded view plnkr concrete example sure dont see location getting changed ui environment", "num": "19619", "d": "10/2017"}, {"title": "browser support page date", "body": "submitting current behavior page mentions edge ios safari expected behavior safari ios amp edge released edge going released days added table minimal reproduction problem instructions na motivation use case changing behavior reflecting reality newest browsers supported environment na", "num": "19618", "d": "10/2017"}, {"title": "mobileangulario redirects main page find mobile guides", "body": "previously mobileangulario would load page several guides mobilepwa development pages yellow theme redirects angulario ca nt seem find mobile guides intentional bug find mobile guides", "num": "19615", "d": "10/2017"}, {"title": "read property push undefined error official tutorial", "body": "submitting current behavior followed tutorial last section however getting issue live example put tutorial read property push undefined looks like error comes dashboardcomponentts expected behavior full page displayed described tutorial minimal reproduction problem instructions motivation use case changing behavior following tutorial learn new angular environment mac os sierra", "num": "19614", "d": "10/2017"}, {"title": "strange word documentation structural directives", "body": "submitting current behavior nt know world expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19613", "d": "10/2017"}, {"title": "use new command inside angular cli project", "body": "submitting issue opening new folder command ng new myapp mac terminal message says use new command inside angular cli project kindly help resolve issue current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19612", "d": "10/2017"}, {"title": "routermodule issue", "body": "error error unexpected module routermodule declared module appmodule please add pipe directive component annotation added code appmodulets ts import routermodule angularrouter ngmodule declarations appcomponent routermodule using angular type script submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19611", "d": "10/2017"}, {"title": "proposal component render dom", "body": "submitting", "num": "19610", "d": "10/2017"}, {"title": "downgrading angular directive working", "body": "trying downgrade angular element directive use angular nt seem anything plunker forked downgrade example see directive constructor firing", "num": "19609", "d": "10/2017"}, {"title": "add symlink", "body": "currently one symlink createsymlinkssh building angular project another symlink required", "num": "19608", "d": "10/2017"}, {"title": "document libraries compiled angular compatible angular", "body": "submitting current behavior compiling library angular onward fails compiling correctly files left right people using library get issue expected behavior compile nt see breaking changes changelog tsconfigcompiler minimal reproduction problem instructions tsconfiglibjson repo clone repo change version angular packagejson run run check file environment", "num": "19607", "d": "10/2017"}, {"title": "meta service adds tags twice current route", "body": "submitting current behavior using meta service right angular universal application add meta tags home component route ones different values another page route abc go route see meta tags page go route see meta tags route followed css styles followed meta tags page currently server side client side tried using forcecreation updatetags every thing possible unable solve expected behavior meta tags shown current page minimal reproduction problem instructions try view page source landing page navigate workshops view page source see blocks meta tags different values motivation use case changing behavior since meta tags route appear first override actual page meta tags breaks previews functionality environment angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularcli angularcompilercli angularlanguageservice typescript browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx tooling issues node version node platform mac windows others please provide workaround fix", "num": "19606", "d": "10/2017"}, {"title": "feature request get reference directive applied onto component", "body": "option get reference would useful case attribute directives need extend component comes party library functionality execute directive methods subset components directive applied motivation using material several tabs components like widgets updated time hosting tab activated purpose created directive looks like directive selector actualizable actualizer export class actualizabledirective contentchildren actualizabledirective actualizables querylist activatetab e mdtabchangeevent etabactualizabledirectiveactualize get directive actualize method etabcontentviewcontainerrefinjectorviewnodes array may nt know get properly code environment", "num": "19605", "d": "10/2017"}, {"title": "allow dom handlers hammerjs events", "body": "submitting feature request current behavior listening hammerjs events eg tap listener automatically added hammermanager instance leads issue want listen hammerjs event nested element possibility control propagation events hammermanager parent elements handle event nested elements case need use method hammerjs support option domevents effect event registration always routed hammergestureplugin addeventlistener element htmlelement eventname string handler function function const zone thismanagergetzone eventname eventnametolowercase return zonerunoutsideangular gt creating manager bind events must done outside angular const mc thisconfigbuildhammer element const callback function eventobj hammerinput zonerunguarded function handler eventobj mcon eventname callback lt lt lt lt return gt mcoff eventname callback lt lt lt lt expected behavior enable option hammergestureconfig use domevents hammerjs register callback dom element enable bubling propagation control touch events workaround achieve behavior possible obvious custom hammergestureconfig export class graphedhammerconfig extends hammergestureconfig buildhammer element htmlelement hammerinstance mcoff eventname handler gt elementremoveeventlistener eventname handler lt lt lt lt return mc would preferable event registered element directly hammergestureplugin hammergestureconfig specifies domevents options minimal reproduction problem instructions register tap listener parent child elements using method motivation use case changing behavior possible woraround mentioned current behavior unexpected assuming touch events handled similar way dom events environment", "num": "19604", "d": "10/2017"}, {"title": "live example throwing null pointer exception javascript", "body": "submitting current behavior go live try anything responding also load throws console log error report two errors looking code looks like also supposed populated heros expected behavior able add hero tried two different browsers luck nt get populated heros start minimal reproduction problem instructions pasted browser click heroes enter heros name click add button name disappear also noticed load throws error motivation use case changing behavior good documentation environment", "num": "19602", "d": "10/2017"}, {"title": "angulario pages nt print well", "body": "submitting current behavior many documentation pages nt decent printable format please check screenshots expected behavior space around content minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19599", "d": "10/2017"}, {"title": "angular work angularflexlayout", "body": "angular application works perfect fine rxjs typescript tried angular application builds perfectly fine run app browser js errors current behavior angular application run browser expected behavior angular application console js errors motivation use case changing behavior think related module use private core method removed deprecation warning continues work environment browser x chrome desktop version xx latest chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues angularcli node os darwin angularanimations angularcdk angularcli angularcommon angularcompiler angularcompilercli angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularserviceworker angularlanguageservice typescript", "num": "19598", "d": "10/2017"}, {"title": "aot compiler creates module factories outside oudir", "body": "submitting current behavior creates folders angular module ie router forms common right project root instead expected behavior create files create environment", "num": "19597", "d": "10/2017"}, {"title": "httpinterceptor behavior changed", "body": "submitting current behavior implementing catch next intercept method custom interceptor errerror property contains json string injectable export class customhttpinterceptor implements httpinterceptor constructor private loadingdata loadingdata private errordialogservice errordialogservice private outstandingcalls intercept req httprequest next httphandler observable httpuserevent gt return nexthandle req catch err gt err instanceof httperrorresponse errstatus thiserrordialogserviceseterrordata errerror errerror changed return observableempty gt finally gt thisdecreaseoutstandingcalls expected behavior previously errerror parsed json object minimal reproduction problem instructions using interceptor handle status errors server server application encounters exception return response status json string containing information error see catch statement next method interceptor example response type applicationjson motivation use case changing behavior global error handling http requests httpclient server returns status json string send response containing information displayed browser environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "19596", "d": "10/2017"}, {"title": "aio improve sorting api filter page", "body": "see", "num": "19594", "d": "10/2017"}, {"title": "class methods lost passing obj component input", "body": "submitting current behavior define model class ts export class patientroom constructor public lastname string get randomstring string return random define parent component define child component patienttostring line print object object instead last export class childcomponent implements oninit input public patient patientroom public ngoninit void consolelog patientrandomstring line cause exception randomstring defined expected behavior method calls work angular serialize concat objects somehow minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19593", "d": "10/2017"}, {"title": "ngfor structural directive multiple checkboxes breaks checked state inside element", "body": "submitting current behavior looping json object array using ngfor structural directive show checkboxes want ticked property object true found pulling half hair try inside element checked status checkboxes break understanding forms work anything please let know comments otherwise please see stackoverflow post expected behavior tick untick checkboxes ngfor loop functions outside form element minimal reproduction problem instructions motivation use case changing behavior try stackblitz without element wrapping formgroup div works way want environment", "num": "19592", "d": "10/2017"}, {"title": "async pipe breaks behaviour hot observable", "body": "fact pass hot observable angular async pipe breaks behavior hot observable example passing without passing see nguser console cases proof concept", "num": "19591", "d": "10/2017"}, {"title": "angular cli nt build polyfills properly", "body": "submitting current behavior ng serve app works properly adjusting polyfills course ng build nt work expected behavior ng build follow procedure generating files apparently doesnt minimal reproduction problem instructions start new project ng new adjust polyfillsts support ie build project ng build copy generated files dist http server way deploy angular app right used apache http server motivation use case changing behavior personally nt care ie people stop using client still uses nt gon na change anytime soon environment windows", "num": "19590", "d": "10/2017"}, {"title": "ca nt ngfor ergodic object", "body": "ca nt ngfor ergodic object objectkeys concise enough", "num": "19588", "d": "10/2017"}, {"title": "error attempting bind component properties initialized outside constructor ts", "body": "submitting current behavior angular throws typeerror ecomponentnewuser undefined running following component aot compilation typescript import component angularcore component template export class registercomponent public newuser fullname workaround works move newuser assignment constructor method nt necessary angular expected behavior error thrown properties bound form fields expected component initialized motivation use case changing behavior component worked without errors angular environment", "num": "19587", "d": "10/2017"}, {"title": "new ngmodule slower previous one", "body": "goal speed following use cases regressed used individual targets blaze would rebuild one action need caching files changed file file file changed affect metadata dts proposal detect case checking whether references changed user files compared nt typecheck emit user emitting would cause typescript typecheck well typecheck changed generated files ok nt influence user code type checking emit changed generated files proposal detect use files changed checking whether changed compared typecheck files including generated files nt know changes user files impacted exported types emit user files generated files nt change prototype proposals shows lead speed par better old based implementation notes blaze allow skip writing files instead create cache written files nt emit file use cache write files still save times file need go typescript emit pipeline tsickle using tsickle special adds information ie merge emitting individual files need able merge tsickle emitresults using method tsickle good way keeping parts compilercli independent tsickle would make take list files emit list cached expecting callback return single way callback used merging well emitting keep cached blaze worker program uses quite bit memory eg includes old typechecker good idea keep last program file changed around ie nt update compilation triggered dependencies changed files current implementation passing actually skip writing files unchanged logic needs adjusted cache emit result see based compiler option already passed bazel", "num": "19584", "d": "10/2017"}, {"title": "angular param null undefined http throws non descriptive error", "body": "source steps reproduce create new request object params containing one undefined null values expected behavior either clear error message one params undefined handle gracefully ignore nt send param send empty string actual behavior error console caught", "num": "19580", "d": "10/2017"}, {"title": "ngmodel convert model string input type nt number", "body": "submitting current behavior input type text ngmodel convert model string expected behavior model number something else save type minimal reproduction problem instructions logic typescript class foo public bar foo template motivation use case changing behavior backend returns value frontend need something update one backend side condition type value nt change backend update one ok convert value logic side nt know type changed nt want excess actions type converting environment", "num": "19577", "d": "10/2017"}, {"title": "body attribute exist interface defined file staticresponse", "body": "submitting current behavior attribute exist interface defined file staticresponse running ie application running expected behavior attribute accessible request minimal reproduction problem instructions show attribute http request possible typescript allow transpilation exist motivation use case changing behavior aaccess variable xxxx required exists object execution ts import http angular constructor private http environment", "num": "19576", "d": "10/2017"}, {"title": "components bundle regular end ngfactory version", "body": "submitting current behavior build aot inspect output sourcemapexplorer find components gendir ngfactory expected behavior one version components present ngfactory guess minimal reproduction problem instructions plunkr really nt make sense since problem build motivation use case changing behavior performance guess environment", "num": "19575", "d": "10/2017"}, {"title": "aio document process authoring different branches eg master stable", "body": "include api docs gkalpak", "num": "19573", "d": "10/2017"}, {"title": "error compile component styles", "body": "submitting current behavior style component generated expected behavior exptected css like minimal reproduction problem instructions motivation use case changing behavior usual usage combination environment", "num": "19572", "d": "10/2017"}, {"title": "http responsetypetext update responsetext loading progress", "body": "submitting current behavior http response null request completed expected behavior response observable updated progress responsetype text reference value responsetype set text empty string response contain partial text response request still loading state motivation use case changing behavior legacy http endpoint would run jobs mins print job status line line httpresponse nt update connection done users see job progress environment", "num": "19571", "d": "10/2017"}, {"title": "problem nested divs scrollbar", "body": "submitting current behavior simple piece htmlcss involving nested divs scrollbar seems work correctly angular plain htmlcss work example given window resized smaller scrollbar div work whereas scrollbar created instead main browser window expected behavior scrollbar div work minimal reproduction problem instructions ca nt get plnkr run sorry never used ca nt work nt run works locally code using also attached zip src folder app helps motivation use case changing behavior behave way plain htmlcss environment", "num": "19570", "d": "10/2017"}, {"title": "bug field browser nt contain valid alias configuration", "body": "submitting current behavior get error whenever use certain specific interface input type code ts srctypingstypesd export interface route id string toid string fromid string clientid string organizationid string name string value string isactive boolean shippings shipping trackings tracking routelines routeline city city client client organization organization createdby user updatedby user version number createdat string updatedat string srcapproutelistroutedetailroutelinelistroutelinelistcomponentts import controlplace route routeline typingstypes component selector approutelinelist templateurl routelinelistcomponenthtml styleurls routelinelistcomponentscss export class routelinelistcomponent implements oninit ondestroy input route route input controlplaces controlplace routeinputinputs error expected behavior build normally minimal reproduction problem instructions sure since file generated environment browser x chrome desktop version tooling issues node version platform ubuntu", "num": "19569", "d": "10/2017"}, {"title": "extend numeric pipe support usegrouping flag", "body": "submitting current behavior numeric pipe always use grouping separators formatting numbers eg usegrouping flag intlformatnumber options defaults true way set value expected behavior numeric pipe allow developers set usegrouping flag pipe options addition significantdigits provided internationalization api looked well usage could difficult minimal reproduction problem instructions na motivation use case changing behavior would like able control number grouping format using numeric pipe nice since could create could also create pipe removed separator characters depending locale however since intl library supports would nice expose options pipe environment na", "num": "19564", "d": "10/2017"}, {"title": "showing svg using ngif", "body": "submitting current behavior google chrome place using ngif svg html like shows svg normaly navigating page see svg icons need refresh page happens mozila firefox expected behavior show svg icons without refreshing page minimal reproduction problem instructions motivation use case changing behavior using one place show login page component authorized user using router authorized another place showing buttons hiding depending visiting profile page someone else environment", "num": "19563", "d": "10/2017"}, {"title": "aio include html comment links page", "body": "slightly complicated sounds since links place rendering occurred also postprocessing run really collect information finished processing kind late add html information", "num": "19560", "d": "10/2017"}, {"title": "aio alphabetize api docs api list page", "body": "", "num": "19559", "d": "10/2017"}, {"title": "formreset also reset submitted status form", "body": "submitting current behavior resetting form using formreset nt reset status form mentioned willshowell error state form calculated like since formreset nt reset submitted status form controls keeps displaying error classes expected behavior formreset also reset status", "num": "19557", "d": "10/2017"}, {"title": "module angularanimationsbrowser exported member \u0275domanimationengine", "body": "submitting using version animation module shows usersguyprojclientnodemodules angularplatformbrowseranimationssrcprovidersdts error module usersguyprojcasualshippingclientnodemodules angularanimationsbrowser exported member \u0275domanimationengine tried older lates version animation module happens anyway guess", "num": "19556", "d": "10/2017"}, {"title": "successful http responses eg returned errors", "body": "submitting current behavior httpclient observables returns probably except http status error expected behavior status lt returned next error minimal reproduction problem instructions prepare plunker desired unable reproduce tell needed motivation use case changing behavior regression correct may related another httpclient regression environment", "num": "19555", "d": "10/2017"}, {"title": "selectrootelement overwrites element content", "body": "submitting current behavior insertadjacenthtml overwrites contents row want attach sibling row index element becomes expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19554", "d": "10/2017"}, {"title": "redirection closing route outlet nt work", "body": "submitting current behavior route outlet opened like try redirection inside component page close route outlet like get redirected page account still open expected behavior close modal outlets redirect page component minimal reproduction problem instructions motivation use case changing behavior using route outlet fe modals probably point need redirect another page close modal time inside modal component environment", "num": "19547", "d": "10/2017"}, {"title": "lazy loaded loadchildrens nt provided token routes", "body": "submitting current behavior could see compiler finds loadchildrens lazily loaded module paths via using injectiontoken thus lazy load modules without adding via token using method global nt think really good idea several modules load lazily load wrote moduleloader like router modules connected route thus nt want add config however compiler uses token make sure wo nt match route make routes always return zero match feels like really hacky solution expected behavior think would much better compiler would use seaparate token find loadchildren routermodule provide config got environment relevant issue", "num": "19545", "d": "10/2017"}, {"title": "aot determine module class lt gt component", "body": "submitting current behavior compilation prod aot mode fails given error message every component project even bootstrapped applicationcomponent mentioned components declared corresponding modules jit works without errors warnings problems aot used work earlier versions expected behavior compile app environment", "num": "19544", "d": "10/2017"}, {"title": "aot metadata published root folder instead dist folder", "body": "submitting current behavior compiling application aot metadata files published root folder instead dist folder used work expected behavior metadata files published dist folder environment", "num": "19543", "d": "10/2017"}, {"title": "radio groups keyboard navigation tab skips next groups", "body": "submitting current behavior make form group number radio button groups using keyboard navigate work keyboard treats radio groups one tabs next element radio groups radios attribute set explicitly keyboard navigation works reactive forms broken expected behavior radio buttons name keyboard navigation tab jump next radio group per guidelines minimal reproduction problem instructions group reactive forms examples displays unwanted behaviour group plain html displays proper behaviour motivation use case changing behavior forms accessible environment angular version browser x chrome desktop version xx x safari desktop version xx firefox version xx chrome android version xx chrome ios version xx safari ios version xx ie version xx edge version xx others macos sierra", "num": "19542", "d": "10/2017"}, {"title": "angular find net", "body": "submitting current behavior added dependency simple angular cli app get error run ng start environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "19540", "d": "10/2017"}, {"title": "chrome devtools displays duplicate empty ts files ng namespace", "body": "see internal", "num": "19538", "d": "10/2017"}, {"title": "sourcemaps ngc seems wrong", "body": "", "num": "19537", "d": "10/2017"}, {"title": "httpclientpost body param sent correctly using applicationxwwwformurlencoded content type request header", "body": "submitting current behavior sending http post request using httpclient body data example json object looks angular send json object key another object example username equal example user password equal pass request object server side contain body value like screenshot see value body request object serverside see body object trying send httpclientpost seems key another object wrapped around empty valuebut object expected behavior angular send body object object key another object minimal reproduction problem instructions code authentication service import httpclient httpheaders httpresponse angularcommon import injectable angularcore import response angular import rxjsaddoperatormap import observable rxjsobservable injectable export class authenticationservice public token string server side using nodejs express environment thank advance help", "num": "19535", "d": "10/2017"}, {"title": "domeventsplugin uses zone directly errors ngzone noop", "body": "submitting current behavior using new option run angular without zonejs included setting event handler throws error likely root cause tracks back expected behavior zonejs required anywhere using zone option minimal reproduction problem instructions add remove see change behavior motivation use case changing behavior environment angular version", "num": "19534", "d": "10/2017"}, {"title": "doc broken link master styles tour heroes tutorial", "body": "submitting current behavior tour heroes tutorial pagesection link master stylesheet ensure file contains master styles provided broken points resulting expected behavior link correct url stylesheet minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19530", "d": "10/2017"}, {"title": "httpclient http failure parsing error empty string response ie", "body": "submitting current behavior request throws error trying parse response ok content simple string returning body content checked issue well expected behavior error thrown response ok minimal reproduction problem instructions motivation use case changing behavior environment angular version browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx x ie version edge version xx tooling issues platform windows backend net core api", "num": "19529", "d": "10/2017"}, {"title": "failed start script ng serve windows", "body": "using node npm windows bit create new project using angular cli finishes successfully trying run using ng serve show following error failed start script ng serve complete log error npmdebug info worked ends ok verbose cli c program filesnodejsnodeexe verbose cli c program filesnodejsnodemodulesnpmbinnpmclijs verbose cli start info using npm info using node verbose runscript prestart start poststart info lifecycle testme testme silly lifecycle testme script prestart continuing info lifecycle testme testme verbose lifecycle testme unsafeperm lifecycle true verbose lifecycle testme path c program filesnodejsnodemodulesnpmbinnodegypbin angproductstestmenodemodulesbin c program filesgitcmd c programdataoraclejavajavapath c c windows c c c program files hpeloadrunnerstrawberryperlperlbin c program filesgitcmd c program filesnodejs c userssanjaylpappdatalocalandroidsdkplatformtools c program filesgitbin c program filesmicrosoft vs codebin c userssanjaylpappdataroamingnpm verbose lifecycle testme cwd angproductstestme silly lifecycle testme args c ng serve silly lifecycle testme returned code signal null info lifecycle testme failed exec start script verbose stack error testme start ng serve verbose stack exit status verbose stack eventemitter c program verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess c program verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid testme verbose cwd angproductstestme error windowsnt error argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs start error node error npm error code elifecycle error testme start ng serve error exit status error failed testme start script ng serve error make sure latest version nodejs npm installed error likely problem testme package error npm error tell author fails system error ng serve error get information open issue project error npm bugs testme error nt available get info via error npm owner ls testme error likely additional logging output verbose exit true cli team reproduce problem supporting information npm v prints node v prints npm config get registry prints windows os xmacos linux windows nt use proxy limited unreliable internet access container develop using windows", "num": "19528", "d": "10/2017"}, {"title": "animations safari animating back current state briefly jumping initial state", "body": "submitting minimal reproduction problem instructions check chrome safari check video related issue using code environment cc matsko", "num": "19526", "d": "10/2017"}, {"title": "serviceworker work jit", "body": "submitting current behavior expected behavior errors minimal reproduction problem instructions run app imported serviceworkermodule jit aot works environment", "num": "19525", "d": "10/2017"}, {"title": "support override ngswworkerjs path ngswjson", "body": "submitting current behavior hardcoded expected behavior way override motivation use case changing behavior app hosted subdirectory site way place ngswjson root manually edit file remove code", "num": "19524", "d": "10/2017"}, {"title": "angular application instanceable multiple times page", "body": "need create angular application instanceated many times html page parameters clear need able something like indexhtml page possible angularjs beatiful fonctionnality removed angular except something miss functionnality help using angular apps inside liferay thank", "num": "19523", "d": "10/2017"}, {"title": "incompatibility issue", "body": "submitting current behavior trying render app node server however get error problem generated fact renderer passes lib non string values expected behavior actual string values passed several issues open repository declined fix expect correctly formed ast input minimal reproduction problem instructions problem seems appear build app using ngxtranslate universal motivation use case changing behavior unable render app server side environment", "num": "19522", "d": "10/2017"}, {"title": "serviceworker config generate wrong paths windows", "body": "submitting current behavior expected behavior environment think nodefilesystem must use posix join method ts const files entriesfilter entry gt entrystatsisdirectory map entry gt pathposixjoin path entryentry", "num": "19521", "d": "10/2017"}, {"title": "lazy loaded module work lazy routing", "body": "submitting current behavior problem lazy module needs use app popup router secondary named outlet appcomponenthtml expected behavior lazy module use popup router appcomponenthtml minimal reproduction problem instructions following app component template srcappappcomponenthtml html app module routes srcappapproutingmodulets srcappappmodulets lazy module routes srcapplazylazymodulets srcapplazylazymodulets navigate navigate route like srcapplazylazycomponenthtml ca nt seem get work get error note works perfectly though import lazymodule appmodule although defeats purpose lazy loaded module get lazy loaded module use secondary routeroutlet named apppopup exist app components html template motivation use case changing behavior getting lazy module use single app wide secondary outlet popup environment angularcli project", "num": "19520", "d": "10/2017"}, {"title": "packages missing ngsummaryjs files", "body": "submitting current behavior updating angular packages missing properly formatted ngsummaryjs files expected behavior every package includes ngsummaryjs file minimal reproduction problem instructions observe two packages missing properly formatted ngsummary files forms missing file completely animations formatted json nodemodules angularanimationsanimationsngsummaryjs nodemodules angularanimationsbrowserbrowserngsummaryjs nodemodules angularformsformsngsummaryjs motivation use case changing behavior without summary files bundling app closure compiler fails log closure compiler started warn error read file nodemodules angularanimationsanimationsngsummaryjs error read file nodemodules angularanimationsbrowserbrowserngsummaryjs error read file nodemodules angularformsformsngsummaryjs error warning environment", "num": "19518", "d": "10/2017"}, {"title": "iterabledifferforeachoperation produces incorrect result first inserting record moving record", "body": "submitting current behavior using iterabledifferforeachoperation comparing changes array insert operation move operation performed array foreachoperation method represents insert operation replace operation expected behavior foreachoperation method produce results represent insert operation move operation minimal reproduction problem instructions motivation use case changing behavior correct results always good thing environment", "num": "19516", "d": "10/2017"}, {"title": "destroy child elements selectrootelement", "body": "submitting based current behavior use service form destroys child elements based bootstrap form reference expected behavior selectrootelement method store dom instance use methods like minimal reproduction problem instruction see example motivation use case changing behavior instead fill dom possible error want add div error special service environment", "num": "19515", "d": "10/2017"}, {"title": "way view docs specific previous angular versions", "body": "submitting current behavior way view docs angular expected behavior way view previous docs next current dart minimal reproduction problem instructions go click api gt stable v versions select motivation use case changing behavior feasible us version bump exact point time much angular changesevolves quickly useful go back time view docs specific version current use case trying test service uses http newest docs say use expectone etc module appear exist need write unit tests quickly angular changes blog posts specific version easily find angular update guide basic apps mentions switch httpmodule http service httpclientmodule httpclient service httpclient simplifies default ergonomics nt need map json anymore supports typed return values interceptors stuff changed httpmodule mystery completely changed implications understand reason current system showing versions may incentivize people always use latest version however always realistic angular changes drastically frequently environment", "num": "19514", "d": "10/2017"}, {"title": "methods templates nt understand infinity value", "body": "submitting bug report current behavior gets expected behavior get minimal reproduction problem instructions environment angular version browser", "num": "19512", "d": "10/2017"}, {"title": "list updates needed cli docs", "body": "documentation team revising docs show usage angular cli details work done guide issue tracks progress plan x ajs quick reference x animations x aot recommend delete moving overview metadata aot rename aot x attribute directives stepbystep guide needs new steps x bootstrapping update w code cli add sentence x browser support sentences x component styles fix longer true cli x dependency injection describe cli register x deployment needs work replace many systemjs specifics webpackcli specifics x displaying data x glossary remove systemjs entries setup references define cli x needs workthis stepbystep guide needs new steps code must change different cli ocombe leading one x ngmodule per kapunahele update cli without regard pending changes arrive time reconcile later x npm packages rewrite reflect cli x pipes x reactive forms stepbystep guide needs new steps needs attention adding bootstrap style router stepbystep guide needs new steps port changes folder structure brandon working x templatedriven forms stepbystep guide needs new steps needs attention adding bootstrap style x testing needs work commands change terminal output cli different must describe karmaconfig comes remove systemjs refs redescribe light webpack effects hours work required x tour heroes incorporate jules work first typescript configuration many differences cli removed big deal wb guide wildly odds three files emitted cli even guide correct nt add much value cli document three files recommend deleting guide x universal adjust guide merged present form replaces systemjs aspects cli aspects vs qs recommend drop outdated today recommend different path net apps probably recommend vs net core new apps sink hole x sweep selectors change myapp approot think doable lt hours exception tour heroes really separate topic", "num": "19510", "d": "10/2017"}, {"title": "jasmine test components use ngcontent", "body": "submitting current behavior writing unit tests using pass anything component expected behavior able write comprehensive unit tests type component minimal reproduction problem instructions write component utilises try unit test motivation use case changing behavior component uses testable many different types components use feature especially ui components environment", "num": "19508", "d": "10/2017"}, {"title": "angular handle multipart responses servers", "body": "submitting current behavior seems angular provide convenient way deat multipart responses server expected behavior would nice response could return list parts multipart responses part could processed separately minimal reproduction problem instructions motivation use case changing behavior situation get request server returns multipart response responsecontenttype something like multipart response treated one piece forces parse manually order extract bodies part environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows others", "num": "19507", "d": "10/2017"}, {"title": "info toolbarbackground class name ngreflectklass typo confirmation", "body": "submitting current behavior ionic team suggested check angular team see bug comment expected behavior wondering ngreflectklass spelled klass class environment others cli packages ioniccliutils ionic ionic cli global packages cordova cordova cli local packages ionicappscripts cordova platforms android ionic framework ionicangular system android sdk tools iosdeploy iossim node npm os macos sierra xcode xcode build version misc backend legacy", "num": "19506", "d": "10/2017"}, {"title": "routes redirected", "body": "submitting current behavior currently routes redirected minimal reproduction problem instructions go try navigate example", "num": "19505", "d": "10/2017"}, {"title": "reload current route guards", "body": "let say route guard lets admin page click state propagated app via observables still route supposed since logged reactivate curent route guards", "num": "19504", "d": "10/2017"}, {"body": "adding global counter like shows increments though output multiple times console guessing reporting issue", "d": "10/2017"}, {"body": "hello sorry enough information reproduce could create branch github investigate also typescript version using", "d": "10/2017"}, {"body": "oh think nt support could try", "d": "10/2017"}, {"body": "verified happens time using", "d": "10/2017"}, {"body": "actually bug typescript see", "d": "10/2017"}, {"body": "systemjs support commonjs inpurt workaround use", "d": "10/2017"}, {"body": "upgrading angular using typescript compilercli requires typescript downgraded version angular ts everything ok ts get issue tsconfig try solution monday holiday without access project repository thanks anyway tip really appreciate help", "d": "10/2017"}, {"body": "duplicate use typescript", "d": "10/2017"}, {"body": "trotyl alright thank much", "d": "10/2017"}, {"body": "working reboot machine problem sorry", "d": "10/2017"}, {"body": "service providers section ngmodule available components within module need add parameter component injected need get type yes need import importing type class injected instance module import myservice mymodule import myservice file path exported class myservice class wrote self coming npm would need check documentation import class", "d": "10/2017"}, {"body": "closed via", "d": "10/2017"}, {"body": "urgent fine assiging jabogart put backlog gap work urgent think easy update share learned minimally encourage contributors check email used refer github help information", "d": "10/2017"}, {"body": "think part resolution users set email address single repo different github default repos", "d": "10/2017"}, {"body": "good example needs clarity referenced jabogart works got git id use adobe got message adobe mail ideal jb oct pm jennifer fell notifications githubcom wrote think part resolution users set email address single repo different github default repos receiving mentioned reply email directly view github mute thread", "d": "10/2017"}, {"body": "gkalpak reassign jbogarthyde thanks ca nt please let know sorry inconvenience gotten wrong", "d": "10/2017"}, {"body": "jenniferfell jabogarthyde ca nt assigned member angular organization think juleskremer among others invite join org", "d": "10/2017"}, {"body": "working fine chrome version official build firefox", "d": "10/2017"}, {"body": "situation back normal thank", "d": "10/2017"}, {"body": "plnkr throwing lot errors console case working fine", "d": "10/2017"}, {"body": "fbcarpinato read spec", "d": "10/2017"}, {"body": "exact thing mouseover event gets fired multiple times mousedown never", "d": "10/2017"}, {"body": "fbcarpinato one working", "d": "10/2017"}, {"body": "right found creating element inside ngfor directive think issue", "d": "10/2017"}, {"body": "nt think restoring scroll position function route reuse strategy need store scroll position prior navigation post details route either subscribe route change events router service communicates timeline component call windowscroll restore user", "d": "10/2017"}, {"body": "look issue workarounds wait official solution", "d": "10/2017"}, {"body": "problem suggestion possible post added example commenting navigated forward navigate back scroll position expect", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "oups meant angularcli sorry", "d": "10/2017"}, {"body": "related currently wo nt respect property change since handles condition problem identified easily code formcontroldirectivets", "d": "10/2017"}, {"body": "trotyl thank updated issue plunker", "d": "10/2017"}, {"body": "seeing problem case ngxbootstrap library angular generated import form import ngxbootstrapalertalertcomponent import alertcomponent breaks subsequent rollup bundling", "d": "10/2017"}, {"body": "issue report edit several times within minutes submitted started plunker example found may way making one great issue reporting control took details ton details example", "d": "10/2017"}, {"body": "juniuz error message says problem", "d": "10/2017"}, {"body": "mlcmlapis right happen explicitly use method like something wrong approutingts sorry nob question confused", "d": "10/2017"}, {"body": "juniuz hmm means new line spaces also means server code samples think related angular related aspnet backend", "d": "10/2017"}, {"body": "mlcmlapis okay invoke url directly browser address bar test also postman get json data correctly screen capture thinking issue nt backend ideas", "d": "10/2017"}, {"body": "juniuz cors right config backend test standalone html page loaded different port vanilla xhr request see result direct access url done without cors play", "d": "10/2017"}, {"body": "mlcmlapis nt know cors config referring", "d": "10/2017"}, {"body": "juniuz google info aspnet first config bit specific backend platform possible say general means situation access rest api different host port app loaded host port rest api located", "d": "10/2017"}, {"body": "mlcmlapis thanks explanation get meant aspnet webapi config file web api routes configmaphttpattributeroutes routetemplate configured route mapping structure web api call case app host port rest api located something cors", "d": "10/2017"}, {"body": "juniuz please double check ok still enough check important url using start client app like rest api point calling", "d": "10/2017"}, {"body": "upon investigation believe nt related http service module routing something systemjsconfigjs loader closed issue", "d": "10/2017"}, {"body": "topic congratulations getting issue number", "d": "10/2017"}, {"body": "sarunint documented go immediately obvious look code use code website suggest deprecated removed another channel pay attention use features genuinely would like know", "d": "10/2017"}, {"body": "oops sorry removed previous comment misunderstanding thought ask automatically parsing response really recommend migrating use introduced since going deprecated reference going removed completely according angular deprecation policy migration nt much pain since api pretty similar notable change nt need manually parse response anymore means sure help issue serialise request body ps place check documentation next version angular", "d": "10/2017"}, {"body": "sarunint thank reference idea nextangulario awesome appear address issue method use case would return json string nothing constructor appears look content type either believe ticket would apply well", "d": "10/2017"}, {"body": "tested plunkr firefox seems work expected something related chrome perhaps", "d": "10/2017"}, {"body": "hello create new app using cli every day works nt work least provide us reproduction screenshot nt help us understand reason", "d": "10/2017"}, {"body": "hi alexzuza use environment provided", "d": "10/2017"}, {"body": "alexzuza actually working chrome version android lower version produce error sorry mentioning earlier", "d": "10/2017"}, {"body": "line please look first search repo mark better linking wellexplained description closed duplicate dozens issues", "d": "10/2017"}, {"body": "hello think main problem using according docs one intentional omission list angularcompiler currently considered low level api subject internal changes nt use test memory leak would advice enable prod mode time call add new key map used internally", "d": "10/2017"}, {"body": "alexzuza compiler lies", "d": "10/2017"}, {"body": "trotyl yeah right throws error nt provide", "d": "10/2017"}, {"body": "alexzuza provided user wo nt touch symbol defined everything still public api", "d": "10/2017"}, {"body": "thanks pointing lies starting also tells us rely becames stable", "d": "10/2017"}, {"body": "point api usage defined declaration declared makes public api matter implementation exists start mark even within deprecation strategy one relying used since term ambiguous angular change given could make clear", "d": "10/2017"}, {"body": "shown leaks come basically used keys maps hence references still retained component destroyed", "d": "10/2017"}, {"body": "also enabling aot dev mode really slow nt able know defined", "d": "10/2017"}, {"body": "tried moving diff git asrcappappcomponenthtml bsrcappappcomponenthtml index asrcappappcomponenthtml bsrcappappcomponenthtml diff git asrcappappmodulets bsrcappappmodulets index asrcappappmodulets bsrcappappmodulets import browsermodule angularplatformbrowser import ngmodule angularcore import uiselect testuiselect import appcomponent appcomponent ngmodule declarations appcomponent appcomponent uiselect imports browsermodule diff git asrcapptestuiselectts bsrcapptestuiselectts new file mode index devnull bsrcapptestuiselectts import component angularcore component selector appuiselect templateurl uiselectuiselecthtml export class uiselect diff git asrcappuiselectuiselecthtml bsrcappuiselectuiselecthtml new file mode index devnull bsrcappuiselectuiselecthtml ui select could reproduce missing", "d": "10/2017"}, {"body": "error", "d": "10/2017"}, {"body": "seems related angularcli occurred enabling env closing favor", "d": "10/2017"}, {"body": "sure resolved working unclear close", "d": "10/2017"}, {"body": "ts error see props object literal name change", "d": "10/2017"}, {"body": "please create minimal reproduction plunkr stack blitz", "d": "10/2017"}, {"body": "indeed bug please notice error handler would run inside angular zone expected behavior neither handling http error nonhttp error would update view", "d": "10/2017"}, {"body": "ok way update view gracefully recover error keep application running general way recover normal functionality angular zone", "d": "10/2017"}, {"body": "manually run inside ngzone typescript injectable export class dialogerrorhandler implements errorhandler careful could risk infinite loop error handling throws", "d": "10/2017"}, {"body": "nt seem catching type errors shrugs", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "provide github repo reproduce clear steps meanwhile systemjs support configuration typescript", "d": "10/2017"}, {"body": "thanks trotyl plunkr", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "hi able reproduce bug iphone ios version safari version coupled ios version chrome version even debug potential console errors mac use safari web inspector feature note suggest trying free trial allow emulate specific device os testing hope helps move forward bit", "d": "10/2017"}, {"body": "justinotero appreciate link test seems hot miss devices works ill try narrow problem hopefully debug", "d": "10/2017"}, {"body": "damn reason fix include encapsulation viewencapsulationnone clue decider phones etc show site stupid line fixed whitescreen issues error anything sent hours going past commits pulled one finally worked narrowed justinotero thanks much help good resource browser stack definatly use future testing", "d": "10/2017"}, {"body": "code issue seems work actual bug related adding params investigate actual bug different cause", "d": "10/2017"}, {"body": "issue related parameters request fact returned promise", "d": "10/2017"}, {"body": "happens controls form disabled form think disabled behavior call disable form enable submit button", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "angular always integrated closure compiler advanced mode view engine introduced asking angular cli support please reopen repo", "d": "10/2017"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior", "d": "10/2017"}, {"body": "hi put bugs feature requests seems like question recommend posting stack overflow stackoverflowcom closing issue way probably get help need faster angular team close issue without question question trying help", "d": "10/2017"}, {"body": "ok thanks", "d": "10/2017"}, {"body": "github reaction pls stop submit useless issue take peek code compilercli", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "seeing following macos start touch wait compilation complete comment wait compilation complete seeing expected error uncomment wait compilation complete error shown", "d": "10/2017"}, {"body": "filipesilva described windows reproduction", "d": "10/2017"}, {"body": "thanks alexzuza fact show message emitted files seems windows incorrectly calculate changes files ie think file changed problem watching cli cli reusing program errors instead discarding remaining problem still needs investigated", "d": "10/2017"}, {"body": "yes deprecated angular according angular deprecation policy think package removed use instead", "d": "10/2017"}, {"body": "yes page shows httpclient used instead however much deprecated like requestoptions connectionbackend xhrbackend etc none say replacing use httpclient instead great replacing specific modules", "d": "10/2017"}, {"body": "hey kassimir thanks feedback sometimes easy one one replacement case related scenarios issue sparked good discussion within docs team take design work thanks important feedback contributing discussion", "d": "10/2017"}, {"body": "experience migration pretty straightforward still migration docs though", "d": "10/2017"}, {"body": "experience migration http httpclient pretty straightforward much yes however custom http module extends http class super expects backend defaultoptions angular whereas super commonhttp expects requestoptions go nt know analyze new httpclient code figure docs nt mention would much easier go requestoptions page note says hey options", "d": "10/2017"}, {"body": "kassimir class constructor part public api usage via di guaranteed explicitly nt consider following public api surface constructors injectable classes services directives please use di obtain instances classes please checkout publicapi information", "d": "10/2017"}, {"body": "sarunint also consider implications within docs communicate shifts two parts consider change developer make app also make information clear available consistent way code docs examples design thinkingwork moving pieces hope helps clarify use phrase related scenarios", "d": "10/2017"}, {"body": "might angulario still branch stable comes around sometime next week deprecation details angular please reopen nt address something else", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "ok closing per review wont fall bug category", "d": "10/2017"}, {"body": "nt need add routing done automatically need specify anything anymore believe caching failed nondefault basehref pass parameter ngsw cli case look like offtop lacolaco tokyo nov pleasure meet maybe present something ngjapan meetup", "d": "10/2017"}, {"body": "hmm changed property seems working well generated ngswjson project made angular cli added ngsw files ps webmaxru want see please send email suguruinatomi gmailcom trip let adjust schedule", "d": "10/2017"}, {"body": "try upgrade likely bug", "d": "10/2017"}, {"body": "already upgraded see environments comment", "d": "10/2017"}, {"body": "still happening", "d": "10/2017"}, {"body": "hi lacolaco site loads please open tab access debugging url paste contents thanks", "d": "10/2017"}, {"body": "alxhub thank ngsw debug info driver state normal nominal latest manifest hash none last update check never idle task queue last update tick never last update run never task queue debug log", "d": "10/2017"}, {"body": "lacolaco please url open refresh app wait seconds refresh debug url log indicates service worker never seen", "d": "10/2017"}, {"body": "alxhub right log weird thing cached correctly", "d": "10/2017"}, {"body": "ahhh sorry enabled service worker option got actual logs ngsw debug info driver state existingclientsonly degraded due failed initialization hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork latest manifest hash last update check version clients idle task queue last update tick last update run task queue debug log error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork initializefully", "d": "10/2017"}, {"body": "repro git clone yarn install ng serve", "d": "10/2017"}, {"body": "nothing related angular framework report angular cli want", "d": "10/2017"}, {"body": "could use think way available browser cache nt tried think would work", "d": "10/2017"}, {"body": "html spec says keypress valid keys produce character browser interpretation spec worked around angular use keydown keyup", "d": "10/2017"}, {"body": "two days ago thing except keypress backtick linked google saying time ago correct interpretation spec", "d": "10/2017"}, {"body": "palumacil thanks using keypress wanted handle event key produced character easily work around angular capture keypress event pass event onto component chars valid html spec", "d": "10/2017"}, {"body": "angular capture emitted please try google first", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "oops sorry looked docs asked community chat could nt answer thought feature missing try thanks lot", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "seems related tsconfigjson remove everything fine create pr fix", "d": "10/2017"}, {"body": "regression see comment actually working fine try replace find update expected problem component binding even updated successfully component wo nt updated instead make feature request like perform change detection whenever status changes likely tricky attribute directive control background expose observable version status change component use pipe without change detection tick", "d": "10/2017"}, {"body": "problem think kind race condition would expect rlaisactive true item work fine element get class active ideas", "d": "10/2017"}, {"body": "nature angular change detection mechanism would update view dirtychecking bound value since component behind although changed component wo nt check result update applied view component", "d": "10/2017"}, {"body": "see pointers could work around upgrade solved", "d": "10/2017"}, {"body": "one hacking way typescript import component changedetectionstrategy changedetectorref ondestroy angularcore import navigationend router angularrouter import subscription rxjssubscription component selector appnavigationonpush export class navigationonpushcomponent implements ondestroy routes private subscription subscription constructor private cdref changedetectorref private router router thissubscription routereventssubscribe gt instanceof navigationend settimeout gt cdrefdetectchanges ngondestroy thissubscriptionunsubscribe", "d": "10/2017"}, {"body": "update likely regression work change fix another regression call removed could please update issue body reflect", "d": "10/2017"}, {"body": "duplicate planned implemented", "d": "10/2017"}, {"body": "read code played around guess observe events works documentation official doc site would great solution anyone issue", "d": "10/2017"}, {"body": "builtin mechanism sanitize inputs would nice something like one could safely write always boolean value property also setterngonchange wo nt called actual input value change one truthy falsy value another", "d": "10/2017"}, {"body": "relates amp one asking syntax sugar logic manually implementation", "d": "10/2017"}, {"body": "dawidgarus request another form follow", "d": "10/2017"}, {"body": "shortsighted opinions already pipe feature looks like standard sugar binding string literal convert ngmodel none sounds possible", "d": "10/2017"}, {"body": "stuff angular convention static methods designed specifically root module method designed root module nt name use lazyloaded module whether result expected determined module implementation nothing angular", "d": "10/2017"}, {"body": "trotyl yes right le rephrase would nice able pass config options lazy loaded module could handle method necessarily forroot one export class lazyloadedmodule static foomethod config config modulewithproviders return ngmodule lazyloadedmodule providers provide config usevalue config", "d": "10/2017"}, {"body": "loaded runtime replaced since hardness changing compilation process moreover transform string method call would require complicated dsl suggest using di transfer anything relates configuration", "d": "10/2017"}, {"body": "ok clear water thanks bunch", "d": "10/2017"}, {"body": "guess feature request", "d": "10/2017"}, {"body": "seems logging bug", "d": "10/2017"}, {"body": "evidently design docs popup stay open even switching pages application user closes sending message canceling", "d": "10/2017"}, {"body": "dig issue created sample application replicated application created using angular cli run development mode animation works create using production mode work gives mentioned message browser console", "d": "10/2017"}, {"body": "work around specific key hint use keydown nt going angular issue browsers work sure works firefox ie angular ca nt see something chrome nt sending want file report recommend filing chrome however spec indicates event produced keys produce character google said fix", "d": "10/2017"}, {"body": "palumacil issue valid browsers recognizing symbols event try hint thanks", "d": "10/2017"}, {"body": "could browsers dropped support match chrome could recall wrong ie firefox used work differently regardless keydown works nt make sure listening level event bubble following example use lot early dev provide shortcut dev page set event fire document level", "d": "10/2017"}, {"body": "problem missing still need although nt let typescript emit usual downleveling see details added everything fine", "d": "10/2017"}, {"body": "also filed issue tsickle track", "d": "10/2017"}, {"body": "reopening user need care ie set case automatically nt angular", "d": "10/2017"}, {"body": "please make effort file higher quality issue simply linking random code without explanation nt indicate nt working bug might", "d": "10/2017"}, {"body": "cli added support angular later versions nt think issue upgrade cli breaking changes", "d": "10/2017"}, {"body": "far understand using cli using probably deprecated apis without cli agree message generic actionable even people using cli", "d": "10/2017"}, {"body": "deprecated believe replacement", "d": "10/2017"}, {"body": "issue using angularcli using webpack build angular aot build broken error message using cli gives using latest ngtoolswebpack angular", "d": "10/2017"}, {"body": "true still error message generic actionable grin", "d": "10/2017"}, {"body": "error message incorrect need new instead fix error message", "d": "10/2017"}, {"body": "hansl thank hans cheers", "d": "10/2017"}, {"body": "hansl find new angularcompilerplugin ngtoolswebpack aotplugin", "d": "10/2017"}, {"body": "epieddy", "d": "10/2017"}, {"body": "bad npm latest npm next everyone finding google npm install savedev ngtoolswebpack next", "d": "10/2017"}, {"body": "closing fixed", "d": "10/2017"}, {"body": "made mistake updating service still mapped return value response body", "d": "10/2017"}, {"body": "two problems approaching independently error template validation reported configuration project unexpected validating templates able find metadata emit error reporting getting lost resulting violation internal constraint decorator array never contain addressing tying template validation default invoking libraries revert behavior generating metadata instead trying validate templates validated enabled tbosch working addressed reverting part change made fix jit programs switched error collection model used language service instead exception reporting model switching back exceptions continue use error collection language service chuckj working support configuration projects material using address post", "d": "10/2017"}, {"body": "regarding see", "d": "10/2017"}, {"body": "closing corresponding prs landed master", "d": "10/2017"}, {"body": "support directive button find name event mean event", "d": "10/2017"}, {"body": "hello thank welldocumented bug report reproduction behavior cases correct happens errors expectation frameworks like jasmine matchers actual get thrown rest test body nt executed happens called end test call throws chance execute one error returned called block however run causes test fail notices yet matched throws error make sense", "d": "10/2017"}, {"body": "yes alxhub makes sense thanks response another thing concerns removing params url nt match case nt match removed url also expected behaviour", "d": "10/2017"}, {"body": "alxhub agree behavior user expect simple mistake naming cause huge pain", "d": "10/2017"}, {"body": "angular version", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "currently forced use angularjs service insert markups hybrid app markup components downgraded angular takes insert compile allfromangularjs case using jit", "d": "10/2017"}, {"body": "hey delagen chance provide info get reproduction going", "d": "10/2017"}, {"body": "matsko bug occurs aot mode tried demonstrate issue get", "d": "10/2017"}, {"body": "upgraded seems hangs serviceworkermodule turned hangs lazy loading routes", "d": "10/2017"}, {"body": "fix serviceworker issue still hang lazy route loading jit mode works expected", "d": "10/2017"}, {"body": "tbosch idea relative", "d": "10/2017"}, {"body": "delagen tried works fine logs error console saying lazy loaded looking see importing change indicated error message app loads fine errors seeing please add reproduction steps", "d": "10/2017"}, {"body": "otherwise closed", "d": "10/2017"}, {"body": "seems found issue project thanks assist webpack config issue related generated code typescript source", "d": "10/2017"}, {"body": "project last working version tried failed well something went wrong", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "hansl came across error well yes vikerman help figure going usually issue version mismatch installs", "d": "10/2017"}, {"body": "matsko error reminds similar di issues di change relating static injection", "d": "10/2017"}, {"body": "matsko yes issue filed cli using cli could run", "d": "10/2017"}, {"body": "angular cli node os angular animations common compiler compilercli core forms platformbrowser platformbrowserdynamic platformserver router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "d": "10/2017"}, {"body": "might fixed master already try", "d": "10/2017"}, {"body": "reproduce issue ca nt see error universalstarter repo cli share repro github order modules important servermodule always appmodule", "d": "10/2017"}, {"body": "patrickmichalina fusebox starter servermodule appear appmodule", "d": "10/2017"}, {"body": "vikerman moving module order fix issue", "d": "10/2017"}, {"body": "possible share github repro reproduce issue universalstarter", "d": "10/2017"}, {"body": "ran universal angular cli app upgrading well see get anything unfortunately big internal app take time isolate stated", "d": "10/2017"}, {"body": "tbosch still broken", "d": "10/2017"}, {"body": "hello could somebody create branch github reproduces issue sorry ca nt fix otherwise", "d": "10/2017"}, {"body": "tbosch starter requires firebase account", "d": "10/2017"}, {"body": "patrickmichalina way reproduce without firebase interested solution would prepare minimal working example reproduce issue soon possible", "d": "10/2017"}, {"body": "alexzuza ok made branch inject firebase admin provider see error application start project use angularcli webpack moving beyond triggers error happening upgraded branch", "d": "10/2017"}, {"body": "patrickmichalina checked branch tried shows errors command line opens browser lists directory could provide details reproduce error seeing", "d": "10/2017"}, {"body": "never mind used node trying node", "d": "10/2017"}, {"body": "error gone still app served right commands run", "d": "10/2017"}, {"body": "tbosch recommend using", "d": "10/2017"}, {"body": "investigation servermodule imports provides import \u0275animationengine animationengine angularanimationsbrowser const sharedanimationproviders provider provide animationengine useclass injectableanimationengine also provides includes token see lives looks nice let take look generated bundles platformbrowseranimatonsumdjs gives us define angularanimationsbrowser function angularanimationsbrowser var sharedanimationproviders provide angularanimationsbrowser\u0275animationengine useclass injectableanimationengine platformserverumdjs import instead see one animationengine var animationengine function param driver param normalizer function animationengine driver normalizer var serverrenderproviders", "d": "10/2017"}, {"body": "patrickmichalina mmh still problem ie opens browser shows directory listing ca nt find files seems content", "d": "10/2017"}, {"body": "alexzuza reproduction could paste", "d": "10/2017"}, {"body": "tbosch wow never seen happen default open browser seen issues another browsync process already running random port assigned wo nt connect", "d": "10/2017"}, {"body": "patrickmichalina could maybe delete unrelated stuff appears lot modules likely unrelated", "d": "10/2017"}, {"body": "patrickmichalina even open see problem actually open result", "d": "10/2017"}, {"body": "patrickmichalina sorry seem ports open let change change port setup", "d": "10/2017"}, {"body": "yes reproduce find ca nt find", "d": "10/2017"}, {"body": "alexzuza source need repo", "d": "10/2017"}, {"body": "described working based repo two different functions animationengine source manually replaced imports works reproduction simply run fusebox typechecker throw windows please compare build artifacts different", "d": "10/2017"}, {"body": "tbosch recommend terminating processes may conflicting ports browsersync possible try set via also nt tested windows might funky build related stuff", "d": "10/2017"}, {"body": "patrickmichalina think working master nt use branch alexzuza right analysis thanks question changed ie started bundle starting", "d": "10/2017"}, {"body": "var version new angularcoreversion nt animationengine mean version used currently project contains animationengine definition angularplatformserver package latest build", "d": "10/2017"}, {"body": "alexzuza mean", "d": "10/2017"}, {"body": "definition still present look also seems bundle big kb see create empty git repo run go type", "d": "10/2017"}, {"body": "looks like fix nt make", "d": "10/2017"}, {"body": "look maybe something else missing", "d": "10/2017"}, {"body": "matsko see last comments could give us status blocking release", "d": "10/2017"}, {"body": "ah sorry nt see merge pr fix merged branch looks like platformserver umd bundle still animationengine inlined", "d": "10/2017"}, {"body": "something went wrong", "d": "10/2017"}, {"body": "possible fix", "d": "10/2017"}, {"body": "closed via", "d": "10/2017"}, {"body": "functionality work validated thousands angular devs using functionality seems like support request put bugs feature requests seems like question recommend posting stack overflow stackoverflowcom closing issue way probably get help need faster angular team close issue without question question trying help", "d": "10/2017"}, {"body": "ok thanks", "d": "10/2017"}, {"body": "yep problem", "d": "10/2017"}, {"body": "closing duplicate", "d": "10/2017"}, {"body": "instead accessing routeconfig member private member read properties members defined activatedroutesnapshot class docs source solution would use", "d": "10/2017"}, {"body": "hi martinjk iven solution working thanks", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "chance give info app ericmartinezr pointed could due variety issues", "d": "10/2017"}, {"body": "matsko seo purpose trying server side rendering search engine crawl pages followed tutorial", "d": "10/2017"}, {"body": "problem tutorial angular needs please refer official example information", "d": "10/2017"}, {"body": "trotyl yeah tried throwing different error listening error error urls requested via http server must absolute url validaterequesturl applicationsworkspaceangularangbsnodemodules new zonemacrotaskconnection applicationsworkspaceangularangbsnodemodules zonemacrotaskbackendcreateconnection applicationsworkspaceangularangbspackagesplatformserversrc applicationsworkspaceangularangbsnodemodules angular httprequest applicationsworkspaceangularangbsnodemodules angular httpget applicationsworkspaceangularangbsnodemodules angular translatehttploadergettranslation applicationsworkspaceangularangbsnodemodules ngxtranslate translateservicegettranslation applicationsworkspaceangularangbsnodemodules translateserviceretrievetranslations applicationsworkspaceangularangbsnodemodules translateservicesetdefaultlang applicationsworkspaceangularangbsnodemodules zonesymbolcurrenttask zonetask zone zone properties object parent object name angular zonedelegate object runcount zonedelegates null state notscheduled type microtask source promisethen data undefined schedulefn undefined cancelfn null callback function invoke function", "d": "10/2017"}, {"body": "error message quite clear need use absolute url design different error app several problems stops work first one error revealed fixing", "d": "10/2017"}, {"body": "linting still important example files specific instances file must break linting rules rules turned via inline comments", "d": "10/2017"}, {"body": "thank danielykpan reporting jelbourn experienced issue well within angularmaterial work fix", "d": "10/2017"}, {"body": "matsko thanks reply also reported issue couple months ago issue labeled bug nt reply", "d": "10/2017"}, {"body": "already exists issue workaround", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "puts server returned body feels like obey servers header describing really like idea since typed already makes sense would depend server response look implementing", "d": "10/2017"}, {"body": "workaround copy code check new interceptor course figure issue update simplest task unless duplicate xsrf header value see note exposing injection token", "d": "10/2017"}, {"body": "nt believe call breaking change designed dropin replacement explicitly behavior agree could better job documentation though would liked see documented would helped", "d": "10/2017"}, {"body": "leads hard debug errors closure compiler", "d": "10/2017"}, {"body": "duplicate already fixed branch change angular version observe actually bug fix change design recreate view context replacement also valid behavior", "d": "10/2017"}, {"body": "way prevent recreating view context changes need context dynamic need keep state checkbox", "d": "10/2017"}, {"body": "upgrade version mutate context without providing new object", "d": "10/2017"}, {"body": "several options available github dropdown lists", "d": "10/2017"}, {"body": "sounds like duplicate example works probably blocked ad blocker end closing happy reopen investigate ends something different", "d": "10/2017"}, {"body": "could provide online reproduction description duplicate fixed already http client codes looks fine screenshot since always unparsed string json responses", "d": "10/2017"}, {"body": "screenshot see impossible due", "d": "10/2017"}, {"body": "thx fast feedback try update try", "d": "10/2017"}, {"body": "searched http httpclient changelog found nothing commit indeed listed well updated works thx help", "d": "10/2017"}, {"body": "expected behavior static queries filled view creation hook called case static query inside embedded view dynamic query since located inside structural directive staic query viewchild contentchild viewchildrencontentchildren always dynamic queries", "d": "10/2017"}, {"body": "alexzuza unaware difference good point still nt solve usability issue maybe tooling would provide error trying access dynamic query correct lifecycle hook", "d": "10/2017"}, {"body": "alexzuza another thought would future version angular provide etc static query optimizations guess little harsh expected behavior really would prefer simpler behavior better tooling prevents nonexperts falling pit failure instead fall pit success", "d": "10/2017"}, {"body": "since api clear view queries set callback called guide first import references decorator lifecycle hook guaranteed hook safe enough use status undefined behavior may change wo notice", "d": "10/2017"}, {"body": "comments dev mode removed enable prod mode", "d": "10/2017"}, {"body": "thanks answering indeed everything fine prod mode however still want see application running dev mode well", "d": "10/2017"}, {"body": "lansana find general pattern like pattern usually concrete form", "d": "10/2017"}, {"body": "mlcmlapis figured router smart enough notice anywhere path sort like something like nt see ca nt match something like example use case medium", "d": "10/2017"}, {"body": "lansana hmm difference slash followed colon related router parsing url segments allowed observation could lead new request certainly bug issue", "d": "10/2017"}, {"body": "mlcmlapis good point guess changed bug feature request may make pull request would really like think ability prefix routes intuitive angularjs uirouter ability many frameworklibrary routers ability well", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "try placing value expression nt matter see get picked removal", "d": "10/2017"}, {"body": "works thanks mate wonder value tried putting anything literraly work nt understand point value", "d": "10/2017"}, {"body": "ok still bug get fixing next week", "d": "10/2017"}, {"body": "matsko following animation want use animating progress bar triggered follow set progress active animation starts duration duration needs reflect time take process end assuming setting progress would trigger animation duration animation triggered could clarify value used set state animation set bug refering thanks response", "d": "10/2017"}, {"body": "typechecking templates available aot jit reported correctly aot editor", "d": "10/2017"}, {"body": "thanks trotyl wait misspelling method name throw error", "d": "10/2017"}, {"body": "easy fix escape seen inconsistent behavior across browser wrt escaping obvious solution cc kara", "d": "10/2017"}, {"body": "escaping fix issue logged defect form control throw invisible internal error invalid regular able fixed require thought future issues people thanks mike pater victor berchet mailto notifications githubcom sent tuesday october angularangular angular noreplygithubcom cc michael pater csc michaelpater qbecom author author noreplygithubcom subject angularangular angular onwards regular expression causes screens hide easy fix escape seen inconsistent behavior across browser wrt escaping obvious solution cc kara receiving authored thread reply email directly view github mute thread important notice information email confidential may also privileged intended recipient use dissemination information disclosure copying email unauthorised strictly prohibited received email error please promptly inform us reply email telephone also delete email destroy hard copies produced", "d": "10/2017"}, {"body": "yeah looks like regex invalid sure error nt thrown project nt anything special suppress regex errors none pattern validator code changed year created quick plunker confirmed error comes console given ca nt reproduce closing issue", "d": "10/2017"}, {"body": "seems problem solved fix", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "could getter function could intended behaviour", "d": "10/2017"}, {"body": "think would valid feature request since coding style problem", "d": "10/2017"}, {"body": "dawidgarus getter clearly many cases covered better validations stands codeintemplates bug prone", "d": "10/2017"}, {"body": "soon inline generated code ts file would wo nt ngfactory files anymore would attribute generated code", "d": "10/2017"}, {"body": "closing determined better option use case would disable sourcemaps altogether already possible see discussion", "d": "10/2017"}, {"body": "reported behavior even issue", "d": "10/2017"}, {"body": "maximusk case issue occurs aot compilation", "d": "10/2017"}, {"body": "tried also generated host factories nonentrycomponents piece corresponding code afaik compiler jit mode nt generate factories nonentrycomponents jit compiler generates host factories call component part component metadata component part module metadata component part module metadata think intended generate host factories component aot nt know", "d": "10/2017"}, {"body": "igorminar yes aot always used generate host view factories components could introduced downstream dependency compiled separate compilation unit", "d": "10/2017"}, {"body": "generated code looks really wrong uglify webpack though styles nt use component factory component factory stored top level variable", "d": "10/2017"}, {"body": "chuckjaz steps reproduce incorrect code igorminar clone cd aio yarn install edited need go patch cli disable uglify mangling usually use mangle true mangle false compress uglifycompressoptions compress objectassign uglifycompressoptions sequences false output asciionly true output asciionly true beautify true sourcemap buildoptionssourcemaps comments comments false goes aionodemodules angularclimodelswebpackconfigsproductionjs find uglify section replace config build using ng build targetproduction environmentstable sm buildoptimizer inspect less distmain bundlejs", "d": "10/2017"}, {"body": "also disable uglify completely commenting webpack config show feed uglify", "d": "10/2017"}, {"body": "code incorrect correct value would treeshaken removing uglify configuration described igorminar shows emitting correct code also bashed callback save intermediate output output correct looks like code gets mangled uglify step tried executing uglifyjs directly using several versions able duplicate bug duplicate output format something might going wrong uglify plugin code prior uglify hansl taking investigation narrow problem webpack chain", "d": "10/2017"}, {"body": "tried latest cli master using latest released today uglifywebpackplugin includes uglifyes next generation uglify code found variables properly inlined factory call remains investigation bisection problem chuckjaz showing removing fix faulty optimization using terminal reproduce error removing uglify entirely keeping build optimizer fixed issue yarn list uglifyjs shows different installs likely clash webpack uglifyjs install cli master nt use uglifyjs package instead relying uglifyes hypothesize likely caused dependency problem uglify js root package one webpack local cli patch fixed reinstall cli suggest removing packagejson aio updating please note currently size aio optimizations latest master cli local patch better baseline", "d": "10/2017"}, {"body": "hansl removing uglify main package nt significant impact size change output slightly master currently upgrade branch expecting size savings upgrades", "d": "10/2017"}, {"body": "got bottom disable uglify see snippet code bundle js function l return viewdef l elementdef null null aiosearchresults null null null rendertypesearchresultscomponent directivedef null searchresultscomponentsearchresultscomponent null null null null var searchresultscomponentngfactory createcomponentfactory aiosearchresults searchresultscomponentsearchresultscomponent searchresults searchresults resultselected resultselected var searchresultscomponentngfactory createcomponentfactory aiosearchresults generated code top level function call others longer marked pure uglify considers calls potential sideeffect retains code code gets inlined various weird ways decrease size slightly essentially retained past used special code buildoptimizer would look handpicked function calls generated code mark pure however improved bits managed inline core modules together ng factories means longer identify calls via webpack module import longer exist nt match functions means generated code fully retained even buildoptimizer turned filipesilva created patch buildoptimizer uses different approach marking functions pure assume generated code nonlocal sideeffects prefix top level function calls pure tested version optimization indeed generated code got marked pure removed uglify retained rest app resulted savings aio filipesilva working getting patch release buildoptimizer tbosch chuckjaz understand question consider emitting pure annotation directly ngc generated code way people using buildoptimizer using uglify would benefit nt like generating uglifyspecific instructions code makes huge impact size nt harm anything else think", "d": "10/2017"}, {"body": "address igorminar findings", "d": "10/2017"}, {"body": "igorminar fix buildoptimizer released minutes ago", "d": "10/2017"}, {"body": "igorminar users using build optimizer lot things retained right would rather add dependency codegen uglify specific comments rather recommend build optimizer stronger way", "d": "10/2017"}, {"body": "fixed angulardevkit", "d": "10/2017"}, {"body": "released angulardevkit", "d": "10/2017"}, {"body": "ericmartinezr whats wrong nt issue", "d": "10/2017"}, {"body": "could provide reproduce repo detailed error information thanks", "d": "10/2017"}, {"body": "created project add everything works fine please post reproduce repo", "d": "10/2017"}, {"body": "jialipassion thank much reply please also try server side rendering confirm works case started working disabled ssr ssr working", "d": "10/2017"}, {"body": "jialipassion kindly close issue due setintervalclearinterval issue reported thank time", "d": "10/2017"}, {"body": "sure fixed please wait next release", "d": "10/2017"}, {"body": "thank much jialipassion update", "d": "10/2017"}, {"body": "likely relates", "d": "10/2017"}, {"body": "token always kept references general providers modules never tree shakable", "d": "10/2017"}, {"body": "reproduce follow steps opposed", "d": "10/2017"}, {"body": "maybe reword problem built master able eliminate class many things references bundle class retained class looks like transpiled", "d": "10/2017"}, {"body": "appears duplicate following code begin emitted invalid reasons described field elided instead initialized result invalid list styles reference component factory code generated input uglify contains replaced something uglify webpack pipeline call factory", "d": "10/2017"}, {"body": "problem root cause documented marking resolved", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "marking regression previously sourcemapexplorer info useful longer useful", "d": "10/2017"}, {"body": "potential workaround would allow template source maps disabled using flag", "d": "10/2017"}, {"body": "would helpful really debug start adding features might needed future local hack following comment line", "d": "10/2017"}, {"body": "good solution could also map code correspond line html file file", "d": "10/2017"}, {"body": "mapping code two files seems confusing sourcemapexplorer issue file issue kara could fix since familiar code think option disable source map generation templates useful debugging convinced otherwise debugging sourcemapexplorer experience great source maps track problem paths separate issue mon oct tobias bosch notifications githubcom wrote good solution could also map code correspond line html file ngfactoryts file receiving authored thread reply email directly view github mute thread", "d": "10/2017"}, {"body": "soon inline generated code file would wo nt files anymore would attribute generated code", "d": "10/2017"}, {"body": "tbosch fair point however sourcemapexplorer essential tool debugging size regressions breaking acceptable verified suggested patch works ca nt test mess nodeemitterjs suggested tried commenting lines resulted internal errors thrown also keep mind debugging issues use useful debug raw factories without source maps source maps hand written code", "d": "10/2017"}, {"body": "igorminar specific thought broke preliminary investigation shows broken point switched transform based compiler fairly early time frame version seeing expect", "d": "10/2017"}, {"body": "chuckjaz last time know worked fine nt discover problem recently source maps messed reasons related packaging resolved tried upgrade discovered source maps longer worked sourcemapexplorer template source maps feature", "d": "10/2017"}, {"body": "igorminar fact paths included html resolving path done line updates location first source file file ignores files like files added source map path getting lost bug source maps producing mapping blank url pr shortly fix edit regions factory file related seem parts determined writing program used source explorer algorithm map every character file produces index back original file simply disable angular source maps files let typescript produce source map file typescript could use code generated transformer pipeline synthetic nodes reference source code source code original template map size regression analysis recommend producing source maps producing source map files contain would increase source map size already large instance simple example already megs source maps addition mapping would useful size regression analysis b size regression analysis would accurate analyze generated file contributed bundle instead original source maps produced typescript incompletely map generated back producing misleading results producing source maps intended used size regressions instead debugging option added would skip source maps typescriptngc action items pr fix bug source map production fixed release pr ready tonight speak hans fixing path additional files source map hold release nt believe need producing size regression source maps change nt require changes angular nontrivial implementation probably days produce accurate analysis note demonstrated identity source maps good solution nt produce correct results confuse stream tools removing source maps tried requires modifications assumes asked source file produced", "d": "10/2017"}, {"body": "pr chuck mentioned", "d": "10/2017"}, {"body": "thanks chuck insightful explains quite bit sounds like option dealing undefined regions make possible cli disable tsc source maps still producing final bundle source maps map back tsc output right hans ok works ill fine solution fri oct tobias bosch notifications githubcom wrote pr chuck mentioned receiving mentioned reply email directly view github mute thread", "d": "10/2017"}, {"body": "igorminar currently hans discussing options agree source maps produced sufficient solution come clear undefined coming something downstream tool chain related source maps produced template compiler example following text form main bundle marked undefined section investigate coming currently verifying correct source maps produced development mode", "d": "10/2017"}, {"body": "core cli source maps look different useful", "d": "10/2017"}, {"body": "igorminar investigated hansl found issue addressed", "d": "10/2017"}, {"body": "closing issue prs fix master cli devkit", "d": "10/2017"}, {"body": "nice work thanks getting done test fixes tomorrow tue oct pm hans notifications githubcom wrote closing issue prs angulardevkit angularangularcli fix master cli devkit receiving mentioned reply email directly view github mute thread", "d": "10/2017"}, {"body": "might also good idea add valid commitmessage scope contributingmd also intentionally included tests run edit alxhub explained run node browser", "d": "10/2017"}, {"body": "mention call issue appear problem always set control right also said happens control untouched wrong actually seems happen control value called regardless control touchedpristine control value called control displays correctly", "d": "10/2017"}, {"body": "hi currently process moving docs samples align cli work done hopeful method localization docs wanted hold cli alignment wasted efforts", "d": "10/2017"}, {"body": "work bug", "d": "10/2017"}, {"body": "gbrmachado sure give try aware need fix soon might reassign", "d": "10/2017"}, {"body": "tbosch still repro", "d": "10/2017"}, {"body": "nope repro based internal error filtering works correctly endusers already", "d": "10/2017"}, {"body": "without investigating case specifically could wrong looks like dupe", "d": "10/2017"}, {"body": "yes agree", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "stephenfluin option looks good yes", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "issue implementation", "d": "10/2017"}, {"body": "duplicate question", "d": "10/2017"}, {"body": "another thing bothers create dynamically components like alert boxes modals ngafterviewinit like ngafterviewinit let lt const alertboxfactory thisfactoryresolvecomponentfactory alertboxcomponent const componentref thiscontaineralertboxcreatecomponent alertboxfactory settimeout z gt zinstancetitle componentref componentrefinstancetheinstance componentref componentrefinstancebuttonemmitersubscribe x gt consolelog x got change detection error way get rid detach alertbox change detection implement", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "yes nt sure place issue still nt strange components fixed regardless child components easy move things around guess want push outside limits framework", "d": "10/2017"}, {"body": "javascript easy move div siblings another place html philosophy angular look components like extension html like tags functionality would minus easy thing html performed components", "d": "10/2017"}, {"body": "mindarelus probably still nobody understands want explanation enough clear", "d": "10/2017"}, {"body": "relates request counterpart", "d": "10/2017"}, {"body": "may add available formats extra locale data files follow guide use correct format", "d": "10/2017"}, {"body": "immutable methods would sideeffect design duplicate documentation problem tracked thread", "d": "10/2017"}, {"body": "trotyl good way delete", "d": "10/2017"}, {"body": "need assign new like url method", "d": "10/2017"}, {"body": "trotyl thanks works code", "d": "10/2017"}, {"body": "duplicate ps former name", "d": "10/2017"}, {"body": "plan support", "d": "10/2017"}, {"body": "try forloop native javascript almost language clearly wo nt work design work", "d": "10/2017"}, {"body": "trotyl makes sense reason many people different expectations html syntax", "d": "10/2017"}, {"body": "duplicate closed anyway", "d": "10/2017"}, {"body": "cache add argument way cache top level lives calls called", "d": "10/2017"}, {"body": "think priority low preventing certain user errors implementation non trivial needs thought performance code size aspects", "d": "10/2017"}, {"body": "callback executed root zone try using", "d": "10/2017"}, {"body": "thank alexzuza worked expected behavior close issue", "d": "10/2017"}, {"body": "quick look seems adds script page executes callback eventually executes callback since added script run outside angular zone callback alexzuza said need enter angular zone change notify changedetector eg", "d": "10/2017"}, {"body": "idea got created apologies", "d": "10/2017"}, {"body": "never mind silly false", "d": "10/2017"}, {"body": "may bug rxjs pin version works would like notice hansl angularcli new applications rxjs would use rxjs released ago wo nt work check please", "d": "10/2017"}, {"body": "close issue create new suggestion pint fix problems", "d": "10/2017"}, {"body": "actually code rule input output selector written template another implement use namespace component namespace component renamed want see many people requirement feature", "d": "10/2017"}, {"body": "feature introduced edit fix introduced showing warning existing bug going turn warning error", "d": "10/2017"}, {"body": "thanks clarification", "d": "10/2017"}, {"body": "igorminar time angular ci failing old chrome version supported protractor chrome driver removing download script also seemed like would help ci startup times changed use latest stable travis remember check version pinning time nt foresee problem going back previous script another option use instead would also permit pinning chrome pinning version puppeteer would carried nodemodules cache installed chrome accessed via", "d": "10/2017"}, {"body": "several downsides using puppeteer chrome version info buried deep logs packagejson package installing chrome locally dev machines updating node dependencies without much care rev puppeteer could bring different version chrome resulting unexplainable errors installing browser travis takes seconds essentially downloadunzip time significant use traviscircleci cache reasons leaning towards using old set scripts", "d": "10/2017"}, {"body": "installation directory also cached travis nt even download smiley", "d": "10/2017"}, {"body": "think revert", "d": "10/2017"}, {"body": "see", "d": "10/2017"}, {"body": "hi pdf version doc questions please use stackoverflow described", "d": "10/2017"}, {"body": "alxhub could check", "d": "10/2017"}, {"body": "meaning install deprecated package angularplatformserver work break correct expected remove dependency users still use deprecated feature deprecation policy prevents us breaking users dependency removed retired altogether angular later also getting bigger build size nt case thankfully installed increase size build never import client application bundle size wo nt affected presence", "d": "10/2017"}, {"body": "apis deprecation policy provide two major version deprecation stage apis nt", "d": "10/2017"}, {"body": "hi link plunkr online demo matsko known issue", "d": "10/2017"}, {"body": "added plunkr manekinekko hope sufficient", "d": "10/2017"}, {"body": "thank bringing get fix shortly", "d": "10/2017"}, {"body": "working trigger ngifanimation transition enter leave query animatechild trigger easeinout transition gt time binding value changes template simply use", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "yes duplicate", "d": "10/2017"}, {"body": "matches toplevel child nodes working intended", "d": "10/2017"}, {"body": "maybe resolve issue see", "d": "10/2017"}, {"body": "many thanks worked", "d": "10/2017"}, {"body": "open would call change path like option angular use instead tsconfigaotts", "d": "10/2017"}, {"body": "alexzuza thanks filenames kept inline aot docs trick outdir must missed change thanks", "d": "10/2017"}, {"body": "hello need reproduction could create branch github reproduces issue eg ios simulator", "d": "10/2017"}, {"body": "route looks like fragment could format loremrouteapp amp amp read like", "d": "10/2017"}, {"body": "seems limitation still present latest version wardbell ideas available work arounds", "d": "10/2017"}, {"body": "btw using lastest version retrieve list heroes saved database even though followed exactly described tutorial downgrade version onweb example fixes", "d": "10/2017"}, {"body": "use latest version need change occurrences turn data encapsulation relevant issue", "d": "10/2017"}, {"body": "contacted browserstack", "d": "10/2017"}, {"body": "manish jawa browserstack issue resolved please confirm", "d": "10/2017"}, {"body": "related", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "following changes need added compiler validates modules compile generating typechecking implied factory files however means need able find referenced css files since css files generated means need know addition improved metadata validation well reports invalid since intended used decorator adding comment silences error making changes complete fix uncovered bug fixes", "d": "10/2017"}, {"body": "thing angular compiles expressions part templates components also planning supporting use case relatively simple write plain javascript typerscript instead", "d": "10/2017"}, {"body": "one could argue relatively simple accurate know access directives pipes selector currently loaded relevant ngmodule familiar parse evaluation pattern template expressions even manually recreating evaluating expression abstract syntax tree define given context far trivial without working knowledge parser visitors accessible functionality intention expose template parser evaluator guess documentation would moot point thank time sorry trouble", "d": "10/2017"}, {"body": "hello would great provided reproduction issue", "d": "10/2017"}, {"body": "alexzuza created small repo reproduction herethis kind issue ca nt reproduced via plunkr stackblitz", "d": "10/2017"}, {"body": "probably duplicate", "d": "10/2017"}, {"body": "hello could nt reproduce bug ran example says files end correctly folder difference though ngc creates expected change angular ie wo nt generate factories inplace rather also put", "d": "10/2017"}, {"body": "tbosch hi thanks reply ngc creates distsrc distnodemodules talking way make work ng", "d": "10/2017"}, {"body": "either set would generate files things eg angularmaterial set would emit files place ones ones behavior emitting generated files always inplace even specified bug", "d": "10/2017"}, {"body": "closing works expected", "d": "10/2017"}, {"body": "actually reopening track document", "d": "10/2017"}, {"body": "could make minimal reproduction either plunkr stack blitz", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "sounds like versioning issue include version closure compiler repro check versioning used including prior commits using angular assuming ready upgrade yet ought work unless missing testing", "d": "10/2017"}, {"body": "closing please reopen issue still exists", "d": "10/2017"}, {"body": "tbosch guess indeed angular compiler bug problem typescript abstract method type declaration output applying remains like normal method source result tsc result ngc using result ngc using correct behavior violating typescript semantics relates duplication", "d": "10/2017"}, {"body": "okey user method duplication nodemodules angularcore angularcorecorejs version es standards nt support methods overload duplication reproduce steps npm angularcore go nodemodules angularcore angularcorecorejs find class injector", "d": "10/2017"}, {"body": "actually fixed angular via change tsickle part tsickle however tsickle upgraded typescript would need create patch release tsickle used angular", "d": "10/2017"}, {"body": "bzenkosergey work using closure though please follow alexeagle advice", "d": "10/2017"}, {"body": "thanks", "d": "10/2017"}, {"body": "use ie unfortunately work writable properties annoying deal forms perfectly valid c example ca nt something like", "d": "10/2017"}, {"body": "understanding service data immutable create copy data component changeuse", "d": "10/2017"}, {"body": "afaik always behavior could create reproduction old version angular worked nt work anymore", "d": "10/2017"}, {"body": "please change angular version indexhtml notice change", "d": "10/2017"}, {"body": "exact example demonstrated comment answered already", "d": "10/2017"}, {"body": "thank closing", "d": "10/2017"}, {"body": "http deprecated see", "d": "10/2017"}, {"body": "expect import service root app component call import servicename dir every component wish use sorry never going happen nt angular js nt import service js know service trying use", "d": "10/2017"}, {"body": "benefit adding service appmodulets vs importing component needs access service", "d": "10/2017"}, {"body": "dependency injection means always get instance injected class still import files part language suggest research terms inversion control dependency injection", "d": "10/2017"}, {"body": "note onlymain reason import component used token tells injector need essence configuring injector eg array teach create instances things need injectables identify sounds something like high level injector language english dear injector someone eg component service asks injectable thing identified please pass note strings actuall anything injector language english dear injector someone asks injectable thing identified please execute function pass result although still string could anything injector language english dear injector someone asks injectable thing identified please use create instance pass injector language english dear injector someone asks injectable thing identified please use create instance pass note identifier class string since common usecase shorthand following equivalent one thing note injector angular app multiple injectors different story create injectable thing first time requested pass object whomever asks two different components request thing get instance used string identifier defining provider would nt inject class components want ask instance injectable example angularjs injector works ideal prevent conflicts eg two libraries defining injectable string identifier using class identifier ensure identifier unique finally another reason import service class use type annotations ie let typescript know type argument typecheck code provide intellisense etc leaving open docs team decide whether room making things clear guide", "d": "10/2017"}, {"body": "thank explanations helpful", "d": "10/2017"}, {"body": "readonly differ boolean readonly valuediffer observable fields derived trivially adding eg rollback options onlyself boolean emitevent boolean method unneeded call know extra api would make things slightly easier dev use core api aspect adding extra size bundle reason aside think reasonable ask currently good ways remember value changed current methods include holding mirrored object formgroupcontrol original values lookup extending formcontrol", "d": "10/2017"}, {"body": "know extra api would make things slightly easier dev use core api aspect adding extra size bundle reason indeed extra api would make things easier developers thought angular created reason agree method easily replaced existing dose make much difference properties valuable solution requires checks bindings requires bindings value differ calculated setting new value return looks elegant form larger unnecessary checks executed app slower instead slightly larger bundle guessing end slightly slower app current methods include holding mirrored object formgroupcontrol original values lookup extending formcontrol yes achieve behavior project extended formcontrol formgroup formarray end classes calling private methods base class looks good", "d": "10/2017"}, {"body": "form larger unnecessary checks executed app slower instead slightly larger bundle guessing end slightly slower app disagree logical comparison fast operation unless form several million nt think see slow downs also proposed fields actually saving perf people nt use since wont need comparison using one thing missed commit void also think unneeded original value never change need update value use formcontrol value send wherever need go readonly cant changed anyway", "d": "10/2017"}, {"body": "implemented similar functionality instead extending formcontrol class used shadow deep copy model component form developer usability point view good strategy could create new directive adds functionality wanted formcontrol allowing developer decide fields need rollback feature directive applied formgroup formarray would apply feature contained formcontrols", "d": "10/2017"}, {"body": "disagree logical comparison fast operation unless form several million nt think see slow downs yes agree logical comparison fast point unnecessary check template forcing developers write uglier code form controls may looks bad controls becomes ugly course personal opinion said logical comparison fast even one wo nt use wo nt notice difference performance one thing missed commit void also think unneeded original value never change need update value use formcontrol value send wherever need go original readonly cant changed anyway idea behind handle situations like user submit form request send server ok response user still see form make another changes original values ones returned response others depends business case developer able mark new original values maybe misleading name maybe instead field called something similar point give user experience change something saved change something maybe filed twice experience easily achieved adding class element changing backgroundcolor orange situation time submitting form server returns conflict error error may means optimistic locking exception user see modal text inconsistent data buttons cancel refresh data refresh data button refetch data update form controls new values method called right enable user experience without wo nt possible form updated server response controls always differ class differ user wo nt convinced everything ok", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "already posted stackoverflow using tag angular", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "closing duplicate thanks trotyl", "d": "10/2017"}, {"body": "nt shift template container simply displays therefore working intended", "d": "10/2017"}, {"body": "toxicable thanks comment", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "essentially duplicate fixed temporarily gist issue lock locally ci downloaded zips code works fine leave version unrestricted plnkrs planned change plnkr generation version ranges used everywhere including plnkrs way sure version use test ci also used plnkrs eventually course update version latest version update examples nt really affect users much long working inmemory api", "d": "10/2017"}, {"body": "dupe", "d": "10/2017"}, {"body": "closing dupe", "d": "10/2017"}, {"body": "sorry reported issues require plunker stack blitz reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue stack blitz", "d": "10/2017"}, {"body": "condition routed component wo nt perform change detection navigated nonangular zones namely zone aware wo nt change current zone minimal reproduction found seems expected behavior", "d": "10/2017"}, {"body": "would use plugins interaction callback like google js api case need load google js api inside make work", "d": "10/2017"}, {"body": "executes fn function synchronously within angular zone returns value returned function running functions via run allows reenter angular zone task executed outside angular zone typically started via runoutsideangular", "d": "10/2017"}, {"body": "tl dr need bootstrap angularjs asynchronously give time providers initialized therefore synchronously bootstrapping angularjs constructor module probably best idea able workaround easily left detailed answer stackoverflow closing since everything working expected afaict synchronously bootstrapping module constructor something officially recommend document option clear saying lazyloading angularjs avoided anything make sure point time angular parts guaranteed place", "d": "10/2017"}, {"body": "add target tag underneath tag", "d": "10/2017"}, {"body": "hello like alandroid said need add xlf file translation error message tells missing translation", "d": "10/2017"}, {"body": "read documentation one time clearly spelled missed sorry wasted time thank prompt response keep awesome work", "d": "10/2017"}, {"body": "related", "d": "10/2017"}, {"body": "need offer animation support work", "d": "10/2017"}, {"body": "matsko moving items adding item beginning observable list assume issue caused angulars trackby seems insert new element dom moves contents instead inserting top", "d": "10/2017"}, {"body": "create local variable work properties component works regarding second issue try adding statement docs", "d": "10/2017"}, {"body": "look simple demo directive manipulates dom inserting removing nodes key understand node removing nodes first inserting change detection cd cycle loosing focus course entering char input invokes new cd cycle also add unique property input tag produce unique inputs", "d": "10/2017"}, {"body": "apart minor details really work outofbox like vue trackby hack choose array objects array primitives nt understand bug live example angular live example vue hyperhtml", "d": "10/2017"}, {"body": "discussed angular uses trackby reference keyed implementation default valid consistency behavior user manually use trackby index nonkeyed want fact keyed tracking considered correct implementation nonkeyed one usually called naive implementation likely could cause unexpected behavior many cases indeed frameworks using nonkeyed implementation default design choice angular decided use please checkout js web frameworks benchmark keyed vs nonkeyed index key antipattern information", "d": "10/2017"}, {"body": "trotyl thanks lot details actionable item done note docs tech details provided please shall close issue", "d": "10/2017"}, {"body": "duplicate since still open closed anyway", "d": "10/2017"}, {"body": "relates likely reversed user journey", "d": "10/2017"}, {"body": "noting version since specific featureapi added indeed useful imo concern would consistent really hard maintain hand could somehow automate least appropriate checks place means add feature automating little involved adding extra annotation", "d": "10/2017"}, {"body": "since input elements part referenced form indeed true add template debug see control added form ngmodel directive looking adorned host provider directive provides provider know two options solve manually add ngmodel parent ngform subcomponentts parentcomponentts read answer add viewproviders child component", "d": "10/2017"}, {"body": "wow thanks guess assuming much would use html representation form basis since statements defined template sorry noise", "d": "10/2017"}, {"body": "nt see issue remember debug mode cd run twice prod mode see calls", "d": "10/2017"}, {"body": "numbers mentioned taken plunker production mode puzzled calls compare id list really expected would consider following outcome run times entire set options data refresh skipping successful hits nonissue initialization view comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id undefined comparing id id null comparing id id null comparing id id null comparing id id null comparing id id null comparing id id comparing id id comparing id id comparing id id comparing id id gt true refresh data comparing id id comparing id id comparing id id comparing id id gt true comparing id id comparing id id comparing id id gt true comparing id id comparing id id gt true comparing id id gt true comparing id id comparing id id comparing id id comparing id id comparing id id comparing id id comparing id id comparing id id comparing id id comparing id id comparing id id comparing id id comparing id id comparing id id comparing id id gt true", "d": "10/2017"}, {"body": "looks like contains path segments eg problem occurs nt matter many", "d": "10/2017"}, {"body": "order properties matter kind class cleared requirement order class members favor code style indeed tslint rule following tutorial mean need use exact format example use spaces tabs single quote double quote without semicolon according personal preference", "d": "10/2017"}, {"body": "order important file heroes heroes go angular clear oct pm trotyl yu notifications githubcom wrote order properties matter kind class cleared requirement receiving authored thread reply email directly view github mute thread", "d": "10/2017"}, {"body": "create public property angular tutorial assume already javascript background javascript tutorial", "d": "10/2017"}, {"body": "deep javascript background fine nt want accept imho could made clear statement supposed go oct trotyl yu notifications githubcom wrote create public property angular tutorial assume already javascript background javascript tutorial receiving authored thread reply email directly view github mute thread", "d": "10/2017"}, {"body": "hey dogeared thanks bringing agree clarifying help improve learning experience make sure pass along right person docs team", "d": "10/2017"}, {"body": "thanks places tutorial tells put something new even though order isnt necessarily important makes clear micah silverman csm phone coauthor mastering enterprise javabeans debugging twice hard writing code first place therefore write code cleverly possible definition smart enough debug brian kernighan image namez mon oct kapunahele wong notifications githubcom wrote hey dogeared thanks bringing agree clarifying help improve learning experience make sure pass along right person docs team receiving mentioned reply email directly view github mute thread", "d": "10/2017"}, {"body": "yeah know exactly mean feel free add notice pr tag stumbled like try fix see nt done whole sweep eyes better thanks catching", "d": "10/2017"}, {"body": "would nice somebody put pr together", "d": "10/2017"}, {"body": "er", "d": "10/2017"}, {"body": "tbosch chuckjaz review", "d": "10/2017"}, {"body": "sandangel looking debug tomorrow meantime setup demo", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "ping matsko", "d": "10/2017"}, {"body": "hey sandangel luck reproducing problem using instructions provided clicked table graph jumped back forth pages different speeds luck", "d": "10/2017"}, {"body": "guess try", "d": "10/2017"}, {"body": "made screen record please take look", "d": "10/2017"}, {"body": "animation gif", "d": "10/2017"}, {"body": "noticed happened jump back table try jumping back forth several times click graph continue jumping get error hope fix release matsko", "d": "10/2017"}, {"body": "great ca nt wait commit merged", "d": "10/2017"}, {"body": "want able use route parameter playerid fragment info nt think angular prepared scenario", "d": "10/2017"}, {"body": "two things would nice automatically setup virtue calling roughly injectable attempt inject see present meat logic shared current implementation", "d": "10/2017"}, {"body": "needs two injectors available able use today workaround something like wiring automatically possible concerned people nt want happen maybe make configurable wdyt rkirov petebacondarwin", "d": "10/2017"}, {"body": "link builder fine links wrong fixed part", "d": "10/2017"}, {"body": "thank", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "ericmartinezr already raised issue stackoverflow could please help resolve issue", "d": "10/2017"}, {"body": "related setting set false error disappear keeping bug open chuckjaz decide whether works intended", "d": "10/2017"}, {"body": "error generic promise types symbolic error message could resolve type line character context typename promise", "d": "10/2017"}, {"body": "tbosch intended flushed intended compile valid arrow functions laughing joking sorry smile", "d": "10/2017"}, {"body": "intended behavior request compiler reporting metadata written would report error used decorator case method looks like macro function usable inside decorator routermoduleforroot contains error reported used without error recorded metadata long one tries use decorator error ever reported purpose catch errors sneak metadata would normally reported metadata used conservative reporting error something looks like could used metadata method obviously intended use decorator error spurious compiler nt enough information decide two options first change nt look like macro function bit awkward introduces variable reason probably eventually refactored back remove apparent unnecessary recommended approach add function comment error still recorded metadata longer report marks method intended runtime eg dynamic behavior static compiler evaluation anywhere method comment probably included end ts returns observable stream one unique number repeated subsequent calls nonce dynamic public static generatenonce observable return defer gt let guidresponse generation code return observableof guidresponse", "d": "10/2017"}, {"body": "debslord probably conditionally link inputs evaluation validations switch radio button one type cd runs enough refresh conditionally related validation second type see effect run second cd like", "d": "10/2017"}, {"body": "thanks reply mlcmlapis sorry sure understand mean example could get working thank", "d": "10/2017"}, {"body": "debslord try read cd topic first taken di constructor", "d": "10/2017"}, {"body": "thanks link mlcmlapis quick look first message able better look tried implementing detect changes call refresh button obviously would nt ideal production wanted see worked however nt make difference unless implemented wrong advice would much appreciated issue seems around ngif remove fields fine updated bug extra detail help explain issue better", "d": "10/2017"}, {"body": "wondering could angular throwing error using reactive forms bug letting kind codes run reason directive part reactiveformsmodule edit relates edit suggested seems formcontrolname defines input amp output directive used sure design", "d": "10/2017"}, {"body": "thanks trotyl updated plunkers reflect change removed ngmodel directive know suggestion nt fix update original issue required attribute updating controls hidden ngif still happening", "d": "10/2017"}, {"body": "works correctly reactive forms issue specific templatedriven ones", "d": "10/2017"}, {"body": "also time time integrate react components seems work fine angular cli tried new versions yet", "d": "10/2017"}, {"body": "hello could reopen issue cli repository see", "d": "10/2017"}, {"body": "ok add work queue thank elclanrs reporting", "d": "10/2017"}, {"body": "nt see ngfor rerendering typing chrome safari kind tool", "d": "10/2017"}, {"body": "wykks sorry used hostlistner cause digest cycle ngfor rerendering nt know root cause", "d": "10/2017"}, {"body": "seems safari bug reproduce plain html page contain inputs see closing angular related", "d": "10/2017"}, {"body": "tried safari version inputs amp checkboxes works fine please check plunkr seems like issue", "d": "10/2017"}, {"body": "think related safari thinking inputs actually username password combinations ie layout original template name saw safari profiler interpret results correctly would also explain example chandarsunderraj works fine look like repeated username password form", "d": "10/2017"}, {"body": "might possible problems might cause issue like", "d": "10/2017"}, {"body": "new compiler setting called see reveal error setting become default angular highly recommended nt turn angular break existing users ie behavior seeing exactly users saw angular works intended somehow forgot document keeping bug open track need document", "d": "10/2017"}, {"body": "oh bug right fixed via", "d": "10/2017"}, {"body": "flag available angular later also available", "d": "10/2017"}, {"body": "yes fri oct alan agius notifications githubcom wrote flag available angular later receiving commented reply email directly view github mute thread", "d": "10/2017"}, {"body": "first rollout document though see", "d": "10/2017"}, {"body": "wrong repo angular angularjs", "d": "10/2017"}, {"body": "even angularjs issue issue library using report bug trackerrepo", "d": "10/2017"}, {"body": "oh ok try forum thank", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "create issue repo", "d": "10/2017"}, {"body": "dup already pr fix", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "ericmartinezr thanks links gmattworld version libraries using could verify using versions bugs fixed", "d": "10/2017"}, {"body": "hello could create reproduction plunker see", "d": "10/2017"}, {"body": "tbosch hello example", "d": "10/2017"}, {"body": "duplicate see info fix asap", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "closing", "d": "10/2017"}, {"body": "way atm instructions building work though commands try issues run", "d": "10/2017"}, {"body": "hi tried yarn setuplocal got error find file directory c angulardocsangulardistpackagesdist tried also yarn setup got error eperm operation permitted symlink c angulardocsangularaiotoolsexamplessharednodemodules c angulardocsangularaiocontentexamplesajsquickreferencenodemodules error native objectfssymlinksync objectcreatesymlinksync c examplefoldersforeachexamplefolder c arrayforeach native exampleboilerplateadd c objectyargsusagecommand builder c objectselfruncommand c objectyargsselfparseargs c objectget argv c error command failed exit code error command failed exit code info visit documentation command", "d": "10/2017"}, {"body": "assumes run project root directory nt need needs create symlinks run administrator privileges windows", "d": "10/2017"}, {"body": "run yarn setup administrator one hour seems installation stuck yarn run yarn install freezelockfile amp amp yarn checkenv amp amp yarn boilerplate remove warning jshashes engine browser appears invalid warning angularcdk incorrect peer dependency angularcore warning angularcdk incorrect peer dependency angularcommon warning angularmaterial incorrect peer dependency angularcore warning angularmaterial incorrect peer dependency angularcommon warning angularserviceworker incorrect peer dependency angularcore gt lt warning ngpwatools incorrect peer dependency angularanimations warning ngpwatools incorrect peer dependency angularcommon warning ngpwatools incorrect peer dependency angularcompiler warning ngpwatools incorrect peer dependency angularcompilercli warning ngpwatools incorrect peer dependency angularcore warning ngpwatools incorrect peer dependency angular warning ngpwatools incorrect peer dependency angularplatformbrowser warning ngpwatools incorrect peer dependency angularplatformbrowserdynamic warning ngpwatools incorrect peer dependency angularplatformserver yarn aiousenpm amp amp yarn exampleusenpm warning jshashes engine browser appears invalid warning angularcdk incorrect peer dependency angularcore warning angularcdk incorrect peer dependency angularcommon warning angularmaterial incorrect peer dependency angularcore warning angularmaterial incorrect peer dependency angularcommon warning angularserviceworker incorrect peer dependency angularcore gt lt warning ngpwatools incorrect peer dependency angularanimations warning ngpwatools incorrect peer dependency angularcommon warning ngpwatools incorrect peer dependency angularcompiler warning ngpwatools incorrect peer dependency angularcompilercli warning ngpwatools incorrect peer dependency angularcore warning ngpwatools incorrect peer dependency angular warning ngpwatools incorrect peer dependency angularplatformbrowser warning ngpwatools incorrect peer dependency angularplatformbrowserdynamic warning ngpwatools incorrect peer dependency angularplatformserver warning ngpwatools incorrect peer dependency angularrouter warning ngtoolswebpack unmet peer dependency enhancedresolve warning codelyzer incorrect peer dependency angularcompiler gt lt warning codelyzer incorrect peer dependency angularcore gt lt warning ngtoolswebpack unmet peer dependency webpack warning htmlwebpackplugin unmet peer dependency webpack warning licensewebpackplugin incorrect peer dependency webpacksources gt warning extracttextwebpackplugin unmet peer dependency webpack", "d": "10/2017"}, {"body": "opened another terminal tried yarn command could maybe write orders actions preform starting cloning repo going inside aio folder running yarn admin etc", "d": "10/2017"}, {"body": "hey octodevelopers instructions recently wrote people new contributing docs might beyond worth checking angulario local setup follow steps setting repo locally first time terminal open new terminal tab window directory new tab chrome go", "d": "10/2017"}, {"body": "kapunahelewong thanks opened new folder tried guide step seems stuck c yarn setup yarn run yarn install freezelockfile amp amp yarn checkenv amp amp yarn boilerplate remove warning jshashes engine browser appears invalid warning angularcdk incorrect peer dependency angularcore warning angularcdk incorrect peer dependency angularcommon warning angularmaterial incorrect peer dependency angularcore warning angularmaterial incorrect peer dependency angularcommon warning angularserviceworker incorrect peer dependency angularcore gt lt warning ngpwatools incorrect peer dependency angularanimations warning ngpwatools incorrect peer dependency angularcommon warning ngpwatools incorrect peer dependency angularcompiler warning ngpwatools incorrect peer dependency angularcompilercli warning ngpwatools incorrect peer dependency angularcore warning ngpwatools incorrect peer dependency angular warning ngpwatools incorrect peer dependency angularplatformbrowser warning ngpwatools incorrect peer dependency angularplatformbrowserdynamic warning ngpwatools incorrect peer dependency angularplatformserver yarn aiousenpm amp amp yarn exampleusenpm warning jshashes engine browser appears invalid warning angularcdk incorrect peer dependency angularcore warning angularcdk incorrect peer dependency angularcommon warning angularmaterial incorrect peer dependency angularcore warning angularmaterial incorrect peer dependency angularcommon warning angularserviceworker incorrect peer dependency angularcore gt lt warning ngpwatools incorrect peer dependency angularanimations warning ngpwatools incorrect peer dependency angularcommon warning ngpwatools incorrect peer dependency angularcompiler warning ngpwatools incorrect peer dependency angularcompilercli warning ngpwatools incorrect peer dependency angularcore warning ngpwatools incorrect peer dependency angular warning ngpwatools incorrect peer dependency angularplatformbrowser warning ngpwatools incorrect peer dependency angularplatformbrowserdynamic warning ngpwatools incorrect peer dependency angularplatformserver warning ngpwatools incorrect peer dependency angularrouter warning ngtoolswebpack unmet peer dependency enhancedresolve warning codelyzer incorrect peer dependency angularcompiler gt lt warning codelyzer incorrect peer dependency angularcore gt lt warning ngtoolswebpack unmet peer dependency webpack warning htmlwebpackplugin unmet peer dependency webpack warning licensewebpackplugin incorrect peer dependency webpacksources gt warning extracttextwebpackplugin unmet peer dependency webpack idea", "d": "10/2017"}, {"body": "idea windows without issue", "d": "10/2017"}, {"body": "yeah sure either", "d": "10/2017"}, {"body": "versions node yarn npm installed updated recently node npm yarn", "d": "10/2017"}, {"body": "octodevelopers confident yarn work current file maybe nt work either said nt see errors printout provided warnings expected believe", "d": "10/2017"}, {"body": "octodevelopers node yarn npm addition petebacondarwin said think node version causes issue versions work though", "d": "10/2017"}, {"body": "ok changed everything like kapunahelewong versions tried yarn start got error error nodemodulescssloader sourcemap false importloaders nodemodulespostcssloader ident postcss nodemodulessassloaderlibloaderjs sourcemap false precision includepaths srcstylesscss module build failed error enoent file directory scandir c error native objectfsreaddirsync objectgetinstalledbinaries c foundbinarieslist c foundbinaries c objectmoduleexportsmissingbinary c moduleexports c object c modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object c srcstylesscss multi srcstylesscss webpack failed compile ideas", "d": "10/2017"}, {"body": "try", "d": "10/2017"}, {"body": "gkalpak everything kapunahelewong instructions cleaning environment worked node yarn npm hope could move network computer successfully think easier way host local angulario docs api tour heroes etc could appreciated could help many developers angular documentation online matter also site nice example angular developed high standarts website maybe angular release quick way angulario locally would released well thanks help", "d": "10/2017"}, {"body": "glad able get work case nt clear kapunahelewong instructions authors want write docs angulario eg api docs guides tutorials etc nt need steps local version docs need obviously ca nt skip steps one command build site one command serve step everything need directory nt want use local copy directory anywhere serve using static webserver sure much simpler make regarding tools versions see version using tting ci nt imply versions wo nt work nt tested specified accepted ranges property packagejson script runs commands checks environment based course requires node dependencies installed yet useful first crashes ideas could improve situation people want build docs please feel free share ideas even submit pr smiley closing since able run build successfully", "d": "10/2017"}, {"body": "dup", "d": "10/2017"}, {"body": "try using parenthesis", "d": "10/2017"}, {"body": "ericmartinezr tried sorry never imagined use parenthesis bad closing issue parenthesis solved problem thank", "d": "10/2017"}, {"body": "hi understand question could interceptor wrap implementation import angularcore import enterprisehttp yourentreprisehttp class myownhttp constructor private private enterprise enterprisehttp public post url string body interceptorfalse options requestoptionsargs observable interceptor return thisenterprise else return", "d": "10/2017"}, {"body": "yes way need wrap every methods define http could nt think something even simpler", "d": "10/2017"}, {"body": "methods get post delete head", "d": "10/2017"}, {"body": "developers would like bypass gt developers would like bypass", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "repo active long time sure happened cc foxandxss", "d": "10/2017"}, {"body": "ericmartinezr thanks nt find quick google search see updated year sure still current", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "ok please let know start accepting", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "makes much sense since uses existing token rather making new one also indicates value passed token value token", "d": "10/2017"}, {"body": "also indicates value passed token value token toxicable fact write passing two tokens classa classb see answer docs", "d": "10/2017"}, {"body": "sure since effectively pointing value token however specific statement token object used di yet behind scenes use look actual thing returned", "d": "10/2017"}, {"body": "agree toxicable line thinking plus would breaking change thnx suggestion going pass", "d": "10/2017"}, {"body": "since affect ci versions hardcoded maybe could enforce minimum version print warning user newer one possibly throw ci case cc igorminar", "d": "10/2017"}, {"body": "testify work w node", "d": "10/2017"}, {"body": "create pr print warning instead failing node version higher range specified realized exactly already nothing stopping using node except ca nt guarantee work although probably get warning message using unsupported version node evancarroll seeing something different eg script actually erroring instead printing warning message message discouraging giving impression work install supported version", "d": "10/2017"}, {"body": "closing since nt get feedback already works ie prints warning nt fail using newer node version", "d": "10/2017"}, {"body": "think still fails gkalpak yarn install yarn install node e processenvnpmexecpathindexof yarn throw new error please use yarn instead npm install dependencies see validating packagejson error angularsrcs engine node incompatible module expected version gt lt error found incompatible module info visit documentation command", "d": "10/2017"}, {"body": "oh see thought meant script would fail yarn", "d": "10/2017"}, {"body": "work around via", "d": "10/2017"}, {"body": "petebacondarwin run nt choose use flag tried nt work", "d": "10/2017"}, {"body": "good idea ever support latest versions node mean nt work latest version node nt plan call reason working bug even sure angular documented anywhere prefer require mean say angular tested node semantic place engine", "d": "10/2017"}, {"body": "dup", "d": "10/2017"}, {"body": "please report project", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "filtered also others", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "markperrybv nt mix template reactive based forms together especially could problem order instantiating template based form object", "d": "10/2017"}, {"body": "mixing template reactive forms together using reactive forms style forms project", "d": "10/2017"}, {"body": "markperrybv", "d": "10/2017"}, {"body": "ca nt comment reasoning styleguide authors provide thoughts find classes many situations suitable interfaces think styleguideadvice justified writeup became much longer intended hope appreciate reading first note styleguideexample gives example related dependency injection refer di first languages runtime equivalent interfaces like eg java common recommended practice define interface type via keyword refer injectiontarget side course prevent injectiontarget becoming dependent concrete implementation interface like mentioned typescript though interfaces runtime equivalent ca nt used angular look interface implementation type instead angular di based mapping object reference object reference b example function object get runtime importing class importing interface closest equivalent interfacebased di java classbased di typescript terms typetheory interfaces actually purely abstract classes anyway anybody correct wrong bottomline soon use class get referencable function use ditoken using classes instead interfaces right advice model types found classes also beneficial interfaces interfaces example create semiinstances interface type code using simple objectliteral notation fact completely distinct instances nt real link typelevel instancelevel runtime also comes price loose ability control instantiation single place code meaning central constructor hook place constructor initialization logic need code evolves requirements change know yagni btw ca nt declare private properties interface objectliteralinstances completely distinct objects runtime sharing prototype introducing gettersetterlogic common instances type later eg via nt possible either joined project object literals working isodatestring code later found would better guarantee instance holds date object internally instances completely distinct objects way modify every statement instances created date property written even problem since nt typescript time javascript felt lost oversight instances created date property accessed said know yagni btw typescript would helped us lot given however lesson learned essentially missed welldefined constructor setter logic nt consistent object shapes used classesconstructor functions instead objectliterals interfaces first place based experience consider typescript interfaces objectliterals good fit parameter objects actual value types less beneficial model types appglobal application state imho even used pass jsondeserialized plain objects proper class constructor using get proper prototype chain welldefined instances seems like instantiating instance twice see still faster setting prototype manually already existing instance yet would nt dare say way go everyone sometimes exceptions rule still make sense nevertheless nt share general criticism classes vs objectliterals terms performance unless need create real mass tens thousands objects speed seldom real matter fwiw least clientside javascript even grids thousands potential items still almost always want implement kind lazy loading reason loadtimes network latency scalability limited display size etc due js speed often load instantiate batch hundred items performance issues nt significant constructor initializes class properties instantiation time js engines apply hidden class optimization optimize speed object creation terms memoryefficiency classes superior soon model needs methods given think fair propose classes bestpractice styleguide could mitigate factory pattern interfaces guarantee factory always used create instance enforced actual type definition factories would add bloat", "d": "10/2017"}, {"body": "sometimes need definition server data models interface perfectly serve purpose without introducing additional overhead final output interfaces completely removed compilation opinions choose one interface class based different requirements", "d": "10/2017"}, {"body": "opinions choose one interface class based different requirements choosing best fits requirements always best thing term consider styleguide implies exactly", "d": "10/2017"}, {"body": "situations using interfaces objects works much better using classes reason use classes object models apps universal state transfer classes serialised objects automatically instantiated json back class therefore requires work dev aswell code using object interface requires extra work runtime overhead firebase similar reasons use classes firebase infact try use class firebase throw", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "closing duplicate", "d": "10/2017"}, {"body": "angular similar issue found saving source code url automatically changed deep url example router html home creditcard ng serve go works fine modifyupdate source code ts file example browser automatically reload page url changed error occurs error stack environment chrome angular windows professional expected behavior keep url reloading", "d": "10/2017"}, {"body": "environment angular angularcli typescript use aot build well", "d": "10/2017"}, {"body": "code used embed uservoice widget window uservoice push embed uvembedded mode smartvote height width", "d": "10/2017"}, {"body": "sorry reported issues require plunker stackblitz github repo etc reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "10/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2017"}, {"body": "hey samatallegion thanks bringing make sure share docs team address", "d": "10/2017"}, {"body": "karthickvaradharajan add details repro", "d": "10/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "10/2017"}, {"body": "reason works href supported browser angular changes router state listens hashchange events case user types hash manually hand routerlink used angular directly modify router state use historypushstate modify browser url fire hashchange event also documented behavior specification mdn web docs nt think angular issue expected behavior historypushstate function possible workaround use case setting locationhash fire hashchange event properly instead using routerlink", "d": "10/2017"}, {"body": "mgol thanks bringing issue check engineering make updates soon confirmation", "d": "10/2017"}, {"body": "intended work done bring functionality found core repo recent note bringing service worker ongoing moment", "d": "10/2017"}, {"body": "thanks quick response", "d": "10/2017"}, {"body": "funny open link get error", "d": "10/2017"}, {"body": "already reported", "d": "10/2017"}, {"body": "looks like fully working version project found able fix issue thanks ericmartinezr issues search add function well", "d": "10/2017"}, {"body": "means", "d": "10/2017"}, {"body": "term syntax sugar often use describing certain structure language say writing something prettier way easier read angular offers syntax sugar write instead enough say sugared syntax compiler goes angular code desugar first order understand desugaring inverse process sugaring code means revert pretty syntax back verbose one although human easier read sugared code machines prefer desugared one order understand easier said come wrong place ask question issues reporting bugs requesting features angular documentation however might mean docs team include link word desugars wiki article write short explanation term agree confusion familiar term syntax sugar", "d": "10/2017"}, {"body": "thanks lazarljubenovic assigning docs team see clarify bit", "d": "10/2017"}, {"body": "lazarljubenovic also real meaning understanding chemical world decompose complex substance simpler substances", "d": "10/2017"}, {"body": "please report angularcli related issues repo plus simple search repo issue already reported", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "nt want declare module want import please read documentation angulario", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "ok", "d": "10/2017"}, {"body": "order able downgrade component need add array created part another angular component template use directives entry components sure different issue related seems need use component possibly empty template", "d": "10/2017"}, {"body": "nt think build run windows anyway many things use shell scripts windowscompatible possible switch bazel", "d": "10/2017"}, {"body": "built windows without problems using symlink thing add", "d": "10/2017"}, {"body": "interesting let try", "d": "10/2017"}, {"body": "longstanding pr updating symlinks based issues like personal experiences back seems currently straight forward build angular windows maybe things changed lately would amazingly awesome smiley", "d": "10/2017"}, {"body": "ahah good catch gkalpak create new pr close issue favor", "d": "10/2017"}, {"body": "think people using build based use version angular compiler supports metadata version angular team increased metadata version capturing type aliases metadata files compiler switched transformer based compiler moment compiler host located folder implementation nt function like would avoid publishing library npm angular released", "d": "10/2017"}, {"body": "yes think alexzuza right libraries compiled angular compatible angular nt want ship useless metadata libraries done app compiler confirm tbosch", "d": "10/2017"}, {"body": "hi alexzuza ocombe thank clarification understand like nt written somewhere breaking change thanks", "d": "10/2017"}, {"body": "probably mistake changelog", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "actually think since meta service angular think actual bug report us toxicable", "d": "10/2017"}, {"body": "go route see meta tags page go route see meta tags route followed css styles followed meta tags page currently indicates issue caused meta service used rather bug service bug meta service verify plunkrstack blitz would needed", "d": "10/2017"}, {"body": "hard plunkr universal app unfortunately", "d": "10/2017"}, {"body": "server side client side assume meaning independently side note stack blitz actually working supporting node apps sometime next year", "d": "10/2017"}, {"body": "related try remove", "d": "10/2017"}, {"body": "agrumas think unlikely meta service almost directly editing head tags dom never interacting views issue linked resides", "d": "10/2017"}, {"body": "toxicable followed online examples meta service code straightforward enough cause issue even tried remove tag force creation get rid twice occurring meta tags nt work never used plunkr stackblitz try give shot said work issue wwwthepixelatedplanetcom provide cover", "d": "10/2017"}, {"body": "toxicable followed online examples meta service code straightforward enough cause issue even tried remove tag force creation get rid twice occurring meta tags nt work never used plunkr stackblitz try give shot said see issue wwwthepixelatedplanetcom provide code", "d": "10/2017"}, {"body": "seeing result linked website reasonable enough us action issue see source code identify problem app angular require plunkr ot stack blitz many moving parts full application", "d": "10/2017"}, {"body": "toxicable platforms nt support universal checked shows server rendered html give simplest repro githubcom repo hosted somewhere works", "d": "10/2017"}, {"body": "toxicable ocombe agrumas super simple universal app repro code demo pages super empty try viewing source one repeat meta tags meta tags og title twitter title repeats first value page issues server side rendering necessarily sure else convince guys issue hoped something app seems legit bug", "d": "10/2017"}, {"body": "tldr resolved workaround bug prerender works well went ahead investigated found problem server side rendered view indexhtml one used template engine already tags approot meta tags explicitly indexhtml happens element created head region workaround change prerender code remove extra meta tags follows also repros renderer meta service issue deeper issue look htmlreplace part workaround rendermodulefactory appservermodulengfactory document index url extraproviders providemodulemap lazymodulemap html gt writefilesync join browser indexhtml htmlreplace new regexp g replace new regexp g replace new regexp g", "d": "10/2017"}, {"body": "parkermike reasons possible use metadata even multiple values latest angular since directive use syntax used example", "d": "10/2017"}, {"body": "mlcmlapis yeah thank aware property existence using directives nt find way use example given motivation section", "d": "10/2017"}, {"body": "parkermike hmm always use something like", "d": "10/2017"}, {"body": "mlcmlapis thanks several tabs like would engine know pass", "d": "10/2017"}, {"body": "parkermike probably need rethink structure code part change logic guess type shared service situation probably common pattern md also recommended solution nt use md yet", "d": "10/2017"}, {"body": "mlcmlapis asked stackoverflow seen nobody answer asked since nt find proper way thought would useful feature thought shared service way subscribed service thus updated together regardless tab selected example", "d": "10/2017"}, {"body": "parkermike probably switch md gitter looked source reason nt", "d": "10/2017"}, {"body": "mlcmlapis new version deprecated used first example example several tabs see used opened request main repository since believe something useful also scenarios md tabs", "d": "10/2017"}, {"body": "think need implement something create query list directives find actual directive implementation look like created example viewchildren refactualizable actualizables querylist activatetab e mattabchangeevent const actualizable actualizabledirective thisactualizablesfind item index gt index eindex actualizableactualize think closed", "d": "10/2017"}, {"body": "seems occurrences actually wardbell idea going related recent update", "d": "10/2017"}, {"body": "idea hardly clue angular first hoping one could fix looks like examples later seem work sat oct george kalpakas notifications githubcom wrote seems heroservice occurrences response gt responsejson data actually response gt responsejson wardbell idea going related recent angularinmemorywebapi update receiving authored thread reply email directly view github mute thread", "d": "10/2017"}, {"body": "gkalpak thank much im glad issues reported replied damn quickly stuck tutorial im glad could reach answer continue learning", "d": "10/2017"}, {"body": "add little context reason example fails plnkr recently updated drop property returned mock responses default one either remove occurences returned responses configure add property examples associated tests failing builds version pinned change removes default generated plnkrs side always use latest stable version available npm currently investigating best address easiestsafest option imo pin version plnkr ie manually make following change plnkrs thx wardbell filipesilva helping figure", "d": "10/2017"}, {"body": "ran issue following tour heroes tutorial imagine people following tutorial wo nt pinned guys would great little subsection noting reader may need drop use instead depending version", "d": "10/2017"}, {"body": "really messes new people like building knowledge new framework fact many issues small interactions official angular angular material imagine would scare new devs away bright side theses issues allow overcome learning interacting community stack overflow", "d": "10/2017"}, {"body": "least two things could contribute working firebase example note line code response gt responsejson data hero response gt responsejson hero data must deleted line code private heroesurl api heroes would apply case since decide use must add extension data obtain json otherwise get cors accesscontrolalloworigin error case getting single hero instead const url apply examples sorry english google translate xd", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "sure marked fixed though issue run code example contains works work manual create local application still contains string though data error happen tried set packagejson see debugger data property response json absent fix come back older angularinmemorywebapi delete data property call route take finish tour heroes", "d": "10/2017"}, {"body": "fixed work live example downloadable zip recreating example app hand make sure end results looks zip problem persists please post exact reproduction steps investigate", "d": "10/2017"}, {"body": "right works download zip file see heroservicets packagejson though create application hand works add files dependent angularinmemorywebapi like inmemorydataservicets run application get error like see error description manual search tried see instead package json see leads application made hand works get debug see data property absent response know simple thing anybody works latest angular though anybody tries use stepbystep manual change packagejson restart still works data property exist response newer version still nodemodules solve deleted nodemodules folder run application works looks like manual page updated info angularinmemorywebapi setup version", "d": "10/2017"}, {"body": "nt follow saying probably grin dependency related files clearly mentioned guide also updating automatically update installed dependencies angularrelated though nodenpm works version compatibility indeed issue since versions change would avoid hardcoding inside guide becaue inevitably become outdated always check provided live downloadable example see versionsranges used also compare handwritten version provided full example see deviated finally breaking changes common examples dependencies hopefully upgrade latest version soon anyway", "d": "10/2017"}, {"body": "thanks comment makes clear way team maintain manuals", "d": "10/2017"}, {"body": "look bad easily fixed css sjtrimble time look", "d": "10/2017"}, {"body": "yup", "d": "10/2017"}, {"body": "petebacondarwin print format cleanup hard time material sidenav autoadjusting margin content section get show printing ca nt get content move left occupy space", "d": "10/2017"}, {"body": "sjtrimble see", "d": "10/2017"}, {"body": "see", "d": "10/2017"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "10/2017"}, {"body": "hello version angular using version used work previously edit bad title issue", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "also facing issue even get request fails error body error response parsed json successful requests successful request working expected returning json object response body failed request returning json object string error response body working fine till version error handling code went haywire updating project angular version nt want apply patch hope team angular fix coming builds till downgrading working", "d": "10/2017"}, {"body": "closed duplicate original bug fixed", "d": "10/2017"}, {"body": "closing due", "d": "10/2017"}, {"body": "got problem trying get object jwt token nt map class even got fields class", "d": "10/2017"}, {"body": "problem exists also events", "d": "10/2017"}, {"body": "ca nt seem reproduce see would absolutely occur work without issue nt serialize anything like data passed straight please provide repro issue feel free fork one", "d": "10/2017"}, {"body": "robwormald thanks taking look published repo issue reproduced especially check last commit commit made changes reproduce issue basically launch app channel list left side display testname ignores defined getter displays actual property", "d": "10/2017"}, {"body": "nothing related passing retrieving objects http typescript getchannels promise", "d": "10/2017"}, {"body": "trotyl makes sense thanks fast answer nt see else service pass data retrieved would expect calling would map existing methods data wrong else pass data component service without loosing methods defined", "d": "10/2017"}, {"body": "typescript something helping analyze code static type checking runtime semantic actually old versions kept compatibility", "d": "10/2017"}, {"body": "mhmm understand trotyl angulartypescript suggest best practice achieve want see solution", "d": "10/2017"}, {"body": "would agree transform issue feature request notthatexperienced angular dev feels like bug although point typescript totally valid essentially compiled version angular behaving differently wanted define ts code", "d": "10/2017"}, {"body": "transforming dto model projectspecific imaging deserialize date know date number timestamp string iso format besides typescript type infos erased available runtime lib help", "d": "10/2017"}, {"body": "could possible request angular get rid typescript inventing atscript plus could valid feature request certainly would closed quickly", "d": "10/2017"}, {"body": "atscript plus seem feasible ask agree stupid question point view data comes server angular compiler access initial typescript model ts export class data constructor public date date public number number tostring return asdf could nt kind think idea feasible makes sense trotyl", "d": "10/2017"}, {"body": "angular compiler compiling template metadata collected wo nt touch anything logic code", "d": "10/2017"}, {"body": "borntraegermarc looking something like runtimetypechecks victor savkin light idea could possible", "d": "10/2017"}, {"body": "mlcmlapis good start looking something angular native like well guess nobody disagrees trotyl gon na close issue little knowledge argue", "d": "10/2017"}, {"body": "different use case problem using jwt token send user ts class defined fields methods object token decode got specific method create new user object typescript public loggedinuser user decodeduser jwtdecode token user thisloggedinuser thiscreatenewuser tokenuser createnewuser tokenuser user const loggedinuser user new user loggedinuserusername tokenuserusername loggedinuserrole tokenuserrole loggedinusername tokenusername setting fields return loggedinuser code service loginservicets user stored service killed simple methods inside usermodelts file typescript export class user username string role string name string public isroleadmin boolean return thisrole roleadmin public isrolejournalist boolean return thisrole rolejournalist want check component loggedinuser admin inject service constructor typescript export class somecomponent implements oninit isuseradmin boolean constructor private loginservice loginservice ngoninit thisisuseradmin thisloginserviceloggedinuserisroleadmin get error isuseradmin function", "d": "10/2017"}, {"body": "trotyl error nenadjovicic reason", "d": "10/2017"}, {"body": "borntraegermarc nope calling function", "d": "10/2017"}, {"body": "ericmartinezr mistyped sample nt check code english could nt copypaste type code use ctrlspace auto suggesting used proper method code fix", "d": "10/2017"}, {"body": "sounds like similar", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "misunderstanding hot observable hot observable nt mean would store last value must subscribe value emitted get value need", "d": "10/2017"}, {"body": "think misunderstanding hot observable open appcomponentts last plunker see last value emitted subscribers however value passed ms subscription happens accordingly", "d": "10/2017"}, {"body": "observable would react first subscribe subscribes first immediately tick right place support questions", "d": "10/2017"}, {"body": "yes right verified another timeouts", "d": "10/2017"}, {"body": "please open issue angularcli repo", "d": "10/2017"}, {"body": "bengbuyuezhang well ngfor iterate iterable thing like array object ca nt iterated event using objectkeys basically pulling keys object put array projects rarely need iterate object ngfor use custom pipe template pipe name values export class valuespipe implements pipetransform transform object array object return objectkeys object map key gt object key sidenote also create structural directive able iterate objects", "d": "10/2017"}, {"body": "bengbuyuezhang objects nt guarantee fixed order still best way use separate vectors object keys iteration help also reorderings sorting content manipulations also performant way", "d": "10/2017"}, {"body": "mlcmlapis spec nt every widely used js implementation", "d": "10/2017"}, {"body": "ohjames know still reasons like dynamic filtering sorting better yo use index vectors", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "thanks reporting issue however issue duplicate existing issues please subscribe issues future updates", "d": "10/2017"}, {"body": "think bug ngc workaround add tsconfig disable tsickle", "d": "10/2017"}, {"body": "tbosch", "d": "10/2017"}, {"body": "pete ecomponent come present example", "d": "10/2017"}, {"body": "extrapolating problem aotcompiler example tbosch kindly helped case seems nt set configuration property file created strips fields initialized outside constructor case instance referenced factory file theodorejb could confirm publishing code factory file", "d": "10/2017"}, {"body": "away home pc right compiled component different pc error firefox changed typeerror conewuser undefined chrome error typeerror read property fullname undefined generated registerngfactoryjs file registerngfactoryjstxt", "d": "10/2017"}, {"body": "adding tsconfig fix error", "d": "10/2017"}, {"body": "sorry hear", "d": "10/2017"}, {"body": "oops sorry meant say actually compiled factory problem", "d": "10/2017"}, {"body": "theodorejb sorry need better reproduction could create branch github shows problem could check nt assign new value somewhere else factory looks fine updates property inside object could also paste compiled file contains component class", "d": "10/2017"}, {"body": "hi able reproduce issue difference mine theodorejb able fix problem repro step reproduce run uncompiled typescript import component oninit angularcore component selector approot template export class appcomponent implements oninit text hello constructor ngoninit compiled constructor compiled component", "d": "10/2017"}, {"body": "tbosch still getting error angular contents compiled registerjs file", "d": "10/2017"}, {"body": "hey theodorejb using typescirpt tried downgrade issue", "d": "10/2017"}, {"body": "sarunint wow work downgraded typescript broken typescript rc registerjs file switching ts", "d": "10/2017"}, {"body": "well still surprised using typescript removes decorators data needed aot compilation anyway may wrong sure intended", "d": "10/2017"}, {"body": "internally google still using ts therefore nt tested ngc ts extensibly one next tasks ship probably angular decided let users know work ts surprises like via entry packagejson see", "d": "10/2017"}, {"body": "previous version nt use created however broke several users nt good coverage incremental usage blaze", "d": "10/2017"}, {"body": "think works intended databound model property number use avoid string coercion", "d": "10/2017"}, {"body": "return map string back custom data structure true even numbers", "d": "10/2017"}, {"body": "lazarljubenovic course explain problem look gifs", "d": "10/2017"}, {"body": "lazarljubenovic see get console type number string type console think good ngmodel convert type string", "d": "10/2017"}, {"body": "likely throw first place value past wo nt consistency problem", "d": "10/2017"}, {"body": "trotyl thank answer consistency problem think resolve", "d": "10/2017"}, {"body": "relates currently binding proper type checking due mechanism", "d": "10/2017"}, {"body": "input type number get console type number input type text string type console course whatever bind converted string get stringified value back changes trotyl suggests interesting solution wonder many apps break", "d": "10/2017"}, {"body": "lazarljubenovic think think ngmodel nt change type value example put model ngmodel keep type boolean always", "d": "10/2017"}, {"body": "nt change type updates value whatever emitted change event twoway binding mechanism angular syntax sugar normal property binding event binding neither special", "d": "10/2017"}, {"body": "keep type serialize string show input field let user update field", "d": "10/2017"}, {"body": "problem resolved added ie ts export declare class response extends body body", "d": "10/2017"}, {"body": "public api nt use", "d": "10/2017"}, {"body": "hi trotyl see another way get result request plain text use returns code function try failure occurs convert xml know way use", "d": "10/2017"}, {"body": "bodytext takes response stream reads completion returns promise resolves usvstring text", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "sure identical files nt case one file component another file factory view template screenshoot ca nt see full path file sizes would suggest got different contents could inspect content files make sure really talking duplicates", "d": "10/2017"}, {"body": "maybe thats case nt version components figured dublication naming", "d": "10/2017"}, {"body": "property called httpdownloadprogressevent interface allows retrieve already received text", "d": "10/2017"}, {"body": "hello problem old http module new one angularcommon also reproducible example using plunker example would great", "d": "10/2017"}, {"body": "srczip", "d": "10/2017"}, {"body": "apologies accidentally closed", "d": "10/2017"}, {"body": "nt problem use maxheight instead maxheight css body also please note css component applied component style body inside component default view encapsulation please read guide info", "d": "10/2017"}, {"body": "hi ocombe well spotted nt fix problem change unfortunately incidentally tried using inspect google chrome look csshtml angular version nt work plain htmlcss version ca nt see differences slightly baffled", "d": "10/2017"}, {"body": "ok managed get work moving maindiv css", "d": "10/2017"}, {"body": "changing file extension seems help", "d": "10/2017"}, {"body": "sorry issue nt seem caused angular please file issue typescript graphqlcodegenerator repository instead", "d": "10/2017"}, {"body": "thanks since type definitions generated look good put typescript repo", "d": "10/2017"}, {"body": "may using type", "d": "10/2017"}, {"body": "hello numeric pipe rewritten completely angular nt use intl api anymore locale locale config file use function overwrite default values file used default separator second value array line make sure change locale id line default lang used angular see docs", "d": "10/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "10/2017"}, {"body": "toxicable sorry time thing add bug works chrome version browsers ie firefox opera shows everything correctly", "d": "10/2017"}, {"body": "svg elements angular prefixed except root element sure includes element likely try", "d": "10/2017"}, {"body": "chuckjaz popped usually something aotpackaging related ideas", "d": "10/2017"}, {"body": "longer symbol called could version mismatch packages megetron please verify packages version", "d": "10/2017"}, {"body": "closing nt track support questions issues", "d": "10/2017"}, {"body": "problem using", "d": "10/2017"}, {"body": "ran issue upgrading returning response content like content per spec one error messages getting console http failure parsing included response body handled normally nt really error case adhering closely spec arguable cause error accept treat empty response", "d": "10/2017"}, {"body": "yes case nt realize created return created object api returns location header body per body included must guess client library treat case error especially using observe response", "d": "10/2017"}, {"body": "problem logout broken due bug", "d": "10/2017"}, {"body": "nt think bug per se default expects json body nt want use property http method option see example", "d": "10/2017"}, {"body": "victornoel thank adding responsetype blob fixed problem anyway bit counterintuitive would expect get null responsetype json empty response yes contenttype applicationjson header missing response headers strictly speaking angular correct guess better slightly incorrect case", "d": "10/2017"}, {"body": "problem eg status code empty body", "d": "10/2017"}, {"body": "another argument liberal behavior following case server returns successful response empty error response json option use responsetype text manually parse error response rather use responsetype json let angular parse error response get null body", "d": "10/2017"}, {"body": "actually implemented", "d": "10/2017"}, {"body": "victornoel still broken since either pass responsetype string nt get json parsed error responsetype json nt get next successful response", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "ah ok thx", "d": "10/2017"}, {"body": "native method provided empties element", "d": "10/2017"}, {"body": "oh post makes think intentional", "d": "10/2017"}, {"body": "update issue create new one please close one gkalpak comment fixed problem", "d": "10/2017"}, {"body": "done workaround redirecting home page calling step time use like better reload entire application", "d": "10/2017"}, {"body": "hello bug could change type feature instead also please provide correct angular version exist likely cli version", "d": "10/2017"}, {"body": "edited issue sorry wrong version number", "d": "10/2017"}, {"body": "hello need way reproduce issue either plunker code thanks", "d": "10/2017"}, {"body": "sorry late reply busy weekend long stripping app contain app module component still receive error latest exact code really line line char char builds fine nt get setup plunker sorry could mail complete project including webpack configs etc ca nt publish whole clients project packagejson relevant parts srcmaints import enableprodmode angularcore import platformbrowserdynamic angularplatformbrowserdynamic import applicationmodule codeapplicationapplicationmodule import environment environmentsenvironment environmentproduction enableprodmode platformbrowserdynamic bootstrapmodule applicationmodule srccodeapplicationapplicationmodulets import injectable ngmodule angularcore import browsermodule angularplatformbrowser import routermodule angularrouter import applicationcomponent componentsindex ngmodule bootstrap applicationcomponent declarations applicationcomponent exports routermodule imports browsermodule routermoduleforroot injectable export class applicationmodule srccodeapplicationcomponentsapplicationapplicationcomponentts import component viewencapsulation angularcore component selector mmapplicationapplication encapsulation viewencapsulationemulated styleurls stylesapplicationscss templateurl templatesapplicationtemplatehtml export class applicationcomponent srctsconfigappjson tsconfigjson", "d": "10/2017"}, {"body": "tried track latest observations upgrading error changes module found error ca nt resolve gendircodeapplicationapplicationmodulengfactory provider ngform error known see issue application compiles expected apps code nt changed even char version switches go back forth reproduce error debug app past module found errors odd things could resolve albeit wondering works far tell think something inside feel free close issue keep posted new observations debugging", "d": "10/2017"}, {"body": "issue angular ngc creating folders common forms platformbrowser router root project containing corresponding ngsummaryjson files", "d": "10/2017"}, {"body": "give us content tsconfig file please", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "theodorejb tried files go folder typescript version using", "d": "10/2017"}, {"body": "could create branch github reproduce problem", "d": "10/2017"}, {"body": "matjum tried also emit files worked well took removed entry could also create branch reproduce", "d": "10/2017"}, {"body": "oh windows", "d": "10/2017"}, {"body": "also ca nt reproduce windows", "d": "10/2017"}, {"body": "tbosch skeleton project highlight issue", "d": "10/2017"}, {"body": "tsconfigjson compileroptions target outdir aot moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true lib dom noimplicitany true suppressimplicitanyindexerrors true include appts angularcompileroptions skipmetadataemit true ngc produces folders project root common forms platformbrowser router containing ngsummaryjson files also typescript rxjs folders path reproduction platform windows angular", "d": "10/2017"}, {"body": "thanks finally able reproduce alexzuza thanks video really helped", "d": "10/2017"}, {"body": "fixed tried problem happening", "d": "10/2017"}, {"body": "theodorejb reproduction", "d": "10/2017"}, {"body": "tbosch reproduce repository checkout branch run postinstall script runs angular compiler incorrectly creates following foldersfiles root repository commoncommonngsummaryjson common formsformsngsummaryjson platformbrowserplatformbrowserngsummaryjson routerrouterngsummaryjson using node windows", "d": "10/2017"}, {"body": "theodorejb thanks fix", "d": "10/2017"}, {"body": "landed master", "d": "10/2017"}, {"body": "files output correct folder structure thanks far compiler still breaking app builds fine error generic ca nt resolve appmodulengfactory nt open new issue busy investigate provide reproduction btw working setup currently modules except compilercli", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "works new ngc paths relative ie paths like", "d": "10/2017"}, {"body": "object", "d": "10/2017"}, {"body": "well attempt find solution like using behaviorissue understand point", "d": "10/2017"}, {"body": "behaviour sure latter wo nt solve problem", "d": "10/2017"}, {"body": "hi jonathanp yesunfortunetly behavior server sidei tested printscreen post function clientside printscreen receive request object servcerside nodejs express see body data sending httpclientpost function becomes object key empty value request object serverside", "d": "10/2017"}, {"body": "captured wireshark software data sended confirms behavior described", "d": "10/2017"}, {"body": "problem angular", "d": "10/2017"}, {"body": "problem angular", "d": "10/2017"}, {"body": "hi angular teams news confirmations issue thank answer", "d": "10/2017"}, {"body": "hi titaneboy think problem let short explain backend use nodejs express rest api first run problem body post requests empty send request via postman found solution set body parser applicationxwwwformurlencoded node js app angular like used well request body send ugly way could bug postman looks like expected solution problem need send data json data backend using applicationjson default contenttype could run behavior backend app empty response body fix determine want use instead want send request via postman could use body section select json pass json object hope help well", "d": "10/2017"}, {"body": "hi fkmbc thank great detailed post case nodejs server side already configured configuration described using well said applicationxwwwformurlencoded request headers issue using postman receive correctly serverside data sended body request data receive serverside using httpclientpost angular body data received serverside ugly described issue sothe thing confirm works well postman httpclient", "d": "10/2017"}, {"body": "titaneboy try change app line header applicationjson works well", "d": "10/2017"}, {"body": "fkmbc tried change headers said get problems decided add options login route even got another issue suggestion working trying understand whybut think complete different issue described beginning post guess using httpclientpost applicationxwwwformurlencoded work well used applicationjson content type header", "d": "10/2017"}, {"body": "fkmbc postman problem using applicationjson well applicationxwwwformurlencoded problems described last post using angular could share please configuration route node add like options route like see last screenshot maybe missing something node express version thank answer", "d": "10/2017"}, {"body": "fkmbc removed next instruction options function works well applicationjson content type webclient page clientside serverside workaround overall working applicationxwwwformurlencoded content type header rename title issue make focus aspect", "d": "10/2017"}, {"body": "fkmbc thank suggestions help", "d": "10/2017"}, {"body": "hello titaneboy agree commenters use send json encoded body essentially lying server telling parse body using different format one actually encoded happening serverside framework interpreting json string one long parameter name empty value either encode body format pass instance body use", "d": "10/2017"}, {"body": "robwormald error without load return passed fix one", "d": "10/2017"}, {"body": "jialipassion thank", "d": "10/2017"}, {"body": "jialipassion running need help mhevery noticed waiting review tad premature remark", "d": "10/2017"}, {"body": "sanderelias posted pr thank much", "d": "10/2017"}, {"body": "jialipassion noticed putting message hence edit thank pr", "d": "10/2017"}, {"body": "thanks pointing jcttrll", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "hmm thanks", "d": "10/2017"}, {"body": "duplication", "d": "10/2017"}, {"body": "repo core framework packages please reopen issue", "d": "10/2017"}, {"body": "alright see flicker looking thank reporting", "d": "10/2017"}, {"body": "matsko found might causing", "d": "10/2017"}, {"body": "issue webanimationsjs polyfill relying fix", "d": "10/2017"}, {"body": "matsko mention angular lightweight polyfill web animations thing anymore seeing disappeared angulario", "d": "10/2017"}, {"body": "seeing exact issue", "d": "10/2017"}, {"body": "closed since pr merged", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "moved use domino instead would able check issue", "d": "10/2017"}, {"body": "issue really anoying", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "ok see ngsummaryjs files packaged angular generated ngc runs", "d": "10/2017"}, {"body": "ok moment thought user error seem ngsummaryjs files generated animations package forms properly", "d": "10/2017"}, {"body": "mistake generating ngsummaryjs files always however behind compiler flag used see ie seem stale files somewhere general files needed new kind testing nt document yet probably nt need anyways", "d": "10/2017"}, {"body": "closing please reopen issues underneath", "d": "10/2017"}, {"body": "tbosch recently ngsummaryjs files necessary optimize closure compiler name nt seem appropriate solution bundling closure compiler works closure compiler nt understand interpret packages like pr update closure compiler rejected see", "d": "10/2017"}, {"body": "files definitely needed optimize closure compiler might need files incremental compilations build ontop definitely need files represent templates last always generated though alexeagle knows problem closure compiler packages", "d": "10/2017"}, {"body": "working closure compiler team sure next release works angular recommend cloning angularclosuredemo repository something broken wrt generated files please give specific repro", "d": "10/2017"}, {"body": "vicb take look looks like found another iterable differ bug", "d": "10/2017"}, {"body": "closing looks like nt read documentation well enough apparently ignore look param instead provides correct adjusted value better documentation clearly confused seems working okay", "d": "10/2017"}, {"body": "chuckjaz cause issue domrenderts idea remove child elements method seems unnecessary reason think need rename method add doc", "d": "10/2017"}, {"body": "sorry already going", "d": "10/2017"}, {"body": "duplicate let track workaround absolutely need docs specific version checkout repo build docs ony suggesting lastresort workaround implying good developer experience smiley guide specifically commit switched new anything refers old service right idea breaking changes minor versions keeping uptodate simple updating dependencies case replacing old guide new one might best idea branch", "d": "10/2017"}, {"body": "gkalpak win thanks dood ended though bit pain require specific yarn version gt lt yarn currently version greater workaround remove requirement packagejson file weird stuff suggest looking create separate issue like", "d": "10/2017"}, {"body": "since upgraded latest branch least think ned look please file issue smiley glad worked", "d": "10/2017"}, {"body": "simply use infinity inside function nt see need pass parameter anyway since angular looking property named nt exist returns undefined simply create property named assign really bug example", "d": "10/2017"}, {"body": "methods ca nt use global thing direct template binding class property", "d": "10/2017"}, {"body": "mlcmlapis allowed template although properties", "d": "10/2017"}, {"body": "trotyl nt side effect js works read ng source", "d": "10/2017"}, {"body": "tytskyi angular template treated specially like keywordliteral lexer changing context value wo nt affect similar wo nt change meaning template problem got special treatment globals nt", "d": "10/2017"}, {"body": "actually pr letting user know problem still nt know angular", "d": "10/2017"}, {"body": "ok set get method nt know global thing angular parse stupid user set function parameter expect see parameter arguments common javascript others behavior", "d": "10/2017"}, {"body": "tamtakoe keyword javascript normal variable also common behavior restricting access javascript variables template", "d": "10/2017"}, {"body": "trotyl think angular team needs make exception infinity popular case hardcode max min values templates maximum last page etc course case hardcode eg realy rare", "d": "10/2017"}, {"body": "nt different global values defined indeed also probably got special treatment special case superimportant concept js irrelevant existence think confusion us everyday speech seem closer values like well fact js properties found aside agree angular templates whitelist things access templates moment kinda lacking behind general looks like simply priority moment", "d": "10/2017"}, {"body": "keyword literal nothing related identifiers different concepts htmldefined interface acts extension defines something like javascript angular platformindependent framework something needed care", "d": "10/2017"}, {"body": "trying explain pattern see angular templates things live available templates except", "d": "10/2017"}, {"body": "template variable properties context object nature semantic access javascript properties instead properties always accessible common case using template variable access static properties like opposing semanticlevel exception template language something bit common adding support undefined could design mistake first version significant evidence angularjs support template observe existence string concatenation like used", "d": "10/2017"}, {"body": "better way go could allow providing custom global variables like parseprovider addliteral angularjs", "d": "10/2017"}, {"body": "something going support sorry may explicitly expose variables via better something like map controller allowing access arbitrary globals opens wide attack surface sorts security issues", "d": "10/2017"}, {"body": "nodejs etc available common scope robwormald think future", "d": "10/2017"}, {"body": "wrapping component tested test component allows us test property event bindings well content projection fairly easily nevertheless bit overhead one write case aware better solution", "d": "10/2017"}, {"body": "solution came well seems job well enough like say stuff fairly well probably end putting folder component folder test components writing depending context", "d": "10/2017"}, {"body": "processing http multipart responses scope aims abstract common http use cases however could implement via interceptors interceptor could receive multipart event split many separate events metaevent contains array", "d": "10/2017"}, {"body": "directive uses property name input bound attribute typically misspellings eg used overcome fact valid identifier name javascript since keyword necessary particular case probably good idea anyway smiley debug information attached element property names prefixed hence attribute normally ignore properties effect behavior components", "d": "10/2017"}, {"body": "valid identifier name javascript accurate enough indeed valid identifier name valid identifier since reserved word used", "d": "10/2017"}, {"body": "design redirection marketing urls docs archive next mode marketing pages irrelevant next archived mode appropriate redirect visitor actual documentation redirection happen via location service using historyreplacestate nt interfere critical path tti nt need maintain special firebase hosting config various environments see information", "d": "10/2017"}, {"body": "igorminar petebacondarwin anything actionable current behavior design although sure redirect nondocs pages usually info uptodate change archived versions redirect", "d": "10/2017"}, {"body": "agree need redirect anything nextangulario imo igorminar juleskremer", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "chuckjaz problem isolated compiler module line line general problem angular module necessary manually edit minjs files file remove nonexisted part paths", "d": "10/2017"}, {"body": "updating relevent lines nodemodules angularcommon angularcommon read carry epic project upgrade decided spare time look alternatives latter wo nt time thanks time sorry may sounded bit brash encountered every possible hurdle imaginable upgrade process really exhausted", "d": "10/2017"}, {"body": "robwormald far see possible set contenttyperesponsetype typings declaration says value json undefined typescript error message error e developmentgoprojectssrcgithubcomzlepperphysicalstorefrontendsrcappserviceslistsservicets argument type headers httpheaders responsetype string assignable parameter type headers httpheaders undefined observe body undefined params httpparams undefine type headers httpheaders responsetype string assignable type headers httpheaders undefined observe body undefined params httpparams undefine types property responsetype incompatible type string assignable type json undefined", "d": "10/2017"}, {"body": "incantation looking yes get error server respond valid json unless specifically tell angular expect json", "d": "10/2017"}, {"body": "null since nt standard way represent guess gets translated across wire empty string api returning null gets turned empty string somewhere along line might via jackson conversion using java spring backend nt know know years years years many calls return either valid json null nothing found apparently latest release interpreted empty string invalid json calls would tell api incorrectly expecting convert checking empty string ca nt alone someone give valid argument throw exception encountering empty string", "d": "10/2017"}, {"body": "crowmagnumb api broken answer content adapt client deal using bug became stricter lately suppose easily detect kind implicit situations think something something else also broken nt try parse body status", "d": "10/2017"}, {"body": "unfortunately shortcoming dom animation language way make work without using views component dom nodes exist html browser renders default means animating opacity might work intended bizarre reason solution make sure views set global css setting using within component styles autoconfiguring reach angular unfortunately", "d": "10/2017"}, {"body": "matsko first thanks reply sorry giving late feedback tests made based recommandations using style components change anything see plunker without behavior exactly leaving component pushed entering component inserted dom content visible yet animation starts leaving component fades entering component fades make properly work entering component needs style prior animation set opacity also height works without display fixed host display block think though bug", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "good catch would like submit pr fix", "d": "10/2017"}, {"body": "hi gkalpak thank response opened pr number", "d": "10/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "10/2017"}, {"body": "lazarljubenovic find place template driven forms doc different pr thanks bringing", "d": "10/2017"}, {"body": "kapunahelewong ah sorry confusion said docs meant api nice explanation common error found solution old issue good thing address officially", "d": "10/2017"}, {"body": "lazarljubenovic guess part proposal able search could help part special tag attribute similar sure make better", "d": "10/2017"}, {"body": "ah thought directive think need figure way search things like well anyway developers see would search maybe keywords sections docs searchable lead search result section separate issuediscussion anyway", "d": "10/2017"}, {"body": "want using vital canonicalpath library", "d": "10/2017"}, {"body": "see commit originally introduced windows compatibility", "d": "10/2017"}, {"body": "much better stick alway using forward slashes node forward slash converted back slash os windows reverse happen end crazy situation end unix windows library means code assume paths always forward slash separated go pub early", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "think resolved confirm alxhub", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "implemented server angular ca nt handle xd", "d": "10/2017"}, {"body": "kuhnroyal even without clone httperrorresponse interceptor pretty trivial key part mine looks like ts return nexthandle req catch error httperrorresponse gt hasapiproblem error return observablethrow error", "d": "10/2017"}, {"body": "karptonite thanks help", "d": "10/2017"}, {"body": "kuhnroyal fyi latest angular beta added automatic json parsing error bodies trying use automatically decode errors without interceptor latest beta nt mean nt use case cloning httperrorresponse nt know one anymore", "d": "10/2017"}, {"body": "karptonite thanks letting know", "d": "10/2017"}, {"body": "still issues beta testing flag even better opened issue findings see new errors also experiencing original error issue narrowed thanks git bisect else syntax login register throws issue probably reopened cc chuckjaz tbosch", "d": "10/2017"}, {"body": "part", "d": "10/2017"}, {"body": "gets worse found good way use hostbinding tried thisinputobservabledo v gt thissetcssclass v settimeout gt thissetcssclass v thiscdrdetectchanges subscribe found led viewdestroyed errors observable emitted inconvenient time resort using elementref like wild animal", "d": "10/2017"}, {"body": "thanks daddyman upgrading trick angular core issue sure", "d": "10/2017"}, {"body": "resolve issue using universal find broken unfortunately fell trap wanting use new angular features screwed cli fixed", "d": "10/2017"}, {"body": "angular core material nt use use way invoking operators uglier nt monkeypatch observable prototype pull lot code use lettable operators core would make rxjs upgrade requirement given stable yet ca nt make upgrade requirement working rxjs get stable release still sizerelated blockers way", "d": "10/2017"}, {"body": "igorminar even though angular core wo nt use rxjs hope compatible angular apps freely chose rxjs together angular", "d": "10/2017"}, {"body": "yes rxjs backwards compatible work angular", "d": "10/2017"}, {"body": "work ok relative bundle sizes import operator twice one current angular implementation user using new lettable operators", "d": "10/2017"}, {"body": "precision rxjs backward compatible upgrade angular without problem using new lettable operators typescript need ts minimum meaning lettable operators use angular previous versions compatible ts", "d": "10/2017"}, {"body": "igorminar suppose know rxjs stable angular yet still time consider impact angular community libraries authors users library author confortable difficult code want switch new lettable operators performance library different dependencies requirements rxjs gt angular resulting mess users library author delay move waiting angular library users switch angular app rxjs case new projects generated cli operators imported twice resulting bigger builds", "d": "10/2017"}, {"body": "cyrilletuzi angular allows provide version including libraries need use gt specify mitigate problems described user pick version satisfy needs peer dependencies regarding bundle size assuming previous item done right single instance library project looks like using lettable operators introducing overhead using significant base implementation operator used lettable normal case using lettable version also load lines code overhead per lettable operator used nt sound like lot still vote updating rxjs make example router code readable mere mortals nt seem cause serious problems eco system bumped ps said angular cli likely use new projects anyway new projects get automatically", "d": "10/2017"}, {"body": "cyrilletuzi thanks issue working closely rxjs team get final version completed morning updating peer dependency requirements angular future pr change angular code using syntax cleaner lettable operators cc igorminar", "d": "10/2017"}, {"body": "putting link since relevant", "d": "10/2017"}, {"body": "two relevant links cli incorporate change soon fix size regressions one imports rxjsoperators within cli project", "d": "10/2017"}, {"body": "hallo guys thx looking issue realized version new line added use webpack bundle angular code production creates vendorxyzjs file packaging webpack contains following line looks like packaging problem angular problem could solve far", "d": "10/2017"}, {"body": "ok cool closing", "d": "10/2017"}, {"body": "lookin", "d": "10/2017"}, {"body": "fxck gather problematic rather stagger nt working", "d": "10/2017"}, {"body": "pr fix", "d": "10/2017"}, {"body": "bad nt make", "d": "10/2017"}, {"body": "run similar problem related ngcontent rather general issue try query multiple components found query nt work intermediate component minimal reproduction", "d": "10/2017"}, {"body": "yes sounds right change view affect model reactive forms change model nt trigger validation pin point always running new validation run new validators introduced control directive also renaming function may reduce confusion may somehow related editing view reactive form looks like fault", "d": "10/2017"}, {"body": "understand correctlyand confirm primary request able personal public annotations bookmarks angular docs correct bookmarks like easy way come back something found annotations want able write virtual margins sounds like ideally would paragraph level page level correct annotations mostly info animations bookmarklike tags angular x way technical tips ahha moments types notes trying use docs offline mode print correct something like evernote probably give ability things prefer pdf epub primarily looking bookmark annotation features ask many people find pdfs epubs harder navigate html used electronic format tend use pdf printing epub offline electronic portability also recognize base concern regarding navigating documentation set interested learning working use docs thread want make sure understand use cases led suggestion alternate formats", "d": "10/2017"}, {"body": "nt believe plan render nonhtml formats near future lazarljubenovic points many reasons requiring achieve better html presentation camdenkid specific need eg able place personal highlights notes docs please open specific issues requirements look best solve", "d": "10/2017"}, {"body": "jenniferfell lazarljubenovic petebacondarwin sorry lack detail original message jennifer first two paragraphs say perfectly would like see things would like able documentation mark point page last read highlight text add note highlight easily view notes bookmark sections documentation epub bookmark page easily view bookmarks view documentation line page perfect example would use added highlights notes etc would like able see pagesection see read documentation would nice highlight example often think pdfepub easier eye especially reading smart phone one also change font colours etc", "d": "10/2017"}, {"body": "closed via", "d": "10/2017"}, {"body": "hi rberge host view case template appappcomponentts hosts anything rendered finding live example download point love help clear things", "d": "10/2017"}, {"body": "thank still working routing go back tutorial see helps appreciate oct kapunahele wong notifications githubcom wrote hi rberge host view case template appappcomponentts hosts anything rendered finding routing live example download point love help clear things receiving mentioned reply email directly view github mute thread", "d": "10/2017"}, {"body": "rberge ok let know questions suggestions improvement still interested statement referenced see please let know take look", "d": "10/2017"}, {"body": "need also fairly easy maximum safe ahem url length exceeded using parameters", "d": "10/2017"}, {"body": "petebacondarwin issue app created mini version app hopes reproduce luck yet still middle debugging finding issue know popstate event question change line line upgrade module could still trick resilient issues like maybe zone thinks done phase still going fixes issue wonder affect workflows", "d": "10/2017"}, {"body": "use point instead caused set issues apps", "d": "10/2017"}, {"body": "petebacondarwin debugging found error happens task invoked angular zone another event evoked root zone need help understanding something like click event handled root zone instead angular zone take look call stack error happens see first task root zone one angular zone still nt able reproduce separate app second app built click event handled angular zone everything works fine ideas thanks taking time look", "d": "10/2017"}, {"body": "event listener invoked outside angular zone means registered outside angular zone would try track listener registered see gices clues", "d": "10/2017"}, {"body": "suppose try parse body receives", "d": "10/2017"}, {"body": "victormejia go parse body receives empty string least setting config importing http client valid return empty body status means specifically", "d": "10/2017"}, {"body": "one possibility look header response decide whether parse empty body least may problem apis incorrectly specify however", "d": "10/2017"}, {"body": "http empty body body two completely different scenarios response body empty body informational content modified responses include message body responses include message body although body might zero length", "d": "10/2017"}, {"body": "also section responses head requests include body although headers may indicate going exclusively header wo nt work unless request type also taken account", "d": "10/2017"}, {"body": "investigated fixed reenabled smiley", "d": "10/2017"}, {"body": "ran issue using webstorm eap every usage showing error highlighted issue component x included module available inside template consider adding ngmodule declaration web app would run fine though updating latest version eap webstorm eap build built october solved though", "d": "10/2017"}, {"body": "checked reproduction checked angular still also personally nt think anything ws instead language service blamed mean", "d": "10/2017"}, {"body": "think hava issue progress", "d": "10/2017"}, {"body": "add link tsconfigappjson file like write absolute path like admin angular backend server layout angular frontend router like work", "d": "10/2017"}, {"body": "gkalpak really tried reproduce error new project event copied companie project renamed deleted useless code reproduction failed could nt reproduce error original project persists hunted bug thought related interceptors configurations simply break response really nt clue broken love post original project sake resolving issue ca nt customer sensitive data", "d": "10/2017"}, {"body": "similar", "d": "10/2017"}, {"body": "closing works intended need document different behavior", "d": "10/2017"}, {"body": "determined works intended nt generate code files outside", "d": "10/2017"}, {"body": "chance running ad blocker pop upad blocker mine nt work first like described turned ad blocker works fine always forget go particular doc bottom unrendered banner reminds", "d": "10/2017"}, {"body": "rename angular angular typescript", "d": "10/2017"}, {"body": "ran well relative navigation kept trying add sibling subsegment sibling like adding prefix helped", "d": "10/2017"}, {"body": "days goes anyone angular take look give estimate could", "d": "10/2017"}, {"body": "also seeing issue tried create reproducable stackblitz havent able recreate issue recreate bug simple plunkr app sure helpful angular team", "d": "10/2017"}, {"body": "problem using browseranimations module project links might help identifying problem", "d": "10/2017"}, {"body": "problem", "d": "10/2017"}, {"body": "problem tooooo", "d": "10/2017"}, {"body": "problem workarounds", "d": "10/2017"}, {"body": "hmm still nt able reproduce bug simple stackblitz still trying figure whats going happens use angularcli build prod mode issue nt happen think related might possible workaround hope give another shot weekend", "d": "10/2017"}, {"body": "similar issue app removing file fixed problem mentioned turned issue second component throwing error resolved error second component appended routing issue resolved", "d": "10/2017"}, {"body": "also error ca nt get rid browseranimationmodule cause whole app based angular material components really think happen error thrown angular due dom problem something wrong templating custom directive could nt reproduce another case really hope angular team could look soon soon release angular", "d": "10/2017"}, {"body": "trying log error navigate user errorcomponent custom errorhandler right component throws error subsequent route navigation cause components append happening due removed animations removed respective files everything works fine app need certain animations nt know get rid problem workarounds", "d": "10/2017"}, {"body": "attached find simple sample application reproduces problem setup done using angularcli follows added file updated routing include two routes component file altered follows example app one two component one left asis component two changed include following html exampletwo works form group exists using run application clicking link component two crash content appended div note running throw error saying property formgroup exist type exampletwocomponent production build covered", "d": "10/2017"}, {"body": "jnsn precise production build correct case show every cases", "d": "10/2017"}, {"body": "interested solution well abstracting requirement would toplevel appcomponent lazy loads n modules toplevel app n modules would build deploy pipelines app would pick deployed lazy loaded modules run time similar exe deployed picking separately deployed dlls runtime look prototype solution", "d": "10/2017"}, {"body": "mhevery work shown current null platform enough applications like aio since also requires services provided browser platform", "d": "10/2017"}, {"body": "recommended fix ensure file detect changed actually changed relatively easy cache files watch mode", "d": "10/2017"}, {"body": "alexeagle index rewriting removed still issue", "d": "10/2017"}, {"body": "kemsky please reopen fixed latest releases", "d": "10/2017"}, {"body": "another issue mentioned fixed httpclient module fix part next angular release", "d": "10/2017"}, {"body": "nt make part next release", "d": "10/2017"}, {"body": "anyone found solution experienced exactly issue throw exception ngoninit component missing component input custom errorhandler redirect user error page template form original component error page rendered using angular version", "d": "10/2017"}, {"body": "scttcper reason importing core versions methods deprecated", "d": "10/2017"}, {"body": "chuckjaz reason never changed worked", "d": "10/2017"}, {"body": "note kind workaround selector parts hostcontext changed shadowcss polyfill becomes ergo know relative location ancestors matching use workaround nt know relative location ancestors matching two selectors need complicated selector match possible cases yields selector need fully get behaviour specified shadowdom", "d": "10/2017"}, {"body": "toxicable igorminar evmar jdalton jesperronn today found problem occurs use iframe anyone suggest solution need corrected fast", "d": "10/2017"}, {"body": "problem metadata collector replacing references initializing expression nt expression sideeffect creating token workaround discovered repeating people find bug simply export token believe fix local symbol initialized sideeffecting expression ie contains call new collector recommend rewriting expression shrouded exported variable otherwise turn references errors", "d": "10/2017"}, {"body": "getting error downloaded quickstart seed code npm installon npm start getting errorstrange seed project compiling bug still openplease help", "d": "10/2017"}, {"body": "moving away quickstart towards based projects examples docs process converted clibased projects suggest use installed globally scaffolding new app simple", "d": "10/2017"}, {"body": "updating docs three hour feat going months since preferred method volunteered finish work looking assistance foxandxss said well underway already land need land big internal rework land week information branch work done looking master last updated june napkin math lines files markdown requiring lt change update use angularcli lines tops sounds like liberal estimate", "d": "10/2017"}, {"body": "please refrain using comments hours feat say working docs week", "d": "10/2017"}, {"body": "issue currently working version worked version hack provided wandri nt work though nt found yet", "d": "10/2017"}, {"body": "stick problem entire application crashes far", "d": "10/2017"}, {"body": "guess nt feature request bug", "d": "10/2017"}, {"body": "issue static reflector use type checker typescript currently expression clause ignore means idea base class implements easy way calculate would require us ask typechecker avoid using typechecker need able produce factory functions type checker would two full typechecks consider recognizing pattern meaning ignore treat parameter base class however would mean would catch things like", "d": "10/2017"}, {"body": "closing current version depends appears transitory issue rc something systemic buildrelease process", "d": "10/2017"}, {"body": "also facing issue even get request fails error body error response parsed json successful requests successful request working expected returning json object response body failed request returning json object string error response body working fine till version error handling code went haywire updating project angular version nt want apply patch hope team angular fix coming builds till downgrading working", "d": "10/2017"}, {"body": "fixed pull", "d": "10/2017"}, {"body": "well still see bug typeof errerror string subsequent jsonparse errerror succeeds", "d": "10/2017"}, {"body": "ok discovered wrong add responsetype text due without responsetype error parsed correctly bug fixed still impossible error json parsed automatically empty response parsed null", "d": "10/2017"}, {"body": "get update", "d": "10/2017"}, {"body": "started noticing lot things breaking project issue things working fine investigated bit turns breaking change introduced without notification see exact plunker posted version updated title issue accordingly fact nonanimated components changed behavior non disclaimed breaking change animations module pretty bad honestly one single workaround kind reasonable starting need many timeouts library might severely impact performance applications using", "d": "10/2017"}, {"body": "youdz looking", "d": "10/2017"}, {"body": "variation bug everything fine navigating components get stacked top angular rebuilds detects changes add example anywhere module rebuilds stacks another component top already existing one screenshot elements rebuilding couple times aspnet angular project tested following browsers problem chrome firefox edge ie including either browseranimationsmodule noopanimationsmodule enough trigger bug", "d": "10/2017"}, {"body": "solution workaround also facing issue", "d": "10/2017"}, {"body": "closed via", "d": "10/2017"}, {"body": "micahng report contain enough information us determine problem provide link repository demonstrates issue running", "d": "10/2017"}, {"body": "fixing error hard find would help immensely hacked file added following line able find source error right away", "d": "10/2017"}, {"body": "complement crowmagnumb solution added info ps file update since angular path", "d": "10/2017"}, {"body": "looking reintroducing angular release", "d": "10/2017"}, {"body": "sorry guys taking long get fixed couple animation prs need land first might fix next week able land", "d": "10/2017"}, {"body": "seems fixed also later versions", "d": "10/2017"}, {"body": "looks like two prs fix api class fix api merged master use latest since npm release beta flexlayout", "d": "10/2017"}, {"body": "mon oct dustin griffith notifications githubcom wrote looks like two prs fix api class fix api merged master use latest since npm release beta flexlayout receiving team mentioned reply email directly view github mute thread", "d": "10/2017"}, {"body": "ok see issue looking", "d": "10/2017"}, {"body": "might reason setting attributes attaching node dom instead setting attributes attaching dom", "d": "10/2017"}, {"body": "hoping use attrs wcs initialization thus check connectedcallback keep things date via props alternative would observe run logic everything defined straightforward connectedcallback stated elsewhere thread never guarantee user going use element robust respond change handle used different ways imagine could use builtin html elements added page right way", "d": "10/2017"}, {"body": "agree alternative probably even best practice nt necessary one assume writing html abstraction layer reflect behavior abstracting", "d": "10/2017"}, {"body": "fixed via", "d": "10/2017"}, {"body": "made following changes project diff git apackagejson bpackagejson index apackagejson bpackagejson angularplatformbrowser angularplatformbrowserdynamic angularrouter typesmoment corejs moment rxjs zonejs diff git asrcappappmodulets bsrcappappmodulets index asrcappappmodulets bsrcappappmodulets import ngmodule angularcore import appcomponent appcomponent import moment reexpmoment ngmodule declarations appcomponent import appcomponent appcomponent bootstrap appcomponent export class appmodule var x moment window asdf x diff git asrcappreexpmomentts bsrcappreexpmomentts new file mode index devnull bsrcappreexpmomentts import moment moment export moment moment main bundle contain invalid code mentioned report provide link repository reproduces", "d": "10/2017"}, {"body": "component injector nt inherit providers parent injector read providers parent injector provider current injector think working option another workaround providers tokens json providers provide atoken usefactory tokenfactory deps new skipself atoken export class appcomponent constructor inject atoken public tokens string", "d": "10/2017"}, {"body": "issue", "d": "10/2017"}, {"body": "hi mahmoodsajjadi problem hacky solution navigate parent given activatedroutesnapshot hope helps", "d": "10/2017"}, {"body": "test angular template compiler treats case specially rewrites introduce shrouded export value generates reference shrouded export", "d": "10/2017"}, {"body": "chuckjaz looking version release", "d": "10/2017"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "10/2017"}, {"body": "also found issue", "d": "10/2017"}, {"body": "seems necessary improve xsrfsupport become possible use urls starting urls starting require special handling several possible situations address backend equals address application downloaded example application started dev environment using backend launched another portserver etc application works one many servers provide access api connected accordingly sequence xsrftokens case even names cookies tokens stored may differ application works several subdomains subsequent levels apiexamplecom etc sequence xsrftokens global subdomains thus depending scenario angular support different strategies example domain sends sequence tokens allied domains case urls starting also considered separate domain subdomains subsequent levels common sequence tokens domains common sequence tokens even possible also issue disables behavior user point view look something like case possible configure cookie name domain individually would possible give user ability specify class implements httpxsrftokenextractor interface maybe possible work properly necessary delete checks lcurlstartswith lcurlstartswith alxhub explain absolute urls require special handling comment means understand problem correctly", "d": "10/2017"}, {"body": "absolute urls require special handling means application handle urls interceptor know whether given url uses token different token token providing interceptor handle cases scope would great thirdparty library think expected behavior token added requests except nonmutating ones irrespective absolute urls two problems leaks security token default origins including third parties yikes breaks cors including extra header server likely permit", "d": "10/2017"}, {"body": "sophisticated check absolute urls would nice instead checking would amazing check absolute url matches url application loaded case guess would ok automatically attach xsrf header would resolve issue people using absolute urls point server", "d": "10/2017"}, {"body": "shlomiassaf works without compiler modification adjust input compiler import configuration module compile time defined template compiler simplify code input value changed simplified webpack controls input compiler either adjust file produced file contains value adjust content file directly using bit overly elaborate", "d": "10/2017"}, {"body": "brandonroberts seems work thanks much struggling weeks use hash based routing apps nt problem use suggested", "d": "10/2017"}, {"body": "could potentially fix issue please see passes", "d": "10/2017"}, {"body": "exact problem sidleal workaround component router event started workaround tick constructor", "d": "10/2017"}, {"body": "figured lightweight workaround instead using replace params entirely accepts reference js intercept request httprequest next httphandler observable gt keeps original request params new httpparams let newparams new httpparams fromstring requestparamstostring add params also chain append conditionally adding params newparams newparamsappend newparam paramvalue newparams newparamsappend anotherparam anothervalue clone request params instead setparams const requestclone requestclone params newparams return nexthandle requestclone hope helps anyone comes across fix", "d": "10/2017"}, {"body": "closed issue bit information stumbled recursion firefox windows", "d": "10/2017"}, {"body": "updated stackblitz ng", "d": "10/2017"}, {"body": "actually found error appear ff route path empty", "d": "10/2017"}, {"body": "fix", "d": "10/2017"}, {"body": "okay nobody helped get problem found reason solution problem tl dr want load modules dynamicly must provide module paths like want load use systemjsngmoduleloader abstraction ngmodulefactoryloader load module given path read concerns full description problem provide routes injection token package compiler able find module paths create map path webpack although think really good solution angular side like provide routes modules related route make routes match anything still inside routers config compiler router uses case nt want present routerconfig created custom moduleloader avoid adding loadchildrens router well", "d": "10/2017"}, {"body": "intellix plan open methods allow function passed way third party plugin created allows css transform values", "d": "10/2017"}, {"body": "closing please reopen needed", "d": "10/2017"}, {"body": "also facing error even importing browseranimationsmodule", "d": "10/2017"}, {"body": "taylorzanekirk rrpatilcse guys use see issue still pops", "d": "10/2017"}, {"body": "bradringel reproduce using go animation detective mode figure broken", "d": "10/2017"}, {"body": "dherges experienced issue writing strictly typed wrapper inject understanding tell typescript instance certain type going created another method since typescript based static type system think origin method typed benefit typing inject like said reduce boilerplate tests better read becomes easier write factory methods tests based would love see angular kind regards greg", "d": "10/2017"}, {"body": "gregonnet yes issue call signature creating new class instance abstract class created maybe would work exmaple httptestingcontroller provided declared maybe would need cover cases", "d": "10/2017"}, {"body": "hey thank much input think found solution prototype getting everything work found later week prepare general solution kinds greg", "d": "10/2017"}, {"body": "looks like dupe see original explanation", "d": "10/2017"}, {"body": "issue error returned string instead object linux updated either nt problem older version two", "d": "10/2017"}, {"body": "updated working previous version believe version also updated previous one throwing error", "d": "10/2017"}, {"body": "fixed pull request angular", "d": "10/2017"}, {"body": "change title issue drop part since apparently affects browsers looks like oldest issue upvoted list dupes also could related pr", "d": "10/2017"}, {"body": "issue empty response postdelete downgrade problem still present", "d": "10/2017"}, {"body": "fixed setting default encoding json serverside sure fix minor version eg", "d": "10/2017"}, {"body": "toub using exactly match", "d": "10/2017"}, {"body": "small clarification error parsing empty content case post put delete setting responsetype text workaround since old http code work correctly httpclient handle error every browser setting responsetype text workaround mentioned related defect httpclient handle snakenstein mentioned using automatically generated code makes workaround less trivial implement counting fact consuming json payloads various vendors making change code server side simple case handling response empty ok hard justify", "d": "10/2017"}, {"body": "agree everything hspier said issue use httpclient continue use older http consider replacement broken unusable issue resolved", "d": "10/2017"}, {"body": "chrome", "d": "10/2017"}, {"body": "issue upgraded", "d": "10/2017"}, {"body": "issue upgraded", "d": "10/2017"}, {"body": "issue upgraded", "d": "10/2017"}, {"body": "ikramcheb could please check content body get response server empty", "d": "10/2017"}, {"body": "also still noticing problem chrome probably rest response server empty angular throws error ca nt parse response json setting fixes manually parse json error responses annoying", "d": "10/2017"}, {"body": "working option change response codes server sends tolerate responses empty bodies nt want set request manually parse json error responses regardless nt want make code change request problem workaround httpinterceptor catches errors status code range returns httpresponse null body instead like httpclient content responses typescript injectable export class emptyresponsebodyerrorinterceptor implements httpinterceptor intercept req httprequest next httphandler observable return nexthandle req catch err httperrorresponse gt errstatus gt amp amp errstatus lt const res new httpresponse body null headers errheaders status errstatus statustext errstatustext url errurl", "d": "10/2017"}, {"body": "would make modals lot cleaner implement", "d": "10/2017"}, {"body": "vilic updates able somehow fix issue", "d": "10/2017"}, {"body": "pardeepcd nope hansl vicb updates", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "issue added polyfillsts manually refenced bootclientts mvc project angular cli also check", "d": "10/2017"}, {"body": "issue inspecting file nodemodules angularcommon license angular header contains line return optionsreduce function merged opt return objectassign merged opt seems returned since vsn", "d": "10/2017"}, {"body": "apparently bundling bug caused still included code including fixed properly downleveled since mentioned docs using polyfill browsers support natively includes nt affect apps", "d": "10/2017"}, {"body": "reppners hi stefan thank explanation however matter try make new httpclient work service using intercept image urls app get url string observable return new observable observer subscriber gt let objecturl string null thishttp get url headers thisgetheaders responsetype responsecontenttypeblob subscribe gt objecturl urlcreateobjecturl mblob observernext objecturl getheaders headers let headers new headers responsetype bloboptions mentioned works", "d": "10/2017"}, {"body": "akolybelnikov use something like case", "d": "10/2017"}, {"body": "btory thank tried work", "d": "10/2017"}, {"body": "try responsetype text json", "d": "10/2017"}, {"body": "sure happens dev mode production dev mode always run bindings twice see change", "d": "10/2017"}, {"body": "bad realized happening makes sens feel free close issue right dev mode double checks since function called every check twice dev", "d": "10/2017"}, {"body": "yes works expected", "d": "10/2017"}, {"body": "closing since nt get feedback everything work expected afaict", "d": "10/2017"}, {"body": "error could found however restarted server everything worked correctly", "d": "10/2017"}, {"body": "confirm directly relates observablesubscribe nt error handler example causes error cause error full stack trace uncaught typeerror read property ngoriginalerror undefined getoriginalerror vendorjs errorhandlerfindoriginalerror vendorjs errorhandlerhandleerror vendorjs objectnext vendorjs safesubscriberschedulerfn next vendorjs safesubscribertryorunsub vendorjs safesubscribernext vendorjs subscribernext vendorjs subscribernext vendorjs eventemittersubjectnext vendorjs", "d": "10/2017"}, {"body": "looks like working angular master please reopen still issue", "d": "10/2017"}, {"body": "looking issue isolated issue file project root put together minimal reproduction", "d": "10/2017"}, {"body": "updates", "d": "10/2017"}, {"body": "tproenca pull request issued days ago author issue aims fix find link comment", "d": "10/2017"}, {"body": "used way reusing old instances change detectors hydration applied however nt anymore update docs refer word anymore case would change detector created updated master already", "d": "10/2017"}, {"body": "closed via", "d": "10/2017"}, {"body": "verify dropdown selected value flips browseranimationsmodule present otherwise stays selected correct", "d": "10/2017"}, {"body": "think updating rxjs typescript made work", "d": "10/2017"}, {"body": "tried downloading example building everything worked fine downloaded link ran tried yarn yarn also node indeed incompatibility certain combinations rxjstypescript versions using ones provided example latest ones packages work since issue old since updated dependencies going close still facing problems please open new issue providing necessary stepsinfo reproducing failure", "d": "10/2017"}, {"body": "responsetype text works well", "d": "10/2017"}, {"body": "alxhub using trying build project webpack find anything enable css source map using", "d": "10/2017"}, {"body": "unfortunately problem webanimations api uses matrices always transition destination matrix value result quickest path used therefore rotation beyond degrees go instead unfortunately nothing done know anything missing webanimations api could help work default setting would super helpful", "d": "10/2017"}, {"body": "activity solution months bug still exists alxhub duplicate issue", "d": "10/2017"}, {"body": "would particularly useful nativescriptangular users currently behind latest angular release would nice select version angular view docs", "d": "10/2017"}, {"body": "ionic users almost never latest", "d": "10/2017"}, {"body": "guide specifically guide archived docs mostly", "d": "10/2017"}, {"body": "another reproduction problem case reorder collection components results visible related stackoverflow question", "d": "10/2017"}, {"body": "alright see something broken look", "d": "10/2017"}, {"body": "update plunker hoping fixed final release matsko hope recent commit suggests", "d": "10/2017"}, {"body": "issue nt fixed yet chuckjaz think needs reopened updated plunker issue remains within plunker also run master set see issue still remains also may due pr revert thoughts matsko", "d": "10/2017"}, {"body": "dharders really appreciate sticking issue providing feedback sorry taking long fix bit tricky since keeps making internal tests fail things right passing back master investigate plnkr get bottom", "d": "10/2017"}, {"body": "ok looking issue dharders", "d": "10/2017"}, {"body": "alright finally working", "d": "10/2017"}, {"body": "awesome thanks seeing matsko", "d": "10/2017"}, {"body": "nt last long commits reverted yet matsko chuckjaz public notice available reverts general made would appreciate reverts communicated originating pr probably also reopening pr would help keeping track going case thanks lot effort", "d": "10/2017"}, {"body": "issue becoming bit like whackamole reopen issue matsko would prefer create new one", "d": "10/2017"}, {"body": "looks like working master branch hopefully reverts", "d": "10/2017"}, {"body": "hooray fix made thanks persisting matsko", "d": "10/2017"}, {"body": "fix issue", "d": "10/2017"}, {"body": "believe running issue named outlet child pathless component plunkr primary outlet seems work layout b sibling namedoutlet breaking unexpected error message plunkr", "d": "10/2017"}, {"body": "hitting bug sending iso datetimes including timezone offset", "d": "10/2017"}, {"body": "problem", "d": "10/2017"}, {"body": "anyone ca nt wait eventual patch able workaround manually encoding appending param httpclent uri via const myencodedqueryparamvalue myqueryparamvaluereplace const uri myuri myqueryparam myencodedqueryparamvalue httpclient right thing append passedin httpparams existing query string", "d": "10/2017"}, {"body": "done implement simple encoder uses browser standard mdn typescript class customencoder implements httpparametercodec encodekey key string string return encodeuricomponent key encodevalue value string string return encodeuricomponent value decodekey key string string return decodeuricomponent key decodevalue value string string return decodeuricomponent value use need httpparams instances", "d": "10/2017"}, {"body": "abelepereira used idea works well nt understand th ngzone needed behaviour saved lot time thanks", "d": "10/2017"}, {"body": "issue angular working facebook js sdk resolved using ngzone hope angular team would find better solution soon issue fbgetloginstatus res gt resstatus connected thisappservicecachedata accesstoken resauthresponseaccesstoken fix fbgetloginstatus res gt resstatus connected thisappservicecachedata accesstoken resauthresponseaccesstoken", "d": "10/2017"}, {"body": "actually problem still relevant new info maybe pr somehow related", "d": "10/2017"}, {"body": "use solution file", "d": "10/2017"}, {"body": "twoheaded reason nt work tokenservice passing httpclient one dependencies inside constructor made tokenservice depend http solution worked although bit hacky get feeling whole interceptors concept really productionready moment", "d": "10/2017"}, {"body": "twoheaded solution works use httpclient", "d": "10/2017"}, {"body": "problem continuing concerned", "d": "10/2017"}, {"body": "setup twoheaded solution works log every step see logic behind understand helps unless return whole thing gon na loop infinitely alxhub also suggested typescript import authservice authservice import injectable injector angularcore import httpinterceptor httprequest httphandler httpevent angularcommon import observable rxjsobservable injectable export class authinterceptor implements httpinterceptor private authservice authservice constructor private inj injector intercept req httprequest next httphandler observable const headers contenttype applicationjson", "d": "10/2017"}, {"body": "worth noting need send http request interceptor get data ie revalidation logic nt want use bare xhrfetch always use classinterface httpbackend omit interceptors send request way plus works mocking backend tests smiley typescript import inject injectable injectiontoken angularcore import httpbackend angularcommon import httpinterceptor httpevent httphandler httprequest httpeventtype httperrorresponse angularcommon import observable rxjsobservable import rxjsaddoperatorretrywhen import rxjsaddoperatorfilter import rxjsaddoperatormergemap import rxjsaddoperatorcatch import rxjsaddobservablethrow import rxjsaddobservableof export const myrequest new injectiontoken myrequest injectable export class myinterceptor implements httpinterceptor constructor inject myrequest private myrequest httprequest private backend httpbackend intercept req httprequest next httphandler observable return nexthandle req retrywhen errors gt return errorsmergemap error httpevent gt error instanceof httperrorresponse amp amp errorstatus return thisbackend handle thismyrequest get response filter event gt eventtype httpeventtyperesponse retry success mergemap gt observableof null stop throw error catch gt observablethrow error using httphandler may problematic cases party library user add interceptors modify request", "d": "10/2017"}, {"body": "provider parse errors instantiate cyclic dependency injectiontokenhttpinterceptors error ngmodule appmodule appmodule using another service", "d": "10/2017"}, {"body": "tried angular problem still exists", "d": "10/2017"}, {"body": "perusopersonale worked flawlessly getting auth service directly injector nice option", "d": "10/2017"}, {"body": "think option call directly without interceptors additioanl feature option use custom interceptors think", "d": "10/2017"}, {"body": "vadjs think httpclient option call httpbackend directly without interceptors inject alternatively use make calls without going earlier interceptors chain", "d": "10/2017"}, {"body": "alxhub already possible maybe documented meanwhile implemented interceptor refresh authtoken using fetch", "d": "10/2017"}, {"body": "bogomips", "d": "10/2017"}, {"body": "issue injecting router constructor injectable export class forbiddeninterceptor implements httpinterceptor constructor private router router intercept req httprequest next httphandler observable return nexthandle req event gt consolelog interceptor invoked err gt consolelog interceptor invoked error instantiate cyclic dependency applicationref error ngmodule appmodule appmodule need router redirect login token expiration http injecting router manually eg nt work return undefined", "d": "10/2017"}, {"body": "okay fixed injecting injector adding get method public get router router return thisinjectorget router", "d": "10/2017"}, {"body": "patrickmichalina save life still nt know put global xmlhttprequest require xml file see question", "d": "10/2017"}, {"body": "need handle problem", "d": "10/2017"}, {"body": "alxhub status really looking forward", "d": "10/2017"}, {"body": "setting observe option documented", "d": "10/2017"}, {"body": "closing since nt get feedback nobody else complained problem persists please open new issue details btw may related ie underlying cause", "d": "10/2017"}, {"body": "issues ngrx loading data child component one results http response shown parent component results error looking examples reading robwormald explanation makes sense simple representation problem looks like appcomponentts ts import component angularcore import store ngrxstore component selector approot template root counter counter async export class appcomponent counter thisstoreselect state gt statecounter constructor private store store countercomponentts ts import component oninit angularcore import store ngrxstore component selector counter template counter counter async export class countercomponent implements oninit counter thisstoreselect state gt statecounter constructor private store store onincrement thisstoredispatch type increment ondecrement thisstoredispatch type decrement ngoninit thisstoredispatch type increment cause error dispatch wrapping works feels really hacky looks like defeats purpose using store somehow totally understand fails check already passed changing data results update view hand feels really weird using ngrx singlesource truth data store updates result update view", "d": "10/2017"}, {"body": "pfrendo issue still relevant", "d": "10/2017"}, {"body": "cheap since already dived responsible could least point developerproject could yell angry", "d": "10/2017"}, {"body": "cheap could least point developerproject could yell already mentioned igorminar best guess make guesses without actual minimal reproduction zonejs bundled polyfill bundle bundle loaded please check browser loaded zones test files yelling developerproject might wnat verify fact seem missing file probably causing issues please consider yelling oss maintainersdeveloper spoils fun smiley", "d": "10/2017"}, {"body": "question mine showing possible case usage tldr like inject separate logger instances various components services proposal would make story bit convenient solve little verbosity", "d": "10/2017"}, {"body": "workaround see actual request received", "d": "10/2017"}, {"body": "priteshacharya call verify method likely better", "d": "10/2017"}, {"body": "able trigger expressionchangedafterithasbeencheckederror form validators error plunker using simpler example mutable object passing formgroup inputs many forms problem nt happening prior please inform something fixable", "d": "10/2017"}, {"body": "best practice works settimeout gt thisrouternavigate lazymodule", "d": "10/2017"}, {"body": "might able use optional route param instead query param maybe something like would show", "d": "10/2017"}, {"body": "nt work", "d": "10/2017"}, {"body": "resolved lands", "d": "10/2017"}, {"body": "angular js clear cache code working properly angular nt work solution", "d": "10/2017"}, {"body": "tbosch stated issue description based stackoverflow answer used work angular nt tried though", "d": "10/2017"}, {"body": "nice know fixed would expect something like would included maintenance release well", "d": "10/2017"}, {"body": "th october compile latest released version angular latest typescript scrictnullchecks failures error nodemodules class defaultiterabledifferfactory incorrectly implements interface iterabledifferfactory types property create incompatible type trackbyfn trackbyfunction undefined gt defaultiterablediffer assignable type trackbyfn trackbyfunction undefined iterablediffer cdr changedetectorre error nodemodules class defaultiterablediffer incorrectly implements interface iterablechanges types property foreachoperation incompatible type fn item iterablechangerecord previousindex number null currentindex number null assignable type fn record iterabl error nodemodules class defaultiterablediffer incorrectly implements interface iterablediffer types property diff incompatible", "d": "10/2017"}, {"body": "speaking angular compatible typescript official version compatibilitydependency table anywhere angular nt found one", "d": "10/2017"}, {"body": "afaik typescript supported angular schrieb peter marklund notifications githubcom speaking angular compatible typescript official version compatibilitydependency table anywhere angular nt found one receiving subscribed thread reply email directly view github mute thread", "d": "10/2017"}, {"body": "work ts use instead might work work sure requires ts also compatible", "d": "10/2017"}, {"body": "perfect need use newer ts versions combine want stricter typechecking code anyway", "d": "10/2017"}, {"body": "seem two definitions one consider making coremodule pure services module declarations page sample departs advice declaring exporting two components used within root appcomponent declared appmodule someone following guideline strictly would declared components appmodule instead one gather applicationwide single use components coremodule import appmodule app starts never import anywhere else eg navcomponent spinnercomponent", "d": "10/2017"}, {"body": "see nt work services work components angular", "d": "10/2017"}, {"body": "vouched works well understanding fixes issue released yet writing", "d": "10/2017"}, {"body": "yes good keep", "d": "10/2017"}, {"body": "updated everything latest works hacking required latest rxjs latest problem", "d": "10/2017"}, {"body": "use lift open source projects normally quite bit bugs use different releases modules encountered best way far nt encountered problem lift issue", "d": "10/2017"}, {"body": "need latest fixes lift operator observable build works", "d": "10/2017"}, {"body": "closed via", "d": "10/2017"}, {"body": "also causes problems us primeng like writevalue called used template driven ngmodel reactive forms causing difference behaviors would great reactive regular forms behave component authors nt need deal differences eshcharc please provide info workaround current workaround getting formcontrol call thisformcontrolsetvalue writevalue elements formcontrol triggered well", "d": "10/2017"}, {"body": "cagataycivici valid workaround library reactiveform components talking wrapper component input type hidden still need passin formgroup formcontrolname real custom control sorry", "d": "10/2017"}, {"body": "igorminar nt issue get higher priority involves case multiple usages formcontrol intense reactive form based application happens quite often", "d": "10/2017"}, {"body": "ladyleet thanks help gkalpak thanks references good information understanding ie handles memory spa applications reducing size component issues cleaning memory leaks throughout application helped considerably nt received memory error weeks hopefully locked enough", "d": "10/2017"}, {"body": "came across issue saw would seem circular reference dom javascript eg event handlers call backs closures held dom disconnected via shutdown hook eg classic c destructor nulls references leaks dom js objects clear refresh seems chromefirefox use crashonly code window onunload callback never executed ie needs workarounds capture settimer settimeout addeventlistener calls unregistry pool explicitly removeeventlistener canceltimer onclose preonclose whatever problem ca nt find way override system level framework would course careful could memory leak holding unregister closures", "d": "10/2017"}, {"body": "btw according bug report seems leaks related devtools open anyone tried reproducing leaks devtools closed", "d": "10/2017"}, {"body": "got issue using rxjs angular subscribe observable object provided di service work around use settimeout work around works tricky feel good", "d": "10/2017"}, {"body": "ngonchanges changes simplechanges trick", "d": "10/2017"}, {"body": "anyone looking workaround try create dependency holder add providers array create factory add factory dep providers array", "d": "10/2017"}, {"body": "try date pipe", "d": "10/2017"}, {"body": "resource", "d": "10/2017"}, {"body": "could closed last mention someone running angulario months ago igorminar seen lately", "d": "10/2017"}, {"body": "possible reason behaviour may async code running outside angular zone case googleapi library wrapping callback solved problem ngoutlet", "d": "10/2017"}, {"body": "updates experiencing issue", "d": "10/2017"}, {"body": "minmax introduced upcoming major version wait", "d": "10/2017"}, {"body": "node npm project also using ionic ionicappscripts angular solution seems work anyone thing ps versioning always main problem sigh", "d": "10/2017"}, {"body": "downgraded working", "d": "10/2017"}, {"body": "never documented intended work way behaved way fixed issue sorry", "d": "10/2017"}, {"body": "added", "d": "10/2017"}, {"body": "chuckjaz news still present way also attributes like", "d": "10/2017"}, {"body": "closing issue unresolved", "d": "10/2017"}, {"body": "jasonaden chance take closer look already also think issue duplicate", "d": "10/2017"}, {"body": "jasonaden hi updates posted possible solution", "d": "10/2017"}, {"body": "link tracking bug", "d": "10/2017"}, {"body": "updates angular language service annoying seeing error mostly need errors validations like instead", "d": "10/2017"}, {"body": "dawidgarus could create plunker example sure get directive working", "d": "10/2017"}, {"body": "dgolverdingen constructor directive changed need change little bit order match", "d": "10/2017"}, {"body": "hi used solution less weeks ago moving towards problems unspooling new routeroutlet directive creating myoutletdirective dawidgarus shown able manage structure like starting use deeper path like deeper route works creation structure seems attempts activate deeper route method suppose comes constructor relative myoutletdirective instead first level routes constructor oninit myoutletdirective see call method suggestion", "d": "10/2017"}, {"body": "note ng fixed via", "d": "10/2017"}, {"body": "facing issue problem appears affect well", "d": "10/2017"}, {"body": "aminpaks thanks plugin works great", "d": "10/2017"}, {"body": "importing codemirror results except indexjs codemirror package", "d": "10/2017"}, {"body": "landed", "d": "10/2017"}, {"body": "updates got issue", "d": "10/2017"}, {"body": "onyphlax thanks man spent almost one day figure disabled ad blocker worked", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "seems fixed", "d": "10/2017"}, {"body": "updates", "d": "10/2017"}, {"body": "iv tried get scroll event work div inside another scrollable div event nt fire", "d": "10/2017"}, {"body": "alternative wait better implementation angular typesafe reactive forms", "d": "10/2017"}, {"body": "agree dev overhead required getting basic angular working complete joke open bugs red flag", "d": "10/2017"}, {"body": "still issue stay within lazy loaded modules set routes works fine click different lazy loaded route nt loaded yet get null edit turns issue using ngif routeroutlet ex", "d": "10/2017"}, {"body": "thank picninim informing us correct usage works", "d": "10/2017"}, {"body": "guys news bug", "d": "10/2017"}, {"body": "probably missing context following route nt component set componentless route wo nt component provided far remember even replace provide component instance provide component instance bug basically routes components set receive expected behavior", "d": "10/2017"}, {"body": "hi nt know still facing issue things make test pass need remove extension resolution webpacktestconfig call right testing object specbundlejs finally call platformbrowserdynamictesting function specbundlejs sample repo working machine changes force typescript though hope helps cheers", "d": "10/2017"}, {"body": "looks like link also broken past week file looks like compiler options would great add docs", "d": "10/2017"}, {"body": "issue also please angular team fix problem issue", "d": "10/2017"}, {"body": "thank kemaltulum solution works well", "d": "10/2017"}, {"body": "activity solution months bug still exists jasonhodges still angulars radar significant bug opinion duplicate issue", "d": "10/2017"}, {"body": "anyone runs issue needs attribute component downgraded workaround implemented would use follows seems hooking correctly mechanism attribute directives rendered properly angularjs app", "d": "10/2017"}, {"body": "closed", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "chuckjaz updates", "d": "10/2017"}, {"body": "jelbourn tinayuangao investigation bug determined directory layout used build laid way complier expects causing lose track look metadata checkbox files steps reproduce change easier reproduce bug steps clone npm install change class declaration issue handling assumption metadata redirect subdirectory final metadata instead directory case compiler marks directory holding index directory recheck state files directory causes treated source file collects metadata instead using metadata reported issue elsewhere inherits find correct metadata class marked directive symbol module bundled alias current work around works compiler ignore classes expression clause class workaround break tries support expression simplifying expression class changes metadata copied adds metadata required nt copy possible solutions change directory structure place subdirectory advantage working well fix handle files subdirectory index improve detection bundled files use determine files bundled", "d": "10/2017"}, {"body": "work angular needs charge content downgraded component case angularjs owns whatever inside downgraded components since angularjs directive unfortunately possible make work downgraded components clear still work fine", "d": "10/2017"}, {"body": "seen well", "d": "10/2017"}, {"body": "ran similar problem problems chrome firefox error baseanimationrendererprototypesetvalue checkandupdatetextinline checkandupdatenodeinline checkandupdatenode debugcheckandupdatenode debugcheckrendernodefn anonymous function function debugupdaterenderer", "d": "10/2017"}, {"body": "error related forms actually throw error try set property attribute value support eg part causing error note angularspecific would get error manually", "d": "10/2017"}, {"body": "issue even decorate abstractclass component nt works build angular language service tell error angular component abstractform included module available inside template consider adding ngmodule declaration nt want add abstract class ngmodule abstraction never use inside template dev mod works even angularlanguageservice awar even one add ngmodule cause angular aot compiler complain fact base component abstract class type typeof mybasecomponent assignable type type assign abstract constructor type nonabstract constructor type", "d": "10/2017"}, {"body": "think problem angular decorator compiler collect metadata constructor wondering putting abstract class make work without errors", "d": "10/2017"}, {"body": "mean adding top", "d": "10/2017"}, {"body": "nope cause compiler collect metadata class decorator nothing cause warnings runtime implications", "d": "10/2017"}, {"body": "make clear typescript injectable injectable base class export abstract class abstractform abstract data constructor protected dialog dialogservice component component derived class export class abccomponent extends abstractform data", "d": "10/2017"}, {"body": "using inside abstract class still would nt possible would", "d": "10/2017"}, {"body": "valid email think need implement argument code faster example reactive model using attribute", "d": "10/2017"}, {"body": "mhevery first thanks angular team hard work always light fact always strong commitment community support anyone shed perspective issue outlined crossroads issue substantial amount time material refactoring effort involved using touch dom support datadriven animations svg elements alternatively using layout calculations angular handles dom including animations clearly preference separating concerns using angular handle dom possible svgrelated animations clear guidance end would alright abandon use angular animations would unfortunate least create planning certainty thanks advance pointing angular contributor shed light matter", "d": "10/2017"}, {"body": "aitboudad quite warning care elaborate", "d": "10/2017"}, {"body": "use seems work using", "d": "10/2017"}, {"body": "pearpages removing fix reproduction issue", "d": "10/2017"}, {"body": "karptonite removing fix issue", "d": "10/2017"}, {"body": "stumbled upon slightly different problem kind opposite seeing strange routable component destroyrecreate nt include option param subscription cases trying get reproduction", "d": "10/2017"}, {"body": "bennadel saying component destroyed recreated params changed occurs nt include delay", "d": "10/2017"}, {"body": "richarddavenport yes correct far isolated appears synchronous navigation away component within callback suspect adding provides ticket navigation event hope working isolated demo later today", "d": "10/2017"}, {"body": "richarddavenport sorry digging appears issue nothing race condition navigate away component close call wrote blog sorry distraction also created new ticket seems affect chrome", "d": "10/2017"}, {"body": "ok noodling think issue behavior shown even navigate away component page long time", "d": "10/2017"}, {"body": "surprised people nt come across yet seems pretty big flaw decent solution possible detect first route navigated ie page load could redirect else simply return false", "d": "10/2017"}, {"body": "seems working assume ever empty string first load index gives value", "d": "10/2017"}, {"body": "hi issue canactivate returns false route nt stay previous one instead goes blank like try navigate canactivate triggered returns false get blank case dont want return need stay last route navigated ie refresh", "d": "10/2017"}, {"body": "really nt get return type canactivate boolean observable example boolean routercommands observable would force forget new router commands", "d": "10/2017"}, {"body": "updates using latest version angular", "d": "10/2017"}, {"body": "jasonaden word need anyone else thread need build particular version angular let know get posted myget feed pull", "d": "10/2017"}, {"body": "hi solution issue taken care next updates issues comes user changes url browser url tries navigating page allowed canactivate condition returning false alternative please suggest", "d": "10/2017"}, {"body": "reactive forms validator works", "d": "10/2017"}, {"body": "reproduce put inside work ps seems related", "d": "10/2017"}, {"body": "perfect thanks tip works project nicely", "d": "10/2017"}, {"body": "using solution using jitcompilerfactory load runtime compiler custom decorators preserve component module metadata demo ca nt get work cli buildoptimizer", "d": "10/2017"}, {"body": "solution", "d": "10/2017"}, {"body": "trying import browseranimationsmodule giving error unexpected token lt", "d": "10/2017"}, {"body": "use similar code template plunker angular gitter located top part screen", "d": "10/2017"}, {"body": "news reproduce error", "d": "10/2017"}, {"body": "wondering wether angular parsing templates components destroying native js jit see inspector template parsing functions called could nt easy fix parse component templates used words like real jit", "d": "10/2017"}, {"body": "yes jit parse everything upfront aot know everything upfront jit intended use production convenience development feature behaves like aot guess way forward ditch jit altogether develop precompiled angular able incrementally compile app via make possible", "d": "10/2017"}, {"body": "tinganho implemented originally way compatibility reasons aot template parsing changed parse everything boot time", "d": "10/2017"}, {"body": "ok another follow question people use angular router heavily avoid template parsing janking think many importing everything app module declares everything", "d": "10/2017"}, {"body": "definitely way also break app smaller chunks nt deliver one big bundle client upfront", "d": "10/2017"}, {"body": "two libraries draftingcommon amp draftingservices built using bundled rollup two formats es umd using angularcli project packing libraries using npm pack install tgz files project directory reference modules services libraries inside angularcli project run ng build result webpack compiled successfully ng serve also compile amp run successfully issue comes browse load project page getting error sharedmodule exposed draftingcommon library exposed component looked library file webpack file draftingcommonesmjs complied rollup installed using npm pack project shows following code var buttoncomponent class function function buttoncomponent buttoncomponentprototypengoninit function buttoncomponent decorate component selector button template n button works nn styles metadata design paramtypes buttoncomponent return buttoncomponent var sharedmodule class function function sharedmodule sharedmodule decorate ngmodule imports routermodule commonmodule declarations buttoncomponent datepickercomponent defaultcomponent showmoredirective navbarcomponent safehtml providers provide toastrtoken usevalue toastr exports buttoncomponent datepickercomponent defaultcomponent showmoredirective navbarcomponent safehtml sharedmodule return sharedmodule export sharedmodule buttoncomponent utilities idea getting error need import component directive nt bundled rollup first time also noticed libraries bundled rollup used angularcli webpack bundle restriction thanks", "d": "10/2017"}, {"body": "problem antjanus writing custom lib using putting top everything solved", "d": "10/2017"}, {"body": "ran issue yesterday running tour heroes working fine linux pc cloning macbook pro attempting run produces error compile output looks fine getting runtime error leading blank page attempted multiple mentioned based fixes avail went trouble using yarn lock exact versions reinstalling version angular cli platforms making sure using version node still luck hope info helpful", "d": "10/2017"}, {"body": "problem antjanus tinganho writing custom lib using reflectmetadata putting top everything solved thanks tinganho", "d": "10/2017"}, {"body": "opposite adding module declarations helped thanks", "d": "10/2017"}, {"body": "case error accidentally imported component necessary imported first angular errors helpful", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "problem withcredentials true nt working use angular", "d": "10/2017"}, {"body": "abdhafid help provide reproduction please", "d": "10/2017"}, {"body": "upgrading angularjs angular authentication call ws spring get list objects angularjs working request header contains parameter called cookie value include parameters setcookie response angular ko cookie parameter contains setcookie response parameters using headerwithcredentials always unauthorized spring exception orgspringframeworksecurityauthenticationinsufficientauthenticationexception full authentication required access resource", "d": "10/2017"}, {"body": "abdhafid use template starting point", "d": "10/2017"}, {"body": "ca nt reproduce problem must call spring ws", "d": "10/2017"}, {"body": "call anything plunker within internet cors problem nothing related spring specifically actually conversation quite clear nt valid backend configuration reproduce backend tell part wrong although something happen channel", "d": "10/2017"}, {"body": "belive problem using proxyconfjson", "d": "10/2017"}, {"body": "withcredentials true working gets posts", "d": "10/2017"}, {"body": "withcredentials true working gets posts breitling clear evidence nt valid cors setting try add custom headers get use post get opposite", "d": "10/2017"}, {"body": "found problem finally weeks hard work using localhost front back google chrome juged secure share cookies host stupid browser", "d": "10/2017"}, {"body": "fyi new fix merged master released next edit nope pr reverted maybe", "d": "10/2017"}, {"body": "fixed", "d": "10/2017"}, {"body": "istiti yep recently released fix note use newer syntax though work ie query animatechild etc see example", "d": "10/2017"}, {"body": "nt need animatechild works template go hello world awesome", "d": "10/2017"}, {"body": "istiti specified animatechild needed leave animations child component parent removed dom yes awesome", "d": "10/2017"}, {"body": "first let define two types tests care testing application sections render multiple components multiple guards quite tests similar testing individual routable components guards resolvers testing application sections routertestingmodule solves first problem fairly well run tests router fakeasync gt component selector routable template x async class routablecomponent x thisroutedatamap gt dx component selector simple template class container testbedconfiguretestingmodule declarations container routablecomponent providers provide someresolver usevalue gt promiseresolve imports routertestingmodulewithroutes path routable component routablecomponent resolvers x someresolver const testbedcreatecomponent container const router router testbedget router routernavigatebyurl tick expect tnativeelementinnerhtml tocontain since goal test test component tree components productionlike env hard make concise mimic prod code one thing away container unit testing components router nt provide good enough job testing individual components resolvers guards let look component first component selector routable template x async specialmode class routablecomponent x thisroutedatamap gt dx specialmode boolean constructor private route activatedroute routesnapshoturl path special thisspecialmode true unit testing component difficult requires us write something like run component isolation fakeasync gt testbedconfiguretestingmodule declarations routablecomponent providers provide activatedroute usevalue data x snapshot url path special const testbedcreatecomponent routablecomponent creating test doubles brittle gets harder need route children unit testing resolvers gets even worse testing resolvers guards export someresolver implements resolve constructor http resolve route activatedroutesnapshot state routerstatesnapshot observable creating test double routerstatesnapshot even brittle difficult means practice routable components guards resolvers tested fashion shown much boilerplate look closer see router actually testable activatedroutesnapshot routerstatesnapshot activatedroute routerstate immutable data objects routable components guards resolvers trivial test issue objects complex provide way create tests let fix proposal let introduce helper functions import createroutestatesnapshot createroutestate createactivatedroutesnapshot createactivatedroute angularroutertesting const config path routable component routablecomponent resolvers x someresolver const snapshot createroutestatesnapshot config routable const state createroutestate config routable const routesnapshot createactivatedroutesnapshot config routable const route createactivatedroute config routable helper functions writing tests get lot easier run component isolation fakeasync gt testbedconfiguretestingmodule declarations routablecomponent providers provide activatedroute usevalue createactivatedroute path routable component routablecomponent data x routable const testbedcreatecomponent routablecomponent simplify making properly optional used often run component isolation fakeasync gt testbedconfiguretestingmodule declarations routablecomponent providers provide activatedroute usevalue createactivatedroute path routable data x routable const testbedcreatecomponent routablecomponent testing resolver easy const new someresolver fakehttp const state createroutestatesnapshot path routable data x routable expect await sresolve stateroot state toequal somevalue finally addition helper function need provide way query router state like achieve much easier unit test routable components much easier unit test guards resolvers much easier write isolated tests without angular implementation notes router uses three functions applyredirects recognize createrouterstate implementing createroutestatesnapshot difficult invoke applyredirects recognize createrouterstate", "d": "10/2017"}, {"body": "vsavkin thanks detailed notes overall think good help lot router testing commentsquestions look first example current way unit testing components quite verbose mention get worse child components looking unit test code solution slightly less verbose perhaps additional helper function simply ties component activatedroute injectables would like see way solution could help testing things changing data params resolved values time part issue could push another one later implementation notes mention would run applyredirects recognize createrouterstate wondering right api unit test developer able pass end state get back valid routerstatesnapshot way component tested isolation separate router configuration thoughts", "d": "10/2017"}, {"body": "yup thanks writeup like could fit setup routertestingmodule instead test author separately mocking activatedroute friends feels natural odd special routertestingmodule still sorts manual providing overrides many components need use routertestingmodule components like routerlink regardless activated route comes", "d": "10/2017"}, {"body": "jasonaden look first example current way unit testing components quite verbose mention get worse child components looking unit test code solution slightly less verbose perhaps additional helper function simply ties component activatedroute injectables yup still bit verbose less brittle think suggesting good looked really router issue testbed issue perhaps testbed function combines meanwhile nothing prevent end user writing function would like see way solution could help testing things changing data params resolved values time part issue could push another one later good point implementation notes mention would run applyredirects recognize createrouterstate wondering right api unit test developer able pass end state get back valid routerstatesnapshot way component tested isolation separate router configuration thoughts thought reason nt go route nt want developer learn two separate apis one writing prod code one unit tests thought might easier developer grab existing router config also makes difference prod code test code smaller think good thing happy explore option instance instead", "d": "10/2017"}, {"body": "sorry long writeup hopefully clarify things routerheavy code tested testing important clearly separate following three things testing components testing guardsresolvers testing navigations individual components nt know navigation triggered instantiation also nt know guards resolvers ran navigation think good otherwise would much harder test components isolation individual guardsresolvers nt know navigation invoked good tested isolation components guards resolvers units tested isolation also units need carefully design instance applying tdd tests nt check one guard returns true resolver b returns bob component c render hello bob check guard returns true false check resolver returns bob throws router navigation comprises running guards resolvers instantiating components router speak called preactivation activation nt unit tested without guards resolvers components involved tested isolation router actually run execute navigation testing talked two types tests comment test integration tests allow us test everything test navigations unit tests router navigations nt code units example say module looks like tested fashion integration tests first write integration test like class container render mycomponent fakeasync gt const r router testbedconfiguretestbed declarations container imports mymodule routertestingmodule providers provide currentuser usevalue role admin get router const c testbedcreatecomponent container tick rnavigatebyurl tick expect cnativeelement tocontain blah test whole module mock boundaries module currentuser containing component boilerplate trivial create helper remove like class container helper place rewrite test look like render mycomponent fakeasync gt const c performnavigate imports mymodule providers provide currentuser usevalue role admin expect cnativeelement tocontain blah note helper generic applicationindependent design applicationspecific helper remove rest boilerplate see result test concise hence router support integration tests good unit tests think router lacking support unit tests would like test permissionsguard someresolver mycomponent unittest fashion difficult due fact construct state route objects suggested", "d": "10/2017"}, {"body": "juliemr thought nt come good way thoughts integration isolated first let restate point routertestingmodule works well writing integration tests testing router navigations phrase integration tests extremely overused see comment define mean actually call side spectrum isolated tests might opinion use testbed common test components fashion even though personally fairly common test services resolvers guards like common use case think good idea option write unit tests without using routertestingmodule one limitation keep mind routerstate tree activated routes create tree components corresponding tree activated routes without actually performing router navigation testbed describes one injector need tree injectors time want test several components using activated routes time resort integration test means unit test single component activated route options thought reusing routertestingmodule unit tests find difficult two reasons say something like testbedconfiguretestbed declarations componenta componentb imports routertestingmodulewithroutesinaunittestfashion child need provision url actually navigate anywhere place pass params path component componenta children path child component componentb const testbedcreatecomponent componenta nt actually create componentb const b testbedcreatecomponent componentb gets activated route componenta mentioned without actually navigating create single activated route confusing moment router configuration children think clearer providing single activatedroute like testbedconfiguretestbed declarations componenta componentb imports routermodule imports directive providers provide activatedroute usevalue createactivatedroute child path children path child const testbedcreatecomponent componenta createactivatedroute clearly test helper creating activated route object assumption somehow instantiate componentb pass right activated route componentb also test helper make schema permissive instance nt need pass components componentb nt even provisioned course like testbedconfiguretestbed declarations componenta imports routertestingmodulewithactivatedroute child path children path child const testbedcreatecomponent componenta thought find one thing problematic since routertestingmodule built integration tests creates real router means component calls router try navigate means router configuration must support target url makes harder test components isolation summary hard reuse routertestingmodule unit tests nt call routertestingmodule creates router object creates tree activated routes think clear integration tests actually perform real router navigations boilerplate easy developer write helper get rid see example comment maybe addition making unit tests simpler provide helper make integration tests simpler similar one defined comment", "d": "10/2017"}, {"body": "agree functionality unit tests nice problem integration tests still need mock activatedroute think confusing thing trying test would large component injects activatedroute contains things like routerlinks possibly routeroutlets child routes inside", "d": "10/2017"}, {"body": "juliemr agree developer time createactivatedroute required since provide way folks write isolated tests using testbed common services guards etc something like seems required lowlevel primitive useful used app developer build sophisticated test utilities right question question could something top simplify testing large components router directives manual mocking createactivateroute component inject router something like upside direct magic going clear component tested mocking router add sort add directives add add implementation router mocked call createactivatedroute hood even provide syntax sugar like works downside may clear nt create real router creates test double instead also nt execute navigation guard might expect run wo nt thoughts", "d": "10/2017"}, {"body": "getting error fix new angular error unexpected value http imported module appmodule please add ngmodule annotation syntaxerror compilemetadataresolverprototypegetngmodulemetadata lt foreach compilemetadataresolverprototypegetngmodulemetadata jitcompilerprototypeloadmodules jitcompilerprototypecompilemoduleandcomponents jitcompilerprototypecompilemoduleasync platformrefprototypebootstrapmodulewithzone platformrefprototypebootstrapmodule webpackrequire webpackjsonpcallback", "d": "10/2017"}, {"body": "mohanasundaramrebel would great explanation http module angular first check imported whether correct name work aot mode", "d": "10/2017"}, {"body": "library built wanted consume angularcli project reference lib project appmodulets approutingts error throwing runtime sometime run ng build research find using yomen sample provide found little difference ngmodule generated appear changed code comply format used nt help resolving error conduct debugging browser angularcli code find library code vendorbundlejs file components initiated properly app run bootstraping function code fails throwing error seems missed step configure library project somebody suggest steps guideline consume angular library project angularcli", "d": "10/2017"}, {"body": "people telling u remove node modules folder lib completely remove ability develop lib test time since need lib deps installed order build etc", "d": "10/2017"}, {"body": "ultimately cli app build start adding additional scripts development libraries gets around problem without exotic things like build directory outside library source tree link using create libraries works great anyone interested affiliated work pr add auto version migration", "d": "10/2017"}, {"body": "actually fixed issues able run library new project part fix two things remove line import reflectmetadata commonts file common library using export class static function like forroot return modulewithproviders ngmodule instead exporting normal class sure first point caused error took two days isolate code line line find caused issue fix", "d": "10/2017"}, {"body": "work team complex project developed angular project structured way angularclidemoapp demo app use test components component library based angular inside angularclidemoapp refer alfrescoangularcomponent using tsconfigjson path nt use path reference strategy everything worked fine way fix problem us delete angular folder inside nodemodules components shared folder think error even referred angular path tsconfigjson like reason component still following npm closer parent nodemodules folder rule get angular library resulting multiple angular running project multiple ngmodule suppose error hope explanation save debug time others also project offers reference wants build project components library", "d": "10/2017"}, {"body": "experiencing similar issue parent component property toggled upon click subcomponent added view via subcomponent animation host bindings triggered upong enterleave ie typescript component selector subcomponent host styledisplay block styleoverflow hidden enterleaveanimation animations trigger enterleaveanimation transition leave style height animate style height transition enter style height animate style height template export class subcomponent works fine subcomponent viewchild parent component like however work subcomponent actually contentchild parent component ie grandparent component template something like parent component template time uses transclusion insert subcomponent like case subcomponent animation triggered changes", "d": "10/2017"}, {"body": "experiencing issue updates", "d": "10/2017"}, {"body": "actually pr fix issue revert several times hope fix", "d": "10/2017"}, {"body": "confirmed bug still exists angular", "d": "10/2017"}, {"body": "rather including functionality ngc think would great ngc able take take vinyl files stream input emit would allow ngc included gulp pipeline much easily ngc focus job think ngc included inlining would much", "d": "10/2017"}, {"body": "please help add role user firebase", "d": "10/2017"}, {"body": "progress issue pr referenced issue still pending frequency seems bigger initialy estimated", "d": "10/2017"}, {"body": "kirjai check make sure set also make sure spelled correctly correct casing casing issue", "d": "10/2017"}, {"body": "sad see problem yet solved even animations focused making animations reusable", "d": "10/2017"}, {"body": "anyone still curious fix import generic rather resolve issue see stackoverflow", "d": "10/2017"}, {"body": "importing whole considered bad practise since import operators including ones nt use make bundle big recommend using lettable operators recently introduced allow better tree shaking", "d": "10/2017"}, {"body": "included angular", "d": "10/2017"}, {"body": "yes", "d": "10/2017"}, {"body": "ever work nt support class", "d": "10/2017"}, {"body": "known workaround issue", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "template also got problem identifier minlength defined type contain member identifier maxlength defined type contain member code car name minimum chars car name exceed chars note code nt stops code working fine shows error leke template one please help struked would thanks ram", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "th october compile latest released version angular latest typescript scrictnullchecks failures error nodemodules class defaultiterabledifferfactory incorrectly implements interface iterabledifferfactory types property create incompatible type trackbyfn trackbyfunction undefined gt defaultiterablediffer assignable type trackbyfn trackbyfunction undefined iterablediffer cdr changedetectorre error nodemodules class defaultiterablediffer incorrectly implements interface iterablechanges types property foreachoperation incompatible type fn item iterablechangerecord previousindex number null currentindex number null assignable type fn record iterabl error nodemodules class defaultiterablediffer incorrectly implements interface iterablediffer types property diff incompatible", "d": "10/2017"}, {"body": "still happening work around", "d": "10/2017"}, {"body": "meriturva struggling shit days solved problem react minutes google search common sense", "d": "10/2017"}, {"body": "ybrodsky using component bind enough", "d": "10/2017"}, {"body": "mlcmlapis thank much kind sir", "d": "10/2017"}, {"body": "problem still present angular", "d": "10/2017"}, {"body": "still present point outlets completely unusable thanks angular team", "d": "10/2017"}, {"body": "fwiw using following workaround", "d": "10/2017"}, {"body": "akorchev confirm works found solution ugly especially want adapt ngrx routing actions", "d": "10/2017"}, {"body": "update", "d": "10/2017"}, {"body": "issue reported application update updating resolved issue issue please file new issue includes link repository reproduces issue", "d": "10/2017"}, {"body": "obsolete", "d": "10/2017"}, {"body": "also discussed depth", "d": "10/2017"}, {"body": "toxicable artaommahe related stackblitz demo old stuff unusable real life business applications much code overhead inserting normal html dynamic component loader solution addition inserting html without databinding nt use case dealing daily life stands solution loading layout html component fly angular", "d": "10/2017"}, {"body": "karlxol im sorry must misunderstand things demo works old stuff makes something old bad much code overhead inserting normal html implement html normal overhead nt know mean even npm packages real life business applications well angulario uses nt know got information inserting html without databinding data binding work stands solution loading layout html component fly angular yes", "d": "10/2017"}, {"body": "toxicable work databinding update demo myvar template show works thanks advance", "d": "10/2017"}, {"body": "karlxol cant interpolate directly html never going work without compiling html isnt point demo databind components point show dynamic layouts reuse components whatever way want reusing component nt need anything recompiled asking dynamically compiled templates makes sense context", "d": "10/2017"}, {"body": "toxicable currently way case except using jit compile markup content projection runtime cant see way hundreds random makrups changed time precompiled", "d": "10/2017"}, {"body": "toxicable could kind edit demo contain textfield binds value variable named make component use value parameter value displays basically need pass parameters dynamically created component updated time value updates textfield tried dozens different approaches ca nt get work ca nt get html directly need component called possible", "d": "10/2017"}, {"body": "swftvsn create new instance component get reference example access component like", "d": "10/2017"}, {"body": "dynamic loading html object fundamental feature angular unfortunately name performance available future feature come", "d": "10/2017"}, {"body": "toxicable thanks demo dynamic event binding html object working eg keypress ngonchanges input object", "d": "10/2017"}, {"body": "thanks mlcmlapis input explored possibilities day need probably done using dynamic components two things thought chasing rabbit hole official documentation could bit better feel good detailed rest angular docs even though use cases accomplished using current api feel could lot easier intuitive community spoiled using awesome framework thus tend expect everything easy nice", "d": "10/2017"}, {"body": "swftvsn official doc topic course could contain examples especially trivial one allow quick way catch basic idea", "d": "10/2017"}, {"body": "one question though make mustache templates live seem getting stuff like rows someprop already solved dynamic component part even nesting stuff loops ca nt seem find good approach solve one replasing stuff component component must leave trace really messes table replacetrue work anymore bit stumped one directive wo nt also work nothing attach ideas", "d": "10/2017"}, {"body": "mlcmlapis actually think official documentation caters simple case leaves hard parts unanswered like digesting mustachio templates third party generated html replacing parts live angular components understand speed rest comes aot nature angular makes many things hard good choice ask perfect world would still allow jit easily side side aot places devs see fit", "d": "10/2017"}, {"body": "swftvsn cases suitable like normal component template columns applying pattern also dynamic component also unusable concept always create trace nested element allowed inside table structure sure think chance wrap whole table dynamic component contain subcomponents like repeated using", "d": "10/2017"}, {"body": "needed anymore master uses old compiler api good tests summaries angularcompilercli well via tests bazel", "d": "10/2017"}, {"body": "ok close", "d": "10/2017"}, {"body": "stefdelec update please", "d": "10/2017"}, {"body": "makes targetting requirement framework using answer main reason libs outside start using nt complie ask author complie nt want make lib heavy complie lead topic finding uglify error secondary reason lighter faster common according netflix device", "d": "10/2017"}, {"body": "temporary dirty fix indexhtml function angular version tmp fix var getprototypeof objectgetprototypeof objectgetprototypeof function obj obj return null return getprototypeofapply object obj", "d": "10/2017"}, {"body": "jinder nt see problem aot likely going default would nt ever using jit anymore anyway still used tests nt wo nt problem", "d": "10/2017"}, {"body": "mgol jit still used tests time mainly overriding templates easily plans drop aot aswell seen", "d": "10/2017"}, {"body": "right issue still problem going fullaot option yet", "d": "10/2017"}, {"body": "sudippal hi please elaborate solution facing issue server side rendering serve fully generated html page serverts angbs start applicationsworkspaceangularangbs tsnode srcserverts", "d": "10/2017"}, {"body": "reseting form simple javascript solution", "d": "10/2017"}, {"body": "strongly agree trigger makes much performant cleaner currently best workaround found make follows maybe helps anyone meantime ts pipe name translate pure false export class translationfallbackpipe implements pipetransform ondestroy", "d": "10/2017"}, {"body": "stephenlautier thanks contribution main aspect pure pipe pure pipe elegant way trigger changes service win", "d": "10/2017"}, {"body": "made mistake create impure pipe custom date transform performance went smooth absolutely terrible never use impure pipes fixed creating directive", "d": "10/2017"}, {"body": "make localeid nonprimitive may help", "d": "10/2017"}, {"body": "ddamien got issue able fix", "d": "10/2017"}, {"body": "might getting error would importing module something like import browseranimationsmodule angularplatformbrowseranimationsanimations make sure imported import browseranimationsmodule angularplatformbrowseranimations", "d": "10/2017"}, {"body": "maybe actually run app integration problems mattooltip rage systemjs stopped giving errors added confused others thing relevant parts attribute js angularmaterial npm angularmaterialbundlesmaterialumdjs angularplatformbrowser npm angularplatformbrowserbundlesplatformbrowserumdjs angularplatformbrowseranimations npm angularplatformbrowserbundlesplatformbrowseranimationsumdjs angularplatformbrowserdynamic npm angularplatformbrowserdynamicbundlesplatformbrowserdynamicumdjs angularanimations npm angularanimationsbundlesanimationsumdjs angularanimationsbrowser npm angularanimationsbundlesanimationsbrowserumdjs npm angularcdkbidi npm angularcdkbundlescdkbidiumdjs angularcdkcoercion npm angularcdkbundlescdkcoercionumdjs angularcdkcollections npm angularcdkbundlescdkcollectionsumdjs angularcdkkeycodes npm angularcdkbundlescdkkeycodesumdjs angularcdklayout npm angularcdkbundlescdklayoutumdjs angularcdkobservers npm angularcdkbundlescdkobserversumdjs angularcdkoverlay npm angularcdkbundlescdkoverlayumdjs angularcdkplatform npm angularcdkbundlescdkplatformumdjs angularcdkportal npm angularcdkbundlescdkportalumdjs angularcdkrxjs npm angularcdkbundlescdkrxjsumdjs angularcdkscrolling npm angularcdkbundlescdkscrollingumdjs angularcdkstepper npm angularcdkbundlescdkstepperumdjs angularcdktable npm angularcdkbundlescdktableumdjs angularcdk npm angularcdkbundlescdkumdjs", "d": "10/2017"}, {"body": "freakanks ddamien thanks reply", "d": "10/2017"}, {"body": "one facing issue remove router dep provide http usefactory deps xhrbackend requestoptions", "d": "10/2017"}, {"body": "kukjevov version fixed using still throws error cc thelonioussf", "d": "10/2017"}, {"body": "sorry forgot post works fine new httpclient issue closed", "d": "10/2017"}, {"body": "nt recommand way use angular like want restart application url change one entry page note router angularcore works normaly reload page", "d": "10/2017"}, {"body": "implemented already", "d": "10/2017"}, {"body": "getting error error homekleidyaesarapublichtmlaesaraknowledgereservoirclientsrcappdashboarddashboardmodulets find module error error error encountered resolving symbol values statically could resolve relative homekleidyaesarapublichtmlaesaraknowledgereservoirclientsrcappdashboarddashboardmodulets resolving symbol dashboardmodule homekleidyaesarapublichtmlaesaraknowledgereservoirclientsrcappdashboarddashboardmodulets resolving symbol dashboardmodule homekleidyaesarapublichtmlaesaraknowledgereservoirclientsrcappdashboarddashboardmodulets error native syntaxerror homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules simplifyincontext homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules staticreflectorsimplify homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules staticreflectorannotations homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules getngmodulemetadata homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules extractlazyroutesfromstaticmodule homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules arrayreduce native extractlazyroutesfromstaticmodule homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules objectlistlazyroutesofmodule homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules aotplugingetlazyroutesfromngtools homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules donepromisepromiseresolvethenthenthenthenthen homekleidyaesarapublichtmlaesaraknowledgereservoirclientnodemodules processtickcallback webpack failed compile", "d": "10/2017"}, {"body": "yeah definitely running well namedoutlet sibling primary outlet inside pathless wrapper component thought might issue sure accurate", "d": "10/2017"}, {"body": "also confirm issue using bennadel example take look config add named router outlet router link inside component like click link get reproducible take named outlet route outside empty path route like try make sure reset url browser every time test avoid false results click link get error nothing showing nothing filling named outlet reason nothing showing named outlet route top level put named routeroutlet tag inside component anymore put top level breaks original use case using inside component route one empty path either child routes setting named outlet route wish working case shown particular example remove component completely put content directly promote children toplevel routes remember demonstration real world scenario case may achievable also bad case need anything else general nav whatever clean functionality still broken whereas functionality routing named outlet child route empty string path ps also confirm moving route routeroutlet tag nonemptypath like example work named outlet needs top level nt work inside child empty path route example", "d": "10/2017"}, {"body": "bennadel mentioned twitter another workaround prefix entire app routes something like silly side effect routes include prefix rootrelative change relative current route like working example showing reproducing issue prefix example also makes super easy reproduce issue try sample remove prefix app click link open widget see break empty path", "d": "10/2017"}, {"body": "meligy excellent thanks putting together gon na try work", "d": "10/2017"}, {"body": "looks like bug manifests parent segment pathless even ancestor path example still breaks even though entire routeset wrapped prefix namedoutlet still break local parent segment empty route ca nt empty direct parent ca nt empty", "d": "10/2017"}, {"body": "compileroptions target lib dom lib option mainly causing error specifically dom lib option add", "d": "10/2017"}, {"body": "problem solution", "d": "10/2017"}, {"body": "guess also nt know supposed handling directive ngoninit subscribe statuschanges state switches validinvalid render validation message appropriately working fine since async validator runs user changes fields however run situation async validating fields created form group form created based existing object may invalid directive see initial state control pending completes statuschanges subscription hit resolution sort settimeout hack initially pending wait complete edit workaround thisformcontrolstatuschangessubscribe gt thisstatuschanged", "d": "10/2017"}, {"body": "reseting form simple javascript solution", "d": "10/2017"}, {"body": "vladjerca code work reactive forms well place work outofthebox", "d": "10/2017"}, {"body": "remisture yes works reactive forms actually updated code cache values order mark form back pristine revert values initial state placement import form group directive shared module angular imports javascript import formgroupdirective formgroupdirectivebase angularforms import oninit angularcore due fact ie marks controls dirty placeholders present official fix angularforms override fg directive export class formgroupdirective extends formgroupdirectivebase implements oninit cache form values value changes occur values get cached new value set input pristine initial load forms default pristine old values present private cache", "d": "10/2017"}, {"body": "tbosch amp dzmitryshylovich months chance someone look bug fix real bug nt even bug label", "d": "10/2017"}, {"body": "httpclient full bugs seems impossible addcreate custom headers get post request fails terribly official documentation full crap also pieces code work many cases however framework really promising guess lot way go least considered stable", "d": "10/2017"}, {"body": "official documentation full crap also please save kind talk beer friends place constructive talk criticism always welcome reported politely also old closed issue free open issue describe exactly confusing documentation community help fix help well thanks", "d": "10/2017"}, {"body": "ca nt believe issue also another road block face lazy loaded modules desperately looking solution keep lazy module children anonymous parent appmodule easily removeexport lazy module needed something simple app wide appcomponenthtml given hopes componentfactory replace job load lazy children components daunting come across entrycomponents issue lazymodules entrychildren possible keep modules isolated properly need root module register lazy children components hoping angular team realizes issue soon resolves still waiting respond issue appwide routeroutlet lazymodules", "d": "10/2017"}, {"body": "beginning nothing let create view says jquery team let list says angular team", "d": "10/2017"}, {"body": "solution problem yet", "d": "10/2017"}, {"body": "seems like low priority", "d": "10/2017"}, {"body": "hmm disappointing nt know get aot running project issue using coredecorators basically every class aot nt work decorator libraries whole feature pretty unusable", "d": "10/2017"}, {"body": "check might help", "d": "10/2017"}, {"body": "still issue angular", "d": "10/2017"}, {"body": "found issue needed thunks templates think valid use cases mine may seem strange assure makes sense thing working agree gkalpak potential abuses personally surprised jit compiler blown tried use arrow function still would nice neat feature responsible developers", "d": "10/2017"}, {"body": "nikitayaroshevich thank much ideas causes issue also plans fixing", "d": "10/2017"}, {"body": "wiredprogrammer noticed behavior slow initial load somehow sped dev tools running find anything support call also see behavior work computer go angular material site get slow loading material work computer personal computer running windows build", "d": "10/2017"}, {"body": "willlh nt learn anything support call slow disappeared support department rolled windows updates last week sure update bundle initial slow load gone away getting fast load", "d": "10/2017"}, {"body": "reactbased app also running slow dev tools opened runs much faster observed using dev tools memory consumption confined level frequent garbage collection happening turns symantec endpoint protection limiting memory could used without dev tool opened therefore app slow endpoint protection switched everything works fine thank symantec", "d": "10/2017"}, {"body": "manage find configuration symantec endpoint projection limiting memory", "d": "10/2017"}, {"body": "change get null href link otherwise continually got page reload", "d": "10/2017"}, {"body": "closing reply please reopen still problem", "d": "10/2017"}, {"body": "simple solution found add whatever link opening login heres function login button clicked see commented line used routernavigate originially thisauthserviceauthenticatemember member subscribe data gt using authentication put code end login success response refresh page aswell take user login section best solution simplest one think dosent require many changes hope helps", "d": "10/2017"}, {"body": "utilized little helper took tests running way say work every situation unit tests required little converted", "d": "10/2017"}, {"body": "key issue approach nt recreate dependencies tests state held dependencies cause problems ideal option compile test module reuse since vast majority time spent compiling test module project something close admit still sure delay getting angular support get using methods interfere long test module defined overrides used created really complicated", "d": "10/2017"}, {"body": "thanks markovy", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "problem machtyn want handle error example possible handle via component without major changes app navbar navigate html template using routerlink attribute component trying reach never gets reached resolver therefore error remains uncaught way catch error via subscribed error function otherwise point error function", "d": "10/2017"}, {"body": "totally agree cases like want continue exceptions handled operators like cc dzmitryshylovich", "d": "10/2017"}, {"body": "nested route ignored loadchildren setting prevent errors joined urls pathfromroot prevent duplicate keys might use key leaf route use lot list project routes need buffering states example best behavior detail page init time put configuration routeconfigdata named reuse determine page buffered route setting code export class configurableroutereusestrategy implements routereusestrategy handlers key string detachedroutehandle", "d": "10/2017"}, {"body": "months later still solution unreal", "d": "10/2017"}, {"body": "hi mihail c tried clicked one routerlink copys url routerlink ends two routerlink link url forever could please help", "d": "10/2017"}, {"body": "trick great problem ca nt use routerlinkactive solution problem", "d": "10/2017"}, {"body": "way already", "d": "10/2017"}, {"body": "facing issues dynamically adding formarray someone please tell workaround", "d": "10/2017"}, {"body": "using reactive forms like hope makes sense get discounts return thisformgroupget discounts formarray adddiscount let discounts objectcreate thisdiscountsvalue thisdiscountsvalue discountspush new discount false null null let discountarr thisfbarray discountsmap discount gt new discount false null discount thisformgroupsetcontrol discounts discountarr thisformgroupmarkasdirty thu oct pm abhijithmannath notifications githubcom wrote facing issues dynamically adding formarray someone please tell workaround receiving commented reply email directly view github mute thread", "d": "10/2017"}, {"body": "paraphrase example think ended fixing error way", "d": "10/2017"}, {"body": "fixed long time ago understand angular team lot almost one year old bug still lots troubles", "d": "10/2017"}, {"body": "encountered issue wanted directive set input via worked former latter error message imported component module also really misleading", "d": "10/2017"}, {"body": "also need", "d": "10/2017"}, {"body": "news also think duplicate", "d": "10/2017"}, {"body": "yeah update seems notably worse recent version angular latest stable", "d": "10/2017"}, {"body": "experiencing issue even one instance homecomponent restrictedcomponent live time prior instances kept memory", "d": "10/2017"}, {"body": "hey guys performance issue december consider critical especially medium large scale apps multiple viewscomponents believe solved comment mhevery tbosch", "d": "10/2017"}, {"body": "hey started experiencing issue application well implemented practices aot lazy loading unscribing observables cleaning services properties destroy component module however memory consumption keeps growing application page becomes less responsive time hoping fix available soon updating angular version", "d": "10/2017"}, {"body": "might use angular typesafe reactive forms", "d": "10/2017"}, {"body": "small update per comment implementing generics current forms api possible without breaking changes either breaking changes needed full forms rewrite", "d": "10/2017"}, {"body": "turns previous comment incorrect able implement current forms api see", "d": "10/2017"}, {"body": "toxicable still problem lacking ability refactor safely get person example really using symbol example rpbeukes retrofitted way basically using object symbol eg get objperson without using string would preferred return types", "d": "10/2017"}, {"body": "dzmitryshylovich still issue angular occurs targeting later ie lambda functions writing works whereas nt hence normally transpiling fixes problem oh plunkr transpile least nt know turn ca nt reproduced", "d": "10/2017"}, {"body": "someone angular team please confirm issue assign bug status forward movement months another ticket issue", "d": "10/2017"}, {"body": "think issue one progress tracked", "d": "10/2017"}, {"body": "really warning trying share codebase well running issue components part ngmodule problem exactly par unused variable error warning", "d": "10/2017"}, {"body": "easy code problem npm angular library dead code really pain ass", "d": "10/2017"}, {"body": "anyone explain ca nt warning instead error case want extract langs preferably components connected ngmodule ignore nt one main app folder base components application specific folders sometimes override components main app try extract overridden component throws error mind could ignored extraction could continued without using unused component one thing think could problem still use class defined faulty component file base creating overridden component needs compiled nt need component annotation cause cant use overrode component least think ca nt recreate annotations derived components make work", "d": "10/2017"}, {"body": "xesenix least option like determinemodule false true bananas", "d": "10/2017"}, {"body": "still fixed almost year later pulling hair get aot work issue makes hit brick wall", "d": "10/2017"}, {"body": "thank rahulsivalenkawtc solution successfully able solve problem excluding describe", "d": "10/2017"}, {"body": "glad could help", "d": "10/2017"}, {"body": "hi status issue workaround", "d": "10/2017"}, {"body": "also using angular router issue well major bug big setback application would great workaround could found fix made", "d": "10/2017"}, {"body": "still problem ideas", "d": "10/2017"}, {"body": "got issue angular guard looking like fixed", "d": "10/2017"}, {"body": "trying get modal window ish close nt seem anything tried using first part luck turned nt show activity like action nt even anything reference", "d": "10/2017"}, {"body": "also try use first portion secondary outlet close however leaves url point refresh browser page get error primary route longer match", "d": "10/2017"}, {"body": "worth able get working using parent component instance method wrote approach", "d": "10/2017"}, {"body": "bennadel saviour", "d": "10/2017"}, {"body": "challe pleasure partial solution still basically means ca nt change secondary outlet nt unfortunate means ca nt natural href values create special methods cases think might end significant blocker", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "need functionality dynamically add validators without losing already exist something like fully explained must something common", "d": "10/2017"}, {"body": "actually hard dynamically add validators composevalidators think removing validators bigger issue boolean validator longer pure function", "d": "10/2017"}, {"body": "function work wor formgroups formcontrols determine required validators", "d": "10/2017"}, {"body": "hartjus fix issue", "d": "10/2017"}, {"body": "oleosjo converted guards use return promise rather observable hopefully helps", "d": "10/2017"}, {"body": "hi robwormald mhevery could please give update much simpler proposal going adding method allows hook cold observable great work host elements view queries content queries use building block better reactive apis road rumor heard six months ago", "d": "10/2017"}, {"body": "nt think implemented currently programming template relate rxjs agree angular decision new concepts need time digest", "d": "10/2017"}, {"body": "like echo proposal seems stripping consecutive spaces common use case use additionally suffix tell message extractor needed", "d": "10/2017"}, {"body": "affecting project well worked", "d": "10/2017"}, {"body": "place fix probably although admit nt kept renderer changes", "d": "10/2017"}, {"body": "running issue quite lot levels nested routes bothers component needs know registered route tree change add level eg empty paths need change component besides quite messy code ideal world would need ask route data like find first containing key map", "d": "10/2017"}, {"body": "indeed annoying problem dirkluijk taken time write decorator probably need except property decorator instead write interested published npm hope helps", "d": "10/2017"}, {"body": "bahodirk still issue new compiler", "d": "10/2017"}, {"body": "problem someone solution", "d": "10/2017"}, {"body": "hi tristanmarion issue redesigning routes resolved problem something like children empty path hope helpful", "d": "10/2017"}, {"body": "hi pgiemza thanks answer try", "d": "10/2017"}, {"body": "also running similar issue essentially child view needs open auxiliary view parent view tried removes child rendering leaves url invalid state know could inject navigate programmatically relativeto hoping keep html much possible", "d": "10/2017"}, {"body": "closed", "d": "10/2017"}, {"body": "doesnot work disabled using routes child modules angular", "d": "10/2017"}, {"body": "done new internal api make public eventually proven stable enough see modeled like typescript api incremental compilations done passing calling command line also option watches file system see speedups subsequent builds logic place compile components nodemodules", "d": "10/2017"}, {"body": "somehow managed working right return false candeactivate restore state back button detected another issue land first url state present history candeactivate wont executed using hack solve issue call landing page constructor service add state current state let know decent solution present", "d": "10/2017"}, {"body": "workaround keep exact state back click using candeactivate", "d": "10/2017"}, {"body": "seems update get stuck", "d": "10/2017"}, {"body": "update", "d": "10/2017"}, {"body": "facing issue unnamed routeroutlet lazy loaded module throws error uncaught promise typeerror read property routes undefined fix", "d": "10/2017"}, {"body": "though nt want speak behalf angular team feel like something needs said issue nt get closer resolution proportion number comments say update fix etc thumbsupping comments nt magically go petition angular team finish stuck read thread workaround name suggests get working like get updates save keystrokes clicking subscribe button allows receive updates email also receive updates every time someone comments update please nt person better yet change want see world submit pull request", "d": "10/2017"}, {"body": "running issue quite lot levels nested routes bothers component needs know registered route tree quite messy code", "d": "10/2017"}, {"body": "indeed annoying problem maybe decorators help written interested published npm hope helps", "d": "10/2017"}, {"body": "getting property pushstate exist type location fix waiting approval", "d": "10/2017"}, {"body": "know angular team busy hell get least comment supported time future solution subscribe queryparameters add exist constructor private router router private activatedroute activatedroute activatedroutequeryparamssubscribe params params gt", "d": "10/2017"}, {"body": "work around folks end issue nearly year old", "d": "10/2017"}, {"body": "actually huge issue us send significant data back server changes customer requirement autosave causing application slow use angular reactive forms chance fixed soon", "d": "10/2017"}, {"body": "keep mind different behavior depending use see examples decide workaround want currently use works another element added text present example template acaua mentions result foo display ngcontent empty case use case opposite happens tag whitespace comment example template result nothing displayed edit using however check following function ignore nodes whitespace comments nodetype", "d": "10/2017"}, {"body": "thisformget item focus please reconsider", "d": "10/2017"}, {"body": "focusing element fairly universal websites straight forward becomes cumbersome anything relatively complex pcroc others pointed would like issue reopened reconsidered number stack overflow questions focus abstractcontrol numerous diverse implementation write going pain butt", "d": "10/2017"}, {"body": "problem straightforward", "d": "10/2017"}, {"body": "zoechi behavior component recreation prevented", "d": "10/2017"}, {"body": "tue oct pm appie notifications githubcom wrote zoechi behavior component recreation prevented receiving subscribed thread reply email directly view github mute thread", "d": "10/2017"}, {"body": "realappie see links", "d": "10/2017"}, {"body": "zoechi thank great sources reading lot github issues ton commits point lost track whether feature need properly implemented turns demo anybody finds hard implement use add boolean router configuration", "d": "10/2017"}, {"body": "also requirement stops us want send urls emails user clicks link browser loads angular app url lazy loaded module way navigate login return url canload canload fails authentication check addition lazy modules get loaded even user authenticated canactivate lazy routes still boots back login strongly believe canload needs similar args canactivate", "d": "10/2017"}, {"body": "used mechanism tests took converted execute", "d": "10/2017"}, {"body": "robwormald alxhub may update tread also open pr fix without feedback long time one main features angular testability performance issue really problem production app impossible use tdd without ugly workaround", "d": "10/2017"}, {"body": "totally agree also use workaround encapsulated well usable however sth ng offers built setup beforeall also general test setup fells clumsy ng includes setup injection services well comparison eg react feeling could easier somehow encapsulated better usability like let comp comp setuptestbed cfmodule gt comp new comp cfcomponent injection still use clumsy stuff let restservice restservice let dataservice dataservice beforeeach inject restservice dataservice restservice restservice dataservice dataservice gt restservice restservice dataservice dataservice", "d": "10/2017"}, {"body": "dasanderl get service injected could also want make generic casting required make util method like example becomes", "d": "10/2017"}, {"body": "mentioned real problem workaround dependencies nt recreated tests meaning state held dependencies cause bizarre issues think really need option compiled test module reused since vast majority time usually taken simply compiling templates test module", "d": "10/2017"}, {"body": "vvasabi thanks workaround tests took sec take sec", "d": "10/2017"}, {"body": "happen number times using vscode mainly typescript hero plugin", "d": "10/2017"}, {"body": "chuckjaz wondering current status feature using following versions angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcdk angularcli angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack template using template variable lose typing support template variable notedatecreated date mmdd notes found type therefore type rename compiler ok lose typing support would great leverage great template syntax typing support nt likely use pipe instead manage subscriptions within component alternative keep template typing support use pipe twice use observable component class thisisloading true thisnotes thisdashboardservice getrecentnotes catch failure gt observableof gt thisisloading false publishlast refcount notedatecreated date mmdd", "d": "10/2017"}, {"body": "workaround using urlmatcher", "d": "10/2017"}, {"body": "based workaround wrote function js function optionalroute path string urlmatcher let parts pathsplit js const routes routes matcher optinalroute test component componentname", "d": "10/2017"}, {"body": "bit hair head yesterday read amp reread amp rereread testing docs went apis tried everything stackoverflow frantically went videos ng testing youtube almost tears amp call mom pour heart bad life choices made boy glad stumbled across come angular one thing docs bird culture considered dik move", "d": "10/2017"}, {"body": "problem build option production build", "d": "10/2017"}, {"body": "nt problem angular anymore jelbourn still problem angular", "d": "10/2017"}, {"body": "devversion quick check see still issue", "d": "10/2017"}, {"body": "lol", "d": "10/2017"}, {"body": "news solution workarounds", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "observing issue angular took quite dig ticket", "d": "10/2017"}, {"body": "got issue danielclasen", "d": "10/2017"}, {"body": "closed altough fixed", "d": "10/2017"}, {"body": "could someone angular team explain toplevel route considered child route activatedroute tree appmodule subscribe attempt access navigating example ts export class appcomponent implements oninit constructor private router router private route activatedroute thisroutethisroutefirstchild missing something", "d": "10/2017"}, {"body": "ohh want get url segments ca nt", "d": "10/2017"}, {"body": "ran problem today kind understand current solution implemented way still bit confusing first also took find issue find solution going strategy indeed works fine maybe comment documentation documentation make comment contains information route associated component loaded outlet gave clue start looking problem obvious solution hard find without finding thread", "d": "10/2017"}, {"body": "case anyone reading solution export function markformgrouptouched formgroup formgroup", "d": "10/2017"}, {"body": "closing since old bug nt think still issue date pipe", "d": "10/2017"}, {"body": "exactly nt think changes ever got merged", "d": "10/2017"}, {"body": "actually clearer order sentence removed docs use custom format respect format give us nt make assumption want format date want fixed format depends locale use one following shortmediumlongfull equivalents date time", "d": "10/2017"}, {"body": "still nt solve original use case displaying custom format respects ordering locale liked laskoviymishka suggestion able pass intlapi format object addition format string", "d": "10/2017"}, {"body": "longer use intl api based cldr data checked could support using skeletons see additional datetime formats think would fix issue", "d": "10/2017"}, {"body": "yes believe would good solution", "d": "10/2017"}, {"body": "ok could open new issue feature request please", "d": "10/2017"}, {"body": "problem opened", "d": "10/2017"}, {"body": "trying set webpack work hybrid angular app frameworks running use ngupgrade module support upgrade angularjs latest angular webpack bundles files try run website got error seen earlier posts assign read property exports object investigate console errors see following line added end webpack moduleexports windowangular generates error using webpack exportsloader shim angularjs available globally window object also using suggested plugin webpack configuration really understand webpack modified file decided add moduleexport someone provide feedback suggestions", "d": "10/2017"}, {"body": "difference disabled readonly readonly controls still focusable user still select text interact whereas disabled controls entirely noninteractive reason text controls made readonly would nt make sense checkboxes buttons instances", "d": "10/2017"}, {"body": "another use case getting values array reactive formgroup nt return value even set formcontrols disabled return readonly", "d": "10/2017"}, {"body": "much required form contain fields want disable dont want value come formvalue fields form want readonly disabled sk thr value comes form", "d": "10/2017"}, {"body": "vicb think supporting may good idea regarding problem would cause misleading concept suggesting class like since private property always accessible kinds languages supporting without private property would weird behavior", "d": "10/2017"}, {"body": "angular released turn around changes module integrated", "d": "10/2017"}, {"body": "kinda looks like feature dependant changes angular compiler teams responsible compiler seems less interested nt look like theres task pr commits sorry venting feature request describes basic functionality present every translationframework year old given hope essential feature arrive least", "d": "10/2017"}, {"body": "guys keep calm silly thing implement aot compiler little trust ocombe said likely vicb working last changes compiler finally make possible", "d": "10/2017"}, {"body": "yes working runtime right first step runtime means one bundle languages aotcompiled libraries use maybe later ability change language runtime also means translations runtime needed translations inside code need runtime parser translations etc one done next priority translations inside code could nt runtime changed compiler use typescript transformers done", "d": "10/2017"}, {"body": "idea version improvements anything released", "d": "10/2017"}, {"body": "new pipes datenumberpercentcurrency nt use intl api fixed something like bugs work across browsers improvements locale parameter new additional formats timezone parameter date pipe new api function libraries components better integration cli unexpected blocker runtime code translations template things add along way yet decided follow", "d": "10/2017"}, {"body": "flagsoft hi dude exactly issue managed solve able point direction", "d": "10/2017"}, {"body": "unfortunately easy way according authors angular security issue sure case load well known json data local source leave angular stupid called pseudo security limitation angular usable anymore ca nt transform simple well known data onthefly thursday october kenny vivas notifications githubcom wrote flagsoft hi dude exactly issue managed solve able point direction receiving mentioned reply email directly view github mute thread freundliche gr\u00fcsse kind regards michael mustun", "d": "10/2017"}, {"body": "flagsoft compile component runtime beaten path nt mean possible", "d": "10/2017"}, {"body": "zoechi going try approach need make work inside innerhtml directive plan pipe turn found patterns linkrendering components caveats might foresee using dynamically generated components inside innerhtml directive", "d": "10/2017"}, {"body": "kennyvivas really old plunker probably need site parse html apply known tags dynamic components still use aot", "d": "10/2017"}, {"body": "kennyvivas way make angular anything html passed", "d": "10/2017"}, {"body": "ok lo get straight need get paragraph identify tags inside text transform something like tag tags paragraph clicked said using pipe transformation part turn tags component like tag want template problem believe angular wont let make paragraphwith tags pipetolinkify detect component tags html return safevalue use property binding error point think stuck square send transformed string assuming tags add instantiate dynamic components trough way innerhtml dinamically render example inside linkerpipe nt still get problem trying send back result seen solutions like linkify anchorme works links still problems injecting resulting html components eg really want know real angular way tackle particular actually really common example zoechi mlcmlapis taggingpeoplefunctionality really possible angular partly side flagsoft says cant believe possible mean using intricate mess directives componentes imports snippets cant walk away angular project already committed ionicangular think make work somehow", "d": "10/2017"}, {"body": "kennyvivas looking opposite side want many things dynamically runtime also mean direct manipulation dom angular going way many reasons main idea use aot mode templates compiled ahead time app based js code without html runtime think loading data jsons transforming showing via already existed components loading html something runtime described main problem transform tag something else really using instantiating dynamic components tag places could much general mechanism could right way", "d": "10/2017"}, {"body": "getting multiple events type subscribing events upon changing route example second time change route get navigationstart events navigationend events etc change route time events type nt think expected problem app somewhere fires additional events", "d": "10/2017"}, {"body": "error still angular hope fix angular", "d": "10/2017"}, {"body": "fully agree jcimoch attribute runtime allows use different style translated elements eg green border useful identify elements yet translated compiler switch would sufficient", "d": "10/2017"}, {"body": "duluca nice work summary edited plunkr found real workaround using nonempty paths top level routes lazy loaded module see flaw see additional url segment example full url works well even clearing aux outlet works already added plunkr edit found workaround trying add test case issue angular codebase coincidence used nonempty path config test passed update empty path route design useful use cases vsavkin written angular router book setting path empty string create route instantiates component consume url segments empty path routes children general behave like normal routes special thing inherit matrix parameters parents though sure matrix param inheritance works lazy loading module scenario think another flaw workaround", "d": "10/2017"}, {"body": "see aged bug aux routes toplevel empty path routing module", "d": "10/2017"}, {"body": "implemented case insensitive routes function", "d": "10/2017"}, {"body": "case anyone wondering solution constructor public router router private element elementref get components nativeelement get scrolltop using scrollable div needed window thiselementnativeelement lastroute string lastposition number view init nativeelement available ngafterviewinit thisrouterevents filter events gt events instanceof navigationstart events instanceof navigationend subscribe events gt events instanceof navigationstart amp amp eventsurl thislastroute thislastroute thisrouterurl simply save last route name last route position navigation start navigation ends check see new route last saved route also using router reuse strategy nt need timeouts intervals scroll position could also push lastroutes lastpositions array need one page time", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "think found solution trying mock service method returning observable nt work specified mock method return observable", "d": "10/2017"}, {"body": "router really support hot routes views updated observable emits new data activated route flow data route change needed happen observable emitted first value disconnect resolve observable happen route activated anymore", "d": "10/2017"}, {"body": "iamaritraganguly resolve write", "d": "10/2017"}, {"body": "daschtour remeber times app entrypoint looked like well us used build scripts automatically require modules add app module looking something similar easy solution", "d": "10/2017"}, {"body": "samudrak lazy load component u want use angular aot support need setup lazy module component lazy load module use similar approach application", "d": "10/2017"}, {"body": "dynamic imports support ecmascript typescript full type checking orthogonal loading lazy loading use case fairly arbitrary course hindsight way know would happen", "d": "10/2017"}, {"body": "consideration picking expect lot people working complex forms creating workarounds like effectively creating methods recursively traverse tree controls looking control objects manually order create aggregate object", "d": "10/2017"}, {"body": "struggling moment list product items wrapped routerlink also child buttons actions eg expectation click item navigate product page except click gallery button see next image product called stop click event", "d": "10/2017"}, {"body": "restarted project working fine well", "d": "10/2017"}, {"body": "scottseeker use approach var controlcontainersubstituto provide controlcontainer usefactory component gt componentparent deps forwardref gt enderecocomponent component selector ctrlendereco templateurl enderecocomponenthtml viewproviders controlcontainersubstituto providers controlcontainersubstituto export class enderecocomponent constructor host skipself public parent controlcontainer see images post portuguese", "d": "10/2017"}, {"body": "update", "d": "10/2017"}, {"body": "pantonis poke worked appcomponentts setting method scroll top page import component renderer oninit angularcore import router angularrouter export class appcomponent constructor private renderer renderer ngoninit page reload scroll top window ondeactivate thisrenderersetelementproperty documentbody scrolltop appcomponenthtml lt appnavbar gt lt routeroutlet deactivate ondeactivate gt lt footer gt note added scroll top functionality largely requested coupled param change approutests setting route parameter updated import productitemcomponent componentsproductitemproductitemcomponentts export const routes routes path product id component productitemcomponent productitemcomponentts param id subscription initiated import component oninit angularcore import router activatedroute params angularrouter import productservice servicesproductservice import item modelsitem export class productitemcomponent implements oninit id string item item constructor public productservice productservice public route activatedroute public router router reset item object based params id change thisrouteparams subscribe params gt thisid params id reuse route state refreshes page scrolls top thisrouterroutereusestrategyshouldreuseroute function return false get item object thisproductservicegetitem thisid subscribe item gt thisitem item ngoninit get item id url thisid thisroutesnapshotparams id get item object thisproductservicegetitem thisid subscribe item gt thisitem item note two calls item object first one ngoninit called page constructed second one constructor called param change recognized", "d": "10/2017"}, {"body": "would kill feature cheers", "d": "10/2017"}, {"body": "sod may similar wanted put together alternate approach using property decorators anyone prefers flavor inheritance nt tested aot yet angular team wrote could get tighter integration without needing hijack lifecycle callback methods component lifecycledecoratorts import simplechanges angularcore import subject rxjssubject creates observable property object emit corresponding lifecycle event occurs main rules nt name property angular interface method ie ngoninit class inherits another component parent uses decorator child implements corresponding interface needs call parent method param string lifecyclemethodname name function angular calls lifecycle event param object target class contains decorated property param string propertykey name decorated property function applylifecycleobservable lifecyclemethodname string target object propertykey string void save reference original lifecycle callback call exists const originallifecyclemethod targetconstructorprototype lifecyclemethodname property decorators export function onchangesobservable target propertykey string applylifecycleobservable ngonchanges target propertykey export function oninitobservable target propertykey string applylifecycleobservable ngoninit target propertykey export function docheckobservable target propertykey string applylifecycleobservable ngdocheck target propertykey export function aftercontentinitobservable target propertykey string applylifecycleobservable ngaftercontentinit target propertykey export function aftercontentcheckedobservable target propertykey string applylifecycleobservable ngaftercontentchecked target propertykey export function afterviewinitobservable target propertykey string applylifecycleobservable ngafterviewinit target propertykey export function afterviewcheckedobservable target propertykey string applylifecycleobservable ngafterviewchecked target propertykey export function ondestroyobservable target propertykey string applylifecycleobservable ngondestroy target propertykey example usage implement oninit demonstrate work together could subscribe oninit instead import component oninit input simplechange angularcore import observable rxjsobservable import onchangesobservable oninitobservable docheckobservable aftercontentinitobservable aftercontentcheckedobservable afterviewinitobservable afterviewcheckedobservable ondestroyobservable lifecycledecorator import myservice myservice component template export class testdecoratorcomponent implements oninit", "d": "10/2017"}, {"body": "yeah definitely wo nt work aot aot compiler needs able statically infer existence lifecycle methods component ca nt infer code run part decorator general angular million things trivial decorators barely work factor aot", "d": "10/2017"}, {"body": "ohjames right rather use decorators insert hooks could nt find hacky way make work reverted using base class", "d": "10/2017"}, {"body": "chance proposal implemented", "d": "10/2017"}, {"body": "without proposal way include lifecycle events part rxjs pipelines hook lifecycle events without abusing inheritance consultancy using angular rxjs heavily issue together lack observables monitor makes us question vuejs cyclejs would better fit us given love rxjs uncomfortable middle ground angular things trivial observables yet things trivial obstructed brick walls", "d": "10/2017"}, {"body": "ohjames monitoring use invoked also change", "d": "10/2017"}, {"body": "mlcmlapis yep precisely approach using angular utility library define setter observable member every bit much boilerplate", "d": "10/2017"}, {"body": "situation angular", "d": "10/2017"}, {"body": "expressionchangedafterithasbeencheckederror expression changed checked previous value wrtwrt current value efgh json value changed loaded tryed onint ngafterviewinit didnt get actual json value changed one fix json headers key wrtwrt value abcd key efgh value abcd angular code thisprofile data let lt thisprofilelength let stringaray jsonparse thisprofile headers consolelog stringaray stringaray thisprofile stringaray", "d": "10/2017"}, {"body": "maddela without simple plunker demonstrate problem", "d": "10/2017"}, {"body": "like point another workaround idea expose alongside check answers thread alternatives", "d": "10/2017"}, {"body": "experiencing similar issue mock service written delay goes test case test wait delay without delay works anything wrong code delay mockhttp current zone", "d": "10/2017"}, {"body": "micronyks resolve issue", "d": "10/2017"}, {"body": "napstercake nope ended using cli", "d": "10/2017"}, {"body": "found searching problem three different controls use reactive forms need share value ca nt use template based controls workaround", "d": "10/2017"}, {"body": "issue ie edge", "d": "10/2017"}, {"body": "facing issue reactive forms dont edge update", "d": "10/2017"}, {"body": "facing issue amp safari reactive forms safari first element selected disabled", "d": "10/2017"}, {"body": "worked around issue executing selectedindex ngoninit", "d": "10/2017"}, {"body": "unit testing angular version using worked parent component encapsulate component testing js let component mycomponent let fixture componentfixture beforeeach gt fixture testbedcreatecomponent parentmycomponent component fixturedebugelementchildren componentinstance fixturedetectchanges call ngonchanges gt const spy spyon component ngonchanges fixturecomponentinstancedata options test fixturedetectchanges expect spy tohavebeencalledtimes test successful", "d": "10/2017"}, {"body": "sabithpocker answer working also allow actual url change suggestion", "d": "10/2017"}, {"body": "odaitu making like hides parameters manually set url desired state thisrouternavigate dashboardcompany queryparams id res skiplocationchange true windowhistorypushstate useremail still get queryparams component even skiplocationchange true ngoninit let param thisrouterparseurl thisrouterurl consolelog paramqueryparamsid", "d": "10/2017"}, {"body": "work properly necessary implement controlvalueaccessor directive see solution ngcontenteditable", "d": "10/2017"}, {"body": "kostyatretyak awesome work wish angular would support contenteditable much better", "d": "10/2017"}, {"body": "good idea truncate debugging information automatically nt use large data structures like users thread confused trying debug custom form components class strings characters tell using correct use case ngreflect attributes see bind became change made impossible sure fault following closely enough release notes project moves versions", "d": "10/2017"}, {"body": "vicb help simplify constructors inherited components case specify injection derivative regardless whether used base class requires found many devs suffer use service locator workaround bad approach works global services examples used feature systems like android dagger prism net cases happy contradicts angular policy rule please help understand", "d": "10/2017"}, {"body": "case specify injection derivative regardless whether used base class requires nt need", "d": "10/2017"}, {"body": "trotyl case derivative class resolve parent class needs", "d": "10/2017"}, {"body": "issue might related", "d": "10/2017"}, {"body": "keen official implementation guess could make name inputs array index use fairly gross", "d": "10/2017"}, {"body": "would great way work without requiring observable complete using asyncsubject behaviorsubject allows throttling ajax requests made calling canactivate", "d": "10/2017"}, {"body": "believe issuefeature closed angular really lacks simple way nest templatedriven forms us trying migrate old angularjs apps newer angular really going huge grief complex oldstyle template driven form deep nesting levels would love see way us able migrate apps less pain comes forms really liked angularjs team pondering whether move technologies timeconsuming milestones migration", "d": "10/2017"}, {"body": "stevengarcia implement controlvalueaccessor", "d": "10/2017"}, {"body": "zoechi maybe could implement would nt case implementing looking documentation seems like would asking boilerplate code think key straightforward communication parent child like angularjs need add code", "d": "10/2017"}, {"body": "martinobordin andreevartem morning trying solutions complex jhipster generated project come point exact code plunker application except using rather unfortunately wont work complex scenario way get json pipe print values child plunker", "d": "10/2017"}, {"body": "stevengarcia nt know jhipster works anyway issues plunker solution user suggests nobody seems idea solve disappointed supported outofthebox angular common best practice split complex forms multiple components seems supported using reactiveforms nt like approach", "d": "10/2017"}, {"body": "stevengarcia believe fixed issue plunk issue use ngfor insert child components name property children inputs end saw one children input properties bound form change made use index child make name properties unique bound form", "d": "10/2017"}, {"body": "joerter thank however nt concerned performance plunker fact code nt work complex scenario order pick values child component save object database", "d": "10/2017"}, {"body": "another possible solution found", "d": "10/2017"}, {"body": "alexzuza wow easy nt know property thanks", "d": "10/2017"}, {"body": "penleychan thanks solution works fine thanks nt work getting errormessage error error provider ngmodelgroup also tried directive error", "d": "10/2017"}, {"body": "stevengarcia joerter nt need append name attribute index adding ngmodelgroup gets nicely structurized html addresshistory valid myhistorygroupvalid address valid mylivalid", "d": "10/2017"}, {"body": "javanxd something wrong create plunker reproduce suspect nt ngmodelgroup parent element tree", "d": "10/2017"}, {"body": "alexzuza okay thanks need anymore ended passing ngmodelgroup childcomponent added child manually ngmodels parents ngmodelgroup parentcomponent html childcomponent ngbddatepicker typescript typescript append ngmodel parents ngmodelgroup input private modelgroup ngmodelgroup viewchild datectrl private datectrl ngmodel private registered boolean false ngafterviewchecked thisregistered amp amp thismodelgroup thismodelgroupcontrol thismodelgroupcontrolregistercontrol validfrom thisdatectrlcontrol thisregistered true html source zoechi feature request closed correctly viewproviders became simple without controlvalueaccessor may require better documentation nested forms", "d": "10/2017"}, {"body": "javanxd check", "d": "10/2017"}, {"body": "trouble without lazyload modules use rules got error url idea change", "d": "10/2017"}, {"body": "squadwuschel multiple sub components use viewproviders mentioned take look thread", "d": "10/2017"}, {"body": "smitchell problem even backend send response angular shows error", "d": "10/2017"}, {"body": "set time zone date pipe angular", "d": "10/2017"}, {"body": "uglow link dead new way", "d": "10/2017"}, {"body": "installed globaly restart visual studio worked", "d": "10/2017"}, {"body": "kievsash used solution ran problem trying update dom values leads issue basically changing values inside nono need done earlier however problem waiting loop end case need perform dom manipulation loop content ready showhide content add classes etc short would nice able fire events loop able things finished rendering content simple react vue lib nt understand problematic angular could literally ignorance pkozlowskiopensource someone else could explain nonhack way triggering event dom content loaded within component would much appreciate", "d": "10/2017"}, {"body": "patoncrispy yes changing data affects template ngafterviewinit leads issue mentioned first run move first run somewhere ngafterviewinit thishandleendofngfor first run sync cause issue contains code template data modification thislabelchangessubscribe gt thishandleendofngfor async cause issue wrap async promiseresolve gt thishandleendofngfor maybe requestanimationframe ngafterviewinit rquestanimationframe gt thishandleendofngfor async cause issue nt time try plz check thislabelchangessubscribe gt thishandleendofngfor async cause issue make event class superclass public htmlchanged new eventemitter true true async emitting ngafterviewinit thislabelchangessubscribe gt thishtmlchangedemit changed async cause issue cause native event would best solution", "d": "10/2017"}, {"body": "learned things worth reporting first looking issue report like liers figured worth noting unsubscribe immediately request created request pre options request options request cancelled actual post request rare ever happen production common testing wrong idea time use subscribe method sends another http request thought subscribe meant listen events occurring subscribe actually means send subscribe cancelling using unsubscribe multiple subscribe calls rabbit running hole bad assumptions hope helps someone else", "d": "10/2017"}, {"body": "fix well", "d": "10/2017"}, {"body": "defer type formatting intl api nt control fix breaking change available unfortunately", "d": "10/2017"}, {"body": "error us key thing setup providers correctly testbedconfiguretestingmodule let lastconnection let component invoiceformcomponent beforeeach gt testbedconfiguretestingmodule imports providers provide connectionbackend useclass mockbackend provide requestoptions useclass baserequestoptions http nt forget add declarations mycomponent compilecomponents let backend testbedget connectionbackend mockbackend backendconnectionssubscribe connection gt lastconnection connection test getworkitemsoptions fakeasync gt let options componentfixture testbedcreatecomponent mycomponent component componentfixturecomponentinstance lastconnectionmockrespond new response new responseoptions body jsonstringify name one name two status tick expect optionslength toequal", "d": "10/2017"}, {"body": "months since reported update seems like pretty basic scenario cover", "d": "10/2017"}, {"body": "sorry took long respond make things worse nt even good news share work angular needs charge content downgraded component case angularjs owns whatever inside downgraded components since angularjs directive unfortunately possible make work downgraded components clear still work fine", "d": "10/2017"}, {"body": "way track source error getting error running angular production track", "d": "10/2017"}, {"body": "masimplo would start reducing app displays one page dependencies needed cyclic typically app needs something goes away get child item childitem needs something higher check got cyclic dependencies sure seen templateurl version", "d": "10/2017"}, {"body": "see old websites handled browser quite different framework like angular angular make use javascript handle problem may impossible get consistent clean solution frameworks problem easy way solve problem hide element instead destroy switching routes browser restore scroll position thing", "d": "10/2017"}, {"body": "crysislinux actually pretty trivial history buffer intercept back button renavigate also need store scroll position back forward hit scroll position ngoninit complete", "d": "10/2017"}, {"body": "except ca nt exactly ngoninit since say async data might rendered yet", "d": "10/2017"}, {"body": "since ngoninit allows async promises developer nt right problem wrong", "d": "10/2017"}, {"body": "hope guys thought restoring every single scrollable div page disappeared might load data asynchronously includes images rotated device landscape nothing trivial surprised nobody came plugin far would become famous instantly mean time scroll top", "d": "10/2017"}, {"body": "best solution came usability side least chrome windowscroll manually right places forward navigation way case chrome correctly restores scroll position navigate back resets position navigate forward yes need manually everywhere wrap kind method navigation found another solution", "d": "10/2017"}, {"body": "broadcasting kormic solution importing object library triggered function within appcomponentts file still working angular project built angularcli", "d": "10/2017"}, {"body": "work component import component oninit angularcore import router navigationend angularrouter component selector myapp template export class myappcomponent implements oninit constructor private router router", "d": "10/2017"}, {"body": "implemented case insensitive routes function", "d": "10/2017"}, {"body": "angular dynamic type input fields work works ones work create normal input field binding work update checkbox clicked", "d": "10/2017"}, {"body": "angular work formvalueage become string number work", "d": "10/2017"}, {"body": "currently use methods add class name component nt know whether good way works according test use host component host class mgriditem mgriditem fluid use hostbinding hostbinding classmgriditem public bindstyle boolean true hostbinding classmgriditem fluid public boolean true add class name component selector directly component selector apptest mgriditemmgriditem fluid", "d": "10/2017"}, {"body": "yoo guys githup never solve anything stackoverflow even better", "d": "10/2017"}, {"body": "marokac must explain closed issues repo", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "thus struggling sane issue maybe help trying validate form using angular formbuilderhere code ngoninit thisformbuilder new formbuilder thissimpleform thisformbuildergroup notifymeradio notifymeemail thisnotifymeemail commonvalidatorsisvalidemailaddress notifymesms thisnotifymesms validatorsminlength notifymefax thisnotifymefax commonvalidatorsisvalidbeneficiaryname notifybeneficiaryradio notifybeneficiaryemail thisnotifybeneficiaryemail commonvalidatorsisvalidemailaddress notifybeneficiarysms thisnotifybeneficiarysms validatorsminlength notifybeneficiaryfax thisnotifybeneficiaryfax validatorsminlength thissimpleformvaluechangessubscribe data gt thisonvaluechanged data thisonvaluechanged validation messages object goes like validationmessages notifymesms required field empty isvalidemailaddress digist notifymeemail required please enter valid email address notifymefax required please enter valid fax name isvalidbeneficiaryname isvalidbeneficiaryname sms isvalidemailaddress please type valid email address notifybeneficiaryemail required required field notifybeneficiaryfax required please enter valid beneficiary fax form errors formerrors notifymeradio notifymeemail notifymesms notifymefax finally onvaluechange method onvaluechanged data thissimpleform return const form thissimpleform issue get validation messages include required return required please help guys", "d": "10/2017"}, {"body": "marokac ask stackoverflow much better us guys", "d": "10/2017"}, {"body": "notsonotso beg one man please help", "d": "10/2017"}, {"body": "marokac github issue used support request please refer contributing information", "d": "10/2017"}, {"body": "point taken brah thanks way", "d": "10/2017"}, {"body": "news even ngzone isnt rendering", "d": "10/2017"}, {"body": "got problem solved thanks tcoz working solution however removing element part argument gave right result current url jump span got url clicking anchor", "d": "10/2017"}, {"body": "sure good alternative wrote translate url works fine without additional code components unfortunately works mycomponent actually opened solution worked tried jump another component hope could help someone", "d": "10/2017"}, {"body": "igorminar fixed write secure angular apps", "d": "10/2017"}, {"body": "one old know one could also use like anywhere code setting focus eg ts html", "d": "10/2017"}, {"body": "using angular problem persists see error handling works properly status codes others like nt work properly seems zonejs catch error console appears description passes service error like johannesrudolph described status code think behaviour fixed reopened previos comment says thanks", "d": "10/2017"}, {"body": "html component lastdatanote date date ddmmyyyy lastdatanote date date hh mm lastdatastatusname lastdatanote admin got error data array one solution", "d": "10/2017"}, {"body": "error declarecall function instantiating loading loading appmain registerdeclarative zonedelegateinvoke zonerun zonedelegateinvoketask zoneruntask drainmicrotaskqueue appmaints import bootstrap import appcomponent appcomponent import enableprodmode enableprodmode bootstrap appcomponent indexhtml appcomponentts import component component selector coremin template welcome net core angular export class appcomponent title hero heroooo help would appreciated", "d": "10/2017"}, {"body": "seems still working used routerlink directive within component rendered within example code works fine takes jobs right click hyperlink jobs code work route homecomponenthtml present within app navigation component homecomponenthtml jobs using angular version could anyone please help", "d": "10/2017"}, {"body": "agree nathanwalker name function interface name would confusing", "d": "10/2017"}, {"body": "using bootstrap also use bootstrap hidden similar css solution nt add anything global css file", "d": "10/2017"}, {"body": "sure misunderstood issue nt async pipe solve issue", "d": "10/2017"}, {"body": "najibla misunderstood inputs observables async pipe help", "d": "10/2017"}, {"body": "ohjames well case work using async pipe observable update observable value parent value reflected child component", "d": "10/2017"}, {"body": "najibla github issue turning properties observables tenuously related case describing", "d": "10/2017"}, {"body": "ie nt need convert input properties observable view whether component responds input property changing using observable isolated component otherwise change component interface decide consume property observable odds angular usual observable first approach", "d": "10/2017"}, {"body": "find better keep rule controller self whole form group javascript passwordverifytest validatorfn return control abstractcontrol validationerrors null gt const verifypassword controlvalue verifypassword const newpassword controlrootget newpassword value form group javascript thisform fbgroup newpassword validatorsrequired verifypassword validatorscompose validatorsrequired passwordvalidatorpasswordverifytest", "d": "10/2017"}, {"body": "chance angular would support kindle browser hit roadblock app going even away reality tried angular", "d": "10/2017"}, {"body": "linkinfo state sticky state final router feature uirouter would prefer keep default angularrouter", "d": "10/2017"}, {"body": "managed get working template like", "d": "10/2017"}, {"body": "recommended managed avoiding compilation errors ts errors using method suppresses ts errors tslint compilation errors", "d": "10/2017"}, {"body": "problem item router calls different page load broken load oninit simply render move something page refresh", "d": "10/2017"}, {"body": "update used zone send navigate renders okay", "d": "10/2017"}, {"body": "hahahahahahahahah", "d": "10/2017"}, {"body": "call instead fetching instance pipe call component hold locale injected somehow", "d": "10/2017"}, {"body": "still keep getting error error systemjs typeerror function nt know wrong please reopen plunker problem seen look srcmaints srcappcomponentts", "d": "10/2017"}, {"body": "hi mhevery based proposal comments seems work case undefined get expected behavior bug edge case never closed regression fact try plunkr example pkozlowskiopensource well", "d": "10/2017"}, {"body": "wrote stripped version ngif successfully using large enterprise app using ng prefix example obviously nt app decide use ts import directive input templateref viewcontainerref angularcore interface letcontext nglet directive selector nglet export class letdirective private context letcontext nglet null", "d": "10/2017"}, {"body": "austinmatherne awesome consider minipull request angular core fix see happens", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"title": "nonbreaking space characters passed via props doubleescaped component template output", "body": "version reproduction link steps reproduce create new component accepts string prop use handlebar syntax display prop within component template use component vue application pass string containing nonbreaking space character prop expected nonbreaking space character escaped html entity raw html appear normal space rendered html actually happening nonbreaking space character doubleescaped html entity instead appears rendered html shown jsfiddle characters escaped html entities behaving expected nonbreaking space character doubleescaped", "num": "6981", "d": "10/2017"}, {"title": "conflict vonce ref", "body": "version reproduction link steps reproduce open console ctrlshifti chrome example expected output console actually happening output console remove vonce change vue version bug remains problem disappears thanks", "num": "6980", "d": "10/2017"}, {"title": "checkbox responding vmodel changes", "body": "version reproduction link steps reproduce please see jsfiddle basically trying get checkbox change based underlying change vmodel maps initiating change via set taxable link vs check box directly expected checkbox toggle checkedunchecked actually happening nothing", "num": "6979", "d": "10/2017"}, {"title": "suggest component namespace \u5efa\u8bae\u589e\u52a0\u7ec4\u4ef6\u7684\u547d\u540d\u7a7a\u95f4\u529f\u80fd", "body": "problem feature solve thirdparty components lib mix using avoid conflict difficult solve coder level without rebuild source easy batch import proposed api look like \u4f60\u671f\u671b\u7684 api js thirdcomponents vuenamespace third thirdcomponents vuenamespace fourth fourthcomponents new vue", "num": "6978", "d": "10/2017"}, {"title": "suggest change pipe symbol filter \u5efa\u8bae\u53d8\u66f4\u8fc7\u6ee4\u5668\u7ba1\u9053\u6240\u4f7f\u7528\u7684\u8bed\u6cd5\u7b26\u53f7", "body": "problem feature solve symbol use javascript symbol origin use \u76ee\u524d\u6240\u91c7\u7528\u7684 \u7b26\u53f7\u5728 javascript maybe user want write exprssion like proposed api look like \u4f60\u671f\u671b\u7684 api symbol never used expression origin symbol never follow expression \u539f\u59cb\u8bed\u4e49\u7684 \u6216 \u6216 use unemployed symbols look good", "num": "6977", "d": "10/2017"}, {"title": "shorter import vue component separation concern", "body": "problem feature solve great vue components separated js css via separation concern greater import nested vue component way instead nested vue component name directory consider support nested vue component imported way thank proposed api look like import app avuecomponent contains nested avuecomponentvue instead import app avuecomponentavuecomponentvue", "num": "6976", "d": "10/2017"}, {"title": "unicode naming methods seems unsupported warning appreciated", "body": "version reproduction link steps reproduce expected excuse closer feature request great method support unicode naming otherwise may better provide feedback thanks efforts actually happening guessing validation passes method exist somehow invoking method fails", "num": "6975", "d": "10/2017"}, {"title": "support local directives functional components", "body": "problem feature solve directives meant assist component behavior declared globally works fine components directives option nt work functional components tried declaring directives data passing def name raw name still nt work knowing globally declared directives work functional components would like request way use locally well", "num": "6974", "d": "10/2017"}, {"title": "\u9700\u6c42 render\u51fd\u6570\u662f\u5426\u53ef\u4ee5\u52a0\u4e0afilter\u4ee5\u8c03\u7528\u81ea\u5b9a\u4e49\u7684\u8fc7\u6ee4\u5668", "body": "version reproduction link", "num": "6972", "d": "10/2017"}, {"title": "error compiling template using unicode naming vfor alias", "body": "version reproduction link steps reproduce running jsfiddle instance make warning appear console case html js code var new vue el data \u4efb\u52a1\u8868 \u5185\u5bb9 \u5b66\u4e60 javascript \u5185\u5bb9 \u5b66\u4e60 vue \u5185\u5bb9 \u6574\u4e2a\u725b\u9879\u76ee expected imho elements still displays spite warning warning appear actually happening seems caused regex identifier validation sure happens alias instead iterator todo \u4efb\u52a1\u8868 nt complain issue noticed try use chinese naming much possible sample codes official guide thanks time", "num": "6971", "d": "10/2017"}, {"title": "malformed html breaking app", "body": "version reproduction link steps reproduce create vue app following html inserted notice vue breaks throws error expected vue catch error issue warning skipping malformed tag actually happening uncaught exception breaking app creating bad html regex back end links chosen search terms throughout article prone errors editor links one term contains another prince prince william clearly code generating bad link first place fixed seems brittle malformed html entered break whole app imagine trycatch block right place could solve problem take look see find source might happen thought mention digging thanks", "num": "6970", "d": "10/2017"}, {"title": "von click itemklik", "body": "im developing web page problem sentence nothing happens click element li vfor item indice tasks von click itemklik itemtitle also declared everything var vm new vue el app data tasks title nueva recepci\u00f3n src imagesaddpng id klik togglevisibility title editar recepci\u00f3n src imagesdocumentcheckeditpng id klik none title eliminar recepci\u00f3n src imageserrorpng id title finalizar recepci\u00f3n src imagescheckpng id title asignar material src imagesboxintopng id title eliminar material src imagesboxoutpng id title imprimir etiqueta src imagesreceiptprinterpng id anyone know click element nothing happens thank", "num": "6969", "d": "10/2017"}, {"title": "want mainjs write import commonstylusindex eslint", "body": "mainjs import commonstylusindex cmd error relative module found commonstylusindexin srcmainjs", "num": "6968", "d": "10/2017"}, {"title": "", "body": "", "num": "6967", "d": "10/2017"}, {"title": "focus lost list rendered component simultaneously removing first ellement appending new one", "body": "version reproduction link steps reproduce focus one letters press key downup observe difference behaviour expected focus retained addingremoving components list pressing actually happening pressing key forces rerendering focus lost pressing key still works expected related preventing making work keyboard navigation", "num": "6966", "d": "10/2017"}, {"title": "js ts nuget packages missed", "body": "version reproduction link steps reproduce check nuget repository last versions vue vuetypescriptdefinitelytyped packages expected vue version vuetypescriptdefinitelytyped also contains last typescript declarations actually happening version vue version vuetypescriptdefinitelytyped could please check upload last versions vue vuetypescriptdefinitelytyped nuget repository", "num": "6965", "d": "10/2017"}, {"title": "js ts nuget packages missed", "body": "hello ca nt find js ts nuget packages could please provide valid name packages upload last versions js typescriptdefinitelytyped nuget repository find following best regards", "num": "6964", "d": "10/2017"}, {"title": "\u67d0 mac \u4e0b\u67d0 chrome \u6e32\u67d3\u51fa font \u6807\u7b7e\u5728 span \u6807\u7b7e\u4e0b", "body": "", "num": "6963", "d": "10/2017"}, {"title": "input enter event environment invalid", "body": "version reproduction link steps reproduce use test expected press enter return actually happening press enter return tried modifier nt", "num": "6962", "d": "10/2017"}, {"title": "\u8c03\u7528", "body": "version reproduction link steps reproduce b\u9009\u9879\u5361 expected actually happening \u901a\u8fc7routerview\u52a8\u6001\u5c55\u793a\u5b50\u7ec4\u4ef6", "num": "6961", "d": "10/2017"}, {"title": "vue typescipt problem", "body": "problem feature solve organizations support ts present solutions used successfully ts environments proposed api look like nothing", "num": "6960", "d": "10/2017"}, {"title": "vue typescript", "body": "organizations support ts present solutions used successfully ts environments", "num": "6959", "d": "10/2017"}, {"title": "vonce component vfor cause performance error", "body": "version reproduction link steps reproduce link displays component perform data source change vue version expected list perform data source actually happening list price", "num": "6956", "d": "10/2017"}, {"title": "routerlink \u70b9\u51fb\u4e0b\u4e00\u9875\u9762\u518d\u8fd4\u56de \u767d\u5c4f", "body": "version reproduction link steps reproduce routerlink \u4f7f\u7528\u65f6 \u4f1a\u51fa\u73b0 expected actually happening \u4f1a\u51fa\u73b0", "num": "6954", "d": "10/2017"}, {"title": "errorcaptured errorhandler capture errors von handlers", "body": "version reproduction link steps reproduce click throw error button reproduction link expected display alert error object handled errorcaptured hook defined appvue component actually happening errorcaptured hook invoked seems typings optionsdts specified docs", "num": "6953", "d": "10/2017"}, {"title": "vue removes tab character spans", "body": "version reproduction link steps reproduce add span element containing tab character somewhere inside app element like inside paragraph text indented expected tab character left alone thus able indent given line actually happening vue strips tab character span using edit content posts pasting code contain tab indentations transformed upon viewing saved came find vue removes tab characters inside aforementioned span tags thus code pasted loses indentation", "num": "6951", "d": "10/2017"}, {"title": "error compiling template log tweak log message order", "body": "problem feature solve firefox caps length individual console log case error compiling template message could lead actual message trimmed supposed config option change limit nt seem effect proposal move message beside error compiling template message example would also make error skimmable proposed api look like", "num": "6950", "d": "10/2017"}, {"title": "vue render older versions ios", "body": "version reproduction link steps reproduce primary users wont latest phones see sample vue apps simply nt render ios safari gt reproduction vue demo render ios equivalent react component seen vue apps also please advise expected see app rendered actually happening seeing blank page", "num": "6948", "d": "10/2017"}, {"title": "class \u7ed1\u5b9a\u65f6 \u65e0\u6cd5\u4f7f\u7528\u5e26\u6709 \u7684 class", "body": "version reproduction link steps reproduce itemname new vue el app data message hello vuejs items name zhangsan isright true name wangwu isright false expected \u53ef\u4ee5\u7ed1\u5b9a \u542b\u547d\u540d\u7a7a\u95f4 \u7684 class \u6837\u5f0f\u547d\u540d actually happening \u65e0\u6cd5\u6b63\u786e\u89e3\u6790 \u6d4b\u8bd5\u4e86\u4e0b \u542b \u7684 class \u5219\u53ef\u4ee5", "num": "6947", "d": "10/2017"}, {"title": "transition \u548c flip venterto \u4e0d\u6d88\u5931", "body": "version reproduction link steps reproduce \u5217\u8868\u8fc7\u5ea6\u4f7f\u7528 \u5217\u8868\u8fc7\u5ea6\u4f7f\u7528 \u9875\u9762\u4e2d\u540c\u65f6\u5b58\u5728\u4e00\u4e2a\u7684 \u8fd8\u662f\u4e0d\u7528 expected \u6b63\u786e\u6267\u884c\u65b0\u589e\u8fdb\u5165\u52a8\u753b actually happening", "num": "6946", "d": "10/2017"}, {"title": "working passing array first argument", "body": "version reproduction link steps reproduce add multiple custom event listeners try remove try emit removed events expected nothing happen event listeners removed actually happening got printed console means event listeners removed expected please check post vue forum details", "num": "6945", "d": "10/2017"}, {"title": "support reactivity subclassed arrays", "body": "problem feature solve support subclassed arrays prevent vuejs completely removing subclassed array prototype revert back native array prototype turn breaks application code expecting array extended methods example javascript const class extends array constructor super const arr new arrpush consolelog pushed called const v new vue el mountele data arr arrpush console output related proposed api look like api changes feature request simply request array prototype replaced support vue reactivity continue call method array instance wrapped vuejs mutator code", "num": "6943", "d": "10/2017"}, {"title": "domexception failed execute setattribute element valid attribute name", "body": "error times resolved adding check line issue", "num": "6941", "d": "10/2017"}, {"title": "keepalive include also cache anonymous components", "body": "version reproduction link steps reproduce triggle route expected second route component cached actually happening second route component cached demo tow routerview component name result right demo second route name also cached match first checked component name option local registration name key parent components option name option available anonymous components matched l keepalive routerview every anonymous component page cached nt think reasonable", "num": "6938", "d": "10/2017"}, {"title": "provide bundle", "body": "problem feature solve recently working project attempts deploy code production idea inspired philip walton post hacked vuejstemplateswebpack output dual bundles feature detection downgrade benefit significant script execution time bundle size reduces vue well vuerouter vuex etc could provide bundles performance boost even significant according compatibility table compatible browsers got lot market shares although vue relies feature think still meaningful provide bundle option proposed api look like request particular apis", "num": "6937", "d": "10/2017"}, {"title": "keepalive\u5339\u914d\u5230\u4e86\u533f\u540d\u7ec4\u4ef6", "body": "version reproduction link steps reproduce \u548cactivated\u751f\u547d\u5468\u671f\u51fd\u6570 expected \u51fd\u6570 actually happening \u8fd9\u662ffeature\u8fd8\u662fbug \u6216\u8005\u662f\u6211\u7684\u7528\u6cd5\u4e0d\u5bf9", "num": "6935", "d": "10/2017"}, {"title": "vueset nt force variable", "body": "version reproduction link steps reproduce click table header time expected list names sorted evrytime click header actually happening list sorted works fine use temp variable like", "num": "6933", "d": "10/2017"}, {"title": "memory leak updatedomlisteners updatecomponentlisteners", "body": "version reproduction link steps reproduce create vue instance reference large object data render either component element event handler destroy vue instance remove element null reference expected vue instance references contains freed garbage collection actually happening variables hang onto references prevent garbage collection fix ready filing pr shortly", "num": "6931", "d": "10/2017"}, {"title": "attribute supports mix using string object", "body": "problem feature solve attribute support one array string object think convenient vue support use one attribute proposed api look like", "num": "6930", "d": "10/2017"}, {"title": "rerenders changes affects sibling elements", "body": "version reproduction link steps reproduce please open codepen example type something input expected input lose focus actually happening input rerenders loses focus happens conditional elements exists input workaround use vshow instead vif cases", "num": "6929", "d": "10/2017"}, {"title": "may infinite update loop component render function", "body": "version reproduction link steps reproduce create websocket connection socket data change continue custom method want set three port like data template setprice itemvarietytype methods error message solve problem expected actually happening \u88ab\u8ba4\u4e3a\u662f\u65e0\u9650\u6e32\u67d3\u7ec4\u4ef6", "num": "6928", "d": "10/2017"}, {"title": "may infinite update loop component render function", "body": "create websocket connection socket data change continue custom method want set three port like data template setprice itemvarietytype methods error message solve problem", "num": "6926", "d": "10/2017"}, {"title": "typescript may infer props type", "body": "version vue typescript reproduction link steps reproduce typescript may infer props type eg javascript appvue import header headervue export default components vheader header computed methods test left number right number number return left right headervue import vue vue export default props test function data thistest aa aa return thistest aa aa invoke correct vue get parent props function type expected types error actually happening run success", "num": "6924", "d": "10/2017"}, {"title": "typescript infer props type", "body": "typescript may infer props type eg javascript appvue import header headervue export default components vheader header computed methods test left number right number number return left right headervue import vue vue export default props test function data thistest aa aa return thistest aa aa invoke correct vue get parent props function type", "num": "6923", "d": "10/2017"}, {"title": "typescript declaration working render function", "body": "version reproduction link steps reproduce build project build pass uncomment render function errorts build build fails component type changed message prop expected component type inferred data props computed methods accessible methods render functions actually happening soon add render function type inference loses everything except props", "num": "6921", "d": "10/2017"}, {"title": "observable used array work mutating array methods overwritten", "body": "version reproduction link steps reproduce create array instance override method overriding method directly array instance instantiate vue instance provide array input push values array nothing rendered expected vuejs reactive system detects mutations array actually happening vuejs react array mutations ran issue code base already uses similar pattern observing data looking source array prototype created using arrayprototype simply applied instance replacing think solution would move logic protoaugment andor copyaugment storing original method overriding ensuring original called another observation protoaugment take consideration method override done instance array custom never reached cases even suggested solution would help cases paul", "num": "6920", "d": "10/2017"}, {"title": "update value", "body": "version reproduction link steps reproduce write input words click reset button expected expect get clear value input actually happening value input cleared", "num": "6919", "d": "10/2017"}, {"title": "vif velse working type vmodel", "body": "version reproduction link steps reproduce run jsfiddle example expected work actually happening seems effect maybe relatedduplicate issue issue", "num": "6918", "d": "10/2017"}, {"title": "domprops twice value key", "body": "version reproduction link steps reproduce run jsfiddle program look textarea content precisely last domprops expected generate key twice actually happening rise error strict mode jsfiddle example nt rise error strict mode discovered issue using webpack babel test", "num": "6917", "d": "10/2017"}, {"title": "horizontaltab attribute argument causes error compiling template internet explorer edge", "body": "version reproduction link steps reproduce html work html work javascript expected vue able compile template matter horizontaltab attribute actually happening vue fails compile template invalid expression invalid character true raw expression vbind class true found vuejs happens internet explorer edge works chrome firefox related bug style multiline attribute removes root element versions ie fixed handle multiline atribute value parsing ie fix seen error message doesnt complain template ran bug write long attributes multiple lines use horizontaltabs indent lines easier read", "num": "6916", "d": "10/2017"}, {"title": "grandchild component disappears parent rerenders", "body": "version reproduction link steps reproduce jsfiddle wait settimeout finish parent label set false component rerenders loses content grandchild expected grandchild content still dom actually happening grandchild disappears component parent rerenders expecting bug fixed issue sure similar issue", "num": "6915", "d": "10/2017"}, {"title": "request add vmodellazy components", "body": "problem feature solve vmodel components already supports trim number lazy modifier support components would make uniform across platform proposed api look like change backwards compatible would add new property model definition", "num": "6914", "d": "10/2017"}, {"title": "hope way set scope variable", "body": "sorry chinease try translate later problem feature solve mustache interpolations data deep props make code cumbersome datajs mypagevue vue div p somedeeppropsa p somedeeppropsb import data datajs export default data tried solutions computed properties mypagevue vue div p propsa p propsb import data datajs export default data computed props return thissomedeepprops easy use computed properties become cumbersome directive define scoped variable mypagevue vue div template vfor props somedeepprops p ref propsa p ref b propsb import data datajs export default data almost works well sideeffect scope become array child component dataviewvue vue div p propsa p propsb export default props props mypagevue vue div dataview props somedeepprops import data datajs import dataview dataviewvue export default components dataview data interpolations child component become simple children also cumbersome addition child need wrapper element component root needed scoped slot make reusable component subscopevue vue div slot sub data export default props data mypagevue vue div subscope data somedeepprops template slotscope scope p scopesuba p scopesubb subscope data somedeepprops template slotscope sub p suba p subb import data datajs import subscope subscopevue export default components subscope data interpolations look like simpler codes become complex proposed api look like hope directive define scoped variables like affect performance api optimized used reference first elements value like \u800c \u6211\u60f3\u4e5f\u8bb8\u8fd8\u6709\u66f4\u597d\u4e00\u70b9\u7684\u540d\u5b57 used reference array elements value like", "num": "6913", "d": "10/2017"}, {"title": "typescript problem lifecycle hooks v extends vue", "body": "version reproduction link steps reproduce link additem component using created hook show issue user created hook try use inside creating componentoptions instance expected expected able use v interface inside hook using variable actually happening referencing componentoptions instead v instance although runtime actually referencing instance implemented v interface issue happens advanced typescript users affect execution javascript users", "num": "6912", "d": "10/2017"}, {"title": "able use time", "body": "problem feature solve currently mixins way distribute reusable template extended component render function would also ignored component template ways requires pug templating say want write mixin nt want limit user templating option mixin would wrapper common styling proposed api look like template render would processed render function template access template proposal dumb better way handle scenario thanks", "num": "6911", "d": "10/2017"}, {"title": "\u5728ts\u4e2d\u8def\u7531\u5b9a\u4e49\u65f6\u65e0\u6cd5\u4f7f\u7528import \u5b9a\u4e49\u5f02\u6b65\u5b50\u7ec4\u4ef6", "body": "version reproduction link steps reproduce \u65e0\u6cd5\u4f7f\u7528import \u5b9a\u4e49\u5f02\u6b65\u5b50\u7ec4\u4ef6 expected \u65e0\u6cd5\u4f7f\u7528import \u5b9a\u4e49\u5f02\u6b65\u5b50\u7ec4\u4ef6 actually happening \u65e0\u6cd5\u4f7f\u7528import \u5b9a\u4e49\u5f02\u6b65\u5b50\u7ec4\u4ef6 \u65e0\u6cd5\u4f7f\u7528import \u5b9a\u4e49\u5f02\u6b65\u5b50\u7ec4\u4ef6", "num": "6909", "d": "10/2017"}, {"title": "computed property setter component called updating vmodel", "body": "version reproduction link steps reproduce declare computed property parent component setter child component pass computed property vmodel attempt update property via vmodel binding expected computed property setter called actually happening computed property setter called following message appears javascript console appears regression vue changing vue version provided jsfiddle fixes bug optimisation applied earlier declare computed properties component prototype appears interfere call hasown function set observerindex", "num": "6908", "d": "10/2017"}, {"title": "ssr issue dynamic type", "body": "version reproduction link unable quickly setup ssr environment show issue steps reproduce vue export default data return foo expected generated html server actually happening server generates hydration error browser console", "num": "6907", "d": "10/2017"}, {"title": "\u4e2d vue\u7684template\u6807\u7b7e\u5185\u7684\u5185\u5bb9\u65e0\u6cd5\u89e3\u6790\u51fa\u6765", "body": "vue\u7684template\u6807\u7b7e\u5185\u7684\u5185\u5bb9\u65e0\u6cd5\u89e3\u6790\u51fa\u6765", "num": "6906", "d": "10/2017"}, {"title": "functional components use render slots slotscope attr render", "body": "version reproduction link steps reproduce jsfiddle show first element rendering applied expected functional component render attr actually happening applying functional component renders element never renders would also like see ability possible access data within functional component context either prop something like", "num": "6904", "d": "10/2017"}, {"title": "nt select correct option render", "body": "version reproduction link steps reproduce links nothing instances set vif select also vmodel see examples expected select render option whose value value model bound select selected actually happening first option select active either call forceupdate another model changed click text field type letter suddenly correct value selected dropdown used work vue upgraded discovered working around nexttick gt thisforceupdate previous submitted issue however believe gebilaoxiong closed prematurely provided solution changed functionality solve actual issue", "num": "6903", "d": "10/2017"}, {"title": "limit input number without using number type", "body": "problem feature solve way limit inputs numbers still using reasons using allow first digit accept minlength maxlength adds crappy component web browser proposed api look like adding directive input limit numbers", "num": "6902", "d": "10/2017"}, {"title": "typescript add props type component constructor", "body": "problem feature solve would useful infer props type component example write type safe wrapper improve interface directly typescript function rendercomponent h createelement component extendedvue data vnodedata amp props partial children vnodechildren vnode return h component data children const mycomponent vueextend props foo string render h return h div thisfoo const parent vueextend render h return rendercomponent h mycomponent props foo error type property foo imcompatible proposed api look like generate type means ca nt determine type object think easiest reasonable way achieve adding types", "num": "6901", "d": "10/2017"}, {"title": "native event vuejs event modifier", "body": "version reproduction link steps reproduce press enter input b check checkbox emultae keyboard event expected classlist appear b classlist appear actually happening classlist appear b nothing appear remove modifier template eg keyup checkbox raise event normal bug", "num": "6900", "d": "10/2017"}, {"title": "component slot rerenders even slot component data changed", "body": "version reproduction link steps reproduce type something input expected method test component nt called actually happening method test component called serious performance issue component complicated rerendered even nothing changes", "num": "6898", "d": "10/2017"}, {"title": "watch array data item array attribute", "body": "example data like new vue data nations state asia country china japan want watch nations index country index simple way solve", "num": "6897", "d": "10/2017"}, {"title": "vcloak iframe google recaptcha ignore vue warn", "body": "hi used google recaptcha plugin inside vuetemplate inline showed vuewarn like templates responsible mapping state ui avoid placing tags sideeffects templates", "num": "6896", "d": "10/2017"}, {"title": "functional components data merging util", "body": "problem feature solve hi components extend feature nothing similar functional components problem solution well explained works fine grateful author would like request official core solution edge situations new features party solutions difficult time top proposed api look like similar done alexsasharegan", "num": "6895", "d": "10/2017"}, {"title": "", "body": "\u76f4\u63a5\u53f3\u952e\u6253\u5f00\u8fd9\u4e2a\u5730\u5740\u662f\u6709js\u4ee3\u7801\u7684", "num": "6894", "d": "10/2017"}, {"title": "object destructuring vbind", "body": "problem feature solve came case parent component using getter pass props child component looked like far good one teammate could manage store make sure much necessary data supplied getter data another teammate could specify child component props accept child component needed another prop nt come getter data nt make sense including getter data nt semantic make things work props declared like would great sacrifice object literal shorthand syntax cases keep api dry proposed api look like", "num": "6893", "d": "10/2017"}, {"title": "dynamic component rendering slot tree", "body": "version reproduction link steps reproduce open chrome edge full width click toolbar menu icon persistent drawer openclose renders properly decrease width window hit mobile media query maxwidth drawer temporary drawer fixed content rendered expected drawer content rendered actually happening dynamic update drawer component content slot rendered sumary issue forum reproduce dev mode clone repo npm install npm run dev already tried checked lyfecycle seem properly called slotdefault proper vnodes facing virtual dom caching issue", "num": "6891", "d": "10/2017"}, {"title": "support warnings potential accessibility issues vue components", "body": "problem feature solve help point accessibility flaws vue components development may core library feature could set eslint rules cli generates scaffold proposed api look like could eslint plugin different module similar", "num": "6889", "d": "10/2017"}, {"title": "inconsistency behavior vmodel von element", "body": "version reproduction link steps reproduce click checkbox several times matter expected properties ison end value actually happening properties ison end opposite values vue least experiment results values ison seems natural new state checkbox exactly interested inside event handler seems like trivial use case sure regression bug feature either way fact backward compatibility broken surely bad thing especially since npm installs given version range", "num": "6888", "d": "10/2017"}, {"title": "video attribute muted applied firefox", "body": "version reproduction link steps reproduce pen consists simple vue instance mounted containing video element open pen chrome notice volume icon set muted video muted played open pen firefox notice volume icon set unmuted video unmuted played expected video plays muted controls show muted actually happening video plays unmuted controls show unmuted especially issue autoplaying videos reproduced firefox firefoxdeveloperedition different machines running either macos sierra high sierra", "num": "6887", "d": "10/2017"}, {"title": "eventtarget nt always point element", "body": "version reproduction link steps reproduce first click icon button next click edge button icon expected expect eventtarget button cases since event handler declared button actually happening eventtarget depends location click something nt expect nt used vue live projects yet love seeing far", "num": "6884", "d": "10/2017"}, {"title": "strange behaviour watch object", "body": "version reproduction link steps reproduce define object attributes data section place html select object binded one defined object attribute define prop watcher one attribute define api watcher defined object entirely deep option initiate vmodel changing select value compare curr prev values watchers expected expected curr prev variables watchers actually happening curr prev variables api watcher abnormal prop watcher different normal normal behaviour", "num": "6883", "d": "10/2017"}, {"title": "nt select correct option render", "body": "version reproduction link steps reproduce nothing autofake ajax data load expected select render option whose value value model bound select selected actually happening first option select active either call forceupdate another model changed click text field type letter suddenly correct value selected dropdown used work vue upgraded discovered working around nexttick gt thisforceupdate", "num": "6882", "d": "10/2017"}, {"title": "\u5173\u4e8erules\u68c0\u9a8c\u591a\u5c42json\u7591\u95ee", "body": "problem feature solve form name bejson url page isnonprofit true address street \u79d1\u6280\u56ed\u8def city \u6c5f\u82cf\u82cf\u5dde country \u4e2d\u56fd links name google url name baidu url name soso url proposed api look like \u50cf\u5b98\u65b9\u6587\u6863\u4e00\u6837", "num": "6881", "d": "10/2017"}, {"title": "\u5173\u4e8erules\u6821\u9a8c\u591a\u5c42json\u7591\u95ee", "body": "", "num": "6880", "d": "10/2017"}, {"title": "inlinetemplate delimiters", "body": "version reproduction link steps reproduce observe results bottomright frame expected display foojpg actually happening display filename using vue jazz sections nonspa serverrendered go application", "num": "6879", "d": "10/2017"}, {"title": "watch api vs watch property different result observed", "body": "hi posting rails gem netstuff hello trying implement custom select whose value binded data object watch behaves differently direct attribute watching work properly deep watching whole object gives another result values curr prev normal", "num": "6878", "d": "10/2017"}, {"title": "mouse button modifiers von precise aliases", "body": "problem feature solve currently mouse button modifiers introduced values correspondingly correct default righthanded layout lefthanded mode buttons switched os right button value left button besides also righthanded users may reverse remap mouse buttons working code names mouse buttons may lead confusion bugs among developers familiar default righthanded mode target modifiers proposed api look like keep deprecated add aliases", "num": "6877", "d": "10/2017"}, {"title": "\u8bf7\u6559\u4e0b", "body": "\u6211\u7528\u7684\u662f vs code \u7f16\u8f91\u5668 vscode\u7528\u6237\u8bbe\u7f6e \u91cc\u9762\u7684\u914d\u7f6e\u89c4\u5219\u5982\u4e0b \u6211\u7684\u95ee\u9898\u5982\u6807\u9898 \u6211\u8be5\u914d\u7f6e\u90a3\u4e2a\u53c2\u6570 \u8bf7\u6559\u4e0b\u670b\u53cb\u4eec", "num": "6876", "d": "10/2017"}, {"title": "alert possibly fix ssr mismatch production", "body": "problem feature solve currently way receive alerts possibly rerender production concerning ssr vs vdom mismatch critical different browsers handle unexpected ways instance finished trouleshooting issue specific windows rendered vdom tree match ssr rendered html causes white screen chrome browsers able recover mismatch renders fine navigating already rendered vue initial rendering happens specific page discussion forum proposed api look like think bulk code currently lives think initial ssr render need granular flags opt alerts behavior currently nodeenv initial maybe verbose thoughts would warnonssrmismatch recoveronssrmismatch true change behavior understand performance critical open suggestions would willing implement pr", "num": "6874", "d": "10/2017"}, {"title": "typesystem actually works sfc", "body": "version reproduction link steps reproduce clone repo npm npm run dev expected throw compile error actually happening build success sure issue vue ts maybe use wrong way p", "num": "6873", "d": "10/2017"}, {"title": "asset support functional components", "body": "problem feature solve functional components templates allow users improve performance without sacrificing readability ease use however currently support components option limits feature lot limited set use cases proposed api look like simply support components option like nonfunctional components", "num": "6872", "d": "10/2017"}, {"title": "polyfilleventsource added missing eventsource window", "body": "polyfilleventsource added missing eventsource window \u5728ie\u6d4f\u89c8\u5668 \u62a5\u8fd9\u4e2a\u9519", "num": "6871", "d": "10/2017"}, {"title": "tree view inconsistent behavior", "body": "version reproduction link steps reproduce slight modification offical tree view example moved treedata simple json object directly template one longer add new nodes tree expected expected behave way original script provided jsfiddle actually happening put json data directly template tree displays correctly exceptions raised longer add new nodes tree according documentation props modified however modified offical example vuejs website moreover hard imagine meaningful implementation interactive tree structure without modifying props data", "num": "6870", "d": "10/2017"}, {"title": "add ad script code page", "body": "standard popunders code copy paste code near top website body tag head tag traffic sell sent return url end code url must encoded best results highest earnings place code website separately", "num": "6869", "d": "10/2017"}, {"title": "transition appear hook set component level", "body": "version reproduction link steps reproduce click showa showb button see transition hooks fired expected clicking showa showb button appear hooks fired first first time component loaded actually happening transition enter hooks ones fired need feature projects need different animationtransition component first loaded using vuerouter load component put issue vuerouter realized vue issue thanks help", "num": "6868", "d": "10/2017"}, {"title": "lost eventcurrenttarget pass event props", "body": "version reproduction link steps reproduce dispatch event set event props component expected eventcurrenttarget htmlelement actually happening eventcurrenttarget null vue problem", "num": "6867", "d": "10/2017"}, {"title": "ios component issue", "body": "version reproduction link steps reproduce expected actually happening \u5b50\u83dc\u5355\u65e0\u6cd5\u5c55\u5f00 \u6b64\u95ee\u9898\u53ea\u51fa\u73b0\u5728 ios pad \u548c android \u5176\u4ed6\u7248\u672c\u7684\u4e5f\u5b58\u5728\u95ee\u9898", "num": "6866", "d": "10/2017"}, {"title": "vuejs \u4f7f\u7528vhtml\u6709\u65f6\u4e0d\u663e\u793a\u5185\u5bb9", "body": "", "num": "6865", "d": "10/2017"}, {"title": "overwrite element attributes default value", "body": "problem feature solve custom html elements vue overwrites attributes default values one example attribute always set truthy values absolutely makes sense html elements defined html standard custom elements custom elements yet web standard already ways build use experienced issue experimenting custom element tab bar selected tab stored selected attribute find code example code example currently limited chrome safari missing polyfills browsers proposed api look like vue already config setting proposal would attributes set default values elements array approach valid example code jsfiddle would stay output would change selected attribute value", "num": "6864", "d": "10/2017"}, {"title": "transition child event bugs", "body": "version reproduction link steps reproduce focus input click hello expected hello click event call actually happening nothing happen", "num": "6863", "d": "10/2017"}, {"title": "possible mix vue template jsx", "body": "problem feature solve create vue template fixed using switch exclude nt want display thinking using jsx inside vue template make vue template flexible developer code case pass jsx data component base display want example file call template base b base template display c template display base template case import b c pass c b using prop syntax make b need import file much coding need deal c contain coding display b place load coding proposed api look like", "num": "6862", "d": "10/2017"}, {"title": "optimize case conversion behavior props", "body": "problem feature solve props named like changed better proposed api look like kebab case change", "num": "6861", "d": "10/2017"}, {"title": "unit test issues mocking services async data", "body": "issue writing unit test using viewloader may correct place question please move issue inform open issue question full stack overflow", "num": "6859", "d": "10/2017"}, {"title": "removing first last element list rendered component forces complete rerendering items", "body": "version reproduction link steps reproduce vfor list items observe item elements action shifts pops list expected items removed without rerendering item list actually happening whole list rerendered adding new elements works expected triggering several pop shift operations single list splice end start performing splice beginning end respectively triggers rerendering problem", "num": "6857", "d": "10/2017"}, {"title": "vuecomponentoptions lt gt compatible ts strictfunctiontypes", "body": "simplified example nt methods nt matter bear ts interface foo extends vue bar string vuecomponent foocomponent template foocomponenttemplate props bar type string required true vuecomponentoptions amp thistype causes pretty big compilation error goes follows may also caused incorrect migration vue typings though clear correct migration path blog post talks merging documentation correctly declare component conforms interface subclassing", "num": "6855", "d": "10/2017"}, {"title": "elementui \u65e5\u671f\u9009\u62e9\u63a7\u4ef6\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528", "body": "version reproduction link steps reproduce \u9875\u9762\u4e2d\u5982\u679c\u5f15\u7528\u7684\u662f unpkgcomvuedistvuejs \u65e5\u671f\u9009\u62e9\u8303\u56f4\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c \u65e0\u6cd5\u9009\u62e9\u65e5\u671f \u5982\u679c\u5f15\u7528\u7684\u662f unpkgcomvue \u65e5\u671f\u9009\u62e9\u8303\u56f4\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c \u53ef\u4ee5\u9009\u62e9\u65e5\u671f \u9664\u4e86elementui \u5916 \u540c\u65f6\u4f7f\u7528\u4e86iview\u7ec4\u4ef6 \u53d1\u73b0\u91cc\u9762\u7684\u65e5\u671f\u9009\u62e9\u8303\u56f4\u63d2\u4ef6\u4e5f\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c \u56e0\u6b64\u6211\u6000\u7591\u662fvue\u672c\u8eab\u7684bug\u5bfc\u81f4\u7684 expected \u65e5\u671f\u9009\u62e9\u8303\u56f4\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c actually happening \u53ef\u4ee5\u6b63\u5e38\u9009\u62e9\u65e5\u671f\u8303\u56f4", "num": "6854", "d": "10/2017"}, {"title": "transition elelment jump origin unexpected", "body": "version reproduction link steps reproduce click bottom area change list appear disappear isshow true list animated xaxis isshow false list animated xaxis expected isshow true list animated xaxis isshowfalse animated actually happening isshowtrue list animated jumps origin", "num": "6853", "d": "10/2017"}, {"title": "transition elelment jump origin unexpected", "body": "", "num": "6852", "d": "10/2017"}, {"title": "class attribute added functional child component added child component root element", "body": "version reproduction link steps reproduce import functional component add template render function add class attribute functional component eg observe class ignored applied expected class applied functional component root element actually happening class ignored", "num": "6851", "d": "10/2017"}, {"title": "export prop type main types file vuetypesindexdts", "body": "problem feature solve attempting declare type complex objecttype prop component difficult understand without knowing exactly props typing works cast specific prop interface create best way currently ts import vue vue import prop vuetypesoptions interface foobar foo string bar string export default vueextend props foobar object gt foobar proposed api look like would nice expose prop generic type vuetypesoptionsdts default types export simply use ts import vue prop vue boilerplate props foobar object props also extends complex callback types need whenever regular prop types via primitive type constructors nt work create interface cast works", "num": "6850", "d": "10/2017"}, {"title": "component data nt change", "body": "version reproduction link steps reproduce hi guys shopping cart made two components food amp cart inside main items change spect console data exist computed properties data doesnt update expected component data change actually happening component data doesnt change", "num": "6849", "d": "10/2017"}, {"title": "missing vueconstructor typescript typings creating plugins", "body": "version reproduction link steps reproduce try create vue plugin using typescript expected way wonder make workaround expected able define plugin ts would plain js function parameter global vue object well typed actually happening could find possible way declare type vue parameter inside plugin type global vue object vueconstructor exported visible exported vue variable guess one solution simply export vueconstructor type could imported rare cases", "num": "6848", "d": "10/2017"}, {"title": "component data nt change", "body": "hi guys shopping cart made const bus new vue vuecomponent food props menu template methods addtocart item index bus emit a\u00f1adir item index replacespaces cat return catsplit join tolowercase vuecomponent cart template data return items computed productcount objectsize thisitems gt return thisitemslength else return total return created var data sessionstoragegetitem cart new vue el main mounted function document ready function settimeout function foodfilter li datafilterhamburguesasespeciales click two components food amp cart inside main items change spect console data exist computed properties data doesnt update", "num": "6847", "d": "10/2017"}, {"title": "component bundled vmodel von listeners attribute added input event passed value eventually object event", "body": "version reproduction link steps reproduce \u8f93\u5165\u4efb\u610f\u503c\u5f97\u5230\u7684\u662f object event \u5e76\u89c2\u5bdfconsole \u4fee\u6539vue\u7248\u672c\u91cd\u590d\u6b65\u9aa4 \u7136\u540e\u89c2\u5bdfconsole \u7ffb\u8bd1\u6765\u81ea\u8c37\u6b4c enter value get object event watch console modify vue version repeat steps observe console translate google expected input\u7684\u503c\u4e3a\u8f93\u5165\u7684\u503c value input value entered actually happening input\u6807\u7b7e\u5c06input event\u4f20\u9012\u7ed9\u7236\u7ec4\u4ef6 \u5bfc\u81f4value\u4e3a object event input tag passes input event parent component causing value object event although event still passed parent component via input affect final result affect final result", "num": "6846", "d": "10/2017"}, {"title": "vue nt respect existing setters modelclasses", "body": "version reproduction link steps reproduce run attached sample enter value bar see bar changed well enter value bar see bar detached bar expected existing setter bar used actually happening new property bar created", "num": "6845", "d": "10/2017"}, {"title": "", "body": "", "num": "6844", "d": "10/2017"}, {"title": "order unexpected", "body": "version reproduction link steps reproduce please open console print render render render print render render render updated updated updated expected order updated actually happening order updated", "num": "6843", "d": "10/2017"}, {"title": "question slot passed slot", "body": "problem feature solve elcardvue use component encapsulate another component named cardvue proposed api look like slot passed slot support whether consider supporting", "num": "6842", "d": "10/2017"}, {"title": "typescript ca nt infer prop names types contains type prop", "body": "version reproduction link steps reproduce compile code tsc typescript import vue vnode vue const ngcomponent vueextend name ngcomponent props foo type string bar types accepted render h vnode return h div thisfoo clone repro link expected successfully compiled treated string treated actually happening failed compile workaround ts import vue vnode vue vueextend name workaround props foo type string bar gt types accepted render h vnode return h div thisfoo", "num": "6841", "d": "10/2017"}, {"title": "button get focus unexpectedly", "body": "version reproduction link steps reproduce click next button look current focused element click prev button look current focused element expected click next button hidden focused element click prev button hidden focused element actually happening cancel button get focus cancel button get focus key set button problem seems vue reuses button dom nt reset focus state", "num": "6840", "d": "10/2017"}, {"title": "firefox mousewheel event incompatible", "body": "firefox mousewheel event firefox", "num": "6838", "d": "10/2017"}, {"title": "regarding documentation api reference router constructor options", "body": "version reproduction link steps reproduce click provided link right arrow gt right side website nothing redirects routes nt processes pages fact viewing api reference mode base also redirects routes also left arrow lt working fine visit router instance router object right arrow pointing first api reference particular section expected redirect provided source actually happening redirecting routes section mean redirecting routes api reference arrow pointing upwards", "num": "6836", "d": "10/2017"}, {"title": "failed mount component template render function defined", "body": "\u6211\u4f7f\u7528vuecli\u6765\u521d\u59cb\u5316\u4e00\u4e2ademo mount component template render function \u73af\u5883\u63cf\u8ff0 loadingvue loadingjs const loadingcomponent require loadingvue const loading install function vue \u6302\u8f7d\u7ec4\u4ef6 vuecomponent loading loadingcomponent moduleexports loading \u7136\u540e\u6211\u5728mainjs\u4e2d\u5f15\u5165 \u5e76\u5728appvue\u4e2d\u4f7f\u7528\u8fd9\u4e2aloading\u63d2\u4ef6\u62a5failed mount component template render function defined\u9519\u8bef", "num": "6835", "d": "10/2017"}, {"title": "help way embed external js scripts within component", "body": "like embed following script component nuxtjs app since nuxt solution like ask vue community see better way embedding external party js scripts embedding type scipt sort external configurations need add enable work js require mojosignupformsloader function l lstart baseurl uuid xxxxxx lid xxxxxx thanks", "num": "6834", "d": "10/2017"}, {"title": "vue ssr webpack plugin support template syntax filename option", "body": "problem feature solve multiple entry output point webpack plugin option filename nt support template syntac like name id convenient situation proposed api look like new vuessrserverplugin filename name vuessrserverbundlejson", "num": "6831", "d": "10/2017"}, {"title": "clientside rendered virtual dom tree matching serverrendered content", "body": "version reproduction link steps reproduce build docker image based run docker container create webpack run server uses ssr listen expected get output actually happening getting clientside rendered virtual dom tree matching serverrendered content error empty dom want client version make wbuild run got webpack dev server sidenote hot reloads nt work still nt figured kill server rerun make command sorry", "num": "6830", "d": "10/2017"}, {"title": "ref nt work functional components", "body": "version reproduction link steps reproduce open jsfiddle link check console expected child functional component attached give warning development environment attribute set functional component actually happening parent componet empty object similar issues react stateless components functional component actually generate vuecomponent instance instead attaching dom element directly warn error thrown may better choice", "num": "6829", "d": "10/2017"}, {"title": "unicode added href src link chrome", "body": "version reproduction link steps reproduce chrome browser click link inspect link href expected unicode html source browsers firefox ie edge safari link updated issue broke image actually happening link html source vuejs update link add unicode hrefsrc attributes broke link resolve issue correct link without tab line break without vuejs nt problem link containing tab line break working expected either tab line break replaced every browser chrome", "num": "6828", "d": "10/2017"}, {"title": "push shift causes rerender items", "body": "version reproduction link steps reproduce inspect list dev tools click add end button nodes highlithed means updated expected first item dropped new item inserted end list items stay still actually happening items dropped new items inserted first discovered behavior trying create dynamic list moving transiotion top property element moving ok transition applied correctly moving moving elements without trasition went deeper discovered whole list rerendered transition applied", "num": "6827", "d": "10/2017"}, {"title": "vonce within component template makes component instances static", "body": "version reproduction link steps reproduce create component uses within template renders dynamic content render component multiple times different content expected instance component renders associated content actually happening instances component render content seems regression witnessed", "num": "6826", "d": "10/2017"}, {"title": "clientside rendered virtual dom tree matching serverrendered content", "body": "hi ca nt use codesandbox reproduce error try add dependencies gives internal server error manshrugging minimal configuration got place giving troubles mainserverjs js import vue vue import router modulesrouter import app appvue receives context render call returning promise resolution root vue instance export default gt promiseresolve new vue router render h gt h app appvue export default name app routerjs js import vue vue import router vuerouter vueuse router const layout template ciao export default new router routes path name layout component layout npm list grep vue webpackserverconfigjs js const path require path const webpack require webpack const vuessrplugin require vuessrwebpackplugin moduleexports target set node avoid packaging builtins target node entry server entry file default one entry srcmainserverjs output path pathresolve dirname dist publicpath dist filename buildjs outputs nodecompatible modules instead browsercompatible librarytarget module rules test vue loader vueloader options loaders vueloader options go test js loader babelloader options presets env exclude nodemodules test css loader styleloader cssloader test pngjpggifsvg loader fileloader options name name ext hash resolve alias vue vuedistvueesmjs remove devserver block performance hints false avoids bundling external dependencies node load directly nodemodules externals objectkeys require packagejson dependencies devtool sourcemap need put behind production env variable plugins add ssr plugin new vuessrplugin new webpackdefineplugin processenv nodeenv prod new webpackoptimizeuglifyjsplugin sourcemap true compress warnings false new webpackloaderoptionsplugin minimize true get using router renders fine otherwise maybe got deps wrong along error also get anybody know going thanks", "num": "6825", "d": "10/2017"}, {"title": "test vuejs application automatically wait ajax capybara", "body": "problem feature solve following article method called jqueryactive judge whether http request finished condition vuejs similar solution proposed api look like pageevaluatescript vuejsactive zero", "num": "6824", "d": "10/2017"}, {"title": "object\u6a21\u677f\u6570\u636e\u83b7\u53d6\u4e0b\u4e00\u5c42\u65f6\u62a5undefined", "body": "version reproduction link steps reproduce item ordersuccess payflag ordertotal paymoney item ordersuccess paymoney vue warn error render typeerror read property paymoney undefined expected actually happening \u62a5\u9519", "num": "6823", "d": "10/2017"}, {"title": "vif render end tag element dynamically", "body": "version reproduction link steps reproduce refer jsfiddle expected expect second tbody div class scrolldiv actually happening empty table shows", "num": "6822", "d": "10/2017"}, {"title": "ubuntu run error", "body": "created new project laravel follow steps run npm install dependencies correct run npm run dev get error dev varwwwsubdomainsrealhost npm run development development varwwwsubdomainsrealhost crossenv nodeenvdevelopment nodemoduleswebpackbinwebpackjs progress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs usrbinenv node file directory npm err linux npm err argv usrbinnodejs usrbinnpm run development npm err node npm err npm npm err file sh npm err code elifecycle npm err errno enoent npm err syscall spawn npm err development npm err spawn enoent npm err npm err failed development script crossenv nodeenvdevelopment nodemoduleswebpackbinwebpackjs progress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs npm err make sure latest version nodejs npm installed npm err likely problem package npm err npm npm err tell author fails system npm err crossenv nodeenvdevelopment nodemoduleswebpackbinwebpackjs progress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs npm err get information open issue project npm err npm bugs npm err nt available get info via npm err npm owner ls npm err likely additional logging output npm err please include following file support request npm err varwwwsubdomainsrealhostnpmdebuglog npm err linux npm err argv usrbinnodejs usrbinnpm run dev npm err node npm err npm npm err code elifecycle npm err dev npm err exit status npm err npm err failed dev script npm run development npm err make sure latest version nodejs npm installed npm err likely problem package npm err npm npm err tell author fails system npm err npm run development npm err get information open issue project npm err npm bugs npm err nt available get info via npm err npm owner ls npm err likely additional logging output npm err please include following file support request npm err varwwwsubdomainsrealhostnpmdebuglog", "num": "6821", "d": "10/2017"}, {"title": "kind issue closed two vfor renders undefined output", "body": "see bug still using vue verision", "num": "6820", "d": "10/2017"}, {"title": "intermittent net errcontentlengthmismatch amazon", "body": "version reproduction link steps reproduce notice issue nt need sample code create ubuntu server amazon machine access via ssh install nodejs tried vuecli run vue init webpack projecttest install runtime compiler install vuerouter skip eslint installation install karma skip nightwatch run npm install run npm run dev open port inbound rules access public browser expected open example screen actually happening screen wo nt load title gon na load console appear error net errcontentlengthmismatch error always appears seconds get request following message always appears unhandledpromiserejectionwarning unhandled promise rejection rejection id error exited code deprecationwarning unhandled promise rejections deprecated future promise rejections handled terminate nodejs process nonzero exit code tried vue vue issue tried templates notice sometimes error occurs run npm run dev sometimes page loads error occurs", "num": "6818", "d": "10/2017"}, {"title": "add warning ambiguous usage element", "body": "version reproduction link steps reproduce rendering anything rendering correctly expected vfor work slotscope given element actually happening visible fiddle rendering anything right works wrapped inside template tag", "num": "6817", "d": "10/2017"}, {"title": "inconsistent state possible middleclick refresh icon firefox", "body": "version reproduction link steps reproduce firefox check checkbox middleclick refresh icon toolbar expected consistent state either unchecked false checked true actually happening state checked false chrome resulting state unchecked false firefox less resulting state checked true happens inputs except textarea text ones number inputs result consistent state could nt make jsfiddle firefox nt attempt restore input state midlleclick refresh jsfiddle", "num": "6816", "d": "10/2017"}, {"title": "missing default export using systemjs requirejs makes vue unusable typescript", "body": "version reproduction link steps reproduce clone repo npm install run gulp navigate appropriate address browser default note console output project configured use systemjs default switch requirejs modifying indexhtml srcloginlogints uncommenting requirejs code commenting systemjs code expected errors console defined actually happening systemjs firefox developer edition error class heritage object null evaluating loading appbootstrapjs requirejs firefox developer edition typeerror class heritage object null bug appeared upgrading major project vue vue use webpack project want switch", "num": "6815", "d": "10/2017"}, {"title": "incorrect selection displayed using nonunique option values", "body": "version reproduction link steps reproduce provided jsfiddle choose option three dropdown selected option displayed instead shows one expected expected option selected would displayed using unique key option effect either actually happening showing option selected instead choosing another option value", "num": "6814", "d": "10/2017"}, {"title": "vshow firing late", "body": "version reproduction link steps reproduce go lt wide test list get hidden go back forth threshold make list flash flashes hidden vshow css make list vertical seems vshow firing late see comparison get list flash larger size expected list hidden lt actually happening list flashes vertical split second disappearing noticed updating hopefully quick fix using behavior menu bar make screen smaller janky", "num": "6813", "d": "10/2017"}, {"title": "change event nt triggered input type file uc browser android version", "body": "version reproduction link steps reproduce open uc browser android click tap custom input file expected popup menu contain gallery camera showed like expected let select file take photo file selected handler toggle class custom input render name selected filephoto input label actually happening file selected photo taken change event triggered works fine uc browser ios problem android version uc browser user jquery method vue", "num": "6812", "d": "10/2017"}, {"title": "proposal template inheritance using slots mechanism", "body": "problem feature solve within large application makes heavy use inheritance mixins lack template inheritance causes much jumping hoops rationale eloquently written captures gist wo nt repeat proposed api look like proposal solving issue simply extend upon existing slots mechanism shamelessly copypasting simplesmiler example issue html default header html stuff pronounced header goes footer added child default slot thus existing composition rules preserved feels natural vue developers people used templates blockbased inheritance like django pug etc rules empty attribute used singlefile components must given value extending dom element course allow multiple root elements", "num": "6811", "d": "10/2017"}, {"title": "autoclosed issue", "body": "edited", "num": "6810", "d": "10/2017"}, {"title": "undefined text vfor array empty", "body": "version reproduction link steps reproduce use vfor array empty element sibling basic text result vfor undefined expected nothing actually happening undefined text", "num": "6809", "d": "10/2017"}, {"title": "running template empty array inserts dom regression", "body": "version reproduction link steps reproduce run demo expected see nothing versions actually happening injected dom string", "num": "6808", "d": "10/2017"}, {"title": "vfor empty array prints string undefined", "body": "version reproduction link steps reproduce use vfor iterate empty array expected nothing render actually happening renders string undefined", "num": "6807", "d": "10/2017"}, {"title": "iterating empty array vfor printing undefined element used", "body": "version reproduction link steps reproduce reproduced automatically via provided codesandboxio link try remove div element fill array least one element remove undefined expected nothing printed actually happening undefined printed new fine", "num": "6806", "d": "10/2017"}, {"title": "input encapsulated components parent component monitors change event trigger time prematurely", "body": "version reproduction link steps reproduce \u5f53checkbox\u88ab\u5c01\u88c5\u6210\u7ec4\u4ef6\u540e \u5e76\u4f7f\u7528von listeners \u7ed1\u5b9a\u76d1\u542c\u4e8b\u4ef6\u65f6 \u7236\u7ec4\u4ef6\u5bf9\u5176\u76d1\u542conchange\u4e8b\u4ef6 \u89e6\u53d1\u65f6\u673a\u65e9\u4e8echeckbox\u7684\u503c\u4fee\u6539\u4e4b\u524d \u5bfc\u81f4\u83b7\u53d6\u4e0d\u5230\u6b63\u786e\u7684\u503c \u53ea\u80fd\u5bf9\u5176\u76d1\u542c\u539f\u751fchange\u4e8b\u4ef6 \u6216\u8005\u4f7f\u7528nexttick\u6765\u83b7\u53d6\u6700\u65b0\u7684\u503c \u6ca1\u6709\u51fa\u73b0 \u53ef\u4ee5\u4fee\u6539\u901a\u8fc7\u4fee\u6539vue\u7248\u672c\u5f97\u5230\u91cd\u73b0 \u6765\u81ea\u8c37\u6b4c\u7ffb\u8bd1 checkbox encapsulated component uses von listeners binding listening events parent component listens onchange event triggers time value checkbox modified resulting lack correct value listen original change event use nexttick get latest value situation appear modified modifying vue version reproduced google translate expected \u7236\u7ea7\u7ec4\u4ef6onchange\u5e94\u8be5\u5728value\u6b63\u786e\u5f97\u5230\u4fee\u6539\u4e4b\u540e\u89e6\u53d1 parent component onchange triggered value modified correctly actually happening \u7236\u7ea7\u7ec4\u4ef6onchange\u4e8b\u4ef6\u5728value\u4fee\u6539\u4e4b\u524d\u5c31\u88ab\u89e6\u53d1\u5bfc\u81f4\u65e0\u6cd5\u62ff\u5230\u6b63\u786e\u503c \u53ea\u80fd\u901a\u8fc7nexttick\u83b7\u53d6 parent component onchange event triggered value modified resulting inability get correct value obtained nexttick \u5bfc\u81f4\u4e24\u4e2a\u7248\u672c\u65e0\u6cd5\u517c\u5bb9 situation occur resulting two versions compatible", "num": "6805", "d": "10/2017"}, {"title": "vfor renders undefined empty another vfor loop", "body": "version reproduction link steps reproduce expected render actually happening result renders undefined undefined", "num": "6804", "d": "10/2017"}, {"title": "unexpected failure vmodel compiled codes", "body": "version reproduction link steps reproduce click radio element console output change vue version click radio voila console output expected vue handle event input element actually happening vue dose handle event part modified compiled code vue elementui radiobutton component seems compilation vmodel component changed vue vue consider simplified template output event name changes nt know feature template correctly written", "num": "6803", "d": "10/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected actually happening \u4f46\u662f\u5374\u6e32\u67d3\u4e86undefined", "num": "6801", "d": "10/2017"}, {"title": "dynamic input type works property called type", "body": "version reproduction link steps reproduce use dynamic type input property called get warning vue warn property method type defined instance referenced render make sure property reactive either data option classbased components initializing property see found wo nt work switch normal type like text checkbox radio button special types else branch click button click switch input checkbox try checking unchecking box model value change calling property works model value change expected dynamic input type work regardless property name actually happening dynamic input type works property called", "num": "6800", "d": "10/2017"}, {"title": "transition transform worked styleleft changed transitiongroup", "body": "version reproduction link steps reproduce click three divs styleleft changed transitionduration worked transition left transition transform worked transition opacity right work transition transform expected transition transform work actually happening transition transform works", "num": "6799", "d": "10/2017"}, {"title": "breaks functional components renders nested empty array", "body": "version reproduction link steps reproduce jsx functional component gets transpiled working fine vue renders undefined used without children transformation details comparisons inside repro link second thought maybe pass empty array children jsx element used without children runtime performance slightly better without empty array expected renders nothing actually happening renders undefined vue working fine", "num": "6798", "d": "10/2017"}, {"title": "vfor loop empty data returning undefined text", "body": "version reproduction link steps reproduce cek reproduction link cars data vfor working fine cars empty vfor printing undefined text expected nothing displayed actually happening display undefined text", "num": "6797", "d": "10/2017"}, {"title": "vfor shows undefined empty lists", "body": "version reproduction link steps reproduce list template like todo todos moment case empty list fallback li element shown update empty array renders undefined like expected render undefined empty array actually happening renders undefined hope bug quite lot cases like app thx", "num": "6793", "d": "10/2017"}, {"title": "animation transitiongroup changes position working", "body": "version reproduction link steps reproduce see jsfiddle link expected clicking link actions column row change position adjacent row using animation taking seconds actually happening row changes position immediate working", "num": "6792", "d": "10/2017"}, {"title": "\u5e0c\u671bprops\u4f20\u503c\u80fd\u591f\u4f7f\u7528\u6269\u5c55\u8fd0\u7b97\u7b26", "body": "problem feature solve hello\u7ec4\u4ef6\u63a5\u53d7data\u5c5e\u6027 data return b b hello\u7ec4\u4ef6data\u5c5e\u6027\u6700\u7ec8\u7ec4\u5408\u6210\u7684\u5bf9\u8c61\u662f b e", "num": "6791", "d": "10/2017"}, {"title": "two vfor template renders unexpected output", "body": "version reproduction link steps reproduce see jsfiddle link expected renders empty output actually happening renders undefined undefined", "num": "6790", "d": "10/2017"}, {"title": "page sometimes rendering sometimes rendering", "body": "version reproduction link steps reproduce click tab sometimes vfor render api response data sometimes render data expected click tab sometimes vfor render api response data sometimes render data actually happening click tab sometimes vfor render api response data sometimes render data", "num": "6789", "d": "10/2017"}, {"title": "computed property nt update data member updates", "body": "version reproduction link steps reproduce run jsfiddle see expected behavior comment return null statement expected computed property recalculated data member updated regular interval actually happening computed property recalculated", "num": "6788", "d": "10/2017"}, {"title": "supply props validator second argument", "body": "problem feature solve right props validated based value unable take props consideration access props object could complex validation example imagine component prop least one props must defined currently logic would placed component lifecycle hooks render function would like ability keep within functions think appropriate place logic proposed api look like", "num": "6787", "d": "10/2017"}, {"title": "click event fires twice", "body": "hi everyone bit trouble using axios vuejs using quasar framework making simple ecommerce website button user opens product page allows user insert product cart user clicks button want execute method however facing problem data gets inserted twice first row gets null second row get correct see image sure something wrong vuejs axios using postman sending request directly file data gets inserted correctly anyone help happening", "num": "6786", "d": "10/2017"}, {"title": "sidebar component changes order dom tree specific situation", "body": "appvue layout becomes child current view also happens open app url views way found solve problem wrap whole layout router view components working large app many views nt feel would great solution", "num": "6785", "d": "10/2017"}, {"title": "vue vfor render array working", "body": "version reproduction link expected page sometimes rendering sometimes rendering help source code getlist function main html var getdataasync apijoinus amp categoryid thiscategoryid get null function data datastate thisdatajoinsplice thisdatajoin thisdatajoinconcat datadata thisdatajoin datadata nexttick function main removeclass gaodu else alert \u6570\u636e\u8bf7\u6c42\u5931\u8d25", "num": "6784", "d": "10/2017"}, {"title": "\u70ed\u90e8\u7f72\u5f00\u53d1\u60c5\u51b5\u4e0b \u5f53\u4ec5\u4ec5\u8c03\u6574vue\u6587\u4ef6template\u4e2d\u76f8\u90bb\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578bvue\u7ec4\u4ef6\u4f4d\u7f6e\u65f6 vue\u8fd0\u884c\u65f6\u5bf9\u8c61vuecomponent\u7684\u987a\u5e8f\u5e76\u672a\u540c\u6b65\u8c03\u6574", "body": "version reproduction link steps reproduce \u4f8b\u5982 \u4fdd\u5b58\u540e \u9875\u9762\u663e\u793a\u6b63\u5e38 \u4f46\u662f\u8f93\u51fa\u8fd0\u884c\u65f6vue\u5bf9\u8c61\u65f6 vuecompoent\u987a\u5e8f\u672a\u53d1\u751f\u6539\u53d8 children children \u5907\u6ce8 \u5f53\u540c\u7c7b\u578bvue\u7ec4\u4ef6\u6807\u7b7e\u8c03\u6574\u4f4d\u7f6e\u65f6\u5220\u9664 \u65b0\u589e \u7236\u5b50\u5173\u7cfb\u8c03\u6574\u65f6 vuecomponent\u7684\u6570\u636e\u65f6\u5bf9\u5e94\u540c\u6b65\u7684 expected \u70ed\u90e8\u7f72\u5f00\u53d1\u60c5\u51b5\u4e0b template\u4e2d\u76f8\u90bb\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578bvue\u7ec4\u4ef6\u4f4d\u7f6e\u65f6 \u8fd0\u884c\u65f6vuecompoent\u7684\u4f4d\u7f6e\u4fe1\u606f\u53ef\u4ee5\u5bf9\u5e94\u6539\u53d8 actually happening \u70ed\u90e8\u7f72\u5f00\u53d1\u60c5\u51b5\u4e0b template\u4e2d\u76f8\u90bb\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578bvue\u7ec4\u4ef6\u4f4d\u7f6e\u65f6 \u8fd0\u884c\u65f6vuecompoent\u7684\u4f4d\u7f6e\u4fe1\u606f\u672a\u53d1\u751f\u6539\u53d8", "num": "6783", "d": "10/2017"}, {"title": "\u9012\u5f52\u7ec4\u4ef6\u4e2d\u53d8\u91cf\u4e0d\u5171\u4eab", "body": "version reproduction link steps reproduce \u70b9\u51fb \u548c expected actually happening \u6bcf\u4e2a\u5c42\u7ea7\u6709\u5355\u72ecactiveid", "num": "6780", "d": "10/2017"}, {"title": "view changed modern data changed", "body": "version reproduction link steps reproduce change price keep four decimal work normal debugger find modern data changed work input try use vm forceupdate work expected input actually happening change work", "num": "6779", "d": "10/2017"}, {"title": "ssr rendertostring called without err amp sourcemaps used stack traces lazyloaded components", "body": "version reproduction link steps reproduce first thank amazing work vue especially ssr issue rendering component server ssr using asynchronous lazyloaded components error lazyloaded component called error instead error gets logged console importantly sourcemaps used making error difficult debug repro clone repo curl look notice expected importing synchronously running curl see following output synchronous stdoutstderr found srcappvue http output internal server error xpoweredby express date fri oct gmt connection keepalive contentlength referenceerror defined moduleexportswebpackexportsa moduleexportswebpackexportsa vuecomponentdata getdata initdata initstate vuecomponentvueinit new vuecomponent createcomponentinstanceforvnode rendercomponentinner expect notice status code meaning called stack trace uses source maps clearly show error coming actually happening hand importing asynchronously uncommenting running curl see following output async stdoutstderr found srcappvue vueserverrenderer error rendering async component referenceerror defined exportsmoduleswebpackexportsa exportsmoduleswebpackexportsa vuecomponentdata getdata initdata initstate vuecomponentvueinit new vuecomponent createcomponentinstanceforvnode rendercomponentinner http output ok xpoweredby express date fri oct gmt connection keepalive contentlength notice status code meaning called without stack trace use source maps difficult debug", "num": "6778", "d": "10/2017"}, {"title": "module build failed", "body": "srcappvue bytes built failed error hidden modules error srcappvue module build failed syntaxerror unexpected token exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs srcmainjs multi webpack devserverclient webpackhotdevserver srcmainjs", "num": "6777", "d": "10/2017"}, {"title": "app wide component plugin", "body": "version reproduction link steps reproduce minimal reproduction link expected component functionality accessible appwide actually happening methods get called executed functionality rely data goal improve documentation working examples setup plugins recommended install procedures common gotchas like explained features vue guides correctly access component functionality globally", "num": "6776", "d": "10/2017"}, {"title": "performance issue cpu", "body": "version reproduction link steps reproduce open resource monitor see cpu usage open chrome browsers performance issues chrome worst go url first issue page idle process eat cpu normal scroll list create larger list might vfor issue cpu ticks records expected cpu chill actually happening cpu lot work use admin site example since cpu usage issues reproduced projectmaking thing vue related difference project multiple updates going cpu sometimes hitting chrome edge firefox still seems high using latest ssd ram computer bottleneck", "num": "6775", "d": "10/2017"}, {"title": "setsmapsweaksetsweakmaps collections reactive", "body": "version reproduction link steps reproduce create computed value based setmapweaksetweakmap update collection computed value updated expected expect view updated collection update actually happening view updated mistaken development done wrap arrays methods pop push done methods aforementioned collections", "num": "6774", "d": "10/2017"}, {"title": "", "body": "version reproduction link steps reproduce \u4ece\u9875\u9762 home \u8df3\u5230\u53e6\u4e00\u4e2a\u9875\u9762 \u9700\u8981\u767b\u5f55\u5e76 replace \u8f6c\u8df3\u5230 login\u53ea\u5b9a\u4e49\u4e86beforeenter\u6765\u8f6c\u8df3\u5230\u53e6\u4e00\u4e2a\u9875\u9762 \u7136\u540e\u5faa\u73af\u5230\u6b65\u9aa4 expected \u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c actually happening", "num": "6773", "d": "10/2017"}, {"title": "ca nt use npm install vuetemplatecompiler report error", "body": "version reproduction link steps reproduce use npm install vuetemplatecompiler callback errorand ca nt install plugins error info silly fetchpackagemetadata sum size noattac silly fetchpackagemetadata verbose stack syntaxerror unexpected end input verbose stack sum size noattac expected install vuetemplatecompiler actually happening error info silly fetchpackagemetadata sum size noattac silly fetchpackagemetadata verbose stack syntaxerror unexpected end input verbose stack sum size noattac node npm", "num": "6772", "d": "10/2017"}, {"title": "checkexpression include emessage error output", "body": "version reproduction link steps reproduce open browser console run inspect output warning message says expression invalid invalid dig way checkexpression order see actual parsing exception give clue add emessage catch warning output also vs eat end message template long maybe put template error message expected descriptive error messaging help resolve issue actually happening pointing problem problem case message nt helpful nt realize first put singlequotes around particular class name example docs missed could good call extra bit", "num": "6771", "d": "10/2017"}, {"title": "checkexpression include emessage error output", "body": "invalid expression could nt see wrong ended get way checkexpression order see actual parsing exception give clue", "num": "6770", "d": "10/2017"}, {"title": "warning string property value", "body": "version reproduction link steps reproduce run jsfiddle expected sure exactly think either console warning using default value property would make sense actually happening vue silently renders nothing inside component take stab fixing determined behavior indeed bug", "num": "6768", "d": "10/2017"}, {"title": "mixin inerhitance inconsistent used extends", "body": "version reproduction link steps reproduce extend component add mixin expected rule inerhitance component extended component mixin actually happening actual inerhitance component mixin clearly documented therefore bit missleading sure wether technically count bug least inconsistent behavoir", "num": "6767", "d": "10/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected actually happening rendertostring\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u65e0\u5185\u5bb9", "num": "6766", "d": "10/2017"}, {"title": "way inspect scoped slot value", "body": "problem feature solve nt know properties scoped slot log console current approach proposed api look like add function like print value template", "num": "6765", "d": "10/2017"}, {"title": "element id encapsulation feature request", "body": "hi first really like vue minor gripes component system feel encapsulating flexible vue dragdrop lib platform components act like html imports web components example nt proper code general illustration would cool could something like way could bootstrap external library within component without side effects", "num": "6762", "d": "10/2017"}, {"title": "customize server state script tag", "body": "problem feature solve renderstate method generates tag context state injected client consumption hydration configurable via options way customize tag targeting purposes would like able remove tag dom client hydration would hacky find select node without ability define attribute similar proposing new option append attribute tag called new options object currently proposed api look like js contextrenderstate scriptkey vuestate gt window lt strong gt initialstate lt strong gt later client code possible", "num": "6761", "d": "10/2017"}, {"title": "memory leak keepalive", "body": "version reproduction link steps reproduce switch foo home link several count always grow expected vuecomponent count stable actually happening vuecomponent count always grow switch time switch times switch times component big chrome memory enough thank reading", "num": "6759", "d": "10/2017"}, {"title": "\u4f60\u786e\u5b9a\u8fd9\u4e48\u5199js\u6ca1\u6709\u9519\u8bef", "body": "version reproduction link steps reproduce \u8fd9\u4e48\u5199\u6cd5\u662fts\u624d\u6709\u7684 \u800c\u4e14import\u662f\u9519\u8bef\u7684 expected \u8fd9\u4e48\u5199\u6cd5\u662fts\u624d\u6709\u7684 \u800c\u4e14import\u662f\u9519\u8bef\u7684 actually happening \u8fd9\u4e48\u5199\u6cd5\u662fts\u624d\u6709\u7684 \u800c\u4e14import\u662f\u9519\u8bef\u7684 \u8fd9\u4e48\u5199\u6cd5\u662fts\u624d\u6709\u7684 \u800c\u4e14import\u662f\u9519\u8bef\u7684", "num": "6757", "d": "10/2017"}, {"title": "\u5fae\u8f6f\u5df2\u7ecf\u51fa\u4e86\u4e00\u4e2avue", "body": "version reproduction link steps reproduce expected vuedts\u6ca1\u6709\u4f7f\u7528\u9ed8\u8ba4\u5bfc\u51fa actually happening \u6ca1\u6709\u4f7f\u7528\u9ed8\u8ba4\u5bfc\u51fa \u662f\u5426\u8003\u8651\u4fee\u6539\u4e3a\u5fae\u8f6f\u63a8\u8350\u7684", "num": "6756", "d": "10/2017"}, {"title": "wo shi xin ren", "body": "", "num": "6755", "d": "10/2017"}, {"title": "improve docs lodash throttledebounce watch", "body": "problem feature solve components may need render less often state updates example may realtime chart accompanied numerical display latest value update less often chart may multiple components page docs shows debounce method improperly try creating simple timer component amp put multiple page race conditions forgot wrap data function follow examples docs components interfere one timer updates per second instead timers updating every second proposed api look like change docs show proper usage debouncing vuejs method wrapping function like data object multiple components page longer interfere watch method call intuitive amp docs instruct create app race conditions instead ideally could use sort syntactic sugar something rxjs like instead lodash amp thunks verbose amp clumsy furthermore user put throttled method computed property instead methods property also documented amp intuitive", "num": "6754", "d": "10/2017"}, {"title": "make custom directive use inline handlers", "body": "problem feature solve like make directive like like make vmycustomdirective run say hi vue vmycustomdirective get result say hi function proposed api look like vue directive support inlinehandler function binding", "num": "6753", "d": "10/2017"}, {"title": "dynamic import native es modules async components causes error", "body": "version reproduction link steps reproduce must use browser dynamic module import supported eg latest safari chrome canary expected async component load autoresolve module actually happening uncaught error add property ctor object extensible es modules autoresolved used dynamic components eg however works module transpiled es commonjs since checks flag work native es modules flag present agree could easy put pr remove check line resolveasynccomponentjs would solve issue", "num": "6751", "d": "10/2017"}, {"title": "get data children objects", "body": "form next params next model try get n children see response works root category like try get child like null get data children thanks", "num": "6748", "d": "10/2017"}, {"title": "avoid using javascript keyword property name function expression", "body": "preview shows exhibitors inventory user leaflet con agg con agg place error vueloaderlibtemplatecompiler id hasscoped true transformtorequire video src source src img src image xlink href vueloaderlibselectorjs typetemplate amp srccomponentsshowsshowdetailsvue emitted value instead instance error error compiling template showname markerlatlnglat markerlatlnglng markername avoid using javascript keyword property name function expression options function return b valid also none pass either", "num": "6747", "d": "10/2017"}, {"title": "getting value rails link tag vue", "body": "problem feature solve creating dropdown menu vue rails need use value whats returned something like urlfor backendjobalarmspath course available vue whats best way get value vue haml vue instance proposed api look like api", "num": "6746", "d": "10/2017"}, {"title": "vbind style woking properly", "body": "vbind style working properly bind dynamic variable example code", "num": "6744", "d": "10/2017"}, {"title": "using methods mutates reactive properties dom may cause infinite loops", "body": "version reproduction link steps reproduce create method updates counter inside use dynamically create html layouts example calling inside display specific class depending state expected vue smart enough detect behavior methods actually happening every time counter updates looks like vue rerender component working intended like know best practice alternative kind issues", "num": "6743", "d": "10/2017"}, {"title": "export flow types dist file", "body": "problem feature solve people want use vue flow types import vue npm module proposed api look like would include flow directory npm dist files happy make pr", "num": "6741", "d": "10/2017"}, {"title": "data method components called", "body": "problem feature solve computed value computed called parameter allows us write code like ca nt done data method due called proposed api look like", "num": "6739", "d": "10/2017"}, {"title": "select vmodel addeventlistener change firing", "body": "version reproduction link steps reproduce hit run expected expect addeventlistener change function triggered update data value actually happening triggering select change event added event listener select element expect change event fire data vmodel bound changes came across package built advanced select dropdown slimselectjscom event listener attached main select element would extremely easy integration people added vmodel select using instead write code change handlers vuejs expect trigger change inputs let reactivity system know somethings changed curious nt way around thanks keep good job", "num": "6738", "d": "10/2017"}, {"title": "help drupal cms consider vuejs core", "body": "problem feature solve problemmotivation drupalcon vienna dries drupal cms founder proposed new strategic initiative test research admin ux could improved using javascript framework first step choose javascript framework used part research proposed api look like proposed resolution drupalcon vienna core committers javascript subsystem maintainers project lead well developers realworld experience building decoupled applications using drupal api agreed adding javascript framework drupal core good idea need continue researching making final decision want sufficient realuse experience make final decision prior development period additionally decided react would preferred solution proposal use react building drupal administrative uis however strong opinion users developers vuejs meets criteria would better option library seem debate issue alternative approach meeting requirements please join discussion help drupal consider vuejs propose show support feedback regarding react drupal vue drupal core would make vuejs much stronger precaucious note vue maintainers please comment discussions meaningful argument contribute nt clog useless vote vue comments something similar wo nt help use way intend critizise react factbased civil manner argue vue rather react", "num": "6737", "d": "10/2017"}, {"title": "error build", "body": "version reproduction link steps reproduce cli expected expected vue build without errors actually happening build process exits incomplete error error seems occur css optimization process dev server run expected vuecli version", "num": "6733", "d": "10/2017"}, {"title": "make directives available components within render tree", "body": "problem feature solve directive relies piece user data eg language server side rendering need able create new directive per request javascript const gettranslatedirective lang gt bind access lang update access lang const translate gettranslatedirective gt parsedlangheaderlanguage problem sets translate directive globally across reqeusts vuedirective translate translate however problem call vuedirective translate translate changes translate directive across requests proposed api look like needed way make directives available component children components js const gettranslatedirective lang gt bind access lang update access lang const translate gettranslatedirective gt parsedlangheaderlanguage new vue directives translate module translate provide true makes directive available component children", "num": "6732", "d": "10/2017"}, {"title": "watcher makes original object reactive", "body": "version reproduction link steps reproduce may related js data return somedata id id id watch trigger set emptydata thissomedata methods setemptydata parameter set thisemptydata id parameter set data existing data source watcher vues method mutate set data original data used inside watcher get mutated expected set data mutated actually happening originally newly set data mutated cloning watcher helps prevent thought safe side use know vue ca nt detect propertyarray index changesadditions nt addchange propertyarray index original data", "num": "6728", "d": "10/2017"}, {"title": "syntax check using webpack js ts singlefile component", "body": "version reproduction link simple scenario really working show mean steps reproduce parent child components child emiting lets say delete event misstype parent view something like expected error bad syntax actually happening compiles correctly error warning", "num": "6727", "d": "10/2017"}, {"title": "plugin global property used computed", "body": "version reproduction link steps reproduce define global property custom plugin define instance property reads data global property load plugin application declare computed property reads data plugin instance propety create application change global property watch computed property expected computed property result new value actually happening computed property nt change vue also template rerender", "num": "6726", "d": "10/2017"}, {"body": "browser escaping passing attribute add see looks like escaped twice", "d": "10/2017"}, {"body": "like question recommend ask forum discord server happening change computed property clone prop encourage take look need modify original variable make change", "d": "10/2017"}, {"body": "case reason clone occurring thisitem coming vuex nt want mutate data outside store handle situation also confusing think clone create new variable ca nt use separately original variable", "d": "10/2017"}, {"body": "probably want use computed setter like", "d": "10/2017"}, {"body": "already name components namespace generate though achievable userland plugin checks nested objects transforms property hook keep mind libs already namespace components example vuetify", "d": "10/2017"}, {"body": "posva vuetify \u7684 thank feasible way indeed supported basic use namespace nt notice thank hint mean libs already namespace components example named namespace like namesapce said means name \u4e0d\u8fc7\u4f60\u8bf4\u7684 \u591a\u6570\u5e93\u5df2\u7ecf\u7ed9\u5b83\u4eec\u7684\u7ec4\u4ef6\u547d\u540d\u8fc7\u4e86 could transforms property hook could find property origin component object already extended instanced way understand preprocess component object extends matter hook \u5728 thank much", "d": "10/2017"}, {"body": "duplicate personally think pipes become part js could adapt syntax pipe syntax widely known shell", "d": "10/2017"}, {"body": "posva \u548c\u95ee\u9898\u5e16 \u5185\u5bb9\u91cd\u590d js slightlysmilingface shell thank sorry open duplicate issue think use necessary moment", "d": "10/2017"}, {"body": "fyi pipeline operator proposa stage l", "d": "10/2017"}, {"body": "fnlctrl feel comment full sense humor xd", "d": "10/2017"}, {"body": "unfortunately unrelated vue however add file something like", "d": "10/2017"}, {"body": "try really want", "d": "10/2017"}, {"body": "javoski thanks new vue may ask difference two ways", "d": "10/2017"}, {"body": "workaround default vue call method passing pass function instead calling", "d": "10/2017"}, {"body": "think error thrown", "d": "10/2017"}, {"body": "nothing template compile malformed ca nt magically make syntax errors right also leads another point strongly recommend using dynamicusergenerated content part template security bad practice lead xss", "d": "10/2017"}, {"body": "fair enough thought maybe error could contained element containing error could skipped create warning rather throwing uncaught error clarify xss content app generated cms accessible loggedin editors suppose constitutes vulnerability presently components registered underneath global component decision made first building site learning vue suppose could decoupled registered separately thanks prompt reply", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "thanks showcasing focus issue still problem refocusing arbitrary elements every dom update could expensive probably many edge cases problem comes fact elements rerendered instead actually changed nt actually see issue repro focused element disappears want focus first one manually", "d": "10/2017"}, {"body": "yeah exactly posva possible make work pretty decent imagine use external library self maybe settimeout nexttick case vuevirtualscroll handling updating dom nt callback update case ca nt sure safe focus correct element even would probably need done nexttick thus increasing latency desired functionality pressing key focus next element see example tries set focus first element played around issue quite bit nt gotten work without major timing issues example imagine holding key constantly focusing next element maybe scrolling scrolling last visible element focused case timing issues sometimes make style focused element scroll position sync result chunky experience compare experience virtual scrollers made using frameworks like react angular notice impossible achieve get around using focus removes built functionality one would need reimplement agree root cause elements rerendered edit main problem illustrated flow determine item selected remove items frontafter put focus element set correct style elements beforeafter removed complete rerender triggered focus lost put focus element looking flow could guess focus updated style elements would run tick rerendering occur ticks later could big problem want style focus synchronized example", "d": "10/2017"}, {"body": "please nt reopen issue clearly marked duplicate known issue", "d": "10/2017"}, {"body": "ones publishing nuget package think contact guy nt know anything end automate nt know package manager net took account js packages well", "d": "10/2017"}, {"body": "vue officially support nuget repository", "d": "10/2017"}, {"body": "managed party developer", "d": "10/2017"}, {"body": "could please ask update nuget packages last versions", "d": "10/2017"}, {"body": "wait someone else dont n account probably one see link contact publisher mon oct notifications githubcom wrote could please ask update nuget packages last versions receiving commented reply email directly view github mute thread gt eduardo san martin morote", "d": "10/2017"}, {"body": "ok thank suggestion create account send email thought keeping vue js ts versions date popular repositories part vue team work someone else reason wrote forum", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "vue issue pressing enter issue submit event trigger next button event seems implicitly assumes without declaring problem resolved demo problem without vue", "d": "10/2017"}, {"body": "linusborg thank", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "please use forumvuejsorg chatvuejsorg questions", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "wjtgithub case", "d": "10/2017"}, {"body": "already fixed released soon", "d": "10/2017"}, {"body": "reply soon efficiently thx", "d": "10/2017"}, {"body": "missing reproduction", "d": "10/2017"}, {"body": "currently capture errors following render functions watcher callbacks lifecycle hooks component event handlers dom event handlers currently included probably", "d": "10/2017"}, {"body": "vue html works continuous whitespaces displayed single whitespace probably need learn tags", "d": "10/2017"}, {"body": "hi evan thanks answer however fact due vue html see fiddle provided comment vue instantiation output code displayed indentations also worth mentioning happens even set vpre container span element understand vpre tell vue ignore element children test fiddle well", "d": "10/2017"}, {"body": "talking html pre tags vpre", "d": "10/2017"}, {"body": "seems arbitrary pointless limitation firefox side think makes error messages less useful long warnings also pretty rare suggest debug using different browser", "d": "10/2017"}, {"body": "see example nt come correctly forgot wrap code blocks suggest leaving code output putting actual message start", "d": "10/2017"}, {"body": "please find attached reproduction folder run local server using something like python simplehttpserver view device distzip", "d": "10/2017"}, {"body": "likely missing promise polyfill sat oct pm imran nazir notifications githubcom wrote please find attached reproduction folder run local server using something like python simplehttpserver view device distzip receiving subscribed thread reply email directly view github mute thread", "d": "10/2017"}, {"body": "hi evan many thanks responding response reply added tag closing tag neither effect repo looking actually seems vue dev dependency seems template built older browsers mind users likely latest phones important least backward compatibility please advise many thanks responding", "d": "10/2017"}, {"body": "reproduce problem minimal jsfiddle html page dependencies packages vue please", "d": "10/2017"}, {"body": "note self older browsers need babelpolyfill add features window", "d": "10/2017"}, {"body": "need quote key names javascript also learn actually make repro nt lazy", "d": "10/2017"}, {"body": "\u8fd9\u4e2a\u662f\u56e0\u4e3a\u540c\u4e00\u7ec4\u4ef6\u5728 flip flip flip loading", "d": "10/2017"}, {"body": "changing condition specific event js fixed version vueprototype function event string array fn function component const vm component argumentslength vmevents objectcreate null return vm array events arrayisarray event let l eventlength lt l event fn return vm specific event const cbs vmevents event cbs return vm fn vmevents event null return vm js current version vueprototype function event fn var", "d": "10/2017"}, {"body": "thanks nice description analysis chengkang submitted passing test", "d": "10/2017"}, {"body": "supported future versions see nt think support arbitrary arraylike objects line actual object vs arraylike blurry stick arrayisarray case support array subclasses also since subclassing array feature likely implement reimplement reactivity system proxies", "d": "10/2017"}, {"body": "posva thanks reference good know looking address point future needed addressed sooner rather later forked project applied solution view like test cases passing continue usage project interest taking contribution happy make btw one test cases failing even made changes test transition outin async component resolve leave complete fyi anyone finding wanting use workaround vue team ready introduce feature created branch forked repo includes built files changes use", "d": "10/2017"}, {"body": "thanks purtuga interesting approach core probably hold things improved fork particular creating fresh prototype object every array observed technically need create wrapper prototype object original prototype object cost avoided map serves cache", "d": "10/2017"}, {"body": "thank taking time look fork good point caching prototype normally use type stuff could usages vue codebase find use map inside perhaps create property original prototype store vuejs wrapped prototype potential issue approach prototype frozen thanks looking forward feature lands vuejs", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "could translate english", "d": "10/2017"}, {"body": "somebody translate english", "d": "10/2017"}, {"body": "close favour", "d": "10/2017"}, {"body": "problem already create keys moment namely nt use set change works expected", "d": "10/2017"}, {"body": "works update fiddle", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "closing since assume issue resolved", "d": "10/2017"}, {"body": "nt think worth complicate options even", "d": "10/2017"}, {"body": "also simply give key ensure replaced", "d": "10/2017"}, {"body": "tried solution codepen still cant get working tried", "d": "10/2017"}, {"body": "please read requirements carefully runnable reproduction minimal usage question", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "type code successfully inferred type expected behavior infer actual function signature option information want strict need manually annotate props type vid would introduced via", "d": "10/2017"}, {"body": "thanks lot javascript import vue vue interface setfunction number number string export default props test object gt setfunction data thistest return reference thistest get correct parameter types question use component trees props refs vue options api get contextual type perhaps topdown downtop infer types", "d": "10/2017"}, {"body": "currently cases typescript compiler analyze template need make additional type checker want check tsxrender function may able type check props type parent component discussion thread", "d": "10/2017"}, {"body": "thanks learn", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "type inference goes cyclic adding return type function would fix problem ts import vue vnode vue vueextend render h vnode return h div thismessage include caveats docs", "d": "10/2017"}, {"body": "make pull request vuejsorg", "d": "10/2017"}, {"body": "sorry usage support many possible edge cases consider make vue compatible arbitrary modifications builtin types", "d": "10/2017"}, {"body": "thank quick response although example showed manipulation array instance directly example proper one would actually subclass array cases would supported following works expected chrome vuejs alter prototype break subclassed array javascript const class extends array constructor super although know vuejs alters data structure slightly enable reactivity expectation would actually lose functionality might data paul", "d": "10/2017"}, {"body": "pursue discussion somewhere else forums found thread regarding issue certainly nt want spend time opening discussion going entertain pursuing solution", "d": "10/2017"}, {"body": "probably open fresh feature request support reactivity subclassed arrays", "d": "10/2017"}, {"body": "automatically bound dom property tag statically using dynamic makes bound attribute binds initial value input use force property instead", "d": "10/2017"}, {"body": "like take look one yet", "d": "10/2017"}, {"body": "seems strongly related dynamic type", "d": "10/2017"}, {"body": "seems need add pre condition", "d": "10/2017"}, {"body": "misoguy ok come first", "d": "10/2017"}, {"body": "also need consider sorry dirty issue", "d": "10/2017"}, {"body": "digging issue realized simple roughly implemented working code think need write test haha make case work well work send pr", "d": "10/2017"}, {"body": "gebilaoxiong browser nt refresh nt see comment pr commenting guess issue closed", "d": "10/2017"}, {"body": "misoguy thought one process repaired nt know problem", "d": "10/2017"}, {"body": "gebilaoxiong commented gon na work weekends bad tried code tested text well nt think problem regarding issue", "d": "10/2017"}, {"body": "misoguy use code open pr merge code", "d": "10/2017"}, {"body": "gebilaoxiong would ok implementation test code seems much better mine open pr suggested let decide whether merge mine", "d": "10/2017"}, {"body": "gebilaoxiong opened pr suggested included code check since nt want get credit work regarding would nice contribute first time way implementing first pr found wonderfully maintained test codes written great library", "d": "10/2017"}, {"body": "misoguy nice day", "d": "10/2017"}, {"body": "thank", "d": "10/2017"}, {"body": "expands value binding nt make sense use explicit binding side side", "d": "10/2017"}, {"body": "ok thanks note example replace dynamic type static type everything ok expected", "d": "10/2017"}, {"body": "yes vmodel expands different props depending type binding", "d": "10/2017"}, {"body": "understand tying create widget fits input data type new vue el app data model options value text foo value text foo value text foo computed multiple return arrayisarray thismodel understand never work possible warned dev mode case", "d": "10/2017"}, {"body": "looks issue", "d": "10/2017"}, {"body": "exporting variable specified properties exported", "d": "10/2017"}, {"body": "issue available beforecreated hook although available every hook version componentoptions interface beforecreate v void created void beforedestroy void destroyed void beforemount void mounted void beforeupdate void updated void activated void deactivated void errorcaptured boolean void", "d": "10/2017"}, {"body": "see since recommend use enable better type inference prefer object literal style need explicitly add type hook", "d": "10/2017"}, {"body": "one point still make sense beforecreate", "d": "10/2017"}, {"body": "use data beforecreate create moment annotate type prevent infer wrong type default contextual type hook", "d": "10/2017"}, {"body": "data nt created beforecreate beforecreate null void declaration says explicitly beforecreate hook", "d": "10/2017"}, {"body": "type beforecreate user defined data", "d": "10/2017"}, {"body": "distribute content use slots template render incompatible one precise template compiled render function placed property side note mixin template render function quite strange makes sense put component extend", "d": "10/2017"}, {"body": "found change parsemodel might culprit prior change vmodel bindings form foobar would rewritten set foo bar v relevant issues", "d": "10/2017"}, {"body": "either way using like directly recommended", "d": "10/2017"}, {"body": "understand however reproducible nt really reflective trying accomplish written simple data grid accepts arbitrary vue template strings render column contents header column rendering checkbox whose data bound computed property containing component one instantiates data grid checkbox reflect selected state rows grid changing update underlying selection flags rows implemented declaring method findparent via global mixin looks offending parent component accessing computed property like prior worked nicely however updating code broke workaround turning computed property question data property using watch sync value individual selection flags hardly ideal", "d": "10/2017"}, {"body": "coincidentally fixed", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "slot name extracted compile time scoped slots might normal slots well future slot name really parent context make sense means recommended dynamically add slot names directly", "d": "10/2017"}, {"body": "looks like race condition happening work around also set one elements", "d": "10/2017"}, {"body": "logic updating value options change inside called however case presence directive toggled element", "d": "10/2017"}, {"body": "fergusean sorry close issue soon", "d": "10/2017"}, {"body": "breaking change going happen simply adding listener check event key call filter input chars", "d": "10/2017"}, {"body": "yes would nice little inclusion directive add least allow directives function calls model updated check things", "d": "10/2017"}, {"body": "actually better changing generic type constructor default breaking change encode return constructor typed plus typed jsx enabled make complex typing file complicated let first make stable wait feedback like idea please vote emoji cc ktsn octref", "d": "10/2017"}, {"body": "sounds nice would nice vue supports typed jsx default small library add types component typed jsx aamof issue comes btw current typing loses information props required optional necessary typed jsx", "d": "10/2017"}, {"body": "current typing loses information props required optional fairly nt think make typing current api least current ts type system support example", "d": "10/2017"}, {"body": "using library mentioned think first step make props optional using tsx partial unless passing declared interface enhancement ts support think also create ts issue make awareness requirement linking back issue believe support typed tsx box props inferred unfortunately ultimately great vue api also custom attributes tsx scoped slots events need cater interfaces still required far see however possible reduce needed typing especially duplication occurs prop definitions", "d": "10/2017"}, {"body": "approach like works type definitions become complicated", "d": "10/2017"}, {"body": "wonderfulpanda could form requiredprops props object", "d": "10/2017"}, {"body": "blakenewman may impossible obtain requiredprops props compile time example type", "d": "10/2017"}, {"body": "yes sorry forgot", "d": "10/2017"}, {"body": "builtin alias vue checking pass event constructor however chrome ignores option seems bug although technically deprecated might simulate event using old fashioned way want pass probably make supported somehow", "d": "10/2017"}, {"body": "well rerender see anything changed understand may think could simply diff new vnodes parent pass child diff unfortunately nt take account possible edge cases easy way around current architecture also assuming could go route would performance tradeoff would still diff vnodes child diff vnodes two times means components light receive large slot contents performance would worsen think large slot trees pretty common even nested quite often concerning situation encountering performance issues options optimize useful probably extracting heavy part another child component nt receive slot using large node trees need render component lifecycle", "d": "10/2017"}, {"body": "hm took look issues mentioned one indeed suboptimal share insight", "d": "10/2017"}, {"body": "already plan improve tracked", "d": "10/2017"}, {"body": "thank", "d": "10/2017"}, {"body": "wow weird feeling seeing answer seeing almost verbatim gave recollection reply glad improved though", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "already works work browsers support feature natively use webpack transpile js", "d": "10/2017"}, {"body": "man posva quick see syntax supported great nt work make new project vuejstemplateswebpack shown understand tell post question instead since got attention thought try asking", "d": "10/2017"}, {"body": "hm probably objectrestspread operator stage anymore stage included preset operator would kind open issue template repo track fix find time edit nope included look repo please open issue webpack repository", "d": "10/2017"}, {"body": "thanks reply linusborg new issue tried using dice made changes dev branch repo case continue convo issue", "d": "10/2017"}, {"body": "please provide repro whole project use fiddle set", "d": "10/2017"}, {"body": "posva able reproduce fidlle codepen may relelated fact using webpack vueloadertemplate compiler guess try question though captured states vm instances first load hit media query breakpoint drawer switch persistent component drawer rendered default slots idea children first load children something expect started looking vue js code must say understanding vdom rendering details pretty low", "d": "10/2017"}, {"body": "keep core feature requests suggest moving eslintpluginvue instead", "d": "10/2017"}, {"body": "intentional change fix couple bugs caused event firing orders fact try firefox see behavior chrome consistent behavior browsers considered fix", "d": "10/2017"}, {"body": "curiously use force vuejs render dom props", "d": "10/2017"}, {"body": "reduced reproduction firefox wo nt respect attribute set later", "d": "10/2017"}, {"body": "herringtondarkholme firefox problem", "d": "10/2017"}, {"body": "curiously use force vuejs render dom props herringtondarkholme thanks use time next step file bug firefox", "d": "10/2017"}, {"body": "nt think firefox bug actually vue keep without value weird also warning muted used modifier code nt seem trigger", "d": "10/2017"}, {"body": "want see", "d": "10/2017"}, {"body": "aha thanks", "d": "10/2017"}, {"body": "note mutating rather replacing object array old value new value reference objectarray vue keep copy premutate value see", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "solution options null select nt rendered rendered options becomes nonnull value case array thus initial value options bearing furthermore reproduce behavior separating loading indication options see behavior seems works expected select wrapped template see looks like problem element shares vmodel vif regardless given magically switches correct value data vue instance mutated believe unintended behavior aka bug", "d": "10/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "possible inline templates compiled part parent tree", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "please provide reproduction failed recovery white screen", "d": "10/2017"}, {"body": "flag component methods always type unless enable make pr docs later mention", "d": "10/2017"}, {"body": "ktsn thanks", "d": "10/2017"}, {"body": "ktsn think better mention also required p", "d": "10/2017"}, {"body": "also call methods emit events functional components templates", "d": "10/2017"}, {"body": "use regular component need", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "data template like", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "open issue repos please duplicate vuejsvuerouter could save somewhere state first time component appeared trigger different transitions even put custom component uses transition component", "d": "10/2017"}, {"body": "hi problem description lacking bit detail reproduction produces three alerts show node nname nt encounter errors nt see problem file method", "d": "10/2017"}, {"body": "linusborg check check dependencies need vue", "d": "10/2017"}, {"body": "okay indriguingly odd tested outside codesandbox seems issue way codesandbox magic reason event object replaced object currenttarget object dom object event came objects created commmunic shared workers though channel messaging api see mdn vue use anywhere source object come somewhere else fact happens since good startingpoint investigate", "d": "10/2017"}, {"body": "test project problem", "d": "10/2017"}, {"body": "mean problem please verify also ends like something else", "d": "10/2017"}, {"body": "yes", "d": "10/2017"}, {"body": "one example", "d": "10/2017"}, {"body": "okay weird sidenote generally bad idea save htmlelements event contains namely vue attempt make object reactive element lots child elements lead stack overflow wondering somehow done intentionally nt think unsure cc", "d": "10/2017"}, {"body": "linusborg", "d": "10/2017"}, {"body": "vue specific behaviour occurs also vanilla javascript sure suppose gets cleared event bubbling example", "d": "10/2017"}, {"body": "transient value become event propagation finishes used micro tasks nexttick triggers updates event propagation resolves led number hard fix bugs use macro task waits dom events propagated resolved even access frame become need pass currenttarget around save another variable still access", "d": "10/2017"}, {"body": "iterate general advice save objects like dom events html elements component data anyway reactification elements quickly break app large element trees", "d": "10/2017"}, {"body": "linusborg send event prop", "d": "10/2017"}, {"body": "eddimensi save need another variable pass evan said", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "\u53bb\u6389 css safariios \u7684 css bug", "d": "10/2017"}, {"body": "\u603b\u7b97\u627e\u5230\u4e86\u539f\u56e0 \u662f\u8fd9\u4e2a", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "nt input blur event fires first hello clicked actually", "d": "10/2017"}, {"body": "make click first", "d": "10/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow probably better use component purpose let dev pass components use slots also allows combine jsx templates one project", "d": "10/2017"}, {"body": "would breaking change unfortunately", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "well actually real problem case nt performance loss rerendering per se fact focus lost elements removed readded dom trying use virtual scroller ca nt navigate keyboard since rerendering removes focus way found go around listen blur event refocus introduces significant delay ruins experience alternative handle dom directly kind defeat purpose using vue case create new issue bit specified really important order create usable virtual scroller keyboard navigation", "d": "10/2017"}, {"body": "ping posva created ugly hack instead using slice series shift unshift push pop divided inside outside nexttick ugly hack performant since divided twice many ticks ordinary slice really hope recommended vueway said think needs addressed order able create virtual scrollers keyboard navigation thoughts", "d": "10/2017"}, {"body": "yeah issue input issue using key trick guess ask help forum chat need", "d": "10/2017"}, {"body": "nt understand posva codepen repro key used sure would help also see key attribute used working repro since complete rerendering occurs specific conditions", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "\u4e0a\u9762\u7684\u4f8b\u5b50\u5c31\u662f\u6700\u597d\u7684\u8bc1\u660e \u548c \u7248\u672c\u90fd\u80fd\u6b63\u5e38\u4f7f\u7528 \u9664\u4e86vue\u7248\u672c\u4fee\u6539\u8fc7\u4ee5\u5916 \u5176\u4ed6\u7684\u90fd\u6ca1\u6709\u53d8\u8fc7 elementui \u548c iview \u4e24\u4e2a\u7ec4\u4ef6\u7684\u65e5\u671f\u9009\u62e9\u63a7\u4ef6\u90fd\u53d7\u540c\u6837\u7684\u5f71\u54cd", "d": "10/2017"}, {"body": "zsedcbm \u6211\u8fd9\u8fb9\u6d4b\u8bd5\u6ca1\u95ee\u9898 \u5177\u4f53\u662f\u4ec0\u4e48\u95ee\u9898", "d": "10/2017"}, {"body": "feichao chrome \u4e2d \u4f7f\u7528\u65b0\u7248\u7684vue \u65e5\u671f\u65e0\u6cd5\u9009\u4e2d \u540e\u6765\u4f7f\u7528\u4e86chrome \u4e24\u4e2a\u7248\u672c\u7684vue\u90fd\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528 \u5947\u602a\u7684\u4e00\u70b9\u662f \u6211\u5728 devtools\u4e2d \u4e0b\u65ad\u70b9\u7684\u65f6\u5019 vue\u65b0\u7248\u672c\u4e5f\u662f\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u7684\u53bb\u9664\u65ad\u70b9 \u53c8\u51fa\u73b0\u95ee\u9898\u4e86 \u4e0d\u77e5\u9053\u662f\u6d4f\u89c8\u5668\u5185\u6838\u7248\u672c\u4f4e\u7684\u95ee\u9898 \u8fd8\u662fvue\u7684\u95ee\u9898", "d": "10/2017"}, {"body": "feichao \u8fd9\u4e24\u4e2a\u4e5f\u662f\u53cd\u6620\u7684\u540c\u6837\u7684\u95ee\u9898", "d": "10/2017"}, {"body": "likely related", "d": "10/2017"}, {"body": "\u770b\u4e86\u4e0b\u4f3c\u4e4e\u53ea\u6709\u5728\u65e7\u7248\u672c\u7684 chrome", "d": "10/2017"}, {"body": "removed transition finished responsibility ensure element default state correct position", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "make following animation want list animated xaxis element changed state display none display block result list animate mean jumped origin konw link", "d": "10/2017"}, {"body": "expected behavior functional components merge class parent may return one nodes need explicitly bind", "d": "10/2017"}, {"body": "thanks info mentioned anywhere docs look posting issue could nt find anything", "d": "10/2017"}, {"body": "tried vuepropertydecorator ts import vue vue import prop component vuepropertydecorator interface foobar foo string bar string component export default class app extends vue prop foobar foobar", "d": "10/2017"}, {"body": "like idea type would hide internal detail type declaration looks intuitive syntax sandangel proposal related decorators would help us declare type easier canonical api", "d": "10/2017"}, {"body": "pr easier since would simple change", "d": "10/2017"}, {"body": "ferdaber yes please", "d": "10/2017"}, {"body": "minimal reproduction", "d": "10/2017"}, {"body": "use", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "wontfix emitted events need correct order fixed happened work previously native event emitted first overwritten custom event preserve old behavior emitting custom event overwrites native event", "d": "10/2017"}, {"body": "data object must plain", "d": "10/2017"}, {"body": "well seems missed bit documentation good point phanan would great vue throw errormessage devtools using non plain data object", "d": "10/2017"}, {"body": "imho bad idea restrict data plain objects working components props validation using modelclasses type parameter like would nt work without typed models", "d": "10/2017"}, {"body": "confirm addition label mean track fixed asking whether revert vue wait fix attempt restructure code specifically class used reactive object using custom setter property side effects used work vue", "d": "10/2017"}, {"body": "might related", "d": "10/2017"}, {"body": "prefer revert feature properties class declare located prototype instance want check prototype may check entire prototype chain side effect big benefits brings", "d": "10/2017"}, {"body": "hello apachera thank filing issue please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem necessary create repository us clone minimal reproduction repositories actual projects generally accepted necessary thank", "d": "10/2017"}, {"body": "guarantee hook order components array", "d": "10/2017"}, {"body": "explicitly stated take questions", "d": "10/2017"}, {"body": "indeed work typed props definition sure reason though herringtondarkholme danielrosenwasser would appreciate look", "d": "10/2017"}, {"body": "currently computer guess bit right probably assignability error props general better future versions typescript currently branch works better thing even branch best inference get", "d": "10/2017"}, {"body": "ts import vue vnode vue vueextend name workaround props foo type string bar prop render h vnode return h div thisfoo think inferring empty prop type lenient lot options empty field results empty type parameter make inference default many errors hidden unintended", "d": "10/2017"}, {"body": "said key set button problem due vue using inplace patch strategy explained doc", "d": "10/2017"}, {"body": "hi phanan inplace patch great vue patch element inplace reset status completely including event bindings classes etc reset focus status", "d": "10/2017"}, {"body": "focus status part node state two possibilities case want change button text maintaining focus want replace button resetting focus simply way vue tell intention unless use key", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "arrow autogenerated gitbook link next item menu right either way issue belong", "d": "10/2017"}, {"body": "okay thanks flagging", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "please strip nonrelated packages like vuebootstrap move project container image nt need build image test", "d": "10/2017"}, {"body": "setup ssr nt follow guidelines laid ssr guide really specifically use used like meant returns resolved promise nt wait resolve router ready please try follow guide ask forumvuejsorg get stuck open issue find problem persist following guide", "d": "10/2017"}, {"body": "everything ok", "d": "10/2017"}, {"body": "git clone local disk space show error nothing others", "d": "10/2017"}, {"body": "idea commenting saying sorry", "d": "10/2017"}, {"body": "try like said thanks help linusborg", "d": "10/2017"}, {"body": "nt work passing component data root vnode contains ref reference simply fixed repro", "d": "10/2017"}, {"body": "either tab line break replaced every browser chrome validate data instead like said resolve issue correct link nt think vue tamper data case trimming funny characters url words belongs userland imho", "d": "10/2017"}, {"body": "phanan case seems actually tamper remove initialization vue codepen encounter described behaviour looks like invalid html entity magically added end link", "d": "10/2017"}, {"body": "changes whole html talking real lists control one reused using attribute", "d": "10/2017"}, {"body": "posva sorry provided wrong fiddle link one right test button causes rerender", "d": "10/2017"}, {"body": "ah thanks sure something improved sure may due strategy used patch nodes", "d": "10/2017"}, {"body": "seems strange push shift causes rerender push ok unshift also ok pop unshift also fine btw wrap unshift settimeout fixes issue want use hacks", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "close via", "d": "10/2017"}, {"body": "hi know new release includes fix released approximately thanks awesome project", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "ca nt use codesandbox reproduce error try add dependencies gives internal server error anybody take look anyway please", "d": "10/2017"}, {"body": "could provide repository github run extremely difficult debug printed code", "d": "10/2017"}, {"body": "linusborg created one using docker makefile run everything create container image run testable want client version got webpack dev server sidenote hot reloads nt work still nt figured kill server rerun make command sorry", "d": "10/2017"}, {"body": "linusborg properly", "d": "10/2017"}, {"body": "sorry nt understand requesting vue core library nt offer testing ajax functionality", "d": "10/2017"}, {"body": "pretty much linusborg said would proper modification jquery axios side nothing done vuejs core", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "browser strips element becaue allowed according html spec vue templates nt work like handlebars others loop pieces html markup treat text conditionally print woirk complete speccompliant elements understand suggest reading guide section render functions templates compiled expected behaviour", "d": "10/2017"}, {"body": "way thank much", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "ulisescarreonalvarez issue belong quick google search led thread might help", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "issue template reason ca nt reproduce", "d": "10/2017"}, {"body": "nothing vue nt see would run development server production environment anyway", "d": "10/2017"}, {"body": "nt know fixed would suggest users explicitly use compiler hard time infer directive first expand consider example first expand right add option nt seem right template compiled update maybe use simpler strategy always prefer expanding unless binding", "d": "10/2017"}, {"body": "usage indeed ambiguous also suggest using explicit wrapper need add warning case", "d": "10/2017"}, {"body": "tried safari checked true", "d": "10/2017"}, {"body": "firefox event input event change triggered checkbox newly opened tab middleclick refresh thing happening text input elements", "d": "10/2017"}, {"body": "tested vue nt react input event checkbox model updated text next checkbox changes fire change event checkbox", "d": "10/2017"}, {"body": "basically vuejs updates select checkbox input radio input elements change event input event firefox follows mdn fires event change change committed user middleclick refresh change automatically done firefox therefore user consequently input event fired", "d": "10/2017"}, {"body": "wondering reasoning behind first point would happen changed linked would probably need lot browser compatibility testing", "d": "10/2017"}, {"body": "mostly certain problem setup familiar systemjs probably want adjust use es modules build", "d": "10/2017"}, {"body": "vue declaration switched es module style declaration need use want use es module requirejs systemjs seem support es module may need migrate tool supporting es module want use gt typescript", "d": "10/2017"}, {"body": "switch systemjs use esmjs add pointless babel plugin transpile compiled js systemjs complain process undefined fix config since metaglobals override config supported cjs global module formats driving slightly mad seems could fixed simple bottom vue runtime commonjs ie vueclasscomponent ping ktsn danielrosenwasser", "d": "10/2017"}, {"body": "still pretranspiled thing left export syntax sounds pretty odd systemjs ca nt simple global replacement using es modules shim", "d": "10/2017"}, {"body": "trying shim right suppose include thing windowprocess env nodeenv development vueenv client", "d": "10/2017"}, {"body": "maybe missing something understanding systemjs gives intended behavior default imports need turn typescript flag", "d": "10/2017"}, {"body": "boil simple example logints import vue vue export default class login extends vue compiled loginjs use strict objectdefineproperty exports esmodule value true const require vue class login extends lt crash exportsdefault login allowsyntheticdefaultimports nt affect emitted code compile time nt fix issue compiled code whether", "d": "10/2017"}, {"body": "looks like emitting commonjs default nt sort default synthesis since already targeting systemjs might well switch target things work well", "d": "10/2017"}, {"body": "familiar systemjs thread seems systemjs author think default synthesis handled transpiler quite sure typescript handle synthesis design need another transpiler trying daniel suggestion listed thread linked", "d": "10/2017"}, {"body": "thanks danielrosenwasser trick nt aware systemspecific module target", "d": "10/2017"}, {"body": "point duplicated values note even vue nt reset selected item user interaction still selecting first matching option fresh render key information array vue infer ie key exist view data data view update key information imo duplicate values like intrinsically broken design instead directly bind entire object value unique id available value comparison", "d": "10/2017"}, {"body": "video issue show", "d": "10/2017"}, {"body": "see comparison get list flash larger size flashes even firefox", "d": "10/2017"}, {"body": "doits try", "d": "10/2017"}, {"body": "fritx still flashes resizing", "d": "10/2017"}, {"body": "also see ie edge", "d": "10/2017"}, {"body": "issue definitely seems fixed chrome still see issue safari firefox also see issue safari firefox well situations like css changing appearance vue changing appearance wanting work exactly moment safe say done css done vue make sure things changed exactly time", "d": "10/2017"}, {"body": "doubt vue problem simply attaches native event listener believe caused vue please reduce reproduction involves much unrelated logic party library", "d": "10/2017"}, {"body": "hi updated codepen remove third party library unrelated logic click change handler thank much", "d": "10/2017"}, {"body": "seems browser behavior quirk calling input trigger native change event jquery probably compatibility hacks cater really vue responsibility", "d": "10/2017"}, {"body": "ooh see btw suggestion make works vue try wrap input label tag remove click handler hope trigger native event thank much", "d": "10/2017"}, {"body": "sorry really nt see provides", "d": "10/2017"}, {"body": "names parent child original example meant classlike inheritance tree components updated example make things clear point many places internet able extend complex component overriding something scriptlevel also small overrides template level simplest way achieve per example would html stuff import base base export default extends base components base base big bug waiting happen nonsimple safe ways proxying props methods slots events around andor lots custom vars sprinkled template author put cumbersome fragile love vue precisely allows ooplike multiple inheritance mixins fact templates extendable manner ruins fun pretty quick case makes development unnecessarily difficult code hard understand newcomers project highly simplified example still convincing enough provide reallife code become unnecessarily complex due lack template inheritance extensively discussed seemed agree issue although obviously nt agree severity perceived us however rejected proposed solution extra composition model greatly muddles structure program reasonable argument proposal solves issue preserves composition model looking natural clean", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "dup", "d": "10/2017"}, {"body": "please check closed issues opening new ones dup", "d": "10/2017"}, {"body": "also facing issue using vue local dev environment production use minified version version issue nt happen", "d": "10/2017"}, {"body": "facing issue fix", "d": "10/2017"}, {"body": "dup", "d": "10/2017"}, {"body": "problem", "d": "10/2017"}, {"body": "please check closed issues opening new ones dup", "d": "10/2017"}, {"body": "dup", "d": "10/2017"}, {"body": "please put actual template lead output", "d": "10/2017"}, {"body": "version vue using token represent change event radio checkbox anymore using vue run code generated", "d": "10/2017"}, {"body": "javoski example ui libraries released compiled code work webpack browser imo might little difficult assure party libraries project always compiled minor version seems resulting breaking change party libs suggest documented", "d": "10/2017"}, {"body": "true people need rebundle libs think communicate remember something similar past", "d": "10/2017"}, {"body": "fyi unintended preserve backwards compat next patch release", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow set every property want transition", "d": "10/2017"}, {"body": "fnlctrl nt dup many others", "d": "10/2017"}, {"body": "joy joy joy looks like close wait release", "d": "10/2017"}, {"body": "dup", "d": "10/2017"}, {"body": "looks like already fixed", "d": "10/2017"}, {"body": "related upgraded rollup build system revert build system changes run dev build worked see sure dev dependency causes still needs investigation new build file", "d": "10/2017"}, {"body": "well caused rollup let see line removed rollup tree shaking used reflow document", "d": "10/2017"}, {"body": "\u4e0d\u4f1a\u5148\u641c\u4e00\u4e0b\u5417", "d": "10/2017"}, {"body": "use", "d": "10/2017"}, {"body": "actually think like", "d": "10/2017"}, {"body": "similar issue one tag also renders", "d": "10/2017"}, {"body": "please tag soon", "d": "10/2017"}, {"body": "source code getlist function main html var getdataasync apijoinus amp categoryid thiscategoryid get null function data datastate thisdatajoinsplice thisdatajoin thisdatajoinconcat datadata thisdatajoin datadata nexttick function main removeclass gaodu else alert \u6570\u636e\u8bf7\u6c42\u5931\u8d25", "d": "10/2017"}, {"body": "valid reproduction", "d": "10/2017"}, {"body": "never set anything execution computed prop always returning null changes computed prop considered uptodate sure brush changes tracked", "d": "10/2017"}, {"body": "apologies clear expecting variable updates recalculate computed prop see comment return null line indeed happen", "d": "10/2017"}, {"body": "expand previous post nt even see calculating futuretime log message unless comment line leads believe vue nt properly tracking interestingly add another statement check eg see via console logs computed prop recalculated although still set null expected due line inconsistent tracking behavior seems like bug pretty new vue", "d": "10/2017"}, {"body": "totally expected behavior return line accesses even evaluated registered dependency computed property fact desired behavior case return result nothing recalculating changes unnecessary becomes truthy recalculate track returned value depends", "d": "10/2017"}, {"body": "thanks quick responses got actual code working expected learned vue change tracking well posterity adapting suggestions", "d": "10/2017"}, {"body": "gave shot possible add think could introduce inconsistent behaviors complexify validation example weird used type expect rules validate course could say user responsible type validation inside validator could even add warning people may want use time bit similar attribute example moment validator runs field set value provided maybe late tired", "d": "10/2017"}, {"body": "sure follow concern posva nt see feature effecting current behavior could missing something would nt continue behave currently", "d": "10/2017"}, {"body": "wouldnt right non required prop value never runs validator means order support usecase run validator even value provided show warning throw error depending validator people using actually validate information basically think wrong place could maybe support function gets passed props stripped production edit sur letting function good idea", "d": "10/2017"}, {"body": "damn see concern one two props required neither passed neither validator ever run warning thrown dedicated function might better place keep brainstorming apis thanks", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "try remove extra look example docs", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "\u5982\u6587\u6863\u6240\u8bf4", "d": "10/2017"}, {"body": "purposely setting variable", "d": "10/2017"}, {"body": "involves party library please either provide clean repo using plain vue open issue elementui repo instead", "d": "10/2017"}, {"body": "tested still seeing issue understand busy especially release want make sure issue nt get lost since handling errors serious issue anyone ssr async components thanks", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "belongs vuejsvuejsorg something probably add cookbook pull request start discussion initial material even appreciated", "d": "10/2017"}, {"body": "need understand difference component definition component instance trying call method directly definition wo nt instance point", "d": "10/2017"}, {"body": "hi dwcy sorry quasar perfoming way expect topuic vue issue tracker understand think might something vue ca nt wo nt analyse whole quasar app performance issues adress quasar community find specific behaviour vue reproduce small example quasar like unuusual cpu spikes memory leaks feel free open issue though", "d": "10/2017"}, {"body": "issue actually css keyframes animation working well multiple updates found noticed chrome rendering feature exists turned paint flashing fps meter directly vue problem close", "d": "10/2017"}, {"body": "collections supported browsers support yet thought discussed another issue could nt find case something added drop support older browsers", "d": "10/2017"}, {"body": "ah found thanks clear something plan add future version", "d": "10/2017"}, {"body": "\u8bf7\u628a issue", "d": "10/2017"}, {"body": "either npm network problem", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "prop nt optional props bypass type check", "d": "10/2017"}, {"body": "seems like confusing behavior bypass type check nt default value used one provided binding could warn situation occurs", "d": "10/2017"}, {"body": "value purposefully assigned overwriting default would unexpected", "d": "10/2017"}, {"body": "guess questions bypass type check", "d": "10/2017"}, {"body": "specify prop without essentially saying prop may present present type string value expressing type present say expect type check enforced cases add", "d": "10/2017"}, {"body": "specifies type present nt default value used seems contradictory", "d": "10/2017"}, {"body": "hmm yeah needs accurate indicates value explicitly marked present remain indicates value present default value used available indicates neither allowed unless default used agree could confusing existence vs language design trying stay close values designed represent js changing would breaking", "d": "10/2017"}, {"body": "would adding warning dev mode situation acceptable would nt breaking would help people detect edge scenarios three situations seem unlikely desired property default value type requirement binding value property default value without specify default value nt required really use case letting people bypass default value binding property default value type requirement binding value", "d": "10/2017"}, {"body": "working expect mixin takes precedences try adding something child childmixin components put mixin child childmixin would overwrite well", "d": "10/2017"}, {"body": "inerhit merged thus resulting inerhited method override final according docs behavoir describe happen either", "d": "10/2017"}, {"body": "unlike lifecycle hooks methods merged overwritten", "d": "10/2017"}, {"body": "options expect object values example methods components directives merged object component options take priority conflicting keys objects docs inaccurate", "d": "10/2017"}, {"body": "b two methods objects edit ooh mean mixin vs component", "d": "10/2017"}, {"body": "key problem apparently consistently behave noted docs well aware two components true using combination happen logical oop paradigm", "d": "10/2017"}, {"body": "explain inconsistent fair mixins nt exist oop nt see referring", "d": "10/2017"}, {"body": "scenario like component class method mixin method component class b inerhits component mixin b method inerhited component mixin merged method already found inerhited componentb method used whereas currently like component class b inerhits component mixin b mixin merged mixin method used inerhition ignored", "d": "10/2017"}, {"body": "take well sure mixins standard documentation could say mixins override anything component inherits via thing right undocumented", "d": "10/2017"}, {"body": "well according wikipedia would say common sense mixins also would nt say works consistently hand documenting accurately would saved nerves", "d": "10/2017"}, {"body": "imo mixin local take precedence extended component happens local properties take precedence mixins", "d": "10/2017"}, {"body": "nothing oop different options vue different merge strategies lifecycle hooks merged way preserves hooks inheritance chain return values instead produce side effects methods name simply overwrite parent value methods return values would cause ambiguity value return merged single function assetregistration options like see op means essentially problem options comes take higher priority options coming mixin", "d": "10/2017"}, {"body": "ok still think current behavior expected example mixin applied instead mixin considered part options would overwrite whatever inherited mixin applied directly see logged instead however general nt like idea overapplying oop composing ui components especially confusing overrides like", "d": "10/2017"}, {"body": "nt think consolelog template saw easily doable userland also add call template", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "use note nt populated hook refs get populated first render access using hook", "d": "10/2017"}, {"body": "good idea instead exposing option id expose option make script selfremoving even think removed default turned development", "d": "10/2017"}, {"body": "even better shall work pr", "d": "10/2017"}, {"body": "markbrouch yes please", "d": "10/2017"}, {"body": "well think tag nt read entryclient implementation usually nt think automatic removal possible one thing could provide boolean option append attribute tag could read vuex storereplacestate removed", "d": "10/2017"}, {"body": "script registers global variable permanent side effect removing nt make variable go away", "d": "10/2017"}, {"body": "oh see getting script tag delete immediately since already dumped global context", "d": "10/2017"}, {"body": "tested latest vue build seems still case using removed vue router well memory leaks better provide html pages heapshot way way faster take html document home foo const home name home template lt div gt text lt div gt data function return text home const foo name foo template lt div gt text lt div gt data function return text foo lt p gt new vue el app data msg hello world comp home components home foo removing prop stops object count increment keeps increment retained size component sure intended edit herringtondarkholme add repro link", "d": "10/2017"}, {"body": "preliminary investigation tells discrepancy cached vnode parent parent contains stale child case home thus entire list component instances nt collected", "d": "10/2017"}, {"body": "nt investigated tried guess reading keepalive component could also come place interested fix though memory leaks interesting js", "d": "10/2017"}, {"body": "code seems still problem test", "d": "10/2017"}, {"body": "thank much works", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "\u8c22\u8c22 \u7b80\u5355\u7684\u4e1c\u897f\u5f04\u590d\u6742\u4e86 \u73b0\u5728\u6253\u4e2a\u5305\u80fd\u6210\u529f \u65e0\u6cd5\u8fd0\u884c \u63d0\u793arouter\u4e3aundefined", "d": "10/2017"}, {"body": "\u5df2\u7ecf merge \u4e86", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "please open pull request vuejsvuejsorg instead feature request", "d": "10/2017"}, {"body": "ca nt special behavior expressions custom directives something like", "d": "10/2017"}, {"body": "removing check would nt fix break existing usage transpiled modules need way check object native module object dynamic import", "d": "10/2017"}, {"body": "mean remove check ie change", "d": "10/2017"}, {"body": "safe enough imo would break user somehow defines custom option called found way detect native namespace object checking", "d": "10/2017"}, {"body": "note fix needs route async components work", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "vue expression validation parse expressions supported node version using object spread supported unless use node", "d": "10/2017"}, {"body": "thanks lot", "d": "10/2017"}, {"body": "hello giorgiomartini thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow discord chat happy help", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "expected behavior hook instead", "d": "10/2017"}, {"body": "fyi already pr tracking", "d": "10/2017"}, {"body": "close via", "d": "10/2017"}, {"body": "think behavior added data computed docs", "d": "10/2017"}, {"body": "expected behavior data changes updates dom trigger events events triggered change came user interaction control use watcher instead dom event listener otherwise manually dispatch synthetic event watcher", "d": "10/2017"}, {"body": "referring using watch docs say use isnt referring suggest something add via javascript doesnt require anything vuejs use listen changes select vmodel makes thanks feedback huge fan vuejs really appreciate amazing framework built", "d": "10/2017"}, {"body": "talking abbout vue watchers nothing linked", "d": "10/2017"}, {"body": "tonystar reading issue get intention drupal tries rewrite frontend using vue could read additional ux improvements admin ui please clarify think many people miss point moment", "d": "10/2017"}, {"body": "could read additional ux improvements admin ui think first step drupal vue core easily use theme framework frontend admin ui pages soon get vendor js framework library vuereact means point use another library inside project choice vuereact admin ui equal choice main jslibrary whole drupal infrastructure", "d": "10/2017"}, {"body": "adubovskoy exactly initially meant let gently highlight dawehner others theme framework frontend admin ui pages choice vuereact admin ui equal choice main jslibrary whole drupal infrastructure", "d": "10/2017"}, {"body": "precaucious note vue maintainers please comment discussions meaningful argument contribute nt clog useless vote vue comments something similar wo nt help use way intend critizise react factbased civil manner argue vue rather react feel need write witnessed endless flood useless comments similar thread wordpressguttenberg tonystar could link comment op even better edit", "d": "10/2017"}, {"body": "linusborg note added also particular issue intended involve vue team selection process discussion", "d": "10/2017"}, {"body": "thanks also particular issue intended involve vue team selection process discussion really clear thanks", "d": "10/2017"}, {"body": "think discussing future web components really important large discussion nt know lot topic seems like react saying nt care web components last paragraph section talks vuejs web components future project also totally feasible offer deeper integration vue web component specs custom elements shadow dom style encapsulation however moment still waiting specs mature widely implemented mainstream browsers making serious commitments think clarifying statement vuejs core team thoughts since article written would aid discussion one reasons like vuejs seems like easier transition web components specs mature frameworks like react think lot people look towards comparison article inform framework decisions", "d": "10/2017"}, {"body": "closing issue accomplished goal raising awareness discussion better continued drupal threads", "d": "10/2017"}, {"body": "thanks comprehensive answer exactly expected issue", "d": "10/2017"}, {"body": "posted also make sure specify changes made fresh scaffold repro commit history look", "d": "10/2017"}, {"body": "fyi directives server needs implemented completely different fashion vnode transforms dom access also nt see point creating fresh directive instances request somehow inject app piece application state accessed across app instance request", "d": "10/2017"}, {"body": "thanks taking time review say somehow inject parsedlangheaderlanguage app piece application state accessed across app instance request think cases appropriate consider example desired translation directive html hello could instead html hello feels verbose application given vue exsiting api dont see avoid understand directives nt dom access server feature request likely naive make easy provide application state directive creating time per request doesnt passed directive throughout entire application", "d": "10/2017"}, {"body": "expected javascript works sharing object reference nothing cloning correct solution", "d": "10/2017"}, {"body": "thanks", "d": "10/2017"}, {"body": "technically event named ca nt assume bad syntax due decoupled nature events possible active detect wrong event names without writing explicit code telling us events child component may possibly emit quite straightforward write userland plugin checks assert valid", "d": "10/2017"}, {"body": "ts inside export class try get error gt expected guess babel similar reach state template testmethod valid straightforward plugin good idea think case would obvious framework", "d": "10/2017"}, {"body": "normal vue makes things added onto data reactive add something wo nt reactive example want creating new vue instance data", "d": "10/2017"}, {"body": "posva create reactive properties plugin possible ps application plugin another file", "d": "10/2017"}, {"body": "look fiddle also look plugins like vuex see achieve reactivity", "d": "10/2017"}, {"body": "think isshow defined get false still display", "d": "10/2017"}, {"body": "using scoped slot nt make sense case abstract container inner template add warning though", "d": "10/2017"}, {"body": "herringtondarkholme thanks", "d": "10/2017"}, {"body": "expected behavior applied wrapping slot content whether modal shown concern", "d": "10/2017"}, {"body": "linusborg posva took look happening simpler fiddle think flow events leading bug user changes selection event fires componentupdated function called handler updates value reverts selection back original value binding since vue nt received event yet event fires loop select options reset step nt update vue instance correct value far solution think want make sure event handled user added event handlers thinking could normalizeevents think possible reorder handlers event create pull request little guidance would helpful note replicable firefox unless put breakpoints actuallysetselected listener callback vue adds input element events unit test issue please select alpha beta mount documentbodyappendchild vm el vm elchildren selected true triggerevent vm el input waitforupdate gt triggerevent vm el change gt expect vm elvalue tobe alpha done", "d": "10/2017"}, {"body": "fyi ie edge trigger elements probably use instead anyway", "d": "10/2017"}, {"body": "take one add warning", "d": "10/2017"}, {"body": "think related browsers handle updates nonie browsers seem resolve values current javascript event loop ie resolves soon attribute set keeping block ieedge nt think spec actually mandates handled setting attributes sequentially", "d": "10/2017"}, {"body": "agree actually already issue follow keep watching", "d": "10/2017"}, {"body": "take stab", "d": "10/2017"}, {"body": "problem", "d": "10/2017"}, {"body": "someone submitted pull request days ago hopefully satisfactory fix issue looking forward", "d": "10/2017"}, {"body": "honestly nt think cater obvious buggy behavior outdated version browser versions behind fix also lets platformspecific code leak core patching algorithm reason app must run older version chrome give two divs different keys work around behavior update seems old chrome higher market share thought", "d": "10/2017"}, {"body": "closed via published", "d": "10/2017"}, {"body": "still seeing error replace indexvue jsxvue edit mistake looks issue jsxvue also noticed breaks", "d": "10/2017"}, {"body": "fyi implemented", "d": "10/2017"}, {"body": "fadexiii", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "closing since nt think easy way fix instead probably add note caveat workaround docs cc chrisvfritz", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "\u4f7f\u7528typescript\u4f46\u662f\u4e0d\u7528webpack\u6253\u5305 \u76f4\u63a5\u7528\u5fae\u8f6f\u7684tscexe\u7f16\u8bd1\u751f\u6210\u7684js\u6587\u4ef6 \u7136\u540e\u4f7f\u7528script\u6807\u7b7e\u5f15\u5165 \u4e0d\u8fc7\u73b0\u5728\u66f4\u6539\u4e86dts\u5b9a\u4e49\u8fd9\u4e2a\u95ee\u9898\u5c31\u89e3\u51b3\u4e86 \u8c22\u8c22", "d": "10/2017"}, {"body": "stevecruise", "d": "10/2017"}, {"body": "wvh solve problem", "d": "10/2017"}, {"body": "finally gave proposal proper investigation ends complicated seems problem lies within consistency different input types current implementation assumes text input ignores noninput events simplifies wrapping plain text input fields makes whole thing inconsistent feels like specialcase convenience hack managed make work requires component specify option injecting event type prop type back component handler already messier hoped even works becomes prohibitively complex mimic full behavior native eg checkboxes array binding radio select point feel implementation cost inconsistency outweighs simplification change would bring taking step back whole idea component opening finergrained control twoway binding form inputs simplifying job expanding sugar consistently pair input output letting fill details mixing feels like magic nt belong", "d": "10/2017"}, {"body": "fwiw", "d": "10/2017"}, {"body": "works differently used achieve similar results true close since think jackmellis project provide solid foundation nt intend include way create hoc core mainly nt see large benefit mixins extends", "d": "10/2017"}, {"body": "great thanks", "d": "10/2017"}, {"body": "open pull request add warning", "d": "10/2017"}, {"body": "reread whole thread decided going allow create reactive properties nt exist cases one level deep means following work assuming empty object still throw error read property baz undefined reasoning dev experience forms declare nested properties indeed chore silently failing also obviously bad also seen question resetting form data popping many times terms convenience autosetting would simplify resetting empty object consistency even warnings current behavior inconsistent cases dynamic key segment eg already using internally ca nt statically declare property known runtime another case binding array via index also use ensure array updates longerterm concern move proxies detecting property addition would become trivial would fact difficult add property without making reactive code quality framework opinion originally changed behavior bit opinionated data declaration changing back certainly weakens opinion think ok middle ground autoreactivepropertycreation limited onelevel deep declare requirements also still exist rootlevel properties pretty much leaves us objects dedicated form bindings still good practice declare properties also see able omit speed prototyping luckily javascript type systems become quite mature think start leave opinions enforced via optin tools like typescript flow", "d": "10/2017"}, {"body": "also seen question resetting form data popping many times resetting form data came see second code snippet think pretty good solution vue wondering somehow nativesuggested way", "d": "10/2017"}, {"body": "break application fix problem using models represent data entitities customer product using kinds shiny new features classes proxies put simply using classes models property holds data class constructor returns proxy getter setter traps cool getter checks object requested property returns exists otherwise returns property object property defined undefined setter directly sets property since direct manipulation object properties supposed happen initialization however updating started notice weird behavior directly mapping model attributes input fields work correctly longer following behavior user would input something property would get updated intended instead object would get new properties solution digging core discovered vue respects use defined getters setters makes call find exist created another trap specifying setter handful properties like javascript simplified class model constructor attributes thisattributes attributes static getproxyattribute model attribute return modelgetattribute attribute static setproxyattribute model attribute value modelsetattribute attribute value getattribute attribute attribute return attribute setattribute attribute value thisattributes attribute value notice property exception necessary vue work properly conclusion likely elegant solution want encourage everyone enhance solution make better seems work entirely happy", "d": "10/2017"}, {"body": "know done closed wanted say extremely happy functionality available building data centric app maintain blank samples data objects otherwise forms editing dynamically generated simplifies much pain dealing thank open loosening opinions framework opinions tend like without overbearing flexibility listening feedback considering real world usage opt inout ability vue stands thanks", "d": "10/2017"}, {"body": "problem figure", "d": "10/2017"}, {"body": "nt", "d": "10/2017"}, {"body": "use catch errors", "d": "10/2017"}, {"body": "set indeed", "d": "10/2017"}, {"body": "feature request make root elements otherwise layout would break vue sindex tr th nthchild tr th nthchild tr td nthchild tr td nthchild hack fixed column vue export default name copyfirst props arr array", "d": "10/2017"}, {"body": "way silence message", "d": "10/2017"}, {"body": "looking feature implemented outside via userland setup done demo app", "d": "10/2017"}, {"body": "mannikj best solution yes best solution would impractical dirty hack big excelsheetlike structure use jquery hundreds dynamic rows sacrifice huge performance would unacceptable solution situation exactly wonder anyone find proper solution", "d": "10/2017"}, {"body": "meanwhile open question stackoverflow link cihadturhan finally forget idea use table element use div elements jsfiddle hope resolve issue", "d": "10/2017"}, {"body": "thanks already found stackoverflow question jsfiddle link used one plausible solution see assigned bootstrap classes like make height equal across rows maybe realized assign border divs width div px border width two issues made worried visual details going solution flattening data use wo nt worry width columns honest never liked recursive solution rendering thanks help cihad", "d": "10/2017"}, {"body": "thank example lot trouble vuex throws whole thing whack going actually toggling checkbox vuex action mutation successful basically even user checked checkbox nt mean want go checked state want keep following computed property already set using using vuex nt good idea found ui getting toggled even though nt committed mutation found strange research actually found nt good answer question could nt believe believed common pattern wanting checkbox toggle action complete way deal error end toggling checkbox say like user preferences page nothing worked something like settimeout example thank thank hirokiosame asking question", "d": "10/2017"}, {"body": "hi issue vue pages lot components rendered list works fine phones others throws error reproduce via browserstack anytime printscreen", "d": "10/2017"}, {"body": "found issue case seems moved template file everything works fine", "d": "10/2017"}, {"body": "haies thanks help", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "bigbigbigbear", "d": "10/2017"}, {"body": "wangxiao \u4f60\u786e\u5b9a\u6d4b\u8bd5 ios link", "d": "10/2017"}, {"body": "considering vue new project thread seems similar seeing primary users wont latest phones see sample vue apps simply nt render ios safari gt reproduction vue demo render ios equivalent react component please advise", "d": "10/2017"}, {"body": "seem understand named slots used along routerview know part router nothing topic provide details please thanks advance", "d": "10/2017"}, {"body": "ca nt seem get thing working without vuetype using vuetype mandatory", "d": "10/2017"}, {"body": "almost problem solved within visual studio code running development server got following error module build failed error could find file srcsectionssearchresultsearchresultvue solved changing webpack tsloader config like upcoming typescript template vuecli", "d": "10/2017"}, {"body": "would also like expect import vue browsers support modules seems references need dealt", "d": "10/2017"}, {"body": "fyi presence source code meant compiletime optimizations used bundler like webpack adding constant bundle would completely defeat purpose moment using native es modules browser still comes significant performance issues build step still preferred type serious usage still prioritize dist files bundlers", "d": "10/2017"}, {"body": "browsercompatible esm file would good imho vue still discovered simply bundling learned progressively using modern es features maybe new buildconfigjs way around rename breaking change generate config", "d": "10/2017"}, {"body": "also would helpful add support passing propseventattributes something like", "d": "10/2017"}, {"body": "maybe see chinese", "d": "10/2017"}, {"body": "osx", "d": "10/2017"}, {"body": "thanks jangunzenhauser works duration", "d": "10/2017"}, {"body": "able properly resolve issue since nothing vuejs really concerned resolved chase proper solution outside issue report", "d": "10/2017"}, {"body": "defcc think still worth conversation completely agree casting seems incorrect use case modifier think people would use thinking nt need extra step casting string integer child component expects integer string currently falls back string means still need extra code ignore cast fails making significantly less useful reason cast undefined null", "d": "10/2017"}, {"body": "thanks share team think aldencolerain notifications githubcom defcc think still worth conversation completely agree casting seems incorrect use case modifier think people would use thinking nt need extra step casting string integer child component expects integer string currently falls back string means still need extra code ignore cast fails making significantly less useful reason cast undefined null receiving mentioned reply email directly view github mute thread", "d": "10/2017"}, {"body": "vue fine upgraded latest weird undefined show bug elementui vue related", "d": "10/2017"}, {"body": "see", "d": "10/2017"}, {"body": "updates regarding getting error code similar first post", "d": "10/2017"}, {"body": "many stumble upon issue error introduced similar one reported issue fact regression already fixed update latest patch release vue moment issue commit release", "d": "10/2017"}, {"body": "finally solved problem realized loading separate version vue page one webpacked distribution files necessary", "d": "10/2017"}, {"body": "still getting upgraded router gt unfortunately ca nt use codesandbox giving nt much code look anyway hope fine", "d": "10/2017"}, {"body": "fracasula using routeronready using async components nt see connection issue", "d": "10/2017"}, {"body": "use together vue version", "d": "10/2017"}, {"body": "vue", "d": "10/2017"}, {"body": "got thanks", "d": "10/2017"}, {"body": "vueesmjs vue warn vue constructor called keyword", "d": "10/2017"}, {"body": "nathenchan \u6211\u662f\u6309\u7167\u63d0\u793a\u5347\u7ea7\u4e86 vueloader vue", "d": "10/2017"}, {"body": "shouldcomponentupdate might added render functions amp jsx section", "d": "10/2017"}, {"body": "rhyek use way oneway binding could nt find way create proper getter get value", "d": "10/2017"}, {"body": "common case dependent properties instance dropdown dropdown b values depends selected value dropdown input c might defaulted based selected value dropdown b imagine dependent values retrieved async calls rest api ca nt use anymore since asynchronous yes implement rxjs trivial way learning vue one first issues trying solve found solution could nt understand days came back issue knowledge reactivex understand solution ok point nt style way solve common problem would less verbose readable wo nt require additional knowledge probably vue core library might vuerx even third party library using vuerx behind scenes could provide really elegant way solve problem", "d": "10/2017"}, {"body": "quick search github use risk", "d": "10/2017"}, {"body": "sorry probably nt clear enough library one first found made wondering scenario nt handled similar way vue core official vue library expecting point similar solution would vue official libraries", "d": "10/2017"}, {"body": "please refer strive keep api surface small scenario nt handled similar way vue core official vue library implemented user land without hack nt hard users use existing projects would also argue halfbaked would nt suffice users need fully implementing might introduces simpler concepts smaller code size async computed rx vue binding imagine dependent values retrieved async calls rest api use case might done without async probably store value another field defining one property extract value handling async setting value callback", "d": "10/2017"}, {"body": "works first update however subsequent update inside component nt update parent", "d": "10/2017"}, {"body": "waiting", "d": "10/2017"}, {"body": "yes vue vueloader proper support template compilation scoped css hotreload functional components", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "interesting", "d": "10/2017"}, {"body": "meteorlxy solution break use radio checkbox vue supports dynamic types converting vifvelse looks similar workaround buggy call property", "d": "10/2017"}, {"body": "nkovacs yeah use textlike types ui components like akryum commented think using render function could better solution little complicate happy see dynamic types supported new release", "d": "10/2017"}, {"body": "related thinking seems nt reactive completely useless outside event handlers nt", "d": "10/2017"}, {"body": "guru awful lotta folk seem get trouble nt think viewmodel vue loosely inspired mvvm least step store pattern global variable contains page state take example email password current values would say validity page level state inputs interacting directly state declared components computed prop isvalid also looks state variable implement without without ref see many folk getting knots nt think store vue stuff directly talking vue stuff antipattern vue wants interact store", "d": "10/2017"}, {"body": "application starts multiple controls various components start multiple stores component store order organize state application logical reactive objects bound respective component need access main vue reactivity start useful otherwise start using signal topdown signal mess far away", "d": "10/2017"}, {"body": "personally impression refs mostly meant useful means get html element reference absolutely need nt reactive anyway using way directly access child component state seems like violation good component design agree would convenient could see tempted take advantage convenience ways would ultimately make components harder manage especially third party component component creator makes guarantees propsevents interface ultimately one business uses internal state nt make assumptions remaining compatible versions author worry others relying use internal state", "d": "10/2017"}, {"body": "course everyone tries design components way sibling components like case button lives different slot parent think refs components actually make code cleaner instead cluttering meaningless container components hold part state children", "d": "10/2017"}, {"body": "true see point well imagine middle ground would something like distinguished public private propertiescomputedsmethods way component interface could remain welldefined components could take useful references children", "d": "10/2017"}, {"body": "think kinda like idea could maintain compatibility making everything public default someone wants privatize data could specify fields part public interface using property like public component refs could proxy objects contain exposed members", "d": "10/2017"}, {"body": "would like major blocker us right", "d": "10/2017"}, {"body": "got work moving script tag preexisting dom scripts vuejs app code", "d": "10/2017"}, {"body": "squarenomad case nt using vue handling click post legacy js scripts people migrating vue big codebase libraries yeah sroberson pointed attaching handlers vuejs created shadow dom works whether putting script tags code run synchronous attaching handlers vue takes dom handlers set vue taken going lost strange effects also ca nt really modify dom elements vue owns", "d": "10/2017"}, {"body": "thing use vuejs page disables events reenable", "d": "10/2017"}, {"body": "wonderful vuejs guide example wrap existing js module example use uses technique attaching el mounted stage", "d": "10/2017"}, {"body": "hello world example always simple real world cruel init using vuejs inited party framework", "d": "10/2017"}, {"body": "hard time understanding nt allow transitions observe root element components determining transition applied making increasingly difficult write dry code components responsible visibility transition picking placing transition inside component work case want single instance collection components displayed simplified representation code looks like group window components share single column window responsible visible state like said making difficult control windows using transition ca nt take advantage transition amazing mode feature html html understand really matter opinion structure code maybe rare case suggestions would appreciated feel least option transition element render transitions based root element components assume always vshow components assuming visibility always controlled component transition based elements exist sorry bit rant continue explore solutions thanks", "d": "10/2017"}, {"body": "thought helper package like one exist", "d": "10/2017"}, {"body": "vue replaced want make sure child components also mounted use source", "d": "10/2017"}, {"body": "different tag", "d": "10/2017"}, {"body": "raychenfj pretty good", "d": "10/2017"}, {"body": "azamatsharapov add piece code vue application possible add helper function applies variables template engine uses beautiful solution case new data nosql database may include new props old data nt make vue crash displaying old data", "d": "10/2017"}, {"body": "damn would like make tablelayout component takes number rows columns props creates grid able slot components get placed right cells based row column value props sure", "d": "10/2017"}, {"body": "work", "d": "10/2017"}, {"body": "bit confused commit says ca nt see code handling undefined commit actually says null set default undefined passed prop handled", "d": "10/2017"}, {"body": "check default value value undefined value getpropdefaultvalue vm prop key since default value fresh copy make sure observe var prevshouldconvert observerstateshouldconvert observerstateshouldconvert true observe value observerstateshouldconvert prevshouldconvert assertprop prop key value vm absent found bit vuejs dist around part defaults handled ca nt find comment build function applies props vm anywhere current vuejs build", "d": "10/2017"}, {"body": "question vue convert us remember kebabcase vue files makes things awkward beginners wasted last mins", "d": "10/2017"}, {"body": "one rule commit memory html mean attributes tags attribute values javascript expressions use second statement applies", "d": "10/2017"}, {"body": "would add two cents hide template tag display none polyfill doesnt hide template tag counts elements template render template inlined html document end rendered elements number number source template element", "d": "10/2017"}, {"body": "necro totally agree understand reason error message pretty unclear", "d": "10/2017"}, {"body": "please open feature request better error message see previous messages thread closed issues good place continue conversations", "d": "10/2017"}, {"body": "suffering well actually bug must render space tags tags rendered spacing", "d": "10/2017"}, {"body": "could put html entire website one line still work doubt bug generated html jadepug thing long source looks proper nt matter generated html looks like long valid html", "d": "10/2017"}, {"body": "could put html entire website one line still work doubt bug generated html spaces tags legitimately different html though really problem inline elements like reporters using time really affects layout experience generally problem developers need remove space tags stop browsers affecting layout want control spacing specifically css current behavior definitely sane choice see times might want trigger behavior wonder could work around component span content though", "d": "10/2017"}, {"body": "decision opinion embedded nature javascript schema use default value property property passed undefined actually nt embedded mongoose schema definition logical opinion else make default item value resort default want add new item items pushing undefined value items list component takes care default value nt put component logic parent right workaround use case ensure item passed undefined get default value working thank kindly vue team", "d": "10/2017"}, {"body": "im still favouring undefined value value use default value value null false use passed one otherwise write could write", "d": "10/2017"}, {"body": "could build component use computed property based prop passed prop matches criteria make default use within component", "d": "10/2017"}, {"body": "computed property nt break vbinding nature properties", "d": "10/2017"}, {"body": "sirlancelot yeah sort makes props default value obsolete way usually approach similar things nt use default prop values could cases would work sake consistency across project", "d": "10/2017"}, {"body": "lopugit way use computed properties two way binding vmodel", "d": "10/2017"}, {"body": "aledmb solution fantastic solved problem mine", "d": "10/2017"}, {"body": "hi guys advice correctly solve", "d": "10/2017"}, {"body": "problem advice", "d": "10/2017"}, {"body": "cspeer got problem wanted try solution ever encounter problem select value alway previous value selected example empty select pick value consolelog get empty tat pick value previously picked one gets consoleloged", "d": "10/2017"}, {"body": "know issue old ca nt find simpler solution use basic layout semantic ui dropdown want share work around using semantic ui dropdown attaching change event hidden field", "d": "10/2017"}, {"body": "jituanlin assume primitives always copied safely quite possible shallow copy objectarray would simply work somewhat better force explicit factory fn expect programmer would remember bit every time lest bugs code hell", "d": "10/2017"}, {"body": "fyiuramron freedom risk choose freedom", "d": "10/2017"}, {"body": "jituanlin get case general case agree still notice frameworks used reduce cognitive load streamline functionalities case arrayobject props similar function vue explicit factory method easily extended even replaced factorysingleton function completely external component regular utility function wish risk invalid forced copies objects etc also case little freedom gained forcing framework use underthehood factory cloningcopying function instead simply allowing programmer explicitly even say allowing provide factory instead forcing provide reference existing object actually increases freedom time reducing risk simplest case additional characters think cost managable chuckles", "d": "10/2017"}, {"body": "sirlancelot thanks nice solution", "d": "10/2017"}, {"body": "fyi directly watch getter via without need separate computed property", "d": "10/2017"}, {"body": "opening issue almost exactly years ago nt commented alot know issue closed say improvement solution dreamed wanted thank people making possible clap fyi", "d": "10/2017"}, {"body": "correct wrong longer possibility vue object would one maintain reference function registration unregistration documentation says apart el treat arguments readonly never modify need share information across hooks recommended element dataset ca nt done dataset property stringmap", "d": "10/2017"}, {"title": "fetching local files", "body": "developing nwjs app en existing slider built via backbone renders json file familiar backbone trying fetch file stored file system device servers involved reach file node modules nt know pass data fetch function fetch file file protocol security issues launch app security disabled package json nwjs code loadpages function thisactivebookfetch url url file success function collection response options selfrenderbook selfrendernav error function collection response options alert error return renderbook function myappbookview new myappbookview collection thisactivebook instanceurl url nt work error callback trigged see json response text status sure issue backbone chromium args nt working nwjs could following pass json backbone render nt know", "num": "4166", "d": "10/2017"}, {"title": "using backbone mobile", "body": "", "num": "4165", "d": "10/2017"}, {"title": "collections reset id issue", "body": "found object contains id field use reset reset collection remove duplicates according id actually dont want remove duplication way thisreset resdatalist", "num": "4164", "d": "10/2017"}, {"body": "ok maybe good idea since patching jquery managed get around changing jquery done callback add status code success callback determine successful issuccess status status gt amp amp status lt status", "d": "10/2017"}, {"body": "go", "d": "10/2017"}, {"body": "model within collection must unique id need nonunique would recommend setting different attribute name unique even undefined", "d": "10/2017"}, {"body": "hi news regarding release availability date regards", "d": "10/2017"}, {"title": "transitionto queryparams refreshmodel triggers model calls routes", "body": "description appears calling queryparams nested route trigger calls lower route route unchanged queryparam reproduction setup somewhere default null somewherenested somewherenested component triggers transition router service nestedparam changed trigger model somewhere called transitioning controller triggers another call cause digging appears call route finalizequeryparamchange returns incorrect values nt set set router transitionto call call return promise may actually executed time found flaky willing help fix however embedded deeply find difficult pick right approach", "num": "15801", "d": "10/2017"}, {"title": "introducing loading route prevents query params resolved acceptance test", "body": "lifeart found bug steps reproduce open see tests pass create loading route test fail app normal user behaves correctly debugging drop comment content test comment clicks hook nt loading route setter fires acceptance test introduced loading route setter never fired", "num": "15800", "d": "10/2017"}, {"title": "resetting query parameter work expected", "body": "example project reproduces found essentially happens controller observer function query param change resets second parameter response eg resetting page number search term changes second parameter get reset change triggered result pressing link example route default contains value parameter incremented user clicks link leading route different value page remains moreover page segment route url get eliminated value returned default", "num": "15799", "d": "10/2017"}, {"title": "read property concat undefined upgrade", "body": "change made upgrade run tests error causes couple tests fail everything else works apparently line one tests fails looks like import moduleforcomponent test emberqunit import hbs htmlbarsinlineprecompile import wait embertesthelperswait moduleforcomponent contenteditable integration component content editable integration true test renders function assert thisset text text thisset editing true template block usage thisrender hbs assertequal html trim text tips help debug", "num": "15794", "d": "10/2017"}, {"title": "deeply nested partials broken ember onwards", "body": "problem addonapp invoking deeply nested manner ie invoking partial invokes another partial currently broken really broken context template first invokes partial nt passed nth n gt call causing apps break upgrading ember one level invocation work since template context passed first level example let say template invokes partial follows correctly available however invoking another partial called reproduction run visit see record name switching renders record name correctly cc rwjblue", "num": "15791", "d": "10/2017"}, {"title": "build warnings typescript compilation emberglimmer", "body": "fresh master results following output related recent typescripting efforts", "num": "15790", "d": "10/2017"}, {"title": "inconsistent capitization currenturl rooturl vs urlfor router service", "body": "know bit pedantic treating url whole word like seems urlfor capitalization currenturl rooturl would currenturl rooturl respectively", "num": "15774", "d": "10/2017"}, {"title": "racing condition action placed back burner fires element removed dom", "body": "twiddle realize edge case could nt get twiddle created full problem form submit text box element action put backburner via submit button clicked somehow would fire possibly backburner would think action fire time bugger track using back burner webservice nt get pelted users type search performed webservice forcing delay via backburner solved problem users would speed type part code action null properties user would hit submit button data getting clobbered action backburner would unexpectedly execute even though user nt typed anything textbox", "num": "15770", "d": "10/2017"}, {"title": "using actions elements triggered events piles listeners", "body": "hi found elements created removed instance statement include actions paired native events events pile least chrome happening lot elements instance showing list items inputs buttons happen quickly cause memory problems also see heap grow never decrease example onclick button ember twiddle screencast particular result observed performance gt memory gt listener panel chrome quite different two locks suggested mention stefanpenner krisselden thanks", "num": "15768", "d": "10/2017"}, {"title": "ember js highcharts component misbehaving trying render dashed linecolored markers points", "body": "created ember js component uses highcharts library create different types charts based data configuration provided component however trying use dashstyle marker fillcolor series get dashed line data point get colored marker based point data respectively getting desired results however pasting config jsfiddle able get desired chart output help would sincerely appreciated pasting component code import ember ember export default embercomponentextend chartid undefined chartdata undefined selectedcharttype undefined chart undefined allowedcharttypes undefined customslider false slider false showcharttypeselector false charttypes label bar chart value bar stacked false id group label stacked bar chart value bar stacked true id group label bar range chart value columnrange stacked false inverted true id group label bar chart value bar stacked false threed true id group", "num": "15757", "d": "10/2017"}, {"title": "hooks restoring route controller state", "body": "building ember app run parallel existing nonspa must look behave existing nonspa website behaviour state stored server unfortunately user comes back page page left need implement behaviour ember storing state local storage rather server first attempt create two new route hooks called true provides opportunity return data stored local storage called provides opportunity restore data local storage back onto controller fairly simple worked nicely soon realised seeing incorrect state page example user reenters ember app query params hook runs ajax request performs default behaviour setting controller called setting data local storage results displayed screen search problem suitable ember hooks restore state model hook tried etc one side eg setting properties using nt work soon chain hooks access point time etc etc needed make sure hook gets called match later restored controller found way overriding first time called merges state restored got complicated due fact nt deal query params ie controller properties solution far issue kind question currently better way hopefully discussion whether hooks could improved way make state management bit easier however understand changes ember core hooks super unlikely obscure issue like one thought bring nonetheless thanks taking time read", "num": "15756", "d": "10/2017"}, {"title": "embera docs missing parameter description", "body": "seems accepts optional parameter currently documented", "num": "15753", "d": "10/2017"}, {"title": "docs ember computed page loading", "body": "hi since days ago page never loads url changed thanks", "num": "15750", "d": "10/2017"}, {"title": "exception thrown fullyscopequeryparams", "body": "attempt transition one route another fast enough model ready yet end uncaught typeerror use operator search activetab undefined classfullyscopequeryparams classprocessactivetransitionqueryparams classdotransition classtransitionto objectflaggedinstrument classinvoke objectsendevent classtrigger super classtrigger issue already discussed resolved issue pr using looks like regression happy provide information needed", "num": "15749", "d": "10/2017"}, {"title": "import unsubscribe reset emberinstrumentation", "body": "old ember global returns defined functions new module api returns undefined imports listed supported", "num": "15748", "d": "10/2017"}, {"title": "computedsort broken", "body": "hi guys sorting using embercomputedsort seems broken working since upgrade silently failing sort already issue sort computedsort works incorrectly empty sort properties array experiencing created demo scenarios sorting embercomputedsort working sorting embercomputedsort broken thanks", "num": "15745", "d": "10/2017"}, {"title": "simple ember app freezes browser", "body": "strange bug opening ember app freezes browser tab using chrome task manager see tab using ram goes chrome decides kill cpu happens firefox able extract behavior minimum app see problem need run open app bear mind may crash chrome sadly ca nt debug issue since tab unresponsive ca nt use dev tools", "num": "15743", "d": "10/2017"}, {"title": "updated ember got error", "body": "sure right place report also happens ember upgrading one version time issue bad template issue error gave absolutely indication wrong found deleting one template another error went away spotted button error got broccoli plugin broccolimergetrees treemerger preprocessedapp amp templates failed typeerror read property length undefined objectismulipartpath objectisinlineinvocation mustachestatement visitnode visitkey visitnode visitarray visitkey visitnode visitarray visitkey broccoli plugin instantiated broccolimergetreesplugin new broccolimergetrees functionbroccolimergetrees upstreammergetrees mergetrees emberappmergetrees emberappappanddependencies emberappjavascript emberapptoarray emberapptotree moduleexports", "num": "15740", "d": "10/2017"}, {"title": "router service transitionto breaks query params application route", "body": "query parameters application routecontroller assert thrown using new router service method assert throw query param exist query parameters argument passed treen transitonto specfically assert added commit since ember twiddle date latest release created demo app reproduces scenario pulled star app follow link tree sub route notice linkto works fine button causes assertion remove query parameters application controller everything works great", "num": "15735", "d": "10/2017"}, {"title": "query parameters required using", "body": "get following error attempt transition route query params without providing value query params error coming", "num": "15734", "d": "10/2017"}, {"title": "computedsort updated value itemskey null", "body": "first time get sorted property property null sorted property never recalculated property receives value afterwards see attached file reproduction scenario works fails reason fails app property subproperty model modelusers modelsortedusers rendering starts beforemodel model hook value controllermodel still null sortingzip", "num": "15732", "d": "10/2017"}, {"title": "pluralize singularize available emberstring", "body": "currently methods available emberstring however exposedused wanted import adapter currently breaks unless use emberstring", "num": "15731", "d": "10/2017"}, {"title": "convert emberglimmer package typescript", "body": "convert emberglimmer typescript use dts files imports packages", "num": "15729", "d": "10/2017"}, {"title": "currentpath respect resetnamespace dsl option", "body": "even used returns path including segments parent routes resetnamespace behaviour observed testing helper", "num": "15728", "d": "10/2017"}, {"title": "ember router service unable transition without query parameters present", "body": "upgraded app today think found bug method new routing service using addon since removed following code working fine appears broken js controller import controller embercontroller export default controllerextend queryparams page message page message component import component embercomponent import inject service emberservice export default componentextend router service actions jump let queryparams message hello world thisget router transitionto index queryparams error get action passed query parameter transition index please update page narrowed coming line routerjs end working include query params hash short js broken thisget router transitionto index queryparams message thisget router transitionto index queryparams page thisget router transitionto index works thisget router transitionto index queryparams message page created app shows broken behavior", "num": "15725", "d": "10/2017"}, {"title": "couple issues updating ember", "body": "new module syntax couple things use nt seem migrated missing something things using old way release notes mentioned could removed getting warning normal", "num": "15724", "d": "10/2017"}, {"title": "update documentation link new url api docs structure", "body": "package ember source like convert api doc links new url structure example additionally like convert references old ember namespaced classes simplified post rfc names example documentation might refer emberobject want emberobject see readme mappings list subdirectories directory may may things convert verify need conversion check indicate comments want work directory add name item also submit pr mention issue link shows thanks happy coding x container lock parrryy x emberglimmer lock parrryy x emberviews lock parrryy x ember lock marcoumpierrez x embermetal lock karthiick x externalhelpers lock parrryy x emberapplication parrryy x emberrouting ynotdraw x internaltesthelpers ynotdraw x emberconsole ynotdraw x emberruntime ynotdraw x loader ynotdraw x emberdebug williamhaley x embertemplatecompiler ynotdraw x nodemodule ynotdraw x emberenvironment ynotdraw x embertesting ynotdraw x emberextensionsupport ynotdraw x emberutils ynotdraw update sure prepend commits get changes see", "num": "15723", "d": "10/2017"}, {"title": "incorporate autodisttag npm publishing scripts", "body": "currently older nonprerelease version published next minor release stable npm tag changed older release example push tag ci autopublishes updates npm tag push ci autopublishes updates npm tag point tag invalid using avoid issue ensuring dist tag updated newer commit old one believe need update section publishing script call binary first cc", "num": "15721", "d": "10/2017"}, {"title": "array query param url format encoding", "body": "query param array cars audi fiat ember encode cars get pretty url like cars audi fiat", "num": "15712", "d": "10/2017"}, {"title": "binding via handlebars values nt add attributes", "body": "ember twiddle following handlebars ember application expect goodbye option selected boolean html attribute selected attribute means indeed see goodbye closed select menu using css style work attribute missing", "num": "15709", "d": "10/2017"}, {"title": "action helper target dspromiseobject", "body": "action defined dsmodel dspromiseobject instance template something like get following error working around using emberbindhelper addon would nice nt need", "num": "15708", "d": "10/2017"}, {"title": "promiseproxy calling success handler rejected promise", "body": "noticed ember promiseproxy calls success handler promise rejected promise setting ok causing lot issues apps appapplicationcontroller embercontrollerextend init let objectpromiseproxy emberobjectproxyextend emberpromiseproxymixin", "num": "15694", "d": "10/2017"}, {"title": "model state transition clean state nt work", "body": "updating invalid record manually clean state state model set instead make return even record dirty got saved record attribute name state change attribute name call record beforehand ensured server would respond validation error attribute name ember got server respond state changes update attribute name original value state changes instead correct state set update record twiddle reproduces bug", "num": "15693", "d": "10/2017"}, {"title": "nodemodules missing npm nt work well embercli", "body": "create nodemodules missing created meanwhile tried says date embercli node npm os linux", "num": "15688", "d": "10/2017"}, {"body": "reproduced ember btw", "d": "10/2017"}, {"body": "know deeply nested partials simplified component invockation", "d": "10/2017"}, {"body": "happy help fix someone could help give direction believe bug glimmervm right", "d": "10/2017"}, {"body": "confirm case partial available showed tests made changes update", "d": "10/2017"}, {"body": "cc krisselden smfoote", "d": "10/2017"}, {"body": "consistent lower camel case acronyms conserve case first letter discussion given imply change api please open rfc thank", "d": "10/2017"}, {"body": "hello ryannerd bug though input removed dom still asked piece code piece code cancel time call toggling see fix twiddle complex async tasks let recommend amazing emberconcurrency addon thank", "d": "10/2017"}, {"body": "serabe please reopen issue action firing backburner even input events queued happens form submit action takes place form getting torn suspicion form closing backburner code executing functions backburner clear queue nt matter user typed something action backburner action code firing even though activityevent occurred unfortunately side effect case stated even though pending events action action code fires anyway element goes scope nt happen bug", "d": "10/2017"}, {"body": "bug original twiddle bug implementation looks like code processes eventshandlers like event fire method named called context set component method calls method component first cancels previous task sets new one task run returns returns task run ember javascript knows know task run input dom think analytics script debounced thing modified original twiddle show log happening tried toggling input without typing typing waiting task done toggling nothing happened perhaps twiddle examples reach ember community slack help channel discuss use case community chat active confirm bug reopen issue thank", "d": "10/2017"}, {"body": "assume want reported proper repository", "d": "10/2017"}, {"body": "hello closing since emberjs bug please go help channel slack registered use slackin app using try repo thank", "d": "10/2017"}, {"body": "moving", "d": "10/2017"}, {"body": "would happy try work", "d": "10/2017"}, {"body": "alexmiddeleer needs documented ping slack need help", "d": "10/2017"}, {"body": "nt able get yui server mode working worked", "d": "10/2017"}, {"body": "hi cesarangular looks like url changed new url looking new ember modules api", "d": "10/2017"}, {"body": "cesarangular response bmac help feel free close issue", "d": "10/2017"}, {"body": "yeap helps thanks bmac closing", "d": "10/2017"}, {"body": "hello marxsk try reproduce embertwiddle project fork thank", "d": "10/2017"}, {"body": "thanks response upgraded reproduce issue already fixed", "d": "10/2017"}, {"body": "thank reporting", "d": "10/2017"}, {"body": "like take one allowed", "d": "10/2017"}, {"body": "sarupbanskota ping slack still interested", "d": "10/2017"}, {"body": "serabe yes indeed lem ping work weekend", "d": "10/2017"}, {"body": "closed", "d": "10/2017"}, {"body": "issue sort regression merged pr waiting hotfix release", "d": "10/2017"}, {"body": "ok thanks", "d": "10/2017"}, {"body": "thanks reporting closing one duplicate issue resolved", "d": "10/2017"}, {"body": "confirm crashing firefox safari ff shows message debugging seems infinite loop application route hook", "d": "10/2017"}, {"body": "manimishra think issue trying transition application routes activate hook means aborts transition tries transition foo causes application route try activate later means get stuck infinite loop trying activate transition could rewrite use application index route redirect inside foo route see also transitioning model known", "d": "10/2017"}, {"body": "thanks makepanic although nt issue debugged original issue browser crashing michelboaventura app nt seem issue emberjs", "d": "10/2017"}, {"body": "thank feedback closing issue bug ember", "d": "10/2017"}, {"body": "thank manimishra test makepanic show problem", "d": "10/2017"}, {"body": "issue essentially expect pathexpression something else like literalexpression guard would probably fine", "d": "10/2017"}, {"body": "commit might fix issue part release", "d": "10/2017"}, {"body": "get following error attempt transition route query params without providing value query params assertion failed passed false query parameter transition myroute please update myqueryparam error coming", "d": "10/2017"}, {"body": "rwjblue possible push", "d": "10/2017"}, {"body": "looks like includes fix", "d": "10/2017"}, {"body": "discussion", "d": "10/2017"}, {"body": "brandynbennett thanks follow seems issue already known close one", "d": "10/2017"}, {"body": "think addressed replaced tickets followed closely encountered issue", "d": "10/2017"}, {"body": "pichfl nt look like part release yet know fix released soon", "d": "10/2017"}, {"body": "believe fixed", "d": "10/2017"}, {"body": "thanks", "d": "10/2017"}, {"body": "methods see fact look forward emberinflector release deprecating methods soon", "d": "10/2017"}, {"body": "closing issue thanks", "d": "10/2017"}, {"body": "amount work build side done try track branch names wip", "d": "10/2017"}, {"body": "branch referring", "d": "10/2017"}, {"body": "routerjs router definition linkto hbs helper works properly following works retrival current path work testing helper returns instead", "d": "10/2017"}, {"body": "hello janmisek expected behaviour looking see twiddle showing difference currentpath currentroutename thanks", "d": "10/2017"}, {"body": "also affected issue chance patch release", "d": "10/2017"}, {"body": "hellobrett seems like soon one rwjblue maybe close issue", "d": "10/2017"}, {"body": "thanks", "d": "10/2017"}, {"body": "hi borispetrov thanks feedback yes still figuring mappings thought would better use ember namespace instead solidifying public api would deprecate maintain rushed missed mark use old way specifically consider using instead believe nt support whole console api could post", "d": "10/2017"}, {"body": "locks thanks answer using old way talking apis couple mentioned already ported application use new ones coming ie plugins still old way going need package", "d": "10/2017"}, {"body": "using old way talking apis couple mentioned ones mentioned short use plugin nt worry", "d": "10/2017"}, {"body": "remove emberclishims still addons project use emberclibabel lt warning receiving something working removing checking addons project new enough emberclibabel versions", "d": "10/2017"}, {"body": "locks yes know use tool nt work vim magic convert everything hand rwjblue thanks info thank answers support feel free close issue leave open decide leave reference missing modules", "d": "10/2017"}, {"body": "close already tracking missing imports thank feedback good luck modules", "d": "10/2017"}, {"body": "believe need update section publishing script call autodisttag binary first option writes calculated dist tag also use without option case write dist tag stdout tl dr assign stdout use unconditionally work", "d": "10/2017"}, {"body": "think question related stackoverflow p use following snippet route deserializequeryparam value urlkey defaultvaluetype urlkey cars return valuesplit else return thissuper arguments serializequeryparam value urlkey defaultvaluetype urlkey cars return typeof value string value valuejoin else return thissuper arguments give", "d": "10/2017"}, {"body": "generally reserve issue tracker bugs ember seems like qa x type thing better served stack overflow slack going close please cross link post update thread answer find future searchers", "d": "10/2017"}, {"body": "also bekzod right", "d": "10/2017"}, {"body": "thank", "d": "10/2017"}, {"body": "also stumbled component wraps bootstrapselect uses selected attribute set logic workaround", "d": "10/2017"}, {"body": "maybe", "d": "10/2017"}, {"body": "action expects object actions hash going kind yes case would need go adding target manually thanks", "d": "10/2017"}, {"body": "confirm fixed affected", "d": "10/2017"}, {"body": "fix landed backported", "d": "10/2017"}, {"body": "rwjblue nt forgotten released p", "d": "10/2017"}, {"body": "still seems issue rwjblue", "d": "10/2017"}, {"body": "thanks reporting reproduction moved", "d": "10/2017"}, {"body": "issue investigated", "d": "10/2017"}, {"body": "reopening case need update something issue found thanks", "d": "10/2017"}, {"body": "annaemu ping", "d": "10/2017"}, {"body": "closing according triage policy please provide reproduction follow thank", "d": "10/2017"}, {"body": "bekzod even emberrun behaves way observer triggered computed property consumed observing callback", "d": "10/2017"}, {"body": "janmisek think correctly behaving since properties lazily evaluated value changes consumed observer triggered consumed real usecase scenario think use computed property instead observer observe primitive value first computed observing", "d": "10/2017"}, {"body": "agreed computed property fullname essentially marked dirty recompute value determine changed ed", "d": "10/2017"}, {"body": "tend use kind strange side effects cp much state cp would change given example lacks meaning propose better design kinds relationships strange real world imho see message right thing changed twice single render change come different places thank", "d": "10/2017"}, {"body": "updates app still let us know anything help raise pr guidance needed", "d": "10/2017"}, {"body": "another one", "d": "10/2017"}, {"body": "behavior legacy alternative approach considered trying use components partials largish app still many instances bug breaking things point blocked upgrading surprised nt affecting folks", "d": "10/2017"}, {"body": "nt legacy behavior perse fairly uncommon totally migrate using components whenever massively simpler reason absolutely fix asap", "d": "10/2017"}, {"body": "rwjblue pointers start looking help fix", "d": "10/2017"}, {"body": "submitted failing tests cases seems issue simple accessing bound property values within partial least seem testing believe underlying issue way generate references used things like sadly smoking gun point though", "d": "10/2017"}, {"body": "also unable upgrade due bug similar fairly large ember app originally started using eak still lingering legacy functionality nt yet brought modern ember nt lot partials left enough blocker us time migrate test remaining partials components", "d": "10/2017"}, {"body": "one really get higher priority partials broken since prevent people upgrade", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "going take look next week emberfest", "d": "10/2017"}, {"body": "extended twiddle serabe found property name gets defined controller partials gets right value value array partial still thinks truthy value", "d": "10/2017"}, {"body": "bug glimmer see referenced issue", "d": "10/2017"}, {"body": "new glimmer version fix released updating glimmer version bug fixed opened pull request updating glimmer version", "d": "10/2017"}, {"body": "fyi upgrade glimmer large effort unlikely happen ember chadhietala backported fix branch need release patch version update version instead try get releases done today", "d": "10/2017"}, {"body": "rwjblue lmk anything help release includes patched branch working upgrading intercom moment far tell nt yet reached ember canary", "d": "10/2017"}, {"body": "problem also exists using helper probably patch fix sure mention", "d": "10/2017"}, {"body": "hi fix released issue far tell helpers somewhat affected used workaround", "d": "10/2017"}, {"body": "ember released fix issues partials please let know still seeing issues", "d": "10/2017"}, {"body": "issues fixed fyi found another issue partials work fixing later today", "d": "10/2017"}, {"body": "sorry delay finally got fix submitted", "d": "10/2017"}, {"body": "instanceof issues across realms sure factor us fastboot uses different realm run app code vs evaluate vendor assets", "d": "10/2017"}, {"body": "shipped track new issue necessary thank much help everyone still bunch edge cases", "d": "10/2017"}, {"body": "seeing app following component test involving throwing error callback passing", "d": "10/2017"}, {"body": "lindyhopchris glad one experiencing sorry feedback core team would greatly appreciated month", "d": "10/2017"}, {"body": "missed demo repo intro sorry try poke later today", "d": "10/2017"}, {"body": "pixelhandler thanks providing background totally helped", "d": "10/2017"}, {"body": "pixelhandler regenerator nt available targets latest browsers means overwriting global promise class wont work workaround one way think force add regenerator dynamically adding older browser targets env test issue test env wont prod env", "d": "10/2017"}, {"body": "believe global knows notify ember run loop promise resolution although ca nt find code think happens eventually hopefully none us use regenerator seems longterm may need global hooks thing like sure state right find", "d": "10/2017"}, {"body": "offirgolan issue actually keeping us targeting modern browsers hoping new testing setup rfc surface apps maybe better solution show", "d": "10/2017"}, {"body": "ultimately issue", "d": "10/2017"}, {"body": "well emberjsemberjs", "d": "10/2017"}, {"body": "encountering issue might related app transitioning route different param hook normally called however add template make transition get called based router documentation linked certainly nt sound correct seems like either bug doc needs fixing", "d": "10/2017"}, {"body": "summarise issue following fine ember ember breaks production builds development builds asked devember see one correct reserved word components missing dev time error bug ember", "d": "10/2017"}, {"body": "unfortunately certainly reserved word objects ember cycle slowly moved away introducing owner api introducing factoryfor ideally remnants restriction let call bug someone time submit failing test case component container property gavinjoyce comment alternatively demo app shows error", "d": "10/2017"}, {"body": "rwjblue shows error production build component", "d": "10/2017"}, {"body": "write failing test lack assertion sure write high level test showing app booting production build repo provides example", "d": "10/2017"}, {"body": "rwjblue failing test assertion", "d": "10/2017"}, {"body": "interestingly production build seems work ember upgrading might good path", "d": "10/2017"}, {"body": "got bit gotcha thanks writeup fastfedora", "d": "10/2017"}, {"body": "case helps anyone similar situation product custom datastore models also need owner set also jsonstringified solvedhacked defining owner instead using directly setowner sets tricky bit knowing constant since changes time easily accessible javascript function getownerkey const x embersetowner x return objectkeys x const model emberobjectcreate data objectdefineproperty model getownerkey value embergetowner enumerable false", "d": "10/2017"}, {"body": "rwjblue could describe would consider useful information would glad give try", "d": "10/2017"}, {"body": "worth caused action application route", "d": "10/2017"}, {"body": "fyi fixed fairly gnarly bug code recently essentially number scenarios would attempted access property arguments default action handlers unconditionally refactored away added tests scenario ran", "d": "10/2017"}, {"body": "facing issue acceptance test use esa leveraging emberdata fetch user load currentuser service attempting work around nt helping javascript import ember ember import ds emberdata const set get ember export default emberserviceextend init thissuper arguments session emberinjectservice session store emberinjectservice store userid embercomputedoneway sessiondataauthenticateduserid permissions embercomputed usersecuritygroups get let promise new emberrsvppromise resolve gt const permissions get usersecuritygroups mapby permissions reduce b gt aconcat b toarray load", "d": "10/2017"}, {"body": "downgrading jquery nt seem resolve test failure using emberembercli emberdata", "d": "10/2017"}, {"body": "may slightly offtopic anyone consider impact naming js hbs files title bar search results say component want type foobar open show type wade myriad paths perhaps typing foobartemplate would yield certainty lot typing wit mind would paths like better path provides context kind like idea contexts phoenix framework though relate models ui components think naming could help title issue searchbrowse issue would love hear comments", "d": "10/2017"}, {"body": "seeing read property getattribute undefined uninstalled reinstalled latest inspector", "d": "10/2017"}, {"body": "rwjblue stefanpenner discussion since last year classes used ember imho remove could build sort shim addon checks ember version buildtime ember provides classes ifself would delegate ember otherwise provide implementation even delegate native map", "d": "10/2017"}, {"body": "hi want start contribute awesome emberjs saw way start issues containing label rwjblue saw code provided line highlighted cherry pick merge also read still little confused facts got current code get difference current tag head contributions come pr cherry picks contribution messages come pr messages original commit cherry picked current branch information added contribution pr number links could provide explanation example want try help far", "d": "10/2017"}, {"body": "closed looks like core team decided merge pr", "d": "10/2017"}, {"body": "yes also whole emberstring deprecation thing going thank", "d": "10/2017"}, {"body": "thank confirming fixed sorry pain", "d": "10/2017"}, {"body": "bug definitely still active encountered route dynamic id segment using helper model id instead whole model using emberapolloclient want different set data fetched child route click list items every single one gets class applied removed item eventually gets transitioned class remains every link points route different dynamic segment variable traced way isactiveintent routerjs returns case links even specifically problem occurs section point contains dynamic segments notactuallytransitioning link however end handlers identical params specifically fact equal though seems probably intended params link tested rather route transitioned reading believe function call intended apply params happen however params remain identical params see result debugger screenshot pretty far head able figure fix also hard time grasping routerjs code without documentation hopefully enough info help somebody familiar fix pretty quickly", "d": "10/2017"}, {"body": "would also like know answer currently using version tolerant whilst wait fixed", "d": "10/2017"}, {"body": "hit issue today integrating zendesk change htmlcss etc using ember means id change every time page loads id preferred way get elements selenium real pita use xpath cheap substitute", "d": "10/2017"}, {"body": "also expected able reference component js code imo accessible intuitively seems like", "d": "10/2017"}, {"body": "ldong tried work around admittedly old version ember received following error sure missing something", "d": "10/2017"}, {"body": "fyi especially troublesome attempting use wrapping run loop something accomplish functions asynchronous express using asyncawait coroutines like emberco emberconcurrency tasks unit test challenge anyone show express inside good luck sad state affairs way pause run loop thing resume run loop", "d": "10/2017"}, {"body": "silently fixed commit", "d": "10/2017"}, {"body": "aaxelb intentionally possibly fix behavior correct", "d": "10/2017"}, {"body": "reproduced jsbin current ember versions indeed seem fixed closing", "d": "10/2017"}, {"body": "still seeing issue", "d": "10/2017"}, {"body": "someone provide failing example", "d": "10/2017"}, {"title": "error installing jquery mac via terminal", "body": "marcosmacbookpro marcomoretti npm install jquery marcomoretti usersmarcomoretti jquery unmet peer dependency popperjs npm warn optional skipping optional dependency gracefulfs nodemoduleslessnodemodulesgracefulfs npm warn optional skipping optional dependency error eacces permission denied mkdir npm warn optional skipping optional dependency mkdirp nodemoduleslessnodemodulesmkdirp npm warn optional skipping optional dependency error eacces permission denied mkdir npm warn optional skipping optional dependency mime nodemoduleslessnodemodulesmime npm warn optional skipping optional dependency error eacces permission denied mkdir npm warn optional skipping optional dependency request nodemoduleslessnodemodulesrequest npm warn optional skipping optional dependency error eacces permission denied mkdir npm warn optional skipping optional dependency sourcemap nodemoduleslessnodemodulessourcemap npm warn optional skipping optional dependency error eacces permission denied mkdir npm warn bootstrap requires peer popperjs none installed npm warn marcomoretti description npm warn marcomoretti repository field", "num": "3832", "d": "10/2017"}, {"title": "sending string literal jsonified data ajax results replaced garbage containing word jquery", "body": "description submitting serialized object containing value string inside object gets replaced different data reproduce issue test case using latest version jquery latest versions firefox chrome extensionsplugins enabled link test case open developer console open network tab rerun fiddle request shown differing form data serialized data", "num": "3831", "d": "10/2017"}, {"title": "uncaught exception htmlunit", "body": "somehow line causes htmlunit version crash hard jquery fully loaded processing website possible could please wrap trycatch assert comgargoylesoftwarehtmlunitscriptexception typeerror set property innerhtml undefined comgargoylesoftwarehtmlunitjavascriptjavascriptengine htmlunitcontextactionrun netsourceforgehtmlunitcorejsjavascriptcontextcall netsourceforgehtmlunitcorejsjavascriptcontextfactorycall comgargoylesoftwarehtmlunitjavascriptjavascriptengineexecute comgargoylesoftwarehtmlunitjavascriptjavascriptengineexecute comgargoylesoftwarehtmlunitjavascriptjavascriptengineexecute comgargoylesoftwarehtmlunithtmlhtmlpageloadexternaljavascriptfile comgargoylesoftwarehtmlunithtmlhtmlscriptexecutescriptifneeded comgargoylesoftwarehtmlunithtmlhtmlscript comgargoylesoftwarehtmlunithtmlhtmlscriptonallchildrenaddedtopage comgargoylesoftwarehtmlunithtmlhtmlparser htmlunitdombuilderendelement orgapachexercesparsersabstractsaxparserendelement unknown source comgargoylesoftwarehtmlunithtmlhtmlparser htmlunitdombuilderendelement netsourceforgehtmlunitcybernekohtmltagbalancercallendelement netsourceforgehtmlunitcybernekohtmltagbalancerendelement netsourceforgehtmlunitcybernekofiltersdefaultfilterendelement netsourceforgehtmlunitcybernekofiltersnamespacebinderendelement netsourceforgehtmlunitcybernekohtmlscanner contentscannerscanendelement netsourceforgehtmlunitcybernekohtmlscanner contentscannerscan netsourceforgehtmlunitcybernekohtmlscannerscandocument netsourceforgehtmlunitcybernekohtmlconfigurationparse netsourceforgehtmlunitcybernekohtmlconfigurationparse orgapachexercesparsersxmlparserparse unknown source comgargoylesoftwarehtmlunithtmlhtmlparser htmlunitdombuilderparse comgargoylesoftwarehtmlunithtmlhtmlparserparse comgargoylesoftwarehtmlunithtmlhtmlparserparsehtml comgargoylesoftwarehtmlunitdefaultpagecreatorcreatehtmlpage comgargoylesoftwarehtmlunitdefaultpagecreatorcreatepage comgargoylesoftwarehtmlunitwebclientloadwebresponseinto comgargoylesoftwarehtmlunitwebclientgetpage comgargoylesoftwarehtmlunitwebclientgetpage orgopenqaseleniumhtmlunithtmlunitdriverget orgopenqaseleniumhtmlunithtmlunitdriverlambda orgopenqaseleniumhtmlunithtmlunitdriverlambda javalangthreadrun unknown source caused netsourceforgehtmlunitcorejsjavascriptecmaerror typeerror set property innerhtml undefined netsourceforgehtmlunitcorejsjavascriptscriptruntimeconstructerror netsourceforgehtmlunitcorejsjavascriptscriptruntimeconstructerror netsourceforgehtmlunitcorejsjavascriptscriptruntimetypeerror netsourceforgehtmlunitcorejsjavascriptscriptruntimeundefwriteerror netsourceforgehtmlunitcorejsjavascriptscriptruntimesetobjectprop netsourceforgehtmlunitcorejsjavascriptinterpreterinterpretloop netsourceforgehtmlunitcorejsjavascriptinterpreterinterpret netsourceforgehtmlunitcorejsjavascriptinterpretedfunctioncall netsourceforgehtmlunitcorejsjavascriptcontextfactorydotopcall comgargoylesoftwarehtmlunitjavascripthtmlunitcontextfactorydotopcall netsourceforgehtmlunitcorejsjavascriptscriptruntimedotopcall netsourceforgehtmlunitcorejsjavascriptinterpretedfunctionexec comgargoylesoftwarehtmlunitjavascriptjavascriptengine comgargoylesoftwarehtmlunitjavascriptjavascriptengine htmlunitcontextactionrun", "num": "3829", "d": "10/2017"}, {"title": "microsoft edge returns error code request nt offer responsejson", "body": "calling web service following manner chrome ff ie correctly reply error object includes proper responsejson attribute microsoft edge however reports status statustext error object nt contain additional information web server always responds error request raw response request according google chrome expected result parameter e microsoft edge exclusively tested browsers generates", "num": "3828", "d": "10/2017"}, {"title": "use new fetch api", "body": "feature request improvement hi think using new api already implemented major browsers used default function available explicitly deactivated using parameter major browsers supporting feature time familiar jquery codebase used maybe implemented due missing features eg full browser compatibility usage check documentation", "num": "3826", "d": "10/2017"}, {"title": "ie compatability issue", "body": "application working previously later start using identifying symbol ie browser throwing error value property null undefined function object executing code ddlstate empty", "num": "3824", "d": "10/2017"}, {"title": "parsing html child throws error", "body": "description throws exception instead properly parsing unusual html string documentation also nt seem mention usage impure html expect happen html string properly parsed null returned proper console message proper description docs actually happens exception thrown browsers affected mac firefox mac safari version jquery versions affected jquery jsfiddle latest jquery javascript library link test case", "num": "3823", "d": "10/2017"}, {"title": "offset inaccurate pinchzoomed", "body": "bug reports expect happen offset return offset document origin actually happens browsers pinchzoomed browsers affected edge possibly safari future description open console clicktap input box pinchzoom page scroll top scroll back input box tap output always see background details issue offset adding getboundingclientrect relative layout viewport windowpagexyoffset relative visual viewport note chrome recently made pageyoffset relative layout viewport nt issue link test case", "num": "3822", "d": "10/2017"}, {"title": "featreq add new api tags", "body": "past already asked forums peek css rules eg example css declaration like learned possible resp difficulties since css stylesheets tags becomes important access jquery jquery provide new api next release first step would sufficient modify check presence eg see sample find simply elements clause afterwards want remove elements coming jquery api make following possiblevalid div span remove", "num": "3819", "d": "10/2017"}, {"title": "maybe better solution", "body": "description created amazing tool write synchronous code even operation asynchronous alternative solution deferred maybe merged jquery link test case example code js cc function exec ctx resume project address", "num": "3818", "d": "10/2017"}, {"title": "inarray functions returns negative", "body": "problem array function returns boolean backwards solution fixed", "num": "3814", "d": "10/2017"}, {"title": "attr rowspan return number", "body": "hello suggestion return number attribute values converted numeric values sush rowspan", "num": "3813", "d": "10/2017"}, {"title": "using slideup page inner element makes whole page scroll instead", "body": "description test case provided see upon arriving page items green column regularly sliding precise topmost item slideup making items underneath slide well topmost item moved green column reappears case everything looks good soon start scrolling page see items yellow column read text red column see every time green item slides whole page slides well effect see yellow red column look like going back reach top page point green column resumes intended motion link test case", "num": "3812", "d": "10/2017"}, {"title": "ajax interprets webserver errordocument valid javascript", "body": "ajax called datatype script received document always interpreted javascript even actually document expected behavior evaluate received document webserver returns small example ajax url doesnotexistjs datatype script firefox shows message console syntaxerror expected expression got lt tries execute html document received webserver expected behavior ajax call functionally equivalent meaning nonexisting resources webserver give error message console log syntax errors", "num": "3811", "d": "10/2017"}, {"title": "new element creation raw html string working expected", "body": "description example run console javascript fnjquery gt text hello attr disabled true prop outerhtml gt hello lt ok text hello prop outerhtml gt lt expected text link documentation link test case", "num": "3810", "d": "10/2017"}, {"title": "ieedge submitting form using jquery submit causes submit handler forms detach using beforeunload", "body": "description examples two forms first form foo submitted js button outside form second form bar submitted submit button within form bar also event handler submit event handler disable beforeunload confirmation dialog bar submitted without asking user confirm submit foo confirmation dialog displays choose stay page page remain unaffected button never pressed works fine pure js using jquery ie edge choosing stay current page causes onsubmit handler bar become detached somehow nt run bar gets submitted case means user gets another annoying dialog cause severe problems processing needs happen handler form submitted worked around code calling submit raw form element also solved attaching event handler using pure js using pure js entirely tested ie fail edge fail firefox pass chrome pass tests run link test cases jquery native reproduce issue submit foo click stay current page submit bar pass form submits fail confirmation dialog shows", "num": "3809", "d": "10/2017"}, {"title": "css reports wrong widthheight chrome certain zoom levels", "body": "jquery reports wrong sizes elements chrome certain browser zoom levels seems add element insets padding border width height although css width already includes insets demonstration provided test case two padding sides border sides css widthheight set boxsizing set visual size elements remaining inner space browser zoom level correctly reported zoom numbers get slightly changed probably due rounding errors instead always get css pixels affected browser zoom would expected numbers stay live real problem occurs reload page browser zoom width completely incorrect instead page uses values programmatic layout results wrong see effect demo css width height first copied second always size however start second much larger analysis analysis shown seems caused internal function csssupportjs wrongly sets internal property apparently happens rounding error case test div measured width equal expected value worse internal property calculated start zoom reset problem still persists completely reload page could observe problem following zoom levels firefox ie nt seem affected problem also jquery everything works fine browsers tests performed windows default dpi font size settings", "num": "3808", "d": "10/2017"}, {"title": "jquery ajax removes empty arrays data", "body": "description expected jquery ajax sending correctly array even empty could nt find rfc saying nt sent though know one happy read happened sent data nt contain empty array link test case", "num": "3807", "d": "10/2017"}, {"title": "missing closing square bracket attribute selector nt throw error browsers except safari", "body": "description concern googled returned stackoverflow question nt gained attention going exact problem example works fine browsers except safari politely throws error reminds silly mistake thrown browsers work link test case", "num": "3806", "d": "10/2017"}, {"title": "nonpassive even listener violation", "body": "link picture looks im using jquery uikit threw error used side nav also throws google chrome error link", "num": "3804", "d": "10/2017"}, {"body": "unrelated jquery packages causing errors package nt dependencies peerdependencies", "d": "10/2017"}, {"body": "last part modified data underscore appears current timestamp suggesting actually part anticaching mechanism appending timestamps course one favoured techniques gone wrong", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "closing per dave comment", "d": "10/2017"}, {"body": "somehow key thing nt nt enough information determine problem jquery try mask nt even make sense somehow resolved nobody else reported problem need provide information", "d": "10/2017"}, {"body": "maybe error caused line precisely faulty implementation code htmlunit end", "d": "10/2017"}, {"body": "use bare xhr problem persist moment seems like reporting edge bug jquery one nt enough information standalone test case determine actual issue", "d": "10/2017"}, {"body": "looks like could really edge bug created little test code browsers post status correct edge however get back status", "d": "10/2017"}, {"body": "created ticket microsoft bug tracker", "d": "10/2017"}, {"body": "benefit using fetch feature done code work better", "d": "10/2017"}, {"body": "advantages promise based streaming responses response promise provides methods text json blob arraybuffer newer means better idk sorry think random weird issue advantages sooo huge think implementation much cleaner one xml maybe fetch replace sometimes", "d": "10/2017"}, {"body": "nt know could used compatibly within implementation already return promises via improvement expose somehow already performs functionality similar fetch data type methods think best way would via new api rather stacking new functionality top even clear whether would dependency jquery implementation could done plugin explore feature locking version mind nt think something core team manage build", "d": "10/2017"}, {"body": "enough detail act report likely issue setup please look help stack overflow", "d": "10/2017"}, {"body": "strongly disinclined work around native behavior would willing submit documentation pull request", "d": "10/2017"}, {"body": "thanks opening issue may need fixed browsers leave open time case anyone finds workaround", "d": "10/2017"}, {"body": "since large performance difference native selectors processed via native method jquery selector extensions require sizzle code longer consider selector extensions however sizzle engine provides extension api lets add features like", "d": "10/2017"}, {"body": "good luck library", "d": "10/2017"}, {"body": "idea sudenly original turns good", "d": "10/2017"}, {"body": "dom returns attribute values strings must represent integers nt think want get business trying determine whether specific attributes proper numbers converting done similar things past example regretted", "d": "10/2017"}, {"body": "might understanding correctly concern elements move element height reduced completely normal layout works however could reduce test case bit large smaller test case would help us understand issue thanks", "d": "10/2017"}, {"body": "forgot mention bug mostly seen chrome problem occurs scroll page point green column stops moving page scrolls back try reduce even already really slim version actual page see issue thanks looking", "d": "10/2017"}, {"body": "repro steps use chrome visit link arrive page see green items cycling properly intended behavior scroll page bring item f g near top notice green column stopped instead whole page scrolling back problem", "d": "10/2017"}, {"body": "behavior complaining coming chrome jquery seems related scroll anchoring probably simplify single operation submit issue bugschromiumorg nt seem anything us", "d": "10/2017"}, {"body": "thanks time inputs continue investigating see pinpoint exact problem", "d": "10/2017"}, {"body": "conclusion problem indeed caused scroll anchoring css style overflowanchor none applied first column example solves issue", "d": "10/2017"}, {"body": "says nt care server returns header data type jquery interpret way server returns different types case nt trust server content type call manually inspect decode request complete", "d": "10/2017"}, {"body": "would expect attribute nonempty value set way see jquery issue", "d": "10/2017"}, {"body": "nt expect attribute text expect button text caption", "d": "10/2017"}, {"body": "ah see misread sorry", "d": "10/2017"}, {"body": "api page linked important second argument passed html string first argument must represent simple element attributes seems documented sure reason restriction though ideas team arturbaybulatov note docs explicitly discourage using pattern second argument convenient flexibility lead unintended consequences eg calling method instead setting size attribute better using method explicitly always works", "d": "10/2017"}, {"body": "way logic worked feature put long ago code fell simple path tag nothing else looked second argument list attributes otherwise second argument element creation context documentation tries warn people away method signature entirely noticed nt use", "d": "10/2017"}, {"body": "ah right clash signature", "d": "10/2017"}, {"body": "check console see edge generate exceptions versions jquery ca nt expected resolve", "d": "10/2017"}, {"body": "ugh confirmed git build think need something like unitpreserving round comparison fortunately reproducible able verify fix unit testing", "d": "10/2017"}, {"body": "news fixed downgrading version", "d": "10/2017"}, {"body": "pr would welcome nobody expresses interest probably put fix next release", "d": "10/2017"}, {"body": "right rfc governing encoding javascript object query string people doubt depend current behavior since way decade need welldefined spec would advise using json could try setting see works case", "d": "10/2017"}, {"body": "add empty arrays additional option jquery ajax would change current behavior would add possibility send accurate data good naming things something like default", "d": "10/2017"}, {"body": "posted answer thread way could throw error every browser would fully parse every selector javascript nt going happen performance reasons", "d": "10/2017"}, {"body": "jquery nt support passive event listeners yet planned tracked closing duplicate", "d": "10/2017"}, {"body": "krinkle still like tackle welcome closing patchwelcome tho", "d": "10/2017"}, {"body": "produces", "d": "10/2017"}, {"body": "childishgiant api proposal ticket still open meaning support passive event listeners moment need wait release", "d": "10/2017"}, {"body": "functions working versions jquery try hack addclass removeclass hasclass jquery methods jquery versions usage", "d": "10/2017"}]