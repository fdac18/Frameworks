[{"title": "mixin data overwritten next page", "body": "hi mixin looking like import scrollbar smoothscrollbar export default data return smooth null mounted deviceismobileortablet amp amp processbrowser thissmooth scrollbarinit elqueryselector jssmooth beforedestroy deviceismobileortablet amp amp processbrowser thissmoothdestroy one gives null error thissmoothdestroy returns null one called next page uses mixin already overwritten thissmooth null way avoid nt realise data shared pages happens using default transition mode change transition mode outin works guess thats mixin call delayed next page current page removed", "num": "8582", "d": "7/2018"}, {"title": "typescript component property types correct", "body": "version vuejs typescript reproduction link steps reproduce use typescript create component least one property expected property type required type actually happening property type required type still dangerous properties required default easily write code fail runtime note stackblitz wo nt show error types correctly assumed assumed", "num": "8579", "d": "7/2018"}, {"title": "child component still evaluate parent slot code", "body": "version reproduction link steps reproduce create child component conditional slot use slot parent component using code called resolves vue exampleshouldnotbecalled data gt example observe slot code called fails example empty object runnable demo linked repository expected behavior expected match behavior circumstances code block evaluated conditional check resolves false actually happening parent slot code always evaluated regardless value child component", "num": "8578", "d": "7/2018"}, {"title": "single process webkit engine meet js create new thread download", "body": "version reproduction link steps reproduce single process webkit engine meet js create new thread download file xxxhtml include three single process webkit engine create three thread thanks much expected single process webkit engine meet js create new thread download file xxxhtml include three single process webkit engine create three thread thanks much actually happening single process webkit engine meet js create new thread download file xxxhtml include three single process webkit engine create three thread thanks much single process webkit engine meet js create new thread download file xxxhtml include three single process webkit engine create three thread thanks much", "num": "8577", "d": "7/2018"}, {"title": "vuejs fetch data", "body": "hello created component creating details user trying fetch display commented method code trying fetch way wrong fetching please check helpthanks title save list artists todoname todoage todocountry delete import api srcapi export default props artists data return title enter arist details task name age country done false todos methods save const subscrop apiservice artists subscropcreate aname thistaskname aage thistaskage acountry thistaskcountry response gt consolelog response response qnotify color secondary message artist added successfully thistodospush thistask thistask thisfetchtypeoperations fetchtypeoperations const subscrop apiservice artists subscropfind query select aname aage acountry id response gt consolelog subscriptions thistask responsedata remove thistodossplice mounted thisfetchtypeoperations", "num": "8576", "d": "7/2018"}, {"title": "problem code folding coding vue", "body": "problem vscode os version code steps reproduce shown figure folding code end enter shown figure result expect shown figure final result achieve results looking forward figure", "num": "8575", "d": "7/2018"}, {"title": "error import vue es module", "body": "version reproduction link steps reproduce open url see error dev tool expected normal output consolelog actually happening uncaught referenceerror process defined think compiled build progress", "num": "8574", "d": "7/2018"}, {"title": "enter props mixins", "body": "problem feature solve reusable mixin new data mixin working working unique component test pass prop mixin mixin reusable new data whenever like nt need import specific dictionary proposed api look like like", "num": "8572", "d": "7/2018"}, {"title": "google maps api custom popups example code breaks vuejs single file components", "body": "version reproduction link steps reproduce click pan around map popup remains centre view port occurs using vue single file component expected popup pinned respective location demonstrated vuejs jsfiddle contains identical code vuejs single file component refer sandbox link actually happening popup pinned respective location code using copypasted google maps api documentation custom popups example code provided documentation works perfectly jsfiddle however issues arose pasting single file component", "num": "8571", "d": "7/2018"}, {"title": "exports html vue component", "body": "problem feature solve export html file vue component proposed api look like export html file vue component", "num": "8570", "d": "7/2018"}, {"title": "errors thrown instance methods trigger errorcaptured errorhandler", "body": "version reproduction link steps reproduce click watcher button error thrown caught appvue global handler click method button error thrown caught anything expected error handler parents global handler propagated called errors thrown child component would expect would happen matter error thrown course asyncpromise code reasonable exception understand language limitation actually happening error caught handler similar documentation exactly parts components throw errors expect caught parent", "num": "8568", "d": "7/2018"}, {"title": "immediate watcher skips parent errorcaptured jumps straight top error handler", "body": "version reproduction link steps reproduce simply opening running sandbox show error instead getting alert appvue caught error helloworld watcher error escapes way top level see expected behavior open hello world set watcher immediate false hit button trigger watcher case error caught parent appvue immediate case happen expected errors immediate watchers caught parent component errorcaptured actually happening error escapes nexttick hander handler ctx vm pass errorhandler errorhandler receive vm call parent errorcaptured handlers appears oversight srccoreinstancestatejs case optionsimmediate true cbcall vm watchervalue wrapped try catch explicitly calls handleerror vm proposed fix", "num": "8567", "d": "7/2018"}, {"title": "css firstchild selector nt work vfor", "body": "version reproduction link steps reproduce create css class selector apply element directive expected first element list style class actually happening style ignored", "num": "8566", "d": "7/2018"}, {"title": "vbind class removes class added javascript module", "body": "version reproduction link steps reproduce use create plain javascript module class etc adding css class element vbind class expected css class added module class etc stay change classes vbind class actually happening css class added module class etc removed change classes vbind class reproduction run watch class divtest seconds css class added added js class test removed condition vbind class", "num": "8565", "d": "7/2018"}, {"title": "invalid component name error valid name uses unicode characters", "body": "version reproduction link steps reproduce register component unicode component name ex use template ex vue warn logged component rendered expected error warning component rendered properly actually happening component rendered warning componentnames vue guide says strongly recommend following rules custom tag names alllowercase must contain hyphen however rules allow lots unicode characters component name think two rules important start lowercase ascii letter ensuring html parser treat tags instead text contain uppercase ascii letters user agents always treat html elements asciicaseinsensitively rules prevent using uppercase ascii letters force using lowercase ascii letters allow unicode characters vuejs nt accept unicode component names furthermore error level nt work cases like using custom element template works routed vue router", "num": "8564", "d": "7/2018"}, {"title": "new way create component tree simply", "body": "problem feature solve since many components deeply nested propose simple way could reduce heavily nested structure parent component one child proposed api look like code generally looks like inspired angular pipeline maybe implement feature way html check although attributes unordered use sfc like single tag", "num": "8563", "d": "7/2018"}, {"title": "\u4e3a\u4ec0\u4e48vue\u6ca1\u6709\u63d0\u4f9b\u5bf9\u6570\u7ec4\u5c5e\u6027\u7684\u76d1\u542c", "body": "problem feature solve proposed api look like", "num": "8562", "d": "7/2018"}, {"title": "\u4e3a\u4ec0\u4e48vue\u6ca1\u6709\u63d0\u4f9b\u5bf9\u6570\u7ec4\u5c5e\u6027\u7684\u76d1\u542c", "body": "", "num": "8561", "d": "7/2018"}, {"title": "slots comments use fallback instead", "body": "version reproduction link steps reproduce register component slot use component vue instance commentstrue filling slot html comment expected html comment rendered slot could breaking fix someone running commentstrue still relying behavior current behavior kept think least documented actually happening html comment discarded slot uses fallback content instead content provided together html comment content kept developing cms uses html comments provide editing capabilities concept areas similar vue slots would handy render areas slots empty area eg newly created page consists solely html comment since comment stripped vue editing tools available", "num": "8560", "d": "7/2018"}, {"title": "initial state checkboxes group", "body": "set initial state checkbox group vmodel mb checked use set init state model checkboxes checked example component inner component", "num": "8559", "d": "7/2018"}, {"title": "vuex dynamically registered modules trigger component updates", "body": "version reproduction link steps reproduce clkm clkm component object loaded remotely packaged vueloader details see mainjs console value input click add add item list see list added adding items list page list updated back click list see list updated expected vuex module status update vue component view update actually happening vuex module status update vue component view update", "num": "8557", "d": "7/2018"}, {"title": "different locations assign different values component", "body": "version reproduction link steps reproduce integrating vue environment development innetcore get parameters component siganalr andthe parameters obtained data put subcomponent name props assigned data siganalr passed page show array passes displayed reason known solution name currency expected sides actually happening two sides different", "num": "8556", "d": "7/2018"}, {"title": "different locations assign different values component", "body": "integrating vue environment development innetcore get parameters component siganalr andthe parameters obtained data put subcomponent name props assigned data siganalr passed page show array passes displayed reason known solution name currency", "num": "8555", "d": "7/2018"}, {"title": "error updated method transitiongroup object", "body": "version reproduction link steps reproduce steps expected method updated call var children thisprevchildren returns undefined condition childrenlength satisfied exception thrown actually happening please see method render uses definition var prevchildren thisprevchildren thischildren definition used updated method case helps", "num": "8554", "d": "7/2018"}, {"title": "\u4f5c\u7528\u57df\u63d2\u69fd\u4f8b\u5b50\u96be\u4ee5\u7406\u89e3", "body": "", "num": "8553", "d": "7/2018"}, {"title": "ios audio default styles missing", "body": "version reproduction link steps reproduce audio used vue component default style loss audio play button displayed wechat version vue expected display audio default style actually happening default styles disappear", "num": "8552", "d": "7/2018"}, {"title": "directive behave component element", "body": "version reproduction link steps reproduce input elements page element custom directive applied directive attempts read value element value present add class element cases tested native input element value defined component option custom input component value defined component option native input element value initially empty defined component hook custom input component value initially empty defined component hook observe input element class applied modify text input element example add characters observe changing value input class applied element expected input elements class start regardless input element inside custom component regardless prop defined updated actually happening directive behave component native element input element page class applied", "num": "8551", "d": "7/2018"}, {"title": "vmodel dynamically", "body": "hi add vmodel dynamically like elementsetattribute vmodel myprop code html script mounted function let mytabs elqueryselectorall ul role tablist mytabsforeach element gt thistabindexi elementsetattribute vmodel tabindexi", "num": "8550", "d": "7/2018"}, {"title": "shorthand false props", "body": "problem feature solve already nice shorthand props add prop name however nt equivilent shorthand props couple suggestions shorthand would make writingreading props easier think pretty minor feature request think would add already amazing developer experience using vue proposed api look like translates translates", "num": "8549", "d": "7/2018"}, {"title": "typescript typechecking bugs mapstatemapgetters", "body": "ignore nt belong", "num": "8548", "d": "7/2018"}, {"title": "duplicate slot warning", "body": "version reproduction link steps reproduce click button says refresh expected nothing happen actually happening component accepts scopedslot component accepts slot passing slot scopedslot component gets rerendered see warning console passes method scoped slot cause rerender called", "num": "8546", "d": "7/2018"}, {"title": "maximum call stack size exceeded ssr vfor components", "body": "version reproduction link steps reproduce sorry failed visit gist online code share platforms run following script node vue installed node ok processenvvueenv server important const vue require vue const renderer require vueserverrenderer createrenderer vuecomponent cchild template const vueinstance new vue template data items array fill consolelog start rendertostring rendererrendertostring vueinstance error html gt error consoleerror return expected output html actually happening someone used mention bug without reproduction", "num": "8545", "d": "7/2018"}, {"title": "", "body": "typeerror read property ob undefined", "num": "8544", "d": "7/2018"}, {"title": "function import working function render", "body": "version reproduction link steps reproduce git testvueproject start project npm run dev open project browser expected show text test page page actually happening empty wish work use import vue render function import dynamical file thank much", "num": "8543", "d": "7/2018"}, {"title": "", "body": "version reproduction link steps reproduce const test gt component new promise resolve reject gt settimeout gt reject loading template error template delay timeout export default new router routes path test name test component test \u6ce8\u610f\u5982\u679c\u4f60\u5e0c\u671b\u5728 vue router vue router \u7248\u672c expected \u5728reject actually happening error failed resolve async component default undefined", "num": "8542", "d": "7/2018"}, {"title": "transition animation disappears problem occurs transiton component used routerview", "body": "version reproduction link steps reproduce page keepalive b page keepalive returning b page page b page transition disappears directly dom expected make transition routerview keepalive work together actually happening transition animation happen", "num": "8541", "d": "7/2018"}, {"title": "computed properties reevaluating often expected", "body": "version reproduction link steps reproduce create data computed props b c let c depend b b depend set value b change less often modify expected value c recomputed value b changes independent often changing actually happening value c recomputed whenever changes results many extra recomputations docs say computed property reevaluate dependencies changed case thought bug code certain thresholdbased computed properties triggering recomputes far often expected recomputes fairly expensive perhaps expected behavior however surprising negates lot potential cachebased optimization leveraging computed props compare implementation uses watchers extra data works expected c recomputed b changes whenever changes", "num": "8540", "d": "7/2018"}, {"title": "", "body": "version reproduction link steps reproduce expected error message console expected actually happening chrome page keep loading chrome firefox web page slowing browser would like example code favorite faqmetafavcount copy faqmetacopycount comments mistake use instead getting issue note sure whether error already reported community thank regards maris", "num": "8539", "d": "7/2018"}, {"title": "logic vueset unreasonable handling array", "body": "version reproduction link steps reproduce run jsfiddle snippet expected expect program outputs executing actually happening abc already existed arr app initializing neglected defined array def set vueset executes definereactive arr def arrdef srccoreobserverindexjs notifies watchers vueset consistent dealing mind neglected", "num": "8535", "d": "7/2018"}, {"title": "payload", "body": "problem feature solve hello folks going want start discussion parameter event use custom events notify parent component children changes instead receive event receive payload yes semantic imho think payload name make much sense proposed api look like", "num": "8533", "d": "7/2018"}, {"title": "passing value attribute via select tag using attrs set select value without vmodel", "body": "version reproduction link steps reproduce observed opening codepen expected passing value select tag via attrs behave way setting attribute html ignored using vmodel behave currently actually happening value overrides selected attribute set option occur vmodel", "num": "8532", "d": "7/2018"}, {"title": "crash use vbind vmodel input element", "body": "version reproduction link steps reproduce bind undefined attributes prop input element vmodel expected input element uses default text value type attribute works vue actually happening exception typeerror read property type undefined proxyeval eval createfunction vuerender vueupdatecomponent watcherget new watcher mountcomponent vue mount vue mount vueinit new vue works add type attribute input element return empty object attributes property default props attributes default function return", "num": "8531", "d": "7/2018"}, {"title": "hook event wo nt emit vif change", "body": "version reproduction link steps reproduce run program custom directive hook function called correctly change hook function never called matter change expected mounted hook function called every time vnode mounted actually happening mounted hook wo nt call anyway vif falsy", "num": "8530", "d": "7/2018"}, {"title": "better comments code", "body": "version reproduction link steps reproduce go expected comments code consistent use periods consistent use commas consistent capitalization correct use articles correct pluralization shorter sentences description clearer description description present actually happening none working pr improve interestingly first contribution vuejs edit raised pr", "num": "8528", "d": "7/2018"}, {"title": "mdl components wo nt render correctly added dynamically", "body": "version reproduction link steps reproduce click add button jsfiddle render multiple elements vfor add new elements expected elements appear rendered correct mdl styling actually happening elements rendered browser default example mdl switch checkbox", "num": "8527", "d": "7/2018"}, {"title": "", "body": "problem feature solve proposed api look like \u6211\u5e0c\u671b\u80fd\u591f\u5b8c\u5168\u5f97\u652f\u6301typescript", "num": "8526", "d": "7/2018"}, {"title": "suggestion regarding issues chinese", "body": "know probably place nt know else reach like suggest try tell chinese users try report issues english whenever lot people current company others know shutting vue proposals account able understand bug tickets made vuejs fact many popular libraries primarily andor exclusively chinese important vuejs healthy chinese community feel community disregard nonchinese users ultimately damaging vuejs frustrating efforts vue evangelists west couple nonenglish documentation issues react facebook backing hard convince anyone management vue way go feel alone would also like hear others say", "num": "8525", "d": "7/2018"}, {"title": "\u9875\u9762\u4e2d\u5c40\u90e8\u7ec4\u4ef6\u52a0\u8f7d\u5931\u8d25\u4e86\u600e\u4e48\u91cd\u65b0\u52a0\u8f7d", "body": "version reproduction link steps reproduce const asynccomponent path gt \u9700\u8981\u52a0\u8f7d\u7684\u7ec4\u4ef6 \u5e94\u8be5\u662f\u4e00\u4e2a \u5bf9\u8c61 component import \u5f02\u6b65\u7ec4\u4ef6\u52a0\u8f7d\u65f6\u4f7f\u7528\u7684\u7ec4\u4ef6 loading loading \u52a0\u8f7d\u5931\u8d25\u65f6\u4f7f\u7528\u7684\u7ec4\u4ef6 error loadingerror \u6beb\u79d2 delay timeout expected \u60f3\u77e5\u9053\u9875\u9762\u5c40\u90e8\u7ec4\u4ef6\u600e\u4e48\u91cd\u65b0\u52a0\u8f7d\u6216\u8005\u91cd\u65b0\u521b\u5efa\u6e32\u67d3 actually happening", "num": "8524", "d": "7/2018"}, {"title": "write tutorial documentation porting ui component vuejs component build vue ui framework", "body": "problem feature solve help community grow proposed api look like", "num": "8523", "d": "7/2018"}, {"title": "aliasing component props names", "body": "problem feature solve similar angularjs directives would like ability alias names component parent uses pass values proposed api look like component export default name paging props count name pagingcount type number parent", "num": "8522", "d": "7/2018"}, {"title": "\u8d5e\u52a9\u5546", "body": "", "num": "8521", "d": "7/2018"}, {"title": "selected file disappears switching radio buttons vuejs", "body": "version reproduction link steps reproduce go click run code snippet click upload file make sure file name uploaded shows click click expected file uploaded still exists shows file name actually happening shows file chosen know multiple post good practice would like know fix issue", "num": "8520", "d": "7/2018"}, {"title": "vuejs create select list years year", "body": "", "num": "8519", "d": "7/2018"}, {"title": "manually executing directive expression", "body": "problem feature solve let assume custom directive used like javascript code value like problem value would executed prevent execute like proposed api look like maybe adding option function would helpful example", "num": "8517", "d": "7/2018"}, {"title": "error thrown using transitiongroup conditionally rendered children", "body": "version reproduction link steps reproduce open pen shows click button expected show actually happening got error console found typeerror c function proxyrender vuecomponentvuerender vuecomponentupdatecomponent watcherget watcherrun flushschedulerqueue array messageportflushcallbacks", "num": "8516", "d": "7/2018"}, {"title": "listeners updated use", "body": "version reproduction link steps reproduce open fiddle click text one component middle others forwards events like documentation example component fires mousedown mouseup highestlevel component registers one render function one expected would expect using update would update listeners deepest component design could clarified documentation actually happening nt update child components used render functions know unusual use like working angular application slowly converted vue order cross barriers create vue components mount angular directly", "num": "8515", "d": "7/2018"}, {"title": "bug imported components", "body": "version reproduction link steps reproduce run expected rendered actually happening failed mount component template render function defined", "num": "8514", "d": "7/2018"}, {"title": "\u5b50\u7ec4\u4ef6props\u6ca1\u6709\u53ca\u65f6\u66f4\u65b0", "body": "version reproduction link steps reproduce tempobj expected tempobj\u770b\u5230\u53ca\u65f6\u66f4\u65b0\u7684\u6570\u636e actually happening \u4fee\u6539\u5bf9\u8c61\u7684\u5c5e\u6027\u65f6 \u53ef\u4ee5\u53ca\u65f6\u66f4\u65b0", "num": "8513", "d": "7/2018"}, {"title": "cache event handlers generated compiler", "body": "problem feature solve currently vue compiler generates anonymous function expressions event handler modifiers handlers contains expression inside efficient resulting function creates new functions time component rerendered increases time garbadge collector work especially mobile devices becomes even worse declare event handler inside function instantiate new functions iteration despite fact example compiled render function looks like caching event handlers could decrease amount created garbage ie functions speed resulting function proposed api look like propose add cache object every component instance object hold references event handlers generated compiler compiler generate code like handlers compiles function expression task split parts cache event handlers outside quite easy create cache object per instance generate unique id eg integer every element event handlers cache event handlers inside nt see easy way however could associate iteration scope element would able cache handlers well resulting handler may look like need update vue hot loader api clear handlers cache template updated similar static functions cache cleared work prs feature ok proposed changes", "num": "8512", "d": "7/2018"}, {"title": "instantiating new array inside renderlist", "body": "version reproduction link steps reproduce renderlist val render called passing nan val parameter apologies reproduction link reproduce one since clue triggered function line probably unit test using renderlist function b expected unable instantiate new array actually happening code checking given val nan number thus trying call new array nan throws exception probably check given val greater equal since negative value also cause exception new array instead else typeof val number use else typeof val number amp amp val gt", "num": "8511", "d": "7/2018"}, {"title": "textarea fixed value still change", "body": "problem feature solve maybe stupid question textarea value props change even set fixed value see examples proposed api look like props textarea change set fixed value", "num": "8510", "d": "7/2018"}, {"title": "adding vuehelper constructor", "body": "problem feature solve well honest way vue define global dollarsign helpers quite cumbersome figured would better option js vuepress appjs vueprototype withbase function path const base sitebase pathcharat return base pathslice else return path proposed api look like", "num": "8508", "d": "7/2018"}, {"title": "possible memory leak vfor development mode", "body": "version reproduction link steps reproduce open codepen click couple times list item see memory increasing try force gc trash icon measure take heap snapshots chrome memory tab watch memory usage chome task manager shift esc watch memory usage os task manager expected memory usage garbage collector actually happening despite performance tab displays memory usage memory heap snapshot displays memory increase also chrome os task managers show memory increasing get worse using even without translating big children components tested windows bits chrome bits please consider may something wrong chrome issue os issue", "num": "8507", "d": "7/2018"}, {"title": "ca nt render array component instances", "body": "problem feature solve need build list dynamical components group group component need send information builded components groups use get information components using ca nt move component group component component name component instance data render default data also use ca nt use reactivity directives eg directives drag drop data driven pattern suggestions proposed api look like", "num": "8506", "d": "7/2018"}, {"title": "render array component instances vuejs", "body": "need build list dynamical components group group component need send information builded components groups use get information components using ca nt move component group component component name component instance data render default data also use ca nt use reactivity directives eg directives drag drop data driven pattern suggestions", "num": "8505", "d": "7/2018"}, {"title": "keepalive cache focus state", "body": "problem feature solve especially useful apps spatial navigation tab navigation accessibility issues general let consider assume relay focus state navigating application vuerouter might tv app irritating hit back button focus state lost proposed api look like cachefocus boolean", "num": "8504", "d": "7/2018"}, {"title": "ssr thirdpartplugin vueprogressbar got virtual dom tree matching waring", "body": "version reproduction link steps reproduce git clone reposition install dependencies npm start visit expected vue waring console actually happening warning console vue warn clientside rendered virtual dom tree matching serverrendered content likely caused incorrect html markup example nesting blocklevel elements inside missing bailing hydration performing full clientside render os professional thirdpartplugin vueprogressbar wraps div idae warning happend", "num": "8503", "d": "7/2018"}, {"title": "vue replace el correctlly seem problem vue diff func", "body": "version reproduction link steps reproduce make sure curpage data click add transition click change page expected transition disapper every time one disapper actually happening transition disappear shows vue replaces elements instead incremental updates curpage transition wiil disapper close issue easily close find appropriate answer", "num": "8502", "d": "7/2018"}, {"title": "scoped style inheritance inconvenient", "body": "problem feature solve reproduce issue let suggestion please follow example particular inherited style example founded work color fill vector order solve issue use suggest deep selector however creates great inconvenience example project master element lot children go hundred style lines ensure every selector applied nt need deep selecting indeed issue workarounds debatable matter scoped styling believe case scoped inheritance much like attribute works js api sometimes element looks styled really depends component belongs pardon something overlooked nt actual issue proposed api look like catches attention scoped styling goes following structure styling goes like css div header css div header datav attribute quite sure real reason current implementation behavior nevertheless think vuejs great framework love especially ease convenience creates good logical structured interacts naturally believe following precedent creates inconvenience conflict framework great nature sure believe occurs nt accidental particular reason current implementation perhaps upcoming native css specification looks like follow particular reason still might solution probably deep selecting works default inheritance concerns parent takes care children styling might good tip please consider thank time keep good work appreciate great framework", "num": "8500", "d": "7/2018"}, {"title": "types allow almost anything vnodechildrenarraycontents", "body": "problem feature solve vue runtime allows pretty much anything put children array simply strips away types hand allow another nested array means ca nt use shortcircuit expressions conditionally render things false allowed return h div data thisenablesomething amp amp h something const children vnodechildrenarraycontents thisenablesomething amp amp childrenpush h something return h div data children return h div data thisenablesomething h something proposed api look like add separate type also allows way still current normalised version", "num": "8498", "d": "7/2018"}, {"title": "filter called multiple times", "body": "version reproduction link steps reproduce click number expected console output actually happening every time number clicked output", "num": "8497", "d": "7/2018"}, {"title": "allow single slot rendered multiple times", "body": "problem feature solve currently render slot multiple times eg inside loop get know intentional prevent render errors like losing correct data binding consider following use case component default item separator text node want allows users specify separators anything like component currently want make work define scoped slot component bind nothing component users must define use anything currently vue using slots fallbacks scoped slots name whether users use slot nt rely want data slot scope whether slot gon na rendered multiple times inside component self may raise confusion users like nt get rid caveats let slot rendered clone duplication prevent render errors already run scoped slot function time anyway makes logic lot simpler users imo expect use data slot scope use slot otherwise always declare create binding addition would make documenting scoped slots component consistent declare data structure slot scope users decide want data bind nt need care many times rendered proposed api look like additional api needed clone slot nodes upon render remove waring duplicated slots may implemented userland today quite hacky way see tweaked function vue core little bit seemed working expected using render function without losing reactivity event binding maybe edge situations missed correct trivial", "num": "8496", "d": "7/2018"}, {"title": "getter defined define setter recursive reactive made", "body": "version reproduction link steps reproduce run jsfiddle snippet expected expect result shown bar b instead bar actually happening getter setter amp amp argumentslength val obj key let childob shallow amp amp observe val example data object defines getter define setter causing judgment fail val evaluated recursive reactive made", "num": "8494", "d": "7/2018"}, {"title": "error patching content client side", "body": "version reproduction link steps reproduce npm npm run dev access refresh expected browser show hello gentlemen actually happening browser show hello pretty sever bug make use libraries already logged bug nuxtjs actually think linked vue post would prefer wait nuxt team tell vuejs bug seems dead nuxt bug links amp error console trying understand happens seems vuejs trying mount component comment kind placeholder component rendered client condition reproduce bug node rendered client vif vif using data also work computed vif custom component vif condition used template note uncommenting make xdiv patch successfull ok hello ladies gentlemen hello ladies gentlemen hello gentlemen ladies hello workaround bug occure library component possible move vif div surrounding component gt", "num": "8491", "d": "7/2018"}, {"title": "ssr fails split code", "body": "version reproduction link steps reproduce create project vuecli set ssr use split code build server bundle start server render pages js vueconfigjs const ssrserverplugin require vueserverrendererserverplugin const nodeexternals require webpacknodeexternals moduleexports configurewebpack entry srcentryserver target node devtool sourcemap output librarytarget externals nodeexternals whitelist css optimization splitchunks false plugins new ssrserverplugin routerjs import vue vue import router vuerouter import viewsaboutvue vueuse router export function createrouter return new router mode history routes path name home component gt import viewshomevue path name component mainjs import vue vue import app appvue import createrouter router vueconfigproductiontip false export function createapp const router createrouter const app new vue router render h gt h app return app router entryserverjs import createapp main export default context gt new promise resolve reject gt const app router createapp serverjs const express require express const createbundlerenderer require vueserverrenderer const app express const bundle require distvuessrserverbundlejson const renderer createbundlerenderer bundle runinnewcontext false appget req res gt const context url requrl rendererrendertostring context err html gt err consoleerror err resend html applisten expected render path successfully actually happening get path rendered render path successfully deleting configurewebpackoptimizationsplitchunks vueconfigjs shows building system os x node vueserverrenderer webpack", "num": "8488", "d": "7/2018"}, {"title": "drag drop events working element ui", "body": "hi folks working vuejs vue events like drag dragstart type events working element ui components working normal html elements element ui gt", "num": "8487", "d": "7/2018"}, {"title": "vue wont update datetype input disabled firefox", "body": "version reproduction link steps reproduce open code pararell chrome ff take fun set empty set empty buttons notice ff empty value set date field wont update view expected update view ddmmrrrr state like chrome working good actually happening ff view updated setting empty string disabled datetype field", "num": "8486", "d": "7/2018"}, {"title": "component scope attribute lost conditionally rendering root node", "body": "version reproduction link steps reproduce observe text green click two times checkbox trigger slot hide show cycle expected text still green words toggled attribute applied actually happening observe text red words toggled nt correct applied also tested beta issue persists usecase trivially replace external component toggling contains important internal logic decides shown simple prop", "num": "8485", "d": "7/2018"}, {"title": "vue component vfor inject data properties render method array vfor updated", "body": "version reproduction link steps reproduce click add button expected first component checked first option label value actually happening first component option label checked add button clicked", "num": "8483", "d": "7/2018"}, {"title": "domexception failed execute insertbefore node", "body": "version reproduction link steps reproduce open url expected error actually happening exception thrown domexception failed execute insertbefore node node new node inserted child node objectinsertbefore updatechildren patchvnode vuecomponentpatch patch vuecomponentvueupdate vuecomponentupdatecomponent watcherget watcherrun flushschedulerqueue array", "num": "8482", "d": "7/2018"}, {"title": "bundle export function using runinnewcontext false", "body": "version reproduction link steps reproduce need nestjs nuxtjs vue reproduction easy set clone project install dependencies npmyarn start server yarn start dev open page get error come libraries already tried install nuxtjs vue comes vueserverrenderer managed vue expected go nuxtjs page get error refresh page error actually happening error page error refreshed page", "num": "8481", "d": "7/2018"}, {"title": "component inheritance problem", "body": "problem feature solve component inheritance proposed api look like js import classb fromclassb export default classa extend classb method foo function param dosomethingbefore supermethodfoo param", "num": "8480", "d": "7/2018"}, {"title": "component inheritance problem", "body": "searched resource online found anything helps base component basevue js basecomponent export default created function thisinitcanvas methods initcanvas function drawing function sketch part need inherited got another component squarevue extend basevue js basecomponent import base basevue export default methods drawing function sketch overwrite basemethodsdrawing extend superdrawing possible implement vue", "num": "8479", "d": "7/2018"}, {"title": "want know view source code", "body": "want know view source code", "num": "8478", "d": "7/2018"}, {"title": "vue reactivity nt work contenteditable elements", "body": "version reproduction link steps reproduce edit first div content expected reactivity message variable update see second div content changing actually happening message variable nt update second div content changing nt bug something feature saw reactivity nt work way", "num": "8477", "d": "7/2018"}, {"title": "little doubt execution logic initdata function", "body": "problem feature solve javascript exportsinitdata function var propsdata thisdata var optionsdatafn optionsdata var optionsdata optionsdatafn amp amp optionsdatafn optionsdata thisdata optionsdata var prop propsdata processenvnodeenv production amp amp optionsdatahasownproperty prop warn data field prop already defined prop use prop default value instead initdata initializes make decision understanding propsdata empty object time proposed api look like according understanding content data mainly comes two one hand component custom data hand prop directive calls initprop executing second prop instruction executed time time point bit later initdata nt quite understand want make decision initdata initialized avoid overwriting", "num": "8476", "d": "7/2018"}, {"title": "data access dynamic components", "body": "version reproduction link steps reproduce dynamic components click link switch table switch presentation list component table component expected contact table filled data contacts object firstname lastname contact picture displayed actually happening data called inside html tags available data called mustache tags empty contactimgpath show anything whereas works great", "num": "8475", "d": "7/2018"}, {"title": "actual use ssr", "body": "problem feature solve moment using ssr possible create environment working vuerouter vuex vuemeta nossr importing styles components example mixoptions extractvuestyles true moment problem vuemeta lazyload much possible use today proposed api look like idk usable", "num": "8474", "d": "7/2018"}, {"title": "vue set work", "body": "version reproduction link steps reproduce change value button change value use set button expected value changed actually happening value changed", "num": "8472", "d": "7/2018"}, {"title": "keepalive routerview working scene", "body": "version reproduction link steps reproduce click foo click child click foo hi print click bar click foo first show mounted show hi click child click foo hi like step expected foo component render cache actually happening foo component render full lifecycle destroy component manually keepalive cache removed", "num": "8471", "d": "7/2018"}, {"title": "vmodel working inside jquery steps plugin", "body": "jquery steps form input used vmodel bind input vue data works perfect nt initialize jquery steps plugin initialize jquery steps plugin vmodel bind input think jquery steps rerendering html tags vmodel could access input way bind vmodel input inside plugin", "num": "8470", "d": "7/2018"}, {"title": "vue set work", "body": "version reproduction link steps reproduce change value button change value use set button expected value changed actually happening value changed", "num": "8469", "d": "7/2018"}, {"title": "functional components multiple roots nt render properly used vfor", "body": "version reproduction link steps reproduce create functional component returns multiple root elements via array ie use functional component alongside expected render functional component expected actually happening rendered view contains undefined item array jsfiddle demonstrates wrapping functional component tag directive fixes issue tag required oddly enough circumstances renders properly usecase issues multiple root elements put component inside wrapped component ran issue reporting", "num": "8468", "d": "7/2018"}, {"title": "vuecompile return errors happens compilation even prod env", "body": "problem feature solve building vuejs frontend templates coming backend end users contributed cms something else vuejs bundled esm order vuecompile method run vuecompile template string coming backend way know compilation error occured order display message user development warn messages console proposed api look like vuecompile could return error boolean attribute array errors occured compilation", "num": "8467", "d": "7/2018"}, {"title": "set lt etc ssrcontext auto escape characters", "body": "ssr provide minimal reproduction expected ssrcontexttext abc actually happening ssrcontexttext quot abcquot", "num": "8466", "d": "7/2018"}, {"title": "props nt use default value validator returns false", "body": "version reproduction link steps reproduce create component property default validator pass invalid value property expected prop value default validator returning false actually happening validator ignored validator feature serve purpose return value ignored usable anywhere else component", "num": "8465", "d": "7/2018"}, {"title": "modal component click ok direct", "body": "use modal want display button loading state util modal close set loading vmodel got modal direct", "num": "8464", "d": "7/2018"}, {"title": "modal onok \u88ab\u76f4\u63a5\u5173\u95ed", "body": "use modal want display button loading state util modal close set loading vmodel got modal direct", "num": "8463", "d": "7/2018"}, {"title": "error thrown using transitiongroup component vbind directive", "body": "version reproduction link steps reproduce render component buildin one directive set simply expected expect errors thrown actually happening component appears work expected throws following error console vue warn unknown custom element register component correctly recursive components make sure provide name option found error thrown used instead came across bug building reusable animation component looks like component actually seems work expected error described thrown", "num": "8461", "d": "7/2018"}, {"title": "hydrate method possible allow clientside vuejs specific components vue ssr page", "body": "problem feature solve work ecommerce lot ab test css js bundles tend increase size always trying reduce looking options isomorphic templates js think curious ones way hydrate client js code looking send less code client necessary code apart bundle size also considering use vuejs framework write templates server side code consistency less time teaching developers multiple technologies benefits end static pages documentation faq dynamic pages search ecommerce catalogs hybrid pages might static page options signup search validation andor autocomplete inside try create js bundles send customer trying keep necessary js code tree shaking import modules based components used understood attribute tell vuejs application needs hydrated created ssr version available wrapper element application means way hydration send whole page app spa nt something possible following years want force hydration specific components manually add attribute one hack would increase risk bad implementations like way reactjs hydrate method svelte hydration flag way ship small component part js bundle initialize way want proposed api look like seems clientside vuejs nt use extra configuration read attribute right guess could done flag creating vue instance maybe done vue config least case", "num": "8460", "d": "7/2018"}, {"title": "domprops innerhtml work svgs ie", "body": "version reproduction link steps reproduce set svg tag work ie expected svg contain provided html actually happening svg contains html react issue ago", "num": "8459", "d": "7/2018"}, {"title": "vhtml reselect content content change", "body": "version reproduction link steps reproduce select click button see selected reselected expected hope update incrementally html content selected back previous selection actually happening html changes choose go back previous content", "num": "8458", "d": "7/2018"}, {"title": "vbind shorthand equal property attribute name", "body": "problem feature solve sometimes binding attributes props exactly name could simplify proposed api look like equals equals", "num": "8457", "d": "7/2018"}, {"title": "props type function possible set default equal method component", "body": "version reproduction link steps reproduce add prop type function component try set default value likely one components methods try run prop like function expected able set prop type function default component method actually happening almost cases wrong access components methods data computed etc ran workarround able extend template workarround little hacky want override one props type function ca nt override methods running issue", "num": "8456", "d": "7/2018"}, {"title": "global undefined", "body": "version reproduction link steps reproduce open alert bug used show html though sometimes nt work expected code run correctly actually happening typeerror happened using syntax import import vuejs safari script typemodule seems module closure makes top level point undefined global becomes undefined rather window order show bug clearly used dynamic import instead static import jsfiddle", "num": "8455", "d": "7/2018"}, {"title": "create recursive component use render function", "body": "problem feature solve want create component use tables iview table define columns use function want render function nt know think maybe vuejs render recursive component use render function ca nt find anything proposed api look like javascript export default name nestedtable props data data return columns type expand width render h params gt let row paramsrow return nestedtable data paramsrowchildren gt", "num": "8454", "d": "7/2018"}, {"title": "typeerror read property tolowercase undefined", "body": "version reproduction link ca nt create minimal reproduction steps reproduce nt know reproduce appears sometimes reload page ca nt create minimal reproduction expected expects page reload normally actually happening sometimes page reloading error appears browser error appears console error appeared week ago since ca nt found cause", "num": "8453", "d": "7/2018"}, {"title": "use typescriptin vue overide one method child component method call parent method", "body": "version reproduction link steps reproduce setup vuecli b create typescript project accord create vueconfigjs file write content g split helloworldvue helloworldts helloworldvue accord modify helloworldts hellowordvue h run yarn run serve access click test button find error console expected console log beforevaluechanged base actually happening error happened create two vue class one extends override one method method child vue class use superxxx call method parent class error works fine typescript followed code class basecomponent public beforevaluechanged public onvaluechanged thisbeforevaluechanged return hello class helloworld extends basecomponent public beforevaluechanged consolelog beforegreet superbeforevaluechanged let hello new helloworld let button documentcreateelement button buttontextcontent say hello buttononclick function alert helloonvaluechanged documentbodyappendchild button", "num": "8452", "d": "7/2018"}, {"title": "use typescriptin vue overide one method child component method call parent method", "body": "happened vue typescript works use vuecli create project accord split ts vue file tow file write follows code basecomponentts import component prop vue vuepropertydecorator component export default class basecomponent extends vue value changed public onvaluechanged thisbeforevaluechanged helloworldts import component prop vue vuepropertydecorator import basecomponent componentsbasecomponent component export default class helloworld extends basecomponent prop private msg string private count number helloworldvue beforevaluechanged helloworldts use superbeforevaluechanged call beforevaluechanged method product error helloworldts uncaught typeerror read property call undefined typescript work fine class basecomponent public beforevaluechanged public onvaluechanged thisbeforevaluechanged return hello class helloworld extends basecomponent public beforevaluechanged consolelog beforegreet superbeforevaluechanged let hello new helloworld let button documentcreateelement button buttontextcontent say hello buttononclick function alert helloonvaluechanged documentbodyappendchild button", "num": "8451", "d": "7/2018"}, {"title": "component rendered methods working", "body": "version reproduction link steps reproduce encountering weird issue components getting rendered methods triggering following set default appjs laravel indexphp testvue click export default methods testclick alert hello world expected everything straight forward however testclick function triggering open debug tool chrome test component projects components showing actually happening first encountered issue version tried updating npm packages still working expected provided jsfiddle working properly nt know real problem", "num": "8449", "d": "7/2018"}, {"title": "vuejs nt install using nuget packagereference", "body": "version reproduction link steps reproduce create new web csproj use new packagereference instead packagesconfig nuget format expected script added website scripts actually happening package referenced files actually installed", "num": "8448", "d": "7/2018"}, {"title": "sponsor urls give", "body": "version reproduction link steps reproduce open chrome navigate click become sponsor redirects expected way become sponsor actually happening found behavior gold sponsor patreon sponsors", "num": "8447", "d": "7/2018"}, {"title": "beta dependency tracking executes watchers inconsistent values", "body": "version reproduction link steps reproduce provided example open console hit increment observe computed value evaluations console vue terms create dependency structure many paths watcher b b c c notify leaf watcher change data change observe eager synchronous updates watchers every intermediate change expected updated computed values executed correct dependant values actually happening computed values executed multiple times intermediate dependency values issue clearly caused commit debugging found cause dependencies notified synchronously watcher update loop updating watchers might accessed early stale value information necessary recomputation attempted fix splitting two phases separate loops worked simple situations triangle dependencies example stops working graph complicated paths larger illustrated computed example possible full fix would involve either traversing full dependency graph deep dependants first collecting array like previous implementation", "num": "8446", "d": "7/2018"}, {"title": "ssr client bundle script tag gets injected async components vue router", "body": "version reproduction link steps reproduce clone reproduction repo vuessrissue project run yarn yarn build yarn start navigate browser expected client bundle included page preferably deferred page already server side rendered actually happening client bundle run twice browser included twice one deferred one normal", "num": "8445", "d": "7/2018"}, {"title": "return promise vm callback omitted", "body": "problem feature solve deferring process wait signal currently little bit tedious signals usually carried events reacted via resp could improve developer ergonomy greatly promise returned similar proposed api look like note omitted additional boilerplate examples please assume example executed context vue method want deferring execution code event emitted vue instance quick recap could currently done javascript old school use callback signal payload gt could lead callback hell though alternatively wrap promise const payload await new promise resolve gt signal payload gt resolve payload however awful lot boilerplate gets incredibly messy want await various different signals would look proposed change javascript following call got callback parameter returns promise resolves array event parameters const payload await signal effectively equivalent promise wrap example bonus multiple different signals const payloads await promiseall note promise would returned callback parameter omitted following still works technically breaking change rather soft one since previously using method without callback use case change sounds like pretty lowhanging fruit love hear opinion regarding idea", "num": "8444", "d": "7/2018"}, {"title": "vfor iterate object iterator one exists", "body": "problem feature solve please see class iterator iterate instead object properties proposed api look like", "num": "8443", "d": "7/2018"}, {"title": "beforecreated hook called sometimes", "body": "versions vuex vuetestutils vuejest vuetemplatecompiler vue jest reproduction link steps reproduce clone reproduction repository install dependencies using run unit tests using expected unit tests pass errors actually happening unit test fails value added component unit test accessed component makes test fail however deleting access component asserts test pass leads conclusion hook called nt mount removing around error disappears everything worsk fine hints issue might related vuetestutils instead look whether vuejest could related issue nt seem issue might underlying issue vuex", "num": "8441", "d": "7/2018"}, {"title": "client bundle script tag gets injected async components vue router", "body": "version reproduction link steps reproduce configure vue ssr router lazy loaded components least one lazy loaded component configured routes use client server manifest generation client manifest looks like aboutjs clientjs registerjs manifestjs indexhtml initial clientjs expected registerjs lazy loaded bundle clientjs cliententry bundle expected scripts tags html actually happening repro url reproduce issue sure setup server side script tag injection sandbox related module versions vueserverrenderer vueloader vuerouter node", "num": "8440", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "hi understand correctly bug prevents conditional block rendered condition evaluates false preventing vue parseevaluate slot example still trying access whether renders compiled render function app component notice still accessed say expected behaviour vif prevents rendering parsingevaluation afaik hope helps", "d": "7/2018"}, {"body": "correct evaluate contents falsey might thinking evaluate block whether shown demo vue exampleshouldnotbecalled vue exampleshouldnotbecalled", "d": "7/2018"}, {"body": "hi see comment nt state clearly talking context every situation bad however say expected behaviour everything parent template compiled parent scope source parent component exist matter may maybe docs reflect edge case somewhere least warning", "d": "7/2018"}, {"body": "sure commenting issue asking help reporting bug", "d": "7/2018"}, {"body": "expected behavior afontcu explained parent slot content rendered vnode eagerly passed child slot resolution want lazy use scoped slots future may make slot content lazy default opportunity make breaking changes ie", "d": "7/2018"}, {"body": "\u611f\u8c22\u5bf9 vue github issues \u53ea\u7528\u4e8e bug", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "already pr tracking", "d": "7/2018"}, {"body": "ok thank much searched related question issue pull request", "d": "7/2018"}, {"body": "props already mixed component instance sure requesting", "d": "7/2018"}, {"body": "want parameters mixins create functions take parameters return custom mixin", "d": "7/2018"}, {"body": "used scoped style sfc example remove attribute tag everything fine", "d": "7/2018"}, {"body": "\u611f\u8c22\u5bf9 vue github issues \u53ea\u7528\u4e8e bug", "d": "7/2018"}, {"body": "sodatea \u7528vue component\u5bfc\u51fa\u539f\u751fhtml\u4e0d\u7b97\u7279\u6027\u8bf7\u6c42\u5417", "d": "7/2018"}, {"body": "\u4f60\u81ea\u5df1\u770b\u770b\u4f60\u662f\u5982\u4f55\u586b\u5199 feature request", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "\u7ed9\u4e2a\u601d\u8def\u4e5f\u597d\u554a", "d": "7/2018"}, {"body": "hi stated evan errorhandler capture errors following render functions watcher callbacks lifecycle hooks component event handlers evan said dom event handlers currently included probably might working btw codesandbox button calling nonexistent named method methods object", "d": "7/2018"}, {"body": "thanks quick response answer question nt seen issue would strongly request list added documentation without unreliable use error handling functions nature error handling one know coved wo nt since question answered close issue leave open request docs updated request add error handling dom events sure process whoops thanks pointing typo fixed codesandbox worth", "d": "7/2018"}, {"body": "closing favour mentioned documentation ideas improve pr welcome", "d": "7/2018"}, {"body": "selects first element among siblings see examples need remove first three elements make work", "d": "7/2018"}, {"body": "sorry thinking looking class element", "d": "7/2018"}, {"body": "vdom works get thing react angular anything else", "d": "7/2018"}, {"body": "indeed expected behavior", "d": "7/2018"}, {"body": "think two points fixed first html parser allows xml qname second allows potentialcustomelementname", "d": "7/2018"}, {"body": "nt like ymmv nt find writing components like often usually several children complicating factor another difference various ways define templates fragments code harder scan reorganize reuse uses vertical space include linebreaks even less readable dont nt even saved much typing fact editor autoinserts closing tags pretty sure typing", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "issue", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "7/2018"}, {"body": "try use variable instead string inside see example", "d": "7/2018"}, {"body": "thanks webther seem cover cases however problems well vhtml accept direct string input instead goes looking data props parent component think parents aware contents children vhtml also work content includes vue components since inserted raw html instead compiled using slot instead work since comment longer case nice inspect content outside component", "d": "7/2018"}, {"body": "want use inline html string think encode html tags like see example", "d": "7/2018"}, {"body": "still treated html comment rendered text second example renders correctly relies data property parent instead allowing text rendered directly template server side prevue workaround append detect empty area amazing requires code every affected template may affect styling since least works interested seeing whether behavior bug intended", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "hi thanks report would please reduce issue minimal reproducible example current reproduction link undebuggable us depends vue vuex vuerouter main logic lying remote bundled js file", "d": "7/2018"}, {"body": "would please provide runnable reproduction look otherwise much help thanks", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "please provide real reproduction look otherwise much help thanks", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "7/2018"}, {"body": "\u8bf7\u5230\u6587\u6863\u9879\u76ee vuejsvuejsorg \u6216 vuejscnvuejsorg", "d": "7/2018"}, {"body": "valid reproduction also vue nt able change default styles elements please check application code", "d": "7/2018"}, {"body": "apple audio nt play automatically", "d": "7/2018"}, {"body": "updated codepen thu jul haoqun jiang notifications githubcom wrote hi thanks report would please reduce issue minimal reproducible example current reproduction link undebuggable us depends vue vuex vuerouter main logic lying remote bundled js file receiving authored thread reply email directly view github mute thread", "d": "7/2018"}, {"body": "autumnwoodberry sorry reproduction perfectly fine look later previous reply meant another issue deleted seems still received email", "d": "7/2018"}, {"body": "seeing well others getting workaround provide prop passes necessary data directive sometimes results chain props nt ideal terrible either eg vue parentvue childvue export default name child props activeinput", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "good idea api like nt good cause problems existing components props", "d": "7/2018"}, {"body": "boolean props default define component like set simply passing", "d": "7/2018"}, {"body": "understand problem resolved", "d": "7/2018"}, {"body": "sure connection rendering slot multiple times vue reason thinks already rendered", "d": "7/2018"}, {"body": "dug code yet think maybe scoped slots rendered like function call keep rendering slot inside time rerender component", "d": "7/2018"}, {"body": "use named slots avoid duplicate slots working example", "d": "7/2018"}, {"body": "comment confused heck realized something nt mean api take default slot certainly scoped slot anything else awkward looking api updated sandbox api default slots gets passed scoped slot exposed", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "7/2018"}, {"body": "function synchronous ca nt dynamically import something inside", "d": "7/2018"}, {"body": "see", "d": "7/2018"}, {"body": "resolved nt use customize show keepalive use keepalive include", "d": "7/2018"}, {"body": "seems fixed", "d": "7/2018"}, {"body": "use expression gets evaluated immediately triggers update due line leading infinite loop nt think anything vue", "d": "7/2018"}, {"body": "sodatea thank quick response", "d": "7/2018"}, {"body": "corrects", "d": "7/2018"}, {"body": "merged may assume expected behavior using create reactive custom string keys arrays intentionally allowed pr removing feature maybe think bug would introduce breaking change gon na accept atm", "d": "7/2018"}, {"body": "right still considering give treatment arrabc may work truly want enable reactive nonnumerical prop array know arr handled observerprototypeobservearray nonnumerical prop ignored made reactive distincted object also modified snippet see reactive notify dep arrdef notify dep first call therefore watchers activated nt activated sequence array changed activated using watcher record value arrabc nt change value watcher executes callback dep notified notify dep first call point many conflicts handling object array suggest better disable reactive prop array please forgive syntax errors english speaker happy accept corrections someone willing help", "d": "7/2018"}, {"body": "dom events imo see want distinguish way handle dom events actually custom event object payloads like even something like function control flow afterwards like dom events though standard syntax user land think name problem iscan working like dom events", "d": "7/2018"}, {"body": "get native event object dealing native objects everywhere makes sense overlap user properties using fairly reasonable going introduce breaking change", "d": "7/2018"}, {"body": "thanks atention guys think little things discussed understand reasons current implementation course reason break version wanted bring discussion listen guys think future come back thoughts arguments defend views believe best team work together course taken forum hihi thank", "d": "7/2018"}, {"body": "vmodel sugar top input tag using vmodel use value prop input event case vbind attrs binding parent component html attributes select means value attribute also set far know works expected reading documentation", "d": "7/2018"}, {"body": "vmodel works expected current behaviour equivalent mounted ref select tag select refsselectvalue attrsvalue set selected option however attributes especially value checked copied attrs behave like real attributes vmodel used eg mounted ref select tag select refsselectsetattribute value attrsvalue set selected option", "d": "7/2018"}, {"body": "actually works vue uses dynamic bindings static", "d": "7/2018"}, {"body": "keep mind attribute taking account uppon page load working expect check modifiers docs", "d": "7/2018"}, {"body": "fair point setattribute example however trying point necessary add extra code make custom select component work like builtin select managed work around produce think correct behaviour", "d": "7/2018"}, {"body": "fyi need use selected attribute options elements", "d": "7/2018"}, {"body": "need move please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "7/2018"}, {"body": "ca nt use attributes props pass input element vue component anyway move data undefined value get result", "d": "7/2018"}, {"body": "nothing ca nt undefined value", "d": "7/2018"}, {"body": "maybe want use propsdata", "d": "7/2018"}, {"body": "created inputcomponent vue component input element inside component attributes property passed input element example type number ok pass attributes component template worked previous vue versions used migration", "d": "7/2018"}, {"body": "expected behaviour run beginning supsequent rerenders start custom directive wo nt applied initial render run event dispatched since custom directive nt applied nt react event becomes component rerenders applies custom directive nt called component already mounted instead called custom directive listening event never happen", "d": "7/2018"}, {"body": "course solved less minutes making issue mdl function fix elements like added fix jsfiddle relevant bit", "d": "7/2018"}, {"body": "github issues \u53ea\u7528\u4e8e bug \u76ee\u524d vue \u5bf9 typescript \u5df2\u77e5\u7684\u4e00\u4e9b\u5c0f\u95ee\u9898\u53ef\u4ee5\u5728 open issues \u7684 typescript \u5982\u679c\u78b0\u5230 bug \u7684\u8bdd\u6b22\u8fce\u5230 github issues", "d": "7/2018"}, {"body": "\u597d\u7684", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "important vuejs healthy chinese community feel community disregard nonchinese users ultimately damaging vuejs frustrating efforts vue evangelists west important vuejs healthy englishspeaking community feel community disregard nonenglish users ultimately damaging vuejs frustrating efforts vue evangelists east would nt sound bit condescending towards part world serious note success vue small part due adoption chinese market happened vue creator evan chinese provided great documentation support chinese still actually simple fact right many developers china simply nt speak english much problem english issues chinese ones empathise request place right makes sound bit like western market somehow superior important chinese part community forced adapt wo nt side company sees problem big part community chinese instead seeing value global adoption library problem yes biggest libs china yet good english docs others greatest libs like vuetify west someone would see negative beyond", "d": "7/2018"}, {"body": "many issues actually chinese moment one current open issues really problem sounds like company asiaphobic", "d": "7/2018"}, {"body": "linusborg think guys got wrong way saying tell chinese devs ca nt speak chinese rather try ask use english makes issues understandable everyone invites collaboration everyone chinese speakers ultimately like bring communities closer together possibly even communities collaborate stuff way saying west better great respect chinese tech amazing stuff manage apps like wechat fact matter likely chinese web developer able understand english western developer understand chinese saying west better english inclusive amongst developers used whenever possible communities nt splinter different groups based first languages know maybe one issue currently usually one wanted voice potential issue trying promote vue adoption companies start discussion people problems disregardable try bring issue colleagues thanks attention sorry bothered guys nonissue discussion also special thanks linusborg giving additional points bring debates get ridiculous sometimes people using everything defend favorite framework choice tricky vue evangelists since new kids block", "d": "7/2018"}, {"body": "rather try ask use english makes issues understandable everyone invites collaboration everyone chinese speakers chinese speakers community would convince us encourage everyone file issues chinese makes issues understandable everyone invites collaboration everyone english speakers ironically chinese developers actually lot chinese community encourage people use english github provide english documentation oss unfortunately everyone fully express english issue need detailed elaboration use chinese instead least chinese speakers understand better provide help issue chinese content discussion right good example suppose one evan mentioned earlier given discussions already english many provided chinese speakers want ask still trying eliminate chinese usage community show little empathy maybe think try explain bear see chinese character screen instead", "d": "7/2018"}, {"body": "rather try ask use english makes issues understandable everyone invites collaboration everyone chinese speakers everyone speaks english english issues understandable everyone understandable people hemisphere", "d": "7/2018"}, {"body": "justineo thanks efforts trying encourage also sure mention linusborg feel one good things development web particular first languages much barrier real life web international big part fact english common language understand speak english especially new chinese developers starting feel important encouraged learn use brings larger community tears walls built around first languages well opens new doors work outside china give conferences learn nonchinese tutorials first language english either nt feel offended way speaking online andor expected instead feel like great thing bring us together break silly language boundaries would splintered us otherwise suggest justineo said simply encouraging especially new devs use english least little bilingual time understand china different russia india romania etc especially comes internet chinese users used internal communities rather part global internet experience another issue altogether unfortunately hands feel confident enough nonissue chinese community already working hard mitigate", "d": "7/2018"}, {"body": "also fyi new issue creator already explicitly encourage chinese users use english literally first thing see still opt use chinese likely english skills nt allow clearly explain problem trying describe cases forcing use english makes problem harder understand everyone involved final comments unsubscribe absolutely disregard nonchinese users given actual percentage chinese issues quite low sure get impression impression simply wrong communication channels release notes twitter blog posts documentation issues conferences using english first cases language colleagues manager cites presence chinese issues reason adopting vue probably pulling misleading arguments like vue focused china lacks western community ask prove ask check many open issues actually chinese ask search twitter medium stackoverflow see many vue articles discussions english ask search vue conferences meetups going around globe ask read documentation ask really think going problem", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "e", "d": "7/2018"}, {"body": "\u62a5 bug \u8bf7\u65b0\u5f00", "d": "7/2018"}, {"body": "maintain cookbook recipes website see vuejsvuejsorg repository post cookbook idea", "d": "7/2018"}, {"body": "duplicate", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "7/2018"}, {"body": "used file condition false ou click consequently vue remove file input dom file disappears use vshow instead", "d": "7/2018"}, {"body": "thank much replaced resolved issue spent hours try figure finally works wished learned difference actually mentioned guide thank learned lot", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "7/2018"}, {"body": "personally think better simply use methods bind method directive introducting new option solve problem overkill", "d": "7/2018"}, {"body": "thank quick response could provide example mean exactly", "d": "7/2018"}, {"body": "simonwep member vue team personal opinion example vue export default methods handler alert hello vue", "d": "7/2018"}, {"body": "ah problem opinion equally worth oh see mean yeah would solution thanks", "d": "7/2018"}, {"body": "transition try modify element vfor rendered vif use vshow instead vif render element best solution would filter list computed property give filtered list vfor", "d": "7/2018"}, {"body": "maxirozay hi maxime thanks reply actual use case rendering list inside different components using template jsx conditionally rendering children using statement child component render function nt want show compent returned return function try change set still think would better vue able handle cases like mine since code normal anything wrong anyway work", "d": "7/2018"}, {"body": "welcome fangzhou work still list best solution still filter list give filtered list jsx component care rendering component never return null yes weird transitiongroup trying transition something nt exist easily avoided maybe somebody knows look", "d": "7/2018"}, {"body": "add event current instance update listeners listeners readonly initialized vm optionsparentlisteners", "d": "7/2018"}, {"body": "expected behavior cyclic dependency components", "d": "7/2018"}, {"body": "link", "d": "7/2018"}, {"body": "\u8fd9\u4e2a\u4e0d\u662f child \u53ea\u6709\u5728\u4e0b\u6b21\u6e32\u67d3\u7684\u65f6\u5019\u624d\u80fd\u5f97\u5230\u66f4\u65b0\u8fc7\u7684 nexttick", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "\u4f60\u4f1a\u53d1\u73b0 props \u548c data \u6b64\u65f6 data", "d": "7/2018"}, {"body": "\u7b80\u5355\u7406\u89e3\u4e3a", "d": "7/2018"}, {"body": "qxzm \u5b9e\u9645\u4e0a\u76f4\u63a5\u6539 props props", "d": "7/2018"}, {"body": "\u8c22\u8c22\u5927\u4f6c\u89e3\u7b54", "d": "7/2018"}, {"body": "riophae said use toggle function calling function get date values", "d": "7/2018"}, {"body": "\u4e5f\u53ef\u4ee5\u5728\u5b50\u7ec4\u4ef6\u7684watch\u91cc\u9762\u8fd9\u6837\u5199", "d": "7/2018"}, {"body": "changes improve performance functions", "d": "7/2018"}, {"body": "done events modifiers may good benchmark comparison speed want see actually gain worth small size increase would add", "d": "7/2018"}, {"body": "posva easy benchmark garbage collector work try measure speed function bunch event handlers modifiers try measure memory footprint", "d": "7/2018"}, {"body": "yes specified speed interesting factor thu jul sergii stotskyi notifications githubcom wrote posva easy benchmark garbage collector work try measure speed render function bunch event handlers modifiers try measure memory footprint receiving mentioned reply email directly view github mute thread gt eduardo san martin morote", "d": "7/2018"}, {"body": "way applicable events modifiers also events contains expressions html well converted anonymous function", "d": "7/2018"}, {"body": "thanks suggestion real blocker possible handler reference scope variables basically makes uncacheable case temp variables may appear eg scoped slots require proper scope analysis identify handlers really cacheable gain marginal unless benchmark showing handlers causing real memory problems go", "d": "7/2018"}, {"body": "handlers cacheble outside quite easy add caching provide poc tomorrow could please keep open working benchmarks poc", "d": "7/2018"}, {"body": "even component generated handlers inside component template cacheble inside inner vfor", "d": "7/2018"}, {"body": "apologies reproduction link reproduce one since clue triggered function last describe scenario happens giving zero context leaves us stepping dark bit probably check given val greater equal since negative value also cause exception new array even makes sense real problem probably check performed function called generally happen think understanding scenario triggered crucial debugging", "d": "7/2018"}, {"body": "closing repro provided", "d": "7/2018"}, {"body": "without changes value input update value time since prop changed vue wo nt update internal state set first time event triggered", "d": "7/2018"}, {"body": "although bit magical essentially syntax sugar updating data user input events plus special care edge cases next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "7/2018"}, {"body": "justineo actually think strange behavior using react vue nt update internal state make sure output equal state sodatea thanks suggestion", "d": "7/2018"}, {"body": "nt honestly see practical benefit less characters less explicit", "d": "7/2018"}, {"body": "seems leak nonproduction mode fine production", "d": "7/2018"}, {"body": "thanks return posva also created issue since memory usage gets way heavy using using vuevirtualscroller destroy create lot components paginate scroll page nt know much related two packages together complex deeper components structure taking lot memory usage even production mode looking google task manager app tab increases item scroll downup one destroyedcreated processes less minute scrolling get get almost memory usage production mode developer tools closed gc nt go much route used core code vue looks like installed components structure getting copied nested component app gc ca nt clean destroy nested components way installs really nt know data makes think", "d": "7/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "goal may much complicated looks like edge cases nevertheless something implemented userland feel free post back plugin create one", "d": "7/2018"}, {"body": "use appvue waring happen think report vueprogressbar first instead directly filing bug report", "d": "7/2018"}, {"body": "hello plugin compatible ssr please report bug thanks", "d": "7/2018"}, {"body": "thanks replying soon actually confused strange situations mentioned reposition happened maybe ssr early use p eduardo san martin morote notifications githubcom closed receiving authored thread reply email directly view github mute thread", "d": "7/2018"}, {"body": "actually vue nt replace elements moved certain cases moving elements transition stop working fyi case patching process goes like following changing html b c b c b c b c b c b c changing html e f e f e f e f e f e f see later one nt move element transition retains former one moved elements transition gone guess probably vue patching algorithm always guarantee elements stay original position think might space optimized though", "d": "7/2018"}, {"body": "duplicate", "d": "7/2018"}, {"body": "posva method avoid urgent", "d": "7/2018"}, {"body": "aware maybe find way solve using transition component could nt tell cheers", "d": "7/2018"}, {"body": "fyi decide whether want close issue close ca nt demand keep open paid support", "d": "7/2018"}, {"body": "sure get problem use deep selector makes possible keeps styles scoped trading verbosity conveniencescoping see may want pass prop change attributes button instead everything css also multiple blocks vue file making global would apply without anything extra nature css css div header would actually work scoped styles would apply component used inside one containing style believe discussion handle would recommend head forum discord chat share discuss thoughts topic", "d": "7/2018"}, {"body": "indeed posva good point say makes perfect sense thank swift reply still serious issue go trough lines styles ensure one applied browser tools nt need deep selecting might take hours use vuejs convenience time saving case quite opposite please consider nt rush close issue", "d": "7/2018"}, {"body": "actually nothing deal vue rather css strategy partly using vueloader scoped styles case told way nt possible gave looks like solution first point discussed another channel first definitely nt rush close issue gave reasons", "d": "7/2018"}, {"body": "imo absolute convenience tradeoffs scoped styles designed isolate component styles thus gain better encapsulation changing parent styles wo nt cases introduce style regression children another kind convenience regarding maintainability btw use css custom properties product whey provide another mechanism style inheritance goes children according dom structures defining child style using custom property means would explicitly expecting styles parents may better balance point parentchild situation", "d": "7/2018"}, {"body": "expected filters cached like methods want cache value use computed property also try recommend", "d": "7/2018"}, {"body": "duplicate presence slot would cause errors think common resue slot maybe remove warning", "d": "7/2018"}, {"body": "liximomo see link posted earlier easy removing warning", "d": "7/2018"}, {"body": "justineo think vnode slot always ref last rendered htmlelement last get patched", "d": "7/2018"}, {"body": "fyi ignoring getters done purpose due added exception gettersetter pairs fix use case nt know whether ignoring pure getters right either way clear somebody unhappy", "d": "7/2018"}, {"body": "seems difficult compatible use cases", "d": "7/2018"}, {"body": "please post repros using libraries error could come make sure nt come original library first post bug report boiled repro without external lib nuxt thanks", "d": "7/2018"}, {"body": "may want give look need selectively apply options webpack config depending part app bundling also help question", "d": "7/2018"}, {"body": "posva thanks reply already studied completely finding error occurs fixing building errors using split code", "d": "7/2018"}, {"body": "posva used inside vueclissrexample got fixed adding worked like charm replaced directlyimported helloworld component one split code", "d": "7/2018"}, {"body": "tested worked", "d": "7/2018"}, {"body": "weird yarnworkspacesinstalled one build errors npminstalled one nt still project vueclissrexample however using make code actually split showed server console visited site started js files got error server rendering posva", "d": "7/2018"}, {"body": "posva modified one run visit site error occur changed lines codes mentioned", "d": "7/2018"}, {"body": "problem find solution", "d": "7/2018"}, {"body": "think problem come css chunk sure", "d": "7/2018"}, {"body": "zickat sadly nope nt clue think due css chunk well tried config gave another think issue raised minicssextractplugin", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "binding native events components", "d": "7/2018"}, {"body": "unfortunately problem coming firefox setting input value empty string nt reset value input disabled file bug bug tracker nt exist already meantime workaround enabling directly setting value added date input", "d": "7/2018"}, {"body": "workaround make sure always node conditionalslot component sure green actually would style wrapper component leak slot written parent", "d": "7/2018"}, {"body": "also part component receives scope case example ends green text directly fact node present components time", "d": "7/2018"}, {"body": "problem comes radio buttons name try removing attribute", "d": "7/2018"}, {"body": "posva thanks fast response absolutely right blind thanks", "d": "7/2018"}, {"body": "please provide simple reproduction nt include third party library fiddle provided offering much information issues bugsfeature requests vuejs seeking free help debugging app using vuejs", "d": "7/2018"}, {"body": "use forum discord server stackoverflow questions feel free come back open issue turns bug boiled repro", "d": "7/2018"}, {"body": "justineo posva sorry use issues wrong way thank reply", "d": "7/2018"}, {"body": "way much repro please make sure problem nt come libraries first create boiled repro next nest il", "d": "7/2018"}, {"body": "reproduction easy set clone project install dependencies npmyarn start server yarn start dev open page get error come libraries already tried install nuxtjs vue comes vueserverrenderer managed vue thank taking request account", "d": "7/2018"}, {"body": "nt boil nt help us really want help us make sure problem nt come libraries first nt create boiled repro next nest sure problem comes vueserverrenderer create repro package thanks", "d": "7/2018"}, {"body": "see note even vueclasscomponent still prefer composition inheritance caveats calling parent methods child class noted", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "wahengchang use mixins feature", "d": "7/2018"}, {"body": "research line think mixin one solution feeling weird user moving class cant extend functions call", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "7/2018"}, {"body": "want know view source code", "d": "7/2018"}, {"body": "problem", "d": "7/2018"}, {"body": "working expected listen events emitted contenteditable event default binding one way", "d": "7/2018"}, {"body": "\u8bf7\u4e0d\u8981\u7528 issue", "d": "7/2018"}, {"body": "move two blocks everything works great", "d": "7/2018"}, {"body": "thanks lot apologize issue", "d": "7/2018"}, {"body": "take look people seem made work problem libraries tell make libraries ssr compatible smile", "d": "7/2018"}, {"body": "posva ty", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "add property onto first property named reactive proxy see source code always use instead manually adding property", "d": "7/2018"}, {"body": "debugger mode remove cache key destroyed console ok", "d": "7/2018"}, {"body": "api docs match first checked component name option local registration name key parent components option name option available anonymous components matched set option components", "d": "7/2018"}, {"body": "linusborg set name components problem still", "d": "7/2018"}, {"body": "mounted hook called anymore set component name missing something please point precise possible", "d": "7/2018"}, {"body": "okay seeing issue", "d": "7/2018"}, {"body": "linusborg thanks reply tested problem still maybe nt understand faceing importrant step still call mounted", "d": "7/2018"}, {"body": "yeah got assume manually destroying component like messes ache keepalive sure consider valid usecase first place", "d": "7/2018"}, {"body": "use debug mode manually clear destroyed component cache cached ok problem caused destroy cache cleard", "d": "7/2018"}, {"body": "suspect yes", "d": "7/2018"}, {"body": "example foo fooid foo component cached keepalive foo bar foo component destroyed mixin cache still bar foo foo component still cached keepalive note exclamation point javascript function render var slot slotsdefault var vnode getfirstcomponentchild slot var componentoptions vnode amp amp vnodecomponentoptions componentoptions check pattern var name getcomponentname componentoptions var ref var include refinclude var exclude refexclude included include amp amp name matches include name excluded exclude amp amp name amp amp matches exclude name return vnode delete cache go else cache key vnodecomponentinstance cache key componentinstance make current key freshest remove keys key keyspush key else cache key vnode keyspush key prune oldest entry thismax amp amp keyslength gt parseint thismax prunecacheentry cache keys keys thisvnode", "d": "7/2018"}, {"body": "could nt use hook simulate nt destroy component", "d": "7/2018"}, {"body": "destroy component keepalive cached component condition eg includeexcludevif destroyed component condition foo fooid destroyed return go foo need keep status foo bar destroyed return go foo need init status summary parent url subset url need destroy parent returning subset need keep original state ps parent url subset url similar restful url", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "linusborg pr commit failed work think pr minutes thanks lot", "d": "7/2018"}, {"body": "asking way prune cache keepalive like check reasons possible top linusborg recommendation also extract state store tell without looking codebase becomes question posted relevant channels forum discord stackoverflow", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "please fix reproduction link thanks", "d": "7/2018"}, {"body": "solved", "d": "7/2018"}, {"body": "vue already failing specific scenario nt failing please provide repro", "d": "7/2018"}, {"body": "posva nt think returns object like indication compilation error warn message dev environment", "d": "7/2018"}, {"body": "oh indeed errors returned thought", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "intended behaviour requirement met vue warn browser javascript console especially useful developing component intended used others intended usecase nothing", "d": "7/2018"}, {"body": "documentation never stated props validator would side effect console warning development build might need computed properties use case", "d": "7/2018"}, {"body": "might want use something like force prop specific value", "d": "7/2018"}, {"body": "linusborg sodatea thank quick answer understand statement think validator feature meaning currently nt prevent component misbehaving also understand computed value could better option although may wonder validators exist computed values used validators posva thank think exactly looking personal opinion wonder core feature vue makes sense validators currently", "d": "7/2018"}, {"body": "ynk removed advantages computed properties still access original value prop forced explicit giving coerced value name differentiates value passed prop", "d": "7/2018"}, {"body": "coercing computed property nt want add another api thing smile created package feature existed vue people find expressive actually harmful new developers beware", "d": "7/2018"}, {"body": "think validator feature meaning currently nt prevent component misbehaving develop minimized version vue nt give warnings dont think use version gives warnings development warning hve meaning meaning feature give warnings props values nt pass validator", "d": "7/2018"}, {"body": "sorry nt check migration guide docs carefully sodatea ok get advantages agree thought would real computed values computed values validation written space computed block gives meanings posva package solves posva read package readme harmful using coerced coerce function think kinda ok right feels natural separate prop validation computed properties also readable since coerce prop definition written inside prop definition block rather apart computed block could sometimes lot lines away linusborg understand point validators development tool real life validators intended impact component nt feel way first since wording validator looked practical production oriented guess read doc second time sorry", "d": "7/2018"}, {"body": "try computed attributes looks clearer", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "render rootnode default ca customized attribute however clearly documented think using special attribute actually try use tag used element root node may seem confusing actually pretty useful used element often used way turn domtemplate component since elements would hoisted befoe vue touch template terms usecase would html consequence code actually renders literal element root node neither native html element vue component placeholder meant rendered dom really solution ping chrisvfritz document", "d": "7/2018"}, {"body": "hm wondering feasible would make exception still fall back tag would behave expected need document gotcha linusborg think", "d": "7/2018"}, {"body": "would totally feasable described nt default behaviour vue rather intentional decision code component", "d": "7/2018"}, {"body": "innerhtml supposed work svg per spec see apparently shim would allow set quick search", "d": "7/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow need set selection since vue replacing html", "d": "7/2018"}, {"body": "posva close issue solve solution work konw meaning issue", "d": "7/2018"}, {"body": "bad nt work updated comment better reflect closed issue wink", "d": "7/2018"}, {"body": "posva technique powerful give advice vue update html impossible reselect previous selection vue responsible issue updating dom element vhtml every component updated vue also hava reselect issue understand real meaning issue", "d": "7/2018"}, {"body": "calm plz vue update html impossible reselect previous selection course need decide record previous selections even vue responsible issue updating dom element absolutely using like explicitly rerendering existing content selections discarded appending content try keep previous content much possible selection preserved check btw nt take free help granted", "d": "7/2018"}, {"body": "justineo example may written error", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "nt found google results thanks", "d": "7/2018"}, {"body": "syntax write equivalent details vue api docs", "d": "7/2018"}, {"body": "leopiccionia thanks", "d": "7/2018"}, {"body": "first third related context js cases object bind said default values prop nt rely anything component want reuse method extract function outside put places call default function adding methods", "d": "7/2018"}, {"body": "sadly ca nt put function outside needs access values stored component data", "d": "7/2018"}, {"body": "still use function really encourage read contexts javascript enlighten wink", "d": "7/2018"}, {"body": "one two wo nt right one also possible", "d": "7/2018"}, {"body": "dvdbot try", "d": "7/2018"}, {"body": "browser esm build available yet", "d": "7/2018"}, {"body": "browser module version another one please refer track slightlysmilingface", "d": "7/2018"}, {"body": "recursive functions need stop conditions looks like none", "d": "7/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "7/2018"}, {"body": "need minimal reproduction try using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "7/2018"}, {"body": "see", "d": "7/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "7/2018"}, {"body": "please provide valid reproduction opening issue next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "7/2018"}, {"body": "package nuget published vuejs team official nuget support right reach publisher report issue", "d": "7/2018"}, {"body": "reached owner nuget package thanks", "d": "7/2018"}, {"body": "owner vue nuget package nuget recommended import frontend packages normally use bower package manager refer jscss static contents way visual studio totally new package manager aspnet static content reference named libman please review happened bower library manager details", "d": "7/2018"}, {"body": "seems bug opencollective side", "d": "7/2018"}, {"body": "interested becoming sponsor either patreon opencollective", "d": "7/2018"}, {"body": "thanks looking incorporating vue apps saying something consider something planned happened poking around notice twice thought would share best way way tell whether would busted amex signed right away point also thanks fast response michael barbine managed services daingerfield rd suite alexandria va evan notifications githubcom replyto vuejsvue reply replygithubcom date tuesday july vuejsvue vue noreplygithubcom cc michaelbarbine michaelbarbine author author noreplygithubcom subject vuejsvue sponsor urls give interested becoming sponsor either patreon opencollective receiving authored thread reply email directly view github mute thread notice confidentiality privacy customers partners employees paramount received email error please notify sender delete inbox right away learn handles privacy optout marketing emails please click email privacy", "d": "7/2018"}, {"body": "closing realised caused htmlwebpack plugin rather bundle renderer", "d": "7/2018"}, {"body": "nt doable userland non tested", "d": "7/2018"}, {"body": "fact works would nt feel comfortable modify builtin functionality like honest", "d": "7/2018"}, {"body": "would comfortable hide behind plugin", "d": "7/2018"}, {"body": "nt tell nt know pretty contrary using though", "d": "7/2018"}, {"body": "fwiw change could done userland way", "d": "7/2018"}, {"body": "half joke though fit promise callback async code callback function called synchronously event triggered nothing sure callback triggered using promise makes code succinct write specific scenario usage still quite debatable think kept userland", "d": "7/2018"}, {"body": "like humbly disagree called synchronously event origin usually asynchronous nature via user interaction however nt even think promises specific async code say much flow control ergonomics makes useful pretty much places onetime callback would suitable point knowing promise ever resolve makes feel uncomfortable well nt think rational objection really different callback never called however think obligation us agree topic thanks discussing issue ps fwiw nodejs team currently basically discussion going", "d": "7/2018"}, {"body": "recall correctly planned may added issues pr", "d": "7/2018"}, {"body": "nt look related vue core think please remove dependencies repro may want open issue vuetestutils instead vuex error happens test environment", "d": "7/2018"}, {"body": "posva think bug indeed related vue core vue handles calling hook kind environment required accept bug report", "d": "7/2018"}, {"body": "minimal possible test environment external libraries jsfiddle took look code trying access nonexistant property normal error", "d": "7/2018"}, {"body": "posva please take look actual unit test issue description property set hook line", "d": "7/2018"}, {"body": "indeed ignore", "d": "7/2018"}, {"body": "created issue vuetestutils suppose might related mount components still suspect vue core underlying problem however guess better first eliminate test utilities problem", "d": "7/2018"}, {"body": "confirm problem vue test utils components extend localvue constructor", "d": "7/2018"}, {"body": "please provide repro github repository makes easier closing repro provided", "d": "7/2018"}, {"body": "problem solved", "d": "7/2018"}, {"body": "turns someone relying ca nt find way allow without breaking bunch shit", "d": "7/2018"}, {"body": "yes us included rely inject server side validation vuetify input", "d": "7/2018"}, {"body": "kaelwd attempt fix enough", "d": "7/2018"}, {"body": "worried removing listener prop binding like ends less flexible approach users want use listener binding instead model would great check major ui libraries vue see nt break make sure prepared change", "d": "7/2018"}, {"body": "mean using component instead", "d": "7/2018"}, {"body": "using time yeah know nt seen fair bit", "d": "7/2018"}, {"body": "content nt easily recreatable meant said straight way recreate behavior specific importable vue sources option cases", "d": "7/2018"}, {"body": "component testa value passed prop gt key value present attrs variable nt declare prop always considered attr component testb value passed vmodel gt attrs empty extends prop need declare prop see offtopic empty objects instead undefined consistent cc chrisvfritz", "d": "7/2018"}, {"body": "ok need change code bit questions topic changed example clear docs say following vmodel behaves combination von vbind case define prop define prop difference want forward vmodel child component little possible code example example tried forward vmodel childwithmodel component understand correctly must add prop value parent create computed value combination attrs prop result following code solution much boilerplate code", "d": "7/2018"}, {"body": "vmodel create prop child component must add prop named component order make support", "d": "7/2018"}, {"body": "vmodel mapping vbind von search another solution", "d": "7/2018"}, {"body": "point done outside component add prop definition component used", "d": "7/2018"}, {"body": "understand difference first example without prop without vmodel added vbind von vmodel used vmodel result clearly", "d": "7/2018"}, {"body": "change behavior exactely vbind von", "d": "7/2018"}, {"body": "dattn looks interesting thanks cc posva think could work", "d": "7/2018"}, {"body": "reopening visibility", "d": "7/2018"}, {"body": "yes could work think makes consistent", "d": "7/2018"}, {"body": "hi may try fix first bug", "d": "7/2018"}, {"body": "zaggy sure", "d": "7/2018"}, {"body": "annoying resolved next version", "d": "7/2018"}, {"body": "months ago asked help issue related one stackoverflow living temporary solution since passing vue instance library initializer importing vue library happy stuck vuetify also started use typescript creates separate vue instance clear tell webpack vue always instance used solution provided top thread help much since using babel aware existing solution package dependencies written typescript compiled webpack share vue instance", "d": "7/2018"}, {"body": "solution also allow use vue files packages original proposal top thread would probably possible", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "chance could get discussion going sodatea would better way interact", "d": "7/2018"}, {"body": "way still update model directly wait event working live search android simply working adding space moving focus etc idea live", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "evvvritt right updating muteunmute via state works desktop ios", "d": "7/2018"}, {"body": "similar need environment nt allow use node webpack also support ie yuck reverted storing templates strings separate file tried use never worked", "d": "7/2018"}, {"body": "idk exactly got implemented checked working", "d": "7/2018"}, {"body": "sure issue adding two elements default slot also causes first one ignored would nt surprise learn intentional odd work stop working changed warning message", "d": "7/2018"}, {"body": "met issue today longtime debugging finally found bug insistent filename caseless git caused mixin vue component", "d": "7/2018"}, {"body": "thank much ktsn works like charm heart sparkles", "d": "7/2018"}, {"body": "issue fixed using hacky mixin catch errors thrown async methods send errorhandler javascript import vue vue mixin fixes following issue errorhandler work async component methods export default beforecreate const methods optionsmethods objectentries methods foreach key method gt methodasyncwrapped return const wrappedmethod function args const result methodapply args const resultispromise result amp amp typeof resultthen function resultispromise return result return new promise async resolve reject gt try resolve await result catch error errorhandled const errorhandler vueconfigerrorhandler consoleerror errorhandler error errorhandled true reject error wrappedmethodasyncwrapped true methods key wrappedmethod", "d": "7/2018"}, {"body": "seeing issue sudden tests running ci server ca nt quite explain suddenly cropped conditions basically identical ci locally nt make sense seems intermittent rerunning multiple times resulted success eventually timing bug", "d": "7/2018"}, {"body": "yes usually reproduced tests concurrent", "d": "7/2018"}, {"body": "vue docs", "d": "7/2018"}, {"body": "ran issue worth angular implemented additional condition check posva mentioned order workaround commit", "d": "7/2018"}, {"body": "working fifman mentions", "d": "7/2018"}, {"body": "breadadams yes course functions inside method awaited however function vue instance call instantly long running processes finished", "d": "7/2018"}, {"body": "ah bad darrendev different use case side see issue thanks clarifying", "d": "7/2018"}, {"body": "breadadams problem cases glad could clarify", "d": "7/2018"}, {"body": "vuejsorg also valid", "d": "7/2018"}, {"body": "valid properly parsed major browsers validation pretty much pointless honestly nt understand people obsess", "d": "7/2018"}, {"body": "additional note solves issues cases generates two need bit hack simplified case currently impossible without kind wrapper hack anything inside ignored browser change behavior could applied example someone clue could try improve current code support least start point devs could try help vue team", "d": "7/2018"}, {"body": "rentalhost vue dev thank usecase curious elaborate bit usecase wanting elements output different template one outputs", "d": "7/2018"}, {"body": "effulgentsia basically api returns file tree like pastebin user select file folder final structure like jsfiddle note innerfolder indent inside outerfolder problem due original api structure best way like vue approach impossible collapse api json single level got something like pastebin could build yet compatible way like vue seems simple collapse method considered part new complexity", "d": "7/2018"}, {"body": "justineo would nice posted fix", "d": "7/2018"}, {"body": "in\u52a0 \u539f\u578b\u5224\u65ad\u4e0ehasownproperty\u5224\u65ad\u5c5e\u6027\u7684\u533a\u522b\u662f\u5565", "d": "7/2018"}, {"body": "js class model constructor thisfoo thisbar null get bar return thisbar set bar newvalue thisbar newvalue new vue data function return data new model js foo bar null proto get bar function return thisbar set bar function val return thisbar val", "d": "7/2018"}, {"body": "xlotlu dvdbot could get thoughts possible solution", "d": "7/2018"}, {"body": "sirlancelot classikd dynamic module registration vuex bug think maybe way avoid lovely code javascript import mytinystore tinystore component export default class tinycomponent extends vue beforecreate storestatetinystore prevent duplicate register multiple event dispatch storeregistermodule tinystore mytinystore destroyed modulehot prevent webpack hrm destroy store production please go away storeunregistermodule tinystore", "d": "7/2018"}, {"body": "\u9879\u76ee\u8d1f\u8d23\u4eba\u63a8\u8350\u4f7f\u7528 include wanyaxing \u770b\u4e86\u4f60\u63d0\u4ea4\u7684pr remove cache \u7684api \u4e5f\u884c\u7684\u5427", "d": "7/2018"}, {"body": "vuemixin beforerouteleave function next amp amp frommetarank amp amp tometarank amp amp frommetarank gt tometarank vnode amp amp vnodedatakeepalive vnodeparent amp amp vnodeparentcomponentinstance amp amp vnodeparentcomponentinstancecache vnodecomponentoptions var key vnodekey null vnodecomponentoptionsctorcid vnodecomponentoptionstag vnodekey var cache vnodeparentcomponentinstancecache var keys vnodeparentcomponentinstancekeys cache key keyslength var index keysindexof key index gt keyssplice index delete cache key destroy next", "d": "7/2018"}, {"body": "wanyaxing \u6211\u662f\u901a\u8fc7\u8def\u7531\u6765\u63a7\u5236\u9875\u9762\u7684\u7f13\u5b58 executedchart \u6211\u540c\u6837\u662f\u7528 mixin \u65b9\u6cd5hack \u8def\u7531\u79bb\u5f00\u65f6\u5019 javascript \u652f\u6301\u9875\u9762\u4fdd\u6301 vuemixin beforerouteleave next wanyaxing linusborg \u6c9f\u901a", "d": "7/2018"}, {"body": "wanyaxing \u6211\u4e00\u76f4\u5728\u627e\u62ff\u5230 cache", "d": "7/2018"}, {"body": "\u4f7f\u7528 vuerouterthen methods clicksomeone function value emit input value routergo", "d": "7/2018"}, {"body": "fadexiii \u4f60\u7684\u610f\u601d\u662f \u6240\u5305\u542b\u7684 \u5e94\u8be5\u662f routerjs viewsavue include \u4e2d\u5e94\u8be5\u5b58\u7684\u662f componenta xxxa", "d": "7/2018"}, {"body": "yiwuyu xxxa", "d": "7/2018"}, {"body": "thezealousfool well found use nt need set another alias work", "d": "7/2018"}, {"body": "mohdisa unsafe method iteration loop may take place one datenow period look used screenshot actually problem appears cases ca nt get uid item items could change come props ex take place simultaneously transitiongroup ex thats point ca nt set simply index etc imo best way provide buildin mechanism generating uids nt hard write helpers hard every time every project include generator vue core add helpers maphelpers vuex", "d": "7/2018"}, {"body": "please refer see implications setting vue needs component using datenow keys bad idea tell vue never reuse components time using index iteration fine component state list may change new elements removed reordered make sure use id uniquely represents object passed component example component displays contact information prop use contact usually coming db builtin mechanism generate uid place vue related building interfaces sometimes use content unique like names cleaner way generate new version list augment items uids", "d": "7/2018"}, {"body": "frankly speaking nt think good idea function allows crazy side effect stuff moreover create internal state using closures recreate internal state time render function called render function functional components called together parent render function eventually may performance issues", "d": "7/2018"}, {"body": "want achieve possible ended looking object looks like take note brackets thanks endoplasmic", "d": "7/2018"}, {"body": "helped", "d": "7/2018"}, {"body": "whole issue could irrelevant fragments supported instead reason disallowed really patching algorithm already works arrays fact starts node iterate children instead starting iterating array visit nodes array similar issue vuelidate ported simplified version dom patching validation tree find differences virtual validation tree required support multiple nodes level guarantees data shapes turned pretty easy turn algorithm upside treat array entry point", "d": "7/2018"}, {"body": "thanks workaround centaur saved hours debugging thank bro", "d": "7/2018"}, {"body": "interested dlongley comment", "d": "7/2018"}, {"body": "yes looking reason firstworldslardar read ebook reader grid wish would readthedocs could easily download pdf guess chance somewhat generate gon na try pandoc", "d": "7/2018"}, {"body": "firstworldslardar created pdf looks fine though messages nt big issue vuejs guidepdf", "d": "7/2018"}, {"body": "u import component without use suffix homevue html home homets appvue typescript nt work import home viewshomevue well done import home viewshome", "d": "7/2018"}, {"body": "ktsn previously used general vue declaration vueshim linked facing problem trying augment vue type custom property prototype order vs code recognize plugin declare module vuetypesvue import vue vue import momenttimezone momenttimezone declare module vuetypesvue export interface vue moment momenttimezone moment method vue prototype tslint deal path aliases importing vue sfcs gives lots warnings terminal compile time even though app compiles fine keep support path aliases also augment vue type extending vue prototype", "d": "7/2018"}, {"body": "also confirm vue using android chrome none html attributes supposed stop autocomplete suggested words work chrome seems ignore fix ios nt seem work chrome android current problem tap submit button form model empty autocomplete problems however input loses focus model seems update therefore tried programatic blurring nt work timeout tap button anything model wo nt solve everyones problems maybe", "d": "7/2018"}, {"body": "unfortunately jordancaudill solution work signin page still unuseable ios chrome work arounds problem", "d": "7/2018"}, {"body": "new hybrid strategy adopt vue automatically settings need benefit", "d": "7/2018"}, {"body": "similar question nt use advantage components render engine use string concatenation automatically", "d": "7/2018"}, {"body": "keyupenternative submitmethod", "d": "7/2018"}, {"body": "without event production works fine dev fun times", "d": "7/2018"}, {"body": "fnlctrl fenduru please explain functional component uses nonfunctional component render function lose perf see nonfunctional component inside function component would slower pure functional component tree hold true comparision goes nonfunctional inside functional nonfunctional inside nonfunctional jsx b c performance gain functional component lost case b", "d": "7/2018"}, {"body": "approach took give property element array bind \u00e0 la property pseudo random string eg gets regenerated element array order needs synchronised underlying data array order", "d": "7/2018"}, {"body": "", "d": "7/2018"}, {"body": "needed find dom resource first element vfor using dynamic component solved using lodash find key equal concerned array gets huge", "d": "7/2018"}, {"body": "zijjj karljakober current behavior ensure better performance otherwise get overhead ensuring ref array index every time render functions called correct approach get correct index adamawang proposed bind index dom access via using", "d": "7/2018"}, {"body": "angular use implement way bindings ignore bindings count may awesome vue offer feature", "d": "7/2018"}, {"body": "vue feature sync modifier vbind", "d": "7/2018"}, {"body": "issue latest transitions works duration bigger otherwise fails even using tag", "d": "7/2018"}, {"body": "found problem floating point numbers object returned electron comes comma instead dot thus vue always parse see submitted pr fix", "d": "7/2018"}, {"body": "fyi accomplished using provide inject", "d": "7/2018"}, {"body": "please reopen set k input updated cleared idiomatic javascript indicate value provided various json parsers accept field type emptystring given json decode often defcc posva", "d": "7/2018"}, {"body": "case someone else comes google hitting something similar running unit tests running app normally created normal computed property circular references also watch created computed property soon commented watch error went away unit tests passed something like", "d": "7/2018"}, {"body": "really amazing many solutions given many developers wan na give solution like mentioned several components handle modal listed modal component modalvue form background component formbackgroundvue login form content component loginvue navbar component navbarvue highest parent inside navbar component called modal closemodal methods login component methods closemodal thisismodalvisible false inside modal component tag contain anything form paragraph etc need modal effect component listen methods inside login component different one navbar component created trigger inside navbar component created closemodal function message emit close inside login component button contains click method trigger inisde modal component summarized like modal component listen inside login component modal component trigger inside navbar component works like charm solution aggrosoft used say method better method try another modal something else report result soon", "d": "7/2018"}, {"body": "fyi accomplished using provide inject", "d": "7/2018"}, {"body": "whatever solution arrived please please avoid matching contexts string name instead match context reference prevents naming collisionsconflicts one major thing react fixed first context implementation second reference small context implementation skatejs fairly generic usable anywhere outside skatejs important file containing sample usage main thing note static variables named similarly react context api similar sebastiandedeyne idea notice particular providers passed reference makes entirely unique clash free like react new contexts sample contexts used declaratively like react jsx version vue compiles references could made declarative though personally nt like declare contexts markup viewing javascript already anyways nt benefit much markup opinion sample everything javascript code similar sebastiandedeyne idea notice also get specific context reference avoid strings start putting contexts middle large app name conflict headache especially props inside context different references react jsx completely get around problem", "d": "7/2018"}, {"body": "ah shoot see vue already made mistake provideinject guess easy use let see happens big apps", "d": "7/2018"}, {"body": "another thing note skatejs implementation components react specific props rather reacting context whole value nice prevents unnecessary rerenders components components may care subset props context implementation components subscribed props update prevents needing method example equivalent react propbased subscription also prevent creating new objects every update especially good rapidly updating components fe animations intended nt running memory growth causing garbage collection jank implementation sample context object never changes memory use stay constant animations props primitive values great provideinject referencebased components able subscribe specific properties react apps seen contexts usually objects primitive values people end recreating whole new objects trigger updates updates update components nt even care changed props unnecessary cpumemory waste", "d": "7/2018"}, {"body": "case someone want work globally", "d": "7/2018"}, {"body": "able fix using vpre tag help use either svg parent elements", "d": "7/2018"}, {"body": "know vue switching using proxies able overcome transparent proxy issue working library falling issue object equalities", "d": "7/2018"}, {"body": "components updated", "d": "7/2018"}, {"body": "matthewmorgan thing using getter load data store using vfor template get problem resolved", "d": "7/2018"}, {"body": "piotrgulbis matthewmorgan uthpala coolcorey made little work around solution bit tricky works put code end function ends task ex example pushes callback event queue finally execution stack empty view rendered callback called", "d": "7/2018"}, {"body": "build vue plugin makes possible make vue variables nonreactive uses beforecreate hook cleaner vuenonreactive rpkilby please look comment solution wo nt work next version vue please look vuestatic way make variables nonreactive html export default static return map null mounted thismap new mapboxglmap something heavy", "d": "7/2018"}, {"body": "hi samuelantonioli looks like vuestatic something slightly different disabling reactivity entire object contrast vuenonreactive able disable observation single property keeping rest object reactive said looks like intents slightly different static properties nt observe changes intended rendered template nonreactive properties nt meant observed meant rendered eg model instance reference object cache enables related object lookups want observerender related js new vue data const instance poststorefetch include author commentsauthor vuenonreactive instancecache either way thanks heads look next version using proxies see way dupe observerproxy creation linusborg nt see experimental branch development taking place next version", "d": "7/2018"}, {"body": "still conceptexperiwmnt stage nt published branch yet serious work wo nt begin update door take work hopefully vuecli soon", "d": "7/2018"}, {"body": "thanks update", "d": "7/2018"}, {"body": "sure problem exists scope proxies introduced application make heavy use overhead vs overhead vue current observation seems much smaller devil details suspect problem feels redundant build object js module import return value computed function since wo nt observed nt matter computed function value never recalculated much better separation concerns since business logic type things vue components event trick setting properties nonconfigurable still least invasive least vue dependent way handle problem also reason assume would break es proxies still probably nt want observe nonconfigurable properties could entirely wrong know going away nt know check property configurable plus working like champ production code months similar problem space samuelantonioli openlayers map need work inside vue without vue balloon memory gigs", "d": "7/2018"}, {"body": "agree use another pattern eg import modules use computed properties nt need vuestatic needed pattern could teach employees easy understand use importmoduleandusecomputedproperties pattern nt clear imo bit ot pretty sure proxies good way go concerns browser compatibility nt support interested compatibility layer type polyfill use vue projects stricter browser requirements", "d": "7/2018"}, {"body": "\u6216\u8bb8\u53ef\u4ee5\u8fd9\u6837\u5199", "d": "7/2018"}, {"body": "believe way send property paneltitleconfig show divpanelbody see vue docs value", "d": "7/2018"}, {"body": "im facing exactly issue darkomenz need add new item array based previous selection", "d": "7/2018"}, {"body": "also facing issue nested properties changed input workaround nt applicable large limitation vue supply old values setup cached value refer back pukeinducing hack lessthanideal alternative workarounds refactor entire app object property nested inside child component add onchange event handler every input inputs total anyone better ideas", "d": "7/2018"}, {"body": "ljelewis data object like formdata may use dynamic watch watch inputs case add inputs form watchers initialized eg", "d": "7/2018"}, {"body": "put usability issue aside tested performance vfor vuejs compared reactjs found vuejs vfor render lines reactjs render lines vuejs takes seconds render reactjs takes seconds render vuejs times slower reactjs worst vuejs testing rendering lines vuejs hang browser chrome kill browser process os however reactjs easily render lines seconds summarize test results number lines vuejs reactjs seconds seconds minutes seconds forever minutes conclusion reactjs capacity vuejs rending large amount data important many application may need render large amount data occasionally amount data within range example data set may never reaches capacity rendering lines within seconds application accommodate lot scenarios without complex solutions actually came issue rendering components primary contains file name adding one complex components vue material design button component rendering unbearably slow optimize component without using advanced component order let renders reasonable time although ultimate solution rendering large amount data may using paging techniques opinion capacity also important capacity like reactjs go lot without reaching limitation platform", "d": "7/2018"}, {"body": "ethandeng vue performance use functional components list", "d": "7/2018"}, {"body": "akryum nt tried could provide code thanks", "d": "7/2018"}, {"body": "experience rendering lists divs experienced noticeable better performance react vue nothing drastic ethandeng mentioning react app definitely feels snappy weird though benchmarks vue usually comes top react", "d": "7/2018"}, {"body": "akryum tested code export default name perftest render h const lines let lt linespush hello world return lines feel improvements performance whole lot", "d": "7/2018"}, {"body": "say measuring performance rows show one screen pointless practical use case need rows rendered time large amount data seconds render time pretty much still unusable using virtual list component ps make sure test production mode", "d": "7/2018"}, {"body": "one use case customer want generate report contains data lines data wait print hand save pdf file using browser email report needs done time app support pagination searching get access data another point capacity mentioned rendering lines simple data pointless time except case framework support rendering complex components without hanging browser another point enterprise apps exposed big data set randomly start project hard predict upper limit data set afford put good design everywhere application", "d": "7/2018"}, {"body": "say measuring performance rows show one screen pointless practical use case need rows rendered time maybe rows case rendering thousands svg nodes screen", "d": "7/2018"}, {"body": "current scenario simply listing files folder web app could files files make sense let view pics desktop app page", "d": "7/2018"}, {"body": "argument nothing react vs vue perf difference nt exist vue react must something wrong setup usage seems make whole conversation pointless either way using virtual scroll component need render items list seem ignored", "d": "7/2018"}, {"body": "thanks links yes nt feel much differences vue react links took second look project seems culprit party ui library introduced app root removing code nt see perf difference good know issue framework thanks", "d": "7/2018"}, {"body": "confirm almost difference two production builds using vuecli createreactapp elements rendered vue react also reason firefox windows vue consistently faster react", "d": "7/2018"}, {"body": "akryum tried curiosity practical seems vue sample never renders result react takes render lines another discovery seems vuejs silently stops effort rendering instead hanging browser react make effort anyway get job done reasonable time minute two console trying render vue", "d": "7/2018"}, {"body": "ethandeng simply reasonable number web framework deal requirement use react fine", "d": "7/2018"}, {"body": "ethandeng also virtual scroller perfect solution use case make app render items almost instantly", "d": "7/2018"}, {"body": "thanks always good know boundary framework also using vue material ui library anyone good guess slows rendering much got chrome debug tool rendering divs recalculate style total time self time elements affected pending ms initiator reveal first invalidated createstyleelement addstylesclientjs parse html total time self time ms range", "d": "7/2018"}, {"body": "ethandeng happy elementui please take look quasar framework see fits needs better wo nt help rendering issue nt really issue might areas going stick elementui much better asking rendering issue likely give answer nt issue rather use case incorrect smile scott", "d": "7/2018"}, {"body": "findings related issue performance difference actually introduced referencing css files indexhtml file either indexhtml imports css files using import js file createstyleelement addstylesclientjs slow rendering quite lot removing references css file vuejs actually shows better performance react vuejs rendering divs seconds better seconds reactjs however since need use vuejs material ui library tested using vuejs render raised buttons using reactjs material ui library rendering raised buttons reactjs material ui library significantly shower rendering divs done within seconds however vuejs material ui library never renders hangs browser know may issue worried may related style loader implemented vue another finding using code cause maximum call stack size exceeded using vfor template export default name perftest render h const lines let lt linespush hello world return lines", "d": "7/2018"}, {"body": "pretty sure css performance completely framework agnostic problem", "d": "7/2018"}, {"body": "nt see big problem usage javascript import vuenoreact utilsnoreact export default data return nontrackedvariable null mounted thisnontrackedvariable vuenoreact googlemaporsomethingelse think functionality easily implemented using function nt think necessary include core vue nonreactive state still component data therefore live data component lives people use nt know ways add nonreactive objects way describe thanks allows us keep data good thing way ca nt add reactivity nonreactive objects accident", "d": "7/2018"}, {"body": "clever hack hack using internal api coudl break anytime wo nt recommend nice workaround", "d": "7/2018"}, {"body": "could add official vue plugin would ok imho soon core changes plugin gets update easiest solution least effort could imagine use way gets supported officially considered hack anymore", "d": "7/2018"}, {"body": "probably nt think already working experimental branch official branch use proxies implement reactivity hack official would work branch since wo nt property example", "d": "7/2018"}, {"body": "think clear find solution nonreactive data adding core could lead common practices nt helpful beginners lead big efforts relatively small gains core developers adding plugin tells framework users still relatively uncommon shows best practice use plugin instead add although nt belong psychological implications framework development definitely consider changing approach everyone thinks meant nonreactive data even core developers advocate lead impression framework inconsistencies planning stage something like gets added definitely work best practice core developer vue would like give solutions least effort core developers like plugin solution open question overshadowing variables affects data props static", "d": "7/2018"}, {"body": "linusborg developers assume structureproperties relatively stable future releases assuming vuejs internal probably depended partially could nt find documentationrecent examples used might feel secure weakerthanapi strongerthanconvention approach dedicated property ie reserved documented somewhere added vue typescript declarations etc", "d": "7/2018"}, {"body": "would nt like use something like causes friction usage eg templates elsewhere every time said reusing parts core framework add functionality retrospect would considered hack many nt build trust community think solution would ok still feels hackish", "d": "7/2018"}, {"body": "developers assume structureproperties options relatively stable future releases assuming vuejs internal probably depended partially could nt find documentationrecent examples used part public api documented api docs instantiation options used current vue instance useful want include custom properties options default approach countless plugins using developers define perinstance options plugins like vueapollo vuelidate etc pp", "d": "7/2018"}, {"body": "samuelantonioli example desired official api aminimal implementation official implementatio would use options", "d": "7/2018"}, {"body": "best practice use something like html test optionsstatictest export default static test null mounted optionsstatictest googlemaporsomethingelse yes would love see guides docs framework users know best practice leads trust supported way", "d": "7/2018"}, {"body": "best practice use something like mentioned evan right beginning duscussion people usually add properties", "d": "7/2018"}, {"body": "ok looks good seems would nt hard support nonreactive data vue core plan add core eg called otherwise would write plugin injects global mixin adds support nt problem solution even using although goodlooking dedicated variable imo would like able tell people teach vue best practice", "d": "7/2018"}, {"body": "basically javascript idea plugin pluginsstaticjs function install vue vuemixin beforecreate const static optionsstatic static amp amp typeof static function objectassign staticapply else static amp amp typeof static object objectassign static export default install done think could perfectly added guide would approve best practice", "d": "7/2018"}, {"body": "created plugin published npm adds support see vuestatic npm package use best practice employees thanks much linusborg use case crescentfresh deshadow html import cesium cesium export default name cesiumviewer data return data static return cesium new cesiumviewer el methods drawpath points actions thiscesium think clear easytolearn pattern", "d": "7/2018"}, {"body": "anyone found good way debounce types events would really rather events firing user resizes screen little bit debounce would go long way", "d": "7/2018"}, {"body": "adsoncicilioti hello could make child component listen resize event take care events remembering remove component destroyed event triggered emits event parent component hear something", "d": "7/2018"}, {"body": "kidbrazil using lodash find standalone debounce use like recompute computed props resize", "d": "7/2018"}, {"body": "kidbrazil eybarta said exactly would consider really want debounce event depending build debounce events give trouble compute something needed", "d": "7/2018"}, {"body": "pablohpsilva thanks look getting loadash added app cheers", "d": "7/2018"}, {"body": "im trying resize canvas using iframe canvas sizes independent dom changes changed using script elements scale reasons window resizes neighbours change sizes independently vue frameworks current project want use canvas draw editable grid concept example jsfiddle applying vue wished track onresize event iframe called even window vueindependent resize didnt find reference windowonresize vue source suggest vue nexttick called window element resized vue support onresize would able change canvas sizes using reactive attibutes vue component thanks", "d": "7/2018"}, {"body": "hey raschidgithub old issue ask forum discord server need share code nobody able help", "d": "7/2018"}, {"body": "thank needed get errors go away funny thing still handing array vars without data problems warning", "d": "7/2018"}, {"body": "still sollution", "d": "7/2018"}, {"body": "using solution proposed reusing component end prop undefined coincidence scaffold project realized", "d": "7/2018"}, {"body": "webcomponents standard polymer best path webcomponents vue accept webcomponent library", "d": "7/2018"}, {"body": "understand already supported correctly configured ignoredelements vue", "d": "7/2018"}, {"body": "anyone solved", "d": "7/2018"}, {"body": "another use case trying calculate inactive markers leaflet based time elapsed markers generated computed property need refersh markers every mins able without wiring thru vuex store seems wrong able ask vue recompute markers every mins ideal solution", "d": "7/2018"}]