[{"title": "clone jquery library copy value", "body": "opened question basically looking way duplicate variable expose copy value could easily expose copy reference must keep library sandbox acceptable would best way achieve thanks", "num": "2514", "d": "7/2015"}, {"title": "nt expose jqueryaccess", "body": "public amp undocumented reason keep way removed amp see also", "num": "2513", "d": "7/2015"}, {"title": "nt expose jquerydir amp jquerysibling", "body": "undocumented apis shipped jquery object two amp reason exposed amp undocumented minimize number cases amp see also", "num": "2512", "d": "7/2015"}, {"title": "input blur work ie keeps focus fire delegated events anymore", "body": "test suite main jquery branches jquery branch jquery branch second field disabled blur field loose focus every browser except ie tested also native simulated ie versions like ie focus still field type delegated events require focus fire anymore like keyup update works well brand new micorosft edge expected native ie problem big problem things like validation key events trigger still type anything also many cases imagination", "num": "2511", "d": "7/2015"}, {"title": "ajaxbeforesuccess global event ajaxprefilters promises", "body": "understand using ajaxprefilter preferred approach adding new hooks however works success call embeded data object sent xhr doesnt work promised ajax currently global event fires even without success callback basically deferred resolved keep things consistent wish way register beforesuccess global event fired even promised ajax events easy duplicate global event code run addition deferredresolve calls srcajaxjs existing way achieve beforesuccess event want run event ajax success running callbacks resolving promises", "num": "2510", "d": "7/2015"}, {"title": "include color animations core", "body": "fing ridiculous day one still needs use plugin order able animate colors time years functionality included core", "num": "2508", "d": "7/2015"}, {"title": "add basic tests android master drop full support", "body": "jquery include basic support android bigger noncritical workarounds like tests need written create divergence amp test files propose create separate module basic tests thoughts", "num": "2505", "d": "7/2015"}, {"title": "data new dataasexpando implementation clear user data", "body": "new dataasexpando stopped clearing data element cleaning private data added back user data inconsistent", "num": "2503", "d": "7/2015"}, {"title": "switch support tests use documentdocumentelement instead documentbody", "body": "see used support tests test failures seems longer problem able run support tests document ready give correct result synchronize code paths refs", "num": "2502", "d": "7/2015"}, {"title": "support nonbrowser environments jquery compat", "body": "per today meeting try support nonbrowser environments jquery compat", "num": "2501", "d": "7/2015"}, {"title": "xhr throws exception accessing responsetext responsetype arraybuffer", "body": "try using code issues exception firefox accessing instead changed going work current version make pr anyone something laying around", "num": "2498", "d": "7/2015"}, {"title": "error syntax error unrecognized expression unsupported pseudo chekced", "body": "", "num": "2497", "d": "7/2015"}, {"title": "using hasownproperty check property exists prototype", "body": "hi seems like jquery using hasown hasownproperty check property object property exists prototype object chrome started returning false per following post seems using operator may resolve issue example problem occurs line trigger function event data elem onlyhandlers causes issue line typeindexof gt hope makes sense daniel", "num": "2496", "d": "7/2015"}, {"title": "consider using conventionalchangelog generate changelog github release", "body": "conventionalchangelog conventionalgithubreleaser also gruntgulp tasks automate process writing changelog using formatted commit messages logs generated well according parts message use handlebars templating logs also ignore reverted commits many features jquery preset people using jquery commit format modules actively maintained", "num": "2495", "d": "7/2015"}, {"title": "uncaught rangeerror triggering event big array parameter", "body": "js var arr var lt arrpush var el jquery body elon testevent function eltrigger testevent arr uncaught rangeerror maximum call stack size exceeded htmldivelementjqueryeventdispatch htmldivelementelemdatahandle objectjqueryeventtrigger htmldivelement functionjqueryextendeach jqueryfnjqueryeach jqueryfnextendtrigger objectinjectedscriptevaluateon objectinjectedscriptevaluateandwrap looks like problem lines wrapped array array", "num": "2494", "d": "7/2015"}, {"title": "table manipulation regression xhtml", "body": "jquery introduced xhtml regression appending updating table rows appears outermost element every etc gets removed contents outermost element actually appended set innerhtml simple test case requires properly demonstrate regression html one two three xhtml mode resulting dom equivalent html one two three four five six seven eight nine also noticed xhtml test harness broken likely regression occurred outside scope issue", "num": "2493", "d": "7/2015"}, {"title": "elements selected id id contains dot", "body": "according html html specifications idattribute may contain dots first character html however id contains dot jquery select element tested firefox ubuntu version chromium ubuntu test program exhibits buggy behavior test foobar test program using jquery selection exhibit buggy behavior test foobar", "num": "2492", "d": "7/2015"}, {"title": "remove unspecifiedclass toggleclass signature", "body": "cf inaccurately documented probably working correctly easy manually implement library consumers ca nt even come reasonable use case calling removalrestoration classes", "num": "2491", "d": "7/2015"}, {"title": "css clippath working", "body": "using jquery following code however prefix style following works seems like rule maybe others works chrome vendor prefix however since following true method assumes nonprefix style work", "num": "2489", "d": "7/2015"}, {"title": "incorrect slidedown method behavior element height", "body": "example issue steps reproduce open example using link click toggle button maybe several times see element height become visible short time hidden waiting reaction method call element height description every button click slidedown slideup methods called box element rotation", "num": "2488", "d": "7/2015"}, {"title": "bug function ajax plugins", "body": "seems bug ajax put plugin function inside function plugin gets called sure functions know accordion sure sure anything else behaves way built ajax listener function assuming one else ever encountered issue nt solved discussion bug core temporary work around problem press page long term fix would patch core", "num": "2485", "d": "7/2015"}, {"title": "microsoft edge compat", "body": "hey jqs going point contact library compatibility edge know current compat ranges jquery bugs blocking operational compat edge daniel", "num": "2484", "d": "7/2015"}, {"title": "reduce android support master investigate android support", "body": "already fully supporting android hard truth never fully supported android first unit tests nt pass couple modules serious ajax issues error handling seems pretty serious see manipulation issues checked radios even though tests pass cheat little putting android special paths amp maintenance cost various problems happen android eg turns nt allow unquoted reserved words property names exactly favorite happens quite often something nt work eg currently reason ajax tests hang near beginning surprisingly works lots hours constantly put making browser work tests market share released last stable version jquery omitting patches year half ago android still large market share currently google stats show android versions mobile market share android market share real percentage might little higher counted via google play store still large back size cutting android support see experimental branch saves bytes gzipped support test workaround making tests pass would add resolution couple ways solve problem nt change anything try make android finally pass amp continue suffer drop support keep still suffer although little less reason android problems happen often support android partially ensure parses jquery correctly run basic tests ensuring important apis work common inputs nt care perfect compliance less suffering smoke testing may effective also hard draw line important drop support branches redirect people still needing support amp jquery lines cc jquerycore scottgonzalez arschmitz", "num": "2483", "d": "7/2015"}, {"title": "drop ios amp safari support", "body": "according official apple dashboard currently ios versions older ie ios market share mobile market share besides desktop safari possible install el captain yosemite amp mavericks ie os x versions receive security fixes el captain released fall apple continues current strategy note mountain lion safari installed include engine shared safari appears mac app store alongside system updates nt think worth supporting browser already soon test safari amp three versions cc arschmitz talking mobile browsers well", "num": "2482", "d": "7/2015"}, {"title": "catch property needs quoted android", "body": "apparently android nt like property fails deferred tests completely since need quote branch way ensure nt change back without turning jshint option maybe via jscs cc rwaldron markelog", "num": "2478", "d": "7/2015"}, {"title": "jquery reliably trigger events added addeventlistener", "body": "jquery still code around attempts trigger nativecustom browser events added events call backwards compatibility uses onevent accessor reliably expose event handlers added though even though browsers expose handler events jquery care apis stone age would great instead triggered jquery apis play nice nonjquery apis references reproducer jq bug report several years ago stackoverflow nicely describes instance problem mention encountered issue tried marry json editor jquery mobile select element turns jquery mobile manipulates select dom node calls whereas json editor listens dom changes using", "num": "2476", "d": "7/2015"}, {"title": "unable modify jquery element already modified", "body": "ca nt modify modified jquery element using example element jquery object var element div unique element attr title hello world success element title hello world element data test lorum ipsum failure element attribute datatest element already modified setting title hello world code windowclientsidevalidationsformbuilders actionview helpers formbuilder add function element settings message element parent fieldwitherrors capitalize message function return touppercase ssubstr message remove function element settings element parent fieldwitherrors element attr title", "num": "2470", "d": "7/2015"}, {"title": "method remove handlers registered method multiple events", "body": "use method multiple events unique namespace example use namespace removes last event setted example", "num": "2469", "d": "7/2015"}, {"title": "use elementmatches event delegation", "body": "jquery event delegation based method handler filtering developer uses event delegation everytime event dispatches calls gets collection delegated targets checks one one mechanism basically event delegation implementation based another implementation based times faster would jquery consider using instead", "num": "2468", "d": "7/2015"}, {"title": "ca nt chain multiple find calls using sizzleless build", "body": "looks like function resolved correctly jquery builded without sizzle dependency try call chained methods getting following exception tc build jquery try chain multiple calls eg html title foo bar consolelog div find span length exception thrown happens also calls eg experienced", "num": "2466", "d": "7/2015"}, {"title": "jquery added window required using browserify", "body": "installing jquery via requiring browserify sets flag true resulting jquery automatically added property window object common way loading jquery plugins available commonjs modules browserify stack shim using configuration jquery added dependency whenever plugin required jquery required aswell plugins fail required nevertheless require properties window object exist set whats usecase adding properties window object solve problem", "num": "2463", "d": "7/2015"}, {"title": "inconsistent casting w data", "body": "given returns string expected returns number wat seem anybody else seems values values end fiddle", "num": "2462", "d": "7/2015"}, {"title": "ajaxerror fire since", "body": "ajaxerror event never fire script content inside html parse appendto script file exist found fire version look like bug line response ajaxconvert response jqxhr issuccess issuccess check example see", "num": "2461", "d": "7/2015"}, {"title": "tested latest development jquery breaks plugin", "body": "tested latest development version jquery one appears breaks following plugin bug report guys look error firefox threw still bug jquery plugin works leads believe broke something late revisions", "num": "2460", "d": "7/2015"}, {"title": "load jquery present", "body": "want include jquery file included already page inserted statement beginning minified jquery file windowjquery undefined would nice jquery would able detect already defined case would nt load warning error javascript console could indicate loaded version different sorry bad english", "num": "2459", "d": "7/2015"}, {"title": "android hangs ajax test", "body": "android hangs ajax test appears android nt fire errors dynamically inserted scripts instead hanging whole module accept reality skip assertion love actual fix nt see easy way anyone previous attempt fix happened hang appears well", "num": "2457", "d": "7/2015"}, {"title": "uncaught typeerror use operator search scrolltop undefined", "body": "coffeescript gt scrollup backtop click gt window animate scrolltop linear window scroll gt window scrolltop gt backtop fadein else backtop fadeout", "num": "2456", "d": "7/2015"}, {"title": "jquery breaks sinonjs xhr mock", "body": "following snippet passes jquery broken jquery using browser latest chrome js qunittest request function assert thisserverrespondimmediately true var thisserverrespondwith modeapi function request requestrespond contenttype applicationjson value jsfiddle jquery jsfiddle jquery using jquery somehow unable make subsequent requests end test", "num": "2453", "d": "7/2015"}, {"title": "nt work", "body": "normally remove elements set matched elements nt work pages even simple pages like console body span body span return full body jqueryminjs version", "num": "2452", "d": "7/2015"}, {"title": "grunt build fails repository folder path contains var", "body": "hi trying build custom jquery although strictly followed instructions readme get warning force build process nt work either macbook pro eg running results grunt custom ajax running custom ajax custom task creating custom build running build ajax build task ajax ajaxjsonp ajaxload ajaxparsejson ajaxparsexml ajaxscript ajaxvarnonce ajaxvarrquery ajaxxhr manipulationevalurl eventajax warning typeerror read property null objectconvert onbuildwrite use force continue trying build custom version jquery different machine imac get warning ideas wrong thanks advance", "num": "2450", "d": "7/2015"}, {"title": "feature request parent n", "body": "would nice function accepted optional numeric parameter indicating many levels go start respectively argument could existing optional selector filter results first argument nonnumeric original behavior would remain would get greatgrandparent parent grandparent greatgrandparent element would get second parent grandparent element matches selector would get ancestors aboveexcept firstimmediate parent would get except filtered selector maintainers open might submit pr", "num": "2449", "d": "7/2015"}, {"title": "code climate", "body": "could nt find issues wondering could setupintegrate codeclimate help code review", "num": "2448", "d": "7/2015"}, {"title": "datafilter invoked error callback", "body": "method invoked order promise callbacks invoked callback prevent json vulnerabilities return prefixed json error success responses since invoked end property property contains parsed response object example invoked callback strip prefix response correctly parsed case current versions", "num": "2447", "d": "7/2015"}, {"title": "longer access jquery custom events using", "body": "following snippet output jquery custom event object using jquery output version onward longer case pity object provides insight custom events aware issue", "num": "2445", "d": "7/2015"}, {"title": "core eq true modulo feature", "body": "hi day work quickly fix something wrote example wanted get etc wanted go direction complex write negative modulo integrate modulo directly inside instead actual code maybe write maybe new one methode", "num": "2443", "d": "7/2015"}, {"title": "jquery animate sets initial value animating width", "body": "jquery version observed chrome ie amp ff developer windows originally posted stackoverflow jsfiddle example broken jsfiddle example fixed working implementation sidebar slides left squashing main content div goes see demo sliding works fine comes sliding back sidebar div set width animation starts causing jarring effect easier see inspect sidebar element watch width css property carefully rory mccrossan stackoverflow thread points replacing solves issue leading believe may jquery bug", "num": "2442", "d": "7/2015"}, {"body": "understand correctly suggesting code changes ensure returned objectsarrays recursively contents standard prototype chains nothing less would oppose anyone willing pay code size performance penalties duckpunch hardened function hate make decision universally even clear changes would increase security practical terms since proper json parsing allows creation actual arrays arraylike objects mention fact function pretty much equal vulnerability property global object eg modify modify properties directly way find", "d": "7/2015"}, {"body": "yes thought modifying maybe right nt understand variables way trick via modifying native prototypes case said doomed anyway way find recent android nonquoted property name bug interested browsers actually less run test suite couple knew ie ok version nt sure android turns first version fails one failed tests checking exactly nt find reallife code", "d": "7/2015"}, {"body": "right", "d": "7/2015"}, {"body": "ok since fears overblown closing issue thanks", "d": "7/2015"}, {"body": "jquerysub sth like removed implementation still exists jquery migrate sure removed perhaps difficult reliably clone jquery isolation nt guaranteed anyway dmethvin would know time team", "d": "7/2015"}, {"body": "perhaps difficult reliably clone jquery isolation nt guaranteed anyway pretty much jquerysub halfway sat largely unused complicated sounds nt plan adding functionality future think answer stack overflow question sufficiently comprehensive tricks done probably ways around loading jquery twice sandboxed jquery absolutely necessary", "d": "7/2015"}, {"body": "thanks report unfortunately versions ie even ie fire amp events asynchronously easy way work around generically enough include workaround jquery good news fixed new microsoft edge browser ie stay forever please also see amp previous related bug reports btw way make field disabled natively via attribute work even ie nt blur field looks differently style via css needed", "d": "7/2015"}, {"body": "ok weird well know things general disable fields require disabled fields send via post attribute disabled fields ignored stuff make working thx anyway", "d": "7/2015"}, {"body": "yeah wish way work around side surely pain developers related things hard fix library", "d": "7/2015"}, {"body": "nevermind figured ajaxprefilter function options originaloptions jqxhr var originalsuccess optionssuccess", "d": "7/2015"}, {"body": "please mind language nothing prevents using plugin code around pretty long trivial task animate across many possible syntaxes see looking size jquerycolorjs file including core would needlessly penalize users nt need functionality", "d": "7/2015"}, {"body": "basic vital functionality including core would needlessly penalize users nt need functionality argument applies functionality could argue favour dismembering jquery thousands plugins minimal core almost nothing determines whether sensible functionality core vital large proportion users using jquery likely need balance course cost terms extra code needlesly additional hundreds bytes minimized code penalizes users nt need include additional plugin every superbasic functionality penalizes need lot note former almost negligible penalisation latter true pain ops sorry mind language trade definitely favour core unless really vast majority users going need animating colors pretty sure case", "d": "7/2015"}, {"body": "first issue long time remember asks inclusion jquerycolor core nt seems huge demand features implemented today would likely plugins instead parts core ship sailed plugins may depend core", "d": "7/2015"}, {"body": "completely agree current code several things would better done plugins easy see needs universal often case asking users combine files use package manager heavy burden complicated use multiple script tags", "d": "7/2015"}, {"body": "matter seeing one need universal obviously nt universal need add damn new plugin every basic little trivial feature oh sh wait look plugin every five minutes particular case animating colors able animate widthheightpositionopacity able animate color ridiculous always since beginning yes perfectly understand animating color much convoluted may argue animate plugin well least would consistent provided included colors animations whole plugin makes sense core makes sense though consider poor choice animations core except colors inconsistent ugly another approach consistent insane would plugin every single animatable css property set properties based criteria grouping kind approach going take obviously animations general approach well really sad", "d": "7/2015"}, {"body": "create divergence amp test files propose create separate module basic tests thoughts like idea would rather see name like basic minimal tied given suite might apply eg jsdom phantomjs", "d": "7/2015"}, {"body": "would rather see name like basic minimal tied given client works good idea jsdom amp phantomjs btw might hard add", "d": "7/2015"}, {"body": "pr progress need feedback continue", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "probably need go back block around getting whole response sorting", "d": "7/2015"}, {"body": "seems like subverting normal processing model confusing code far concerned still request look wondering defining converter arraybuffer datatype would appropriate way provide complete example", "d": "7/2015"}, {"body": "defined using install plain datatype jqueryajaxsetup accepts plain textplain responsefields plain response converters plain function arraybuffer arraybuffer return new arraybuffer handle cache special case global jqueryajaxprefilter plain function originalsettings jqxhr sxhrfields responsetype arraybuffer sdatatypes plain return plain however nt get converter right know btw need responsetext string types want see hard bytes arraybuffer", "d": "7/2015"}, {"body": "example failing", "d": "7/2015"}, {"body": "sorry delay code looks bit like function searchbyitemnumber tmpvalue originfield var transaction pimsdbtransaction drugs var objectstore transactionobjectstore drugs var request objectstoreget tmpvalue requestonsuccess function e etargetresult null searchbypopcode tmpvalue originfield else var event new customevent drugsearchcomplete detail etargetresult originfield trigger event inside jquery code following line trigger function event data elem onlyhandlers hasowncall event type used return true chrome since change mentioned link posted returns false error occurs typeindexof type become type customevent string expected understanding type property nt belong event object belongs event prototype hasownproperty returns false temporarily changed jquery code fix application follows type type event eventtype event application fixes problem nt cause issues ca nt certain would applications hope makes sense cheers dan", "d": "7/2015"}, {"body": "please provide minimal complete test case micha\u0142 go\u0142\u0119biowski", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "thanks test case exactly needed behavior changes chrome introduced align implementation standard browsers eg firefox behaved way long time nothing new see fiddle fails firefox well agree follow prototype chain", "d": "7/2015"}, {"body": "welcome hope helps", "d": "7/2015"}, {"body": "assign issue want start contributing jquery", "d": "7/2015"}, {"body": "mansisce submit pr github nt allow assign issues people nt commit access repository", "d": "7/2015"}, {"body": "mansisce also check lots useful info contribute jquery questions nt hesitate ask preferable irc channels thank interest", "d": "7/2015"}, {"body": "trying trigger native raw dom using jquery valid api input create pass custom event string like", "d": "7/2015"}, {"body": "clarify since raw dom event never passed important properties raw dom event object code check object", "d": "7/2015"}, {"body": "sample logs sizzle update committed dependencies update support add android support tests results add expected support results safari amp add support tests results clean comments support notation closes correct ios support test results rearrange entries document boxsizing unprefixed firefox make support matrix ios match ios well reorganize browser order add safari reduce size skip stylebased tests elementstyle undefined closes tests accommodate page changes qunit html reporter add assertion jquery val method add microsoft edge results windows build add tests sizzle attributes add test selectors commas add current version node iojs travis config closes avoid use qunitreset tests splitting closes blacklist beforeunload test ios closes blacklist one effects test chrome bring back cleanup logic clean isnumeric tests copy sizzlecontains tests copy sizzleuniquesort tests copy sizzle combinators tests correct typo regex matching safari correct logic broken assertion global clean teardown function expand css relative adjustment tolerance ie fix code style issues fix css relative adjustment test rounddown browsers fix failing ajax tests oldie fix safari useragent detection fix tests accordance new visible behavior improve jsonp tests increase qunit timeout closes make top html suite compliant style guide closes minor updates qunit compatibility improvments testrunner move sizzle tests selector remove empty line whitespace remove shiv remove obsolete speed directory closes remove one checks memory leak remove qunit start hook remove sizzle intergration tests closes remove unused variables remove uselss keys helper simplify testtimeout option simplify globals cleanup tilt style guide windmills update qunit traversing optimise add using makearray closes traversing check pairwise element combinations find els closes wrap declare dependency manipulation module closes support unwrap selector selective unwrapping closes", "d": "7/2015"}, {"body": "afraid ca nt much specific release process generates changelogs publishes website nt see much reason switch alternative solution fine", "d": "7/2015"}, {"body": "cc scottgonzalez", "d": "7/2015"}, {"body": "documented every element array actually arraylike passed becomes handler argument since javascript engines fare poorly excessive argument counts recommend wrapping large arrays avoid expansion", "d": "7/2015"}, {"body": "test chrome html append append append problem ca nt use jsfiddle", "d": "7/2015"}, {"body": "doc served right tho said otherwise wo nt xhtml looks like ca nt xhtml", "d": "7/2015"}, {"body": "need escape dot like using see", "d": "7/2015"}, {"body": "special character must escaped use instead", "d": "7/2015"}, {"body": "jostbaron try use instead escaping something difference", "d": "7/2015"}, {"body": "right course jquery takes selector getelementbyid takes id dots selectors different dots ids thanks pointing fault sometimes use dot example id generated phps set", "d": "7/2015"}, {"body": "even current described behavior switch provided confusing amp nonintuitive", "d": "7/2015"}, {"body": "nt think much use signature wild eighter", "d": "7/2015"}, {"body": "confirmed thanks report works safari chrome broken good news chrome stable went today bug fixed nt think anything us unless properties nt work way know sth like please let us know amp reopen", "d": "7/2015"}, {"body": "sorry mistaken still broken test case borked", "d": "7/2015"}, {"body": "tests seeing similar problems prefixed versions work unprefixed forms getting picked still chrome test", "d": "7/2015"}, {"body": "sure open chrome issue link prefixed amp nonprefixed property accept different syntaxes lot check properties checking value applied properly falling back prefixed property would error prone workaround would invoke directly aware though jquery amp bug using setter vendorprefixed property fixed amp included jquery sure use nonprefixed setter first prefixed one second avoid bug", "d": "7/2015"}, {"body": "done", "d": "7/2015"}, {"body": "thanks let see say", "d": "7/2015"}, {"body": "stems rather curious heightwidth exception ultimately dating way back jquery doubt still relevant would comfortable removing objections jquerycore", "d": "7/2015"}, {"body": "seems safe remove long ie whatever nt throw problems try set widthheight think guarding somewhere else anyway recently also lol comment line back", "d": "7/2015"}, {"body": "works fine without hack removing", "d": "7/2015"}, {"body": "great identify problematic behavior actually ie flicker nt quite precise enough", "d": "7/2015"}, {"body": "jeresig probably", "d": "7/2015"}, {"body": "lord knows probably ie something feel free nuke ca nt reproduce", "d": "7/2015"}, {"body": "could create test case hard see exactly problem description use ajax requests thanks", "d": "7/2015"}, {"body": "mzgol provide example hard load link rather soft load swapcontent mainswapphp pagehorticulture bodydiv console", "d": "7/2015"}, {"body": "mzgol see bug something forgot", "d": "7/2015"}, {"body": "phppluginmaster think debug using site like jquery forum stackoverflow turns jquery problem let us know providing simple test case point suspect problem code generally jquery team nt try debug people pages", "d": "7/2015"}, {"body": "dmethvin run site suggested test know modal works refresh test console input test scanning word ajax call started jquery post could nt solve posted jquery bug answer finally decided post bug good video capture software use show confused still bug solved quicker", "d": "7/2015"}, {"body": "sure steps asking us take debug however asking provide steps us right ticket instead see get help forum eliminated extraneous code reduced know whether bug logic problem jquery", "d": "7/2015"}, {"body": "phppluginmaster sure solves problem think forgot uncomment line", "d": "7/2015"}, {"body": "yep want run ca nt break accordion site try running function link console show broken accordion also fixed need old style load dmethvin tried jquery forum look blankly", "d": "7/2015"}, {"body": "phppluginmaster debugging whole site takes time nt remember volunteers try stack overflow jquery forum nt work test case entire site much", "d": "7/2015"}, {"body": "mzgol refuse run ajax page load closed bug report remain open run function ajax call ever run ajax function load new data close someone pointed talking runtime error function", "d": "7/2015"}, {"body": "nt close ticket code works closed valid bug report please find folks help debug page find whether bug code bug jquery", "d": "7/2015"}, {"body": "dmethvin code works whole page refresh partial page refresh bug partial refreshes whole refreshes desired method nt allow function work even attempt executing commented function page seems like nt bug still exists commenting part meant temporary fix long term fix want show bug video gladly understand talking", "d": "7/2015"}, {"body": "video capture bug", "d": "7/2015"}, {"body": "phppluginmaster need separated minimal test case means need take page offline remove much still reproducing bug report example us preferably also page uses jquery ui potential test case nt contain external dependencies jquery otherwise much going us know look", "d": "7/2015"}, {"body": "phppluginmaster may useful take look short self contained correct compilable example guide might help find root cause problem", "d": "7/2015"}, {"body": "phppluginmaster question already answered jquery forum", "d": "7/2015"}, {"body": "provide minimal test case get home vacation able build different one", "d": "7/2015"}, {"body": "hi csuwildcat thanks reaching recently added edge support infrastructure temporarily periodic run instead main one issues resolved mostly two issues sizzle pr jdalton love make browsers suffer edge fixes bug drop guard applying workaround missing critical make jquery use emulation instead native one already chrome bugs implementing events nt know edge kept good ie implementation replicated chrome bugs see one edge failure one related test already passes newer builds browserstack relatively old build still named spartan still issue imo everything else fine", "d": "7/2015"}, {"body": "quick review items listed knew focusin detectionpolyfill one seems like good idea wrong focusin bummer escalate going present hard stops people estimation", "d": "7/2015"}, {"body": "going present hard stops people estimation nt think anything hard blocker fortunately never shipped workaround version checked good", "d": "7/2015"}, {"body": "csuwildcat anything else rather move conversation mentioned two bugs ie amp", "d": "7/2015"}, {"body": "mzgol looks good two relatively minor issues logged follow separately overall compat confirmation thank", "d": "7/2015"}, {"body": "fyi still walk store buy device android still quite makes vote nt change anything try make android finally pass amp continue suffer maybe drop support master keep compat still suffer although little less reason android problems happen often master compat", "d": "7/2015"}, {"body": "fyi still walk store buy device android", "d": "7/2015"}, {"body": "relevant", "d": "7/2015"}, {"body": "markelog hah thought created issue way past guess time android flies slower", "d": "7/2015"}, {"body": "seems drop pretty quickly though february", "d": "7/2015"}, {"body": "echoing gnarf despite low usage numbers feel like hard justify officially dropping support something still buy new shelf direct best buy website largest consumer electronics retailer us", "d": "7/2015"}, {"body": "wrote initial post though never fully supported browser always lots failures life jquery nt even test android ci numerous android issues pop time time nt remember single issue reported anyone outside jquery team mostly reacting various problems pop testing waiting unresolved long time also wonder one reports android issues maybe fixing much writing workarounds issues one cares one notices", "d": "7/2015"}, {"body": "arschmitz gnarf like discuss next core meeting could options dropping support supporting fully love input discussion timmywil make sure nt plan skip meeting next week", "d": "7/2015"}, {"body": "mzgol generally always lurking make sure next one caught middle setting new laptop week", "d": "7/2015"}, {"body": "airplane trust arschmitz carry viewpoint need wait long making responsible informed choices game jul alexander schmitz notifications githubcom wrote mzgol generally always lurking make sure next one caught middle setting new laptop week reply email directly view github", "d": "7/2015"}, {"body": "mzgol yes plan meeting thing foresee changing would fact moving weekend nt plan letting interfere", "d": "7/2015"}, {"body": "thoughts think least moving support makes sense bugs appear caused fact many workarounds already due support discover usually look one recent android failures discover things failed usual often obvious android support would little easier also size difference amp larger current amp due support removal currently gzipped weighs one thing another think restrict android support slightly saying wo nt fix noncritical bugs like sth offby one strategy applied eg support note tests currently fail android look like significant breakages situations like appended checked radios losing state yet one reports things us wonder anyone noticed stopped working around unreliable margin right android due fact devices still sale sad ok keeping work android basic level least ensure library parses correctly core apis work least outside various edge cases like note android broken many levels many fix reliably developer nt test site browser jquery supporting wo nt help broken anyway easier android newer", "d": "7/2015"}, {"body": "mzgol based previous discussions nt think compat good option see", "d": "7/2015"}, {"body": "hmm right forgot use case", "d": "7/2015"}, {"body": "echoing gnarf despite low usage numbers feel like hard justify officially dropping support something still buy new shelf well could still install ie nt necessary mean somebody note stats show browser market os market meaning ppl actually buying nt mean use default browser fact looks like primary clientele opera mini looking much lower percentage plus market share dropped four months extrapolated data assume tendency another four months share go lower standart pretty big argument removal consider android add numbers ios ms browsers would tiny like really tiny add desktop browsers share would practically nonexistent mzgol ppl core spend lot lots time working supporting browser job pretty unrewarding hella annoying whereas still nowhere near green trunk meanwhile users field bugs ever giving even smoke testing seems really necessary", "d": "7/2015"}, {"body": "also concerned cases regressing android would mean worse experience others fully supporting browser could eg mean revert would pretty sad would cause issues", "d": "7/2015"}, {"body": "discussing issue dev leads meeting realized something anyone know issues jquery compat hybrid apps always recommended master master nt oldie detritus sure ever actually checked see compat works think make android compatonly recommend compat anyone supporting hybrid apps", "d": "7/2015"}, {"body": "anyone know issues jquery compat hybrid apps couple issues know windows modern apps restrictive general web content compare eg master manipulationsupportjs compat master jshint settings declare global nt declare browser environment compat nt test anything nodejs basic compliance tests possibility code tailored cause issues unfortunately nt good way test apart waiting bug reports support tests may require changes similar ones described point obviously change especially points difficult change would also fix making changes meant could drop android say android support like even basic smoke testing android", "d": "7/2015"}, {"body": "like hold android smoke testing assert degraded noted mostly works specific bugs edge cases found us", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "mean smoke testing though keeping existing tests except maybe ones currently failing small set tests checking basic api behavior would mean keeping existing tests nt think making android support officially would buy us much", "d": "7/2015"}, {"body": "something like library use handful simple operations backed required modules explicitly avoiding edge cases support would allowed degrade point core functionality fails", "d": "7/2015"}, {"body": "nt think would buy people much guess code web relies least couple edge cases api would nt oppose much though maintaining nt lot trouble except time needed choosing proper tests initially", "d": "7/2015"}, {"body": "right acting assumption websites want serve compat native perhaps especially welltested try master report issues us welcome change adding code try fixing unit tests", "d": "7/2015"}, {"body": "mobile team discussed voted today decided upcoming release passively supporting android lt meaning remove fixes version ensuring basic functionality", "d": "7/2015"}, {"body": "dropping android support wo nt help much unless also drop super unofficial secret support phantomjs since share dumb limits yet sort weakened android support suggests might work document places punted hard involved degrading support newer popular browsers", "d": "7/2015"}, {"body": "dmethvin dropping android support wo nt help much unless also drop super unofficial secret support phantomjs since share dumb limits imo phantomjs mostly need workarounds throwing need android well anyway fixed android gt needs stay apart nt see lot overlap yet ca nt drop phantomjs yet mobile still relies probably mostly makes wrapper tools still install android support please see initial post code size increase although nice rip bytes gzipped test workaround mostly maintenance cost might notice usually one fight stupid browser p fact never passed whole test suite various workarounds tests browser less behaves broken nt issues android require workarounds source able pass test suite unable make android also trying fully supporting browser could mean reverting useful changes like", "d": "7/2015"}, {"body": "decided adding support nonbrowser environments jquery compat issue pr cantfixing branches try fix maintain basic support android meaning special tests browser nt check edge cases issue removing support test amp workaround issue", "d": "7/2015"}, {"body": "mzgol ok based numbers check rest team meeting week though", "d": "7/2015"}, {"body": "sure nothing urgent nt significant issues safari mostly reducing test burden anything else reason leave bother much", "d": "7/2015"}, {"body": "also cc scottgonzalez affect jquery ui support matrix well", "d": "7/2015"}, {"body": "good", "d": "7/2015"}, {"body": "removed browsers jquery core amp ui testswarm landed update jquerycom branch closing issue resolved", "d": "7/2015"}, {"body": "maybe turn option preferably comment android needs", "d": "7/2015"}, {"body": "probably easier left comment source code inline rule warning", "d": "7/2015"}, {"body": "concerned since android chokes may reserved words nt work property names would safer switch support comment android sure everything quoted", "d": "7/2015"}, {"body": "may reserved words nt work property names every reserved word trigger error case enable", "d": "7/2015"}, {"body": "every reserved word trigger error nt check least amp trigger error work android", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "kudos go dwt helping debug issue", "d": "7/2015"}, {"body": "well still support branch seems dmethvin justification original ticket leaving patchwelcome still valid although send us pr code works supported browsers think consider", "d": "7/2015"}, {"body": "supported mean rest", "d": "7/2015"}, {"body": "long enough worth rediscussing github tracker still opinion jquery event system layer top dom event system exceptions end triggering native events via dom methods like special guards prevent infinite recursion constant source bugs years reaching level us pretty complicated call jquery know whether browser understands event today order ensure consistent crossbrowser dom bubbling behavior manually bubbles triggered target way executing jquery handlers along way dom native event also going bubble sometimes inside jquery well jquery nt inherently know whether particular event name bubble behavior would determined sizeortime expensive process lookup table likely impractical feature detect list may differ even modern browsers various quirks notyetsupported events jquery nt know whether native dom handlers attached element dom method means nt possible shortcut process must fire events via see happens every page jquery use today new version would expensive bunch work support native listeners none possibly exist still want support triggering event handler additional data jquery api currently documents perhaps could say nt happen native events native event caused bubbling still need data passed jquery handlers attached element normally response would make plugin given tricky sure generalized solution crafted inside outside jquery going assume anonymous person tried experiments came conclusion someone wants give another try could look", "d": "7/2015"}, {"body": "interest would nt viable switch whole event propagation mechanism use browsers native facilities make kind interoperability work ie events registered via addeventlistener trigger dispatch real event sure would nt work old browsers thats compatibility branch jquery specific functionality possible quite easily wrapping handlers registered via jquery closure extracts extra information triggered custom event hands parameter", "d": "7/2015"}, {"body": "pretty easy test theory like pretty thorough unit tests events write whatever changes think would work see well unit tests", "d": "7/2015"}, {"body": "dmethvin well mean really nt know interested change know nt work", "d": "7/2015"}, {"body": "dwt ca nt know nt work nt tried write code lot potential issues perhaps work least give try provide doublecheck suspicion possible without significant breakage current apis lack dom likely cause trouble example still need maintain bookkeeping today plus user attaches event listener outside jquery plan trigger nt think nontriggering way know clone another element edit short ideal patch would significantly bigger current code introduce breakage current api contracts", "d": "7/2015"}, {"body": "data setting attributes pulls design data attributes pulled first time data property accessed longer accessed mutated data values stored internally jquery set attribute use attr", "d": "7/2015"}, {"body": "sorry nt know said example take functions see updated example element jquery object var element div unique element attr title hello world success element title hello world element unwrap failure parentdiv element removed element already modified setting title hello world fail well element jquery object var element div unique element unwrap success parentdiv element removed element attr title hello world failure jquery failed set title element hello world element already modified unwrapped making copy existing jquery object using variable name like modifying jquery object based variable containing jquery object jquery seems fail modify read properties element using jquery object based variable containing jquery object", "d": "7/2015"}, {"body": "see written code goes wrong windowclientsidevalidationsformbuilders actionview helpers formbuilder add function element settings message element parent fieldwitherrors capitalize message function return touppercase ssubstr message remove function element settings element parent fieldwitherrors element attr title almost sure bug jquery", "d": "7/2015"}, {"body": "however bug dissapears using jsfiddle test", "d": "7/2015"}, {"body": "put comma namespace nt match namespace", "d": "7/2015"}, {"body": "current event delegation use via jqueryfind delegates sizzle ca nt really tell jsperf going looks like first case may optimized away jit given numbers ideas speed delegation maybe could implement complete pull request see whether makes difference way check unit tests well since many tricky cases", "d": "7/2015"}, {"body": "confirmed caused need selectorsizzle define mlewand would like open pull request", "d": "7/2015"}, {"body": "whoops see without referencing issue move discussion", "d": "7/2015"}, {"body": "yes right already made pr believe already referenced referenced issue pr description mlewand referenced issue hour ago anyway happy read feedback", "d": "7/2015"}, {"body": "nt browserifyshim issue jquery one set config define global", "d": "7/2015"}, {"body": "thank opening issue agree browserify config issue requests leave global put", "d": "7/2015"}, {"body": "documentation every attempt made convert string javascript value includes booleans numbers objects arrays null value converted number nt change value representation example equivalent numbers numeric value converting would alter representation left strings string value converted number first precisely converted second", "d": "7/2015"}, {"body": "think dup plan fix final", "d": "7/2015"}, {"body": "thanks opening issue please provide small complete test case help us asses issue firefox supports elements guess invalid input", "d": "7/2015"}, {"body": "helps create test case error thrown mostly likely element jquery collection either dom element eg currently connected document always invalid inputs nt throw errors past", "d": "7/2015"}, {"body": "timmywil example use plugin move mouse see works uses jquery click settings see scripts used want example uses dev version tested latest ff ie chrome luck far", "d": "7/2015"}, {"body": "chrome get", "d": "7/2015"}, {"body": "dmethvin fixed chrome try link", "d": "7/2015"}, {"body": "use rawgithubcom micha\u0142 go\u0142\u0119biowski", "d": "7/2015"}, {"body": "mzgol thanks nt know updated pen guys progress far", "d": "7/2015"}, {"body": "guess right plugin asking makes sense use element", "d": "7/2015"}, {"body": "dmethvin change code portion plugin works could provide assistance", "d": "7/2015"}, {"body": "author nt developing plugin anymore recommend finding actively developed one glad pointed problem though nice people trying bleedingedge builds code find break", "d": "7/2015"}, {"body": "many sites load multiple versions jquery see jquerynoconflict supporting api option really manage includes better avoid problem continue work around", "d": "7/2015"}, {"body": "created duplicate bug", "d": "7/2015"}, {"body": "could create complete test case", "d": "7/2015"}, {"body": "source", "d": "7/2015"}, {"body": "sorry fix html body animate", "d": "7/2015"}, {"body": "lot code hardly instructions run reproduce problem could create minimal example hard debug complete app", "d": "7/2015"}, {"body": "thank fixed", "d": "7/2015"}, {"body": "ok assume mean mistake side closing issue", "d": "7/2015"}, {"body": "nt seem regression breaks well nt looked sinon code branch uses polling timer rather events implement might factor", "d": "7/2015"}, {"body": "thanks might sinon xhr mock essentially mocks immediately provides response presumably jquery nt seeing response first poll comes back", "d": "7/2015"}, {"body": "problem indeed area jquery sets calling xhrsend means jquery nt listening fakexhr emits jquery synchronous check calling account cases cached response immediately returned however proceeds defer callback using instead calling immediately changing following line patched version made work diff settimeout callback callback try work around setting fake timer addition fake server perform tick end test", "d": "7/2015"}, {"body": "sure change would affect guarantees although request still completed execution falls anyone making assumption good test seems broken using async test", "d": "7/2015"}, {"body": "forgot new always async see makes example confusing even though jquery original code ran issue used though regardless suppose appropriate attach end chain return promise qunittest solve naturally notice large test suites minimum delays make slow test suite one things makes synchronous resolution attractive significantly speeds test suite however suppose still use mock timers take care", "d": "7/2015"}, {"body": "new jquerycompat deferred promiseacomplant well would definitely want assume async reliable operation across versions hear saying making tests slower world spoken consistency async triumphs must obey smilingimp", "d": "7/2015"}, {"body": "similar different issue described cjohansensinonjs tests using sinon fakexml work jquery break essence jquery returns sinon mocking jquery explicitly returns bypassing mocking specific reason necessary branch removed would really help testing via sinon described workaround linked issue", "d": "7/2015"}, {"body": "specific reason window necessary branch removed contrary included jquery continuation line support running jquery nonbrowser environments passing custom implementation jquery factory even tests branches use assume javascript globals browser ones surprises though problem eg use another change compared jquery run effects tests sinon mock works fine", "d": "7/2015"}, {"body": "problem nt mocked set sinon stub issue fix problem", "d": "7/2015"}, {"body": "body span correct note selecting elements within body body need help please use forums irc stack overflow", "d": "7/2015"}, {"body": "ca nt reproduce try project root dir version even work nt help try update node version latest one although work previous ones", "d": "7/2015"}, {"body": "run results jquery build query npm install amp amp grunt running build build task warning typeerror read property null objectconvert onbuildwrite use force continue aborted due warnings npm err darwin npm err argv node usrlocalbinnpm run build npm err node npm err npm npm err code elifecycle npm err jquery build npm err exit status npm err npm err failed jquery build script npm install amp amp grunt npm err likely problem jquery package npm err npm npm err tell author fails system npm err npm install amp amp grunt npm err get info via npm err npm owner ls jquery npm err likely additional logging output npm err please include following file support request npmdebuglog", "d": "7/2015"}, {"body": "patrickording try suggestions also using latest master", "d": "7/2015"}, {"body": "markelog yes tried suggested nt work yes latest master", "d": "7/2015"}, {"body": "reproduce seems extra files folder passed task say try freshly cloned repository", "d": "7/2015"}, {"body": "also edit file add line see file causes error", "d": "7/2015"}, {"body": "varwwwgithubclonesjquery master git status branch master branch uptodate originmaster changes staged commit use git add update committed use git checkout discard changes working directory untracked files use git add include committed mzgol yes try freshly cloned repo varwwwgithubclonesjquery master sudo npm run build jquery build userspordingvarwwwgithubclonesjquery npm install amp amp grunt running build build task path userspordingvarwwwgithubclonesjquerysrcvararrjs name vararr path userspordingvarwwwgithubclonesjquerysrcvardocumentjs name vardocument path userspordingvarwwwgithubclonesjquerysrcvarslicejs name varslice path userspordingvarwwwgithubclonesjquerysrcvarconcatjs name varconcat path userspordingvarwwwgithubclonesjquerysrcvarpushjs name varpush path userspordingvarwwwgithubclonesjquerysrcvarindexofjs name varindexof path name path userspordingvarwwwgithubclonesjquerysrcvartostringjs name vartostring path userspordingvarwwwgithubclonesjquerysrcvarhasownjs name varhasown path userspordingvarwwwgithubclonesjquerysrcvarsupportjs name varsupport path userspordingvarwwwgithubclonesjquerysrccorejs name core warning typeerror read property null objectconvert onbuildwrite use force continue", "d": "7/2015"}, {"body": "hah obvious thanks patrickording build system assumes file path treated variable declaration since put entire repo inside directory everything treated way breaks seems like bug fix nt looking places main repository directory meantime move repo outside avoid problem cc timmywil", "d": "7/2015"}, {"body": "ah sure fix", "d": "7/2015"}, {"body": "pretty cool bug though", "d": "7/2015"}, {"body": "thank everyone helping keep awesome work", "d": "7/2015"}, {"body": "would nt code readable without using unnamed arguments", "d": "7/2015"}, {"body": "fagnermartinsbrack cases think right may possible accomplish thing using array operations still see use jquery set contains multiple elements begin want get list grandparents elements set ie proposed would get grandparent first element one worse elements set prior ancestor hit top dom tree results excluded index might instead getting grandparent subsequent element original set even end array way implement currently might eg return single element matching second item nothing first also might assume case could implemented would behave correctly original set multiple elements parents element concatenated resulting array results would include parents first element correctly excluding firstimmediate parent first element think perhaps could implemented eg makes think perhaps implemented would sufficient place implementing", "d": "7/2015"}, {"body": "similar boolean trap ie parameter nt really say affects depth searching process nt think good idea name cases want limit searched nodes look first one case closest enough really sophisticated use case imo best achieve via plugin new name function would better anyway", "d": "7/2015"}, {"body": "mzgol thanks agree custom plugin would able provide community may may find useful supported feature default created repo may develop something like record would nt boolean trapesque seems jquery api tends toward method type detection terse fluent interfaces rather example passing around objects named parameters latter always possible rely type detection eg implementation would make easier extend functionality eg put numeric cap height recursion eg feel free close want", "d": "7/2015"}, {"body": "imagine conservative new apis usually ask plugin first nevertheless thank reaching", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "since discussed previously gon na close thank though fagnermartinsbrack thanks comment helpful", "d": "7/2015"}, {"body": "ok think understand thanks time", "d": "7/2015"}, {"body": "would significant change behavior would nt would know whether data valid need massage response validity would seem safest use jquery bultin data conversion instead", "d": "7/2015"}, {"body": "whole data module rewritten scratch jquery events rely seeing private data nt relied jquery properly hidden never guaranteed available officially sanctioned api get list handlers attached element need debugging purposes use note unsupported api may disappear one day similarly hack described disappeared jquery", "d": "7/2015"}, {"body": "also triggering nt necessary snippet returns chaining possible could written would return thing", "d": "7/2015"}, {"body": "jquery event system really optimized intended handing dom event behavior want something like pubsub reactive programming javascript libraries use", "d": "7/2015"}, {"body": "new method would definitely better way rather adding boolean trap case though plugin", "d": "7/2015"}, {"body": "agree introducing boolean trap would bad idea also dmethvin said new methods better introduce plugin first nt want increase byte size much", "d": "7/2015"}, {"body": "animating unit one returned px compute starting value animation unit happens means iterative approximation imperceptibly fast nt see anything nt case second recommendation use unitless eliminates mismatch allows us skip starting value computation", "d": "7/2015"}, {"body": "matter one entries choose still get tests executed double entry nt appear amd mode though wired", "d": "7/2015"}, {"body": "thank opening issue decided close defer solutions", "d": "7/2015"}, {"body": "perfectly fine thanks feedback awesome library", "d": "7/2015"}, {"body": "sounds analogues label timmywil right", "d": "7/2015"}, {"body": "mean nt see analogy means issue affect branch also similar label", "d": "7/2015"}, {"body": "release behaviour discrepancy two versions", "d": "7/2015"}, {"body": "ah edge cases internal modifications nt affect public api see eg affect definition eg nt think implies far issue indicates serious api incompatibility versions may implictate imo automatic", "d": "7/2015"}, {"body": "okay reasonable", "d": "7/2015"}, {"body": "would nt call blocker alpha fixed final release", "d": "7/2015"}, {"body": "hi markelog modulize think save bytes removing occurences code raw gz sizes distjqueryjs distjqueryminjs raw gz compared master distjqueryjs distjqueryminjs want make pr", "d": "7/2015"}, {"body": "believe reusing test div ie amp similar types test nodes created helps size separate function could created well guess wo nt save size though feel free check please nt anything though lands change testrelated things", "d": "7/2015"}, {"body": "believe reusing test div yep", "d": "7/2015"}, {"body": "dmethvin could least reopen ticket error still present regards", "d": "7/2015"}, {"body": "reopen please create full minimal test case reproducing problem use testing response handling", "d": "7/2015"}, {"body": "mzgol hey thank took advice created test case webspace would crossdomain request otherwise figured framework use cakephp redirect location header field somehow internally therefore second request separately jquery know handle without following anyway thanks reopening closed xd", "d": "7/2015"}, {"body": "ok thanks confirming", "d": "7/2015"}, {"body": "may related duplicate issue", "d": "7/2015"}, {"body": "related krinkle jquery handling error callbacks crossdomain script jsonp requests inconsistency ajax api explicitly spelled docs issue feature request asking team make behavior consistent requests", "d": "7/2015"}, {"body": "come conclusion added needs review flag sth decided", "d": "7/2015"}, {"body": "discussion meeting decided leave asis want avoid appearance using methods encouraged nt want remove either", "d": "7/2015"}, {"body": "ipetropolsky problem related fact ca nt use focusinout chrome nt according spec see heard rumors microsoft edge might adopted nonspeccompliant chrome behavior would problem although firefox probably give pass nowconsistent behavior even though keeping standard messing focus way hope checked accessibility implications", "d": "7/2015"}, {"body": "dmethvin paragraph example bit confusing think may misinterpreted said content hideshow candidate unlikely add remove hidden attribute dynamically example spec shows situation set property dynamically form hidden element shown user logs think agree exactly folks use jquery today quote guidelines spec hidden attribute must used hide content could legitimately shown another presentation similarly incorrect use attribute hide content one presentation something marked hidden hidden presentations including instance screen readers interpret meaning intend screenreader still able access content nt use holds true use element use totally hidden everything including screen readers example incorrect use hidden hide panels tabbed dialog tabbed interface merely kind overflow presentation one could equally well show form controls one big page scrollbar makes lot assumptions tabpanel used think tripped read one way implies nt use even tabpanel true every tabpanel implementation seen uses hidden panels associated selected tab sometimes also really hammer hidden screen readers read another way think intended meaning means intention perform overflow management presenting user subset large set content wrong tool use hides rest content completely really sight yet actively hidden assistive technology keyboard navigation without debating intention tabpanel think agree user calls intend content hidden visually screenreaders exactly works sets believe toggling attribute jquery would line spec", "d": "7/2015"}, {"body": "understanding problem using iframe default display elements right use something like pr simply allowing adding edgecases advanced developers would see documenting add new elementname defaultdisplay mapping support defining new elements someone must also like approach jquerymobile standard event works need performance forcing someone use something complicated something simple might end loosing way high performance maybe introduce something like simply assume always showhide something element introduce takes default display first parameter", "d": "7/2015"}, {"body": "keeping old behavior hidefadeslide around form attempted use velocityjs version fadeslide yeah faster taking account edge cases made less useful", "d": "7/2015"}, {"body": "please nt css nt depend js lib use plugin authors ca nt dictate users use ridiculous expect css styles revised new jquery plugin want use jquery forget upgrade main point css nt care js libs please follow single responsibility principle", "d": "7/2015"}, {"body": "plugin authors ca nt dictate users use one solution problem would timmywil suggested comment ie requires know expected display value beforehand otherwise work without modifying input stylesheets", "d": "7/2015"}, {"body": "unless jquery magic delay running make browser render descendants seems like worse solution using inframe least performance wise really want go way remove alike functions seriously jquery wo nt move away complication devs maybe library maybe move ui optional jquery build", "d": "7/2015"}, {"body": "starting look like general griping going ask specific questions tried jquery alpha release excepting phistuck matthaywardwebdesign obviously given ing element generally leave element without inline property eg responsive stylesheets expected end inline css cascadehidden element keep mind could guess proper may actually differ elements name", "d": "7/2015"}, {"body": "code basically boiled shortcut amp would agree eccenux say completely remove amp jquery current code moved addon even want continue support either way change make devs think carefully hide show elements pages", "d": "7/2015"}, {"body": "mean responsive website squishy website difference responsive website render fine certain device something show stays shown squishy website something showoff boss friends resizing browser things might disappear show squish browser back forth time actual use case also try one solution see make showhide work expected running something like would break squishiness understand use case correctly", "d": "7/2015"}, {"body": "eccenux hmmm something responsive web application detecting device serverside send back something specific device something responsive one version design code website nt respond resize tab responsive web design", "d": "7/2015"}, {"body": "actually agree eccenux resizing tab necessarily use case responsive design nice side effect resizing tab mobile breakpoint may bring example geolocation features irrelevant desktop users user resized tab mean suddenly mobile", "d": "7/2015"}, {"body": "phistuck okay maybe something like responsive one version code responsive design media queries", "d": "7/2015"}, {"body": "sorry nt want spark new discussion responsiveness squishiness concept responsive show squishiness discussed brad frost presentation kind thought got estabilished responsiveness squishiness adapting screen size exactly device yes responsive websites use media queries page loaded initial view established time nt need readapt testing people nt squish websites around besides must always use rwd nt really see important showhide usually things shown containers nt change display much time change maybe loose attribute", "d": "7/2015"}, {"body": "btw made fiddle two simple examples nt work switch left workaround bad originally thought nt cause performance issues still find confusing note simple example assumes use one single class hide elements shown add", "d": "7/2015"}, {"body": "example simple showing hiding canvas menu mobile menu horizontally open desktop media query hides shows button menu showing menu mobile needs show hide mechanism button triggers", "d": "7/2015"}, {"body": "eccenux way one specific use case squishiness responsive design changing orientation", "d": "7/2015"}, {"body": "phistuck way one specific use case squishiness responsive design changing orientation yes nt see realworld use case would want change display upon orientation change dont think hide slideout menu upon oriention change show use case show easy workaround someone show workarond one without changing html css note works fine change jquery", "d": "7/2015"}, {"body": "someone show workarond one without changing html css", "d": "7/2015"}, {"body": "someone show workarond one without changing html css wo nt work dialogs eg pages", "d": "7/2015"}, {"body": "also one makes browser render dialog hidden elements brief moment probably problem desktop might problem mobile especially elements need recalculated elements shown", "d": "7/2015"}, {"body": "also one makes browser render dialog hidden elements brief moment example browser happens browsers batch style recalculations multiple changes nt trigger multiple reflows unless someone asks resolved style element meantime browser know real value return nt show element browser new nt check resolved reflow nt happen true though reflow would happen code executed jquery older check resolved", "d": "7/2015"}, {"body": "true though reflow would happen code executed jquery older hide check resolved display ahhhh happened ok indeed valid workaround cases", "d": "7/2015"}, {"body": "btw surprisingly jquery ui works dialogs dropdowns nt like", "d": "7/2015"}, {"body": "sorry late comment important canjs able add inserted event everytime new dom added page anyway could made public future releases", "d": "7/2015"}, {"body": "justinbmeyer open ticket think look problem functionalitycapability standpoint rather reexposing internal method", "d": "7/2015"}, {"body": "use case working right usage would replace call finally guess dom operations however many items would function version mean one dom operation per item collection", "d": "7/2015"}, {"body": "guess dom operations however many items every class manipulation done individually node fact simple via jquery nt mean lot nt happening hood", "d": "7/2015"}, {"body": "case guess adding function switch cost either one mentioned running node makes much simpler requiring less function calls", "d": "7/2015"}, {"body": "made comments pr", "d": "7/2015"}, {"body": "fix bug causes error chrome ie firefox tested chrome ie firefox calling function using empty string argument reproduce error note function called directly script triggering custom event element using elementtrigger eventname function isarraylike obj isarraylike", "d": "7/2015"}, {"body": "open separate ticket jquery repo showing happen using public api", "d": "7/2015"}, {"body": "ignore previous comment investigation problem found cause problem caused improper public api use previous jquery versions fail silently jquery show error", "d": "7/2015"}, {"body": "create variable part nt seem worth mostly used supported amp support tests use", "d": "7/2015"}, {"body": "support tests use btw worth checking still applies maybe could switch support tests even", "d": "7/2015"}, {"body": "seems switch support tests work fine doc ready pr coming edit issue created", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "digging issue nt blocker thought nt try hide native xhr nt encourage direct manipulation either use jquery abort method instead everything works fine dmethvin think still worth fix one minor speedbump status text op case compat error abort fixing requires changes branches sure something necessarily support", "d": "7/2015"}, {"body": "timmywil using jquery abort method option browser aborts request reason computer suspend example", "d": "7/2015"}, {"body": "refresh without reinvestigate affect current master compat initial comment said", "d": "7/2015"}, {"body": "dmethvin affects way handler fires affects way handler fired instead one", "d": "7/2015"}, {"body": "way around", "d": "7/2015"}, {"body": "ah confused", "d": "7/2015"}, {"body": "full disclosure founder codecov would love see jquery use codecov coverage provider would love share many reasons believe codecov great fit industry leading code coverage anything help transition would make available thank", "d": "7/2015"}, {"body": "anything help transition would make available help implement pr sure work together couple questions take us use nt use travis use jenkins testswarm qunit setup example reports look could run jquery link us report sure others questions", "d": "7/2015"}, {"body": "take us use nt use travis ci method works two primary uploading methods javascript native method global method look creating pull request mention create thank gnarf use jenkins testswarm qunit setup jenkins yes qunit yes testswarm used merge coverage reports automatically keep record one see example click unified dropdown example reports look could run jquery link us report reference customer repos yet ran coverage jquery yet try attempt pull request sure others questions happy help", "d": "7/2015"}, {"body": "happy help feel free ping gnarf freenode irc jquerydev questionshelp need", "d": "7/2015"}, {"body": "per decided deprecate use plain objects unit tests tweening plain objects well", "d": "7/2015"}, {"body": "tested shchukax test case ipad mini ios works fine looks like something fixed point", "d": "7/2015"}, {"body": "accept patch uses instead available", "d": "7/2015"}, {"body": "nice see disapear", "d": "7/2015"}, {"body": "jaubourg responding question yes", "d": "7/2015"}, {"body": "phistuck sharing happiness regarding disappearance regexp using url api good idea though probably need wait supported browsers implement nt checked right general consensus avoid multiple code paths especially small noncritical parts code like one", "d": "7/2015"}, {"body": "jaubourg ajax used frequently cost creating element terms memory possible garbage collection issues engine pretty big compared url constructor looks like everyone internet explorer supports since interface identical one exposes share interface small change", "d": "7/2015"}, {"body": "well piece code executed request agree small change fail see critical seems rather logical wait support grid contain browsers implement url object simply switching nt speak team though take", "d": "7/2015"}, {"body": "review discussed take time nt critical creating link element times second nt perf memory problem", "d": "7/2015"}, {"body": "bad nt scrolled enough see used ajax code proper still agree dave perf issue", "d": "7/2015"}, {"body": "performance terms speed less issue memory usage failing free memory old internet explorer bug example concerning creating element pretty big hammer avoid exactly interface see understand reasoning well", "d": "7/2015"}, {"body": "saying memory leak would fix", "d": "7/2015"}, {"body": "saying one checked say element big hammer better used sparingly options mentioned browsers use problems element references leaks much lightweight preferred way constructing developers used create whole new document resolving url components example even bigger hammer also replaces", "d": "7/2015"}, {"body": "worked everywhere would better case changing seeing concrete problem requires change since interface identical one exposes share interface small change isfunction windowurl new url documentcreateelement may provable issue think likely change code", "d": "7/2015"}, {"body": "note regression caused", "d": "7/2015"}, {"body": "per yesterday meeting cantfixing issue branches", "d": "7/2015"}, {"body": "decided going fix ever hence label", "d": "7/2015"}, {"body": "seems good idea would like get issue reassigned", "d": "7/2015"}, {"body": "sorry coming late bug fixed version jquery stated bug report need make inline style display none add duration see bug action fork robertmaxrees fiddle bug changes still happening bug fixed edge currently edge compat version though", "d": "7/2015"}, {"body": "pr might fix nt added tests confirming yet", "d": "7/2015"}, {"body": "mistake bzbarsky replace amp etc see pr replace anything", "d": "7/2015"}, {"body": "case absolutely positioned thing way get css containing block nothing aware offhand agree pretty suboptimal probably add something suggest cssom", "d": "7/2015"}, {"body": "focus blur click events fires native event certain condition calling native event currently way pass trigger data event handler well best solution though use special event hook handle need modify trigger hold data add handle method invoke event handler function obviously generalized cover events think guys js focus fire native event possible blurfocus sequence correct trigger function safeactiveelement amp amp thisfocus", "d": "7/2015"}, {"body": "solution risk introducing strange behavior flips arguments arguments cases reentrant safe nt see us using approach", "d": "7/2015"}, {"body": "agreed retrospect allowing users pass data caused lot issues one focus management highly flaky browsers already nt take much cause problems", "d": "7/2015"}, {"body": "issue xhtml regressions coming seems like appropriate time revisit think optimal course action would fixing qunit xhtml ensuring start regularly testing xhtml mode ca nt expect keep xhtml tests green test harness keeps breaking requiring webserver serve test suite everything served appropriate headers ca nt ensure various urls served correct contenttype conditionally skip based specific criteria case would significant effort xhtml failing test would need manually checked understand failing whether used example appending unclosed tag bug jquery get tests passing skipping xhtml people might notice difference failure difference lead people ignoring failures see fewer regressions", "d": "7/2015"}, {"body": "pr feedback welcome", "d": "7/2015"}, {"body": "version pr", "d": "7/2015"}, {"body": "added note blog post", "d": "7/2015"}]