[{"title": "remove generatechangedetectors deprecation message", "body": "oct remove code deprecation message", "num": "4433", "d": "9/2015"}, {"title": "performance regression tree update benchmark", "body": "see numbers went", "num": "4432", "d": "9/2015"}, {"title": "prepend strange value ngoptions", "body": "hi everybody created select directive inspect options see values prepend type example person directive directive dropdowndict function return restrict e scope ngmodel ngdata ngchange amp placeholder placeholder require ngmodel replace true template ngdata ngmodel placeholder placeholder select link function scope elem attr ngmodel scopeupdatemodel function value ngmodel setviewvalue value calling template thanks", "num": "4429", "d": "9/2015"}, {"title": "support control class", "body": "hey guys trying use field multiple selectable options way documented selectcontrolvalueaccessorts although doc block maybe slightly outdated eg want get selected values returns first option selected according writevalue nt seem supported right planned feature going supported planned look", "num": "4427", "d": "9/2015"}, {"title": "use parser html instead browser", "body": "advantages could use webworker server side native renderers proper camel casing get rid vs errors proper line numbers rely attribute order sure would relevant could support self closing tags custom elements need ship parser offline compilation cc pkozlowskiopensource tbosch", "num": "4417", "d": "9/2015"}, {"title": "discussion rename di bindings providers", "body": "using word binding two core ideas framework causes confusion proposal rename binding provider bindings providers component providers constructor version new provider http toclass customhttp pros similar angular binding means databindings cons different di systems mostly use word binding igorminar mhevery", "num": "4416", "d": "9/2015"}, {"title": "query string parameters lost entering route", "body": "small test app alpha three routes configured follows access routes using routerlink place query string params url read fine however instants read parameters noticed route loads fine url updated removing query string parameters words accessing route loads errors route right application loads url turns asked gitter one one seems know happening missing something looked source code nt find missing configurations providing assuming bug", "num": "4413", "d": "9/2015"}, {"title": "module exported member formdirectives", "body": "attempting follow examples related using forms looks like angular ca nt find formdirectives javascript import bootstrap component view formbuilder validators formdirectives controlgroup ngfor component selector todoapp view template directives ngfor export class todoapp bootstrap todoapp using", "num": "4409", "d": "9/2015"}, {"title": "dart transformers handling queries", "body": "similarly two way define queries angular component queries key property decorators nt queries recorded metadata component around current code merge query definitions definition generated property decorators afaiu definitions ignored transformed dart code property decorators work understanding correct transformers would benefit kind updates ones described vsavkin kegluneq please comment", "num": "4408", "d": "9/2015"}, {"title": "dart transformers handling input output hostbinding hostlistener", "body": "today added property result generate setters generate getters think best way handle would merge info metadata record property decorator typescript component class cmp input pa input pbname pb output ea output eventname eb hostbinding hpa tohost hostlistener event handleevent lead metadata component properties pa pb pbname events ea eb eventname host hpa tohost event handleevent class cmp cc vsavkin", "num": "4407", "d": "9/2015"}, {"title": "case error dynamicchangedetector assumes propertybindingindex set", "body": "errors get obfuscated exceptions raised dynamicchangedetector evaluating instance null occurred dart", "num": "4405", "d": "9/2015"}, {"title": "chore decorators rename injectable decorator", "body": "building angular apps typescript cases need enforce metadata generation adding decorator class explained detail example following services class dependency ts nt emit decorator metadata decorators class class dataservice constructor http enforce ts emit metadata adding decorator class foo causes ts emit metadata class dataservice course using decorator feels hacky angular already decorator actually used dart currently use one use case injectable causes ts emit metadata class dataservice turns injectable word nt really fit happening confuses users based name one think make injectable service fact actually want say something like hey ts please emit metadata class sure special meaning dart also yet another decorator used generate metadata former case consider introducing new decorator better name otherwise rename something appropiate suggestions change could also considered breaking change ideally ts going get better could remove new name entirely since actually unrelated angular nt look like ts going introduce anything like near future mhevery vsavkin would love hear thoughts cc wardbell cburgdorf", "num": "4404", "d": "9/2015"}, {"title": "contains viewfactory twice", "body": "content looks might dupes like someone investigate", "num": "4403", "d": "9/2015"}, {"title": "ngfor trackby equivalent", "body": "nt think equivalent angularjs right way maybe using custom looks like bit difficult feature planned later", "num": "4402", "d": "9/2015"}, {"title": "object undefined", "body": "getting object undefined accessing object service component hard coded data javascript variable working fine shows object type object array datajson dataservicets import injectable import http injectable export class dataservice tdata id name malad gateway device cisco id name kandhivali gateway device juniper data constructor http torx map res gt resjson subscribe res gt thisdata res datapagets import component view coredirectives import dataservice dataservice component selector datapage view template directives coredirectives export class datapage query tquery constructor public dataservice dataservice", "num": "4401", "d": "9/2015"}, {"title": "use observable watch", "body": "trying something like correct thisvariable eventemitter", "num": "4393", "d": "9/2015"}, {"title": "", "body": "nt think use inject routedata bit surprising compared routeparams gives us service think rare case one ca nt rely type annotation app something provided framework obtain object whereas routeparams provides get method less surprising coherent friendly opinion would follow issue", "num": "4392", "d": "9/2015"}, {"title": "feat http implement type", "body": "serialize update could done via update client need reconstruct server responses typescript let req objectassign res headers resheadersvalues indexhtml let res objectassign req body reqbody headers new headers reqheaders", "num": "4391", "d": "9/2015"}, {"title": "determine observable operators extensions include angular core", "body": "landed exposing bare rxnext observable without operators included partially including main rx import caused everything explode large amount files partially avoid bloating core codebase another operators list currently implemented operators core set included things like additionally specific operators exposed specific apis example http add equivalent also set specific observable utility implementations available things like etc list alternately could fix build issue simply bring entire module pare move closer production begin optimize cc jeffbcross vsavkin edit version complete unminiified rx roughly half operators cjs roughly half operators", "num": "4390", "d": "9/2015"}, {"title": "feat ngcache service", "body": "summary would great service similar angular serverrendering able hook calls made bootstrap even wait calls done via transferring state client transparent developer least framework problem create service would mean everyone would want transfer state client server developer would also hook lifecycle server rendering provide way relaying client current workaround moment created subclass introduce service able serialize responses rendering client preloading cache calls hit cache avoid another trip server backgroundwhy ecosystems nt luxury di means forced create universal modules io level file swap rather class swap eg isomorphicfetch angular huge benefit converting one class another environment since depend interfaces concrete types testing also end huge benefit dealing universal code example server version requires one line change assuming create import keep mind di env swap awesome feature framework touch moment since nt use di framework proposal introduce cache service better cache factory namespacing similar angular typescript abstract class cache abstract key string boolean abstract get key string likely strings abstract set key string value void return item set abstract tojson key string abstract serialize string class inmemory extends cache class redis extends cache class localstorage extends cache const cacheproviders provide cache useclass inmemory provide cache useclass redis provide cache useclass localstorage", "num": "4389", "d": "9/2015"}, {"title": "binding unknown properties aria attributes results error", "body": "binding unknown properties aria attributes result error example result following exception component whose template includes code loaded exception ca nt bind ariaexpanded since nt known property element matching directives corresponding property turns aria attributes often include dashes converting ariaexpanded inst really correct perhaps escaping mechanism aware root cause though binding anything unknown cause issue exception ca nt bind foo since nt known property element matching directives corresponding property please let know plunker needed create one", "num": "4385", "d": "9/2015"}, {"title": "guide beta broken", "body": "noticed guide latest release broken seems module injected missing", "num": "4384", "d": "9/2015"}, {"title": "ngmodel contenteditable html entities bug", "body": "example try remove change input caret move space change notice textarea content contain change weird issue handling html entities unwanted behaviour expect change instead change", "num": "4383", "d": "9/2015"}, {"title": "property binding working polymer element", "body": "trying use polymer elements inside component errors console polymer paper input rendering fine message blank", "num": "4380", "d": "9/2015"}, {"title": "support directives", "body": "example attempting reimplement dropdown tried refactoring simpler amp reliant template however causes problem seems error directive used host property understanding correct potentially allowed angular behavior explicitly forbidden", "num": "4379", "d": "9/2015"}, {"title": "using ngmodel instead ngmodel nothing", "body": "simple example thought would work setting text value input element nt work set also attribute works expected design bug", "num": "4373", "d": "9/2015"}, {"title": "transformer hangs export cycle dart inputs", "body": "", "num": "4370", "d": "9/2015"}, {"title": "forced lower case binding declarations means wo nt work", "body": "yes know issue issue closed closing solved problem well another example problem means ca nt write simple binding declarations touch existing dom properties happen mixed case ton force write directives nt example expression throws error feel ought able something perhaps kind special syntax indicate upper case need creativity", "num": "4368", "d": "9/2015"}, {"title": "dart improve baseexception abstractbindingerror show original stacktrace message", "body": "baseexception swallows original exception stack trace dumped console useful suggestion abstractbindingerrortostring removed probably also injectordebugcontext throws null pointer exception debugcontext null default thanks andreas", "num": "4365", "d": "9/2015"}, {"title": "use event name", "body": "component defined like used template exception thrown regarding press event renamed event expected component event definitions would take precedence defaults version", "num": "4363", "d": "9/2015"}, {"title": "allow host components register attributes", "body": "try something like angular gets angry plan supporting", "num": "4362", "d": "9/2015"}, {"title": "router lifecycle interfaces exported builds", "body": "router lifecycle interfaces canreuse candeactivate onactivate etc nt included builds error thrown even implementing interfaces nt exist example", "num": "4361", "d": "9/2015"}, {"title": "misleading error incorrectly binding toclass", "body": "something like instead throws really silly trying bind value class simple plunkr", "num": "4358", "d": "9/2015"}, {"title": "better syntax multielement structural directives", "body": "currently many usecases ngfor ngif structural directive applied multiple elements possible today using element syntax ugly unnatural forced manually desugar databinding like intentionally avoiding front ngfor conceptually means template already template element problem without marker nt know desugar microsyntax solved imposing limitation element single attribute directive placed dataevent binding multiple directives throw error really nt make sense use element proposals welcome long resulting syntax natural", "num": "4355", "d": "9/2015"}, {"title": "upgrade systemjs builder", "body": "repo using systemjs still systemjsbuilder roughly corresponding system number breaking changes way path configuration works trivial cc igorminar pkozlowskiopensource", "num": "4354", "d": "9/2015"}, {"title": "angular subscribe event unless user subscribes", "body": "currently angular subscribe every event published component whether use site declared subscriptions via binding prevents components tracking subscriptions eg allocate resources demand rather eagerly", "num": "4352", "d": "9/2015"}, {"title": "persist data switching tabsroutes", "body": "switching routes keep state application observed class reinitialize every time switch tabs view reinitializing make class initialize route accessed first time eg", "num": "4350", "d": "9/2015"}, {"title": "call function ngfor finished", "body": "call function ngfor finished", "num": "4349", "d": "9/2015"}, {"title": "question remove urlsearchparamsunionfixer", "body": "since http nt support dart anymore urlsearchparamsunionfixer required cc jeffbcross", "num": "4347", "d": "9/2015"}, {"title": "rename modulesexamples directory modulesdevplayground modulesplayground", "body": "contents directory really tests mini apps testingdevelopingplaying core pseudolanguage make look like canonical place examples related", "num": "4342", "d": "9/2015"}, {"title": "change detection support accessing noninstancebased context", "body": "common example enums example dart enum state open closed component class controller state state discussed shortly vsavkin nontrivial change suggestions provide idea static context make specific template", "num": "4340", "d": "9/2015"}, {"title": "resolving service dependency", "body": "hi troubles instanciating dependencies dependency called nagivationmapper component bootstrap see inject navigationmapper service also home component router time dependency resolved far concerned nt need inject navigationmapper also home component nt child injectors supposed work anyway even inject bindings component error ideas help would great already used strategy resolving dependencies parent component resolved instance could router blocking instances best regards tiago braga", "num": "4334", "d": "9/2015"}, {"title": "fix router routerlink respect location strategy", "body": "particular binding still makes routerlink produce href without leading hash obviously work copying opening link another tab tracks internal bug", "num": "4333", "d": "9/2015"}, {"title": "exception raised dynamic load component template", "body": "plunker demo import component view bootstrap coredirectives elementref dynamiccomponentloader component selector mycmp view directives coredirectives template class mycmp constructor thisvalues component selector myapp view directives mycmp template class myapp constructor elementref elementref loader dynamiccomponentloader thiselementref elementref thisloader loader load thisloaderloadnexttolocation mycmp thiselementref ref gt documentqueryselector body appendchild reflocationnativeelement bootstrap myapp click load button throws following exception", "num": "4330", "d": "9/2015"}, {"title": "need solution speed", "body": "angular really wonderful many ways big problem tooo slow open angular page first time example chinese simple page includes nearly components one js file html template means somebody open simple page server need send files client including angularjs systemjs traceurruntimejs really many files even spdy example site using spdy still need wait long time chrome shows anything way server side using nodejs koa web framework fast think index page cms gon na components single page means open page server need send files client solution many files problem thanks", "num": "4328", "d": "9/2015"}, {"title": "create setters query fields", "body": "transformers create setters keys queries map instance following create setters fields also work property decorators already work transformers delegate reading annotations directive resolver", "num": "4326", "d": "9/2015"}, {"title": "change detection error infinite loop", "body": "found case change detection enters infinite loop error code question key expression defined triggers infinite loop full plunker example", "num": "4323", "d": "9/2015"}, {"title": "angular event type conflict dart html libdts event types", "body": "rename much code uses dom apis angular would unreasonable users renamehide otherwise manually resolve two types note also rename property", "num": "4322", "d": "9/2015"}, {"title": "rename", "body": "binding mostly used context di imo confusing renaming cc vsavkin mhevery igorminar", "num": "4320", "d": "9/2015"}, {"title": "feat router provide routeconfig object auxroute", "body": "right must use auxiliary routes provide version like open suggestions", "num": "4319", "d": "9/2015"}, {"title": "bootstrap complexity creep due routerprimarycomponent", "body": "recent platformbootstrap refactoring added requirement people bind primary component bootstrap since applications utilize multiple app feature api change enables making bootstrapping significantly complicated majority developers consider creating special bootstrap entry point multiapp apps keeping normal boostrap simple common usecases", "num": "4318", "d": "9/2015"}, {"title": "fix build restore pub serve version pr travis job", "body": "currently prs failing travis master presubmit jobs unaffected due unknown issue prs tested opposed compilation happens presubmit master branches submitting pr run prs issue investigated add pr better outright failing", "num": "4316", "d": "9/2015"}, {"title": "add common js bundles output", "body": "x make examples use bundles otherwise automated testing bundles decide tool produce cjs bundle webpack vs browserify vs systemjs builder add cjs bundle build keeping system bundle cc pkozlowskiopensource vsavkin igorminar jeffbcross", "num": "4315", "d": "9/2015"}, {"title": "docs special treatment template directive docs", "body": "currently documentation generated directives using template contains info regular typescript class annotations constructor members etc makes documentation complete useful people using directives templates taking example ngclass directive see lot irrelevant info info relevant someone wants modify extend directive constructor members property setters lifecycle hooks info useful template authors present part section readable proposal let introduce special template directives template contain section info contained section presented differently parse decorator clearly present info relevant template authors selector type directive mean able clearly distinguish structural directives require element properties used template events used template place describing given event fired local variables declares ex cc naomiblack igorminar petebacondarwin", "num": "4313", "d": "9/2015"}, {"title": "getting started doc small typo mistake", "body": "liveserver open src getting started section run liveserver opensrc", "num": "4311", "d": "9/2015"}, {"title": "componentrouter script angular documentation", "body": "find componentrouter script angular documentation", "num": "4309", "d": "9/2015"}, {"title": "optional argument create method keyvaluedifferfactory iterabledifferfactory", "body": "apart better optional argument method could useful sending additional settings factory creating customized differ using custom differfactory also could useful make public", "num": "4307", "d": "9/2015"}, {"title": "unable get query string value using location angularjs", "body": "hi big issue herei url like need query string value used two process locationsearch locationsearch edtid get required value browser consolei explaining code please help resolve issue find required value", "num": "4305", "d": "9/2015"}, {"title": "private work classes", "body": "myclass appear neither dts file docs igorminar", "num": "4301", "d": "9/2015"}, {"title": "docs router docs old style square bracket links recognized dgeni", "body": "needs search fix pass eg", "num": "4300", "d": "9/2015"}, {"title": "feat router ability specify route component", "body": "would cool able specify route component easy reference route possibly route attribute parameters single route routeconfig attribute minus component type", "num": "4298", "d": "9/2015"}, {"title": "remove traceurruntimedts", "body": "nt use traceurruntime runtime nt typings file exists definitely typed", "num": "4297", "d": "9/2015"}, {"title": "remove npm releases", "body": "nt use traceur feature useful users", "num": "4296", "d": "9/2015"}, {"title": "classes static members private constructors dts", "body": "class myclass private constructor static func generates following dts file incorrect interfaces static members probably generate myclass namespace addition myclass interface", "num": "4294", "d": "9/2015"}, {"title": "problem ie edge v", "body": "hi angular sample execute gulp play ie browser launched automatically page browser show loading check console error fichier ligne colonne says french systemconfig defaultjsextensions true l objet ne g\u00e8re pas la propri\u00e9t\u00e9 ou la m\u00e9thode config strange works chrome im working windows node npm gulp cli", "num": "4291", "d": "9/2015"}, {"title": "lifecycle callback sync directive creation order", "body": "directives created order defined dependency information constructors however order directives calling callback directives depending order defined eg forms relies fact already called match element", "num": "4289", "d": "9/2015"}, {"title": "view updated using jspm package", "body": "hi pretty new angular starting learn whole js stack using latest technologies typescript node systemjs development specific test code see view get updated works perfectly link different traceur libraries installing via jspm create error console nt work could one endless mistakes created package code testing make debugging easy possible runsh file holds required installation steps hours searching online studying libraries came conclusion data binding could culprit case see js events browser view still remains every update example timeout button event thanks lot", "num": "4288", "d": "9/2015"}, {"title": "refactor eventemitter rename next emit", "body": "ultimate fate decided small steps taken start decoupling rx since abstraction rx one small step disambiguate subject change method note substantial discussion properly leverage observables inside angular codebase", "num": "4287", "d": "9/2015"}, {"title": "input type radio formbuilder", "body": "radio inputs work formbuilder looks like radio buttons yet implemented", "num": "4285", "d": "9/2015"}, {"title": "rebind expressions filter", "body": "filter config change time need listen rebind expressions using filter nt want set filter run need rebind", "num": "4283", "d": "9/2015"}, {"title": "sourcemap work chrome", "body": "run gulp servejsdev cmd worked chrome chrome debug tools see js file loaded jsmap loaded server dist folder jsmap existed directory end js file like exportsanimateapp animateapp sourcemappingurlanimateappjsmap apply cjswrapperexports cjswrapperargs", "num": "4281", "d": "9/2015"}, {"title": "ngchange inside directive work", "body": "work", "num": "4280", "d": "9/2015"}, {"title": "pipes missing viewfactory angulardts", "body": "alpha using typescript get error try use pipes component component trimmed generates error using typings file bundled alpha added valid property shown see comments inline interface viewfactory viewmetadata viewdecorator right way go something else mind", "num": "4279", "d": "9/2015"}, {"title": "replace systemregister bundle cjs bundle", "body": "developer workflows based around cjs browserify webpack systemjs since systemjs consume cjs bundles suggest replace systemregister bundle cjs bundle case developers use browserify webpack able use still work system notes systemregister lot overhead comparing cjs naive measurements showed difference using cjs bundle important submodudles think advantage cause prevents users depending private api finally produce cjs bundle think change getting started guide use webpack instead systemjs reason webpack provides lot better experience box including typescript babel webpack config angular project written typescript lines long get source maps dev server live reload productiondev modes good first impression clear path production setting cc igorminar mhevery rkirov jeffbcross", "num": "4278", "d": "9/2015"}, {"title": "add fakeasync bundle", "body": "see igor started exporting fakeasync sept commit released sept possible sept release missed sept commit say sure fakeasync bundle turn text search bundles ps lot work done make developer friendly", "num": "4277", "d": "9/2015"}, {"title": "ngclass class bugs", "body": "issue related jqplot following code make jqplot appear code additional note another element appear normally jqplot chart missing seems angular bug edit using angular", "num": "4276", "d": "9/2015"}, {"title": "proposal compiler attempt resolve view directives injector", "body": "currently directives used component resolved type binding specified directives property view decorator fine prevent selector collision help testing truly allow dependency injection components directives would incredibly useful directives resolved parent injector especially multitenant apps take look example abstract class greetingcomponent whomtogreet string component selector greeting view template class genericgreetingcomponent extends greetingcomponent constructor thiswhomtogreet everyone component selector greeting view template class bobgreetingcomponent extends greetingcomponent constructor thiswhomtogreet bob var config usebobgreeting true var bindings configusebobgreeting bindingspush bind greetingcomponent toclass bobgreetingcomponent else bindingspush bind greetingcomponent toclass genericgreetingcomponent component selector app view directives greetingcomponent template class appcomponent bootstrap appcomponent bindings obviously great app everyone loves bob accounting absolutely name everything directives defined view decorator directives property resolved parent injector would easy peasy would nt clutter main template conditionals also extend router component property routeconfig elements attempt resolve parent injector well look spirit dependency injection think components directives get love services guys think", "num": "4275", "d": "9/2015"}, {"title": "race condition npm install", "body": "clone repo setup described run usually get errors form different files npm install angular preinstall usersxxxangular node toolsnpmchecknodemodules purge npm dependencies stale unknown state purging npm err git checkout error local changes following files would overwritten checkout npm err git checkout testscasesunittestsservicescolorizationts npm err git checkout please commit changes stash switch branches npm err git checkout aborting npm err git checkout npm err darwin npm err argv install npm err node npm err npm npm err code npm err command failed git checkout npm err error local changes following files would overwritten checkout npm err testscasesunittestsservicescolorizationts npm err please commit changes stash switch branches npm err aborting npm err npm err npm err need help may report error npm err npm err please include following file support request npm err usersxxxangularnpmdebuglog one every x amount calls installation works usually use suspend installation passes successfully environment git version node npm nvm", "num": "4273", "d": "9/2015"}, {"title": "url divergent behaviour respect nonstring params", "body": "using directive param bound array cards routeconfig path cards cardid component cards card class app public cardids number results dev environment url argument component far good problem using url url behaviour extends anything nt string far tell solution present manually coerce parameters standard string representation use incoming params treated uniformly absent api typing params suppose could left documentation would remain nuisance however issue might seem trivial since obviously strings directly passed url broader capability internal linking behaviour useful disregard offhand developer perspective ideally best practice would obtain", "num": "4272", "d": "9/2015"}, {"title": "rfc routing templatecontroller pairs angular router", "body": "order aid migration component router need convenient way configure route controller template pair couple options support route declaration overloading property provide mechanism api", "num": "4270", "d": "9/2015"}, {"title": "fix use string tokens di", "body": "via igorminar", "num": "4269", "d": "9/2015"}, {"title": "dts file contains several symbols marked private", "body": "classes functions etc marked doc annotation part dts file looks like reexport error fixed fixed throw error see dts generation mhevery please review dts file determine reexported mistake", "num": "4265", "d": "9/2015"}, {"title": "classinterface members marked private present dts files", "body": "cases class members package private used internally angular part external api currently documentation members hidden dts file contains hide dts files well ca nt use typescripts visibility markers like need angular core code outside current class able access would great solve properly typescript meantime adjust dts generation template look members emit dts generation process cc alexeagle mprobst rkirov", "num": "4262", "d": "9/2015"}, {"title": "single error compiler reported errors", "body": "see sample error compiler error work error reported errors thrown makes confusing users first error useful cc tbosch compiler alxhub case bootstrap specific", "num": "4261", "d": "9/2015"}, {"title": "docs differentiate classinterface constructor fieldsgetters methods", "body": "currently mixed together together members makes hard understand interfaceclass create groupings members type constructor special expose public constructor section fields getters usually treated user maybe document together sure look precedence mdn somewhere else methods need invoked throw exceptions need treat differently members", "num": "4259", "d": "9/2015"}, {"title": "combine api member title type signature single line", "body": "currently docs createhostview view look like createhostview createhostview protoviewref protoviewref atindex number dynamicallycreatedbindings resolvedbinding member name present twice would great single title contains name signature signature syntax highlighted different style examples prevent visual confusion also add github style link icon pi character shows left title user mouses title clicking icon character updates windowlocation deep link title example mouse heading", "num": "4258", "d": "9/2015"}, {"title": "navigating docs url fragment causes browser overscroll", "body": "go title hidden behind toplevel site header", "num": "4256", "d": "9/2015"}, {"title": "missing type signatures api docs", "body": "check renamed anchorelement soon field missing type signature getter missing type signature method missing return type signature", "num": "4255", "d": "9/2015"}, {"title": "forms cyclic di dependency component valueaccessor validator", "body": "following pattern results cyclic di dependency roughly mycomponent gt ngcontrol gt mycomponent workaround dart injectable class deferredvalidator function delegate call ngcontrol control return thisdelegate control component bindings const deferredvalidator const binding ngvalidators toalias deferredvalidator multi true class mycomponent mycomponent self ngcontrol cd deferredvalidator dv cdvalueaccessor dvdelegate solution two possibilities bless workaround perhaps even provide part forms api alter value accessor api cause dependency cycle", "num": "4253", "d": "9/2015"}, {"title": "broken error message ngfor ngif element", "body": "see print rather end error message second exception", "num": "4246", "d": "9/2015"}, {"title": "fix throw exception input string", "body": "forgot import example instantiate manually meant instantiating global object instead provided passing input nt match string check method returning undefined instead exception raised", "num": "4245", "d": "9/2015"}, {"title": "improve binding errors directives", "body": "hackaton today come across confusing error messages could greatly improved suggestions improve error messages possible detect case individually actual messages need work english first language main direction letting know wrong see many people falling things specially new syntax realising wrong ngfor example result suggested ngfor example result suggested comments really unclear supposed inject ngforin instead ngfor obvious developers use instead loops many still using typescript even though remember syntax either set default ngfor rename ngforof template syntax would suffer bit could save weird errors perfect solution opinion single ngfor directive work either ngfor example result related error suggested comments called asterisk declaration know name nt one maybe reference easily directive amp component missing properties example result suggested cc pkozlowskiopensource", "num": "4244", "d": "9/2015"}, {"title": "calling variable function type raise context error", "body": "ie raise proper way ofcourse name properly error context makes difficult debug", "num": "4241", "d": "9/2015"}, {"title": "injectors errors", "body": "trying inject service viewinjector others error occur nt right context ie exception provider ngservice changing bindings ie work like charm documentation explanation differences one deprecated", "num": "4240", "d": "9/2015"}, {"title": "formbuildergroup typings nt work expected", "body": "found jsil hackathon fbgroup street thisaddressstreet required throws error unexpected type victor savkin angular team suggested following workaround fbgroup street thisaddressstreet required", "num": "4239", "d": "9/2015"}, {"title": "transformer refactor use new templatecompiler", "body": "see process phase walk files contain directives create instance directivemetadata normalize via call also reads template optionally serialize normalized meta data via call json string phase walk files read metadata components defined file metadata directives referenced annotation components call output dart file called contain exports host views every component form provision annotations reflector ie annotation class component class value host phase parallel phase walk stylesheets call generate dart file included generated template file notes output codegen methods method return source imports import alias module id need added source also filename file generated without suffix keeping filename important generated files reference", "num": "4235", "d": "9/2015"}, {"title": "angular js api reference page broken", "body": "sure correct place report issue angularjs website api reference page working see attached screenshot looks like version missing url load angular scripts", "num": "4234", "d": "9/2015"}, {"title": "bug router target attribute respected used routerlink", "body": "expectation link open separate tabwindow tracks internal", "num": "4233", "d": "9/2015"}, {"title": "nganimate nt work use ngview body", "body": "example basically nt add intermediate classes showing hiding workaround pretty simple nt use ngview body example move ngview onto div works fine scattered issues stackoverflow say get odd behaviour adding ngview body nt serious nt think warning docs", "num": "4232", "d": "9/2015"}, {"title": "feat add support withcredentials", "body": "hey trying figure send cookies throught cors since ca nt access objects directly able set option remember using http angular maybe could writting custom easier way", "num": "4231", "d": "9/2015"}, {"title": "ngif bug model updated controllerside select", "body": "hello pluker see drop lists one always displayed displayed ngiftrue case study display one selected item print console value selected drop via ngchange function see value select nt change remove ngif works try nghide ngshow model correcty updated well look selectedaccount value always matches selected item ngif nghide nothing bug controllerside thanks look marie", "num": "4230", "d": "9/2015"}, {"title": "missing ngvalidators", "body": "using expected changes introduced commit present compiler complains ngvalidators exported edit tsddts contains following contains following header", "num": "4229", "d": "9/2015"}, {"title": "router reuse outlet contain component", "body": "update alpha run error scenario follow navigate mysubpath app subscribed router location change checks user credentials still valid case redirected login upon sucessfull login redirected mysubpath following exception thrown seems instruction path field set true nt instanciated component yet probably redirect triggered introduce method returning false component exception thrown component container defining child routes displaying tabs probably reused", "num": "4228", "d": "9/2015"}, {"title": "nginclude properties declared onload ca nt modified", "body": "hi use edit element ca nt change element searching way modify property set inside onload nt find think issue best regards pierreemmanuel", "num": "4227", "d": "9/2015"}, {"title": "read query parameters route", "body": "currently way read query parameters route instance routeconfig configured path articles id article component article user navigates browser get access value sort page supported router nb get id someid routeparams without problem would like query params see bits generate queryparams routerecognizer class public methods", "num": "4225", "d": "9/2015"}, {"title": "di require nesting arrays specifying deps", "body": "currently following work deps array nested follows di able handle examples equivalent", "num": "4224", "d": "9/2015"}, {"title": "missing dart reflection interfaces superclass", "body": "pattern like never call event listener", "num": "4221", "d": "9/2015"}, {"title": "moving broke browsers", "body": "fact chrome edge made far see issues causing unit tests examples firefox known issue comes actual bug firefox apparently fixed firefox nightly broken browsers nt polyfill symbol occurence framework internally uses string nt exist nt expose issue opened", "num": "4216", "d": "9/2015"}, {"title": "exception reporting error message swallowed", "body": "solution pass call", "num": "4215", "d": "9/2015"}, {"title": "allow forwardref host", "body": "following code javascript directive selector child class child constructor host skipself p hello consolelog p component selector hello view template directives child export class hello obviously fail hello defined child option available move child hello use forwardref property works think much annoyance moving entire directivecomponent think would nice well able use forwardref annotation tried pass forwardref right side like nt work saw forwardref transpiled function would end guessing since ts nt even compile line saw tranpiled using property seems possible considering use example would nice able", "num": "4213", "d": "9/2015"}, {"title": "bootstrap error browsers support requestanimationframe", "body": "error raised running unit tests according happens android", "num": "4209", "d": "9/2015"}, {"title": "event properties consistency", "body": "hi everyone properties events different alias behaviour want alias property hyphens use want alias event hypens working plnkr best regards tiago braga", "num": "4207", "d": "9/2015"}, {"title": "template directives throw using without template element", "body": "common mistake forget add developer makes mistakes following errors thrown errors actionable nt provide sufficient hint developer fix problem would great detected situation templatestructural directive used without required element syntactic sugar throw actionable error", "num": "4205", "d": "9/2015"}, {"title": "enabledebugtools longer works result bootstrap", "body": "documented takes applicationref returns componentref", "num": "4202", "d": "9/2015"}, {"title": "angulario search result return links production urls instead relative urls", "body": "spin local harp server try search api doc redirected click links makes looking things local version docs impossible would great search results returned relative urls", "num": "4199", "d": "9/2015"}, {"title": "detecting changes actions triggered outside component", "body": "hi found issue updating component property bound template appears changedetector detecting changes plunker shows happening happens event triggered outside angular comment line uncomment line everything works expected working alpha test easily example sure bug known limitation nevertheless proceed situations putting pkozlowskiopensource cc talked gitter although nt plunker reproduced issue time ps nt mind extreme complexity simple use case idea incorporate everything used jquery real world scenario first detected issue", "num": "4197", "d": "9/2015"}, {"title": "interpolations routed resolves timeout", "body": "tried use simple approach application router turned simple one issue router transcluded ngcontent bound first really interesting issue settimeout items bound plunker click entities see issue thanks explanationresolution", "num": "4192", "d": "9/2015"}, {"title": "urlresolver warning building dart", "body": "", "num": "4190", "d": "9/2015"}, {"title": "custom component two way binding", "body": "hi possible component two way binding customcomponent supposed input button example possible accessing host read article read implementation ngmodel component similar behaviour best regards tiago braga way using typescript ca nt implement interfaces saw solutions", "num": "4189", "d": "9/2015"}, {"title": "angular versionalpha use one component another component", "body": "trying import home component main component working alpha plnkr", "num": "4188", "d": "9/2015"}, {"title": "query callbacks fire asynchronously", "body": "following usecase currently throws error directives modified dirtychecked javascript component binds foo template class foo component consturctor public query foo query thisqueryaddcallback gt thisqueryforeach q gt qfoo false however callbacks fired asynchronously within angular zone valid code possibility infinite async cycle case nt think big concern possibility exists even regular promises note might naturally fall moving queries rx ts stream dart cc vsavkin", "num": "4186", "d": "9/2015"}, {"title": "remove router bundle", "body": "lazyrequired shim unblock master breakages bundle shim router instead document shim required router bundle work older browsers", "num": "4184", "d": "9/2015"}, {"title": "remove build step router", "body": "might needed user bring shim see shim used", "num": "4183", "d": "9/2015"}, {"title": "error componente input date class nginvalid solutions ref badinputchecker", "body": "scenario input type date required form linked ng model date add value component use delete key erase value angular adds ng invalid class component adds value undefined making form invalid solution function adds badinputchecker undefined component solution would add null thus component invalid requirid solutions angularjs function badinputchecker scope element attr ctrl var node element var nativevalidation ctrl hasnativevalidators isobject nodevalidity nativevalidation ctrl parserspush function value var validity elementprop validitystateproperty detect bug inputemail also sets validitybadinput validitytypemismatch see ignore case still read erroneous email old return validitybadinput amp amp validitytypemismatch undefined value best regards", "num": "4180", "d": "9/2015"}, {"title": "requestanimationframe callback arguments passed", "body": "requestanimationframe callback correctly gets timestamp argument raf callback get timestamp argument causes javascript animations fail", "num": "4179", "d": "9/2015"}, {"title": "testlib module export", "body": "available maybe missing better technique way know trigger dom events something like example test code looks like think stole one angular core tests alternative perhaps better expose", "num": "4177", "d": "9/2015"}, {"title": "step step yields blank screen browser", "body": "using chrome firefox osx follow first steps angular javascript create indexhtml copypaste provided text guide create appjs copypaste provided text guide start python simplehttpserver port hit see three requests network tab localhost containing html appjs look browser display see blank screen console errors inspecting response localhost see html tags expected see html tag contents either populated replaced template declared appcomponent view template value", "num": "4176", "d": "9/2015"}, {"title": "add typings testlib testlibdts", "body": "", "num": "4175", "d": "9/2015"}, {"title": "missing forwardref queryviewquery throw", "body": "consider following code directives forwardref gt accordionitem export class accordion implements oninit constructor el elementref viewquery accordionitem items querylist thisitems items oninit consolelog thisitems component selector accordionitem view template export class accordionitem works returns results wierd since two children see plnkr problem missing remove property get error message pretty useful miss instead error get results throw similar error one see repro switch constructors class see errors thrown length results changes ps title includes nt test assuming works similar", "num": "4174", "d": "9/2015"}, {"title": "alpha changes", "body": "hi mostly post help anyone upgrading alpha alpha changes came accross http module imported http requestmethods naming capital letter case requestmethodsget requestmethodsget onchange lifecycle event onchanges best regards tiago braga", "num": "4172", "d": "9/2015"}, {"title": "router rfc use link dsl rather url fragment", "body": "currently redirect route takes string representing remaining unmatched url recognized makes hard tell whether redirection local absolute instead propose use route link dsl routerlink directive uses related", "num": "4170", "d": "9/2015"}, {"title": "dart viewencpasulation longer accepting enums", "body": "angular dart alpha view component accepted enum value encapsulation viewencapsulationnone throws following error error arguments constant creation must constant expressions question proffered way pass value enum viewencapsulation object alpha context enum angulardart lib stackoverflow", "num": "4169", "d": "9/2015"}, {"title": "tutorials mention platforms tools use", "body": "angular javascripts tutorials mention toolssoftware need used", "num": "4168", "d": "9/2015"}, {"title": "error message redirect page load goes nowhere", "body": "followup btford fix apparently checks nonterminal routes referenced link object main component config grid component get exception page load also working redirect limited code knowledge tried debug looks like code runs point simply returns function rootrouter called would love contribute plnkr see create one using latest git master version angular applies manual routernavigatexxx calls course though sure error messages handeled theory could handle currently logs error silently ignored", "num": "4166", "d": "9/2015"}, {"title": "routerdts alpha different one definatelytyped", "body": "", "num": "4165", "d": "9/2015"}, {"title": "onchange exists dts", "body": "alpha could use still works typings file appears list", "num": "4164", "d": "9/2015"}, {"title": "default pipes missing", "body": "", "num": "4158", "d": "9/2015"}, {"title": "getting error instantiation token promise", "body": "new angular currently playing doc files showpropertieshtml showpropertiests typescript import component view bootstrap ngfor component selector display appinjector friendsservice view template directives ngfor class displaycomponent myname string names array class friendsservice names array constructor thisnames alice aarav mart\u00edn shannon ariana kai bootstrap displaycomponent executing code giving following error exception error instantiation token promise original exception resolve parameters displaycomponent undefined make sure valid type annotations original stacktrace error noannotationerrorbaseexception new noannotationerror extracttoken arraymap native functionexecutelistwrappermap dependenciesfor executebindingresolve functionexecutemetadatacreatefrombinding functionexecutemetadatacreatefromtype injecting class array property friendsservice amp using normally making following changes working fine class displaycomponent myname string names array one suggest wrong", "num": "4156", "d": "9/2015"}, {"title": "hashbangs supported angular router", "body": "hashlocationstrategy supports hash fragments form appears mechanism change prefix support google ajax crawl spec", "num": "4155", "d": "9/2015"}, {"title": "namespace angular vs", "body": "anyway versions running without namespaces collating", "num": "4151", "d": "9/2015"}, {"title": "boolean attributes stopped working", "body": "recently code like", "num": "4150", "d": "9/2015"}, {"title": "refactor facade change eventemitter match rxjsnext subject rename plz", "body": "since eventemitter essentially subject implements alias js match structure semantics dart note validated semantics mapped dart also rename since often confused node calling subject cc robwormald vsavkin blesh", "num": "4149", "d": "9/2015"}, {"title": "proposal easy component rendering dynamically", "body": "easiest explain whatwhy use case dashboard application dashboard used render number different isolated components problem components rendered change based number different factors app user preferences one although handful components ever rendered one time hundreds components pool rendered completely dynamic experience nt want massive switch conditional construct lists everything although nicest possible using compile service directly would awesome know would solve problem lot people easy use api nt want get away declarative ui programming reasonable expect devs maintain switch like declaration hundreds code paths", "num": "4140", "d": "9/2015"}, {"title": "seems router exposed since", "body": "trying following nt work var cmp ng component selector cmp bindings service view templateurl mainhtml class constructor service function cmp service thisgreeting servicegreeting line gives router undefined ngrouterrouteconfig path redirectto setup path setup setup component setupcomponent console logged ng using sfx see router amp nt exposed", "num": "4137", "d": "9/2015"}, {"title": "fn created jasminepatchjs support", "body": "donefail option jasmine makes easy report error failed promise nt implemented zoneaware version jasminepatchjs therefore following test reports async timeout instead actual error huge priority worth fixing easy fix", "num": "4136", "d": "9/2015"}, {"title": "question binding undefined object produces error binding empty object cast interface ok", "body": "go hero details component see get binding error briefly console binding fails yet back promise http service however briefly makes sense prefer things either make hero initialize object cast interface original code import component view import routeparams import hero hero import heroservice heroservice import herodirectives herodirectives component selector myherodetail view templateurl appherodetailcomponenthtml directives herodirectives export class herodetailcomponent hero hero changed cast constructor private heroservice heroservice private routeparams routeparams let id routeparamsget id thisheroservicegethero id hero gt thishero hero", "num": "4134", "d": "9/2015"}, {"title": "launching app router redirectto kicking", "body": "tried redirectto path redirect heroes route load also tried luck error loads app nothing int get around launch additional route goes dashboard component mapped route", "num": "4133", "d": "9/2015"}, {"title": "ngtable coloumn customization", "body": "dear team one table customized filters sorting want make column wise customization like kindly help custom directive controller hazdik da india", "num": "4132", "d": "9/2015"}, {"title": "template rendering issue ie", "body": "plunkr demonstrates ie tr elements rendered outside table element works fine chrome firefox", "num": "4131", "d": "9/2015"}, {"title": "ngcontent render forof loop", "body": "maked example use ngcontent tag inside forof loop content render", "num": "4129", "d": "9/2015"}, {"title": "injecting something service type annotations", "body": "asked question get typescript include runtime type annotations used di learned include classes decorators fine components already decorators inject something service use inject manually specify dependencies create noop decorator trigger typescript runtime types workaround thanks", "num": "4120", "d": "9/2015"}, {"title": "api html files included distribution", "body": "started copying thousands files dist included persha snapshots gcs nt mean distribute", "num": "4115", "d": "9/2015"}, {"title": "commit conventions make optional", "body": "hey already run several times usually breaking change commits like breaking change tend forget line breaks instead chance could make optional causing quite headaches use semanticrelease everywhere uses strictly implements angular commit messages end minor releases githubnpm breaking changes thanks bouquet follow cc jo", "num": "4114", "d": "9/2015"}, {"title": "angular http working version", "body": "myhttpts import component view ngfor import http response httpbindings import observablewrapper component selector navbar viewbindings httpbindings view directives ngfor templateurl componentsnavbarnavbarhtml export class navbar people object constructor http http alert alert also working observablewrappersubscribe gt thispeople resjson code error showing resolve parameters navbar make sure valid type annotations even alert constructor showing", "num": "4113", "d": "9/2015"}, {"title": "router canactivate di", "body": "hook available decorator bit surprising compared lifecycle hooks simple functions component understand reason behind hook called component instanciated even think api would simpler everything function things stay like question possible use di hook plan support something like", "num": "4112", "d": "9/2015"}, {"title": "ngzone oneventdone accept different type callbacks", "body": "ngzone overrideoneventdone waitforasync nonwaitforasync callbacks time google acx project activity tracking need nonwaitforasync callback determine vm event loop end test bed used waitforasync callback determine angular isstable conflict give activity tracking callback test workaround makes integration test possible draft fix", "num": "4106", "d": "9/2015"}, {"title": "support change events custom elements", "body": "custom elements way send values webworker always grab value field change event long term plan allow developers specify custom events serializers", "num": "4100", "d": "9/2015"}, {"title": "input type number pattern regex integers working properly", "body": "hi ca nt quite say angular issue let give example point problem problem set input valid integer number plus one inputs valid nt happen regex nt allow anything integer value previous ones really nt workaround set input type text given pattern nt like idea edit seems like bound number input alone nothing ngmodel value even submitting form model contain number front even changing value still inside number input different number value popup guess closed", "num": "4098", "d": "9/2015"}, {"title": "add ngstyle coredirectives", "body": "exported array however referenced file added array", "num": "4096", "d": "9/2015"}, {"title": "inject parent child component dynamically loaded", "body": "component uses dynamiccomponentloader loadintolocation load component b dynamically component b constructor get parent injected onto", "num": "4090", "d": "9/2015"}, {"title": "route parameters lost reload", "body": "reload page isolated route work route params related fta im using router routeparams angular dart routes follow application entry point works fine routeroutlet routerlink routernavigate however page reload nt get positive match routes params ie refresh goto parent view child routes symptom true route params navigating directly refreshing works expected viewflights component instantiated symptoms routing params fails question define route configurations work parameters refresh links", "num": "4089", "d": "9/2015"}, {"title": "shadow dom emulation", "body": "hi working around shadow dom unfortunately chrome firefox currently supporting meantime using emulation said couple questions api use manipulate dom shadow dom know elementref class manipulate light dom let call way far concerned shadow dom emulation works way add attribute nghost working ngcontent existing html tags present component html add css attribute head html tag matches existing html tags attribute unfortunately one existing html tag another component add attribute component tag since adding attributes occur compiling oninit component shadow dom child components resolved yet inner html get attribute well behaviour makes sense since shadom dom supposed affect current component possible change inner components css best regards tiago braga", "num": "4088", "d": "9/2015"}, {"title": "angular template driven form radio button working", "body": "problem occurred fetching value radio button angular template driven forms used ngmodel two way binding angular getting value radio button doest return neither string boolean", "num": "4084", "d": "9/2015"}, {"title": "router proposal adopt convention route alias", "body": "propose adopt enforced convention naming convention route names titlecase rather camelcase think helps distinguish urls dsl consider also think goes nicely", "num": "4083", "d": "9/2015"}, {"title": "typo rendererts", "body": "creats gt creates", "num": "4073", "d": "9/2015"}, {"title": "npm install installs typings bundles root typings folder", "body": "run npm install installs typings bundles root typings folder fine put project keeps typings folder src folder end sets way make go folder tsconfigjson specifies file", "num": "4068", "d": "9/2015"}, {"title": "refactor webworker move web worker module", "body": "recapping irl convo alexeagle tl dr propose moving logic module sibling located sources inside module semantically considered children worker really different distribution child everything inside folder logically exportable catchall bundle technically contents worker happen safe export inside bundle nt play well children worker reexports much makes typings generation awkward would also mean distributing npm dart package cc yjbanov alexeagle mhevery igorminar todo x change public import path amp x move src directory x move tests move manualtypings modules amp add build step copy correct place x move worker test utils x update testunitdart testunitdartvm testunitcjs testunitjs run tests move docswebworkers x create packagejson copy tsd files x change paths examples import worker public api rename webworker worker x generate separate dts files worker amp x update typings tests test worker typings x generate separate bundles amp publish separate npm package scriptspublishnpmpublishsh x publish separate dart package scriptspublishpubpublishsh publish codeangularjsorg set party package talk yjbanov", "num": "4064", "d": "9/2015"}, {"title": "proposal support declarative binding view events observables", "body": "sure good idea even possible thought throw vanilla rx wanted listen dom event typeahead something something like current wanted equivalent something like works great rx stuff settles however wanted sort thing arbitrary event unrelated forms like mousedrag button click whatever good way see get observable dom event something like nt nearly clean proposed idea would provide way delegate bind arbitrary dom event subjectobservable could easily subscribed handled reactively something like totally made syntax point binding click event subject edit see current proposal saw believe emitting events component whereas idea usage within component thoughts", "num": "4062", "d": "9/2015"}, {"title": "component events mask event propagation", "body": "code creates issue conflates event bubbling event correct behavior event part components filter dom events otherwise sometimes get sometimes event", "num": "4059", "d": "9/2015"}, {"title": "fix router wildcard routes redirects", "body": "alpha route condition use case want invalid route set routes either go specific route run function custom logic reroute another option simple redirection would expect work requesting pattern work cc btford", "num": "4055", "d": "9/2015"}, {"title": "routerlink fails generate links nested routes dynamic parameters", "body": "try generate link nested router path dynamic parameter receive error generate link without using dynamic parameter nested router path works correctly use regular href absolute path link navigate correctly issue reproduced", "num": "4054", "d": "9/2015"}, {"title": "support preloading templates least testing", "body": "stands one write unit tests actual template template supplied via ca nt even fake component template even template override depends component b gets template via unsuccessful using mock dependent component b bother could use something like templatecache", "num": "4051", "d": "9/2015"}, {"title": "bug compiler token tostring returns tokentypeoperator", "body": "token tostring missing case returns called token type causes dart string interpolation fail example attempts report unexpected token", "num": "4049", "d": "9/2015"}, {"title": "support override bindings", "body": "today pretty sure means mock di binding mentioned properties properties set bindings component child injector inaccessible test developer would love wrong", "num": "4044", "d": "9/2015"}, {"title": "http requests lazy cold observables", "body": "http observable powered makes semantic sense requests lazy nothing happen subscribe called somewhere downrange currently calling immediately fire xhr irrespective whether request subscribed probably sideeffect eventemitter using subject thus could resolved rxnext goes generally opt observables things use subjects necessary see reproduction naive semantically better implementation suggested fix would backends etc initialize return observable could mapped response", "num": "4043", "d": "9/2015"}, {"title": "missing template", "body": "angular great access template syntax since intuitively write something like html prop prop quick debug info teaching angular case angular keyword work proposal allow keyword template reference component instance", "num": "4041", "d": "9/2015"}, {"title": "routernavigate overload accepts tuple", "body": "currently accepts url string like works would great able pass tuple like another option", "num": "4040", "d": "9/2015"}, {"title": "viewtemplateurl allow url relative component", "body": "relative application root url fine everyone keeping templates template directory like template next component want specify url relative component would become possible allowed url syntax leading next example template sibling component class file might appropriate johnpapa agrees", "num": "4039", "d": "9/2015"}, {"title": "typescript definition routeconfig shows error component constructor gt parameter", "body": "component takes routeparams constructor get typescript definition error editor code runs typings file likely needs updated component red underlines routeconfig", "num": "4038", "d": "9/2015"}, {"title": "chore move srccompiler srccorecompiler", "body": "middle shifting around folders looks like files added tbosch happy make move correct", "num": "4037", "d": "9/2015"}, {"title": "discuss remove", "body": "process shifting around modules still necessary modules bootstrap render would included angular dart core module users choose want reflective bootstrap exported static bootstrap exported dart users creating root component import libraries would import without worrying imports somewhere would make run server environment unfortunate different contents javascript dart nt ideas satisfy needs pickyourownbootstrap dart keeping core module representing everything need make angular app platforms think would better deviate platforms case able core module contents environments ie removing bootstrap js would preferable leave yjbanov ideas options", "num": "4036", "d": "9/2015"}, {"title": "testlib able call inject asynctestcompleter within throws instead", "body": "often useful complete test setup setup involves injection async invocation method injected service subsequent tests synchronous example describe removehero hero gt unfortunately throws", "num": "4035", "d": "9/2015"}, {"title": "component class one parameter constructor results typescript compilation error", "body": "consider following example generates ts compilation error argument type typeof mycomponent assignable parameter type type boils equivalent simpler example generates compilation error var dec typedecorator dec export class myclass constructor number number problem lies fact definition type contains new declaration argument causing myclass assignable type", "num": "4034", "d": "9/2015"}, {"title": "ngclass empty string class name", "body": "example herodetailcomponenthtml herodetailcomponentts addclass return thisheronamelength gt selected assume detail changes new hero selected parent list hero mr long name hero short first hero displays class selected present second hero triggers change value angular fails exception thrown line also fails way works arrayresult form ok objectresult form ok addclass return selected thisheronamelength gt", "num": "4033", "d": "9/2015"}, {"title": "fix dynamiccomponentloader make work viewencapsulationnative", "body": "simple scenario like component selector childcomponent view template loaded class childcomponent component view template encapsulation viewnative class dyncmp constructor dcl dynamiccomponentloader inj injector dclloadasroot childcomponent child inj results following runtime error obviously due dcl querying inside shadowroot used note works either consider bug intended behaviour", "num": "4032", "d": "9/2015"}, {"title": "error instantiation token promise", "body": "hi getting error trying resolve parameters class version documentation using setup mgechev trying create small form following code import component view bootstrap formdirectives formbindings formbuilder controlgroup stringmap component selector app viewbindings formbuilder view directives formdirectives styleurls bootstrapcss template demo form sku class app private skuform controlgroup bootstrap app already tried set value never success always getting error", "num": "4030", "d": "9/2015"}, {"title": "bundled throws errors firefox", "body": "using file run unit tests travis get following error could way compiled", "num": "4029", "d": "9/2015"}, {"title": "refactor move", "body": "introduces new module think exported since current approach core basic building blocks angular application task move reexport exports vicb landed big pr right merged reduced amount import targets change make sense use case thinking", "num": "4028", "d": "9/2015"}, {"title": "refactor deprecate import dart", "body": "discussed yjbanov deprecate export dart since users encouraged import often well defining root components import useful javascript developers using full bundle originally added line top part dart analyzer complained since tests examples still importing deferred change could land massive pr quickly deprecation line originally included top", "num": "4027", "d": "9/2015"}, {"title": "docs typings make typings match bundles", "body": "blocked angular typings files match bundles see info bundles includes core router coredts routerdts testingdts webworkerdts webworkeruidts also make sure typings get added definitelytyped get documented release process", "num": "4026", "d": "9/2015"}, {"title": "refactor reorganize testing bundle import", "body": "planning part pr already huge complicated moved issue modules currently inside combined single module called", "num": "4025", "d": "9/2015"}, {"title": "refactor include http router", "body": "discussed http router included angular bundle imported also included typings planned done decided defer change could land giant pr asap", "num": "4023", "d": "9/2015"}, {"title": "router property parentview undefined missing selector nested router", "body": "know tracked nt want contaminate thread issue issue referenced understand without selector valid works tried routeconfig new route path test component anothercomponent test class nestedrouter component selector hello view template directives routeroutlet routeconfig new route path nested component nestedrouter nested class personally used use selectors components first tried adding selector forgot specify one routeconfig new route path test component anothercomponent test class nestedrouter component selector hello view template directives routeroutlet routeconfig new route path nested component nestedrouter nested class latter case throws error message adding selector removing everything inside make everything works plnkr reproducing case also attacked issue referenced please close ps using edit plnkr updated", "num": "4022", "d": "9/2015"}, {"title": "question customvalidator templatedrivenforms", "body": "hi sample shows use templatedriven forms use custom validators scenario tried create sample basis current alpha unfortunately experienced general showstoppers import ngvalidators use mentioned codebase true constexpr see right mentioned code base contain everything necessary scenario solution workaround btw also wonder tell injector resolve kind multibinding used best wishes manfred angularmodulesexamplessrctemplatedrivenformsindexts", "num": "4021", "d": "9/2015"}, {"title": "dynamic routerlinks", "body": "hey guys playing around typescript wanted create routerlinks help ngfor help stringarray problems following example import component view ngfor bootstrap bind import routerbindings locationstrategy hashlocationstrategy routeconfig routeroutlet routerlink import compa scriptscompa import compb scriptscompb component selector app view template directives routeroutlet routerlink ngfor routeconfig path redirectto compa path compa component compa compa path compb component compb compb export class app buttons string constructor thisbuttons compa compb bootstrap navbar routerbindings bind locationstrategy toclass hashlocationstrategy try create routerlinks like get following error worked around issue handling href link changing template lines working think way help somehow", "num": "4020", "d": "9/2015"}, {"title": "exception component constructor masked angular", "body": "angular dart exception constructor reported properly exception message says error instantiation set breakpoint injector class see actual stack trace stored inner exception would help exactly pinpoint problem stack trace much valuable current one thrown error error instantiation activitycomponent package injectorinstantiate package injectornew package injectorinlinestrategyinstantiatebinding package elementinjectorinlinestrategyhydrate package elementinjectorhydrate package appviewmanagerutilshydrateview package appviewmanagerutilshydrateroothostview package appviewmanagercreateroothostview package dynamiccomponentloaderloadasroot package stacktrace stackzonespecificationregisterunarycallback package ngzonerununary dart async zonedelegaterun package ngzonerun package ngzonerununary package stacktrace stackzonespecificationregisterunarycallback package ngzonerununary dart async zonedelegaterun package ngzonerun package ngzonerununary dart async futureasynccomplete package ngzoneschedulemicrotask dart async zonedelegaterun package ngzonerun dart async futurethen package dynamiccomponentloaderloadasroot", "num": "4019", "d": "9/2015"}, {"title": "support bower package management", "body": "feature request may connected one main workflows today maintaining dependencies parties bower bowerjson contains dependencies bower command line used download modules transitively afterwards use modules like mainbowerfiles create list files fetched application gulp snippet looks like afterwards vendorjs included indexhtml situation angular downloaded npm also bowerjson file missing main property would possible maintain bower workflow would mean packages uploaded bower bowerjson filled properly workflow envision", "num": "4018", "d": "9/2015"}, {"title": "question fform", "body": "hi templatedrivenformssample defines controlgroup using formtag fform wondering really means whether shortcut longer syntax first sight seems bit strange handle gets value would expected something like f without assignment ideas behind wishes manfred", "num": "4017", "d": "9/2015"}, {"title": "routeparams available top level directives", "body": "primary component named ticket nested directive topnav part ticketclient component selector tickets view template directives const topnav routeroutlet routeparams routeconfig const const route path landing component landing landing const route path flights component viewflights flights const route path contact component picker contact const route path picker citydepart cityarrival datedepart datearrival component flightdisplay picker const route path order id level datedepart datearrival component vieworder order const route path ordercomplete component viewcomplete ordercomplete class tickets string name jit ticket application router router tickets thisrouter routersubscribe value print route changed value exists outside first level routeroutlet try acquire routeparams di inside topnav get following error exception provider routeparams topnav routeparams exceptionhandlercall ngzoneonerrorwithoutlongstacktrace ngzone moving topnav child outlet seems solve issue include topnav child view would assume routeparams top level global object might similar comments angular dart", "num": "4016", "d": "9/2015"}, {"title": "equivalent resolve component router", "body": "removal injectpromise injectlazy decorators equivalent functionality resolve ngrouteuirouter version would look something like js controller function mycontroller foo route config controller mycontroller url foos fooid resolve foo function routeparams fooservice return fooservicegetfoobyid routeparamsfooid imo one killer features current router uirouter remove async entirely controller makes super easy test canactivate etc hooks cover one use cases resolve preventing access routesstate ca nt see replacement case perhaps missing something tinkering idea like implementing resolve decorator alternative syntax might look like though limits string keys ca nt figure way pass bindings sure reflect allow us grab metadata annotations way hood keeps async injector simply matter executing resolver fn passing component overridden bindings thoughts", "num": "4015", "d": "9/2015"}, {"title": "type number passes string argument", "body": "setting field exception error evaluation ngmodel original exception type string subtype type num value original stacktrace using angular dart alpha fix set field string bzip dto object name tickets version description ticket commerce application author jack murphy jack rightisleftcom homepage environment sdk gt lt dependencies server dependencies jsonobject mongodart connectionpool dartson guinness shelf gt lt shelfstatic shelfroute client dependencies bootjack browser gt lt sass transformers dartson sass entrypoints webmaindart reflectionentrypoints webmaindart minify true commandlineoptions dumpinfo showpackagewarnings trusttypeannotations trustprimitives", "num": "4014", "d": "9/2015"}, {"title": "classactive longer working", "body": "earlier releases used activeclass property could used emit active class could used style active nav item alpha nt seem work bug alternative nt see change log", "num": "4013", "d": "9/2015"}, {"title": "benchpress overreporting chrome", "body": "running treeupdate benchmark chrome benchpress reports scripttimes purescripttimes higher reported previous versions chrome chrome chrome looking browser timeline chrome script time around assuming benchpress overreporting chrome note chrome team changed bunch event names chrome benchpress depends benchpress adapted new names see maybe names changed investigation required", "num": "4011", "d": "9/2015"}, {"title": "exception abstractchangedetector masking real exception oninit method", "body": "alpha test component loads angular component test however test component bug oninit lifecycle callback handler however completely masked another exception within angular abstractchangedetector code left exception useful following stack trace actually displayed browser console dart core list package abstractchangedetectorcurrentbinding package abstractchangedetectorthrowerror package abstractchangedetectordetectchangesinrecords package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchanges package lifecycletick package xxxxxxxxxxxxxxxxxxxxxxxxxxxdart dart async zonedelegaterun package ngzonerun setting breakpoint throwerror see stack going printed pretty useful estacktostring listfirst dart querylistfirst package componenttestoninit bug got masked dynamicchangedetectordetectchangesinrecordsinternal package abstractchangedetectordetectchangesinrecords package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchanges package lifecycletick package package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart", "num": "4010", "d": "9/2015"}, {"title": "override tostring exception", "body": "override tostring exception exceptionhandler errors show cc vsavkin", "num": "4009", "d": "9/2015"}, {"title": "di support custom error messages", "body": "able following di find mydependency throw meaningful message asking instance include module nt expect used app developers useful libraries frameworks cc igorminar mhevery", "num": "4008", "d": "9/2015"}, {"title": "support events containing event name", "body": "say directive following work currently specify element event name follows", "num": "4007", "d": "9/2015"}, {"title": "autoconfigurable bindings modules automatic application bootstraping", "body": "think binding mechanism great powerful find verbose configure also generates unnecessary coupling applications framework would great introduce ability modules self configured angular becomes opinionated providing sensible defaults outofthebox know binding constants available like feel like shortcuts imho mechanism modules get autoconfigured http hello world application could look like typescript import component view ngfor autoconfigured import autobootstrap main import http response import observablewrapper autoconfigured component selector view directives ngfor template export class httpcmp people object constructor http observablewrappersubscribe res gt thispeople resjson autobootstrap see autoconfiguration eliminates lot boilerplate code case allowing use http object including http module also makes component bootstrapping easier developer binding process completely transparent course bootstrapping mechanism explicit binding still supported nghttp get auto configured default including following configuration class httpconfiguration work registry needed order keep track classes implementing annotations something like export class reflectregistry public annotationregistry map new map constructor add annotation cls void var annotationlist array thisannotationregistry annotation thisannotationregistry annotation annotationlistpush cls getforannotation annotation array return thisannotationregistry annotation export var reflectregistry reflectregistry new reflectregistry function register annotations classes annotated inside object application bootstrapping process angular check registry get bindings configuration classes joining priority order application third party moduleframeworktooling add configuration classes override defaulted bindings needed might useful also annotation make configuration classes taken account depending environment example might useful change bindings depending devicebrowser capabilities ie touch screen resolution cors support etc leads easier use module system plug amp play import amp play also end enables automatic bootstrapping application bindings automatically loaded also possible annotate main component application another annotation ie get registry bootstrap automatically please let know think truly nt know every detail angular source code roadmap might missing something writing feature request please nt hesitate letting know also excuse think proposal useful try build pr", "num": "4004", "d": "9/2015"}, {"title": "transformers record property metadata", "body": "example class classwithdecorators propdecorator propdecorator propdecorator set b value propdecorator get b return null create instance reflectioninfo propmetadata set closes", "num": "4003", "d": "9/2015"}, {"title": "estimated beta release date", "body": "estimated targeted beta release date unfortunately milestones section show esitmated dates next alphas information many alpha going", "num": "4002", "d": "9/2015"}, {"title": "benchpress use angular error reporter", "body": "currently di wraps exceptions benchpress making hard debug benchpress use angular error reporter properly report exceptions", "num": "3999", "d": "9/2015"}, {"title": "contribute layout test chrome notified event name changes benchpress", "body": "event names chrome traces changes break benchpress see unfortunately public announcement changes chrome team nt consider events public api however chrome team suggests could contribute layout test checks events expect something along lines add ourself watch list test expectations see", "num": "3998", "d": "9/2015"}, {"title": "refactor set annotations outside router factory", "body": "currently build script router sets routeconfig canactivate annotation functions angular inside router factory setting annotations outside factory would allow used build component annotations router instantiated", "num": "3993", "d": "9/2015"}, {"title": "improvements error messages inexisting bindings", "body": "alpha whenever binding undefined generic error message thrown like stacktrace bellow binding undefined accidentally imported case alpha upgrades renamed happen app development due typos well tools getting better order find binding causing currently go multiple bindings project remove one one rerun app nt know feasible would great message least componentdirective name binding found undefined maybe binding position", "num": "3990", "d": "9/2015"}, {"title": "alpha typeerror rxsubject function", "body": "consider example code typescript import component view bootstrap import routeconfig routerbindings routerdirectives component selector home view template class home component selector main view directives routerdirectives template routeconfig path home component home class main bootstrap main routerbindings throws following errors going seen debugger point error occurs rxsubject indeed nt exist located rxdefaultsubject", "num": "3987", "d": "9/2015"}, {"title": "ondestroy component without lifecycleeventondestroy", "body": "noticed ondestroy called even component defined intentional behavior thanks", "num": "3985", "d": "9/2015"}, {"title": "remove special case dartanalyzer warning", "body": "fixed remove special case dartanalyzerjs shouldignore prevents style output breaking build", "num": "3984", "d": "9/2015"}, {"title": "tslint checks code patterns produce bad output", "body": "discussed mtgs last week yjbanov particular want help contributors avoid running wall realize changes nt work dart version simplest way work cases outlaw ts syntax currently produce reasonable dart output example statements made toplevel program tricky tradeoff made casebycase basis", "num": "3981", "d": "9/2015"}, {"title": "better developersmd write tests", "body": "discussed mtg last week w mhevery igorminar yjbanov hard people contribute angular several patterns write tests unclear best emulate like document best way unit tests endtoend tests", "num": "3980", "d": "9/2015"}, {"title": "router property component null child router redirect", "body": "took figure one tl dr step route nested router without redirect throw error message tl dr confusing explaining little bit consider following code javascript routeconfig new route path main component nestedrouter main class mainrouter routeconfig new route path logged component loggedincmp logged new route path login component loginformcmp login class nestedrouter step myproject main throw error error message dissapears add redirect nested router redirect obviously specified path step directly child router path work error nt know logic redirect path navigation worked error message basically idea advise user add redirect nested router avoid error message since nested router work main component forcing component redirected wo nt better solution every case plnkr using check uncomment edit ablu ran issue see gitter chat plnkr seems problem abscence recognizing specified component nt recognize component handling path workaround works skips directly children path children path fails", "num": "3979", "d": "9/2015"}, {"title": "bind polymer custom event angular", "body": "want use polymer components angular given work angular converts ab event listner camel case ab polymer quote current state ways archive", "num": "3975", "d": "9/2015"}, {"title": "dgeni typescript incompatible ngtype generation", "body": "dgeni generates type typescript throws error compilation manually replace dgeni generated works fine", "num": "3972", "d": "9/2015"}, {"title": "reflection transformer rewrites webworker bootstrap", "body": "ui developers bootstrap webworker application calling currently transformer rewrite throw since bootstrapstatic nt defined", "num": "3971", "d": "9/2015"}, {"title": "error bootstrapping application", "body": "upgrading alpha seeing error bootstrap using router http following approach angular examples source listed error error instantiation function platformstrategy href mydemoapp router function platformstrategy href original exception typeerror rxsubject function original stacktrace typeerror rxsubject function new eventemitter new executereflectfactory injectorexecuteprotoinstantiate injectorexecuteprotonew injectordynamicstrategyexecuteinjectorgetobjbykeyid injectorexecuteprotogetbykeydefault injectorexecuteprotogetbykey injectorexecuteprotogetbydependency injectorexecuteprotoinstantiate error context", "num": "3969", "d": "9/2015"}, {"title": "implement nglistinvisiblebutactivelightdoms", "body": "followup implement api getting list live light doms visible ui projection points inactive views instantiated participate change detection visible many cases simply slow application api would return list element path xpath invisible light dom cc mhevery tbosch", "num": "3967", "d": "9/2015"}, {"title": "dgeni output type annotation var const currently missed", "body": "following var const nt output vartype dgeni", "num": "3965", "d": "9/2015"}, {"title": "support injecting attributes", "body": "", "num": "3961", "d": "9/2015"}, {"title": "fix router navigation broken using nglink directive", "body": "trying navigate clicking links generated nglink directive fail display content nglink generating relative path instead absolute path causes instruction found use href absolute path navigation works correctly routerlink directive generates absolute path link example gist", "num": "3959", "d": "9/2015"}, {"title": "query string parameters available via routeparams instance", "body": "user visits url like access queryparam via routeparams component configured match pathpart route rootrouter class calls navigate method constructor passes parameter path part url discarding query string parameters", "num": "3957", "d": "9/2015"}, {"title": "angular forms boilerplate", "body": "hi anyone good simple example forms without much boilerplate code read wanted since implemented need solution bind object without much effort also saw example bind object driven form html html js javascript thisform thisformbuildergroup code thisentitycode validatorsrequired name thisentityname validatorsrequired thisformvaluechangestorx subscribe res gt debugger error gt debugger gt debugger subscribe changes form way automatically update object thank advance best regards tiago braga", "num": "3956", "d": "9/2015"}, {"title": "router broken update alpha alpha", "body": "exception error instantiation function platformstrategy href function router router function platformstrategy href original exception typeerror rxsubject function original stacktrace typeerror rxsubject function new eventemitter new executereflectfactory injectorexecuteprotoinstantiate injectorexecuteprotonew injectordynamicstrategyexecuteinjectorgetobjbykeyid injectorexecuteprotogetbykeydefault injectorexecuteprotogetbykey injectorexecuteprotogetbydependency injectorexecuteprotoinstantiate error context context element inventmanapp componentelement null injector injector make certain changes routerinjectables longer part routerdts please correct make required changes version", "num": "3955", "d": "9/2015"}, {"title": "importing formdirectives breaks compilation", "body": "importing adding list directives view like following error occurs unexpected directive value undefined view component myappcomponent error unexpected directive value undefined view component myappcomponent new baseexception executecompilercompile functionexecutelistwrapperforeach executecompilercompilenestedprotoviews zonerun zoneexecutengzonecreateinnerzonezoneforkfork run run zoneboundfn lib promise internal trycatch", "num": "3953", "d": "9/2015"}, {"title": "benchmarks report gctime scripttime", "body": "run benchmark get metrics except rendertime benchmark description depth forcegc false lang js regressionslopemetric scripttime runid samplesize useragent linux khtml like gecko viewcache true metrics gcamount gc amount kbytes gctime gc time ms majorgctime time major gcs ms purescripttime script execution time ms without gc render rendertime render time ms scripttime script execution time ms including gc render benchmark js cc tbosch", "num": "3949", "d": "9/2015"}, {"title": "access humanstxt", "body": "hi guys situation need access using angular url manager nt let access access files", "num": "3945", "d": "9/2015"}, {"title": "querylist reset dehydration", "body": "see", "num": "3944", "d": "9/2015"}, {"title": "public url angular", "body": "love try angular codepen public url reference use angular developer previews pens", "num": "3943", "d": "9/2015"}, {"title": "feat dgeni change hierarchy docs", "body": "grand reshuffling exports see many things previously lived outside folder live di forms directives changedetection consequently landing things imported presents problem current docs side navigation would toplevel modules core huge list things underneath first way solve comes mind change subnav represent logical children toplevel module ie thoughts wardbell mhevery naomiblack", "num": "3941", "d": "9/2015"}, {"title": "issue typings include constructor definitions classes dts", "body": "became important extend example work see list errors error ratingratingts supplied parameters match signature call target error timepickertimepickerts supplied parameters match signature call target trying self constructor type parameters come string parsed dgeni templates", "num": "3938", "d": "9/2015"}, {"title": "add testlibdts definitelytyped", "body": "looks like make dt yet postponed next release nt even considered", "num": "3936", "d": "9/2015"}, {"title": "alpha componentref", "body": "hi breaking changes alpha throws bootstrap way exist changed hashlocation best regards tiago braga", "num": "3935", "d": "9/2015"}, {"title": "http module longer available sfx builds alpha", "body": "able find way including http module sfx bundles alpha embeded bundle alpha bundle seem like alpha somewhere http module available another way include using systemjs ofcourse please let know thanks", "num": "3934", "d": "9/2015"}, {"title": "npm readme add usage bundle", "body": "description npm package include instructions use directly js new webpage beginner may tend use root folder instead including first script tag nt cause error message functionalities available eg data binding nt work without error therefore line misleading added line stating something like", "num": "3930", "d": "9/2015"}, {"title": "intercepting eventsproperties renders", "body": "goal way intercept eventsproperties renderer could things like create custom event handlers ie touch events swipe etc create custom dom elements events properties things like jqueryext js widget library integration simple event integration need able register custom event need know need create custom element upgraded jqueryui library system needs able deduce jqueryui event property bindingsevents registered using normal dom api using custom api proposal way register synthetic domrenderer requirements needs done ui thread needs fast create lot bindingseventselements needs element scoped since different elements different eventsproperties integrate schema compiler easily throw typos integration schema allow us bridge webcomponents api additional api registering interceptors per element name allow custom code run element creation event registration property updates", "num": "3929", "d": "9/2015"}, {"title": "dgeni nt output constructors dts files", "body": "dgeni output public constructors dts files", "num": "3926", "d": "9/2015"}, {"body": "see consensus pkozlowskiopensource corresponding issue created", "d": "9/2015"}, {"body": "move issue angular sorry", "d": "9/2015"}, {"body": "could nt rely afair also supports line numbers sure like proper camel casing point think conform html nt try reinvent wheel", "d": "9/2015"}, {"body": "give details keen idea really remember techno aimed improving standard coffe script dart successful widely adopted parser would make easy amp tempting deviate html imo could increase fragmentation amp frighten users really want maintain parser part angular ref", "d": "9/2015"}, {"body": "vicb already deviated html please nt pretend valid html syntax already frighten users way see need remember dashcasecamelcase conversion special cases terrible user experience frightening users even", "d": "9/2015"}, {"body": "sure like proper camel casing point think conform html nt try reinvent wheel vicb looking current user experience feedback toons people bump issue following standards also given users tool works according expectation saying one another totally live current system since understand yeh got tradeoffs make really want maintain parser part angular ref understanding sort already serverside compilation would nt even raise case fact need parse templates serverside anyway top parser sides would allow us remove parser compiler framework runtime saying need absolutely rather serious advantages approach let consider seriously", "d": "9/2015"}, {"body": "would love going set javascript property feel like use javascript name html enforced name html standards argument nt feel like project much standards anyway mean writing code base typescript supporting dart also notation people like problem think polymer excellent project prefer using upcoming web standards", "d": "9/2015"}, {"body": "alexpods nt pretend valid html syntax valid html syntax pkozlowskiopensource understanding sort already serverside compilation afaiu use parse templates server side top parser sides would allow us remove parser compiler framework runtime today use browser builtin parser already need embed kind parser runtime situation would even regarding runtime footprint saying need absolutely rather serious advantages approach let consider seriously fully agree consider carefully weigh pros amp cons jump discard idea mhevery listed advantages original message disputable imo think consider amp sides benefits see implementing nonhtml compliant parser proper camel casing get rid innerhtml vs innerhtml could support self closing tags custom elements kasperpeulen nt feel like project much standards anyway mean writing code base typescript supporting dart typescript mostly proposals types close enough standard plus transpiles user exposed ts prefer wrt dart would say code base ts nt see issue transparent jsts developers", "d": "9/2015"}, {"body": "vicb imo benefits camelcasing selfclosing tags errors proper line numbers lt would huge wine especially detect pbs ex funky autocorrections done html browsers understand would still runtime codesize gains measure several versions parser would good one code path means got one set bugs fix anyway discussed measured decided upon", "d": "9/2015"}, {"body": "wondering new typescript tsxjsx features ts could leveraged parser order allow type safe templates", "d": "9/2015"}, {"body": "writing observations first week deepdive angular one overloaded terminology may cause confusion learning framework component property event bindings ref also property bindings private dependency injector related issue discussion annotating emitting metadata change might lean favor something like", "d": "9/2015"}, {"body": "vsavkin think would help keep name thinking renaming submitting issue nt end proposing seems like common terminology di see guice personally nt mind dropping rename well sound right", "d": "9/2015"}, {"body": "think would understand renaming concept yet might good keep mind people got used term binding also using term provider might make people think concept providers like although otoh provider somehow even wed sep victor berchet notifications githubcom wrote vsavkin think would help hostbinding keep name thinking renaming submitting issue hostbinding nt end proposing bind seems like common terminology di see guice personally nt mind dropping bind rename toxxx well new provider http toclass customhttp sound right reply email directly view github", "d": "9/2015"}, {"body": "hessgoogle think confusing two different things providing binding di injecting something thing dont think renaming help enforcing emitting metadata typescript however agree binding heavily overloaded term wed sep pascal precht pascalprecht gmailcom wrote think would understand renaming concept yet might good keep mind people got used term binding also using term provider might make people think concept providers like although otoh provider somehow even wed sep victor berchet notifications githubcom wrote vsavkin think would help hostbinding keep name thinking renaming submitting issue hostbinding nt end proposing bind seems like common terminology di see guice personally nt mind dropping bind rename toxxx well new provider http toclass customhttp sound right reply email directly view github", "d": "9/2015"}, {"body": "long thought sort confusing said feel like providers key sort nt much better referring things services components personally component services bind thing tovalue foo bar users quite happy term service think", "d": "9/2015"}, {"body": "wardbell matanlurey comments leaning towards changing", "d": "9/2015"}, {"body": "naming change take look big picture view see impacts public apis eg", "d": "9/2015"}, {"body": "want change well way overloaded problem introduces yet another new concept something nt need right inclined toward robwormald suggestion although introduces new concept well albeit familiar concept already teach dependencies part dependency injection call property picayune might notice sometimes supply explicit binding array rather name dependent thing nt mind someone suggestions fail none mention bindings kind case would vote lengthy accurate", "d": "9/2015"}, {"body": "wardbell think would generic since also property decorator also sort dependencies ppl might wonder treated dependencies", "d": "9/2015"}, {"body": "agree generic seems specific especially bind value factory nt make lot sense although realize may create confusion users familiar angularjs", "d": "9/2015"}, {"body": "would nt anymore also even though might cause confusion first sounds cool", "d": "9/2015"}, {"body": "really think", "d": "9/2015"}, {"body": "matter pure english within world sw provider dependency equally generic biggest problem provider yet another word angular lexicon nt need provider provide used answer context would say provides something injected another thing word already called dependency teach early every would ng dev read dependency knee jerk reaction something injected constructor either tho component constructor constructor one dependencies precisely reaction want dev nothing new learn w seen telling ng passes constructor get done reasons familiar term correct instinct instinct reason happen favor unambiguous", "d": "9/2015"}, {"body": "phone mangled text instinct reason point dev nt understand reason providers simply knows without thinking must supply thing goes constructor learned di leaned dependency injection", "d": "9/2015"}, {"body": "learned", "d": "9/2015"}, {"body": "wardbell right providers yet another concept thought angular developer familiar notion providers would agree nt think use word dependencies following use case say directive wants publish validator reasonable use name provider binding directive either validator provides validator reasonable call dependency ngvalidator dependency mycustomvalidator", "d": "9/2015"}, {"body": "ok sold proviso start talking early often context dependency injection igorminar must add provider term glossary pascalprecht take heed need start driving term provider throughout di chapter lock developer brain think outloud revised discussion might look like part depends upon outside thing thing one dependencies dependency injector supply dependency help dependency corresponding provider register providers injector write asking class create new register provider new injector register provider injector means di binding di binding association key provider key provider pair write associate key type provider class ask injector supply something asking key eg injector checks container existing instance requested thing nt one injector asks corresponding provider create thing adds newly created thing container know new component instance gets child injector general child injector access every dependency created parent injectors component instance asks something child injector unable supply thing child injector walks parent tree finds injector either requested thing create one using corresponding provider developer may know parent injector make thing needs perhaps developer requires child injector instance required thing either case developer would specify di binding key provider pair thing component array process kind di binding write manually registering provider injector", "d": "9/2015"}, {"body": "well considering listed pros cons renaming databindings leaving similar di systems", "d": "9/2015"}, {"body": "probably looking formdirectives definition looks like", "d": "9/2015"}, {"body": "mgechev thanks", "d": "9/2015"}, {"body": "agree approach outline see comment think prior compilerintegration changes landing urgent update vicb vsavkin could branch compilerintegration update understand property annotations happy point right direction", "d": "9/2015"}, {"body": "approach makes sense however cycles make happen currently addition work done compilerintegration branch obsolete effort put recommend wait landed make sugary kind changes", "d": "9/2015"}, {"body": "think needs context", "d": "9/2015"}, {"body": "using reflection dart would metadata classes annotation used transformer trigger metadata generation quite similar required ts could decorator ts imo reasonable name", "d": "9/2015"}, {"body": "reasonable name guess see coming objection reasonable fact decoration really means thing expects dependencies injected problem means exactly opposite means decorated class injected something else capable injected something touchable touched something injectable injected nt exactly decoration needed write would seem adding decoration tell angular reader injected fact decoration completely unnecessary injectable something else without decoration need decoration class constructor dependencies injected following class requires decoration constructor expects dependent instance injected accurate horrible decoration name might name injectable catches developer offguard thinks add every class might injected fact needs add decoration class injected dependency one could argue keeping name follows done late harmless add class parameterless ctor matters going inject target class something else wo nt actually able inject class something else unless dependencies injected first otherwise injector ca nt construct third point decisive part argument becomes injectable something else addition decoration without injector could create therefore move accept present state things move pascal christoph find way explain reader", "d": "9/2015"}, {"body": "fact decoration completely unnecessary foo injectable something else without decoration probably biased angular dart background dart way know class dependencies unless kind reflection info available dart amp nt optional", "d": "9/2015"}, {"body": "make create another separate decorator ts use leave believe never intended used framework consumers", "d": "9/2015"}, {"body": "kind funny naming things actually one hardest things spring java autowired annotation purpose anything related metadata generation simply means state dependencies annotated class injected di system requiresdependencyinjection requiresdi could another meaningful name", "d": "9/2015"}, {"body": "issue makes sense thoughts suggested names like also find little bit confusing past tense like makes sense sure clear di required resolving arguments constructor bit confusing nt carry enough semantics abstract developers aware di works one like makes sense sure clear di required resolving arguments constructor verbose nt carry enough semantics nt indicate dependencies injected one suggestion", "d": "9/2015"}, {"body": "believe injectable never intended used framework consumers jessegood surely intention happens decorator lying round used workaround issue need way enforce ts emit metadata emitmetadata abstract developers aware di works mgechev sure end thing ts even using angular di maybe something generic like good fit enforces ts", "d": "9/2015"}, {"body": "suggestions", "d": "9/2015"}, {"body": "think stop thinking word injection limiting options purpose pascalprecht proposal emit metadata bind class component cases use services maybe something generic thinking injected like edit tommym thinking component service component service something else", "d": "9/2015"}, {"body": "ericmartinezr decorator needed make class injectablebindable great name pascalprecht suggesting rename actually need decorator di able inject constructor class like gives us impression make class injectablebindable pascalprecht blogpost explains well", "d": "9/2015"}, {"body": "pascalprecht getting tightly coupled underlaying language used implementation ie typescript might good idea decorator enforcing meta data generation general case talking dependency injection something specific could suitable", "d": "9/2015"}, {"body": "must say kind like idea ericmartinezr saw similar approach spring framework annotations like etc annotations nt much serve important purposes allow di consume add documentation context given class purpose agree similar proposals lowlevel tsspecific", "d": "9/2015"}, {"body": "like well describes purpose class fits nicely list etc thing could said actually needed class able used service di nt really see problem would good convention nice side effect generating metadata injections required", "d": "9/2015"}, {"body": "tommym could say proposed naming think main issue fact needed probably issue tackled another angle force user add decorator classes injected way metadata emitted matter something like throw something like far every proposed name fail way added blow entire machine think even specific add work add work nicely far decorator would trick", "d": "9/2015"}, {"body": "sth like service might encourage ppl always put service service class well service would take us original problem metadata generated even though needed means explain case service decorator needs added soon talking underlying nature ts anyways vote something nt necessarily framework specific happy get arguments speak service tue sep pm ericmartinezr notifications githubcom wrote tommym could say proposed naming think main issue fact needed probably issue tackled another angle force user add decorator classes injected bindingviewbindings way metadata emitted matter something like class dataservice bindings dataservice throw something like oh noes forgot add theneededdecorator pls add far every proposed name fail way added blow entire machine think even specific add injectable work add service work nicely far decorator would trick reply email directly view github", "d": "9/2015"}, {"body": "ha posted services replacement bindings", "d": "9/2015"}, {"body": "pascalprecht sth like service might encourage ppl always put service service class well service would take us original problem metadata generated even though needed fair point answer kind lot better bit extra metadata whole thing blow without dunno", "d": "9/2015"}, {"body": "fine renaming none suggestions far objectionably better currently unless could come good alternative stuck status quo rules less words better better", "d": "9/2015"}, {"body": "vote keep move person objected name early filled regret first would nt worry pragmas per robwormald nt second must name convey means developer works therefore opposed anything like emit metadata third kind nice limited something developer thinks service inclined toward wanted change fourth fully understand objection decoration helps injector inject thing made objection fact care whether injector inject something class also intend inject class something else short bother put decoration class intend inject class something else say intend class injectable therefore accurate wrt intentions fifth robwormald observes almost irrelevant unwary developer decorates class unnecessarily amount extra metadata material generated js tiny compared boatload crappola gets generated anyway support balance given effort necessary propagate change lack clear benefit tremendous amount real work yet say keep", "d": "9/2015"}, {"body": "filled regret even mentioning word pragma anywhere near js project even means developer rather works sort suggested service keeps things angular build scoped component directive service reasonably simple thing grok", "d": "9/2015"}, {"body": "fifth robwormald observes almost irrelevant unwary developer decorates class injectable unnecessarily amount extra metadata material generated js tiny compared boatload crappola gets generated anyway support class keep mind nt code size also impact applications runtime performance since unnecessary calls", "d": "9/2015"}, {"body": "pascalprecht might indeed although like see evidence worried discovered actually problem could list remove unnecessary decorations among perf optimization techniques better yet add task minimization pipeline erases decoration class lacks constructor parameters bigger problem finding term wo nt trigger dev apply decoration anyway precaution doubt doubt worth trying hard anyway demonstrate measurable perf risk got excited", "d": "9/2015"}, {"body": "valid point murky waters biiiit issue little hack solving nt making injectable dependency notating injects dependencies ducks sep pascal precht notifications githubcom wrote fifth robwormald observes almost irrelevant unwary developer decorates class injectable unnecessarily amount extra metadata material generated js tiny compared boatload crappola gets generated anyway support class keep mind nt code size also impact applications runtime performance since unnecessary calls metadata reply email directly view github", "d": "9/2015"}, {"body": "hasdependencies favorite think bigger fish fry", "d": "9/2015"}, {"body": "think interesting feature still needed", "d": "9/2015"}, {"body": "feature needed needs implemented", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "create component able hook lifecycle hook bindings change", "d": "9/2015"}, {"body": "sorry vicb could plunker example", "d": "9/2015"}, {"body": "danicomas one", "d": "9/2015"}, {"body": "danicomas future please use gitter channel support request thanks gh used report bugs", "d": "9/2015"}, {"body": "thanks possible statically via template directives would like dinamically", "d": "9/2015"}, {"body": "cc btford tommym pascalprecht", "d": "9/2015"}, {"body": "injector allows token include types agree cexbrayat allow type token merit valid token guess naming conventions also ref name real problem guarantee shallow copy since two types allowed arrayobject unaware types provide unless factory perhaps perhaps bindings routeroutlet missing needs include prop adding two seems best option since anyone create conventions", "d": "9/2015"}, {"body": "type cleanly injected", "d": "9/2015"}, {"body": "think convinced type would better pr welcome", "d": "9/2015"}, {"body": "mhevery btford thx answers agree type inject would offer getter guess data simple object like would ok", "d": "9/2015"}, {"body": "opened related pr start discussion feedback welcome", "d": "9/2015"}, {"body": "cexbrayat thanks starting already took look lvgtm", "d": "9/2015"}, {"body": "also include", "d": "9/2015"}, {"body": "would nice provide minimum set operators described default angular apis export allow users like different set operators able override binding di name important right overriding binding calling would return observable operators need", "d": "9/2015"}, {"body": "include factory di worth considering whether done", "d": "9/2015"}, {"body": "factory", "d": "9/2015"}, {"body": "would vote include people import need", "d": "9/2015"}, {"body": "problem moment really good way add fact observables returned core least ts js without operators gt thisfoos resjson map included connected async pipe thisfoos gt resjson retry included thisfoos gt resjson functionbind proposal gives us nice solution currently supported ts js import map retry myoperators thisfoos gt resjson dart distinct advantage provide similar set language streams", "d": "9/2015"}, {"body": "without function bind support typescript recommend including current rxjs core operators lot frankly subset things people want really nt want include could mirror rxts file create lite version stuck supporting requests operators recommendation use rx asis come make arguments ones removed nt think core enough", "d": "9/2015"}, {"body": "fwiw ones rxjs core ones nontrivial reproduce combination operators goal least chosen usage within netflix apps", "d": "9/2015"}, {"body": "dom elements nt property attribute name want bind attribute need prefix name ex error correct definitively want throw unknown properties since binding nonexisting properties would nt effect user error time", "d": "9/2015"}, {"body": "cool aware prefix must clearly documented whenever time go ga comes think however opportunity improve message give binding misses prefix could print something like would nt even need documentation exception ca nt bind foo since nt known property element matching directives corresponding property attribute make sure prefix name attr issue could used track improving message", "d": "9/2015"}, {"body": "already reported see", "d": "9/2015"}, {"body": "wrong repo guess wanted open repository angular", "d": "9/2015"}, {"body": "enough context help property bindings work without problems custom elements including ones created polymer please prepare live reproduce scenario using plunker similar take look thnx", "d": "9/2015"}, {"body": "pkozlowskiopensource tried angular polymer starter kit polymer component render quite good used angulard router ex app broken waiting next version polymer next version angular run together", "d": "9/2015"}, {"body": "thanks pkozlowskiopensource worked tried fresh repo", "d": "9/2015"}, {"body": "really nt think want go supporting directives property would open wired corner usecases said easily set particular class host using see", "d": "9/2015"}, {"body": "attribute would match directive selector ngmodel ngcontrol ngformcontrol would", "d": "9/2015"}, {"body": "see vicb thanks possible selector match", "d": "9/2015"}, {"body": "possible selector match ngmodel nt think would make sense", "d": "9/2015"}, {"body": "wardbell special syntax already trick things play got convention writing bind nt solve pb one would write nt pretty commonly used properties specialcased compiler works", "d": "9/2015"}, {"body": "tbosch mhevery wondering could nt allow mixedcase attributes new compiler technically possible parsing string representation template know would depart html standard soooooo many people bumping", "d": "9/2015"}, {"body": "oooo change textcontent safer comment makes much interesting observation reverted document", "d": "9/2015"}, {"body": "document wardbell totally probably goodies compiler well known ping slack discuss", "d": "9/2015"}, {"body": "pkozlowskiopensource ca nt allow new compiler may work build time bit would fail browser always sake consistence honor browser", "d": "9/2015"}, {"body": "mhevery oh impression going use textbased compiler buildbased compilation browser advantage different code paths compiler assuming always getting text template dom tree could use code", "d": "9/2015"}, {"body": "sorry closed accident aware going use browser parser tbosch comment", "d": "9/2015"}, {"body": "mhevery tbosch sure new compiler works nt know using browser parser wondering would different compilers parse text cases would advantage approach", "d": "9/2015"}, {"body": "think would solve issues good", "d": "9/2015"}, {"body": "cristinecula error states missing hammerjs dependency code event apparently implemented hammerjs however event ca nt usedbound component make sure include hammerjs well", "d": "9/2015"}, {"body": "pascalprecht thank quick response understand including hammerjs would make exception go away trying use event supplied hammerjs trying define component launches custom event named given key combination pressed", "d": "9/2015"}, {"body": "since want set attribute property right", "d": "9/2015"}, {"body": "ah yes correct nt aware host values properties attributes thank pawel clearing", "d": "9/2015"}, {"body": "ha exactly discussing folks yesterday introducing", "d": "9/2015"}, {"body": "right raising already going close duplicate one specific updated loader already yes breaking changes gave go one point past could nt figure things quickly lt", "d": "9/2015"}, {"body": "problem implementing routing standard todomvc application application uses routing filter todosi store todos local storage otherwise todos would deleted routing", "d": "9/2015"}, {"body": "ya would nt good object dispose route change", "d": "9/2015"}, {"body": "registering service holds data main di requesting ever need access data work nt know achieve di", "d": "9/2015"}, {"body": "zoechi ya done point angular still alpha get control disposing component object would nice keep state application extra effort even nt know would possible one angular team comment", "d": "9/2015"}, {"body": "imho like datastate model live service whether components disposed different issue valid concern data probably live service", "d": "9/2015"}, {"body": "robwormald data live service class inject component class everytime change param component service class disposed well fix save service class local storage", "d": "9/2015"}, {"body": "kasperpeulen extended kalpeshchheda plunker show works note using bindings parent component simply injecting children add another binding children force injector create another instance", "d": "9/2015"}, {"body": "closing works intended feel free carry discussion", "d": "9/2015"}, {"body": "robwormald sure works intended router parameters routing todomvc app without parameters like nt loose data everything works like expected parameters looks cleaner dart view template directives const routerdirectives routeconfig const const route path filter component todocomponent component selector todocmp viewbindings const todostore view templateurl todocmphtml directives const coredirectives class todocomponent todostore todostore todocomponent thistodostore routeparams routeparams todostorefilter routeparamsget filter loose data repo commented local storage logic make obvious model lost routing note using bindings parent component simply injecting children add another binding children force injector create another instance nt use model parent component app use data child complete todo component", "d": "9/2015"}, {"body": "kasperpeulen quick look repo pull later afternoon proper look still pretty sure issue related defining bindings child assuming want singleton todostore probably bind rootapp component child way time new todo component instantiated look parent component grab already instantiated store pascal article great read mechanics", "d": "9/2015"}, {"body": "thing check clarify going would filter working expecting todostore reinstantiated another issue filtering logic perhaps", "d": "9/2015"}, {"body": "kasperpeulen pulled repo definitely issue described remove viewbindings option todocomp add dart component selector app bindings const todostore root component works expected hope helps", "d": "9/2015"}, {"body": "robwormald thanks lot working read article linked", "d": "9/2015"}, {"body": "please direct general support questions like one appropriate support channel", "d": "9/2015"}, {"body": "goal message", "d": "9/2015"}, {"body": "check issue", "d": "9/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "would nicer use handler imo looks nicer gets around types issues cleanly javascript enum state open closed component class controller state state onopenclick thisstate stateopen", "d": "9/2015"}, {"body": "would", "d": "9/2015"}, {"body": "ah yes would painful case agree suggestion able expose noninstance based contexts", "d": "9/2015"}, {"body": "another realworld example time property binding", "d": "9/2015"}, {"body": "start referenceerror navigationmapper defined would probably mean importing import code share plunk help", "d": "9/2015"}, {"body": "pkozlowskiopensource forgot say importing components", "d": "9/2015"}, {"body": "think couple problems incorrect use decorators instead need use take look nt declared property however none issues related problem repo tried reproduce issue unfortunately without results", "d": "9/2015"}, {"body": "incorrect use componentmetadata viewmetadata depends setup would work traceur tried reproduce issue unfortunately without results asked plunk enough context help", "d": "9/2015"}, {"body": "using traceur yes know working plunkr still issues", "d": "9/2015"}, {"body": "pkozlowskiopensource ah mistake excuse ignorance", "d": "9/2015"}, {"body": "plunkr keeps sending happens router constructor searched github error nothing solved plunkr keep mind happening real code bug trying solve best regards tiago braga", "d": "9/2015"}, {"body": "router essential reproducing pb drop", "d": "9/2015"}, {"body": "getting error instanciating", "d": "9/2015"}, {"body": "trying use type annotations babel sure supports", "d": "9/2015"}, {"body": "pkozlowskiopensource removed types still could nt find traceur example cdn local project using traceur", "d": "9/2015"}, {"body": "couple typos example also use static parameters array get variable inject using babel working example", "d": "9/2015"}, {"body": "brandonroberts sure linked good plunk look console full errors", "d": "9/2015"}, {"body": "pkozlowskiopensource missed typo correct", "d": "9/2015"}, {"body": "brandonroberts yep works ok thnx helping hope answers question least setup let move discussion gitter since nt think seeing bug", "d": "9/2015"}, {"body": "brandonroberts thank much helping pkozlowskiopensource well told second bug original issue issue showed plunkr local project use traceur need componentparameters property goes fine types issue still agree gitter discussion ask issue avoid creating issue threads thank much time stay awesome tiago braga", "d": "9/2015"}, {"body": "href link add hash routerlinkts onclick boolean windowevent metakey windowevent ctrlkey windowevent shiftkey typeof thistargetparams undefined return true", "d": "9/2015"}, {"body": "apps used generate links hashes", "d": "9/2015"}, {"body": "first time looking angular source code analysis please let know right locationstrategyts expose method accept string return default implementation hashlocationstrategyts override method return string url passed locationts expose new method accept stringified instruction like internally call normalizeabsolutely pass output generatenavigationurl platformstrategy finally routerlinkts modified use new instead method", "d": "9/2015"}, {"body": "caused di ca nt find binding constructor temp workaround passing new", "d": "9/2015"}, {"body": "butaixianran inline component templates example try gulp task ludohenin create single bundle scripts files reduce number requests dramatically", "d": "9/2015"}, {"body": "provide github repo perhaps clone showing similar problems case ca nt share current codebase many ways optimize initial loads include one method yet released", "d": "9/2015"}, {"body": "minify js html", "d": "9/2015"}, {"body": "server slow took download nonminified gzip google cdn serve around angular nonminified gzip concat minify gzip etc said", "d": "9/2015"}, {"body": "butaixianran think people thread identified number optimizations make today time tbosch working hard compiler changes make possible precompile templates part build step means able compile templates offline combine minify resulting js output yeh need bundle files make sure server performs reasonably closing startup optimizations worked", "d": "9/2015"}, {"body": "pkozlowskiopensource great news thanks guys target chinese people server china visiting slow may try looks like need", "d": "9/2015"}, {"body": "merged via", "d": "9/2015"}, {"body": "seems like combined enough trigger bug", "d": "9/2015"}, {"body": "tracked root cause declares method schedules work completed asynchronously via problem actually called multiple times called change detection runs never completed successfully exception happens change detection called set run next tick since schedules asynchronous work next tick happen immediately causing crash loop", "d": "9/2015"}, {"body": "cc mhevery", "d": "9/2015"}, {"body": "suggestion good name", "d": "9/2015"}, {"body": "dunno", "d": "9/2015"}, {"body": "vsavkin pkozlowskiopensource igorminar vicb comment ok", "d": "9/2015"}, {"body": "like current understand issue dart side sounds like good name consistent names nouns said nt great name candidates thing comes mind want stick nouns sounds confusing", "d": "9/2015"}, {"body": "pkozlowskiopensource think declaring noun fine event action sounds nice", "d": "9/2015"}, {"body": "definitively live", "d": "9/2015"}, {"body": "emits sounds good", "d": "9/2015"}, {"body": "based mhevery arguments also vote declarative nice", "d": "9/2015"}, {"body": "emits verb decorators nouns consistent fri sep pascal precht notifications githubcom wrote based mhevery arguments also vote emits declarative nice reply email directly view github", "d": "9/2015"}, {"body": "avoids conflict keeps noun prevents boilerplate lots events note likely renamed method see", "d": "9/2015"}, {"body": "igorminar think verbnoun distinction important given declaring action declaring verb use verb naomiblack bradlygreen want comment", "d": "9/2015"}, {"body": "proposed rename really find different names confuse di property bindings", "d": "9/2015"}, {"body": "vsavkin comment nt think use since would imply semantics copies data binding component would create binding would update dom suggest something", "d": "9/2015"}, {"body": "rename think good name add note different semantics compared different though", "d": "9/2015"}, {"body": "different though yeh saw rename thinking end day setting property true either setting property dom element directive cases updating property response model changes", "d": "9/2015"}, {"body": "mhevery use term binding confusing related issue trying fix", "d": "9/2015"}, {"body": "fine rename think renaming mistake let brainstorm names igorminar said wrong since completely different semantics add prefix clarifying something property special property except case would something completely different like different whatever else call", "d": "9/2015"}, {"body": "brainstorming", "d": "9/2015"}, {"body": "actually also vote mhevery main semantic difference decorator causes write dom property rather component property need keep mind update desugared version otoh sure proposal would work scenarios haveuse host properties web worker world dom exists might good idea", "d": "9/2015"}, {"body": "pascalprecht ca nt name render may native vicb appreciate suggestions believe fewer words better think something shorter means declaring property may may data bound part public api component component reads property expect data come different declaration much action please something private public write property expect mirrored host element always dirty checking cost ending extremely confusing since nothing alike public vs private input vs output zero cast vs neverzero cost possible expression vs copy fine rename using suffix wrong need find word describe", "d": "9/2015"}, {"body": "host view already typescript", "d": "9/2015"}, {"body": "sure name either could confuse ppl well since actually exposing property binding outside world ppl might think", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "think suggested names reasoning behind renaming original one think best fit thing even ppl like us know sort happening behind scenes came anything first place even though semantically different think users framework familiar internals would expect prolly also expect sth like feels like something missing namely exactly go part maybe go cost could confused di binding stick feels like closest", "d": "9/2015"}, {"body": "light renames di binding terminology di provider frees binding used databinding api name might remain", "d": "9/2015"}, {"body": "without thinking much vote something like", "d": "9/2015"}, {"body": "think bad option consider scanning list routes ca nt easily tell scanning list ones auxiliary instance looks like mistake two routes path fact valid config one auxiliary wo nt notice scan way right different options", "d": "9/2015"}, {"body": "hm understand feels inconsistent otherwise thing route definitions like example also introduce another property prolly used determine route definition type made sense introduce property aux route keeping rest consistent", "d": "9/2015"}, {"body": "think type property", "d": "9/2015"}, {"body": "think suffers problem mentioned type introduces new target redirectto component etc keeping path aux routes different meaning path different reason think something whatever property comes first needs different things behave similarly look similar things behave similarly look similar case latter", "d": "9/2015"}, {"body": "btford ya good point also agree pascalprecht inconsistent otherwise benefit proposal following javascript convention part example look geojson spec notice two types one way serialize types soon realized convention may result maintainability problems communicating two typed languages javascript lead creation spec routes presumably remain small larger apps would end using types eg wo nt maintainability problems prop also allows future proof since value dynamic new types could added", "d": "9/2015"}, {"body": "think abstracted way better sure possible new route definition type comes future need introduce new property sure depends semantics particular definition type decided something like simple flag property even like nt introduce new apis think consumer point view nt deep understanding implementation semantics confused special property thing called aux route", "d": "9/2015"}, {"body": "btford fix teach good conventions people put property first visually apparent glance still succinct tension typing whole lot remove potential confusion typing less folks use feature lot resolved convention remember convention including first like remember convention entails lot less typing like idea good conventions add clarity miss ability use variable names scheme scheme predicates names ending convention functions mutate value names ending lot smart little conventions helped make remembering crucial details easier embraced maybe even sublime plugin could written flag failure adhere conventions nice thing convention code work even put first brittle", "d": "9/2015"}, {"body": "actually let amend recommendation adding type property would better would also add convention type entered first best practice", "d": "9/2015"}, {"body": "nt played new router still new p would make sense overload decorator like current common form shortcut eg ts routeconfig routes equivalent shortcut routeconfig routes routes proposal might make sense hey neutralface", "d": "9/2015"}, {"body": "gkalpak like one suggested makes types explicit nt require instantiation done user time something passed", "d": "9/2015"}, {"body": "think replacement currently exported helper function discussion btford mentioned might want export helper function nt think multiapp apps yet also sure affects bootstrap process afaik use bootstrap multiple apps change detection etc make simpler solution looking", "d": "9/2015"}, {"body": "pascalprecht helper still additional complexity problem good solution would rename current export write new like", "d": "9/2015"}, {"body": "goal actually get rid well inject query retrieve root component process configuration agree vs confusing nt want remove latter temporary implements", "d": "9/2015"}, {"body": "igorminar alxhub said believe working redoing work", "d": "9/2015"}, {"body": "issue refactoring make issue put breaking hotlist", "d": "9/2015"}, {"body": "done", "d": "9/2015"}, {"body": "takes first proposal", "d": "9/2015"}, {"body": "knock pr", "d": "9/2015"}, {"body": "oh issue probably project since moved doc generation", "d": "9/2015"}, {"body": "petebacondarwin glad hear sounds doable thinking topic got decorators probably make things bit complex hand gives us opportunity type information properties oh feel free move better place", "d": "9/2015"}, {"body": "echonax thanks mean getting started guide angulario", "d": "9/2015"}, {"body": "pascalprecht yes exactly typescript part thought point save people couple seconds", "d": "9/2015"}, {"body": "could file issue thanks", "d": "9/2015"}, {"body": "mediacad angular router docs written right stay tuned", "d": "9/2015"}, {"body": "thank", "d": "9/2015"}, {"body": "could provide concrete use case", "d": "9/2015"}, {"body": "hi mhevery developing custom component change detection writing custom differ merge features keyvalue iterable differs ex refer following object differ detect changes name hobbies city amp country knownaddresses differ need extra parameter like use determine deep change detector watch changes ideas please share thanks bharath", "d": "9/2015"}, {"body": "angular repo could create issue angular repo", "d": "9/2015"}, {"body": "pointed wrong repo said suspect using mode routing want read serverside request params using clientside routing api obviously wo nt work would suggest carefully go ask support questions using one support channels closing question nt belong github issue", "d": "9/2015"}, {"body": "nt want nt export think meant hiding parts implementation", "d": "9/2015"}, {"body": "case possible reexport class vsavkin exact scenario", "d": "9/2015"}, {"body": "assume attributes mean decorators decorators used add meta data code used framework various different things new decorator basically except developer immediately see route component represents nt seem right thing imo question really want achieve value added really seeing route current configuration comment would also job also comes nestedaux routes component configuration reusable might different semantic meaning one context reused might even able specify route current component", "d": "9/2015"}, {"body": "pascalprecht sorry yes mean decorator dart main language sometimes call wrong name yes comment could work change route would always forget change comment unless strict would always forget yes see mean might get bit confusingunusable possibly bit work think could useful addition obviously would optional user use wo nt work situation nt use", "d": "9/2015"}, {"body": "main concern would nt add value framework exactly ca nt use", "d": "9/2015"}, {"body": "reopen data provided", "d": "9/2015"}, {"body": "vsavkin mhevery could agree best solution implement", "d": "9/2015"}, {"body": "first thought static vsavkin examples issue fixed proposal correct one", "d": "9/2015"}, {"body": "cmsdesigner rather issue repository please file issue thanks", "d": "9/2015"}, {"body": "pascalprecht nope issue starter repo rather browsers support", "d": "9/2015"}, {"body": "although afraid hardly actionable current form mlaval tons work various browsers support issue resolved part work", "d": "9/2015"}, {"body": "tank much reply hop solved soon good luck mail original de pawel kozlowski notifications githubcom \u00e0 angularangular angular noreplygithubcom cc mjhdesigner mjhdesigner lapostenet envoy\u00e9 lundi septembre objet angular problem ie edge v although afraid hardly actionable current form mlaval tons work various browsers support issue resolved part work reply email directly view github", "d": "9/2015"}, {"body": "note non trivial transformer also read dependencies calculate correct order", "d": "9/2015"}, {"body": "also right transformer type resolver copies imports original source code", "d": "9/2015"}, {"body": "note needs done generate code change detectors already", "d": "9/2015"}, {"body": "exact problem created simple todo app adding todo console log bigger todo array view wo nt update using", "d": "9/2015"}, {"body": "two cents user issue although nt find solution per se found config generated jspm causing issue similar issue using promise directly suggested remove import use patched zonejs fixed problem case may difficult find going every loaded library might interfering somehow binding system saw config file would take ages find one interfering recommendation start bottom empty html file follow instructions angulario one step time control everything loaded loading necessary track issue super useful kind issues", "d": "9/2015"}, {"body": "hi thanks update code trying even importing use systemjs import reflectmetadata using traceur handle code browser config file mentioned nt think could anything interesting primarily made file mappings really loaded specified ts files think correct wrong systemjs load libraries runtime files posted example really simple change libraries external static source works take ngplay reference", "d": "9/2015"}, {"body": "might zonejs issue though would expect throw try steps note zonejs import", "d": "9/2015"}, {"body": "great even guide followed forgot include zonejs data binding works still weird message raised bug expected feature notify zonejs thanks lot", "d": "9/2015"}, {"body": "yes zonejs required got issue throw present", "d": "9/2015"}, {"body": "thanks", "d": "9/2015"}, {"body": "think use etc input radios well exactly implemented note angular nt need reimplement form input directive due zones see also checkbox input directive etc anything ran nt work", "d": "9/2015"}, {"body": "hmm ok let go back double check try make plunker issues using radio list created form builder probably mess know examples", "d": "9/2015"}, {"body": "reopen plunker", "d": "9/2015"}, {"body": "repository angular post angularjs related issues", "d": "9/2015"}, {"body": "known issue closing dup", "d": "9/2015"}, {"body": "repository angular post angularjs related issues", "d": "9/2015"}, {"body": "mgechev right top sounds like general support question asked using dedicated support channel", "d": "9/2015"}, {"body": "pr related issue", "d": "9/2015"}, {"body": "awesome thanks", "d": "9/2015"}, {"body": "great topic thanks raising say developer workflows based around cjs browserify webpack systemjs sure measured find developers interact little experience thus making guess leader pure guess believe goals module loader loads modules supports smart bundling bundles load user progresses app performs well ease use configuration evaluating include side side example options showing pros cons along ease use need proven guided path works readable understandable configuration handing someone sample config lines causes eyes glaze seen side black box let technique also problematic things go wrong user little insight makes difficult diagnose fix consistent choice guide docs super helpful webpack nice one solution lot moving parts much already learning high concept count new wave javascript performance seems ok folks like others find magical black box systemjs less moving parts webpack configuration get little confusing add jspm bundling great also lines config performance concerns size loader cjsbrowserify though many never used seems oldest group still snuff everything need see clear leader believe stick goals guiding force finally code work may seem obvious nt want make assumptions", "d": "9/2015"}, {"body": "vsavkin talking modules module loading tools angularconnect topic close hart planning discuss rkirov started gathering thoughts comments welcomed regarding issue hand agree mentioned pbs systemjs size reexport perf would love properly evaluate alternatives changing possibilities tradeoffs must say personally nt warm thoughts cjs put people format tooling workflows goes away webpack actually hear many negative voices claiming complex use large config files things hello world examples actually staying away webpack far since looking documentation seems like gazzilion options also hear many people use like anyway schedule meeting rkirov discuss topics context angularconnect talk would great guys could keep loop discussions", "d": "9/2015"}, {"body": "two separate proposals replacing bundling tool use repo changing gettingstarted angulario naturally extends picking recommended module loader think move forward first one purely based codesize since cjs bundle consumable every tool including systemjs would like see browserify comparison webpack go forward one two systemjsbuilder bitten us times due module sniffing regexps see would like try something else also definition bundles opaque objects switching different tool produce little cost second proposal lot contentious needs lot research think going support angular cli getting started guide using question becomes cli scaffold use", "d": "9/2015"}, {"body": "totally agree rkirov separate discussion format tools used produce bundles side vs recommend users would really careful recommending webpack point consisted cli efforts still remarks think move forward first one purely based codesize tradeoff got semantic modules would really love see short comparison formats dig items decide worthwhile systemjsbuilder bitten us times due module sniffing regexps true although using quite old version never took time update said trying sth else provided loaded consumed systemjs loader automatic recommendation users", "d": "9/2015"}, {"body": "johnpapa say developer workflows based around cjs browserify webpack systemjs sure measured find developers interact little experience probably right saying developers user bundlers early adopters innovators going play angular first probably use bundlers one survey webpack browserify jspm think significant downside switching cjs bundle systemjs workflow still works also enable workflows would try enable workflows evaluating include side side example options showing pros cons along ease use agree need careful evaluation consider easy use maturity community file size bundle number enabled workflows flexibility etc", "d": "9/2015"}, {"body": "tradeoff got semantic modules pkozlowskiopensource angular semantics need output internal importsexports already designed require cyclic dependency resolution since already supporting cjs", "d": "9/2015"}, {"body": "moving away bundling internal thing anyway users course need prebundled build nt much opinion since whatever mechanic use build irrelevant end user use global modern users quite used using browserifywebpacketc likely nt need handholding us building massive bundles consumed complicates things outputs global bundle built whatever makes fastest cjs source files bundled source files bundled make recommendations tutorials like nt think bundling modern environments scope long relative paths work users use whatever please", "d": "9/2015"}, {"body": "move closer beta continue distribute big systemregister bundle guybedford less explicitly stated bad idea users begin expect angular responsibility useful plunkers original stated use case big bundle something want going forward certainly recommend start using docs", "d": "9/2015"}, {"body": "internal importsexports already designed require cyclic dependency resolution since already supporting cjs jeffbcross oh right impression still got cyclic dependencies saying safe item would importing things outside item would like test moving cjs impact loader files bigger files include configuration play end", "d": "9/2015"}, {"body": "moving away bundling internal thing anyway robwormald could elaborate alternative proposal people bundling serving unpackaged magic sth else framework user would love use bundled framework version even writing ts bundling version pain neck downloading configuring tools etc imo much expect average user wants play framework top little value bundling things afaik nt tools could treeshake js ts modern users quite used using browserifywebpacketc likely nt need handholding us building massive bundles consumed complicates things sure mean modern users see discussion gitter issues opened many ui devs starting equipped knowledge time patience setup bundling end definitively nt block power users setup imo good easy story foe newcomers useful plunkers original stated use case big bundle something want going forward certainly recommend start using docs sure understand alternative proposing one people bundling people forced configure server use browsers support would big concern would consider setting bar high popular ui framework could used relative beginners", "d": "9/2015"}, {"body": "vsavkin rkirov played bit bundling using cjs instead systemregister using webpack generate minified bundle also see size difference favor cjs funny thing overhead seems coming paths usage systemregister format indeed paths go like even longer adds lot strings bundle strings ca nt minified renamed webpack using numerical module ids pretty useless importing individual modules make output much smaller seems like main tradeoff would victor pointed using cjs bundle important submodudles think advantage cause prevents users depending private api going play cjs bundle systemjs loader bit see nt generate issues yeh initial investigation looks like fundamental differences formats push us size vs submodule imports tradeoff", "d": "9/2015"}, {"body": "goes show need bundler removes internal traces import structure gives us single bundle seems like savings think would even higher would remove generated files", "d": "9/2015"}, {"body": "looked sorts static optimizations integrating systemjs builder default static bundles optimization soon certainly optimized builds preferable bundling bundling necessary specifically wanting populate loader registry level granularity module reuse different packages dynamic loading", "d": "9/2015"}, {"body": "guybedford brief look weeks back looked like early stage back would keen another look guybedford would mind reach got findings regarding systemregister vs cjs personally love goodies hit issues see discussion size overhead reexport perf impact probably fixed latest builder format update also hitting issues ts impl latest one introduce format still love flexibility correctness completeness systemregister format would keen sharing detailed feedback interested", "d": "9/2015"}, {"body": "pkozlowskiopensource sure happy discuss yes exactly mentioned robwormald systemregister distribution format rather static optimized module systemjs sfx builds becoming integrate optimizations like rollup separate raw es modules best provide users use environments", "d": "9/2015"}, {"body": "inline typescript helper functions take", "d": "9/2015"}, {"body": "todoubaba yes right discussion", "d": "9/2015"}, {"body": "may interested work actually testing angular angular input bundling ts compiler would always appreciated", "d": "9/2015"}, {"body": "ruwhan angular repository please submit issue close one thanks", "d": "9/2015"}, {"body": "agreed far nt getting traction getting injectable component support within framework want taken little well projects working ca nt really done static di binding like show example right gotten around creating dynamiccomponentloaderbased solution", "d": "9/2015"}, {"body": "dannymeister public example dynamiccomponentloader could peek meaning get workaround nt found time yet", "d": "9/2015"}, {"body": "sorry something support things worked angulardart created many issues namely possible analyze templates locally could get situations depending different directives active template something negatively impacts speed", "d": "9/2015"}, {"body": "mhevery solution would resolve created instance injector instead pull binding containing type injector way could pass though processed compilerbinddirective method way type binding side affect case could nt directive singleton", "d": "9/2015"}, {"body": "line surprising git checkout global git hooks aliases something try updating npm otherwise idk much might worth filing npm issue tracker", "d": "9/2015"}, {"body": "updated npm node still nt work close issue open one npm tracker", "d": "9/2015"}, {"body": "thanks", "d": "9/2015"}, {"body": "nonstring params yet supported see", "d": "9/2015"}, {"body": "components angular similar controllerview pair case provide controller component name making work similar angular component also aware modulecomponent api please throw light", "d": "9/2015"}, {"body": "helper api proposed long time ago right afaik consideration land angular", "d": "9/2015"}, {"body": "based discussion vsavkin seems privatehidden mhevery", "d": "9/2015"}, {"body": "sgtm also prefixed private dart well", "d": "9/2015"}, {"body": "considered solving problem using normal language internal mechanisms nt need special language feature eg class needs field exposed angular code could define separate interface used public api nt declare property export interface public api use class private api", "d": "9/2015"}, {"body": "future likely refactor code change require lot casting public api perimeter keen right fri sep pm martin probst notifications githubcom wrote considered solving problem using normal language internal mechanisms nt need special language feature eg class needs field exposed angular code could define separate interface used public api nt declare property export interface public api use class private api reply email directly view github", "d": "9/2015"}, {"body": "solution hint yoffset", "d": "9/2015"}, {"body": "fairly simple fix", "d": "9/2015"}, {"body": "print ngif true rather ngif gt sent pr fix null end error message gt duplicate even nt look like first sight root cause second elementbinders exception remains investigated", "d": "9/2015"}, {"body": "change occur", "d": "9/2015"}, {"body": "like tackle one", "d": "9/2015"}, {"body": "bkyarger lmk need help writingrunning unit tests", "d": "9/2015"}, {"body": "jeffbcross show example instantiate global object manually sure typescript test", "d": "9/2015"}, {"body": "bkyarger could instead instantiating global nt present test environments provide value request function nt really string tell typescript", "d": "9/2015"}, {"body": "awesome thanks", "d": "9/2015"}, {"body": "jeffbcross got change implemented test trouble getting entire suite complete launches firefox perf tests ff crashing think installing xpi perf tests eventually time osx ff date suggestions workarounds", "d": "9/2015"}, {"body": "bkyarger unit tests passing passes would go ahead open pr let travis run tests fails provides script run automatically clean formatting", "d": "9/2015"}, {"body": "yep passing pr way thanks", "d": "9/2015"}, {"body": "talgleichger component directive named", "d": "9/2015"}, {"body": "yes snippet service named ngtoast export default class home name string nghackathon right way write export default class home name string nghackathon error raised nt right context makes harder debug", "d": "9/2015"}, {"body": "js convention capital first letter classes service example renamed typescript class ngtoast injecting services need add decorator constructor toast msg string void consolelog msg component selector home bindings ngtoast ensure di aware service view directives formdirectives template export default class home name string nghackathon talgleichger problem might injecting services use decorator typescript import injectable injectable nothing ensures typescript emits correct param types class ngtoast constructor service toast msg string void consolelog msg", "d": "9/2015"}, {"body": "right talgleichger read full explanation verify issue", "d": "9/2015"}, {"body": "yes thank", "d": "9/2015"}, {"body": "viewinjector renamed viewbindings hostinjector renamed bindings appinjector removed favor bootstrap appinjector referring documentation angulario source code angulario website outdated still", "d": "9/2015"}, {"body": "issue error messages getting try improve possible", "d": "9/2015"}, {"body": "pkozlowskiopensource error message sounds fine due talgleichger using nt property configuration anymore basically binding means angular ca nt find provider talgleichger want explanation might want read basically configure visibility bindings injector tree", "d": "9/2015"}, {"body": "pascalprecht saying true crux solve pb rather provide error msg understood newbie like secs max message like unknown property decorator available properties", "d": "9/2015"}, {"body": "pkozlowskiopensource", "d": "9/2015"}, {"body": "typescript solve issue", "d": "9/2015"}, {"body": "two lines identical", "d": "9/2015"}, {"body": "note needs merged time runtime parts new compiler land", "d": "9/2015"}, {"body": "right tracked", "d": "9/2015"}, {"body": "angular repository please close one file issue thanks", "d": "9/2015"}, {"body": "apologies", "d": "9/2015"}, {"body": "martinsik currently properties used anywhere yet fact pending pr remove properties actually properly implemented", "d": "9/2015"}, {"body": "pascalprecht explains setting effect thing wait fetch spec properly defined properties reimplemented", "d": "9/2015"}, {"body": "yes afraid case maybe jeffbcross thoughts", "d": "9/2015"}, {"body": "actually using fetch though general want http implementation fetchlike interfaces course using observables promises finish rxnext porting see hopefully next couple days sort thing much easier work improve", "d": "9/2015"}, {"body": "marcesso wrong repo one guess meant open said sounds like general support question try support channel first github issues bug reports feature requests quick look code seem missing scopes works angularjs make sure go doc", "d": "9/2015"}, {"body": "sorry wrong repo read doc scopes nt found nothing ngif behaviour code broken add ngif think bug", "d": "9/2015"}, {"body": "code broken add ngif think bug bug ngif simply creating new scope consequences go linked doc google angular dot model ex", "d": "9/2015"}, {"body": "thanks answer nt see ngif documentation explained new scope created sorry many thanks help", "d": "9/2015"}, {"body": "using expected changes introduced commit present nope case see release arbitrary point commits till september", "d": "9/2015"}, {"body": "plunkr reproducing scenario seems one causes async redirect constructor see", "d": "9/2015"}, {"body": "pelallemant wrong repo one guess meant open said sounds like general support question try support channel first github issues bug reports feature requests", "d": "9/2015"}, {"body": "actually work see use get access value", "d": "9/2015"}, {"body": "ah see works indeed sort page come routeparams usecase like share url ie someone jump page directly browser address bar right router redirects user omitting query params leaving first id param workaround", "d": "9/2015"}, {"body": "sumigoma related known bug right", "d": "9/2015"}, {"body": "closing dup", "d": "9/2015"}, {"body": "problem using expression types works already", "d": "9/2015"}, {"body": "yes ca nt actually emulated older browsers implemented shim class might appropriate though caveat user", "d": "9/2015"}, {"body": "curiosity moving use switch ask contributor", "d": "9/2015"}, {"body": "used use traceur shims provided runtime rkirov switch guess satisfy curiosity", "d": "9/2015"}, {"body": "sorry pain mlaval nt aware browser runs hard keep track things outside whatever travis runs given claimed infeasible runtime shim wonder traceur make work compile time tricks talk ts folks replicating depending complexity option see remove symboliterate gracefully degrade older browsers ie iterable cscott used traceur transpilation aware pros cons vs noone else team opinions either picked one would love hear take note framework nt mandate use either shim shim need pick one examples unit tests", "d": "9/2015"}, {"body": "using traceur use corejs sep pm rado kirov notifications githubcom wrote sorry pain mlaval nt aware browser runs hard keep track things outside whatever travis runs given symboliterator claimed infeasible runtime shim wonder traceur make work compile time tricks talk ts folks replicating depending complexity option see remove symboliterate gracefully degrade older browsers ie query iterable cscott used traceurruntime traceur transpilation aware pros cons vs corejs noone else team opinions either picked one would love hear take note framework nt mandate use either shim shim need pick one examples unit tests reply email directly view github", "d": "9/2015"}, {"body": "elaborating slightly corejs originally written babel fits better complete runtime see example traceur might using corejs hood long goals deliberately modest implement compatible subset basically lowhanging fruit spec deliberately skipping bits require runtime support ca nt perfectly implemented runtime like symbol might good thing starting scratch ensures perfect browser compatibility hidden gotchas already got dependencies runtime like symbol might trouble worth take wanted scrub code help keep way want things work corejs get one nice feature corejs modularity easy use particular features without polluting global environment library code big win corejs also seems slightly faster might slightly complete test suite", "d": "9/2015"}, {"body": "choose use need help welcome interesting minimum use projects", "d": "9/2015"}, {"body": "think using wrong use really di qualifiers try constructor host skipself inject forwardref gt hello p", "d": "9/2015"}, {"body": "pascalprecht interesting nt think way use viewqueryquery made think would possible thanks pointing although think would nt bad idea specific add something inside anyway closing thanks", "d": "9/2015"}, {"body": "maybe using polyfill like one could enough tested", "d": "9/2015"}, {"body": "works intended even thought confusing binds event nt casing html assume binds event since convention use converting skewercase camelcase therefore correct", "d": "9/2015"}, {"body": "understand correct consistency think alias property similar event alias works outside way use property property aliases use hyphens works case events need alias camel case understood", "d": "9/2015"}, {"body": "hmm might regression recent compiler refactorings since remember used error saying property element definitively need integration tests corner cases", "d": "9/2015"}, {"body": "cc yjbanov", "d": "9/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "alexwolfe right owner", "d": "9/2015"}, {"body": "currently use thirdparty swiftype insite search gives us granular control search angulario known limitation push production review probably low priority fix right", "d": "9/2015"}, {"body": "works expected issue bootstrap returns promise outside angular zone result also execute outside zone plan remove promise return prevent kinds issues", "d": "9/2015"}, {"body": "remove warning normal behavior", "d": "9/2015"}, {"body": "expected behaviour dart one unnamed constructor", "d": "9/2015"}, {"body": "vsavkin since article could help please", "d": "9/2015"}, {"body": "definitively custom component using syntax simple example possible accessing host sure mean look linked plunker remember shortcut hope answers question going close issue let move discussion gitter need info", "d": "9/2015"}, {"body": "pkozlowskiopensource thank much answer posted saw examples presented could nt understand problem instanciation eventemitter oninit method sure components constructor methods resolve dependecies like thought oninit would trigger right constructor method evaluating passed dom properties anyway least working thank best regards tiago braga", "d": "9/2015"}, {"body": "yeh error message case initializing eventemitter properly nt ideal opened issue past improve", "d": "9/2015"}, {"body": "pkozlowskiopensource hi working exposed property ca nt hyphens event completely resolve", "d": "9/2015"}, {"body": "works said agree superconsistent could file separate issue", "d": "9/2015"}, {"body": "yes right away", "d": "9/2015"}, {"body": "strictly speaking question systemjs usage much angular problem systemjs ca nt find referenced files see errors console one way solving explicitly add extensions import paths refer need info", "d": "9/2015"}, {"body": "rkirov valid code could rewrite takes function nt think issue let class real bugs filed showing use cases", "d": "9/2015"}, {"body": "mhevery rkirov got use case actually let say got component updates internal state based happens children specifically say got component several children want observe list slides update carousel state example make sure current slide deleted one update navigation indicators display slides etc case changes carousel model done response slides collection change reflected ui nt know maybe better way solving usecases like one mlaval nt sure could alternative approach", "d": "9/2015"}, {"body": "btford shahata take look please", "d": "9/2015"}, {"body": "enormous wip pr refactoring angular router code incoming addresses", "d": "9/2015"}, {"body": "addressed", "d": "9/2015"}, {"body": "dup", "d": "9/2015"}, {"body": "hi angular repository please file issue angularangularjs close one thanks", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "missing bootstrap bottom appjs make changes see component hope helps", "d": "9/2015"}, {"body": "brandonroberts yes wrong guide still fails include think wants developers preview code ought make sure getting started guide works described", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "would close issue pr ready repo", "d": "9/2015"}, {"body": "quick start guide deprecated see", "d": "9/2015"}, {"body": "thanks notice", "d": "9/2015"}, {"body": "duplicate", "d": "9/2015"}, {"body": "agreed would nice angular told type inside also maybe future typescript transpiler add support checking use", "d": "9/2015"}, {"body": "mentioning going away favour via issue might remain tho", "d": "9/2015"}, {"body": "maybe pr", "d": "9/2015"}, {"body": "nt angular team keep running list changes versions seems like something", "d": "9/2015"}, {"body": "yep normally things part breaking changes changelog believe things missing breaking changes section please send pr update thnx", "d": "9/2015"}, {"body": "think makes lot clearer use", "d": "9/2015"}, {"body": "like help understand route like import heroescomponent heroescomponent import herodetailcomponent herodetailcomponent import dashboardcomponent dashboardcomponent export var routes dashboard path dashboard component dashboardcomponent heroes path heroes heroes component heroescomponent detail path detail id detail component herodetailcomponent export const approutes thisroutesdashboard thisroutesdetail thisroutesheroes redirecting sounds like redirecting name correct", "d": "9/2015"}, {"body": "yes even easier see", "d": "9/2015"}, {"body": "cool cuz ideally liked another name like go place using name makes possible using url makes harder", "d": "9/2015"}, {"body": "nt problem missing const coredirectives", "d": "9/2015"}, {"body": "edited changed original code reflect missing comma example", "d": "9/2015"}, {"body": "nt problem coredirectives nt constant expression error seems point direction", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "must changed thanks", "d": "9/2015"}, {"body": "close issue", "d": "9/2015"}, {"body": "process redoing docs closing", "d": "9/2015"}, {"body": "uploaded small messy project tested manually replaced angular routerjs files ones got ran git revision", "d": "9/2015"}, {"body": "thanks reproduction agree needs visibility incorrectly configured redirect think would good start making redirects easier understand instance able assert configtime example case misconfigured redirects nowhere nitpick nt think rejecting promise right choice api perspective rejections reserved error cases nonmatches", "d": "9/2015"}, {"body": "agree needs visibility incorrectly configured redirect think would good start making redirects easier understand instance able assert configtime example case misconfigured redirects nowhere already replied nitpick nt think rejecting promise right choice api perspective rejections reserved error cases nonmatches would expected result catch since would supress error messages initial page redirection checked promise returned anyway sure", "d": "9/2015"}, {"body": "johnpapa use dts file comes published bundle mprobst alexeagle either know definitelytyped behind control appears", "d": "9/2015"}, {"body": "hi btford let explain scenario use install typings everything change moving forward follow story first tsd looks file typescript looks file location root typescript project root everything used would exclude folders like nodemodules jspm etc also root often best place generally keep source code deeper least one folder like server code client code project angular code node express server may structure different setup want use typings node different ones angular client code also may want settings tsconfig different different targets whatever setup tsdjson allows target typings folders set tell tsdjson put typings enter bundles typings think fantastic however puts typings folder root ok typings root compile typescript ts sees root ts project tsconfigjson go levels see root typings folder problem happens even single folder like solution love see way typings angular brings installed configurable location", "d": "9/2015"}, {"body": "ah gotcha pretty painful igorminar something angular cli help us", "d": "9/2015"}, {"body": "sorry trouble following issue nt understand puts typings folder root npm install get right chatted typescript team looks like much usable story using typings shipped via npm starting ts maybe early week", "d": "9/2015"}, {"body": "oh working", "d": "9/2015"}, {"body": "alexeagle johnpapa alright close duplicate sounds like specific symptom problem", "d": "9/2015"}, {"body": "well issue title two files ought identical maybe issue got tangent investigate mon sep pm brian ford notifications githubcom wrote alexeagle johnpapa alright close duplicate sounds like specific symptom problem reply email directly view github", "d": "9/2015"}, {"body": "alexeagle put also gives file references files copy paste references file due folder structures different choice put would easier flexible", "d": "9/2015"}, {"body": "like keep linked least could use def typed would fine wouldnt still need non angular stuff think thats realistic scenario", "d": "9/2015"}, {"body": "verified identical npm package let separate issue files get laid npm johnpapa discussing slack", "d": "9/2015"}, {"body": "enum members renamed also see", "d": "9/2015"}, {"body": "ah missed change reviewing today updating apps thanks others may see condition import component view onchanges eventemitter import formdirectives component selector filtertext events changed properties text view template directives formdirectives export class filtertextcomponent implements onchanges onchanges changes consolelog changes code", "d": "9/2015"}, {"body": "todoubaba could please elaborate exactly missing getting npm definitively typed", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "also found definitively typed", "d": "9/2015"}, {"body": "removed use instead declared classes hoisted see depth information", "d": "9/2015"}, {"body": "event replacing appinjector bindings amp declaring class friendsservice displaycomponent working", "d": "9/2015"}, {"body": "try using inject friendsservice friendsservice friendsservice", "d": "9/2015"}, {"body": "updated displaycomponent constructor amp added inject import also still luck", "d": "9/2015"}, {"body": "hey first remove since nt used anymore second add systemconfig mine could different case note keep mind traceur replaced third would recommend upgrade typescript version guessing ps weird using typescript viewbindingsbindings never use services nt know many differences", "d": "9/2015"}, {"body": "seeing issue described using someone else really confirmed still works fine tried without forwardref linked blog ca nt get work", "d": "9/2015"}, {"body": "webteckie plunk want compare code", "d": "9/2015"}, {"body": "webteckie plunk code working", "d": "9/2015"}, {"body": "experiencing", "d": "9/2015"}, {"body": "configuration issue missing annotations error message telling closing working intended trouble getting project running please check gitter", "d": "9/2015"}, {"body": "fuzing think", "d": "9/2015"}, {"body": "great try let know cheers peter b sat sep pm ericmartinezr notifications githubcom wrote fuzing think bind appbasehref tovalue reply email directly view github", "d": "9/2015"}, {"body": "bind appbasehref tovalue ie without worked great thank", "d": "9/2015"}, {"body": "glad worked think use former use using add", "d": "9/2015"}, {"body": "greatly appreciate help nt expect response today extra thank sat sep pm ericmartinezr notifications githubcom wrote glad worked think use pathlocationstrategy former use using hashlocationstrategy add reply email directly view github", "d": "9/2015"}, {"body": "talking namespaced see code", "d": "9/2015"}, {"body": "looks like workaround since choice named angular project title ngchange become chnage global names space changed angular ng inconsistent would say", "d": "9/2015"}, {"body": "imo issue part whole upgrade story nt think anything specific enough actionable closing full upgrade coexistance story worked happy reopen got specific questions bug reports", "d": "9/2015"}, {"body": "yeh reproduce", "d": "9/2015"}, {"body": "ok regression introduced definitively missing test case pr way", "d": "9/2015"}, {"body": "chatting blesh brings really evaluate ifwhy need instead really best abstraction one resubscribed disposed", "d": "9/2015"}, {"body": "agreed reckon strive possible use observables subjects keep things naturally cold also means educating users appropriate way wrap things observables one place name eventemitter currently makes sense well emitting events components external consumption much elsewhere formbuilder http common cases user actually want manually emit defining specific type actual eventemitter use case something like nt love name using component events alternately could use actual eventemitter semantics emit leverage rx observablefromevent would closer vanilla javascript make interop things nicer", "d": "9/2015"}, {"body": "subjects also heavier use observables got additional function references underlying array observers etc", "d": "9/2015"}, {"body": "irl discussion recap every place inside core currently using instead use rename sure something nt confuse node something nt require understanding rx extra method called since used emitting events methods necessary provide clean api memoryefficient means specific use case emitting events custom components emitting values sync async default sync encourages good change detection behavior since likely throw error emitting change detection one problem sync dart look dart handles dom events streams see way synchronously emit", "d": "9/2015"}, {"body": "coming dart would probably call believe dart sure though typescript version implemented", "d": "9/2015"}, {"body": "jeffbcross expert think want make eventemitter sync default dart make like dart class eventemitter extends stream streamcontroller controller eventemitter sync true controller new streamcontrollerbroadcast sync true streamsubscription listen void ondata dynamic line void onerror error error void ondone bool cancelonerror return controllerstreamlisten ondata onerror onerror ondone ondone cancelonerror cancelonerror void add value controlleradd value void adderror error controlleradderror error void close controllerclose", "d": "9/2015"}, {"body": "need dart observable imo would lighter weight eventstream compatible reality eventstream looks like could subclassed observable", "d": "9/2015"}, {"body": "dynamiccomponentloader might api want use loaderloadasroot loadintolocation loadnexttolocation able assemble interface based whatever plunk somebody day similar idea", "d": "9/2015"}, {"body": "robwormald nt aware class like plunk created pretty elegant solution guess close thanks", "d": "9/2015"}, {"body": "informed changed ngrouter", "d": "9/2015"}, {"body": "cc wardbell", "d": "9/2015"}, {"body": "get binding error briefly console heroname binding fails hero yet back promise johnpapa talking binding template sth like use elvis operator sth like hope answers question going close one happy reopen discussion needed usecase different", "d": "9/2015"}, {"body": "yes helps casting empty object type solve even tho properties exist", "d": "9/2015"}, {"body": "johnpapa still sure exact binding error code template hard answer questions could share code triggers error error look discussion introduction elvis operator linked lengthy discussion issue different pros cons throwing accessing properties", "d": "9/2015"}, {"body": "yes discussion explains elvis operator html ngmodel since coming back asyncly tick thus could fail would help curious fixes", "d": "9/2015"}, {"body": "curious fixes hero hero well assuming template got sth like template line works since initialises field empty object instead null", "d": "9/2015"}, {"body": "yes happening guess seems odd thanks", "d": "9/2015"}, {"body": "yeh still fence comes whole elvis operator story guess need hear input opinions based everyday use framework", "d": "9/2015"}, {"body": "agreed see value kinda like explicit expression could null point also see times would put several times template choose hide ngif casting component solves guess yes closed thinking", "d": "9/2015"}, {"body": "read discussion frankly amazed elvis remains building syntax little adds friction case reaffirms important tell ng heroheroname null consistency equal obliged suffix elvis like nt believe legal template syntax know binding error omit miss trailing option", "d": "9/2015"}, {"body": "cc wardbell", "d": "9/2015"}, {"body": "closing repo angularjs repo however seems related", "d": "9/2015"}, {"body": "reproducible edge html generated", "d": "9/2015"}, {"body": "expected nodes get projected see", "d": "9/2015"}, {"body": "robianmcd decoration works nicely problem theory decorator work super stoked solution though would great able optin typescript compiler alwaysemitdecoratormetadata something", "d": "9/2015"}, {"body": "robwormald thanks info use annotation agree would nice typescript could support without need class decorator reopened typescript issue ask could support", "d": "9/2015"}, {"body": "robwormald java guice injecting classes guice annotation deprecated turned source bugs classes would less accidentally injected code eg classes gets mentioned constructor framework happily comes along instantiates class might get bunch things wrong particular object lifetime singleton per request class might designed injected resulting errors hard debug whether class constructed injection determined class code using think wai", "d": "9/2015"}, {"body": "mprobst two different things one saying injected saying inject angular need annotation typescript preserve type information use purpose yes suggest could typescript always generate type information would bloat amount code generated annotation compromise", "d": "9/2015"}, {"body": "mhevery going stick injectable want introduce yet another one specific use case either way needs documented di guide", "d": "9/2015"}, {"body": "also need clean packages eg", "d": "9/2015"}, {"body": "specifically happening travis happening run", "d": "9/2015"}, {"body": "shatakshidixit importing http module separately", "d": "9/2015"}, {"body": "yes", "d": "9/2015"}, {"body": "working fine see plnkr suggest share bit code help better", "d": "9/2015"}, {"body": "code perfectly fine working project complete http code given issue appts nothing related http except routing page please help", "d": "9/2015"}, {"body": "shatakshidixit tried use also guess using version right", "d": "9/2015"}, {"body": "version longer necessary typescript added working solution", "d": "9/2015"}, {"body": "plnkr updated version", "d": "9/2015"}, {"body": "tried removing inject constructor argument alpha ts still getting unhandled promise rejection error works constructor inject productservice productservice productservice nt constructor productservice productservice", "d": "9/2015"}, {"body": "ericmdantas thanks code perfectly working", "d": "9/2015"}, {"body": "yfain included file indexhtml", "d": "9/2015"}, {"body": "shatakshidixit problem smile close please", "d": "9/2015"}, {"body": "yes sure", "d": "9/2015"}, {"body": "sure able way use injector canactivate function simple example", "d": "9/2015"}, {"body": "created new object auth original instance know", "d": "9/2015"}, {"body": "yes plan handle case think hooks able augment instructions bindings passed component", "d": "9/2015"}, {"body": "btford thanks answer", "d": "9/2015"}, {"body": "currently use attribute see pattern applicable number inputs side note amp implicit attribute value need specified", "d": "9/2015"}, {"body": "mlynch fancy pr", "d": "9/2015"}, {"body": "demonstrated flaw logic", "d": "9/2015"}, {"body": "using hashlocationstrategy stacktrace original exception route generator location included parameters passed original stacktrace dynamicsegmentgenerate package pathrecognizergenerate package routerecognizergenerate package routeregistrygenerate package routergenerate package routerlinkrouteparams package", "d": "9/2015"}, {"body": "duplicate please track issue closing one favor", "d": "9/2015"}, {"body": "use native shadow dom also need use dedicated css selectors angular rewrite", "d": "9/2015"}, {"body": "least wrote output expected output difference attribute present tag", "d": "9/2015"}, {"body": "encapsulation support deep wed sep notifications githubcom wrote least wrote moreoptionsmenu iconbutton deep width important output moreoptionsmenu iconbutton width important expected output moreoptionsmenu iconbutton width important reply email directly view github", "d": "9/2015"}, {"body": "deep removed browser spec", "d": "9/2015"}, {"body": "replaced afaik sure stay browsers support currently chrome firefox ie nt know others", "d": "9/2015"}, {"body": "everyone interested rename chromium ticket css draft", "d": "9/2015"}, {"body": "zoechi know chrome ie nt guess nt know updated anyway firefox flag works work production", "d": "9/2015"}, {"body": "api use manipulate dom shadow dom know elementref class manipulate light dom let call way use get underlying dom element get root node shadow dom regarding shadow dom emulation still need support could give another example problems", "d": "9/2015"}, {"body": "tbosch guess nt since everyone tried solveexplain issues emulating shadow dom trying change css seems impossible closing issue thank", "d": "9/2015"}, {"body": "currently writing webdriver tests polymer application ca nt make work ie dom uses shadow dom ie webdriver nt support yet even though works js situation firefox days ago anymore since last update seems flag version switched back shortly afterwards", "d": "9/2015"}, {"body": "mrpardeep please provide plunk chance take look scenario", "d": "9/2015"}, {"body": "pascalprecht thanks quick response created plunker html ts filelink", "d": "9/2015"}, {"body": "pascalprecht waiting response", "d": "9/2015"}, {"body": "mrpardeep hey took look plunk unfortunately entirely broken template paths nt match etc could fix first otherwise hard follow understand actual problem", "d": "9/2015"}, {"body": "stale feel free reopen", "d": "9/2015"}, {"body": "found example provided sure referring", "d": "9/2015"}, {"body": "updated", "d": "9/2015"}, {"body": "lgtm", "d": "9/2015"}, {"body": "yo suppose make pullrequest", "d": "9/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "cc wardbell", "d": "9/2015"}, {"body": "seeing inconsistent behavior installing alpha sometimes see typings folder root references typings files folder times file get create think would ideal would create customizable location", "d": "9/2015"}, {"body": "might problem released breaking change patch run install turn links type definition files released another patch revert change might conflict local copy install project global copy tsd would cause inconsistent behavior update copies tsd latest install run remove angular typing see issue", "d": "9/2015"}, {"body": "closing since definitelytypedtsd issue", "d": "9/2015"}, {"body": "discussed irl yjbanov agreed made sense going start later afternoon hopefully getting move completed friday", "d": "9/2015"}, {"body": "jeffbcross think worker npm module depend redistribute sources semantically feels wraps makes sense think child currently way set dart package", "d": "9/2015"}, {"body": "jeffbcross reassigning nearly done branch checklist date need unchecked tasks", "d": "9/2015"}, {"body": "would awesome rx subjects twoway databinding", "d": "9/2015"}, {"body": "let rx things", "d": "9/2015"}, {"body": "see app details", "d": "9/2015"}, {"body": "johnpapa sort dup going amend original post better reflect original issue wildcard redirect work", "d": "9/2015"}, {"body": "adjustments look good thank brian", "d": "9/2015"}, {"body": "think want params componentspecific tested plunker appears work expected incorrect please comment reopen discussion thanks", "d": "9/2015"}, {"body": "thanks clarification", "d": "9/2015"}, {"body": "think related discussion", "d": "9/2015"}, {"body": "yes looked issue concern specifically adding one looked among open issues issue closed prior release although problem seems yet solved missing", "d": "9/2015"}, {"body": "think closed npm plugin written looks like might address better way", "d": "9/2015"}, {"body": "also check source code tcb think even super hard implement unfortunately bit packed right thanks opening", "d": "9/2015"}, {"body": "see action integrationspec", "d": "9/2015"}, {"body": "vicb nt help use setup general bindings tests soon component needs tested comes bindings control anymore look like wardbell correct need extend tcb support well otherwise ca nt setup mock bindings child injectors", "d": "9/2015"}, {"body": "wardbell fyi pending pr right", "d": "9/2015"}, {"body": "see", "d": "9/2015"}, {"body": "robwormald seems like goes hand hand working week assign", "d": "9/2015"}, {"body": "prolly better suited teaching however nt think supported really convenient write template expressions like also nt think give ppl option real additional value afaics", "d": "9/2015"}, {"body": "use angularformly templates handy library context though would nt recommend people much application code say", "d": "9/2015"}, {"body": "reading email wont get update though would recommend though would nt recommend pretty crucial three characters", "d": "9/2015"}, {"body": "cc wardbell", "d": "9/2015"}, {"body": "agree may even already filed issue", "d": "9/2015"}, {"body": "better yet already fix progress pr incoming", "d": "9/2015"}, {"body": "btford thanks thats great", "d": "9/2015"}, {"body": "think looking", "d": "9/2015"}, {"body": "yup sorry duplication maybe helps issue freighted discussion bit hard follow think see technical problem knowing component file actually lives without knowledge specifying url relative component possible hope someone figure", "d": "9/2015"}, {"body": "cc wardbell", "d": "9/2015"}, {"body": "problem due fact definition restrict constructor one argument replace definition problem sovled", "d": "9/2015"}, {"body": "realized interface generated build task master correct guess also simply wait next alpha release assuming definitions update follow time definitelytyped", "d": "9/2015"}, {"body": "duplicate", "d": "9/2015"}, {"body": "unfortunately possible inject depends parameter likes however investigate nt get expected amp clearer error message", "d": "9/2015"}, {"body": "huh passed write nonangular async methods time", "d": "9/2015"}, {"body": "seeing following boilerplate top tests something similar top tests throughout angular code base looking something injecttcb done tcb gt injecttcb helper tcboverridetemplate somecomponent template createasync somecomponent roottc rtc gt nuts closer let roottc roottestcomponent", "d": "9/2015"}, {"body": "actually right actually parameter however jasmine used used unit tests actually testlib construct sure ifhow support injecting", "d": "9/2015"}, {"body": "pita object fn exist dart never use fact first action test helpers", "d": "9/2015"}, {"body": "worst dedicated akin could trick ideally could combine testbinding set tcb initialization would happy work w person responsible testing come efficient api", "d": "9/2015"}, {"body": "exist able dependencies", "d": "9/2015"}, {"body": "needed inject hard fathom asked igor thing nt know exists either suspect dart artifact relevance js developer beside point really look code convinced relatively easy fix might moment try meanwhile roll helper creates like function pass test definition fn effect drys test recommend approach others stumble question", "d": "9/2015"}, {"body": "exists type injection otherwise refer function example injected could write would work point may well", "d": "9/2015"}, {"body": "first reaction using di supply value callback nt wrapper functions say first argument past callback function see injecting something well looks like works great sure objection would sake argument let suppose wanted use di inject let developer pick goes parameter list absolutely represent jasmine manner friendly test developer plunker demonstrates trick one must represent fn class know better whether actually exported revealed bet bury anyway actual function hand bind list testbindings already building available callable function wherever inject plunker injected component constructor get idea quite apart issue asks ca nt better yet function within", "d": "9/2015"}, {"body": "would ts compiler happy one reason class make dart compiler happy actually able implement interface looking forward pr", "d": "9/2015"}, {"body": "vicb tried vs code wrote expected complain reason nt would moved technique telling ts object instantiated class called pr afraid nt know testlib well enough know slide fix know scrambling deliver near term deadline ca nt expect anyone jump right expect keep issue open crisis passes revisit entire testsupport api thanks maintaining interest", "d": "9/2015"}, {"body": "duplicate mhevery probably closed", "d": "9/2015"}, {"body": "sorry duplication current definition type also implies interface assigned type applying bind interface also results compilation error typescript expected behaviour", "d": "9/2015"}, {"body": "closing dup", "d": "9/2015"}, {"body": "renamed issue nothing ngmodel crux issue ngclass empty strings", "d": "9/2015"}, {"body": "wardbell wonder fix first reaction trim strings representing class names simply ignore empty blank strings wdyt", "d": "9/2015"}, {"body": "trim ignore extra white space sure empty string ignored means additional class names would mind string variant ngclass api removed object notion clear perhaps easier construct", "d": "9/2015"}, {"body": "wardbell right pr trims class names regarding removal stringbased form nt use often comes handy need calculate class name dynamically nt know upfront supercommon happens btw particular use case easiest approach would go without directive use specialcased syntax compiler", "d": "9/2015"}, {"body": "yes used worth teaching perfect setting single class value great multiple class names set many ways skin cat ever enough ps problem calculating class name dynamically adding definition object object indexing quite cool composing string backtick interpolation serviceable", "d": "9/2015"}, {"body": "pascalprecht use selector able query shadow roots fairly easy implement hope implemented view encapsulation set else would use dcl add child components use native shadow dom", "d": "9/2015"}, {"body": "looking solution found use inject constructor guestion nt able resolve someone explain making wrong thanks", "d": "9/2015"}, {"body": "hey svrcekmichal leave information dev stack looks like experiencing issue pkozlowskiopensource repositories", "d": "9/2015"}, {"body": "pascalprecht mentioned using mgechev", "d": "9/2015"}, {"body": "seen behavior case using feature without importing although little specific case error message see plnkr comment example get message indicating defined gives idea going comment fail message message thrown every class used missing imports difference others injected constructor like issue although nt use add missing import", "d": "9/2015"}, {"body": "absolete", "d": "9/2015"}, {"body": "rolandjitsu file provide reproduction stack trace", "d": "9/2015"}, {"body": "jeffbcross see travis built spits strict mode error sure file one cdn one available npm distribution folder line complains ps version firefox", "d": "9/2015"}, {"body": "hmm problem rx probably commit changed assignment declaration think assignment okay strict mode ie", "d": "9/2015"}, {"body": "jeffbcross way fix fails tests", "d": "9/2015"}, {"body": "jeffbcross oh saw angular moved rxnext thus suppose issue persist anymore", "d": "9/2015"}, {"body": "moved hooks separate file doc purpose ie documented one place able link module directives inline doc moving core still allows", "d": "9/2015"}, {"body": "already worked like start contributing project", "d": "9/2015"}, {"body": "tyleranton please take", "d": "9/2015"}, {"body": "jeffbcross awesome", "d": "9/2015"}, {"body": "jeffbcross existing lifecycle folder go instead", "d": "9/2015"}, {"body": "tyleranton would move", "d": "9/2015"}, {"body": "jeffbcross cool got done last question reexport lifecyclehooks exports reexporting exports done like way specify exporting", "d": "9/2015"}, {"body": "mhevery igorminar talking changing bundle provide import path would still include core router http dependencies could imported documented export would remove ambiguity docs nt two messages import things would breaking change consumer could import anymore think makes things simpler falls inline discussions decoupling concerns bundles sources imports see issues change cc yjbanov rkirov", "d": "9/2015"}, {"body": "jeffbcross thought break still keep super bundle could still import looks like need chat", "d": "9/2015"}, {"body": "jeffbcross experimenting cjs bundles discussed yesterday one thing comes mind discussing splitting code move cjs want separate bundles core http etc guess need make sure bundles ex import public part core otherwise would end pulling code multiple bundles example looking see imports like would totally fine systemregister need think harder problems moving cjs sorry nt want hijack thread since talking splitting bundles gets exported need take account", "d": "9/2015"}, {"body": "mhevery still assumption operating igorminar reconsidering value added letting users import vs importing would still super bundle would nt reexport contents chat office", "d": "9/2015"}, {"body": "pkozlowskiopensource think correct modules require public apis http easy facades could removed given longer supports dart", "d": "9/2015"}, {"body": "think best use case bundle prototypes reproductions given nt think default recommended way use angular production nt think standardize docs examples import", "d": "9/2015"}, {"body": "jeffbcross agree sticking public api core would doable probably harder parts router animation though given nt think default recommended way use angular production nt think standardize docs examples import jeffbcross would recommended setup people bundling app framework things like webpack browserify systemjs serving nonbundled files thnx goodies sth else main concern easy get started explore", "d": "9/2015"}, {"body": "new yet released", "d": "9/2015"}, {"body": "thx help used correct still wondering use thouse multibindings directly injector thx best wishes manfred", "d": "9/2015"}, {"body": "multi binding also yet release ca nt use alpha", "d": "9/2015"}, {"body": "manfredsteyer also use case multi bindings able resolve problem withoutem", "d": "9/2015"}, {"body": "pascalprecht yes resolve problem without seems ngmodeldirective uses get validators injected everything one binds ngvalidator ngvalidators future injected validation ngmodel wondered works covers guess future releases injector method get several dependencies one token getall something", "d": "9/2015"}, {"body": "obsolete", "d": "9/2015"}, {"body": "prefered method without router", "d": "9/2015"}, {"body": "well thank works got one much working example could nt find examples hours testapproaches success hope help people thank", "d": "9/2015"}, {"body": "known issue vsavkin working already", "d": "9/2015"}, {"body": "likely dup", "d": "9/2015"}, {"body": "vsavkin closed", "d": "9/2015"}, {"body": "think actually try get away using bower simply stick npm best package manager bower could simply install github endpoint tho solve issue sep david gang notifications githubcom wrote feature request may connected one main workflows today maintaining dependencies parties bower bowerjson contains dependencies bower command line used download modules transitively afterwards use modules like mainbowerfiles create list files fetched application gulp snippet looks like gulpsrc bowerfiles pipe jsfilter pipe sourcemapsinit pipe concat vendorjs pipe sourcemapswrite pipe gulpdest lib afterwards vendorjs included indexhtml situation angular downloaded npm also bowerjson file missing main property would possible maintain bower workflow would mean packages uploaded bower bowerjson filled properly workflow envision reply email directly view github", "d": "9/2015"}, {"body": "hi pascalprecht installing bower endpoint would solve halve problem would need additionally modify bowerjson file would need add main property otherwise workflow mainbowerfiles mentioned would work could create pr way would want go go npm way would get list dependencies transitive dependencies would included browser find equivalent module tasks could integrated gulp thanks david", "d": "9/2015"}, {"body": "transitive dependencies would need declared packagejson well afaik bower nt know planned story bower latest status bower dead", "d": "9/2015"}, {"body": "agree reading looks like get away npm clear equivalent bower main property packagejson sure provide sooner later", "d": "9/2015"}, {"body": "hi manfred basically means assigning instance component local variable well elementcomponent one directive angular know instance want get reference property annotation allows export directive instance specific name case hope clarifies", "d": "9/2015"}, {"body": "hi pascal thanks quick reply great explanation wishes manfred", "d": "9/2015"}, {"body": "could implement onactivate interface used resolve data component navigation completes called canactivate component activated resolved using promise", "d": "9/2015"}, {"body": "brandonroberts bad idea concern necessarily couples component router think vs using constructor di would allow testreuse component independently router", "d": "9/2015"}, {"body": "planned feature another issue expended plan implementing", "d": "9/2015"}, {"body": "nt seem get error typescript nt convert expected would interest converting intnumber cases type equals number added complication handled means", "d": "9/2015"}, {"body": "would assume type number value exposed model would also numeric value dart throws error type mismatch converting variable type string fixes symptom string", "d": "9/2015"}, {"body": "include", "d": "9/2015"}, {"body": "closing issue assumption wrong based changes return value locationpath new version router thanks suggestion however still turns nt include coredirectives get access classactive still accessible default", "d": "9/2015"}, {"body": "looked functioncall events produced chrome compared chrome looks like chrome producing extra ones scriptname set probably results overreporting need find additional functioncalls save ignore since seem included functioncall events scriptname chrome chrome", "d": "9/2015"}, {"body": "michael could add logic count functioncalls nested inside others general fri sep pm michael goderbauer notifications githubcom wrote looked functioncall events produced chrome compared chrome looks like chrome producing extra ones scriptname set probably results overreporting need find additional functioncalls save ignore since seem included functioncall events scriptname chrome r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat devtoolstimeline dur name functioncall ph x pid tdur tid ts tts chrome r args data frame scriptid scriptline scriptname cat disabledbydefaultdevtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat disabledbydefaultdevtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat disabledbydefaultdevtoolstimeline dur name functioncall ph x pid tdur tid ts tts r args data frame scriptid scriptline scriptname cat disabledbydefaultdevtoolstimeline dur name functioncall ph x pid tdur tid ts tts reply email directly view github", "d": "9/2015"}, {"body": "discussed offline events nested also logic already exists", "d": "9/2015"}, {"body": "take look next week vsavkin nt beat", "d": "9/2015"}, {"body": "related", "d": "9/2015"}, {"body": "think line code worth hundred words decided implement fork working nicely implemented also dart using mirrors", "d": "9/2015"}, {"body": "currently refactoring step would happen focus next expect committed time", "d": "9/2015"}, {"body": "vsavkin register class annotations properties", "d": "9/2015"}, {"body": "feel ready sorry nt know either", "d": "9/2015"}, {"body": "agree see includes change", "d": "9/2015"}, {"body": "addressed", "d": "9/2015"}, {"body": "great", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "problem idea going since stack trace nothing related code", "d": "9/2015"}, {"body": "got issue first time used angular need change import rx systemjs config", "d": "9/2015"}, {"body": "unfortunately nt seems resolve issue allthough looks really similar", "d": "9/2015"}, {"body": "error message adding formdirectives component using version issue systemconfig solution also nt resolve issue", "d": "9/2015"}, {"body": "see maybe", "d": "9/2015"}, {"body": "probably still use older version systemjs ca nt get work moment changing systemjs version results angular kicking appjs loaded system nothing happens errors looks lot like", "d": "9/2015"}, {"body": "mentioned referenced bugs change html something like html test systemconfig defaultjsextensions true baseurl paths app appjs components lt em gt components lt em gt js services lt em gt services lt em gt js loading", "d": "9/2015"}, {"body": "alpha configuration directive priority implemented functions ie specify get called although implemented nt specify configuration directive structural type checking used lifecycle methods get called cd must case pr merged soon remove lifecycle configuration directive implemented hooks automatically get called", "d": "9/2015"}, {"body": "fyi working chapter application testing dev guide would serve guide developers writing tests explore features confirm bugs", "d": "9/2015"}, {"body": "also stumbled", "d": "9/2015"}, {"body": "ericmartinezr asked attach example since bit different error happens clicking page link", "d": "9/2015"}, {"body": "amazing writeup ericmartinezr take look tomorrow afternoon", "d": "9/2015"}, {"body": "probably related", "d": "9/2015"}, {"body": "solved closing duplicate", "d": "9/2015"}, {"body": "issue", "d": "9/2015"}, {"body": "seeing thing", "d": "9/2015"}, {"body": "noticed issue reported atom typescript plugin gulp task use compile project however nt complain", "d": "9/2015"}, {"body": "locally modified using alpha typescript interface type extends function new args", "d": "9/2015"}, {"body": "looks like fixed", "d": "9/2015"}, {"body": "similiar error without using router http application instead happens using forms creating controls seems rx wo nt loaded correctly sure update tried debug rxobject subject beeing called nt got function property called default property function subject definitly looks like loading problem", "d": "9/2015"}, {"body": "thelgevold issue maybe", "d": "9/2015"}, {"body": "zyzle yes looks like caused using outdated version systemjs updated samples use latest version working http router added components thanks help", "d": "9/2015"}, {"body": "suspect read type information ast take closer look get chance", "d": "9/2015"}, {"body": "sounds exactly like probably close one duplicate another", "d": "9/2015"}, {"body": "new compiler refactoring easy implement please wait", "d": "9/2015"}, {"body": "thanks spend time investigating next week meantime see still issue many fixes release may addressed problem ah nt notice angular bindings think work may fix spend time investigating next week thanks reproduction", "d": "9/2015"}, {"body": "tested new build work correctly thanks", "d": "9/2015"}, {"body": "get ahold nt working please open new issue includes reproduction showing expected vs actual behavior thanks", "d": "9/2015"}, {"body": "nt work page refresh part rootrouter constructor thanks closing", "d": "9/2015"}, {"body": "ah misunderstood yes see issue", "d": "9/2015"}, {"body": "yes set base href html", "d": "9/2015"}, {"body": "getting error also renamed routerinjectables gt routerbindings", "d": "9/2015"}, {"body": "yet nt seem work doubt might something missing tried even change location strategy vain", "d": "9/2015"}, {"body": "check anything helps stopped using base tag instead using bind appbasehref", "d": "9/2015"}, {"body": "nope still fix error something related rxjs typeerror rxsubject function might cause error", "d": "9/2015"}, {"body": "quick reminder change router injectables directives names routerbindings routerdirectives including party rxjs http module includes", "d": "9/2015"}, {"body": "including http module depending standard fetch http calls yes modified routerinjectables routerbindings need http module make router work standard rxjs use party library importedused", "d": "9/2015"}, {"body": "answers actually really like ng http module routerdirectives nt rxsubject function dig onto rxsubject undefined use rxsubject using callback function rxsubjectthen provide code use rxsubject hard way", "d": "9/2015"}, {"body": "avoiding ng http module nonstandard standard fetch api gives flexibility already integrated evergreen browsers ie extra download give try perform better defined standard future proof main reason team took http module core separate js yes modified routerdirectives routerdirectives rxsubject code typed line latest thissubject new rxsubject", "d": "9/2015"}, {"body": "debanjanbasu try instead", "d": "9/2015"}, {"body": "well giving another form error indexhtml file looks like inventman realtime smart inventory management prediction loading use strict systemimport jstscomponentsapp error encountered basically searching jspmio cdn local directory wondered error earlier", "d": "9/2015"}, {"body": "basically searching jspmio cdn local directory think related using outdated version systemjs", "d": "9/2015"}, {"body": "zyzle thanks router working", "d": "9/2015"}, {"body": "zyzle thanks ton finally guide explained use latest systemjs earlier angular versions could use mentioned changelog one breaking changes finally working", "d": "9/2015"}, {"body": "formdirectives part angular alpha gt please upgrade least version even better facing issues version router", "d": "9/2015"}, {"body": "formdirectives module need import future reference first thing check whenever see error like things import actually defined", "d": "9/2015"}, {"body": "available starting using upgrade latest release", "d": "9/2015"}, {"body": "thanks help incorrect version typings using version editor types importing fine nt actually available", "d": "9/2015"}, {"body": "duplicate", "d": "9/2015"}, {"body": "bit specific nt work mean url manager nt let access requesting files per ajax information needed", "d": "9/2015"}, {"body": "pascalprecht thanks respond humanstxt robotstxt accessible via domain name add humanstxt end domain name automatically redirect home url actually never access files note use removing url url manager", "d": "9/2015"}, {"body": "okay couple things sounds bit like angularjs uirouter code repository angular case would rather issue use push state api mode server needs configured always serve file spa served case soon use client responsible particular url need configure state requests data server better tell server always serve except requested serve course depends actually want content please verify really issue angular repo close issue thanks", "d": "9/2015"}, {"body": "pascalprecht yeah angular honest mistake", "d": "9/2015"}, {"body": "sure try ex latest release", "d": "9/2015"}, {"body": "thanks much might helpful put link angulario npm got smile", "d": "9/2015"}, {"body": "jeffbcross represent logical children toplevel module mean displaying default without user need open toplevel module first would agree would bit inconsistent nt sublevel modules right maybe rather something like categories meta modules created available toplevel module would module components underneath pretty much said enforcing toplevel modules without sublevel modules sublevel modules", "d": "9/2015"}, {"body": "think everything depends upon developer sees structure imports modules would see listed ide importing left nav reflect nt think developer know care groupings proposing make harder find something know less name never liked easter egg hunt angular looking ngclick oops wrong bucket keep looking oh right directives keen suggestion think would like modulelevel trampoline page lists members alphabetical grid compact representation long list left nav describing supplementary navigational aid", "d": "9/2015"}, {"body": "guess problem generally stated concern noise hundreds things exported exported used public apis though firstclass public apis return types parameters classes mostly constructed via di example", "d": "9/2015"}, {"body": "yes whole comment single sentence", "d": "9/2015"}, {"body": "maybe need marker small stuff exposed want see anything small stuff comment hidden default available checking show", "d": "9/2015"}, {"body": "search find anything large small", "d": "9/2015"}, {"body": "marker may useful guess ratio actual public apis types happen used public apis something low like", "d": "9/2015"}, {"body": "kind like idea structured comment humans dgeni quickly read understand classification categorization exported module member little tedious first bit inexpensive resource take first crack sweep maybe automate first sweep worth discussing internally", "d": "9/2015"}, {"body": "cc alexwolfe think already working redesigning side nav", "d": "9/2015"}, {"body": "petebacondarwin one requirement looking within module also want able reorder based type alphabetize currently export everything order appears api order like implemented module globals everything enum const interface class enums consts interfaces classes", "d": "9/2015"}, {"body": "hmm ok hearing export loads things particularly relevant reader api docs arbitrary grouping exports module actually hinder browsing docs would good navigation way hide notsoimportant exports exports sorted type globals enums interfaces classes etc alphabetically exported items still navigablesearchable certainly dgeni jsdoc tag exports says either primary secondary navigable item navigation could arranged different styling possibly dynamic show different navigable types quite sure want also note sorting items type order alphabetizing might fall foul number ward keen", "d": "9/2015"}, {"body": "also prevents creating forms compiler complains missing constructor", "d": "9/2015"}, {"body": "duplicate pr land today early next week", "d": "9/2015"}, {"body": "nt duplicate", "d": "9/2015"}, {"body": "pkozlowskiopensource kind closing", "d": "9/2015"}, {"body": "called wo nt solve issue tho", "d": "9/2015"}, {"body": "well throws error", "d": "9/2015"}, {"body": "issue moving alpha difference example given setup binding nt use breaking changes missing changelog maybe", "d": "9/2015"}, {"body": "zyzle maybe using base tag correct nt find anything changelog guess case", "d": "9/2015"}, {"body": "hmmn impression nt necessary ca nt seem find issue would make think edit adding nt actually fix problem", "d": "9/2015"}, {"body": "found issue least become making change fixed issue mention changelog see though cry", "d": "9/2015"}, {"body": "zyzle might part changes", "d": "9/2015"}, {"body": "ericmartinezr seems happened commit message breaking change nt seem hoovered changelog script", "d": "9/2015"}, {"body": "zyzle welp explains", "d": "9/2015"}, {"body": "zyzle worked nice spotted well expecting naming changes anyway works still need closing issue", "d": "9/2015"}, {"body": "mhevery probably duplicate", "d": "9/2015"}, {"body": "dup", "d": "9/2015"}, {"body": "cc tbosch adamdbradley", "d": "9/2015"}, {"body": "like note schema registry used inside compilation probably offline ie interceptors need parts runtime registered compilation registered", "d": "9/2015"}, {"body": "yes would allow us easily custom logic troublesome properties fix following issues", "d": "9/2015"}, {"body": "nt see conflict either use interfaces runtime check dev mode discover transformer generate lifecycle call sites let erase interfaces later sure would work ts erases information interfaces", "d": "9/2015"}, {"body": "today seems compiler calls directivebindingcreatefrombinding turn check interfaces implemented later point probably retrieved metadata generated transformer instead implemented need reflector information implemented interfaces least lc hooks ts js would use structural type check optional would documented best practice", "d": "9/2015"}, {"body": "vicb refactored somehow could drop really would like get breaking change asap", "d": "9/2015"}, {"body": "anything help move forward obviously big enough change nt go ahead implement way important bunch things time created ticket feel bit guilty anything idea basically talked implement essence routernavigateinstructionrouternavigate method update router among things planned abstract real point add canreuse function work fine components one places pushing history might nice would directives example tying earlier example might nice able write directive targeting attribute set element scroll location subscribe routing changes scroll based update url based current position first part definitive done though might bit hacky depending easy get parent component directive also side note might guessed bit new world angular open source development even programming junior cs major bit confused terminology mean debouncing url updates talking rate limiting updates", "d": "9/2015"}, {"body": "iapark appreciate offer think matsko igorminar need sit design work idea work happy help implementing feature debouncing yep see", "d": "9/2015"}, {"body": "harry none sense file lists calculate via glob distjscjsperfjs exclude js dart protractorjsconfjs tobias mon aug harry terkelsen notifications githubcom wrote canonical list benchmarks would also like know ones supported js js seems like way find go benchmark source file see benchmarks declares tbosch reply email directly view github", "d": "9/2015"}, {"body": "igorminar early input using internationalization apis short might best path move forward", "d": "9/2015"}, {"body": "thanks linking issue tue sep pawel kozlowski notifications githubcom wrote igorminar early input using internationalization apis short might best path move forward reply email directly view github", "d": "9/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "believe requirements satisfied", "d": "9/2015"}, {"body": "yes work", "d": "9/2015"}, {"body": "agreeing work", "d": "9/2015"}, {"body": "preferences look like one file per component want folders directives services imo engineered case", "d": "9/2015"}, {"body": "note need likely need improve build script account multiple files shahata also wanted migrate code typescript think splitting first best agree pragmatic", "d": "9/2015"}, {"body": "gotcha", "d": "9/2015"}, {"body": "currently bug http file get around temporarily hacked file project get angular team fixes source file", "d": "9/2015"}, {"body": "resloved", "d": "9/2015"}, {"body": "stale", "d": "9/2015"}, {"body": "resolved removed traceur", "d": "9/2015"}, {"body": "thanks help got issue fri aug pm pawel kozlowski notifications githubcom wrote probably put something directive list nt exist time due missing misspelled import ex import imnothere somewhere view directives imnothere hard say without context please try support forum types questions want keep github issues bug reports feature requests thnx reply email directly view github", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "think saw weekly meeting notes going stay added", "d": "9/2015"}, {"body": "tbosch comment", "d": "9/2015"}, {"body": "mmm losing something componentcomponenttype type want specific instance created router new one constructor dont know maybe need different approach", "d": "9/2015"}, {"body": "yjbanov nt closed", "d": "9/2015"}, {"body": "gkalpak yep", "d": "9/2015"}, {"body": "sounds like resloved closing", "d": "9/2015"}, {"body": "would like either see replace component view problem style eg mygrid component component valid html dom element width attribute ignored way set width angular dealt using replace attributes directives tag copied", "d": "9/2015"}, {"body": "replace deprecated angular probably architectural issues removing dom element originally linked directive guess even reintroducing previously deprecated features could problematic also thinking shadow root host element guess could even problem general think nt good idea begin totally clean dom structure structuring components well nt need ceolter modern html nt really invalid dom element think terms custom element specification issue related fact browser default unknown elements ca nt certain box properties give style fine", "d": "9/2015"}, {"body": "gionkunz right current thinking nt want reintroduce makes hard reason directives components matching host element cases presented far looks like always better approach host attributes properties closing happy revisit different cases arise", "d": "9/2015"}, {"body": "gionkunz pkozlowskiopensource excellent makes sense shall try many thanks", "d": "9/2015"}, {"body": "closing listeners renamed drops lifecycleevent enum", "d": "9/2015"}, {"body": "digging code realized symbol mean nt executed controller instantiated neither working case someone else gets issue problem would way defining lifecycle hooks right least function userlistcontroller thisonactivate function thiscandeactivate function return true thisondeactivate function userlistcontroller canactivate function return true hope helps thanks answer brian", "d": "9/2015"}, {"body": "seems like nice improvement think renaming query types also good idea add think endusers going find subtleties viewcontent space challenging really sure done point simplify since core concept", "d": "9/2015"}, {"body": "closing due", "d": "9/2015"}, {"body": "reassigning kegluneq ready begin implementation transformers front start using lookupmap class right away depending lookupmap package necessary features landed initial support treeshaking keys available full implementation support constkeys available next dev release", "d": "9/2015"}, {"body": "fyi released yesterday support available dev channel", "d": "9/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "sumigoma mhevery btford pascalprecht ajoslin tlancina compile similar compile template component best way loadnexttolocation probably loaderloadtemplate nt instance component ca nt pass variables nt regards angular would service would call templateurl would compile template scope options service function", "d": "9/2015"}, {"body": "danicomas yes using", "d": "9/2015"}, {"body": "mhevery saying use dynamiccomponentloader passing root elementref ca nt use without elementref exist something like get template create scope compile", "d": "9/2015"}, {"body": "also use case plunkr example provided use compiler suggested mhevery compile template injected runtime", "d": "9/2015"}, {"body": "mhevery news tbosch vicb", "d": "9/2015"}, {"body": "create components fly like load using", "d": "9/2015"}, {"body": "nice mhevery see using services possible via injection core saying correct way load via loaderloadnexttolocation dynamiccomponentloader method instead get template compile", "d": "9/2015"}, {"body": "chatted alxhub think solution part", "d": "9/2015"}, {"body": "closed igorminar", "d": "9/2015"}, {"body": "", "d": "9/2015"}, {"body": "fixed already", "d": "9/2015"}, {"body": "igorminar look like made dt yet", "d": "9/2015"}, {"body": "believe stopped publishing dts files definitely typed favor distributing via npm alexeagle confirm wed sep pm roland groza notifications githubcom wrote igorminar look like made dt yet reply email directly view github", "d": "9/2015"}, {"body": "still publishing definitelytyped angular release tracking work make possible depend angular typings npm nt decided still publish definitelytyped well however nt see folder latest npm alpha either note nt done release couple weeks lot breaking changes resolve alpha running angular build see finally cut release file published definitelytyped least make decision publishing typings npm package exclusively", "d": "9/2015"}, {"body": "alexeagle thanks curious since issue closed could see typings anywhere yet looking forward next release though", "d": "9/2015"}, {"body": "currently way remove calls function compilation", "d": "9/2015"}, {"body": "status vicb mhevery", "d": "9/2015"}, {"body": "aside could implemented pure pipe would cause transform called input changed", "d": "9/2015"}, {"body": "nt want another want create component input text select adding first component form mhevery possible solution", "d": "9/2015"}, {"body": "yes another form unwanted danicomas mhevery got workaround", "d": "9/2015"}, {"body": "vsavkin comment could create without demarcate container way", "d": "9/2015"}, {"body": "reopen issue mhevery vsavkin nt", "d": "9/2015"}, {"body": "imho think looking inputtext controlpath uppercase directives showerror formdirectives class inputtext controlpath string value string constructor also mix templatedriven forms modeldriven forms totally fine elaborate case reached point also takes bit effort need explanation", "d": "9/2015"}, {"body": "consolelog nt return modified value", "d": "9/2015"}, {"body": "think modified value need propagated parent component somehow probably write something custom like ngmodel sure though trying think related posted sample code question danicomas could see also trying something like posted post think lot people would trying solve problem mhevery vsavkin pointers solve much appreciated", "d": "9/2015"}, {"body": "updated example easier see problem pushing data pulling data sets twoway data binding since trying set similar would using setting binding value property component parent", "d": "9/2015"}, {"body": "found solution case answer post helped", "d": "9/2015"}, {"body": "yes problem nt know child value parent component think work think mhevery", "d": "9/2015"}, {"body": "mmrath solution working well nt know add click onsubmit form", "d": "9/2015"}, {"body": "made small typo rather seeing two logs rather one", "d": "9/2015"}, {"body": "nice updated mmrath solution ngform ngcontrol detected mmrath solution working expected controlgroup form working click submit button form invalid", "d": "9/2015"}, {"body": "wonder time use attributes like attribute inside throws error ca nt bind since nt known property element matching directives corresponding property", "d": "9/2015"}, {"body": "martinsik never binding attributes always properties write since element using property short always binding properties given dom element must property point changing property nt exist supported", "d": "9/2015"}, {"body": "martinsik fyi explained", "d": "9/2015"}, {"body": "chatting tbosch ideas", "d": "9/2015"}, {"body": "btford say able get angular new router", "d": "9/2015"}, {"body": "btford easy setting plunks prebuild artifact available online somewhere", "d": "9/2015"}, {"body": "sanderelias plunk example prebuilt artifact want use", "d": "9/2015"}, {"body": "would go specifying need change detection working simple view locals handy html width earlier versions using hack trigger change detection based events ca nt anymore unless would like update directive model sometimes might nt want working simple view locals best practice missing cheers", "d": "9/2015"}, {"body": "gionkunz using point accessing dom properties interested input value", "d": "9/2015"}, {"body": "pkozlowskiopensource actually debatable feature hacky actually really liked specify events element causes change detection explicit also flexible also whats maybe still nt listed example", "d": "9/2015"}, {"body": "right definitively update examples", "d": "9/2015"}, {"body": "sure understood question guess easier way redirect would router similar routerlink works way possible otherwise class route components best regards tiago braga", "d": "9/2015"}, {"body": "quick update issue fixed issues opened general fix redirects going close addressed feel free open new issues cases describe still work thanks", "d": "9/2015"}, {"body": "btford thank", "d": "9/2015"}, {"body": "antonmoiseev issue found point", "d": "9/2015"}, {"body": "antonmoiseev fixes problem", "d": "9/2015"}, {"body": "updates", "d": "9/2015"}, {"body": "temporarily added modified version sample project find", "d": "9/2015"}, {"body": "confirmed issue resolved", "d": "9/2015"}, {"body": "ups sorry", "d": "9/2015"}, {"body": "mhevery moving default pipes outside core assume keep inside core bound empty list compiler relies binding flatten view pipes default pipes user wanted use default pipes would override binding like", "d": "9/2015"}, {"body": "jeffbcross pipes directives set way since directives part core think pipes well", "d": "9/2015"}, {"body": "recapping vc mhevery moving forms core adding default bindings root injector keeping pipes core keeping pipes bindings root injector keeping directives core bundle bundle include core router concatenated include http router bindings default bundles plus testing bundles", "d": "9/2015"}, {"body": "closing major work landed several followup issues filed urgent docs typings make typings match bundles urgent refactor reorganize testing bundle import urgent refactor include http router chore move srccompiler srccorecompiler discuss remove refactor move refactor deprecate import dart", "d": "9/2015"}, {"body": "petebacondarwin could work one us hoping easy", "d": "9/2015"}, {"body": "look today", "d": "9/2015"}, {"body": "fix merged using ran similar issue sure exactly nt know open new issue use one", "d": "9/2015"}, {"body": "merged expect restart working coming weeks pending bootstrap refactoring happened", "d": "9/2015"}, {"body": "rkirov fixed last week using instead", "d": "9/2015"}, {"body": "pascalprecht mhevery nt think perf influence usage unless talking confirmed hot path good thing point constructs improve readability avoid stupid hoisting errors simplify treatment interests dominate similar sweeping perf arguments made captures know captures wonderful rare occasion nt hot path imo caveat sufficient reason prohibit discourage captures everywhere", "d": "9/2015"}, {"body": "wardbell agree still like know perf penalty transpile code also used natively", "d": "9/2015"}, {"body": "oh yes much penalty many loops difference hits knowledge good", "d": "9/2015"}, {"body": "afaik pretty welloptimized typescript nt need discouraged application developers regarding fat arrow ca nt remember details seen significant negative results macro benchmarks using think typescript compiler good choosing optimal fat arrow transpilation approach based context example put block typescript playground transpiles seems pretty safe docs nt think need worry using let fat arrow angular especially hotter parts like compiler di change detection important optimize pascalprecht pr changing di tests concern lots optimizations core would nt recommended best practices users like take look file", "d": "9/2015"}, {"body": "jeffbcross thanks clarifying comment assume perf penalty transpiling", "d": "9/2015"}, {"body": "still sure perf penatly expensive geniously curious", "d": "9/2015"}, {"body": "gkalpak sorry saying expensive sure cases fat arrow nt transpiled efficient code ie may transpiled", "d": "9/2015"}, {"body": "jeffbcross see thx clarifying never seen transpiled usually nt look transpiled code complex scripts definitely something keep eye hot paths", "d": "9/2015"}, {"body": "sorry still miss components services etc registration without polluting global scope reading times pascalprecht igorminar comments nt get yet solution following tiny working example appjs function var hellocomponent far ok would like example refactored way helloservicejs function function helloservice helloserviceprototypegreeting function return hello appjs function var hellocomponent seems understand port suggestion true mystery following snippet would way helloservicejs function angular module foo factory helloservice helloservice appjs function angular module foo controller mycontroller mycontroller seems missing mechanism di register get instances components played injector injectable api without success thanks lot hint update digging bit resolved usual global export approach programmer handle global appmodulejs var mymodule appservicejs function module function hellos hellosprototypegreeting function return hello mymodule appjs function module var hellocomponent hellos modulehellos mymodule", "d": "9/2015"}, {"body": "also able reproduce error explicitly state undefined still got message pkozlowskiopensource mentioned", "d": "9/2015"}, {"body": "obsolete", "d": "9/2015"}, {"body": "change query algorithm restriction relevant number queries given element used within subtree query since much less strict closing issue", "d": "9/2015"}, {"body": "fix", "d": "9/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "take one far see soon eventemitter removed dependency http blocking issues", "d": "9/2015"}, {"body": "mgechev yep coordinate robwormald prevent stepping toes since lot inside", "d": "9/2015"}, {"body": "selfassign consider mgechev actual assignee", "d": "9/2015"}, {"body": "less completed anyway whilst refactoring observable stuff couple bits mockbackend remove go isfunction whatnot kind things", "d": "9/2015"}, {"body": "case want task commit pr removing remaining facade stuff robwormald", "d": "9/2015"}, {"body": "ok love help next phase refax eventemitter facade think http control q handy things like isfunction facade useful pulled well sep jeff cross notifications githubcom wrote case want task commit pr removing remaining facade stuff robwormald reply email directly view github", "d": "9/2015"}, {"body": "robwormald think mhevery one ask facade recent convo think opinion utilities like pulled facade facade treated common abstractions platform apis subtle differences js dart", "d": "9/2015"}, {"body": "petebacondarwin look complicating api doc authoring work", "d": "9/2015"}, {"body": "naomiblack amp btford fix care take look", "d": "9/2015"}, {"body": "matsko looking", "d": "9/2015"}, {"body": "duplicate", "d": "9/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "would work minification would break", "d": "9/2015"}, {"body": "ah good point introduces minification problems angular closing unless igorminar way avoid minification problem", "d": "9/2015"}, {"body": "note abandoned weekly manual sync process nt figure good solution rebasing repo", "d": "9/2015"}, {"body": "pkozlowskiopensource updated pr feedback couple lines thoughts", "d": "9/2015"}, {"body": "landing rootinjectors array need mutated reflect injectors coming view containers", "d": "9/2015"}, {"body": "made progress broccoli build toolchain bootstrapping running next blocker run", "d": "9/2015"}, {"body": "fixed gulp buildjs gulp docs handing vsavkin continue fixing introduced errors angular current wip", "d": "9/2015"}, {"body": "remove duplicate looks like fixed different release would accept pull request", "d": "9/2015"}, {"body": "would needed reopen reading di code nothing environment specific would incredibly useful use nodejs project", "d": "9/2015"}, {"body": "davidsouther totally use module even without using angular however requires install whole framework might want would also like hear jeffbcross thoughts", "d": "9/2015"}, {"body": "agreed making standalone published module especially since dijs dying slow death", "d": "9/2015"}, {"body": "trouble getting working typescript node projects likely blocked microsofttypescript", "d": "9/2015"}, {"body": "seems like slowly moving away angular going framework decoupled libraries position safe say officially longer goal", "d": "9/2015"}, {"body": "nateabele good question primary goal moment focus creating good integrated experience framework definitely minds start thinking value decouple parts framework di obvious bit though di moved module vsavkin planning add npm release process soon sure going published existing di package npm new one though", "d": "9/2015"}, {"body": "jeffbcross sounds great thanks update", "d": "9/2015"}, {"body": "category names chrome changed identified changes far removed instead use working pr incorporate change benchpress", "d": "9/2015"}, {"body": "michael could try ping chrome team whether could actively tell us change protocol maybe mailing list already tue sep pm michael goderbauer notifications githubcom wrote category names chrome changed identified changes far disabledbydefaultdevtoolstimeline gcevent removed instead use devtoolstimeline minorgc devtoolstimeline majorgc minorgc devtoolstimeline minorgc majorgc devtoolstimeline majorgc disabledbydefaultdevtoolstimeline functioncall devtoolstimeline functioncall disabledbydefaultdevtoolstimeline layout devtoolstimeline layout disabledbydefaultdevtoolstimeline updatelayertree devtoolstimeline updatelayertree disabledbydefaultdevtoolstimeline paint devtoolstimeline paint disabledbydefaultdevtoolstimeline recalculatestyle blink devtoolstimeline updatelayouttree working pr incorporate change benchpress reply email directly view github", "d": "9/2015"}, {"body": "answer chrome team announce changes events regarding public interface yet however could contribute layout test checks events expect something along lines add ourself watch list test expectations see opening separate issue", "d": "9/2015"}, {"body": "vsavkin closed", "d": "9/2015"}, {"body": "tbosch syntax example rather right plunker working code anyone else playing around", "d": "9/2015"}, {"body": "kara yes correct", "d": "9/2015"}, {"body": "closed", "d": "9/2015"}, {"body": "think multiple checks see tests passes ongoing prs think already one yep need run another ci check", "d": "9/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "jeffbcross still experiencing issues systemjs consumes lot cpu", "d": "9/2015"}, {"body": "yjbanov jeffbcross always happy help perf feel free copy specific cases share", "d": "9/2015"}, {"body": "thanks guybedford include profile information today looks like performance degraded added layer indirection imports typescript coreexportsjs export srccoreservices srccoreservicesjs export foo servicesfoo export bar servicesbar", "d": "9/2015"}, {"body": "collected profile example app branch fetches data http renders page", "d": "9/2015"}, {"body": "jeffbcross thanks patience look profile seems like may bulk export issue described spending time declaration phase lots objectkeys calls exactly export uses declarations tell repo link running systemjs traceur build clarify exactly version traceur using thing check would transpiled source correct bulk exports format performance fix otherwise share instructions run folder check transpiled source would great help", "d": "9/2015"}, {"body": "guybedford thanks taking look actually close removing traceur build process think rkirov working details also rkirov recently updated output use cjs instead system format typescript compiler issues revisit system format make sure getting bulk export format either directly ts compiler build step", "d": "9/2015"}, {"body": "sure problem", "d": "9/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "awesome work vsavkin", "d": "9/2015"}, {"body": "include dts file got error find module typing tsc p src w following step step guide also trying run command liveserver open src root get error enoent file directory uvchdir suggestions might wrong", "d": "9/2015"}, {"body": "getting error sledan error file found", "d": "9/2015"}, {"body": "sledan jidesakin check post", "d": "9/2015"}, {"body": "dunken thanks editor vs code appts file line import component view bootstrap part still underlined red says find module even commands suggested also command root folder liveserver open src still get error enoent file directory uvchdir browser dont open know", "d": "9/2015"}, {"body": "sledan jidesakin dunken solve module errors run command chance tsd install rx rxlite save getting server running liveserver command yet figured one", "d": "9/2015"}, {"body": "dunken try including equals sign worked", "d": "9/2015"}, {"body": "okay guess simply feature still planned", "d": "9/2015"}, {"body": "yes need better support typescript standards", "d": "9/2015"}, {"body": "already fixed", "d": "9/2015"}, {"body": "referencing issue would helpful put typings custom location", "d": "9/2015"}, {"body": "agree johnpapa need fix tsd problem happy typings folder root project let see breaks mkdir tmp cd tmp npm install place need worry versioning tsd init tsd link cat typingstsddts far seems working okay trouble grep typescript reference relative typescript nt yet support multiple include paths breaks files present path could distribute copy two dependencies npm distro long licenses permit would clean also nt get version skew dt tends gloss otherwise would need change behavior repair references use symlinks problematic windows users", "d": "9/2015"}, {"body": "typescript includes module resolution feature mirrors node changed angular depends typings proof concept next step update angular packagejson documentationexamples users", "d": "9/2015"}, {"body": "problem routes dinamycal whith angular sou hard", "d": "9/2015"}, {"body": "closed", "d": "9/2015"}, {"body": "fyi issue referenced stackoverflow", "d": "9/2015"}, {"body": "use case similar want redirect login page canactivate returns", "d": "9/2015"}, {"body": "btford time resolve issue", "d": "9/2015"}, {"body": "tamascsaba maybe early next week update issue make progress", "d": "9/2015"}, {"body": "feature worked otherwise would like go would need pointers regards whether design decisions vs forms work angular made thanks cc caitp naomiblack igorminar", "d": "9/2015"}, {"body": "vsavkin mhevery take one thanks", "d": "9/2015"}, {"body": "yanivefraim would love contribution", "d": "9/2015"}, {"body": "cool thanks", "d": "9/2015"}, {"body": "yanivefraim started work yesterday saw comment today see work far basically implementation validatorsminlength validatorsmaxlength unit tests passing imho next step would add directive support see unit tests exercise formsdirectivesspects formsformbuilderspects amp formsintegrationspects", "d": "9/2015"}, {"body": "rafacm thanks much similar work minlength unit testing", "d": "9/2015"}, {"body": "mhevery change public api adding following validators minlength validators maxlength validators min validators max validators pattern need approval mentioned inside", "d": "9/2015"}, {"body": "vsavkin nt think names attached api one many kinds validations could thoughts handle", "d": "9/2015"}, {"body": "still seeing alpha route reloads correctly params ignored", "d": "9/2015"}, {"body": "since exposed public api may create confusion users pass strings methods using object literals using jeffbcross added support passing http method names strings think looks okay ready pr", "d": "9/2015"}, {"body": "mgechev left couple comments commit yeah looks good please pr assign show someone working github issues assigned commit access", "d": "9/2015"}, {"body": "since request exposed public api may create confusion users pass strings requestmethods http methods using object literals requestmethods using request agree please also add actually useful public api especially tests", "d": "9/2015"}, {"body": "took another look accepts however inside constructor already normalize method name means following valid however case constructor function used wo nt work added one extra call inside constructor pr", "d": "9/2015"}, {"body": "mgechev eventually accept interface scope pr think removed making work dart time ago", "d": "9/2015"}, {"body": "jeffbcross updated pr declaring argument constructor type scope pr open another one", "d": "9/2015"}, {"body": "rkirov finished last week", "d": "9/2015"}, {"body": "jeffbcross fyi one might affect number", "d": "9/2015"}, {"body": "case want know requirement use constructors think close", "d": "9/2015"}, {"body": "injectable actually good marker decorator think clearly conveys idea annotated class injected need", "d": "9/2015"}, {"body": "sorta honest good marker dsebastien says means want write party library work angular actually import angular get annotation kind bummer still reasonably certain decorator irrelevant needs decorator force typescript emit appropriate param decoration stuff happens something annotation appears", "d": "9/2015"}, {"body": "information jessegood suggested see using typescript nt need use http constructors works components still need services", "d": "9/2015"}, {"body": "great upgraded typescript confirm inject needed upgraded code deployed ericmartinezr thanks tip however still grab http typings file separately nt file added definitelytyped", "d": "9/2015"}, {"body": "thelgevold typings already added see", "d": "9/2015"}, {"body": "ah must missed", "d": "9/2015"}, {"body": "everyones interest everything related issue written think closed", "d": "9/2015"}, {"body": "thanks linking article pascalprecht hope find good way remove need", "d": "9/2015"}, {"body": "petersvintsitskyi look plunker render template dynamically using dynamiccomponentloader js thislaoderloadintolocation tocomponent template directives thiselementref container function tocomponent template directives component selector fakecomponent view template directives class fakecomponent return fakecomponent mhevery could resolve doubts correct use dynamiccomponentloader dirty dirty hack must never used", "d": "9/2015"}, {"body": "yes using similar approach without dynamiccomponentloader looks like compiled templates cached somewhere per class came even hacky solution typescript faking class declaration creating new instance time need var component new function var annotations new component selector foo new view template text directives worddirective", "d": "9/2015"}, {"body": "yes issue needed queries use dom distance determine direct children currently stop gap use injector distance ie direct child means flip using following example break", "d": "9/2015"}, {"body": "since looked http angular digging angular source code poc blog impression follows variation pattern pattern still part vision initial stab simplistic expose concepts like error handling chaining parallel requests surely plan clear look syntactically maybe even conceptually find current q based solution attractive comes chaining error handling parallel requests using qall etc another big advantage aligns well promise standard know developers know rxjs predates angular worried widely used promise model might seen angular odd man approach given huge pivot angular general think one allowed expect compelling argument favor change making changes things might even broken saying argument ca nt produced time interested hearing angular decided move away q suspect cool features built rx since decided go direction however think important forget use case http calls likely hitting api request simple json data point trade forcing everyone reeducate gain access features might already solved well current simple well known approach said change want learn reasoning behind", "d": "9/2015"}, {"body": "hey torgeir thanks input write depth response later look plunk might answer initial questions sep pm torgeir helgevold notifications githubcom wrote since looked http angular digging angular source code poc blog impression follows variation pattern pattern still part vision initial stab simplistic expose concepts like error handling chaining parallel requests surely plan clear look syntactically maybe even conceptually find current q based solution attractive comes chaining error handling parallel requests using qall etc another big advantage aligns well promise standard know developers know rxjs predates angular worried widely used promise model might seen angular odd man approach given huge pivot angular general think one allowed expect compelling argument favor change making changes things might even broken saying argument ca nt produced time interested hearing angular decided move away q suspect cool features built rx since decided go direction however think important forget use case http calls likely hitting api request simple json data point trade forcing everyone reeducate gain access features might already solved well current simple well known approach said change want learn reasoning behind reply email directly view github", "d": "9/2015"}, {"body": "thanks robwormald definitely take look plunk", "d": "9/2015"}, {"body": "glad see approach use di instead global changes make approach work libraries need encourage require http dependency need http work might worthwhile looking sort thing http returns raw response couple helper methods success error purely return response data vs whole response please nt make mistake handy thing breaks api signature gives wrong expectation example first version component return directly result client code written successerror later versions component find need return usual promise without successerror functions choices breaking change implementation successerror promise clients please follow observables api without additions", "d": "9/2015"}, {"body": "agree eoz introduce sth like also deprecated angular reasons eoz mentioned", "d": "9/2015"}, {"body": "difference successerror idea observable operator adding operators completely acceptable observable land rxnext specific api extending vs terminator gt resstatuscode gt map res gt resjson subscribe onsuccess note calling subscribe cases equiv take point tho thanks input keep coming", "d": "9/2015"}, {"body": "closing things seem order", "d": "9/2015"}, {"body": "gets merged would easy check space provided selector check", "d": "9/2015"}, {"body": "hi like work task started initial work branch moment would good get feedback thanks", "d": "9/2015"}, {"body": "rixrix lgtm could send pr", "d": "9/2015"}, {"body": "pascalprecht thanks looking pr sent", "d": "9/2015"}, {"body": "still refers outdated syntax", "d": "9/2015"}, {"body": "blnero docs rewritten hold horses", "d": "9/2015"}, {"body": "fyi limitto replaced slice finished see details", "d": "9/2015"}, {"body": "removed removed nt make one left list", "d": "9/2015"}, {"body": "looks like pipes created part", "d": "9/2015"}, {"body": "filters disappointed seriously avoid ngwat filter named filter", "d": "9/2015"}, {"body": "problems filter orderby types nt remember details probably dart imo least js ts work chrome due use internationalization api need work usable practice", "d": "9/2015"}, {"body": "mhevery also consider following use case actually run multiple times working say written component fires bunch custom events another developer likes component wants extend component wrapping lightweight component adding custom behaviors issue lightweight component manually export events inner component creating event emitter one wiring event emitter event subcomponent", "d": "9/2015"}, {"body": "think extra argument would result namespace clashes eg two subcomponents want bubble event name try catch event parent component could get two events different type bad enough currently native events like already reserved names events obvious happens accidentally use one names custom event think separate syntax entirely custom events digress", "d": "9/2015"}, {"body": "sekibomazic mhevery must say using lot angular still nt needed maybe necessary think bduffany first moment used native events understanding better angular works finally changed things think nt need feature anymore", "d": "9/2015"}, {"body": "apparently still working see plnkr", "d": "9/2015"}, {"body": "componentdirective events bubble right nt see strong enough use case could someone provide one ps better solved injecting services rather using events", "d": "9/2015"}, {"body": "mhevery opinion pretty much sekibomazic thinking bubble like event agree bduffany reusable components could hook custom events maybe really nt designed work like use services instead", "d": "9/2015"}, {"body": "also see list related issues", "d": "9/2015"}, {"body": "workaround", "d": "9/2015"}, {"body": "use elementref", "d": "9/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "woot", "d": "9/2015"}, {"body": "dose work update alpha alpha graves error set property lastinbinding undefined", "d": "9/2015"}, {"body": "believe issue reported", "d": "9/2015"}, {"body": "issue alpah", "d": "9/2015"}, {"body": "azasypkin could please share patched reflectioncapabilities patched application source angular", "d": "9/2015"}, {"body": "bestander nt patched version anymore iirc replaced ordinary like converted additional closure ok case patched application source angular able angular", "d": "9/2015"}, {"body": "thanks azasypkin suppose better open issue angular provide csp compliant reflectioncapabilites module", "d": "9/2015"}, {"body": "bestander yeah definitely maybe need reopen one", "d": "9/2015"}, {"body": "let honours sun sep pm aleh zasypkin notifications githubcom wrote bestander yeah definitely maybe need reopen one reply email directly view github", "d": "9/2015"}, {"body": "haha nt rights let ask reporter misko hey peellavaj mhevery reopen issue least tracking purposes still csp related issues least prevents us using lib highly restrictive environment eg firefox os apps addons", "d": "9/2015"}, {"body": "works expected run angular csp mode switch dynamic mode pregenerate change detectors offline documented done docs many things missing", "d": "9/2015"}, {"body": "also hard time deciphering usage", "d": "9/2015"}, {"body": "subclassing views nice option like idea allowing devs sure thin kits good idea angular box perhaps show docs guide folks want performance impact listing directives used also see would common use directive html template remove forget component", "d": "9/2015"}, {"body": "", "d": "9/2015"}]