[{"title": "inconsistency proptypes contexttypes", "body": "although contexttypes recently document react api still unstable find odd two similar annotations accept react prop validations nt work way proptypes omit proptype still receive property proptypes simply validate properties however contexttypes case receive context set validation contexttype would assume new features would given context automatically passed component similar props however forced explicitly state context component receive benefit certainly understand need validate contexts validation nt needed whats point explicitly request context unintuitive way", "num": "5349", "d": "10/2015"}, {"title": "prohibited component names", "body": "hi list reserved class names issue component named event included eventslist component tried filter list got error reserved names cheers", "num": "5347", "d": "10/2015"}, {"title": "reacterrorutilsinvokeguardedcallback appears work ms edge", "body": "looks like edge nt like fakenode nt attached body append body remove removing listener good obviously production build nt issue handler called directly click event", "num": "5345", "d": "10/2015"}, {"title": "ability call setstate constructor", "body": "design question raised another bug ideal behavior nt support constructor seems better people manually add constructor since current method encourages imperative pattern ca nt used elsewhere component cc sebmarkbage answer", "num": "5342", "d": "10/2015"}, {"title": "ok using flux", "body": "hi everybody started learning react recently often found lost limbo reading flux know concept application architecture develop website react idea use routing express use react rendering view good solution abandon flux reason use flux thanks huy", "num": "5340", "d": "10/2015"}, {"title": "performance issues", "body": "heya upgrading react using conjunction fixed data table seem taken real performance hit see fixed data table changed anything using reactdomrender function instead reactrender upgrading react going", "num": "5338", "d": "10/2015"}, {"title": "support invalid event", "body": "hi wondering invalid event currently supported tried using something like javascript handleinvalid event nt work manually attach event handler actual dom node order get working invalid event actually supported plans supporting", "num": "5337", "d": "10/2015"}, {"title": "checkboxes reacting onchange events dom checked prop provided default", "body": "js import react react export default reactcreateclass getinitialstate function return checkall false mainchange eve thissetstate checkall evetargetchecked subchecked eve consolelog evetargetchecked evetargetchecked consolelog inside else consolelog inside else render return click select deselect sub checkboxes select could alter checkboxes checked attribute provided", "num": "5336", "d": "10/2015"}, {"title": "warn people pass mutated props", "body": "constructor passing super props object differs object equality andor shallow compare original illegal warning reasonable someone assume could extend component modify props without considering ramifications bug wo nt show initial render test show component updates", "num": "5335", "d": "10/2015"}, {"title": "iframe onload event handler called chrome nonhtml documents", "body": "iframe onload event handler called firefox chrome using firefox chrome react load event fired chrome firefox onload event handler called firefox jsfiddle demonstrating issue open firefox observe dialog box appears saveopen file iframe disappears chrome iframe nt disappear tried run code debugger control never goes onload event handler chrome", "num": "5332", "d": "10/2015"}, {"title": "suggestion deprecating jsx", "body": "would like suggest deprecate jsx format pro easy match closing tag eyes fake pro designer friendly really designer still know everything javascript write web page even need know javascript tools build cons encourage ugly deeply embedded code create whole dimension ecosystem javascript every editor need syntax highlighter formatter linter every language compiles javascript might need support jsx definetelytyped better support tsx ts reactdomdiv nt check properties ts", "num": "5325", "d": "10/2015"}, {"title": "fire click event internet exproler windows", "body": "count ca nt count got issue ie windows windows ie move fine", "num": "5324", "d": "10/2015"}, {"title": "react longer works recent versions react", "body": "react wo nt load versions greater react work version time writing sure bug introduced dig root cause follow", "num": "5323", "d": "10/2015"}, {"title": "reactcsstransitiongroup warn children nt provided key attribute", "body": "docs state must provide key attribute children reactcsstransitiongroup even rendering single item react determine children entered left stayed keyattribute mandatory animations function would make sense warn key props missing direct children similarly dynamic children warn missing keys something like child reactcsstransitiongroup unique key prop check render method foo", "num": "5322", "d": "10/2015"}, {"title": "dangerouslysetinnerhtml escapes slashes", "body": "gets turned possible avoid", "num": "5319", "d": "10/2015"}, {"title": "weird components referred", "body": "use react materialui app part code render return name notes playerlistmap function player index return index playername playernotes bind onshowinfo index var player playerlist index consolelog thisrefs thisrefsplayerinfodialogshow thisrefstxtnamesetvalue playername thisrefstxtnotessetvalue playernotes want code generate rows table player list row tapped dialog shows data row two textfield refs txtname txtnotes ca nt referred last lines produce errors pic produced consolelog onshowinfo method added ref random names test", "num": "5318", "d": "10/2015"}, {"title": "select input box combobox gets inconsistent internal state firefox", "body": "using latest firefox given following select banana state updated selected removed apple added banana visual option select box remains apple", "num": "5315", "d": "10/2015"}, {"title": "simplify definition proptypes default values", "body": "given component defined property types also would define default values property propose alternative syntax react could also reasonable default fallback property value defined bool could could strings could empty string required properties shall specify default value", "num": "5314", "d": "10/2015"}, {"title": "reactcurrentowner set constructor call causes false warnings", "body": "set constructor call constructor side effects like flux store dispatch components may get called log warning called warning misleading happened protects calls really happens one component causing side effect constructor leading component getting called nt result warning sure worth fixing something reminded original issue warning message warning setstate update existing state transition within render render methods pure function props state per issue new", "num": "5313", "d": "10/2015"}, {"title": "bugs reactaddonupdate push unshift", "body": "handlers commandpush commandunshift return new values rather let fall loop end also arguments unshift end reverse order unshifted one time rather", "num": "5312", "d": "10/2015"}, {"title": "reactdomserver nt eval java nashorn javascript engine", "body": "release modular split use code instead original results error nashorn support module system possible execute suggested code testing obtained modified use version instead executed latest version java potentially related", "num": "5311", "d": "10/2015"}, {"title": "accept color property link tag", "body": "order use safari pinned size tab icon need something like react nt support property support way handle", "num": "5307", "d": "10/2015"}, {"title": "umbrella new devtools api", "body": "per conversation sebmarkbage would cool react emitted events allowed attached devtools listen relevant events occurring core emitted events could descriptive enough devtools could track whatever internal state wants instance devtool could track perf seeing long various operations taking marked start end operation devtool could emit useful warnings core warnings could rolled devtools modulepackage tracking state internally could avoid routing onlyusefulforwarnings data throughout core anyway following relevant user wants emit custom warnings potentially slow operations executed render users want clear warnings unit testing andor hotreloading users want trackmonitor calls get statistics results gather percomponent statistics like number setstate calls renders users want fail unit tests specific warnings fire like invalid checksum warning user wants render errors using pluggable logging framework", "num": "5306", "d": "10/2015"}, {"title": "issue documentation html entities", "body": "regarding first second creates warning warning child array iterator unique key prop probably good idea manual encouraging syntax yields warning messages another approach", "num": "5305", "d": "10/2015"}, {"title": "dangerouslysetinnerhtml inside textarea", "body": "way see example trying achieve emoji render inside text area way dangerouslysetinnerhtml value text area", "num": "5303", "d": "10/2015"}, {"title": "prevent function called within render", "body": "warning react call setstate within render method check would like add check methods project also trigger rerender expensive issue reactcurrentowner exposed react achieve current solution mind check stack trace lot expensive check would prefer something equivalent code outside react", "num": "5302", "d": "10/2015"}, {"title": "release", "body": "time let nt think anything left open milestone list enough block fixes come take em changelog could probably cleaned little bit maybe organized differently react dom fixed bug events would nt fire old browsers using react development mode fixed bug preventing use closure compiler advanced mode added support attributes elements added support attribute ensured legacy access dom nodes updated rerenders react test utils addon fixed works svg react transition group addon fix bug preventing used timeout value react bower added improve compatibility tooling x cherrypick commits x finalize changelog x ship update fiddles", "num": "5301", "d": "10/2015"}, {"title": "confusing handling within props", "body": "within listed supported htmldomproperty however including anywhere component means react treats custom component dump key value pairs without handling supported htmldom properties like etc came across trying server side rendering third party library expands nt expect react care external library overloading confusing listed valid html property release notes use also treats dom element custom", "num": "5298", "d": "10/2015"}, {"title": "reacttransitiongroup using jquery cause uncaught typeerror read property componentdidleave undefined", "body": "hi please take look adding items please click remove see consolelog cause js handledoneleaving function key var component thisrefs key check thanks", "num": "5296", "d": "10/2015"}, {"title": "text inputs manipulated multiple times unnecessarily dom", "body": "steps reproduce created js bin reproduce problem type console third pane left edit contents one text inputs rightmost pane type console show attribute edited text input updated three times dom unedited text input also updated tested code according reactaddonsperf modified input updated dom updated", "num": "5295", "d": "10/2015"}, {"title": "change owner causes issues shallow rendered tests", "body": "appears change generated causing number shallow rendered tests fail upgrading deepequals fails property simple example component exhibits issue javascript use strict fdescribe componenttest function passes fails function var components componentstester reactcreateclass assertionerror expected typeof type div key null ref null props classname foo children typeof type ul key null ref null props object owner object store owner null store deeply equal typeof type div key null ref null props classname foo children typeof type ul key null ref null props object owner null store owner null store", "num": "5292", "d": "10/2015"}, {"title": "component names displayed proxyclass react tab chrome dev tools", "body": "explicitly define component without specifying component name becomes react tab chrome dev tools running latest react dev tools", "num": "5288", "d": "10/2015"}, {"title": "event failure", "body": "button onclick event text box onchange event invalid later use jquery event bindings native binding compoentdidmount compoentdidupdate", "num": "5285", "d": "10/2015"}, {"title": "show friendly error using testutilssimulate shallow rendering", "body": "simple shallow render component button handler correctly assert properties ca nt get asserting whether button clicked using passed handler work testutils nt throw invariant violation whatever error spy never gets called manually call works expected behavior", "num": "5284", "d": "10/2015"}, {"title": "reactdom includes react", "body": "project uses react reactdom reactbootstrap reactbootstrap requires react peer dependency reactdom includes react child dependency must install react toplevel dependency order reactbootstrap work two copies react try use modal component reactbootstrap get error uncaught error invariant violation addcomponentasrefto reactowner refs might adding ref component created inside component method multiple copies react loaded fix deleting directory nodemodulesreactdomnodemodulesreact maybe reactdom changed react peer dependency instead child dependency", "num": "5282", "d": "10/2015"}, {"title": "make style attribute processing plugin custom attribute handling", "body": "experimenting different way applying styles approach easily applied angular using directive attribute react library choice radium similar example wrap function order apply logic styling suspect opportunity improve modularity react api set custom attribute handlers checkingrunning react processes node attributes current react style attribute processing could done plugin rather behavior hardcoded library make much easier libraries like radium glancing source looks easy implement behavior would glad work submit pr agreed good idea quick suggestion api", "num": "5280", "d": "10/2015"}, {"title": "equivalent reactdom", "body": "web developer using coffeescript used able div span reactdom mycomponent render gt div title span blah blah blah still available somewhere", "num": "5279", "d": "10/2015"}, {"title": "devtools make component search faster", "body": "try use search component name panel captures keystrokes suspect burning cycles filtering list nt available catch remaining keystrokes perhaps could solved web worker send searches receive keystrokes let filtering background return results ui thread thought nt know search implemented certainly missing keystrokes", "num": "5278", "d": "10/2015"}, {"title": "onclick adding handler", "body": "code like babel react dev tools seems onclick prop set correct function check function actually assigned event handler emptyfunction processenvnodeenvproduction set working since upgrading onclick stopped working use r select element react dev tools call handler works", "num": "5277", "d": "10/2015"}, {"title": "assertvalidprops breaks html name mangling", "body": "alternative would work instead html edit could remove checks production sure good idea also file", "num": "5275", "d": "10/2015"}, {"title": "component seen reactelement dom defined server side rendertostring", "body": "trying render simple hello world component server jsx babel compiled js file looks like jsx dom use strict var react require react var reactdom require reactdom var title reactcreateclass displayname title render function render return dom null hello world moduleexports reactcreatefactory title im getting invariant violation error must pass valid reactelement change createfactory createelement get dom defined", "num": "5273", "d": "10/2015"}, {"title": "immutablekeyediterable children", "body": "aware iterable support children timetable supporting keyediterable immutablejs specifically automatically providing keys children sample use case first item would end equivalent support nt roadmap somehow avoid use performance implications write helper function", "num": "5272", "d": "10/2015"}, {"title": "testutils friendly", "body": "testing docs see cjs still way pull testutils directly tried use instead like get error legacy import like get", "num": "5271", "d": "10/2015"}, {"title": "lost ime input call setstate", "body": "hi component like input english text works well input chinesejapanesekorea charaters ime breaks guess since call setstate textchanged seems call jquery directly works well question calling jquery change dom maybe good choice way refresh parts component many thanks", "num": "5270", "d": "10/2015"}, {"title": "failed parse json", "body": "failed parse packagejson data npm err packagejson must actual json javascript", "num": "5269", "d": "10/2015"}, {"title": "cursor jumps end controlled input", "body": "spicyj zpao cursor controlled element jumping end whenever format modify renders code js export default class giftpurchaseform extends component constructor props super props thisstate cardnumber cardnumberchanged event thisstatecardnumber eventtargetvalue thissetstate thisstate render return creditcardparse formatted simply turns number like card number like common usecase things like phonenumbers etc remove call pass cursor nt jump cursor still jumps even pass next value seems modification string renders means middle edits edits modification point string cause cursor jump end react chrome bug seems related line code comment bug fixed pass test even though changed", "num": "5265", "d": "10/2015"}, {"title": "calling unmountcomponentatnode recursively causes weird behavior", "body": "call unmountcomponentatnode recursively tries unmount component multiple times means componentwillunmount called weird often causes inconsistent state exception componentwillunmount fail cause stack overflow test case fails batch nested toplevel unmounts function var outer var inner reactcreateclass render function return componentwillunmount function breaks react reactdomunmountcomponentatnode container var outer reactcreateclass render function return", "num": "5262", "d": "10/2015"}, {"title": "naming reactdomserver misleading", "body": "tl dr think look actually provides two methods result static html later one gives plain html first one gives reactflavored html react quickly inject essentially get static html string understand says server name cases really want use serverside thus name based however think leads people think never use code clientside nt true nature perfectly fine use cases clientside example written lazy loader component renders nonreact static html component comes viewport rendering trick must done ca nt real dom elements inside element contents always seen string nothing ask element important lazy loading trick case allows loading images even javascript disabled addition search engines also get access images although google days support javascript idea deals lazy loading via virtual viewport also importantly using browser start fetching images resources contained within element javascript enabled use case summary server renders static html elements containing nonreactified static html client must render exact static html inside element initial render client start updating dom checking component viewport case javascript disabled still get images resources loaded wo nt lazy loaded think although might also question fact whether static rendering really abstracted dependency finally already received pull request initially attempted remove dependency purely name nt know anyone else gets noise guess quite likely happen naming things hard yet names powerful", "num": "5260", "d": "10/2015"}, {"title": "docs reactlink say note reactlink needed applications used cautiously", "body": "docs reactlink say note reactlink needed applications used cautiously assume onchange handler inputs preferred way update state reactlink et al make pattern bit less boiler plate guess wanted understand note docs start using cheers john", "num": "5259", "d": "10/2015"}, {"title": "react amp firebug playing nicely together", "body": "clear blame one lies yet couple reports react working firebug used seems affect", "num": "5258", "d": "10/2015"}, {"title": "addonsupdate push array based id", "body": "useful wonder best way use use case items indexed want use command way new may added others updated example look combine behavior advice type use case consider another command may needed", "num": "5256", "d": "10/2015"}, {"title": "selected attribute tags rendered correctly", "body": "cause selenium tests fail using getfirstselectedoption find selected item java api seems affect least forward example set selected attribute selected optiontag import react react import reactdom reactdom var app reactcreateclass getinitialstate function return value onchange function event thissetstate value eventtargetvalue render function return b reactdomrender documentgetelementbyid app", "num": "5255", "d": "10/2015"}, {"title": "perf actual react components", "body": "reactperf reactdefaultperf allow profiling react internals reactcompositecomponent really think would useful react start stop style perfing components possibly track methods automatically spit warnings long range uses would many times call shouldcomponentupdate response always returning true might insightful components many times call setstate could compare render cycles track forced renders possibly started work needed closed", "num": "5254", "d": "10/2015"}, {"title": "issue extended array componentprops", "body": "component ctor thispropsgroupby function undefinded behavior correct problem actually strange", "num": "5251", "d": "10/2015"}, {"title": "reuse component issue deal api json string different multiple files", "body": "issue reuse list component using json api load data string different multiple files example reactjs code import react react import reactdom reactdom export default class list extends reactcomponent constructor props super props thisstate data title paragraph componentdidmount getjson thispropssource function data var collection data thissetstate data collection bind render var results thisstatedata return resultsmap function result return resultposttitle resultpostexcerpt reactdomrender documentgetelementbyid list plz advise thx", "num": "5249", "d": "10/2015"}, {"title": "optimizing reconciliation unchanged dom nodes", "body": "hi sure bug feature make issue anyway seems react tries optimize reconciliation early stopping reconciliation react element reference changed however property check fails normal dom nodes practice means subtree diffed although element nt changed resulting poor performance huge subtrees tried change check little bit tried run following test application got massive performance improvement javascript import react react import render reactdom const range n gt arrayapply null length n map numbercall number const staticlist range map idx gt class app extends reactcomponent constructor props super props thisstate counter increment thissetstate counter thisstatecounter decrement thissetstate counter thisstatecounter render const counter thisstate return counter value counter staticlist render documentgetelementbyid app think optimization make sense unwanted effects unaware understood right react elements immutable strict equality check enough internalinstance yes know could solved using custom component class searching", "num": "5248", "d": "10/2015"}, {"title": "attributes support", "body": "trying use video element attributes nt work trying renders html", "num": "5246", "d": "10/2015"}, {"title": "createelement fails children node array react elements", "body": "seems silently fails using reactdom renders fine missing something", "num": "5245", "d": "10/2015"}, {"title": "change dependencies support version", "body": "set project run says required support nt installed installed nt want use reason changed file dependencies line compile comandroidsupport compile comandroidsupport works usually normal android projects nt reactnative project could find comandroidsupport error log seems bit difference says required awesomeproject app unspecified gt comfacebookreact could change dependencies support version comfacebookreact words change dependencies support version version read related issues work read page android setup dose work surely installed android support repository android support library google repository update another reason ask question day google releases support want use package still requires could make project run perfectly thank update reboot mac things changed still works put resource found matches given name android widgetmaterialbuttoncolored", "num": "5244", "d": "10/2015"}, {"title": "provide reactaddonsjs distributions", "body": "additional file distribution package multipage app could pages need without addons need addons well currently means add reactwithaddons pages avoid loading reactjs portion twice", "num": "5243", "d": "10/2015"}, {"title": "provide unminified production distribution", "body": "would nice unminified release distributions example useful web application frameworks minification runtime", "num": "5242", "d": "10/2015"}, {"title": "", "body": "example animation react fork react base fiddle jsx run another animation animation throw uncaught typeerror please try run alternately link example", "num": "5240", "d": "10/2015"}, {"title": "bugs documentcreateelement rendering", "body": "setting type textarea nt throw setting dir null div nt add attribute setting dir auto textarea throws", "num": "5238", "d": "10/2015"}, {"title": "dangerouslysetinnerhtml escaping raw svg server", "body": "hi created following component accepts raw svg string transforms react element component works however server svg escaped import react proptypes component react export default class svg extends component static proptypes svg proptypesstringisrequired render const svg thisprops return browser console get error react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server", "num": "5232", "d": "10/2015"}, {"title": "events doesnt work", "body": "anything make clickevent work met problem every onclick event fired click happened android webview device problem thx youre help", "num": "5229", "d": "10/2015"}, {"title": "rendertostring stateless function", "body": "possible currently getting warning amp error renderrender component may accidentally tried render element whose type function nt react component warning nt set props property react element instead specify correct value initially creating element typeerror ca nt add property context object extensible object object reactcompositecomponentmixinmountcomponent object object wrapper mountcomponent reactserverrenderingtransactionmixinperform objectrendertostring let test props gt test reactrendertostring test", "num": "5228", "d": "10/2015"}, {"title": "upgrade nothing renders", "body": "hi update version want use premade component requires spent hour trying debug nothing renders tried components worked nt render either googled found need require reactdom reactdomrender nt help either render methods components called possible", "num": "5227", "d": "10/2015"}, {"title": "reactcsstransitiongroup transition wrapped around select multiple", "body": "sure happening multiple select child within reactcsstransitiongroup transition skipped completely anyone else issue", "num": "5226", "d": "10/2015"}, {"title": "issue reactdom reactaddonstestutils", "body": "hey bit trouble component tests since upgrading react particular since moving away using conjunction tests simulate clicks failing example test works uses deprecated js import react reactaddons invoke supplied function clicked function const onclick sinonspy const actionlink utility function inlined clarity const div documentcreateelement div reactrender actionlink div const element divchildren reactaddonstestutilssimulateclick element assert onclickcalled works great supplied function gets called tests pass however soon use test fails interesting combination besides passing case mentioned works example fails idea could causing problem", "num": "5225", "d": "10/2015"}, {"title": "dangerouslysetinnerhtml generates different markup client server", "body": "following code warning environments run code webpack bundle", "num": "5223", "d": "10/2015"}, {"title": "call render thisprops", "body": "would nice regular elements could get render api pure components imho nicer would also make easy move pure regular component declarations encourages thinking props immutable", "num": "5222", "d": "10/2015"}, {"title": "npm validation package install", "body": "react app folder name sports inside sports folder node modules inside node modules folder football folder react folder go football folder npm install react installing react makes application fail prevent command npm install react successful anyway right script prevent process happen work npm install react sports folder already npm packages use make automatically validated npm commands", "num": "5221", "d": "10/2015"}, {"title": "proposal nt bail reconciliation pure functions", "body": "might terrible idea throwing wall react core reconciliation principle changed nt bother reconciling understanding two goals good heuristic unlikely two different components yield similar dom one stateful component instance ca nt morph another component type however makes pure function components pretty much pain hot reload class components currently ca nt swap react bail reconciliation destroy state dom result undermines hot reloading experience crucial way keep resorting workarounds like insanely complex proxies interesting thing note pure function components longer applies stateless instances right even react bail reconciling different stateless component would weird morphing instances would probably less efficient development live hand making hot reloading easy simple tools beneficial maintaining complex solutions hard people depend infra wait upgrades maybe suggesting something crazy sure certainly important consequences outside hot reloading performance changes example transition js const button children gt children const toggle children gt children currently resets internal state proposed change would merely changing two stateless components per proposal enough bail reconciliation think", "num": "5219", "d": "10/2015"}, {"title": "return null stateless fn component nt throw error using shallow renderer", "body": "basic react application return null false inside stateless function component throws error using shallow renderer error thrown everything works expected consistent behavior error received returning inside stateless fn component using reactdom render method found returned component instance may forgotten define render returned nullfalse stateless component tried render element whose type function nt react component allowing would really great error message mentioned guess purpose", "num": "5218", "d": "10/2015"}, {"title": "plans extracting proptypes checks react", "body": "could useful variable checks like function arguments", "num": "5215", "d": "10/2015"}, {"title": "mountwrapper calls input select textarea include listeners property", "body": "per mountwrapper calls input select textarea include listeners property wrapperstate avoid changing hidden class assignment made would also better free function trying get away oo core anyway", "num": "5212", "d": "10/2015"}, {"title": "update existing input compoent value reactjs", "body": "problem posted stackoverflow answer maybe issue react please see maybe show right way solve type problems", "num": "5208", "d": "10/2015"}, {"title": "unable unittest react component", "body": "trying write unit test component using jest tried got error issue react jest", "num": "5207", "d": "10/2015"}, {"title": "getelementbyid testutils renderintodocument", "body": "writing karma tests since nt actually render may find component id", "num": "5204", "d": "10/2015"}, {"title": "please add events onfocusin amp onfocusout", "body": "subj", "num": "5202", "d": "10/2015"}, {"title": "keymirror module found error", "body": "hi using tutorial works version version require reactlibkeymirror longer works updated code use require keymirror todo example also returning find module keymirror", "num": "5201", "d": "10/2015"}, {"title": "gitter channel", "body": "know guys irc channel guys gitter channel", "num": "5200", "d": "10/2015"}, {"title": "react performance bound functions", "body": "abstracting components sometimes find necessary bind function parameter passing child component example list counters want bind increment prop increment appropriate counter always returns new function even though inccount referentially equal every time bind get new function also wouldnt make sense entirely rewrite counter accept incatindex index seems crazy create kind helper component anyways thought put would amazing help performance way perhaps nonnative way accomplish following specifially react", "num": "5197", "d": "10/2015"}, {"title": "read property componentdidleave undefined", "body": "trying get info react docs nt see anything similar getting error console everytime item deleted collection read property componentdidleave undefined using anywhere idea", "num": "5196", "d": "10/2015"}, {"title": "npm install fails windows npm", "body": "built master webstorm npm failed error fbjsscriptsnodecheckdevenginesjs assertionerror current npm version supported development expected satisfy commenting semversatisfies block line allowed build proceed", "num": "5194", "d": "10/2015"}, {"title": "dominating reactperfprintdom printwasted", "body": "believe safari hack seeing get control even elements nt updated rerendered change necessary dom also causing weird interactions reactrafbatching forked working fine fast interactions cause errors attempting run example printdom output", "num": "5189", "d": "10/2015"}, {"title": "avoid error developing external component", "body": "developing external component let say link project process need package reflect changes folder dependencies however peerdependences suppose bring project linking package however using link whole directory including project builds includes packages times begins affect component using causes error also may help understand happening problem appears one error message usual package installation bring error supposed develop external component project time", "num": "5188", "d": "10/2015"}, {"title": "bower reactdom uncaught referenceerror reactdom defined", "body": "installing reactdom adding globally html get referenceerror reactdom isnt defined", "num": "5186", "d": "10/2015"}, {"title": "reactjest mocking issue keymirror", "body": "ran issue testing jest amp npm ultimately realized since npm installs everything siblings packages react depends still get automatically mocked therefore break example error like looking file referenced file using create eventconstants since mocked return undefined thus causing error might part bigger problem jest supporting sure issue live repo immediately react could depend fbjs use keymirror implementation", "num": "5183", "d": "10/2015"}, {"title": "confused performant way key usage list fixed count", "body": "hi searched lots still confused best way get maximum performance dom operations also cpu memory usage lot assumptions would like ask please list always fixed count items lets say illustrate example list stream new elements frequently get pushed old elements removed list sample render list like example bellow react remove dom first item append new one element list unique id insert elements react remove divs appends divs q example react create destroy new component everytime push remove item maybe consumes cpu removing first div appending new one may less expensive dom operations next example render list like react remove first div update text content divs id index element list always first element q example react reuse component instead destroying creating new one everytime push remove item maybe consumes less cpu first example updating context div may expensive dom operations previous example nt know best way handle honest even sure reacts really scare browser internals image list amount elements maybe option prefered huge list elements option prefered im saying nonsense c also guess depend content div content divs always option like noop option remove append new div every time right thanks advance sorry asking", "num": "5182", "d": "10/2015"}, {"title": "double import css file closed", "body": "traditional kind issue nt know could considered traditional issue normally would turn stack overflow less oddity nt occur stumbled upon setup server side rendering webpack express babel webpack dev middleware basically setup right dev specific generates webpack resources memory express server react router place facilitate routing history api frontend basically express backend render serverside components provide backend routing frontend react app hook backend rendered components hook necessary events clientbased routing routes defined backend using node support modules default included babel hook need hook want share jsx components define frontend prerender certain routes backend seo came across something weird components import css file webpack loader import styletag page routing defined simplicity sake app welcome faq following import statement app faq welcome get following error babel syntaxerror usersmobinnidocumentsworkicappsktfrontendappstylescomponentwelcomescss unexpected token welcome color purple parserppraise parserppunexpected parserppparseexpratom parserparseexpratom parserppparseexprsubscripts parserppparsemaybeunary parserppparseexprops parserppparsemaybeconditional parserppparsemaybeassign parserppparseexpression parserppparsestatement parserparsestatement parserppparsetoplevel parserparse objectparse objectexportsdefault everything works perfectly babel parse everything remove import statement one subroutes welcome faq bundle perfectly webpack never complained running babelloader babel compile jsx js introduced hook able import frontend components backend started going haywire hoping maybe someone could explain happens know github issues nt place ask questions reiterate nt know issue", "num": "5181", "d": "10/2015"}, {"title": "data attribute working html elements custom component", "body": "hello create component try generated html find datatestid parent datatestid child root element mycomponent ca nt find may data attribute custom component maped root element thank", "num": "5180", "d": "10/2015"}, {"title": "typeerror read property touppercase undefined case instead component defined", "body": "happens meteor however almost positive versions react sure could check", "num": "5177", "d": "10/2015"}, {"title": "defaultchecked nt render check attribute second load", "body": "hi got component wo nt check radio go view id second time started list component reactrouter index site click view button element radio checked return list go another element checked anymore inspect component react developer tool radio defaultcheckedtrue property javascript import react react import connect reactredux class licenseradios extends reactcomponent buildradios let licenses activevalue thisprops render return thisbuildradios export default licenseradios happen thank", "num": "5173", "d": "10/2015"}, {"title": "enqueuecallback invariant specifyidentify actual object failure message", "body": "oddly enough two examples equal thought would js windowaddeventlistener resize thisforceupdatebind throws error windowaddeventlistener resize gt thisforceupdate works fine error follows assuming function assuming optional callback would expect code typeof check defined check change check submit pr", "num": "5172", "d": "10/2015"}, {"title": "graphql react compatibility", "body": "related every time try use graphql react together face problem graphql returns nonexisted fields react works since people gon na use react graphql think nice way handle case mb nice way hacky deal right missing something", "num": "5171", "d": "10/2015"}, {"title": "support attributes reactdom", "body": "two properties required showing subtitles video element currently nt support react attributes subtitle kind required better add different type track two add supported list nt need use render tracks", "num": "5169", "d": "10/2015"}, {"title": "invariant violation objects valid react child meant render collection children use array instead wrap object using createfragment object", "body": "component render function everything renders fine however clicking element receive following error change inside map function everything works expected", "num": "5168", "d": "10/2015"}, {"title": "react addons minified version nt testutils", "body": "include reactwithaddons available globally include minified version", "num": "5163", "d": "10/2015"}, {"title": "reactcsstransitiongroup unexpected behavior values", "body": "javascript function createtransitiontimeoutpropvalidator transitiontype var timeoutpropname transition transitiontype timeout var enabledpropname transition transitiontype return function props transition enabled props enabledpropname timeout duration provided props timeoutpropname return new error timeoutpropname wasnt supplied reactcsstransitiongroup cause unreliable animations wont supported future version react see information returning error saying value supplied value supplied checks type number late catch already succeded something like would better javascript function createtransitiontimeoutpropvalidator transitiontype var timeoutpropname transition transitiontype timeout var enabledpropname transition transitiontype return function props transition enabled props enabledpropname timeout duration provided props timeoutpropname undefined return new error timeoutpropname wasnt supplied reactcsstransitiongroup cause unreliable animations wont supported future version react see information else typeof props timeoutpropname number return new error timeoutpropname must number milliseconds", "num": "5162", "d": "10/2015"}, {"title": "reactdom nt published bower", "body": "", "num": "5161", "d": "10/2015"}, {"title": "bower distribution include nondeprecated rendertostring", "body": "corner cases within clientside application requires functionality deprecated favor unfortunately bower distribution include way reference", "num": "5159", "d": "10/2015"}, {"title": "use reactdom react", "body": "hi try upgrade packages support react reactdom understanding right want support without warnings cant support anymore without asking people workaround like aliasing webpack config right missing something", "num": "5155", "d": "10/2015"}, {"title": "jsx listeners broken react android lte nodeenvdevelopment", "body": "still quite new react guess bug react framework introduced seems like listeners attached jsx broken native android browser android lte compiling code nodeenv development everything works fine nodeenv production compilation tracked related reacterrorutils development mode guards events source code simply remove part code compiling react app listeners starts working guess intentional instead bug reproduce problem android lte code works eg chrome browser using precompiled getting started lib hello react", "num": "5153", "d": "10/2015"}, {"title": "support invalid event within form elements", "body": "invalid event fired submittable element checked nt satisfy constraints ref", "num": "5152", "d": "10/2015"}, {"title": "reactmount cache gets repopulated unmounting nodes", "body": "problem master repro slightly elaborate case crashes without new poison error unmount remount tree keys", "num": "5151", "d": "10/2015"}, {"title": "reactdefaultpreftestjs randomly fails", "body": "hello everybody relatively new project think ran issue running grunt test recently cloned copy master branch getting failed test every without touching part code error found count noop update waste happens expect summary instances tobe error message expecting instances randomly returns", "num": "5149", "d": "10/2015"}, {"title": "reactchildrenmap nt traverse stated docs", "body": "according docs however use function example something like html username reactchildrenmap thispropschildren finds elements inside misunderstood docs bug", "num": "5148", "d": "10/2015"}, {"title": "best define proptype accepting component prop", "body": "given contrived example best definition const componenttype proptypesoneoftype proptypesshape render proptypesfuncisrequired reactcreateclass reactcomponent better way describe proptypesfunc stateless function others const selector reactcreateclass", "num": "5143", "d": "10/2015"}, {"title": "react migration error", "body": "got next error migrated version exports related next string doc change code", "num": "5139", "d": "10/2015"}, {"title": "optimization breaks older browsers discussion symbols reactelementfromobject api", "body": "see associated discussion around pr nt expect merged due loader issues recap optimization requires brittle knowledge internal react values namely breaks older browsers unless developer globally polyfills polyfilled automatically babel user code polyfilled react library causes fail worse bug occurs older browsers nt implement symbol meaning many devs wo nt catch right away work fine ff chrome latest safari hard issue fix without globally polyfilling symbol giving use babel could automatically part enabling optimisation loganfsmyth better idea api function would nothing ensures using equal one used nt necessary validation caught later thoughts", "num": "5138", "d": "10/2015"}, {"title": "select value outputs selected selected option", "body": "rendering select list selected item manner render html looks like reason part output question rather anything else use capybara test app upgrading react try get value select field returning breaking large amount tests traced difference html react outputting outputting", "num": "5136", "d": "10/2015"}, {"title": "component onclick alert error invariant violation setstate", "body": "getting following error message uncaught error invariant violation setstate update existing state transition within render render methods pure function props state fix", "num": "5135", "d": "10/2015"}, {"title": "get standalone build js file reactdomserver", "body": "serverside rendering reactjsnet seeing warning upgrading library react reactjsnet uses directly ie use nodejs ca nt simply npm module within library imagine noderails situation build js file containing reactdomserver webpackbrowserify bundle", "num": "5134", "d": "10/2015"}, {"title": "react nt work defaultvalue select element", "body": "see regression ie code working fine wrong watched source code reactjs think problem", "num": "5133", "d": "10/2015"}, {"title": "building grunt build ends error", "body": "hi problem trying build react using installation manual running ends immediately windows running creates modules build folder dont know friend mine issue reason trying build react adding custom svg elements attributes thanks", "num": "5132", "d": "10/2015"}, {"title": "react ref callback sometimes gives null", "body": "expected behavior logs last two logged apart componentwillupdate componentdidupdate js class app extends reactcomponent constructor super thisstate settimeout gt thissetstate render return behavior master", "num": "5131", "d": "10/2015"}, {"title": "findrendereddomcomponentwithtag ca nt search html element", "body": "hello trying test react component renders element component test findrendereddomcomponentwithtag locate tags exist unable find element probably means dom unexpectedly mutated repeatable demo", "num": "5128", "d": "10/2015"}, {"title": "reactdomrender vs reactrender callback", "body": "ran strange problem transitioning react use promisified api internally application various reasons need handle mounted instance element big deal get handle instance react finished nondeterministic render renderer service return new promise function resolve reject reactrender reactelement node function resolve someone using renderer service return renderer element somenode function mountedelement update able swap implementations without thought right well apparently getting error message correlating help wiki scraped app looking invalid usage refs nt also ca nt see case one react page unless shenanigans caused including browser removed checked case problem loading react browserify packagejson", "num": "5122", "d": "10/2015"}, {"title": "page messed facebookgithubioreacthtmljsxhtml", "body": "know post best since weeks layout looks broken google chrome linux screenshot", "num": "5121", "d": "10/2015"}, {"title": "causes css issues", "body": "realized react replaces empty elements pretty unexpected discovered saw interesting production bug consider html set visible would expect two fields still separated margin case generated markup look something like html unexpected know guide said plans nothing status given last releases wanted bring attention", "num": "5119", "d": "10/2015"}, {"title": "object even though using class property initializers", "body": "used class property initializers get around annoying within method however react looks like props object javascript export default class test extends component constructor props context super props context whateverhandler e gt used instance object looks like children object someprop true render return actually either bind within handler bind constructor level feel like actually wrong", "num": "5118", "d": "10/2015"}, {"title": "update readme", "body": "references remain readme thanks kudos fixing fast", "num": "5117", "d": "10/2015"}, {"title": "downloads page link", "body": "use script tags directly npm use reactjs reactdomjs tutorial shows blog post download links main downloads page", "num": "5115", "d": "10/2015"}, {"title": "injectidoperations undefined", "body": "upgraded today receiving error using browserify code looks like", "num": "5112", "d": "10/2015"}, {"title": "reactcsstransitiongroup invariant violation multiple copies react error", "body": "hello react reactdom reactcsstransitiongroup addon installed using npm compiling using babel webpack code mostly copied jsx import react react import reactdom reactdom import reactcsstransitiongroup reactaddonscsstransitiongroup var todolist reactcreateclass getinitialstate function return items hello world click handleadd function var newitems thisstateitemsconcat prompt enter text thissetstate items newitems handleremove function var newitems thisstateitems newitemssplice thissetstate items newitems render function var items thisstateitemsmap function item return bind return reactdomrender documentgetelementbyid app produces error output bundle appear multiple copies react using error nt present noticed nt require react maybe cause", "num": "5110", "d": "10/2015"}, {"title": "starter kit creating react components", "body": "could helpful sample project would centralize single place react best practices build component something simple like example custom input field stateless stateful also could excellent starting point providing migration steps actual code rather bullets document like happened release additionally could evolve something like integration nodejs tooling linting eslint transpiling babel package management bundling webpack jspm small testing infrastructure etc publishing yeoman generator disclaimer issue react rather proposal better supporting react development", "num": "5108", "d": "10/2015"}, {"title": "push tag github", "body": "currently absent consequentially releases page still shows latest", "num": "5104", "d": "10/2015"}, {"title": "update changelogmd", "body": "congratulations new version would possible update reflect changes cheers", "num": "5103", "d": "10/2015"}, {"title": "componentdidupdate infinite loop better error message", "body": "caused infinite loop calling thissetstate componentdidupdate warning received maximum call stack size exceeded stack showed react code never product code result super hard time consuming track thoughts detecting bad behavior somehow giving nicer error message", "num": "5097", "d": "10/2015"}, {"title": "legacy props dom node nt updated rerender", "body": "prod mode would fix though", "num": "5095", "d": "10/2015"}, {"title": "ontouchstart event null touches", "body": "event comes ontouchstart handler null field touches eventnativeeventtouches field bug design feature", "num": "5092", "d": "10/2015"}, {"title": "thisrefs giving empty logging refs empty componentdidmount", "body": "code componentdidmount render code jsx gettablecontent function var tablecontent dialogbox var e thisstatedata var status thisstatedata e requeststatus status else thisstatedata e requeststatus status closed dialogboxpush askdjgasjk tablecontentpush return tablecontent tablecontent dialogbox dialogbox render function var content thisgettablecontent var page thisgetpage consolelog consolelog thisstate return request status content dialogbox problem", "num": "5091", "d": "10/2015"}, {"title": "custom element ca nt render independently", "body": "also possible specify component sets children attribute components child nodes independently example related superset might another motivation reconsider wanted", "num": "5090", "d": "10/2015"}, {"title": "custom elements prop gets coerced string", "body": "hello react custom tags rendered fine example would render since process migrating saw renders like set jsx property instead render attribute custom tag afraid intended behavior intended behavior please close issue give documentation tried find something related last hours", "num": "5088", "d": "10/2015"}, {"title": "rendering single node multiple places safe", "body": "want place widget multiple places dom seen code wonder safe mess react internals works minimal example want make stacked tables implementation like table placed twice placed times responsive mode stacked table row displayed keyvalue table turning table tablestacked table set combo using media query show either table stacked table set", "num": "5087", "d": "10/2015"}, {"title": "dynamic styles working", "body": "reason dynamic part component get updated dom following component error span get proper styling input tag know getinputstyle return necessary boxshadow however dom input element style attribute appear event happens", "num": "5086", "d": "10/2015"}, {"title": "feature request provide isoptional proptypes", "body": "would useful member negate use case const thinglist things gt thingsmap thing gt thingname thinglistproptypes things proptypesarrayof proptypesshape name proptypesstringisrequired isrequired const whatever things title gt title whateverproptypes things thinglistproptypesthingsisoptional title proptypesnode property required conditionally renders passed reuses proptype makes optional would alleviate need make separate variable everything referenced", "num": "5080", "d": "10/2015"}, {"title": "link reactdom cdn", "body": "version reactdom tutorial used tutorial console outputs error follow link", "num": "5079", "d": "10/2015"}, {"title": "use semvar", "body": "versioning scheme actually quite childish doesnt comply industry standard majorminorpatch major break previous libraries use minor adds new functionalityfeatures patch something broken indicates still development anything change time yet people already using product production relying heavily send message end users care compatibility issues using semantic versioning nodejs finally moved real semantic versioning iojs merged clearly explains backward compatability issues different versioning", "num": "5077", "d": "10/2015"}, {"title": "broke", "body": "function nt quite working anymore upgrading import reacttestutils reactaddonstestutils const definition const spinner reacttestutilsrenderintodocument definition line fails reacttestutilsfindrendereddomcomponentwithclass spinner uispinner error stack looks something like", "num": "5076", "d": "10/2015"}, {"title": "thisrefs returning element specific components", "body": "sure cause pattern yet components causing return following object within components fine however edit see bottom post possible cause post whole object necessary snippet component componentdidmount function consolelog thisrefsnumber consolelog thisrefslabel render function typing noticed using custom component setting ref maybe problem could bug assigning ref custom component type note works correctly albeit warning", "num": "5074", "d": "10/2015"}, {"title": "dom nesting warning confusing whitespace text general", "body": "user puts textnode whitespace illegal location warning complains element wrap text including whitespace span confusing new users since present code introduction tag implementation detail react fix warning better align code user looking", "num": "5071", "d": "10/2015"}, {"title": "order guaranteed reactcreatefragment", "body": "according react docs seems assumption maps javascript guarantee order keys afaik true see stackoverflow question could lead crossbrowser issues createfragment", "num": "5070", "d": "10/2015"}, {"title": "error synthetic event dispatch", "body": "", "num": "5069", "d": "10/2015"}, {"title": "tbody children remove error", "body": "found obscure problem rerendering tbody smaller amount children minimal example reproduce select rows press apply get table rows select lesser amount rows press apply get fix remove spaces table render line sure real bug woul nice mentioned error message", "num": "5068", "d": "10/2015"}, {"title": "proptypes metadata", "body": "great proptypes property gave vision expectations would allow easily generating documentation without parsing code easier allows flexibility like reusing proptype shapes etc also helps test automation coverage reports also related note method proptypes would allow better error messages documentation coverage report output static analysis error messages eg flow expression result react core started writing library realized tools like flow require use react proptypes would nonbreaking change think adds moderate amount value", "num": "5067", "d": "10/2015"}, {"title": "dynamic elements div textarea", "body": "trying render dynamic element using props element type text component worked older versions react however nt example getting invariant violation supply pass children using reactdom reactrouter isomorphic better way handle please let know", "num": "5064", "d": "10/2015"}, {"title": "react fails render svg children edgeie", "body": "gist illustrates issue work expected rendering red circle browsers run script phantomjs assuming page hosted however throws error error invariant violation findcomponentroot unable find element probably means dom unexpectedly mutated eg browser usually due forgetting using tables nesting tags like using nonsvg elements parent try inspecting child nodes element react id fails insert circle", "num": "5061", "d": "10/2015"}, {"title": "refusing install", "body": "anyone today facing problem gettin react installed dependency node v npm v", "num": "5060", "d": "10/2015"}, {"title": "component nt unmount componentwillunmount returns false", "body": "implementing function returns value component nt unmount could nt find reference behaviour documentation bug design design documented", "num": "5059", "d": "10/2015"}, {"title": "traverse react components including dom components without testutilsfindallinrenderedtree", "body": "react longer give ability traverse already rendered components inside root component testutilsfindallinrenderedtree dom components excluded better practice going components inside root component", "num": "5058", "d": "10/2015"}, {"title": "incorrect reactdom package bower", "body": "tried following pick reactdom however said version available poking around github yielded repo called reactdom appears linked bower guessing nt right library dependency installation story going look like bower", "num": "5054", "d": "10/2015"}, {"title": "componentwasmountedcomponentwasupdated formerly componentdiddisplay", "body": "proposal new lifecycle fires eventloop returned reconciliation started effectively give nt block visual output could good place set timers subscriptions etc", "num": "5053", "d": "10/2015"}, {"title": "react webcomponents", "body": "see lot questions blog posts discussions around none actually official statement facebook could clarify whether going implement specs future also quite github issues around subject like enable rendering shadow roots allow rendering document fragment track upcoming dom technology upgrades proof concept shadow dom support support custom dom elements amp attributes templates add naive custom element support add support future custom elements etc nevertheless opensource projects allows aware like seems reconciliation inevitable thus part spec might need change order widely accepted among opensource community browser vendors wrapping components importing good including html pages importing less defining new markup interact way native html elements allowing extend existing native html elements giving lifecycle methods already possible even though xhtmllike syntax transpiles javascript ultimately becomes html hard cases even impossible polyfilled reason using current browser support adopting conventions even inline styles backed javascript objects remains viable alternative still different really pointless without data binding twoway data binding slow polyfill slow also twoway data binding code complexity fact dependencies components bigger complexity grows opposed unidirectional data flow oneway data flow immutable data structures potential scale highly performant especially think largescale applications complex interactions thousands entities even though opensource community looking end developer experience matters drives adoption doubt standards place therefore question strategy sebmarkbage thoughts", "num": "5052", "d": "10/2015"}, {"title": "linkedstatemixin default value link state", "body": "using default values set property since properties initialization time ca nt derive dynamically ie api call would possibility second parameter default value added way code could supported jsx assume mixin applied class foo extends reactcomponent componentdidmount settimeout gt thissetstate defaultval asyncdefault render return actual patch quite trivial however sure create new reactlink every change regardless linked value actually existing someone familiar react probably fill point diff param string key state key update note may want use keyof using google closure compiler advanced mode param defaultvalue default value use case thisstate key undefined return reactlink reactlink instance linking state linkstate function key linkstate function key defaultvalue return new reactlink thisstate key undefined thisstate key thisstate key defaultvalue reactstatesetterscreatestatekeysetter key sure future plans might interesting definitely wrap class like", "num": "5051", "d": "10/2015"}, {"title": "components able render arrays nodes", "body": "last two weeks encountered problem wanting return arrays nodes component rendering two times building tree rendering flat list node children level building table rows rendering two table rows one piece data cases hacky work arounds since component held ui state node children rows finding components returning single node limiting lead head scratching workarounds try unroll logic read issues related hope two concrete cases help reconsider loosening component principles one component one dom node since reality cases case", "num": "5050", "d": "10/2015"}, {"title": "default lifecycle methods reactcomponent", "body": "small api detail would make sense implement default empty lifecycle methods base reactcomponent class would allow homogenous implementations far super calls concerned example following throw due missing implementation parent class however overloading class missing super call might introduce bugs got think maybe safer always put supercall discovered possible heriting base class", "num": "5047", "d": "10/2015"}, {"title": "invariant violation setenabled toggle event listening worker thread", "body": "trying create unit test simple react view using testutils following react old know jsdom mocha nodejs view javascript var react require react var studentnameview reactcreateclass moduleexports studentnameview current attempt unit test javascript var sinon require sinon var expect require chai expect var jsdom require jsdom var react var testutils var view describe student name view function unfortunately unit test fails error error invariant violation setenabled toggle event listening worker thread likely bug framework please report immediately invariant objectmergesetenabled reactreconciletransactioneventsuppressioninitialize reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform reactcomponentmixinmountcomponentintonode object objectrendernewrootcomponent objectreactmountrendercomponent objectrendercomponent objectreacttestutilsrenderintodocument context test trying learn write unit tests react components something wrong indeed react bug mentioned first error related", "num": "5046", "d": "10/2015"}, {"title": "problems rendering material design lite components", "body": "trying implement simple login page using react google material design lite mdl framework come across strange thing mdl input floating label nt work rendered using react code var login reactcreateclass try use thing directly html works fine ps works fine mean animation colored line appears text box onfocus think something synthetic event system implemented react fiddled around javascript found bit stuff native keydown onfocus events among others similar thing happening elements like expanding text field nt checked sure react mdl break many components mdl framework synthetic event system way work around get working safe assume react mdl incompatible", "num": "5044", "d": "10/2015"}, {"title": "testutilssimulateclick nt bubble window document", "body": "possibly dupe test javascript import react react import testutils reactaddonstestutils class testelement extends reactcomponent render return describe foo gt bar gt var element testutilsrenderintodocument logs thing click handlers never called something wrong thanks advance", "num": "5043", "d": "10/2015"}, {"title": "onscroll never fires", "body": "trying ca nt seem get working onwheel fires normally onscroll firing dunno missing something bug thanks", "num": "5042", "d": "10/2015"}, {"title": "becomes undefined called onclick inside class extends reactcomponent", "body": "something similar code snippet javascript class mybutton extends component comment specifies tap method got called button onclick got error basically told undefined error gone declare class using reactcreateclass intentional thank advance", "num": "5040", "d": "10/2015"}, {"title": "misleading error messages presence unnecessary", "body": "porting nonjsx react code eg coffeescript jsx forgetting remove unnecessary calls following warnings errors issued seemingly unrelated root cause renderrender component may accidentally tried render element whose type function nt react component warning nt set props property react element instead specify correct value initially creating element typeerror ca nt add property context object extensible reactcompositecomponentmixinmountcomponent wrapper mountcomponent objectreactreconcilermountcomponent mountcomponentintonode reactreconciletransactionmixinperform batchedmountcomponentintonode reactdefaultbatchingstrategytransactionmixinperform objectreactdefaultbatchingstrategybatchedupdates objectbatchedupdates objectreactmountrendernewrootcomponent repro source originally noted google many potential related issues show", "num": "5039", "d": "10/2015"}, {"title": "syntheticevents lose original property values ie clientx amp clienty", "body": "gist also tried using avail seen referenced multiple times properties null ie also worth noting client xy properties eventnativeevent also set majority clicks return events correct values small sample abnormally return", "num": "5036", "d": "10/2015"}, {"title": "bug ref nt show", "body": "setting element nt show class js constructor props super props statement fires get error", "num": "5033", "d": "10/2015"}, {"title": "errors could helpful", "body": "example error bottom see file file mainjsx renders root ui ui big obviously pointed root ui helpful great error pointed specific part render tree happening go wild goose chase", "num": "5031", "d": "10/2015"}, {"title": "css property lost rerendering image url inside adjacent property", "body": "css property shorthanded many various ways inlining multiple styles including property react seems optimize rerender example define style like initial render returns style form change state cause rerender style format changed seems break changing state url inside property also defining initial render return expected style however changing url results rendering style without example demo", "num": "5030", "d": "10/2015"}, {"title": "reacttransitiongroup inprogress transitions interruptible like css transitions", "body": "remove child calls callback nt call calls callback may intended behavior way css transitions behave least modern browsers know toggle opacity every second div never finishes going first second transition rather gets interrupted one second new transition back begins repo reproduce issue run look console see component leaving gets held components finish entering entered messages never appear components leave finish entering like spec csslike behavior internally keeps track whether component appearing entering leaving component removed entering appearing state set leaving called immediately component added back leaving state set entering called immediately calls callback action taken unless component appearing state calls callback action taken unless component entering state calls callback action taken unless component leaving state", "num": "5027", "d": "10/2015"}, {"title": "react virtual dom performance", "body": "found website comparing performance virtual dom implementations different libraries like uix citojs bobril deku others screenshot benchmarks libraries lower score better performance seems react highest score lowest performance infernojs lowest score highest performance benchmarks run way react use infernojs vdom implementation increase performance", "num": "5024", "d": "10/2015"}, {"body": "issue react particular website global react global build umd build existence makes switch amd mode instead exporting global calls use case injecting react thirdparty website", "d": "10/2015"}, {"body": "create ui chrome extension", "d": "10/2015"}, {"body": "dylanpiercey benefits component passed props explicitly passed owner clear data component ismight read context variables passed implicitly thus easy way seeing variables component potentially accessing contexttypes provides visibility developer props come directly ownerparent component whereas context come almost anywhere props easy get right direct ancestor whereas context indirect thus easier screw easy ancestor somewhere variable name collision provides incompatible implementations particular context variable allows us react core see context variables going utilized allows internal optimizations context super tricky optimize hints open paths optimizations future see context variables updated rerender components nt read variables components never want read context variables props component likely read props nt concern perhaps ways could solved like reactdatatracker proposal contexttypes made sense time maybe still", "d": "10/2015"}, {"body": "jimfb thanks response think performance optimizations one thing hard time swallowing contexts harder track realistically least libraries use context people name space context makes easy enough search name space also typically contexts come top level component somewhere tracked pretty easily seems like react forcing tooling case simply think optional proptypes thought important remember context using comes may document validate form contexttypes however truthfully nt help track source easily anyway seems add boilerplate common case", "d": "10/2015"}, {"body": "please provide jsfiddlerepro could nt reproduce may misunderstood something", "d": "10/2015"}, {"body": "hi quickly pasted code fiddle precise eventslist component containing text field filtering list renders collection event compent filtered issue comes event component error disapears use name component rails application", "d": "10/2015"}, {"body": "still reproduce error thing think component overriding native object nt happening", "d": "10/2015"}, {"body": "almost definitely overriding especially rails env basically every component becomes global least box may want look module system variables nt leak file", "d": "10/2015"}, {"body": "oh answer root question reserved component names", "d": "10/2015"}, {"body": "great thanks", "d": "10/2015"}, {"body": "assuming duplicate cc spicyj", "d": "10/2015"}, {"body": "correct apologies searched obviously well enough however issue actually appending fakenode body using native event type assume intent based comments help development get better devtools integration simulating real browser event", "d": "10/2015"}, {"body": "maybe left node attached body forever could work would nt ideal constantly inserting removing event also would nt ideal either probably worse think long get benefits fine could test build master make sure things working edge would awesome", "d": "10/2015"}, {"body": "working edge sufferance yes fix works fine", "d": "10/2015"}, {"body": "thanks testing timgardner", "d": "10/2015"}, {"body": "talked sebastian agreed probably pattern never want support cases calling constructor antipattern intended story future use property initializers land go away leave issue open another day two case people want continue discussion", "d": "10/2015"}, {"body": "exists escape hatch", "d": "10/2015"}, {"body": "agree nt supported constructor triggers different component besides one constructed believe valid use cases might happen firing action creator could provide workaround seems like reason currently prints warning check interprets existence reactcurrentowner mean render method currently executing nt strictly true test wrote illustrate mean", "d": "10/2015"}, {"body": "dan file concern error message legitimacy calling constructor wonder gaearon would consider antipattern code first discovered warningmessage wrong general seems like huge code smell creatingrendering component side effects components little skeptical use case would want fire action creator within constructor specific use case example mind", "d": "10/2015"}, {"body": "think ca nt think use case better solution nt move seem little weird external triggered inside constructor see conceptually two separate phases component lifecycle go ahead update print helpful warning message thanks", "d": "10/2015"}, {"body": "even componentwillmount antipattern another scenario callbacks parent componentwillmount may reach ref ref uninitialized causes kinds strange artifacts better move didmount sideeffects change state due component rendered even antipattern may break scheduling etc", "d": "10/2015"}, {"body": "think valid edge cases want react fire callback every time component receives props since get called initial render accomplish also need fire callback inside wo nt nt called server example project called relaysink allows create relay container fires callback whenever receives new fragment temporary team case way pass relay data redux store another example project called reactrxcomponent creates observable sequence updates implementation could improved essentially works realize edge cases seem perfectly valid see causes problems working working available nt relevant server anyway", "d": "10/2015"}, {"body": "though could wrong maybe sufficient cases", "d": "10/2015"}, {"body": "totally cool use flux general questions great", "d": "10/2015"}, {"body": "iamdustan thanks could nt said better yes totally ok use react without flux yes please use sites like stackoverflow usage questions since use github issues track bugs react core", "d": "10/2015"}, {"body": "thank much", "d": "10/2015"}, {"body": "without info nt think tell going nt heard complaints people using fb might want bit debugging work folks working fdt going close get something concrete go reopen", "d": "10/2015"}, {"body": "nt see list yes would good support browser events would like submit pr", "d": "10/2015"}, {"body": "added recently part release", "d": "10/2015"}, {"body": "property forces checkbox provided value controlled input need change update get behavior expecting need use uncontrolled input would recommend use controlled inputs", "d": "10/2015"}, {"body": "jimfb shallow comparison suffice deep equality check two objects needed", "d": "10/2015"}, {"body": "think shallow fine deep equality difficultexpensive cycles note check dev mode surround logic block", "d": "10/2015"}, {"body": "example still really complicated suspecting error somewhere code since onload works jsfiddle simplify create minimal test case post link new fiddle", "d": "10/2015"}, {"body": "better simulate thing change file see behavior using html document work correctly appears chrome nt firing load event initiating file download unclear behavior actually correct anything", "d": "10/2015"}, {"body": "thanks zpao jimfb created new jsfiddle using zpao mentioned open jsfiddle firefox see alert chrome little bit use case trying create component display src file iframe rendered browser eg pdf files file ca nt rendered browser user downloadopen file third party program iframe disappear", "d": "10/2015"}, {"body": "aware nt reddit grabs popcorn", "d": "10/2015"}, {"body": "nt like jsx nt use easy", "d": "10/2015"}, {"body": "observed substantial increases developer happinessproductivity jsx believe benefits outweigh downsides extending javascript jsx optional free use pure preference going close bug since deprecating jsx something likely foreseeable future feel free continue discussion", "d": "10/2015"}, {"body": "seeing issue use reactdom", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "cc zpao spicyj seems bad", "d": "10/2015"}, {"body": "fix incoming worth noting spicyj reminded issue dev mode", "d": "10/2015"}, {"body": "cause issues make change around defineproperty usage nt resulted issues let us know find", "d": "10/2015"}, {"body": "react loadsworks versions including latest starts breaking versions follow time dig bit deeper", "d": "10/2015"}, {"body": "think least part issue changed check ability use defineproperty explicitly supports simple use defineproperty throws trying set getter previously trycatch used getter treating right way simplified code removed getter almost certainly causing issue though perhaps another", "d": "10/2015"}, {"body": "sure confused javascript string escape character string contains single slash string contains two characters believe found bug react please provide simple testcase jsfiddle demonstrates issue investigate otherwise please note use github issues track bugs react core usage questions better addressed sites", "d": "10/2015"}, {"body": "right thank escape slashes contained inside mixpanel javascript api integration code order place within", "d": "10/2015"}, {"body": "nt think enough information us debug keep mind try use github issues track bugs react usage questions better answered stackoverflow believe bug react core please provide simplified testcasejsfiddle demonstrates issue dig", "d": "10/2015"}, {"body": "found solution change onshowinfo nt know", "d": "10/2015"}, {"body": "sounds like maybe nt binding functions properly something sounds like usage question better addressed sites believe bug react core let us know please provide simplified jsfiddle demonstrates issue", "d": "10/2015"}, {"body": "binding probably issue timing nt know dialog component looks like probably render root calls reactdomrender probably show resulting ref resolution timed quite right nt exist end event loop works might able take advantage callback render takes thread callback show eg", "d": "10/2015"}, {"body": "thanks zpao totally get", "d": "10/2015"}, {"body": "appear problem safari chrome os x exist firefox windows note using screenreader get results using two different screenreaders windows firefox", "d": "10/2015"}, {"body": "confirmed problem firefox os x well someone visually confirmed value appears correct apple accessibility api reflecting updated value", "d": "10/2015"}, {"body": "elaborate mean accessibility api seeing wrong value issue screen reader verbally reading wrong value cc spicyj maybe screen reader looking attribute instead property", "d": "10/2015"}, {"body": "fiddle sanity spicyj convenience", "d": "10/2015"}, {"body": "thanks looking fiddles nt work super well able fork modify provided part believe forgot mention reset button reset value without interacting component screen reader still reads previously selected option even though firebug shows first option selected posted twitter ideally firefox accessibility engineer take look provide diagnosis", "d": "10/2015"}, {"body": "fiddle calls setstate within render rules updated fiddle based latest description thinking bug react bug firefox still entirely clear best reproduce issue see value supplied accessibility api", "d": "10/2015"}, {"body": "thanks forgot put callback going see one firefox accessibility team take look provide insight", "d": "10/2015"}, {"body": "nt understand steps would need reproduce bug point view reset button nt appear anything matter select banana apple combo box shifttab reset button press spacebar value still selected combobox tab forward pressing arrow confirms combobox thinks value selected last still selected tab combobox selectapple shifttab reset press spacebar understand correctly reset banana tab forward combo box result apple still selected even keyboard interaction nothing accessibility apis would think would work expected keyboard focus banana time press reset nt even without nvda virtual mode play accessibility apis reflect selected nt actively change selection widget manipulated javascript either react code nt set keyboard focus select element case firefox combobox widget part accessibility apis react properly react trying", "d": "10/2015"}, {"body": "hi marco thanks taking look select banana press reset value return apple experience using nvda jaws ff windows voiceover using ff os x selected attribute moves apple reset button pressed screenreaders continue read banana", "d": "10/2015"}, {"body": "point screen reaers see selection still last focused one keyboard focus even without screen reader keyboard focus show last selected one example bananas revert apple", "d": "10/2015"}, {"body": "confirm internal state internal state firefox combobox appears inconsistent value set javascript inconsistent visually displayed appears bug firefox independent screen readers also confirm nt matter use attributes properties inconsistency firefox appears persistent also confirm combobox behavior differs user expectations given visually rendered realistically though looking like bug firefox nt see anything actionable end unless someone sees workaround", "d": "10/2015"}, {"body": "perhaps someone maybe zpao ping appropriate person mozilla", "d": "10/2015"}, {"body": "feel free file bug preferably testcase attached product core component widgets cc marcoz wo nt one fixing bug provide input necessary help colleagues", "d": "10/2015"}, {"body": "ok found workaround appears setting insufficient setting work fiddle pure speculation based zero knowledge firefox code leads believesuspect firefox trying fancy bail change value unchanged cached value incorrect thus erroneously bail filed bug mozilla though nt time follow closely anyway potential workaround goodfirstbug", "d": "10/2015"}, {"body": "jimfb thanks looking click reset press tab focus combobox use arrow keys select banana use shifttab go back reset button press spacebar press button activate hard reset point screenreader still reads banana press tab go back combobox press arrow observe combobox value went apple candy without passing banana move options", "d": "10/2015"}, {"body": "ezufelt think minor differences observe observe possibly ff latest possibly screen reader either way think description sufficient actionable might want put additional info bugzilla report", "d": "10/2015"}, {"body": "ultimately looks like boils firefox bug nt affect react sure much react somebody comes along wants pick let make sure anything start firefox like chrome others nt commit visual change enter pressed however chrome pops options new view ca nt dismiss without committing canceling ca nt get stuck inconsistent visual state goal probably fire change event every key stroke simulating event stream would look like interacting mouse nt select every intermediate value thanks everybody report tracking getting bug filed bugzilla", "d": "10/2015"}, {"body": "proptypes mostly legacy maintenance mode replaced tools like flow guess nt going change zpao decide issue closed", "d": "10/2015"}, {"body": "users want put flow top react", "d": "10/2015"}, {"body": "pke nt want use flow options use another static analysis type checking tool like typescript javascript programmers done long time go without typechecks check proptypes manually components constructor componentwillreceiveprops write proptype validators react ideally library andor share validators others may also find valuable continue using proptypes asis since nt getting rid immediate future though likely way tools like flow start become complete", "d": "10/2015"}, {"body": "thanks tips think already typescript variant try", "d": "10/2015"}, {"body": "good first bug diff include unit test verify nt regress future", "d": "10/2015"}, {"body": "correct behavior warn different message nt warn even call constructor", "d": "10/2015"}, {"body": "currently think setstate ignored ie noop invoked constructor assuming keep behavior would display different error message tracking correct behavior", "d": "10/2015"}, {"body": "looks like places react interprets mean render method currently executing quite true though gaearon points current owner also set component initialization would good way solve add separate module called reactcurrentrender something keeps track whether render method currently executed", "d": "10/2015"}, {"body": "acdlite many hope trying get rid core yeah module sounds like good approach nt think actually makes situation worse cc spicyj ideas", "d": "10/2015"}, {"body": "todo list document outlining uses reactcurrentowner alternatives want replace basically iscurrentlyrendering set used warnings", "d": "10/2015"}, {"body": "reactcurrentowner subsequently used string refs nothing else eventually deprecate string refs gone completely", "d": "10/2015"}, {"body": "also splice merge return nextvalue", "d": "10/2015"}, {"body": "yep sounds like another reason include rendertostring reactdom also causing problems testing jsfiddle clojurescript bower distribution etc", "d": "10/2015"}, {"body": "added part", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "instance devtool could track perf seeing long various operations taking marked start end operation remember somebody trying call flux store dispatches problem react batched calls actual work performed api provided accurate measurements way track actual work associated calls particular period", "d": "10/2015"}, {"body": "number approaches presented yet another everything jsx assuming first second demonstrate dynamic content js first second yes warning ideal actually little surprised warning cc spicyj goal demonstrate begin solve specific issue entities dynamic content little code possible ok warning simple code snippets gets point across without explain things", "d": "10/2015"}, {"body": "zpao sorry would nt warning", "d": "10/2015"}, {"body": "text text yes renders things thought warning keys looked arrays type something since nt actually need keys different types looks like warned meh", "d": "10/2015"}, {"body": "please use gh issues bug reports setting nt make sense whether react since current value kept property dom element inner content serves initial value demo also nt render html maybe want instead", "d": "10/2015"}, {"body": "sounds like really good use case new devtools api support", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "good catch got closed started making list", "d": "10/2015"}, {"body": "update fiddles whatnot soon mean time go forth", "d": "10/2015"}, {"body": "means something html element inheriting another element part custom elements web components spec see discussion think right move library either remove prop though could risky valid use dom use prefix know nt reusing prop valid use dom run risk using example making mean something special specific library nt awesome run risk fwiw", "d": "10/2015"}, {"body": "since rest overlaps issue going close", "d": "10/2015"}, {"body": "see nt aware web components spec read issue thanks", "d": "10/2015"}, {"body": "seeing thing interesting cc spicyj could something changed unwrapping special dom components", "d": "10/2015"}, {"body": "ah yes enqueueing force update component would nt run twice already updated call reactdominputupdatewrapper directly forceupdateifmounted happen twice sure simplest fix least nt make practical", "d": "10/2015"}, {"body": "updates unedited elements impact performance js bin steps perhaps nt many elements application issue ran interestingly example slower even though perf shows one dom update", "d": "10/2015"}, {"body": "sure something wrong example perfectly responsive", "d": "10/2015"}, {"body": "huh could browser specific issue believe using firefox seeing render times every keystroke", "d": "10/2015"}, {"body": "looks like introduced call seems cause spurious dom manipulations components call methods part code spicyj idea removed", "d": "10/2015"}, {"body": "seeing similar issues shallow rendering current messy sorry workaround javascript reacttestutilsjs var noopinternalcomponent function element var type elementtypename elementtype var children noopinternalchildren elementpropschildren var props assign elementprops children children thisrenderedoutput assign element type props thiscurrentelement element var noopinternalchildren function children arrayisarray children return childrenmap noopinternalchild else children object children return noopinternalchild children return children var noopinternalchild function child var props childprops amp amp childpropschildren assign childprops children noopinternalchildren childpropschildren childprops return assign child owner null props let know helps version currently breaks jest tests happy work submit pr", "d": "10/2015"}, {"body": "thank much tremendous help solved problem test case still failed large number complex tests iterating tests passing add updated version", "d": "10/2015"}, {"body": "updated workaround works tests varying complexity interested see passes tests well javascript var noopinternalcomponent function element var type elementtypename elementtype var props elementpropschildren propschildren noopinternalchildren elementpropschildren var props assign elementprops props thisrenderedoutput assign element type type props props thiscurrentelement element var noopinternalchildren function children arrayisarray children return childrenmap noopinternalchild else children object children return noopinternalchild children return children var noopinternalchild function child child null child undefined return typeof child string return child arrayisarray child return childmap noopinternalchild var props childprops amp amp childpropschildren assign childprops children noopinternalchildren childpropschildren childprops return assign child owner null props props", "d": "10/2015"}, {"body": "awesome nt mind trying happens use earlier", "d": "10/2015"}, {"body": "much cleaner thanks guess head much javascript var noopinternalcomponent function element var type elementtypename elementtype var props elementpropschildren propschildren noopinternalchildren elementpropschildren var props assign elementprops props thisrenderedoutput assign element type type props props thiscurrentelement element var noopinternalchildren function children arrayisarray children return childrenmap noopinternalchildren else children object children return noopinternalchild children return children var noopinternalchild function child var props childprops amp amp childpropschildren assign childprops children noopinternalchildren childpropschildren childprops return assign child owner null props props", "d": "10/2015"}, {"body": "explicitly define displayname component depend compiling toolchain default need specify using babel though may cases nt handled", "d": "10/2015"}, {"body": "colleague installed babelpluginreactdisplayname shows actual component name", "d": "10/2015"}, {"body": "provide test case expected happen actually happened otherwise ca nt determine bug react nothing go thanks", "d": "10/2015"}, {"body": "use react android developer simulation using genymotiongenymotion android simulator free version used download test following code normal use change event triggered created liguoxin created ligx moduleexports function var react require react var valuemixin require jryjwidgetsvaluemixin return reactcreateclass mixins valuemixin getdefaultprops function return type text placeholder unit data text getinitialstate function return value disabled thispropsdisabled render function var classname uinn ubimg umara thispropsiconclass var value thisgetvalue later changed code uses jquery event binding program operating normally created liguoxin created ligx moduleexports function var react require react var valuemixin require jryjwidgetsvaluemixin return reactcreateclass mixins valuemixin bindchange function var thisrefstextcontainer change function e mehandlechange e componentdidmount function thisbindchange componentdidupdate function thisbindchange getdefaultprops function return type text placeholder unit data text getinitialstate function return value disabled thispropsdisabled render function var classname uinn ubimg umara thispropsiconclass var value thisgetvalue valuemixin code created ligx moduleexports function return getvalue function return thisstatevalue handlechange function arg var oldvalue thisgetvalue var newvalue argtargetvalue var thisprocessvalue newvalue thisprocessvalue newvalue oldvalue setvalue function value thishandlechange target value value", "d": "10/2015"}, {"body": "looks like likely issue fix going ship happen next day", "d": "10/2015"}, {"body": "date interaction supposed shallow renderer days cc spicyj use shallow renderer nt working real rendered tree especially nt look like work remember props rendered output react element component instance test case seems written yes expected", "d": "10/2015"}, {"body": "expected probably give better error message changing issue title reflect", "d": "10/2015"}, {"body": "anything help nt contributed react yet investing heavily incompany knowledge point assert love help", "d": "10/2015"}, {"body": "also submit pr react website could clarify documentation", "d": "10/2015"}, {"body": "docs directory markdown files turn website page also edit github button top links straight reacttestutilsjs file could add invariant makes sure reactisvalidelement returns false passedin node", "d": "10/2015"}, {"body": "reactdom includes react child dependency far understand yeah peer dependency cc zpao dependencies child dependencies simply result unfortunately resolves version issues peer dependency preferable regular dependency wrong careful avoid multiple installations", "d": "10/2015"}, {"body": "nt know cause react installed reactdom nodemodulesreactdomnodemodulesreact also nodemodulesreact ca nt find way reproduce", "d": "10/2015"}, {"body": "happen quite stealthily updatingetc ran issue recently reopen really seems peer dependency", "d": "10/2015"}, {"body": "reason direct dependency first place intend npm peerdependencies cover exact problem avoid duplications modules built around module like react reactdom saying seems nt reason reactdom include react direct dependency", "d": "10/2015"}, {"body": "probably peerdep nt remember put regular dep addons react peerdep", "d": "10/2015"}, {"body": "ah nevermind thought could easily swap react reactdom without understanding moved changed webpack config everything cool", "d": "10/2015"}, {"body": "could report devtools project thanks", "d": "10/2015"}, {"body": "oops sorry zpao looks like already aware", "d": "10/2015"}, {"body": "give complete standalone test case nt working nt reports working exclusively dev tools showing right thing", "d": "10/2015"}, {"body": "luciofranco could provide testcasejsfiddle demonstrates issue", "d": "10/2015"}, {"body": "zpao jimfb seems fact error react thanks quick responses", "d": "10/2015"}, {"body": "correct approach indeed seems like bug want submit pr cc zpao spicyj", "d": "10/2015"}, {"body": "pretty sure works", "d": "10/2015"}, {"body": "sounds like need require whatever dom nothing officially support want work whatever provided also really nt export factories nt compatible others decide use createlement", "d": "10/2015"}, {"body": "closing since dom thing made us", "d": "10/2015"}, {"body": "thank response", "d": "10/2015"}, {"body": "curious could make sense immutablejs alternative function returns regular objectmap instead seems like could used performance optimization", "d": "10/2015"}, {"body": "well always go converts plain old array quite bit typing also requires assign props hand opposed automatically picking keys map also meant using native maps sort brought yields warning using maps children yet fully supported experimental feature might removed convert sequence iterable keyed reactelements instead", "d": "10/2015"}, {"body": "update found reading bit needed pull dependency packagejson like tests import works fine sorry confusion question future reference browser friendly pure driven example planned biggest gripe w react community nodecentric cjsfirst instead build frontend apps", "d": "10/2015"}, {"body": "btw try submit snippet jsfiddle seems nt support jsx yet key code sorry live demo check", "d": "10/2015"}, {"body": "probably use base live demo", "d": "10/2015"}, {"body": "seems works well ime real component simple guess somewhere wrong cause problem let check thanks time", "d": "10/2015"}, {"body": "found root cause thank much", "d": "10/2015"}, {"body": "see error", "d": "10/2015"}, {"body": "type input field browser makes operations like knows translate cursor position according operation reassign value externally like two ops way restore cursor position operations nt enough information translate cursor way want", "d": "10/2015"}, {"body": "yeah ca nt really anything better set dom node manually", "d": "10/2015"}, {"body": "thanks detailed writeup get coming naming think unlikely change short term flesh direction heading multiple renderers thirdparty rendering see end", "d": "10/2015"}, {"body": "guess good enough know guess active immediately first heard changes wouldbe better time point nt lazy loader well tested form", "d": "10/2015"}, {"body": "assumption good succinct way explain reason advise caution reactlink downside hiding twoway binding becomes really easy get stuck hardertodiagnose behavior likely move support reactlink core soon move user land", "d": "10/2015"}, {"body": "thanks quick answer basically advised hides actually going developer also thanks heads reactlink moving core", "d": "10/2015"}, {"body": "naive change use setattribute instead guess browser differences might create problems also performance differences", "d": "10/2015"}, {"body": "correct behavior change property attribute attribute indicates initially selected option attribute also correctly set initially selected option sounds like bug unless misunderstanding something", "d": "10/2015"}, {"body": "react shallow copy props nt maintain prototype ctor passing createelement better passing single prop eg seen pop twice ca nt find issue answered guess might going close think intend continue behavior cc spicyj might able back", "d": "10/2015"}, {"body": "yes zpao right inspect object pass pull provided", "d": "10/2015"}, {"body": "react shallow copy props would useful mean full copy props component kind view thisprops like viewmodel u right issue problem question", "d": "10/2015"}, {"body": "could write code generically request data higher level pass list component stays dumb future please post questions like stack overflow elsewhere github issues support forum used tracking bugs improvements react", "d": "10/2015"}, {"body": "sounds like bug", "d": "10/2015"}, {"body": "consider context optimization hard", "d": "10/2015"}, {"body": "yes yiminghe said optimizing context hard ca nt bail check dom component may children composite components check would lead erroneous behavior avoid reconciling dom nodes would need save previous context internal instance ie ca nt dom nodes going become stateless components might fancy magic could knew none deep children composites andor utilized glimmerlike diffing think scope issue anyway decision skip dom components intentional one bug leave issue open days see anyone ideassolutions sebmarkbage others wants jump", "d": "10/2015"}, {"body": "kind srclang added recently part future release likely nt see default though guess still need add", "d": "10/2015"}, {"body": "related", "d": "10/2015"}, {"body": "maybe key", "d": "10/2015"}, {"body": "tlightsky nt think nt even get warning tried key wrapper still nothing edit forget babel nt start reason indeed code works using wrapper key instead div become mandatory", "d": "10/2015"}, {"body": "ooookay obviously nothing going problem disappeared soon switched ff devtools instead firebug idea nothing framework sorry noise", "d": "10/2015"}, {"body": "may something causing opened track", "d": "10/2015"}, {"body": "react native different repo may want discuss issues", "d": "10/2015"}, {"body": "sorry meant post reactnative repo made mistake sorry sorry guy could delete issue please", "d": "10/2015"}, {"body": "react addons shipped independent packages install require needed", "d": "10/2015"}, {"body": "yes another option need packages webjars tried created addon packages procedure fails github repository specified npm packages", "d": "10/2015"}, {"body": "haha ew requirement likely infers development hell want know", "d": "10/2015"}, {"body": "running project achieve desired effect", "d": "10/2015"}, {"body": "talking node project use file amd module java webapp", "d": "10/2015"}, {"body": "think iamdustan nt mean node means using envifying something like looseenvify webpack envify development build going replace checks inside react uglifyjs eliminate dead branches react works used npm example", "d": "10/2015"}, {"body": "gaearon yea still means integrating node workflow think ask separating minification part proddev split honesty thought making clearer simply minified different pattern lot libs apart making clearer people inadvertently using dev build prod sure real wins minifiying already minified lib nt ideal harmless jochenberger could explain would helpful", "d": "10/2015"}, {"body": "zpao separating minification split exactly point use react java web application framework users framework enable disable minification toggle development production mode settings orthogonal though default settings dev gt minification prod gt minification user chooses disable minification production like able serve unminified production version", "d": "10/2015"}, {"body": "see every time trying animations", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "updated title avoid potential confusion", "d": "10/2015"}, {"body": "duplicate", "d": "10/2015"}, {"body": "lots potential culprits first eradicate really obvious things sometimes trip element grabbing clicks top intended target typo adding onclick handler jsx maybe posting code snippet component would help although sure github issue best place sort question", "d": "10/2015"}, {"body": "tested react v worked change version failed happened android webview phone model lenovo android version code version import react react class root extends reactcomponent constructor props super props thisalert thisalertbind alert alert render let style cursor pointer return reactrender documentgetelementbyid reactdom version import react react import reactdom reactdom class root extends reactcomponent constructor props super props thisalert thisalertbind alert alert render let style cursor pointer return reactdomrender documentgetelementbyid reactdom", "d": "10/2015"}, {"body": "mobile may related initialising touch events changed although wasnt aware anything special guess question anything else code required redundant possibly screwing something", "d": "10/2015"}, {"body": "code page test check cheap android mobiles use android origin webview", "d": "10/2015"}, {"body": "got access iphone things work guessing tried extract react code try vanilla jsdom phone although obviously work android version decent enough", "d": "10/2015"}, {"body": "yes changed v worked well moderner mobiles worked", "d": "10/2015"}, {"body": "good see wonderful world android still providing endless joy web developers could try asking question forums reactiflux discord channel seems pretty active get peeps move slack", "d": "10/2015"}, {"body": "good see wonderful world android still providing endless joy web developers haha thank much", "d": "10/2015"}, {"body": "bad solution", "d": "10/2015"}, {"body": "hmm odd work normal react way case weird thing capture phase device", "d": "10/2015"}, {"body": "work either", "d": "10/2015"}, {"body": "problem ie basically code boundled production mode reacterrorutils simulate real browser event better devtools logging go around problem boundling code processenvnodeenvproduction", "d": "10/2015"}, {"body": "uncinimichel really works js files smaller", "d": "10/2015"}, {"body": "dyb good however need raise bug", "d": "10/2015"}, {"body": "uncinimichel think bug react warded indeedly", "d": "10/2015"}, {"body": "switching prod mode nt great long term solution luckily fixed already ship fix see", "d": "10/2015"}, {"body": "zpao great thanks", "d": "10/2015"}, {"body": "sorry non issue createfactory going needed", "d": "10/2015"}, {"body": "sounds like really specific problem setup ca nt help without code fairly certain nt bug react inclined say start question stack overflow somewhere come back whenif think found bug react specific steps reproduce feel free link post maybe somebody paying attention help", "d": "10/2015"}, {"body": "mean seriously everything worked fine render methods called react issue var react require react var reactdom require reactdom var mycomponent reactcreateclass render function consolelog render node documentgetelementsbyid wrapper reactdomrender node even primitive example taken docs work nt tell issue code", "d": "10/2015"}, {"body": "packagejson look like version react amp reactdom install ton code looks like posted runs fine", "d": "10/2015"}, {"body": "react reactdom also ton code fine previous version got example working replaced page hello world try component render method executed returned content show components imported files example inline main file guess works render methods look like example complicated", "d": "10/2015"}, {"body": "downgrade everything works", "d": "10/2015"}, {"body": "something packaging probably going wonky might multiple reacts something make standalone example maybe repo gist could probably help track keep eye errors console otherwise much go sorry good luck", "d": "10/2015"}, {"body": "mean seriously everything worked fine render methods called react issue need come issue tracker harsh demanding attitude try help please realize quick assume something inherently broken whereas works fine thousands people already upgraded way help nt provide exact setup reproducing problem", "d": "10/2015"}, {"body": "nt tell issue code project nt end code may ton tools libraries use package manager transpiler javascript bundler etc standing code see code actually runs browser somewhere along chain might mistake impossible figure without project setup reproducing problem yes issue setup necessarily code", "d": "10/2015"}, {"body": "well use npm webpack babel special setup anything tried installing npm packages anew nt help use setup also thing changed react version everything works output render methods logic tells change react time try prepare project test", "d": "10/2015"}, {"body": "make sure nt end duplicate react example use npm package use peer dependency react install react end two reacts going work", "d": "10/2015"}, {"body": "ok played little deleted node modules reinstalled node everything another horror story sure one react node modules opened project chrome worked usually use firefox ff dint work errors nothing fixed warnings could see console suddenn even replaced party components seemed incompatible new react still nothing ff turned warnings firebug got mutating prototype object cause code run slowly instead create object correct initial prototype value using objectcreate something creating worker empty source compiled source babel since babel nt changed time change react trigger firebug open js failed load closed worked firefoxbabelreact bug since weverything cool react version thing changed one reason bug happen", "d": "10/2015"}, {"body": "bazo many users including facebookcom upgraded without problem unable reproduce problem think found bug react please provide simplest possible testcase demonstrates issue without valid repro little could", "d": "10/2015"}, {"body": "jimfb true entirely test case provided nt enough information full environment last part firebug playing nicely reported recently money something babel related nt chance look nt really care much firebug days super high priority bazo thanks hunting sure end filed start tracking issue bit much noise valuable place people land", "d": "10/2015"}, {"body": "think dug little context problem app bundle source code dependencies separate test code dependencies merge actually run test code saves bundle time making changes tests nt rebundle source code dependencies however problem seems stem declaring dev dependency means nt get compiled source bundle source dependencies sort issue test utils wo nt access correct react instance bundled together", "d": "10/2015"}, {"body": "sort issue test utils wo nt access correct react instance bundled together potentially essentially bundle splitting would need packager know reactreactdom already available docs around internet webpack browserify concern might running dev prod mode nodeenvproduction sure testing utils end working prod mode", "d": "10/2015"}, {"body": "think part configured correctly worked previously using bundler knows dependencies already bundled something split could cause problem", "d": "10/2015"}, {"body": "would nt expect since reactaddons require deeply react package reactdom definitely seen unexpected cases multiple reacts", "d": "10/2015"}, {"body": "oh hey github references default unexpected anyways tgolson sure helpful recreated test cases unable replicate permutations seem pass fine setup probs different mine somehow zpao mentioned might something bundling", "d": "10/2015"}, {"body": "zpao jadekler thanks help fellas think right seems like bundling issue bundle source dependencies things work bundle test dependencies things fail nt seem effect nt time get exact root issue close since seems like everything react side good update issue find solution might help others", "d": "10/2015"}, {"body": "might red herring due way browser represents markup improved way message works could test see get different message", "d": "10/2015"}, {"body": "believe change fully backwardscompatible", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "props state would better also still fully backward compatible", "d": "10/2015"}, {"body": "probably best place follow along ongoing discussion", "d": "10/2015"}, {"body": "sounds like usage questions use github issues tracking bugs react core going close issue take radar feel free continue discussion thread move another site", "d": "10/2015"}, {"body": "jimfb know solution stuck past one week", "d": "10/2015"}, {"body": "nothing specific react question general npm issue try hoist dependencies app level run npm install trying explicitly install things inside folders nodemodules going nightmare ask help stack overflow place", "d": "10/2015"}, {"body": "interesting thing note pure function components longer applies think inaccurate stateless components nt stateless components may stateful children mathematically", "d": "10/2015"}, {"body": "stateless components nt thisstate stateless components may stateful children mathematically thisstate yes reconciliation continue normally children incompatible bails proposing exactly behavior functions nt supported first class react called directly js const button children gt children const toggle children gt children button children toggle children transition wo nt destroy statefulthing state react nt aware types button toggle different propose behavior using function components normally", "d": "10/2015"}, {"body": "reason stateless component return null", "d": "10/2015"}, {"body": "seems issue way made test close issue open another issue discussion point", "d": "10/2015"}, {"body": "plans generally suggest static type checker like flow things like", "d": "10/2015"}, {"body": "thsnkyou much \u65bc notifications githubcom could useful variable checks like function arguments reply email directly view u b", "d": "10/2015"}, {"body": "see also", "d": "10/2015"}, {"body": "please read documentation forms filing issues nt get response stack overflow nt awesome please avoid future", "d": "10/2015"}, {"body": "probably want unmock react dependencies jest config see config example react tutorial", "d": "10/2015"}, {"body": "think moved fbjs could", "d": "10/2015"}, {"body": "samerbuna correct never official api internal runtime dependency removal never included change logs fwiw key mirror use tutorial completely extraneous simply assuming values constants enough", "d": "10/2015"}, {"body": "glitter looks like startup clone slack similar features better pricing model etc intuition nt want leave issue open days collect feedback reasoning many underutilized communication channels substantially less valuable concentratedactive communication channels one thing us setupmaintainetc maybe spicyj thoughts", "d": "10/2015"}, {"body": "nt official community large group react users talking sorts interesting stuff reactiflux", "d": "10/2015"}, {"body": "yep reactiflux nonirc discussion happens moved discord slack", "d": "10/2015"}, {"body": "really need open gitter let give discord chance", "d": "10/2015"}, {"body": "dallonf thanks", "d": "10/2015"}, {"body": "bind generates new function going triple equals equal sure get around good news performance perspective actually update dom node callback function changes fancy magic internally call correct event handler event processed running performance problems due bound functions", "d": "10/2015"}, {"body": "personally use special purerendermixin ish base class ignores functions comparing prevnext far perfect works well enough jimfb problem every component create receives bound function components rerender every time", "d": "10/2015"}, {"body": "syranide yeah agree bind generates new function going triple equals equal sure get around ideas", "d": "10/2015"}, {"body": "jimfb weakmap seems like best nearterm solution bit cumbersome use something trivial js getting shit together offering better utilities comparison", "d": "10/2015"}, {"body": "ccorcos used pattern like get around issue", "d": "10/2015"}, {"body": "yes passing index prop perf tight scenarios", "d": "10/2015"}, {"body": "strml yeah problem code reuse change counter component syranide thinking use pure render mixin doesnt care functions happens function keeps getting passed maybe component layers old bound function counter different index jimfb one hack would lru cache something hold references bound functions think best solution would something baked react react look special key shallow comparison arguments function reconcilliation would need code handle binding", "d": "10/2015"}, {"body": "ccorcos make sure always bind function arguments something needs dynamic bind local method holds logic instead", "d": "10/2015"}, {"body": "yes well every case run always boils single function reference eg simple solution would react checked method reconciliation would generalized could solve binding issue js shallowlisteq function b alength blength arrayzip var lt alength b return false return true return false reactaddonsbind function f ctx args f could already reactboundfunction want maintain argument function references let prevargs fargs bound function moreargs return fapply ctx prevargsconcat argsconcat moreargs keep previous f exists boundf ff f boundargs prevargsconcat args boundreactboundfunction true boundequals function g return greactboundfunction amp amp ff gf amp amp shallowlisteq fargs gargs return bound", "d": "10/2015"}, {"body": "oh yeah right totally missed context part keep array contexts shallow compare well iterate though binding arguments redo example later sent iphone oct andreas svensson notifications githubcom wrote ccorcos make sure always bind function arguments something needs dynamic bind local method holds logic instead reply email directly view github", "d": "10/2015"}, {"body": "ok guy", "d": "10/2015"}, {"body": "enough information issue actionable furthermore sounds like usage question usage questions asked stackoverflow use github issues track bugs react core going close issue believe bug react please create simple testcase jsfiddle demonstrates issue look", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "merged work", "d": "10/2015"}, {"body": "add context whether use actual anchor tags nt seem affect whether putlistener gets called", "d": "10/2015"}, {"body": "strml provide simplified jsfiddle demonstrates issue many putlisteners take look", "d": "10/2015"}, {"body": "yea looks like workaround removing tap delay cc spicyj", "d": "10/2015"}, {"body": "work jsfiddle get home tonight thanks taking look perf concern seeing crashes error logs sentry due failures trace back", "d": "10/2015"}, {"body": "got open console hit run", "d": "10/2015"}, {"body": "handler appears culprit", "d": "10/2015"}, {"body": "appears expected behavior pass different function instance counts change maybe ignore event listeners updates usually less costly often noops", "d": "10/2015"}, {"body": "yeah interacting dom slow could probably set callback proxy invoked reads actual handler internal instance updates due render would result call dom", "d": "10/2015"}, {"body": "considered bad form bind render function otherwise create handlers loop alternative time put data attribute read click", "d": "10/2015"}, {"body": "already nt actually interact dom", "d": "10/2015"}, {"body": "nt interact dom seems erroneous print", "d": "10/2015"}, {"body": "mean method lists every side effect returning new element perhaps technically incorrect", "d": "10/2015"}, {"body": "ok tldr conceptually dom changing due creates new function via hood react fancy magic avoids actually flushing changes dom makes expected behavior little ambiguous practice use case probably binds rather someone swapping event handler would possible slightly unusual interest making reactperf useful rather correct spicyj agreement probably makes sense suppress logging updates event handlers ifwhen previous value new value functions", "d": "10/2015"}, {"body": "stackoverflow best place usage questions since use github issues track bugs core interest keeping conversation one place let redirect discussion stackoverflow post made couple hours ago", "d": "10/2015"}, {"body": "reactdom another file package bower", "d": "10/2015"}, {"body": "oh interesting main bower script injector nt seeing", "d": "10/2015"}, {"body": "would great compatible since lot people use bower", "d": "10/2015"}, {"body": "looks like add reactdom main", "d": "10/2015"}, {"body": "sounds good oct paul shannessy notifications githubcom wrote looks like add reactdom main reactjsreactbower reply email directly view github", "d": "10/2015"}, {"body": "yea automocking stuff yayyyy tend issues automocking gains using first move pretty much always disable everything nt going react specific anybody disabled mocking dependency dependencies problems definitely part story testing react probably worth bringing jest repo people radar bug cpojer p immediately react could depend fbjs use keymirror implementation keymirror things got moved fbjs move bunch things back react repo really unlikely", "d": "10/2015"}, {"body": "kill keymirror nt need", "d": "10/2015"}, {"body": "separate discussion keymirror symptom root issue jest npm", "d": "10/2015"}, {"body": "getting really bad ran sort fault set unmock done popped deep issue required called looped unfortunately mock made function return undefined errored cpojer like zpao said symptoms seeming deep jest issue migrate issue jest repo one already", "d": "10/2015"}, {"body": "agree situation really annoying nt good solution yet would recommend react team provide list modules mocked come something good sorry trouble", "d": "10/2015"}, {"body": "yea make jest issue react specific workaround unmock react fbjs hopefully nt use dependencies fbjs basically anytime unmock something need walk deps unmock potential trouble", "d": "10/2015"}, {"body": "depends specifics application ultimately performance issue run perf tests figure option fastest app general first option faster additionally first option preferred keeps component state attached current component shift ids second example update every dom node also remapping existing components internal data new values suppose user inputs text item text box push new item end text would appear item e text box would want ever unsure almost certainly want first option usage question try keep github issues tracking bugs react core going close please ask usage questions stackoverflow future", "d": "10/2015"}, {"body": "thanks lot jim", "d": "10/2015"}, {"body": "seems like babel parses file whatever reason nt anything react", "d": "10/2015"}, {"body": "nt anything better ask things stackoverflow react maintainers busy people need make busier node nt know css files webpack configure something like deal node need look workarounds ignoring imports precompiling node code webpack either way unrelated react", "d": "10/2015"}, {"body": "gaearon thank answer thought since almost everyone uses babel react someone might seen", "d": "10/2015"}, {"body": "use target component follows", "d": "10/2015"}, {"body": "stepancar ca nt see mycomponent implementation suspect titobouzout correct answered issue either way sounds like usage question rather bug react core trying keep github issues track bugs react core going close issue usage questions better answered stackoverflow feel free continue discussion thread", "d": "10/2015"}, {"body": "titobouzout thank already use solution jimfb think behavior wrong passed data attribute custom component appears anywhere case component core like div p passed data attribute appears markup case component created passed data appears markup titobouzout solution implemented react thank", "d": "10/2015"}, {"body": "component may many children even sub react components imagine case", "d": "10/2015"}, {"body": "stepancar wonder mixing custom elements custom components custom elements like work described custom components like necessarily markup associated arbitrary things props", "d": "10/2015"}, {"body": "jimfb titobouzout thank understanding fault agree", "d": "10/2015"}, {"body": "lot anybody go helpful suggest working stack overflow narrow case think indicates bug react please provide test case try diagnose going close meantime quick suggestion turn break caught exceptions throw debugger react warnings go back stack createelement warning big red flag may using factory jsx require failed resolve", "d": "10/2015"}, {"body": "defaultchecked never updated used initial render could component never unmounted due usage reactrouter second render really update completely new instance future please use places like stack overflow specific use case issues come test case indicating bug react good luck", "d": "10/2015"}, {"body": "paul correct usage questions asked stackoverflow try keep github issues tracking bugs core dwboutin depending trying might find prop works better course specify change listener would make component controlled", "d": "10/2015"}, {"body": "well typecheck happens exact typecheck directly forceupdate forceupdate invariant happens fwiw due important distinction former makes new function bound pass along arguments latter also new function explicitly nt pass arguments former gets event passed along latter drops event nt callable thus invariant need typecheck guess could discuss whether keep invariant warning misuse api", "d": "10/2015"}, {"body": "follow equal thing would throw error see first bind example", "d": "10/2015"}, {"body": "correct yes understand nt toooo hard understand happening misuse api guess would consider adding argument type invariant help make clearer something like kind moot confused second might confuse others also", "d": "10/2015"}, {"body": "cc yungsters input relay side things presumably handled way", "d": "10/2015"}, {"body": "zpao problem define wrappers like relay order achieve looks like handled naturally map props higherorder component order deal seems hacky use higherorder component place", "d": "10/2015"}, {"body": "zpao relay one uses default prop values props accompanying graphql fragments completely managed relay applications want default value eg field happens need think arbitrary fields graphql makes record happens passed react component prop special field happens nested inside prop words going apply default prop values props apply arbitrary tree paths graphql object", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "thisonitemclickbind item item passed first argument event go second argument said worked maybe expecting arguments wrong order e item instead item e add logging statements onitemclick figure exactly error thrown", "d": "10/2015"}, {"body": "absolutely right sorry wasting time seems like need sleep", "d": "10/2015"}, {"body": "pretty sure intentionalconscious decision test utils nt supposed used production nt optimized performance exist make easy test code debug dev mode really need always create custom bundle react", "d": "10/2015"}, {"body": "yep long case well documented call", "d": "10/2015"}, {"body": "part react package", "d": "10/2015"}, {"body": "oh perfect nt realize thanks", "d": "10/2015"}, {"body": "zpao ran also browser version super useful debugging purposes nothing else tend think put reactdom really add enough bloat feel need take reactdom", "d": "10/2015"}, {"body": "mixed feelings also see also found useful entirely debugging nt great argument also hard create bundle reactdom corresponds putting directly wo nt happen maybe make bundle something awkward make obvious", "d": "10/2015"}, {"body": "causing trouble clojurescript well clojurescript nt play well npm webpackbrowserify adding reactdomserver reactdomreactdomserver", "d": "10/2015"}, {"body": "understanding right want support without warnings cant support anymore without asking people workaround like aliasing reactdom react webpack config think correct", "d": "10/2015"}, {"body": "think say something like use reactdom sometimes backed old version right think work library code users nt need anything fancy build configuration", "d": "10/2015"}, {"body": "jimfb thanks nt really understand solution reactdom get value react version gt", "d": "10/2015"}, {"body": "something like", "d": "10/2015"}, {"body": "sure work since condition ca nt resolved statically bundlers like webpack likely complain least warn installed even consumer using cleanest way mess release major version requiring", "d": "10/2015"}, {"body": "yes right thanks help gaearon jimfb", "d": "10/2015"}, {"body": "spicyj sebmarkbage", "d": "10/2015"}, {"body": "hm unfortunate guess try find feature test patch", "d": "10/2015"}, {"body": "taking look first bug docs testing event seems fired form element level rather form say log submit log submit match expected behaviour want handler individual reactdom form elements ie called element invalid want bubble parent ie called whenever least one element form invalid", "d": "10/2015"}, {"body": "match dom fire element form already support events nt bubble events added document level delegated ones nt bubble need added specific elements creation forms submit amp reset events thanks taking feel free get pr completely ready questions need help", "d": "10/2015"}, {"body": "thanks paul good know looking right place update time create pr need help cheers tom oct paul shannessy notifications githubcom wrote match dom fire element form already support events nt bubble events added document level delegated ones nt bubble need added specific elements creation forms submit amp reset events thanks taking feel free get pr completely ready questions need help reply email directly view github", "d": "10/2015"}, {"body": "hey put together pr would great get feedback couple specific questions handle automated testing lot test code look unfamiliar react codebase unsure ifhow tested splitting logic make sense think would better separate statement bit preceeding matching elements need setup keep minus first feedback appreciated seem work totally new react code sure way gone suitable cheers tom", "d": "10/2015"}, {"body": "tomduncalf awesome", "d": "10/2015"}, {"body": "nt seen done git pull latest ie presumably still failing today version node running operating system", "d": "10/2015"}, {"body": "running ubuntu node version pull done earlier today rereading error think directed towards somewhere else leave", "d": "10/2015"}, {"body": "interesting nt support building node actually little surprised able npm install react repository ran tests ten times linux machine node unable repro issue jalejos upgrade version node let know still able reproduce issue", "d": "10/2015"}, {"body": "hi sorry late reply updated node version ran npm install deleting nodemodules npm version still issue happening decided clone project separate folder run steps issue still present", "d": "10/2015"}, {"body": "spicyj ideas mystery anyone else able reproduce issue", "d": "10/2015"}, {"body": "idea", "d": "10/2015"}, {"body": "jalejos point sure fix first heard issue unable reproduce get chance investigate super curious hear discover", "d": "10/2015"}, {"body": "jimfb also seeing random failures ubuntu looks like cause lines reactdefaultperfanalysisgetinclusivesummary candidates faster nt make summary crank test start failing tests still pass least could something nt seem using mocked version edit tried different machine os x using mock nt getting reset tests nt look like causes problems idea mock nt get used laptop", "d": "10/2015"}, {"body": "case well explained docs nt traverse nested reactelements nested arrays previously object literals js var nested username nested meant nested children would traverse pull span anchor div wo nt traverse literal div children nt children form div", "d": "10/2015"}, {"body": "jimbolla believe closest one means anything renderable", "d": "10/2015"}, {"body": "jimbolla usage question rather bug react core use github issues tracking bugs react core usage questions better answered stackoverflow since bug react core going close issue feel free continue discussion thread", "d": "10/2015"}, {"body": "yaycmyk looking usage would look like whereas want something would look like want pass types instances", "d": "10/2015"}, {"body": "nt correct nt great type could one number things simple function stateless functional components also function making required extend reactcomponent react class also function since function passed closest type get since function valid ca nt accurately check return value static type checker come handy", "d": "10/2015"}, {"body": "zpao thanks would use call day valid values nt", "d": "10/2015"}, {"body": "also captures native element case eg", "d": "10/2015"}, {"body": "ok thank", "d": "10/2015"}, {"body": "documented changelog react nt accept objects children anymore use createfragment api convert object array", "d": "10/2015"}, {"body": "yaycmyk sounds right thanks answering usage question rather bug react core use github issues tracking bugs react core usage questions better answered stackoverflow since bug react core going close issue feel free continue discussion thread", "d": "10/2015"}, {"body": "warningdialog probably problem give keys status data operationid correlationid real callsite easier find", "d": "10/2015"}, {"body": "purpose inlining elements get rid function calls nt think adding call good idea since defeats point", "d": "10/2015"}, {"body": "thought first really expensive part function call props children copying associated array object allocations currently using external helpers function call anyway get think discussion using work fine would nice react able fully abstract nt need know magicnumsymbol uses", "d": "10/2015"}, {"body": "feel adding new blessed toplevel api work around bundling polyfill issue bit overkill blessed mean something like", "d": "10/2015"}, {"body": "perhaps might lead confusion future would nice nonbabel tooling future like cljs wants benefit using raw objects", "d": "10/2015"}, {"body": "gaearon argue nt seem like bundling issue long run core issue react accept random objects components better way expose api allows current functionality api relys global symbol registry clear least approach taken makes better exposing function constant directly instead would also mean could avoid relying random integer constant actually constant normal object could safely compared avoids relying possiblypolyfilled symbols alltogether", "d": "10/2015"}, {"body": "cc sebmarkbage", "d": "10/2015"}, {"body": "solution ensures multiple npm packages instances react coordinate identity seamlessly even across realms none proposals address concern also makes us compatible theoretical future value types proposals react coordinate multiple versions babel well one possible solution would babel depends module exposes somehow opts inlining polyfill gets fallback react", "d": "10/2015"}, {"body": "totally prosymbol clear mostly surprised see symbol registry actual using facing ui rather react internally pull symbol registry expose constant", "d": "10/2015"}, {"body": "left comment original pr magicnum use portable across realms nt require polyfill fixes babel problem fixes xss problem", "d": "10/2015"}, {"body": "react generates xmlcompatible markup", "d": "10/2015"}, {"body": "release note says", "d": "10/2015"}, {"body": "actually markup generated invalid without value attribute must", "d": "10/2015"}, {"body": "whether technically valid works browsers know iirc gets around issues crop using attribute name value", "d": "10/2015"}, {"body": "definitely specific error normally occurs setting state response side effect setting state eg within render says want immediate fix likely wrap call settimeout call eg alleviate problem rarely good idea", "d": "10/2015"}, {"body": "maybe writing something like wanted", "d": "10/2015"}, {"body": "event unlikely issue react still trouble try asking stack overflow", "d": "10/2015"}, {"body": "webpackbrowserify bundle think best", "d": "10/2015"}, {"body": "need add attribute elements", "d": "10/2015"}, {"body": "thanks working", "d": "10/2015"}, {"body": "regression unintentional", "d": "10/2015"}, {"body": "node version running try run", "d": "10/2015"}, {"body": "node tried couple times deleting nodemodules folder installing packages deleting npm cache", "d": "10/2015"}, {"body": "little update installed ubuntu virtual box couple tries able compile finally", "d": "10/2015"}, {"body": "problem seems grunt config switching solves problem bug seems introduced switched build steps gulp", "d": "10/2015"}, {"body": "thanks solves issue", "d": "10/2015"}, {"body": "thanks heads way able build let us know encounter issues nobody team currently building windows would nt surprised see couple things like pop", "d": "10/2015"}, {"body": "bit quirky intended behavior effectively providing new refcallback every time renders safely dispose old refcallback react calls new refcallback called instance store reuse refcallback goes away", "d": "10/2015"}, {"body": "docs say", "d": "10/2015"}, {"body": "blog post addons due dom node refs change mentioned testutilsfindallinrenderedtree related helpers longer able take dom component custom component", "d": "10/2015"}, {"body": "thanks two related follow ups jsbin first component ok second one jsbin javascript one works commented worky seem pretty similar makes custom component must subtle difference worth detailing please point doc deconstructs term custom component react terms react docs explains composite components quite succinctly iscompositecomponentwithtype returns true instance composite component created reactcreateclass would great types react components explained glossary", "d": "10/2015"}, {"body": "brigand think actually unrelated instance localnerve meant custom component synonymous composite component nt actually support rendering except server rendering browsers behave differently renderintodocument simply renders component div sorry", "d": "10/2015"}, {"body": "ok used able test server components react testutils thus issue forward guidance testing html components", "d": "10/2015"}, {"body": "shallow rendering work could try render string create new document html exact details depend running tests", "d": "10/2015"}, {"body": "thanks clarification thoughts unexpected breaking change workable", "d": "10/2015"}, {"body": "oh missed regression look see fixable point release", "d": "10/2015"}, {"body": "note renderintodocument appears work html components afaict browsing result inspector stuff go search hit issue manifests unable find element probably means dom unexpectedly mutated particular test scenario rendering jsdom set also preexisting htmlbody globaldocument much like demonstrated browser based jsbin", "d": "10/2015"}, {"body": "change actually broke lot tests way atm locate custom component within dom component previous versions possible testutilsfindallinrenderedtree test would eg locate div particular class within div specific custom component longer possible done guidance would appreciated", "d": "10/2015"}, {"body": "paste example tests look like", "d": "10/2015"}, {"body": "ok example one tests broken simplified test take tested component editscreen within look element class editscreendetails within look instance button component worked quite nicely us enabled old findallinrenderedtree understand test methods use findallinrenderedtree internally kinda thing", "d": "10/2015"}, {"body": "point one thing using testutils directly test helpers use internally particular wrote jquery style helper method use locate component instances dom nodes tests looks kinda like give us instances button component within something class editscreendetails within screen component instance calling testutilsfindallinrenderedtree repeatedly selectors hope imagine nt work since call findallinrenderedtree dom node could advise implement api would fix tests", "d": "10/2015"}, {"body": "hello problem spent last hours trying fix anyway worked upgrade npm latest version problem disappeared hope helps", "d": "10/2015"}, {"body": "nt look like duplicate react", "d": "10/2015"}, {"body": "gaearon unless mistaken lists packages dependencies means reactdom depends react pulls version", "d": "10/2015"}, {"body": "suppose blew away fresh install getting", "d": "10/2015"}, {"body": "looks like issue nothing consequence react page interested make sure thirdparty libraries updated react", "d": "10/2015"}, {"body": "linux specific broken browsers operating systems probably good first bug someone wants submit pull request", "d": "10/2015"}, {"body": "closed", "d": "10/2015"}, {"body": "yagudaev say nt valid really would nt recommend components determine whether render like much better parent component handle directly", "d": "10/2015"}, {"body": "syranide agreed upwards fields parent component hoping stay away yet maybe another elegant solution", "d": "10/2015"}, {"body": "yagudaev repetitionverbosity problem see would recommend following general solution perhaps something like following want go many variations different tradeoffs depending needs", "d": "10/2015"}, {"body": "syranide great idea thanks never considered interestingly involved example showed fields lists information displayed method example switch statement select right way display things workaround css scss field margintop amp firstoftype margintop", "d": "10/2015"}, {"body": "know problem fix eventually though probably come sooner", "d": "10/2015"}, {"body": "works fine run code babel repl fixing arrow function property initializer extending reactcomponent", "d": "10/2015"}, {"body": "really let say access available current version babel", "d": "10/2015"}, {"body": "original code transformed run", "d": "10/2015"}, {"body": "mrtnbroder happens nt bind js class foo f render return class bar render thispropsonf thispropsonfcall thisprops sure could happen code posted sure running old code", "d": "10/2015"}, {"body": "yeah sure happened dig let know maybe strange transpiling issue", "d": "10/2015"}, {"body": "ok point sounding like bug react going close issue curious hear actually went wrong turns react fault reopen issue", "d": "10/2015"}, {"body": "ah lingering forgetting something feeling thanks reminder pushed update update branch moment", "d": "10/2015"}, {"body": "good catch anybody wants grab let us know otherwise get soon", "d": "10/2015"}, {"body": "sorry issue upgraded browersify loaded watching guess caching going restarted works fine", "d": "10/2015"}, {"body": "run paste output", "d": "10/2015"}, {"body": "full output sorry mess experimenting various things lot dependencies need pruned think relevant bits actual file note commented lines uncommented get error described original post", "d": "10/2015"}, {"body": "nt react inside reactdom sure problem fixed also extra copy inside", "d": "10/2015"}, {"body": "thanks spicyj confirming suggestion worked cleaned slate removing think messing switching back forth", "d": "10/2015"}, {"body": "exactly problem think installed reactdom installed react perhaps stronger health warning would helpful wasted couple hours trying work getting reactowner refs error", "d": "10/2015"}, {"body": "think want provide things keep mind update docs issue nt super actionable going close thanks suggestion", "d": "10/2015"}, {"body": "zpao spicyj", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "think thing could warn call setstate componentdidupdate think know valid use cases done care would pretty annoying", "d": "10/2015"}, {"body": "aha following code triggers infinite loop componentdidupdate calling thissetstate even though state nt changing whatsoever another componentdidupdate triggered chatting zpao sounds like still need leave behavior way warning create specifically thissetstate called componentdidupdate state nt actually change thus triggering hard debug infinite loop", "d": "10/2015"}, {"body": "could warn nested updates even infinite loop probably slow avoided", "d": "10/2015"}, {"body": "closing since fixed master marked pr", "d": "10/2015"}, {"body": "sounds like valid issue nt think intended", "d": "10/2015"}, {"body": "try make pull request", "d": "10/2015"}, {"body": "yes pull request would much appreciated", "d": "10/2015"}, {"body": "tried repro could context see chrome android ios chrome ios safari chrome mobile emulation", "d": "10/2015"}, {"body": "maxlapshin browserdevice using also provide simple test case jsfiddle", "d": "10/2015"}, {"body": "ipad safari reproduce give better info", "d": "10/2015"}, {"body": "closing repro feel free comment reopen", "d": "10/2015"}, {"body": "nearly enough information hope helping still problem please post simple repro case jsbin jsfiddle shows problem including behavior expected see instead", "d": "10/2015"}, {"body": "think fundamental problem catchall properties components dom defines model nodes accept named attribute single set children set attributes apply frontends may widgets accept fixed set properties also sets children none uncommonly widgetspecific apis distinction children props may nearly trivial welldesigned complex user components implemented multiple sets children named props sure components like fb dom model makes sense jsx implemented right based dom would detrimental unnecessarily opinionated react may alternatives jsx extensions make sense frameworks think making sacrifices react sake jsxdom premature theoretically api catchall components really yes horrible something advocating html would design component takes arbitrary properties fixed set predefined special properties making intrusions react", "d": "10/2015"}, {"body": "syranide yeah dom though layout systems notion special value represents hierarchy descendants nodes xml association xml based layout systems already notion built jsx also already notion built happened pick prop name children conflate two though entirely obvious done solves anyway digress perhaps points better made", "d": "10/2015"}, {"body": "dup", "d": "10/2015"}, {"body": "use instead custom tags intended behavior behavior chosen needed support arbitrary attributes custom tags discussing probably going keep behavior unless someone comes better idea keep discussion thread however attribute set object object seems like wrong behavior use issue track regression", "d": "10/2015"}, {"body": "yes completely safe legal future reference usage questions better addressed stackoverflow try keep github issues tracking bugs react core", "d": "10/2015"}, {"body": "could reduce bit reproducible example runs jsfiddle fork ideally without radium simplest form logic", "d": "10/2015"}, {"body": "nt know placing like worked thanks looking seems like mistake somewhere", "d": "10/2015"}, {"body": "hack could also make wrapper thing proptypes mostly sort maintenance mode really planning add right", "d": "10/2015"}, {"body": "spicyj zpao", "d": "10/2015"}, {"body": "yeah seem lagging bit try", "d": "10/2015"}, {"body": "jsdelivr updated might want switch docs using future cdnjs says hours long time tutorial semibroken state", "d": "10/2015"}, {"body": "set buildsreactjsorg think terinjokes offered help", "d": "10/2015"}, {"body": "cdnjs adds something repo live site within minutes though course would great get lowered automated bot adding things repo much quicker hours buildsreactjsorg happy help fill free tag issue shoot email terin cloudflarecom", "d": "10/2015"}, {"body": "cdnjs readme emphasis cdnjs automatically updates libraries known hosted git repo eg lodash npm autoupdate relies release git autoupdate relies tags git repo autoupdate script runs every hour update result wo nt committed one maintainers audit updates many libs change naming directory structure different versions may need minify lib without preminified dist files reasonable delay hours think lib nt updated please wait least hours process audit commit adding react went pdt hours shipped jsdelivr went perhaps got bad break cdnjs update cycle good break jsdelivr connection ultimately best us probably", "d": "10/2015"}, {"body": "zpao follow cdnjs guys try piece together something went wrong", "d": "10/2015"}, {"body": "cdnjs maintainer take look", "d": "10/2015"}, {"body": "every stable release would expect people use includes breaking changes changes believe make product substantially better use react production facebook best remain stable still figuring optimal api point transition past continue follow semver duplicate", "d": "10/2015"}, {"body": "react actually using semver still major public api breakages fine minor patch versions though react nt actually make breaking changes patch react provides warnings deprecations documents upgrade process release notes also provided codemodding tools help transition major version zero initial development anything may change time public api considered stable version defines public api way version number incremented release dependent public api changes react every intention moving past major react communicated said part semver faq know release software used production probably already stable api users come depend worrying lot backwards compatibility probably already react given pretty clear good reasons decisions", "d": "10/2015"}, {"body": "stop encouraging people use finished product ready people already using production environment encouraging bad development practices stay date", "d": "10/2015"}, {"body": "explained things past nt fruitful discussion put much stock version number nt need use react", "d": "10/2015"}, {"body": "post minimal repro case please", "d": "10/2015"}, {"body": "minimal repro use element get error reported use element error tried dropping jest test react source code passed however running exact test local project fails confirmed react libs could kind build process causing issue line fails element", "d": "10/2015"}, {"body": "sounds like ericf mentioned", "d": "10/2015"}, {"body": "spicyj indeed looks like issue hope push fix soon blocking issue team upgrading thanks fast response", "d": "10/2015"}, {"body": "try meantime could copy definition since nt rely react internals", "d": "10/2015"}, {"body": "confused nt return dom node builtin dom components give dom node composite components unaffected", "d": "10/2015"}, {"body": "yes looking documentation noticed using instead thanks reply", "d": "10/2015"}, {"body": "spicyj help facing problem", "d": "10/2015"}, {"body": "tonyfrancis wherever using need update code use one following methods based type element calling method ref points standard component dom node etc need call retrieve element need call method ref points composite component custom component created need use new module like something like following code js function componentdidmount function var var function render return need change like js function componentdidmount function var var reactdomfinddomnode function render return hope clears nt updated code error", "d": "10/2015"}, {"body": "solved problem child reference formed begining needed time delay refs available", "d": "10/2015"}, {"body": "see need cover cases others missing see revised", "d": "10/2015"}, {"body": "spicyj think might bit advanced goodfirstbug specifically need handle three general cases user actually specified span case indicate span user specify span specify child text user specify span specify whitespace case call whitespace call text easy miss confused going whitespace includes tabs newlines spaces", "d": "10/2015"}, {"body": "jimfb hmmm looks like something wrong master branch comments example code snippet master prints warning says however branch see warning fix issue got confused thing apparently code validation part master different though branch master case nt wrap text component tag say example tag prints instead", "d": "10/2015"}, {"body": "jimfb mentioned three cases make sense rough idea fixing issue first need identify actually validation thought check via type incoming object suggest right way react community could able figure type redirect check say method check cases appropriately print warnings desired let know thought process correct", "d": "10/2015"}, {"body": "could take guess think would best spicyj could jump wrote validation code knows best", "d": "10/2015"}, {"body": "thanks bug fixed", "d": "10/2015"}, {"body": "spicyj looks like fixed part still issue remains right still warning includes text", "d": "10/2015"}, {"body": "spicyj ping", "d": "10/2015"}, {"body": "yes", "d": "10/2015"}, {"body": "react relies behavior known browsers behave way eventually phased support better present danger stay away numeric indices safe", "d": "10/2015"}, {"body": "ok see thanks closing", "d": "10/2015"}, {"body": "module far make", "d": "10/2015"}, {"body": "nt lot go code error occured make repro jsbin", "d": "10/2015"}, {"body": "yeah know really sketchy seems happen mouse event sort trying figure", "d": "10/2015"}, {"body": "could repro small case andor supply surrounding code would helpful react version etc first seen error coming code control nt ever case", "d": "10/2015"}, {"body": "event removed call invariant", "d": "10/2015"}, {"body": "iirc emit warning text nodes spaces allowed inside", "d": "10/2015"}, {"body": "syranide see close issue", "d": "10/2015"}, {"body": "cc spicyj", "d": "10/2015"}, {"body": "yeah closing warn though warning could better", "d": "10/2015"}, {"body": "tried use proptypes way generate dynamic forms allow demoing element react playground use case similar right possible introspect information proptypes certainly enough instance perform equality checks see types little painful mostly works problem soon get function call variants custom validator functions entire thing falls apart functions become fully opaque love idea meta object would minimum requirements although additionally love see", "d": "10/2015"}, {"body": "needs fully met tools without requiring anything additional proptypes api whilst require bit tooling likely barrier us react community since already using compilers like babel build tools like webpack browserify", "d": "10/2015"}, {"body": "related convo", "d": "10/2015"}, {"body": "downside reactdocgen nt provide runtime introspection react proptypes already incredibly close shame react declarative offering little terms runtime introspection two almost go hand hand", "d": "10/2015"}, {"body": "understand initial thought well turned could treat code data annotate runtime introspection automatically originally wrote purpose opted use support docgen instead able use automatically generate interactive styleguidedocumentation site proptype declarations one react component away autogenerated form different permutations component", "d": "10/2015"}, {"body": "ha bad tried string textarea work perfectly", "d": "10/2015"}, {"body": "update seen symptoms microsoft edge well makes much serious back bit research", "d": "10/2015"}, {"body": "confirmed problem affects edge ie tested phantomjs react earlier problem report error possible add svg element using vanilla dom methods browsers eg", "d": "10/2015"}, {"body": "theory going svg elements support property consistently browsers suitable workaround cases since really weird thing probably nt need nt going fixed anytime soon render svg element entirely react ie rather", "d": "10/2015"}, {"body": "directory package named already warning message seems imply happening", "d": "10/2015"}, {"body": "yes im directory named react", "d": "10/2015"}, {"body": "need call package something else npm looking field packagejson npm works gives warning", "d": "10/2015"}, {"body": "sorry bug code", "d": "10/2015"}, {"body": "never mind resolved getting domnode rendered component putting callback ref", "d": "10/2015"}, {"body": "never mind found shipped package however documentation misleading announcement page builds also available react reactdom packages bower", "d": "10/2015"}, {"body": "thanks fix", "d": "10/2015"}, {"body": "question need two lifecycle methods would want componentdidmount block visual output apply imperative dom manipulations repaint sufficiently important use case care", "d": "10/2015"}, {"body": "thought runs children parent time runs everything mounted displayed missing point one issue name assuming proposing placeholder name beginners might assume runs every effectively", "d": "10/2015"}, {"body": "gaearon maybe jimfb yes layout thrash reads executed repaint ie render measure rerender position otherwise end inconsistent view tree equivalent tearing display technologies flicker integrated layout would fix legacy", "d": "10/2015"}, {"body": "assumption well seems like people using things mentioned already logic changing misunderstood would proposal using inside", "d": "10/2015"}, {"body": "mridgway effectively yes although consistent execution order", "d": "10/2015"}, {"body": "cc leebyron api design", "d": "10/2015"}, {"body": "using use show flickering worried using used trickier could potentially catch nt mutate dom anyway refs second render pass warn", "d": "10/2015"}, {"body": "path followed would recommend componentdidinitialdisplay something similar avoid misinterpretation something occurs didmount didupdate still little confused change lifecycle common use case cover right solution become easy discover continuing use didmount produce visible effects probably keep things way", "d": "10/2015"}, {"body": "eg perf tuning tool could isolated maybe hook similar settimeout could called deferred nonblocking execution", "d": "10/2015"}, {"body": "componentdiddisplay would better name windowed list view thing already didenter didappear transition group", "d": "10/2015"}, {"body": "using componentdidmount used componentdiddisplay trickier could potentially catch componentdidmounts nt mutate dom anyway refs second render pass warn warning might little weird since dom mutation might behind sort ifcheck", "d": "10/2015"}, {"body": "perf optimization almost use cases using new hook something additional much boilerplate ideally work done initial view already done something like might batched properly difficult reason regard things call also ca nt schedule appropriately scheduled reconciler additionally queueing callbacks traversing invoking significant overhead self scale prefer requiring allow react collect second pass make initial mount really quick even check property first pass", "d": "10/2015"}, {"body": "think lot users assumed working begin said current uses method using newly proposed api behavior changed introduce new lifecycle method current implementation instead unfortunately already taken imo makes sense current behavior", "d": "10/2015"}, {"body": "problem one direction leads broken behavior one slower change api behavior apply codemod potentially break everyone", "d": "10/2015"}, {"body": "sounds like could make sense perhaps sounds like part displayedhidden ie like cssproperty might missing something sounds kind errorprone postpone things paint possible raceconditions careful say store updated rendering data subscribing also curious proposed intuitively things would normally take immeasurable time relation rendering also seems would want fire networkrequests early possible ie rather later rather delay painting network request curious usecases would measurable benefits settimeout would sufficient", "d": "10/2015"}, {"body": "intuitions often wrong oct andreas svensson notifications githubcom wrote componentdidpaint sounds like could make sense perhaps display sounds like part displayedhidden ie like cssproperty might missing something sounds kind errorprone postpone things paint possible raceconditions careful also curious proposed intuitively things would normally take immeasurable time relation rendering also seems would want fire networkrequests early possible ie componentwillmount rather later rather delay painting network request curious usecases would definite benefits settimeout would sufficient reply email directly view github", "d": "10/2015"}, {"body": "sebmarkbage liked idea available feature necessary react", "d": "10/2015"}, {"body": "sebmarkbage mentioned elsewhere purposes could api like say versatile intuitive perhaps would queue callbacks execute react finished processing ie events transactions etc edit course usecase instead want displaypaint", "d": "10/2015"}, {"body": "syranide would like avoid global apis make tied component better control scheduling deferring execution offscreen content etc would work lacks pitofsuccess factor something extra work something best practice always also requires least function call allocating bound callback point crazy optimize initial render since critical one also encourages imperative pattern managing async actions", "d": "10/2015"}, {"body": "thisdefer callback would work lacks pitofsuccess factor sure agree entirely unless read documentation know understand intended purpose common pattern js deferring something extra work something best practice always agree works mount updates nt worth supporting initial subscription stores basically nt equivalent unmount since nt want block either seems equally important page switches also requires least function call allocating bound callback point crazy optimize initial render since critical one seems petty context instancing components rendering components setting dom drawing dom every component going need use want makes sense go way seems like partial solution", "d": "10/2015"}, {"body": "could allow function returned gets deferred one place document rather case use situations use could make things confusing also returning makes obvious stuff completed", "d": "10/2015"}, {"body": "primary component strategy react never web components runs counter functional paradigm react providing mostly imperative api nt help solve problems building apps fact makes difficult little nothing solve integration problem libraries nt solid story around serverside rendering nt help crossplatform environments like react native overhead implementing full dom spec going sidestep anyway unlikely facebook ever use web components scale therefore unlikely priority us lot excitement web components interop layer mostly unwarranted imo however like support users made best effort try support interop edges would like support much possible without compromising api vision react turned spec incomplete regard things like event delegation still major changes pushed various sides mozilla polymerchrome final incarnation revert support already added eg support event handling shadow trees terms strategy go forward nt exist try improve interop react reactlike component layer instead talked members popular ui frameworks seem feel fact probably better chance implementing solid interop user land", "d": "10/2015"}, {"body": "recap two types approaches terms ui frameworks allows build components using dom framework leveraging dom component model declarative format eg using proprietary nonstandard component model nevermind extending dom since care code reusable encapsulated highly performant interoperable like native html elements eg basically ones relying first approach build frameworks top incomplete specs potentially dangerous ground also wondering ever real performance advantage terms browser optimizations first approach coming back interop subject question think wrapping components rather exposing different wrapper particular ui framework asking context supporting older technologies want benefit lastly share insights imperative api refers guess related html declarative format traditional declarative databinding expressions", "d": "10/2015"}, {"body": "cosminnicula key difference custom elements web components often expose imperative api example consider video tagelement relatively declarative attributes like also bunch imperative functions eg functions play nicely declarative application touched bit recent blog post try support interoperability possiblepractical web components support purely declarative api via html attributes already work reasonably well react regards wrapping react components custom elements vice versa yes wrapping current recommendation anyone requires interoperability since programming models different hard seamless api automatically generated recommendation write wrapper class hand rather using automatic wrapper library ultimately choice whatever works possible wrap custom element reactwrapper use react application vice versa", "d": "10/2015"}, {"body": "cosminnicula consider open source project adopted many big companies competitors facebook proprietary nonstandard adoption two technologies might hint one solves real world problems better", "d": "10/2015"}, {"body": "borisyankov simply react oneway data flow component model never converge towards standard reconciliation two possible interoperability level way react ideology could considered standard actually supported really think react solving two important problems ultimately drives adoption dom performance code complexity however might get substantial performance boost google", "d": "10/2015"}, {"body": "cosminnicula misconception webcomponents accelerated mobile pages slow path deferred last possible point intentionally opposite giving performance boost make everything else isolated best could interop layer start component however inside web component still slow dom react faster inside nt mean react render web components output potentially placeholders serverside rendering amp document", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "mark", "d": "10/2015"}, {"body": "majorye intent get notifications subscribe button top right issue", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "reactlink getting deprecated per assuming valuelink something find useful encourage publish npm module git repository provides functionality wrapper component people use since something plan supporting core going go ahead close issue", "d": "10/2015"}, {"body": "dupe", "d": "10/2015"}, {"body": "nt recommend inheritance building components", "d": "10/2015"}, {"body": "arcanis inheritance gets pretty awkward etc sometimes used decorators need share multiple methods react component classes though usually end finding way without", "d": "10/2015"}, {"body": "spicyj really documented edit oh sorry misread comment read plain classes fine inherited classes nt right well still sounds bit strange restrict language features yep see mean however solved using static properties already supported babel objectassign extend parent", "d": "10/2015"}, {"body": "inheritance nt imo nt work well building react components jordan explains many people become accustomed using oo inheritance tool primary means abstraction application worked java shop know talking personal opinion classical oo inheritance implemented many popular languages often best tool jobs let alone jobs situation approached even caution inheritance used within framework paradigm uses functional composition primary abstraction react certain patterns want prevent many strange things people come combining render inheritance nt make sense addressed via simple composition also risk making mutation convenient might make sense start classes simply better syntax react component creation intentionally limiting use cases limiting inheritance depth making react base class methods final used react components course nonreact use classes would nt restricted use case sure ca nt simple composition", "d": "10/2015"}, {"body": "read plain classes fine inherited classes nt right well still sounds bit strange restrict language features inherited classes fine per se react wo nt go way encourage use inheritance noted use convenient good reason custom logic use composition better fact facebook written ton react components nt use inheritance great testament", "d": "10/2015"}, {"body": "wanted make little followup tried using inheritance using composition instead well really like actually able achieve things even much cleaner way need override behaviour add func prop overridable components guess far concerned issue closed still think would nice still add default methods prefer inheritance something would fight thanks lesson", "d": "10/2015"}, {"body": "true believe composition inheritance think original question still valid tempted leave issue open would make sense implement default empty lifecycle methods base reactcomponent class main reason see allows static tooling better reason code rather forced rely implicit knowledge instance could mark method always whenever overriding method spell wrong function gets removed parent reactcomponent future version whatever get tooling support also allows code assist give lifecycle methods ask suggestions things override etc might even improve performance keeping implicit classes similar within core overall think would still good change even people using composition inheritance", "d": "10/2015"}, {"body": "stated fakerainbrigand stackoverflow variable set module code evaluation time therefore never updated since babel executes module transpilation even running mocha test suite variable remains false even setup quick workaround indeed mutate jsdom ready js import jsdom jsdom globaldocument jsdomjsdom globalwindow documentdefaultview require reactlibexecutionenvironment canusedom true better fix would rely function instead global static variable cc", "d": "10/2015"}, {"body": "investigation solved problem hooking mocha execution flow using command line option created file instantiating jsdom environment exposing nodejs one globally js setupjs var jsdom require jsdom globaldocument jsdomjsdom globalwindow documentdefaultview globalnavigator globalwindownavigator setup file executed mocha babel compilers evaluate react module code basically run mocha suite way related", "d": "10/2015"}, {"body": "thanks suggestion indeed fixed issue actually wanted something like anyway would nt setting dom every test", "d": "10/2015"}, {"body": "ok sounds like guys figured future reference try keep github issues tracking bugs react core usage questions better addressed stackoverflow", "d": "10/2015"}, {"body": "thanks jimfb nt usage question posted error react said likely bug framework please report immediately", "d": "10/2015"}, {"body": "thanks stenrap since changed message", "d": "10/2015"}, {"body": "tests worker threads misleading regard", "d": "10/2015"}, {"body": "elaborate get error checkbox originates", "d": "10/2015"}, {"body": "timbur currently need expose document window globally requiring react see comments", "d": "10/2015"}, {"body": "spicyj done think js setupjs import jsdom jsdom globaldocument jsdom globalwindow documentdefaultview globalnavigator globalwindownavigator script loaded via command line argument", "d": "10/2015"}, {"body": "actually hold think know", "d": "10/2015"}, {"body": "yep thanks nudge right direction spicyj dumb import setup imported another script imported another script imported react", "d": "10/2015"}, {"body": "turns mdl js library trying mutate components react outside mdl components classes upgraded within react fiddling mdl found real solution problem call within andor problem related react sorry guys noise may caused due post repository beginner sweatsmile", "d": "10/2015"}, {"body": "future reference place issues react questions asked stackoverflow irc react discuss", "d": "10/2015"}, {"body": "simulate simulates event within react event system use ordinary similar want create dispatch real browser event", "d": "10/2015"}, {"body": "trying catch scrolls whole page need attach scroll event handler hand see also", "d": "10/2015"}, {"body": "talking something like javascript export default class mypage extends reactcomponent componentdidmount windowaddeventlistener scroll e gt consolelog etarget tried nt work also tried javascript export default class mypage extends reactcomponent componentdidmount thisrefswrappergetdomnode addeventlistener scroll e gt consolelog etarget nt work either parent components use dunno makes difference", "d": "10/2015"}, {"body": "meant former nt work hard imagine could react problem", "d": "10/2015"}, {"body": "way check swallowing event", "d": "10/2015"}, {"body": "ddaza add end listener enable capture mode", "d": "10/2015"}, {"body": "auto bind behind scene classes bind", "d": "10/2015"}, {"body": "see thank much", "d": "10/2015"}, {"body": "yeah probably add warning", "d": "10/2015"}, {"body": "thanks spicyj think understand warn method missing double factory probably baffling one runs appreciate help sos", "d": "10/2015"}, {"body": "nativeevent browser passes us properties nt right anything react", "d": "10/2015"}, {"body": "looks like issue browsersync", "d": "10/2015"}, {"body": "think related owner biggpsbuttonelement component expecting ref appear component parent ref attached owner ben mentioned issue opened closing bug react read refs documentation please ask usage questions like stackoverflow github issues reserved tracking bugs react core", "d": "10/2015"}, {"body": "aha class extends class order fix changed extending class also", "d": "10/2015"}, {"body": "jimfb docs function property accept", "d": "10/2015"}, {"body": "think problem stems class trying js constructor props super props thismapcontainerelement thisbiggpsbuttonelement think valid use case using refs like work clear reactowner", "d": "10/2015"}, {"body": "currently refs organized based owner component whose render method stack time element created reasons like one unpredictable trying get rid uses owner string refs basically last one look deprecating completely sometime best workaround move elements render instead", "d": "10/2015"}, {"body": "known issue css shorthand expansion recommendation list explicit property rely shorthand usually bugs surface update initial render simply creates inline style part setting innerhtml updates work individual properties set update notice changed set property since shorthand clears property see discussion", "d": "10/2015"}, {"body": "benchmark tool library authors nt know internals different implementation zero value numbers especially overall time really nt like overall time library authors using easily track regressions benchmark testing fast children reconciliation algorithm simple nodes without attributes styles events also problems benchmark example dom operations dirty nodes way much faster chrome add raf iterations difference libraries way much smaller dom ops significantly slower also infernojs using caching creates html nodes faster possible simple loop sure forms caching good real use cases certainly win microbenchmarks experience react performance good enough almost use cases dynamic spa ps author benchmark", "d": "10/2015"}, {"body": "cosminnicula react virtual dom diffing things like guaranteeing node particular typekeypathpair appears first second render dom nodes reused thus preserving imperatively added children etc serious expense inferno nt incur using simple templating throw away nodes inconvenientexpensive calculate absolutely minimal diff one many key differences one might argue performance differences exceed value additional features react different argument hard know one way practice react pretty fast realworld applications think features support valuable use perf tests regression testing compare frameworks post touches topic detail", "d": "10/2015"}, {"body": "myth busted thanks", "d": "10/2015"}, {"body": "serious expense inferno nt incur using simple templating throw away nodes inconvenientexpensive calculate absolutely minimal diff one many key differences explain mean inferno nt throwing away keyed nodes reason inferno fast leverages concept virtual fragments chunks virtual elements value diffing rather vdom diffing also allows inferno recycle dom nodes nt precache nodes anything fancy associated virtual fragments inferno still development definitely nt throw away nodes cases know recycled dom cloning nodes new many frameworkslibraries use concept extensively improve performance angular example note author inferno", "d": "10/2015"}, {"body": "trueadm mean foo documentgetelementbyid app documentgetelementbyid widget innerhtml retained infernorender documentgetelementbyid app today inferno retain widget retaining widget important allows people mount nonreact stuff react render tree critical interoperability libraries even fixed difference done cool encourage pursue ideas better yet please contribute react core certainly dropin replacement", "d": "10/2015"}, {"body": "leverages concept virtual fragments chunks virtual elements value diffing rather vdom diffing trueadm nt know means help understand", "d": "10/2015"}, {"body": "spicyj hoisting jsx render function using triple equals equality elements rather walking vdom sort similar ember glimmer stuff", "d": "10/2015"}, {"body": "spicyj really hoisting jsx diffing jsx although similar glimmer inferno pseudo jsx case although changing open jsx form near future something like value gets parsed precompile tile fragment looks like fragment thing diffed simply checks templatevalue templatevalues one value represents expression original jsxlike input difference expressions update value depending enum type probably wondering fills templatetype templateelement well first render fragment gets constructed template function template function also generated advanceprecompile time basically vdom representation fragment may look fills templatetype expression templatevalue passed way easily determine update dom efficient manner possible fragment updated fragment different template function first fragment either recycled replaced fragments keys handled sorted like vdom implementation would work essentially call fragment would apply jsx root return operation root fragment key implementation translates something like something operations far optimal imperative dom api without making experience hard debug making developer apisugar syntax nice pleasure use thus jsx direction also alternative declarativefunctional way creating fragments templates interested seeing later code seeing ideas might feed back react would recommend checking branch", "d": "10/2015"}, {"body": "react value becomes essentially react compares objects nt thing", "d": "10/2015"}, {"body": "somewhat similar different approach given somewhat large vdom tree creating awful lot objects simply diff chuck away plus traverse nonoptimal object built inferno basically take advantage monomorphism improve performance simply creating single object might represents tens hundreds vdom objects big difference create objects via template compare expressions passed fragment gain performance benefits react hoisting elements also downsides approach happy take slack somewhere better discuss depth like intention make inferno compatible familiar people using react thus api lifecycle events took approach tailored towards performance dom something got keen internet mobile web technologies dig work react guys nt come react jsx doubt anywhere near much interest stuff kudos", "d": "10/2015"}, {"body": "got thank", "d": "10/2015"}, {"body": "cc sebmarkbage", "d": "10/2015"}, {"body": "could potentially bail return state object probably would mutate bad practice anyway returning nice lets accidental implicit returns continue makes union type returning also nice types declare nullable sure pattern encourage check manually though exists let avoid reconciling based previous state next state always bail reconciliation thing bailing calculating new state value expensive calculate btw imo rn event systems nt fire multiple events batch fire list events single callback like ios touches", "d": "10/2015"}, {"body": "nt much context easily determine whether bail nt know state changed whether state change could change much easier write code near call cohesive way rn event systems nt fire multiple events batch fire list events single callback stretching scenario arises handling two different types events nt grouped single callback like network response touch event rn may batch event loop", "d": "10/2015"}, {"body": "btw argument also triggers rerender", "d": "10/2015"}, {"body": "spicyj yeah noticed kind want way schedule callback run pendingstate queue processed time transactional callbacks invoked think fun idea might reasons ship kind sailed", "d": "10/2015"}, {"body": "discussed possibility tricky may encouraged sideeffects leads imperative way coding optimizations add fragile assumptions could affect funnel ensures nt assumptions could add context seems like need information something happened system might relying much imperative programming already ie leaky need rely imperative style probably better putting instance variable instead using would optimization possiblerelevant pure patterns", "d": "10/2015"}, {"body": "writing pulltorefresh component looks scroll event scroll position negative user pulling want rerender refresh indicator updating component state state update happens depend used transactional version scroll position positive however know nt need state updates code roughly looks like js onscroll scrollposition scrollposition gt return thissetstate state gt refreshing statetouching amp amp someotherstuff progress calculateprogressfromscrollposition scrollposition would luck needed look piece ex whether user touching scroll view addition see could return early sure would bail since fields mutable values think would need know state change possibly extra context info like scroll position philosophically also believe funnel may always best place optimizations heuristic relevant regardless component updated combination funnel makes lot sense thinking principle high cohesion intuition optimizations belong closer call reason avoid rerendering pulltorefresh component usually wraps listview iterates row items determine anything changed application efficient function identity equality checks old new row items since use immutable data structures general case people using component may expensive check may always return case react would proceed reconcile row components could avoided updating pulltorefresh component would optimization possiblerelevant pure patterns yeah think looking proposals think earlier idea bailing object returned really appealing especially true want handle event without always changing proposal guess would call", "d": "10/2015"}, {"body": "philosophically worried multiple ideal would something like way follow possible path could effected state seen way many patterns effectively lead js handleclick thissetstate gt dosomething gt thissetstate gt thissetstate ihopethisdoesntfireinthemiddleofsomething thissetstate yet covered abstractions hides state closures constantly relying implicit action traced state changes take shortcuts sure would bail shouldcomponentupdate since props state fields mutable values react nt work properly mutable values rely props mutation triggering deep state update consistency ie component mutated value needs call parent updates flushes additionally react bails try reuse reactelement mutated props means mutation work always get new props object parent rerendered therefore solution work change due positive scroll position keep setting state also rerender mutated props way state transitions described completely terms reducer optimizationsshortcuts completely isolated", "d": "10/2015"}, {"body": "mutable values code nt rely deep updates meant something like always get new props object parent rerendered pretty helpful know rely actual use case helps lot still want able use signal update pretty convenient", "d": "10/2015"}, {"body": "jimfb amp spicyj hello thought giving pull request issue understanding correct expect warning message needs printed input dom element gets value digging sourcecode input element mapped javascript file understanding correct need check value input yes need give warning correct sorry noob question thanks help", "d": "10/2015"}, {"body": "antoaravinth sounds roughly correct want thing since also controlled inputs", "d": "10/2015"}, {"body": "jimfb thanks response give pr probably day", "d": "10/2015"}, {"body": "antoaravinth may find diff helpful since almost exactly trying warning message say something like prop null consider using empty string clear component uncontrolled components also fyi code freeze change land ready merge stuff welcomed take stab likely need rebase ready merge stuff", "d": "10/2015"}, {"body": "jimfb thanks help give pr day rebase necessary release nt problem", "d": "10/2015"}, {"body": "jimfb actually made changes give run testcases looks like new change breaking least cases share error message one test case got failed posted", "d": "10/2015"}, {"body": "antoaravinth error basically saying test nt expecting warnings fire warnings printed either add checks warnings linked diff modify test nt warn eg update test pass instead either way least one test verifies warning fired correctly least one unit test passes undefined shows error fire", "d": "10/2015"}, {"body": "jimfb thanks help given pr let know anything else needed side", "d": "10/2015"}, {"body": "fixed thanks antoaravinth", "d": "10/2015"}, {"body": "think use reactchildrentoarray key resulting properties build map", "d": "10/2015"}, {"body": "spicyj ah okay thanks", "d": "10/2015"}, {"body": "would interested know going recommended way abstract common behaviour arrived point writing decorators feel somewhat apprehensive future little unknown said seem increasingly popular especially absence mixins personal vote would support mainly nt appear many viable alternatives perhaps something based multiplechained inheritance seems much less common also add reactredux connect list popular implementations number interesting discussions topic specifically", "d": "10/2015"}, {"body": "reference", "d": "10/2015"}, {"body": "please nt confuse decorators syntax higher order components pattern even decorators going end es nobody take functions higher order components", "d": "10/2015"}, {"body": "mixin system wasis flawed one way cases higher order components solve common use cases mixins would recommend reading sounds like solution utilizes higher order components without actually looked likely solution would recommend problem normally wellsolved mixins wellsolved hocs andor sideways data loading would love hear use case please open new issue describes use case", "d": "10/2015"}, {"body": "yes trigger event want manually dispatches event nt anything fancier", "d": "10/2015"}, {"body": "spicyj think nice react supports chain events browsers writing numericcomponent keydown prevents keys nice test user type keys prevented onchange wo nt call think", "d": "10/2015"}, {"body": "lovedota consider using native dispatchevent working actual browser react wo nt get business simulating browsers work different native events behave", "d": "10/2015"}, {"body": "sebmarkbage took shortcut key top level components manually pull data flux stores render methods pure thus ideal much convenient alternatives use flux wrapper route wrapper component straightforward flow props without convoluted clonewithprops calls willing review way things good behaviour consistent env quick workaround us would produce new component instance every time parent renders like third fiddle feels like could even optimize future would break although nt see would optimize without making pure render strategy default one seeing people deeply mutate props edit going use cloneelement everywhere thispropschildren inclusions", "d": "10/2015"}, {"body": "well ok case disadvantage libraries like elm", "d": "10/2015"}, {"body": "spicyj currently negative effect production code warning using syntax js import react component react class whatevsss extends component sure effected", "d": "10/2015"}, {"body": "fine prod mode skip check code break triggering warning", "d": "10/2015"}, {"body": "spicyj warning due issue resolved correct plan release soon", "d": "10/2015"}, {"body": "modern browsers supported feature bootstrap tell use following code snippet cdn mdn introduction", "d": "10/2015"}, {"body": "cc zpao contrary popular belief get fairly frequently related", "d": "10/2015"}, {"body": "related good way replacing whitelisting attributes custom attribute sense", "d": "10/2015"}, {"body": "yea related underlying goal issue really get whitelist much possible entirely would good nt know called explicitly mostly problem", "d": "10/2015"}, {"body": "terinjokes yeah comment directed conversation last team meeting figuring priorities remainder year basically whole ton attributes keep adding oneatatime wasam pushing us solve wipe past present future single swipe slightly nontrivial change several dependencies thus demoted prioirty list p", "d": "10/2015"}, {"body": "toddparker reading data right react much faster angular ember test competitive backbone times device react time pc cable pc nexus", "d": "10/2015"}, {"body": "spicyj yeah react performed quite well compared angular ember particular comparison seems promising updated chart", "d": "10/2015"}, {"body": "polymer", "d": "10/2015"}, {"body": "polymer nt todomvc example could use testing initial research time polymer heavy polyfills required know team lot work improving may quite bit better", "d": "10/2015"}, {"body": "toddparker landed updated polymer todomvc implementation master would like take stab benchmarking similarly interested figures", "d": "10/2015"}, {"body": "toddparker versions seem kind date released almost year ago release dates versions infographic current stables ampersand release date specified latest sep angular dec latest sep backbone feb latest sep ember dec latest sep react dec latest may like addyosmani said polymer missing comparison think due update existing listed libraries well", "d": "10/2015"}, {"body": "toddparker able test polymer todo implementation ease", "d": "10/2015"}, {"body": "issue still closed sebmarkbage would appreciate input get moment", "d": "10/2015"}, {"body": "jonkoops yep old article planning longterm keepers benchmarks since actually time consuming set run data mostly hoping spur libraries like react take performance seriously publish form benchmarks developers could compare performance characteristics framework sadly nt much movement front hoped picked todomvc gave us functionality implemented across multiple frameworks however examples set learning performance lot work concat compress files better replicate realistic production environment examples todomvc uncompressed compressed production version server would lot easier run automated testing tabulate results new version released think worth looking", "d": "10/2015"}, {"body": "right closing issue quickly dismissing nt look great kind nt care frameworks comparison react care impact going context building importantly building need numbers", "d": "10/2015"}, {"body": "right closing issue quickly dismissing nt look great kind nt care frameworks comparison react care impact going context building importantly building need numbers kevinsuttle opinion benchmarks almost universally skewed towards measuring specific synthetic micro tasks intentionally micro benchmarks trivial also meaningless context benchmarking realistic workloads frameworks incredibly hard also meaningful thresholds benchmarks consistently overlook vs largely irrelevant vs enormous difference often lumped result without consideration fair weighting either also consider developer time manual dom interaction always win hands never see someone apply largescale apps consider cost implementing maintaining uis made different frameworks well given little developer time find react components always outperform manual dom interaction probably look feel lot better also far maintainable less errorprone quantify benchmark take grain salt consider many angular projects time encounter problems performance resort various hacks get performance back acceptable levels react users may face problems would argue problems far intuitive solve react solutions largely come much robust developer time important lack developer time usually causes performance problems crop first place anyway want know whether react good choice would suggest quickly prototyping various aspects ui feeling factually accurate results going get personally always choose react model advantages developers code base far important encounter demanding usecases react nt performing well enough easily break react briefly without degrading quality code", "d": "10/2015"}, {"body": "right closing issue quickly dismissing nt look great kind nt care frameworks comparison react care impact going context building importantly building need numbers numbers comment explains particular set number tells story", "d": "10/2015"}, {"body": "ran issue happily converting components stateless shorthand version way awesome tests succeed anymore findsrcyrendereddomcomponent x methods work anymore suggestions test", "d": "10/2015"}, {"body": "actually made component wraps stateless component regular component without wrapper html added output use normal testing facilities", "d": "10/2015"}, {"body": "stake posterity like post get little testing framework work nicely stateless components pretty would love first class hooks instance tree traversal related build better test tooling without needing dig deeply react private apis", "d": "10/2015"}, {"body": "thanks posting jquense really helpful", "d": "10/2015"}, {"body": "also nt appear work checkbox inputs simulating change event checkbox modify checked status able modify currenttarget previously outlined update manually", "d": "10/2015"}, {"body": "jimfb sebmarkbage happy submit pr escaping attrs web components however seems like separate issue changes gone release candidate make difficult reason react treat different dom elements jsx onus wanting use web components attribute api way operates safely existing react behaviour including way treats custom elements changes also seem contradict said sebmarkbage primary component strategy react never web components seems odd breaking change introduced appease want use web components inside react components understand original sentiment feels like wrong solution rushed worry gone release harder argue come", "d": "10/2015"}, {"body": "breaking change get big thumbs custom elements useful today web components probably never frustrating lose semantic goodness custom elements practical reason helps developers today", "d": "10/2015"}, {"body": "custom elements support", "d": "10/2015"}, {"body": "problem actually determination developer intends using custom component assuming custom html tag become webcomponent decide non intuitive attribute behaviour lot cases custom html elements used provide meaning html based components fix would option setting behaviour reactdomcomponentjs testing custom component deciding means need custom attribute handling wrong hands developers framework assumptions could easily set component render called component intended promoting webcomponent way remove need breaking change time provide functionality want developer chosen basis", "d": "10/2015"}, {"body": "clear custom elements work react must use attribute instead custom element spec requires allow users specify arbitrary attributes including need preserve functionality custom elements conflict sebastian comment web components primary use case still best support dom technologies anyone wants use technologies goes custom elements added support consistently recommending use react composite components instead someone would like propose solution better one implemented subject constraints mentioned happy take look", "d": "10/2015"}, {"body": "clear custom elements work react jimfb may work sense rendered dom work react attributes even put inconsistency using sometimes times aside moment bigger issue none react events work etc effectively leaving react land using custom element think mikeybox hit nail head said hands developers framework", "d": "10/2015"}, {"body": "like propose wrapper component advocate solution reasons declarative magic idiomatic react nt break customelements need part react library would work would intercept child elements create new dom elements assign props unchanged dangerously set inner html could also create whiteblack list feature giving developer total control attributes handled beauty solution react already solved problem third party solution need part react library couple examples react component web component attributes live webcomponent land example actually want behave normal conversely could include prop would trigger attributeescape wrapper ignore props default escape ones want include important idea take away web components solution part react third party solution", "d": "10/2015"}, {"body": "nt personally used web componentscustom elements alongside react however reading jimfb web components primary use case makes even obvious react handling instead leave developers third party something like gargantuan suggests primary use case react developer know still put situation want use time prepared go hoops think would make sense react stay let developers decide want", "d": "10/2015"}, {"body": "jmfb custom element spec requires allow users specify arbitrary attributes think agree correct developer allowed pass parameters fine key allow enforce current state able choose problem custom html elements require behaviour used essentially developers want lose basic react element behaviour using custom element nature custom elements cover vast range intended uses simple conclusion yes right enable raw attribute mode definitely developer choice opt functionality either new component type class property setting", "d": "10/2015"}, {"body": "gargantuan allow custom elements play first class citizens effectively turned react templating system point attributeescape component destroys virtual dom eliminating react ability diffing convert virtual dom dangerouslysetinnerhtml eliminate ability parent components make decisions based children eliminate ability attach refs event handlers etc", "d": "10/2015"}, {"body": "think clearly explained one example proposal would work stress nt part react would put webcomponent inside attributeescape component said think wrong focus half baked proposal ignore wider problem others raised reacts responsibility deal web components developers choice custom elements handled addition proposal two saving graces nt break anything web component users still free implement solution finally would plead least deprecate custom elements issue warning releasing breaking change think would give wider community chance feed back change sure surprise", "d": "10/2015"}, {"body": "gargantuan per comment means elements within attributeescape play vdom rules break lots things huge problem render tree attributeescape arbitrary tree children placed inside", "d": "10/2015"}, {"body": "jimfb solution suggested gargantuan one option merits considerations probably deserves pr discussion thread point made several commenters changes related custom elements also pros cons also justified stringent standards requesting alternative solutions several us raised concerns related consistency backwards compatibility explicitness developer control specifically concerns attributes react events etc behave unexpected nondeclarative ways proposed changes think point made proposed changes require consideration given primary component strategy react never web components appreciate would apply following constraints proposed changes must break existing react behaviour regards events react attributes react events users must able explicitly specify want dom elements attributes controlled outside react explicit declarative appreciate vocal request ability support web components specifically allow attributes passed however would appeal better judgement consider change really right solution lets forget suggesting add feature fact hold adding breaking change without due diligence", "d": "10/2015"}, {"body": "think primary motivating factor allowing something simply make easier hit edge case need consume custom element wrap somehow escape hatches supposed need still might need practical reasons oct pm ben smith notifications githubcom wrote jimfb solution suggested gargantuan one option merits considerations point made several commenters changes related custom elements also pros cons also justified stringent standards requesting alternative solutions several us raised concerns related consistency backwards compatibility explicitness developer control specifically concerns attributes classname react events onclick ondrag etc behave unexpected nondeclarative ways proposed changes think point made proposed changes jimfb require consideration given primary component strategy react never web components would apply following constraints must break existing react behaviour regards events react attributes classname react events users must able explicitly specify want dom elements attributes controlled outside react explicit declarative appreciate vocal request ability support web components specifically allow attributes passed however would appeal better judgement consider change really right solution lets forget suggesting add feature fact hold form hastily adding change without due diligence reply email directly view github", "d": "10/2015"}, {"body": "think primary motivating factor allowing something simply make easier hit edge case need consume custom element wrap somehow sebmarkbage appreciate motivating factors counter points fully considered consistency backwards compatibility etc declarative code particular one things makes react great realise instance issues raised necessarily apparent change made pretty strong arguments seeking better solution raised discussion wether proposed alternative solutions right one rather wether solutions including one right one", "d": "10/2015"}, {"body": "hellosmithy better solution please propose please consider really spend enormous amount time discussing options amp alternatives spurofthemoment change ca nt hold back development indeterminate amount time point need bite bullet make changes order make react better ultimately code nt anything ca nt undone find something better future due diligence case solution think better let us know implemented best thing seen date always open new ideas", "d": "10/2015"}, {"body": "jimfb best solution referring breaks react attributes events custom elements saying considered deemed acceptable", "d": "10/2015"}, {"body": "using native attributes instead react flavors custom elements best solution seen better event support still planned blocked couple browser bugs prevent us supporting reliably event support tracked several issues notably", "d": "10/2015"}, {"body": "yes need way render nodes somehow nested react children work correctly possible map props properly thing safely map automatically attributes rest applied imperatively could either allow props least attributes automatically turns lot custom elements work attributes alone seems like decent trade", "d": "10/2015"}, {"body": "nt use custom elements affected", "d": "10/2015"}, {"body": "wont deprecate current behaviour", "d": "10/2015"}, {"body": "inprogress fork could contribute would like help one possible", "d": "10/2015"}, {"body": "zertosh anything progress point would ok nickdima pick", "d": "10/2015"}, {"body": "zpao wo nt able make progress week sure", "d": "10/2015"}, {"body": "started looking first trying grasp everything going build process figuring proceed personally big fan using npm scripts skipping grunt gulp altogether mostly avoiding plugins wrap around certain tools using tools directly see fitted react meanwhile opened pull request babel react could use compile step hope gets merged", "d": "10/2015"}, {"body": "awesome thanks nickdima build process started nice clean years ago gotten unwieldy confusing lot blame let know questions please make use gulp amp scripts fbjsscripts go npm scripts definitely useful let mostly reserve oneoffs aliasing otherwise use gulp technology aligning across open source projects reduce project specific code make easier project start improve feel free make requests happy help suspect babel wo nt take pr could mistaken could useful already solved problem nt think important grand scheme task", "d": "10/2015"}, {"body": "somewhat related", "d": "10/2015"}, {"body": "looks like closed since merged marked fixing issue cc zpao", "d": "10/2015"}, {"body": "correct thanks", "d": "10/2015"}, {"body": "hey im getting problems use new react optimisations also get things like even compile optimisations production", "d": "10/2015"}, {"body": "try add first place method make sure rendering one time probably made render times somehow", "d": "10/2015"}, {"body": "still happening fixes us", "d": "10/2015"}, {"body": "bkcore correct still happening joestrummer seems trick anticipating merge soon hope", "d": "10/2015"}, {"body": "already said comment would nt fix look", "d": "10/2015"}, {"body": "people thoughts dropping jquery favor windowfetch sort proposed actually meh game still include polyfill least focused concern promises probably new concept number people might paying close attention js think ok wanted mention think moving tutorial directory within actual react codebase definitely upsides downsides things nt change often cloning whole react repo could good nt really want put people pretty clean place start nice one tutorial board need figure fits nicely knockout idea", "d": "10/2015"}, {"body": "ha almost forgot conversation around vs agreed promises might new people might great opportunity figure explain promises short concise way winwin fair point keeping repos independent sweet glad like sound multiple tutorials build learning happy help brainstorm high level perspective could beginner tutorial components lifecycle methods composing components amp jsx intermediate tutorial using reactchildren utilities manipulating stateful dynamic children validating props w reactproptypes mixins classes inline styles advanced tutorial purerendermixin immutability performance stores reactaddonstestutils amp using test react components", "d": "10/2015"}, {"body": "helps lot thank", "d": "10/2015"}, {"body": "nt much problem except famous bug triggered famous nodes detroyed recreated using library fe threejs new one making work fine objects destroyed recreated fine", "d": "10/2015"}, {"body": "test windows problems chrome firefox firefox kind slow seconds problems edge also slow minutes ie extremely slow minutes update finishes done failures reported failed failed failed failed failed failed failed", "d": "10/2015"}, {"body": "note took test ikeyan wrote pulled react pretty much thing definitely dom thrashy sorry slow run times give us good idea looks like ok adding higher codepoints referenced outside realistically happen could deal later really need could probably drop lower number test speed things smonev thanks btw exactly looking hopefully nt deviate much", "d": "10/2015"}, {"body": "already know one ignore windows reports error line id stringfromcodepoint object nt support property method fromcodepoint msdn claims support edge however last note indicates", "d": "10/2015"}, {"body": "ran wine got done failures reported failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed failed", "d": "10/2015"}, {"body": "fyi non private use surrogates range noncharacters range also two additional noncharacters ranges unsafe unicode perspective", "d": "10/2015"}, {"body": "ps probably replaced however convinced something fixed react expensive exploitable behavior part sanitizing procedure prevent making", "d": "10/2015"}, {"body": "spicyj glenjamin issue solved currently migrating found components fail silent rendering js date object one example something thispropsentitysomedatefield following stack occurs initial rendering failed workaround something thispropsentitysomedatefieldtostring", "d": "10/2015"}, {"body": "converting string solution workaround trying render objects reactelements longer supported actually see error rendering", "d": "10/2015"}, {"body": "zpao thx answer tried reproduce problem simpler environment output looks exactly like problem related error components thx feedback", "d": "10/2015"}, {"body": "yes investigating jsx diffs using expect example currently bit tricky always go debugger", "d": "10/2015"}, {"body": "rather bake react seems like something custom testassertion reporter could fact convinced saw twitter ca nt recall project name", "d": "10/2015"}, {"body": "one jasmine currently trying understand could ported expect mocha instance", "d": "10/2015"}, {"body": "see also additionally make output failing tests bit easier read prettyprinting reactelements involved could use module wrote called inspectreactelement assertion fails like would see message implementation custom tocontainreactnodeintreelike jasminejest matcher used prints informative error message match found expected indent inspectreactelement actual isnot contain reactnode tree like indent inspectreactelement expectedchild const found findallmatching actual expectedchild return foundlength gt conclusion try write shallowrender tests way write tests using testutilsfindallinrenderedtree etc use utilities thing shallowrendered trees testutils rendered dom components", "d": "10/2015"}, {"body": "also", "d": "10/2015"}, {"body": "awesome thanks curating gaearon useful going implement expect", "d": "10/2015"}, {"body": "hmm unexpected seems really nice thanks lot", "d": "10/2015"}, {"body": "looks fantastic thanks much investigating", "d": "10/2015"}, {"body": "get mocha cool hope usable lot people since testing react shallow renderer comparing using toequaljsx joy write blog post soon", "d": "10/2015"}, {"body": "pain point thanks much", "d": "10/2015"}, {"body": "juliankrispel share heart please", "d": "10/2015"}, {"body": "bet vvo", "d": "10/2015"}, {"body": "coodoo getting uncaught error invariant violation registercomponent target container dom element package react reactdom version", "d": "10/2015"}, {"body": "shaikhussian completely unrelated error means passing container nt dom node likely undefined element looking nt exist page", "d": "10/2015"}, {"body": "last use pure dom add attribute jsx suck hah", "d": "10/2015"}, {"body": "\u8fd9\u4e2a\u9505\u5e94\u8be5 react \u662f\u8f6c\u6362\u4e86\u8fd9\u4e2a attr", "d": "10/2015"}, {"body": "say virtual dom suck", "d": "10/2015"}, {"body": "throwing example bumped today react component called subdivide really complex internal state basically lets split view recursively nested views many times like really cool watch video abstracted drop renders every nested part ui drag create destroy however another use case persisting state course parent component would responsible usual react answer case make controlled could accept pass opaque data structure works simple things inputs nt think works something complex subdivide reason think nt data structure opaque actions actually user may split panes unite panes resize panes might potentially make sense consuming application might want react things app might want ignore actions way proposing solve export reducer consuming app using redux similar reducerbased library use reduceruncontrolled component case manages state consuming app using redux let mount reducer somewhere reducer tree connect slice state would notice connected receives prop instead changing internal state actions make sense parent app choose serialize state rehydrate ignore actions even react components etc total freedom huge fan using react agree nice abstraction think hard hoist tree unless also export computation reducer case caller may choose use way like understand happening instead receiving opaque data structure also approach elm architecture takes component exports view computation update", "d": "10/2015"}, {"body": "serialize state rehydrate ignore actions even react components etc total freedom essence point ie seems like freedom things goal however nothing needs change react programming model opaque oct dan abramov notifications githubcom wrote throwing example bumped today react component called subdivide really complex internal state basically lets split view recursively nested views many times like really cool watch video abstracted drop renders every nested part ui drag create destroy however another use case persisting state course parent component would responsible usual react answer case make controlled could accept value onchange pass opaque data structure works simple things inputs nt think works something complex subdivide reason think nt data structure opaque actions actually user may split panes unite panes resize panes might potentially make sense consuming application might want react things app might want ignore actions way proposing solve export reducer consuming app using redux similar reducerbased library use reduceruncontrolled component case manages state consuming app using redux let mount reducer somewhere reducer tree connect slice state would notice connected receives dispatch prop instead changing internal state dispatch actions make sense parent app choose serialize state rehydrate ignore actions even react components etc total freedom huge fan using react agree nice abstraction think hard hoist tree unless also export computation reducer case caller may choose use way like understand happening instead receiving opaque data structure onchange also approach elm architecture takes component exports view computation update reply email directly view github", "d": "10/2015"}, {"body": "essence point ie seems like freedom things goal yes goal however nothing needs change react programming model opaque thinking last months still idea react makes things super easy eg potentially stateful children inside potentially stateful parents without coordination tradeoff things become hard eg hydrating state tree reparenting element without destroying state rewiring child state changes contribute state changes somewhere tree whether weakness react programming model fixed particular set tradeoffs essence nt understand yet", "d": "10/2015"}, {"body": "rewiring child state changes contribute state changes somewhere tree give examples useful", "d": "10/2015"}, {"body": "published react elmish example ongoing attempt understanding elm architecture niceties tradeoffs limits perhaps examples well may think show power state model parents full control interpreting child state updates makes implementing undoredo action log potentially time travel solution like showed react europe breeze see source code downside writing normal code way ceremony react basically state update flow explicit instead callbacks call static methods add stateful component child need explicitly specify handle actions course may also big performance downsides course implemented top react higher level different higher level abstraction find powerful easy use would maybe completely missing point stuff hurts brain much", "d": "10/2015"}, {"body": "want leave thoughts remembering state mounts web version uitabbarcontroller switch tabs expect component state scroll position left currently best way use redux saverestore scroll position component unmountsmounts ui component styleguide build react ui properly trivial build ui styleguide demonstrating every component every state currently nt breeze unless using redux due component internal state", "d": "10/2015"}, {"body": "ui component styleguide build react ui properly trivial build ui styleguide demonstrating every component every state currently nt breeze unless using redux due component internal state skidding might thoughts built", "d": "10/2015"}, {"body": "awesome project definitely going use", "d": "10/2015"}, {"body": "thank gaearon mention cosmos surface functionality addresses ccorcos component styleguide feel internal mechanics cosmos relevant thread namely small componenttree lib two methods generate snapshot props state component combined including state nested child components render component reproduce state snapshot recursively injecting nested state component tree generates also method nt documented pretty much function targeting existing component instance without touching props useful track state subtree app eg said touch comments thread love redux middleware create tools around app state sure api trillion holes prime conversation stuff like js reactrender el let tree reactgetstatetreeatnode el reactonstatetreechangeatnode el fn reactrenderwithstatetree tree el would enough build timetravel debugging tools yeah ryanflorence pretty much yes componenttree covers get set need onstatetreechange event far relied component callbacks update snapshots allowed control granularity persisting snapshot every state change might want maybe could wrap react lifecycle method like componentdidupdate using babel transformwebpack loaderetc attach callback gets called whenever component tree updates full snapshotting something really begs controlling entire state tree lives even child components nt know state actually internal jlongster nice part componenttree state internal components completely unaware whole part allows implement state tree persistenceplaybackundoredoetc using stock react components yes key issue dev mode debugging tool also production api sebmarkbage dev popular usecase say see local storage example used pattern persist snapshots subtree react app worked great cosmos deals state trees internally since core react people thread would great get feedback method harmless ones basically call outside component though never afraid might interfere lifecycle methods since state private normal circumstances thoughts", "d": "10/2015"}, {"body": "used hoisting pattern works pretty well definitely seems like something ought baked react somehow prefer use redux though", "d": "10/2015"}, {"body": "really interesting currently developing tool intends react devtools extension would love possible wip maybe help however nt good knowledge react source code start looking", "d": "10/2015"}, {"body": "interested advent stateless components easy way library get internal instance root component traverse tree force update important part multiple tools able hook api devtools library able register independently without interfering would like propose straw man api based devtools uses", "d": "10/2015"}, {"body": "yes please new devtools designed mind would like move integration part react core expose api key design react need maintain state component state api could force complete rerender get replay changes api require react keeping previous render memory oct pm dan abramov notifications githubcom wrote interested advent stateless components easy way library get internal instance root component traverse tree force update important part multiple tools able hook api devtools library able register independently without interfering would like propose straw man api based devtools uses reply email directly view github", "d": "10/2015"}, {"body": "sure much related issue trying use react rendering screens apple tv application uses dom nt global document window instead create documents screen push pop stack user navigates app details environment could nice support platform open separate issue edit opened separate issue", "d": "10/2015"}, {"body": "moved better articulate like add", "d": "10/2015"}, {"body": "syranide tried pure js works fine tested mac chrome", "d": "10/2015"}, {"body": "pswai testing different scenario fiddle shows problem react event system problem browser behavior hovered nodes replacedremoved", "d": "10/2015"}, {"body": "syranide ah right thanks pointing", "d": "10/2015"}, {"body": "seems bug reports chrome", "d": "10/2015"}, {"body": "skip go also filed issues", "d": "10/2015"}, {"body": "getting error using react looking code seems fail second line updaterenderedcomponent apparently set return instantiatereactcomponent", "d": "10/2015"}, {"body": "note shallow rendered components override return instead whatever normally returns still nt undefined attribute though", "d": "10/2015"}, {"body": "experiencing issue sebinsua suggestion gets past initial error amp", "d": "10/2015"}, {"body": "graue pretty sure breaks many things outside noticed moving lines directly line fixed", "d": "10/2015"}, {"body": "also affected issue think shallow rendering really cool feature testing unfortunately ca nt use components due bug", "d": "10/2015"}, {"body": "created pull request fix works someone else verify", "d": "10/2015"}, {"body": "workaround issue", "d": "10/2015"}, {"body": "hi everyone similar issue reactdomserver renders images closing client bundle comes along renderers without causing mismatch error upgraded react client server", "d": "10/2015"}, {"body": "nodu sounds like using reactdom client edit oh wait spot reported error message difference reported error message incorrect sure fixed yet", "d": "10/2015"}, {"body": "client side edit seems suggest known issue serverside renders client", "d": "10/2015"}, {"body": "nodu mean say client getting checksum warning provide simple jsfiddle demonstrates problem", "d": "10/2015"}, {"body": "yes jimfb getting difference see client server lack client", "d": "10/2015"}, {"body": "nodu error message indicates element different key clientserver specifically vs seeing attribute", "d": "10/2015"}, {"body": "syranide datareactid different img tag loss go forward", "d": "10/2015"}, {"body": "nodu still sure arrive conclusion issue checking normalized dom vs rendered dom loss go forward look place code provide keys look like ones try figure may different client server randomly generated part nonsorted db query execute server client bad idea serialized sent client json displayed without sorting json implementations maintain key ordering", "d": "10/2015"}, {"body": "syranide ah thank much previous developer using random uuid slugs generate keys", "d": "10/2015"}, {"body": "according release notes shallowcompare separate package reactaddonsshallowcompare cpojer expect codemod update use package instead thanks", "d": "10/2015"}, {"body": "oh missed yeah absolutely nt big deal except course adding requireimport right location still hard", "d": "10/2015"}, {"body": "quite swamped work jest moment something interested sending pr jardakotesovec", "d": "10/2015"}, {"body": "cpojer unfortunately also swamped pressing stuff", "d": "10/2015"}, {"body": "moved", "d": "10/2015"}, {"body": "ref custom component outer cc renders inner custom component inner cc try use ref outer cc react seems return ref wrapper around outer custom component public methods inaccessible happening custom component renders dom element ie inner cc outer cc inner cc created cloneelement refs numeric index based workaround never create ref name child definitely done react pin pointed exactly happens think framework encapsulation bug", "d": "10/2015"}, {"body": "serle simple jsfiddle demonstrates issue", "d": "10/2015"}, {"body": "ping zpao", "d": "10/2015"}, {"body": "jimfb trying think good api see glenjamin suggested way overload seems like decent idea think api like js reactonwarning warningmessage gt keep default behavior require fbjslibwarning warningmessage change behavior throw new error warningmessage", "d": "10/2015"}, {"body": "joeybaker worked hard avoid global configuration probably nt going add nt think ever going expose another unrelated update talking sebastian day discussing design ideas around good devtools api specifically want expose api could power tools like anyway related chunk discussion might possible move warningrelated logic core external module packaged react dev distribution uses devtools api figure emit warnings refactoring could easily fork module whatever wanted regards warnings since none warning logic would live core", "d": "10/2015"}, {"body": "sounds great would api look like", "d": "10/2015"}, {"body": "bumped days ago react warns put ref onto stateless component hoc user might want ref thinking introducing prop like hoc something like", "d": "10/2015"}, {"body": "use class hoc", "d": "10/2015"}, {"body": "sebmarkbage hoc class problem consumer wraps stateless component pseudocode js library function connect wrappedcomponent return class connected getwrappedinstance people really asked method return thisrefsinstance user code connect class stuff good connect function statelessstuff emits warning although technically ref nt even used", "d": "10/2015"}, {"body": "ah yes problem yungsters methods expecting forward ref use heuristic scanning nothing prototype nt need attach ref nt methods wrap", "d": "10/2015"}, {"body": "oh see nt read properly use instead seamlessly exposing methods like relay case seamless hoc anyway", "d": "10/2015"}, {"body": "nt know relay forwards instance methods take look thanks", "d": "10/2015"}, {"body": "relay nt forward instance methods open source internally mixin container codemod would safe nt want support pattern externally however hoping resolution issue inside react", "d": "10/2015"}, {"body": "solved problem making ref optin hoc", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "good morning tasks left react release external developers could pick help remaining work documentation release stuff", "d": "10/2015"}, {"body": "think point docs final release steps thanks offer though feel free jump anything else find", "d": "10/2015"}, {"body": "using since beta updating packages reactdomrender removing react peerdeps reactaddons biggest pain points experienced blixt opening prs react components tooling use see help community move forwards would superbly helpful", "d": "10/2015"}, {"body": "iamdustan replaced", "d": "10/2015"}, {"body": "mentioned super loudly", "d": "10/2015"}, {"body": "addon package technically think still bundled deprecation cycle", "d": "10/2015"}, {"body": "pretty sure done reopen", "d": "10/2015"}, {"body": "gilbox met issue could describe cause bug", "d": "10/2015"}, {"body": "something wrong code olegerm nt remember anymore", "d": "10/2015"}, {"body": "seeing quite bit little headway towards finding root cause local environment reproduce adding undefined variable function changes state component throws undefined attempts render parent node fail cool way track stuff like given giant component massive combinations child components states", "d": "10/2015"}, {"body": "usually happens interrupt react rendering cycle exception take care usually catch easily dev never happen prod perhaps related devonly cycle", "d": "10/2015"}, {"body": "johnydays makes sense way force unmount ca nt find part api current solution around render sometimes throws unmounting catch replacing element new one rendering new element like run components unmounted force children remove reference think way", "d": "10/2015"}, {"body": "yeah maybe", "d": "10/2015"}, {"body": "reference future readers bug simplest current workaround aware something like basically create global document object silence warning tests run", "d": "10/2015"}, {"body": "agree fischerl convenience actually causing issue using decorators modify props passed constructor decorator like operates original props passes constructor works fine point transformed props overwritten original props following line potentially solution could set props component instantiable javascript caninstantiate inst null inst false reactelementisvalidelement inst renderedelement inst inst new statelesscomponent component think course another way keep transformed props please let know", "d": "10/2015"}, {"body": "salier seems like ie fire event tested edge windows fires properly chrome firefox", "d": "10/2015"}, {"body": "set also silence warning seems preferable using may consequences", "d": "10/2015"}, {"body": "syranide sorry bring back dead know issue existing documentation checkboxtext input bug mentioned", "d": "10/2015"}, {"body": "sure bugs unless us use events simulate everything checkboxes appears working expected checkboxes behaving way eg logging callback tells right value even nt call", "d": "10/2015"}, {"body": "zpao yeah initial answer seems bit wrong textinputs affected noop change events know checkboxes knowledge also seems issue issue actually bug onchange always fire change initiated ca nt way discarding new value happens onchange", "d": "10/2015"}, {"body": "asked problem whenever changed application state every tag application would receive update attribute dom change even especially inputs change think probably bug application react still try produce small example problem open another issue", "d": "10/2015"}, {"body": "issue posted", "d": "10/2015"}, {"body": "officially changed coderecommendations babel", "d": "10/2015"}, {"body": "using still seeing issue using documentqueryselectorall need pass dom nodes part props get", "d": "10/2015"}, {"body": "progress made skevy considering picking look something else making progress", "d": "10/2015"}, {"body": "wrote test expecting fail based description jsx value undefined bind used function var unboundinputonchange function expect tobe undefined pleasantly passes fixed incidentally missed something", "d": "10/2015"}, {"body": "looks like accidentally fixed want send pull request test make sure nt regress nt need finddomnode call", "d": "10/2015"}, {"body": "still encountering react", "d": "10/2015"}, {"body": "bug inputs nt firing classes autobind options bind manually render add constructor use experimental property initializer syntax need enable manually babel js class foo extends reactcomponent handleclick event gt render", "d": "10/2015"}, {"body": "spicyj certainly", "d": "10/2015"}, {"body": "spicyj thanks missed discussion autobinding react release notes", "d": "10/2015"}, {"body": "nt think support running tests browser anymore right rendering bug longer applicable inbrowser test suite like sounds like want separate thing", "d": "10/2015"}, {"body": "jsx compilation handled babel think renders issue longer applicable", "d": "10/2015"}, {"body": "replaced babel", "d": "10/2015"}, {"body": "issue old nt active also appears usage question rather bug react core use github issues track bugs react core going close take radar feel free continue discussion thread", "d": "10/2015"}, {"body": "documented use fat arrow internally many docs ultimately syntax need decide makes sense given infrastructure codebase", "d": "10/2015"}, {"body": "jimfb thanks probably stick coffeescript principle everything expression", "d": "10/2015"}, {"body": "mitranim jimfb huge meteor fan several years tracker really cool fascinating created presentation demonstrating simple version tracker works even created observable streams library tracker fully transitioned using react instead blaze come realize tracker complicated sometimes simple publishsubsrcribeonchange methods easier also functional programming fans tracker comes sideeffects make sense time sometimes get would look react component point sideeffects stop subscription inner autorun well", "d": "10/2015"}, {"body": "ccorcos yes sideeffects would completely internal react fact react core could implement completely immutablefunctional way would perform mutations implementation detail since side effects would nt externally visible anyway", "d": "10/2015"}, {"body": "interesting use onchange callbacks found compatible whether using meteor tracker rxjs highlandjs etc always integrate trivially event callback react highorder component like redux keeps logic framework keeps react components pure functions", "d": "10/2015"}, {"body": "ccorcos main problem component instance gets destroyed subscriptions need cleaned component authors often forget cleanup thus creating memory leak want automatic makes easier write less boilerplate less errorprone cleanup automatic", "d": "10/2015"}, {"body": "jimfb exactly automatic unsubscription one really neat things tracker approach call reactive data source reestablishes subscription component stops calling data nothing clean", "d": "10/2015"}, {"body": "yeah really automatically unsubscribed call component unmount abstract away mixin though really different api create builtin method automatically unsubscribes unmount etc look huge meteor fan nt want talk sometimes find really hard explain stuff someone unfamiliar meanwhile using simple listeners event emitters much simple understand implement tend compatible whatever reactivity system want use", "d": "10/2015"}, {"body": "ccorcos might talking different mechanisms last checked tracker nt permanent subscriptions function establishes dependency reactive data source accessing rerun changes end subscription accesses data source reestablishes subscription one change", "d": "10/2015"}, {"body": "mitranim correct semantics automatic meteor unsubscription really automatic far simpler since literally zero api surface area common use case", "d": "10/2015"}, {"body": "ccorcos mitranim ready use tracker vuejs inspired library could try mobservable observers data accessed render disposes subscriptions unmount subscriptions kept alive applied successfully pretty large projects far mendix pretty unobtrusive data well decorates existing objects instead providing model objects", "d": "10/2015"}, {"body": "last checked tracker nt permanent subscriptions mitranim subscriptions permanent check coffee sub meteorsubscribe chatrooms subscription lasts substop interesting stuff tracker check coffee comp trackerautorun gt meteorsubscribe chatrooms subscription lasts compstop last example isnt terribly useful though something like coffee roomid new reactivevar comp trackerautorun gt meteorsubscribe messages roomidget change roomid autorun rerun roomidset subscription room stopped subscription room started subscription stopped call stop compstop function establishes dependency reactive data source accessing rerun changes end subscription subscription lasts autorun rerun reactive dependency changed computation lives stops call computationoninvalidate hook super contrived version accomplished exact thing hopefully help understand tracker works maybe also see messy get coffee comp trackerautorun gt meteorsubscribe chatrooms comp trackerautorun c gt sub null trackernonreactive gt dont let compstop stop subscription using trackernonreactive sub meteorsubscribe chatrooms coninvalidate gt stop subscription computation invalidated rerun substop invalidate stop computation compstop", "d": "10/2015"}, {"body": "ccorcos see source confusion vocabulary talking subscriptions nt mean meteor subscriptions determine data pushed server client nt relevant view layer updates subject discussion saying subscription drawing parallel traditional event listeners tracker ability rerun function dependency reactive data source case react components would component method fetches data calls mweststrate thanks example looks interesting", "d": "10/2015"}, {"body": "ah yes clever way subscription resubscribe time issues subready messagesfindfetch reactive trigger autorun rerun whenever change whats cool tracker start hide autoruns documentation certain function within reactive context could throw mixin js componentwillmount function thiscomp trackerautorun gt return thisgetreactivedata componentwillunmount function thiscompstop left magically reactive function works tracker pretty cool like", "d": "10/2015"}, {"body": "ccorcos turns somewhat wrong automatic unsubs using trackerstyle eventing still need stop listener otherwise keep reaching data sources calling unless check deprecated side note create elegant decorators make component methods reactive examples looks like javascript export class chat extends reactcomponent reactive updatestate thissetstate auth authread messages messagesread", "d": "10/2015"}, {"body": "mitranim pretty neat prefer highorder functions though", "d": "10/2015"}, {"body": "yourdeveloperfriend think depends works relative lifecycle hooks rendering delays due cascading timeouts nested components sorts lifecycle hooks called synchronously pass guaranteed called render nt studied react codebase assuming render nt called timeout likely best solution going something along lines registering prerendering hooks mark components props changed render logic calls componentdidreceiveprops calling render", "d": "10/2015"}, {"body": "jongbeau able use phantom js trigger react events nt work want test production minimized react used without tried inject react test utils page still nt trigger react events", "d": "10/2015"}, {"body": "thank jorge vytautas daukantas song xie notifications githubcom sent friday october facebookreact subject react triggering events real dom nodes nt trigger synthetic events jongbeau able use phantom js trigger react events reactaddonstestutilssimulate nt work want test production minimized react used without testutils tried inject react test utils page still nt trigger react events reply email directly view github", "d": "10/2015"}, {"body": "create danger html wrap component degrade performance though", "d": "10/2015"}, {"body": "replacestate class object stressful someone provide quick example demonstrates simply replace state vs edit decided refactor state bit nest stuff wated replace suggested jimfb", "d": "10/2015"}, {"body": "think something ugly class parent extends reactcomponent render return class child extends reactcomponent componentdidmount storelisten thisonchange componentwillunmount storeunlisten thisonchange onchange gt thispropsrender render return using would like replace state nt want listen changes parent component sure go clouddra sure solution works nt simply take latest", "d": "10/2015"}, {"body": "reactjscn site date point maintaining translation might make sense point reactjscn", "d": "10/2015"}, {"body": "jimfb thanks notification keep pace official documents", "d": "10/2015"}, {"body": "new work area", "d": "10/2015"}, {"body": "last message", "d": "10/2015"}, {"body": "ok may able work later technical blockers matter getting code written", "d": "10/2015"}, {"body": "yeah surprised numerous instances want validate prop something pass first argument", "d": "10/2015"}, {"body": "skiano nt think fundamental architectural reason nt super common pattern common pattern create element outside pass element pass function takes particular set parameters returns element allows ownerparent little control props passed nested elements since parentowner deciding class element created", "d": "10/2015"}, {"body": "get specific real reason type bit hard define actually cover cases see comments", "d": "10/2015"}, {"body": "oh forget pure function components really way distinguish functions components", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "would great", "d": "10/2015"}, {"body": "import react react import reactdom reactdom class header extends reactcomponent class main extends reactcomponent class footer extends reactcomponent class layout extends reactcomponent layoutheader header layoutmain main layoutfooter footer reactdomrender documentbody", "d": "10/2015"}, {"body": "topic streaming rendertostring rendertostaticmarkup wrote library last couple weeks calling reactdomstream new probably issues passes rendering tests reactdom currently passes preliminary performance microbenchmarks shown massively reduce ttfb large responses real world conditions ttlb goes well intend work library coming weeks hopefully including adding ability serverside render yield control back node event loop help operational difficulty ssr long pages starve small pages cpu feedback would welcome thanks eta renderer actually fork reactdom happy give back react project idea want", "d": "10/2015"}, {"body": "aickin excellent drawback using solution moment alpha happy help test also might help document kind changes made standard reactdom support streamable components regarding yielding control event loop mean streaming component node able handle requests", "d": "10/2015"}, {"body": "aickin super awesome also curious geekyme questions got serverrendered app average response times love try stable enough", "d": "10/2015"}, {"body": "geekyme think core drawback nt battle tested core reactdom code passes reactdom tests ok shape sure wrinkles find also site serves tiny pages say probably wo nt much good rendertostring probably nt big time sink changes commit mostly involves changing methods render path take stream rather return string kind documentation would like implement yielding clear nt yet yes would allow node switch requests especially good sites mix large slow pages small quick pages sites small pages get starved cpu big pages", "d": "10/2015"}, {"body": "spicydonuts thanks way could convince give try send feedback", "d": "10/2015"}, {"body": "aickin may need make sure watching right issues runs recommendations watching latency general exceptions", "d": "10/2015"}, {"body": "spicydonuts great questions top head say latency ttfb react component ttlb exceptions making sure nt get console errors connecting react client side time first paint browser", "d": "10/2015"}, {"body": "might worth moving discussion specific project project issues discussion forum like one spicyj linked avoid notifying bunch people project relevant issue ensuing discussion nt quite definitely keep us loop feel stable though", "d": "10/2015"}, {"body": "zpao apologies thanks gentle guidance thread anyone might want continue chat reactdomstream", "d": "10/2015"}, {"body": "also jsx transform replaced", "d": "10/2015"}, {"body": "spicyj afaik mixins legacy deprecated line modified nt addressed", "d": "10/2015"}, {"body": "planning change semantics instead preferring recommend official mixin solution appears", "d": "10/2015"}, {"body": "still discourage mixins use cases", "d": "10/2015"}, {"body": "ran today within redux project triggering actions unload things triggers state change rerender state bound hoc nt really opportunity unsubscribe first mentioned check nt help pattern little strange probably rework things nt triggered lifecycle event would nice least option get place nicely together", "d": "10/2015"}, {"body": "problem still exists react trying derive test case simplified updated version example", "d": "10/2015"}, {"body": "might realize filed first", "d": "10/2015"}, {"body": "spicyj react automatically preventdefault event handlers far tell dom nt update display input controlled component case rerender mute dom node stale state nt derp idiot code explicitly uses preventdefault removing fixes bug guess closed duplicate", "d": "10/2015"}, {"body": "unconfirmed nearly year closing please open new issue reproducible testcase believe bug still exists", "d": "10/2015"}, {"body": "ideas also accepts callback also returns value two solutions nt mutually exclusive callback gets component argument promise returns component work cases component value needed synchronously b similarly takes function caller supply callback gets called component instance right done though case one would wonder simply require consumer add prop element words becomes assuming callbacks get called synchronously", "d": "10/2015"}, {"body": "replaced", "d": "10/2015"}, {"body": "probably closed deprecates method", "d": "10/2015"}, {"body": "yeah planning change", "d": "10/2015"}, {"body": "wanted state stumbled upon issue first input field texts made textarea behaves differently would personally expect work way", "d": "10/2015"}, {"body": "davidreher imho bug code relying behavior even though inputs behave expect using intended sure unintended sideeffects result certain edgecases edit add using nulls instead empty strings intentionally switching controlled uncontrolled behavior fine fixed", "d": "10/2015"}, {"body": "syranide thx fix use empty strings instead null values", "d": "10/2015"}, {"body": "think horse died months ago still think things would easier reason controlleduncontrolled test simply key test props passed prop component would controlled regardless value actually given would result controlled blank input seems fit react fall pit success motto much better imho bug code curious though use case switching controlled uncontrolled states input never needed behavior practice", "d": "10/2015"}, {"body": "rymohr intention prop value always equivalent providing defaultprops etc works cases people end passing could make mean empty string discussed", "d": "10/2015"}, {"body": "spicyj good practice follow general controlled components feel like exception though sticking approach leaves bunch calls easy forget completely ignoring developer intention provide value input signaled passing prop think mentioned earlier thread red flag nobody complains surprised text input behavior nullundefined clears controlled component always textarea behavior surprises good examples passed intention create controlled component", "d": "10/2015"}, {"body": "spicyj really concerned end unintentionally switching controlleduncontrolled right perhaps something warn", "d": "10/2015"}, {"body": "going point supposed treated uncontrolled input types textarea follow behavior typetext clears turned typetextarea becomes uncontrolled last given value remains", "d": "10/2015"}, {"body": "tempted agree syranide say warn component switches controlled uncontrolled valid use cases exceedingly rare thinking almost always mistake warning cases also gives us upgrade path change behavior passing controlled textarea since sounding like best behavior reset empty string", "d": "10/2015"}, {"body": "syranide jimfb sounds like solid plan", "d": "10/2015"}, {"body": "valid use cases exceedingly rare thinking almost always mistake jimfb expanding would go far saying either mistake bad practice first controlleduncontrolled separate components really imho would impossible switch like second trivial implement uncontrolled behavior using controlled input really want nonstandard behavior best implementing component ontop controlled inputs implements whatever behavior want switching uncontrolledcontrolled point yes may valid usecases anyone serious code always avoid warning personally nt see negative sides warning", "d": "10/2015"}, {"body": "good solution sometimes number controlled lose value acceptable fix", "d": "10/2015"}, {"body": "add cents would strongly prefer fix implemented way break think would make sense continued work blocked updates coming parents", "d": "10/2015"}, {"body": "imo best way handle would allow potentially detect changes context used children rather ignoring entirely whenever context involved", "d": "10/2015"}, {"body": "use case would fetch translation messages inside component pass jed instance gettext methods messages received gettext methods would return empty strings let ui render optimistically received messages would expect everything rerender parts translatable strings updated dom need actually calls view components extract strings using xgettext case", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "spicyj label", "d": "10/2015"}, {"body": "willing nt require much discussion needs get done", "d": "10/2015"}, {"body": "glad help pain point team", "d": "10/2015"}, {"body": "upgraded app far nt able reproduce bug spicyj could anything know fixed prior release", "d": "10/2015"}, {"body": "nt fixed test case posted still problem", "d": "10/2015"}, {"body": "written companion tools testing shallow rendering gives ability diff jsx strings rendered instead react element objects", "d": "10/2015"}, {"body": "hi wondering state simulating events using shallow rendering using refs using shallow rendering help make happen still planned", "d": "10/2015"}, {"body": "syranide would good test case exercise logic", "d": "10/2015"}, {"body": "sure understand meant originally think fixes event really good first bug", "d": "10/2015"}, {"body": "spicyj scanning quickly seems like yes anyway basic issue iswas every time rerenders dom node looked would recache nodes could found", "d": "10/2015"}, {"body": "oh see think slightly separate probably get fixing soon though", "d": "10/2015"}, {"body": "spicyj fyi iirc currently big issue used places reach actual node inside parent node instead rather actual node directly probably react gets around dropping wrapping spans thus would assume", "d": "10/2015"}, {"body": "spicyj concur tad beyond beginner level sweatsmile", "d": "10/2015"}, {"body": "state", "d": "10/2015"}, {"body": "update", "d": "10/2015"}, {"body": "zpao ok thanks", "d": "10/2015"}, {"body": "also experience issue addition value contains nonascii characters happens first time value set input element placeholder contains nonascii characters code reproduces outside react page loads text failed shown beneath inputfield nonascii value nonascii placeholder documentaddeventlistener domcontentloaded function documentgetelementbyid input value failed issue react would nice react could add workaround since easily run bug using react sure workaround would though", "d": "10/2015"}, {"body": "came across thread audio amp video components supported see", "d": "10/2015"}, {"body": "yes added", "d": "10/2015"}, {"body": "get clarification whether safe access inside escape hatch regards described", "d": "10/2015"}, {"body": "available inside gets called even", "d": "10/2015"}, {"body": "recommended workaround supporting returning default props optional prop currently api returns nested structures values ideally would want defaults avoid write repetitive fragile code react docs think two workarounds require changes behaves plans handle use case workaround would course become permanent manually parse api response replacing values appropriate adding custom method call function fetch local js moduleexports reactcreateclass displayname foo getprops function getprops return bar thispropsbar baz render function render var props thisgetprops", "d": "10/2015"}, {"body": "still active issue", "d": "10/2015"}, {"body": "think fixed jsfiddle closing reopen someone reproduce fiddle", "d": "10/2015"}, {"body": "bump large need server side complicated render full web pages excluding doctype without ability render fragments section currently working around via mixins little logic final render would much simpler support rendering multiple components", "d": "10/2015"}, {"body": "impinball attempt write something similar reactdocumenttitle based reactsideeffect solve problems able meta tags headers title occasionally redirects", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "moving rule nt fix focusonmount issue deferring call using something like lodash made transitions work", "d": "10/2015"}, {"body": "abritinthebay yes looks like proposed linked stackoverflow question project", "d": "10/2015"}, {"body": "nt exist anymore transformer replaced babel", "d": "10/2015"}, {"body": "news", "d": "10/2015"}, {"body": "proptypes mostly sort maintenance mode really planning add right proptypes phased favor tools like flow", "d": "10/2015"}, {"body": "simple someone send pullrequest least part something maintain", "d": "10/2015"}, {"body": "looks like might fixed either way nt actively working proptypes feature anymore everything moving static analysis tools like flow proptypes way sure accept pr nt think something actively develop internally point", "d": "10/2015"}, {"body": "iframe onload event fired firefox chrome using firefox chrome react jsx consider upgrading react work", "d": "10/2015"}, {"body": "needed add information comment load event fired chrome firefox missing callback onload event ie handlefileload called firefox chrome put breakpoint chrome load event able see load event fired handler also called libraries bootstrap reason callback never fired thoughts please let know need share information setup", "d": "10/2015"}, {"body": "try upgrading react see still running issue please open new bug simple testcasejsfiddle demonstrates issue", "d": "10/2015"}, {"body": "jimfb running issue react also opened issue contains jsfiddle demonstrate issue", "d": "10/2015"}, {"body": "ok perfect thanks", "d": "10/2015"}, {"body": "facing similar issues fixing one one keep getting newer issues pass react server rendered output via htmlmin issues reasons vs semicolon end places checks render vs using single quotes attributes outputs vs vs weird issue vs", "d": "10/2015"}, {"body": "vectoreffect attribute please", "d": "10/2015"}, {"body": "think people requesting svg tagsattributes happen need poor model react silly use render working svg page said stuff missing tags attributes probably lots categories specific svg code working", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "spicyj hi ben speaking netbeans say impractical us add jsx support every editor netbeans every editor kind insulting must remember netbeans facebook years old leading indicator netbeans ranked table popular ide", "d": "10/2015"}, {"body": "ramyou sure nt ben intent suggest netbeans unimportant important ide provides substantial value community team maintains netbeans familiar netbeans codebase practical us learn code every ide modify ides support features like need rely ide development team add features users requesting correct route contact developers responsible preferred ide ask prioritize feature", "d": "10/2015"}, {"body": "ultimately us decide editor supports technology policy business choices facebook oracle", "d": "10/2015"}, {"body": "reactlink getting deprecated per also proptypes way favor flow something would find useful would recommend creating custom proptype validator publishing npm people use since something plan supporting core going go ahead close issue", "d": "10/2015"}, {"body": "hey hi help making point direction implement big change", "d": "10/2015"}, {"body": "note nt actually fixed warning place", "d": "10/2015"}, {"body": "yep autoclosed pr", "d": "10/2015"}, {"body": "problem", "d": "10/2015"}, {"body": "issue solved", "d": "10/2015"}, {"body": "avraammavridis spicyj wrote fixed asking durations still issue", "d": "10/2015"}, {"body": "also sorry resurrecting old thread running exact problem none suggestions worked javascript var sinon require sinon var expect require chai expect var jsdom require jsdom var react var testutils var view describe student name view function running following react old know jsdom mocha ideas wrong", "d": "10/2015"}, {"body": "stenrap please open new issue thanks", "d": "10/2015"}, {"body": "custom elements currently work broken release candidate discussion issue seems position react team remain broken see web components address issues modern web development however looks like lose semnatic goodness custom elements support spec failed even begins", "d": "10/2015"}, {"body": "clear custom elements work correctly intended release candidate custom element specification allows arbitrary attributes specified custom element design decision use attribute instead chosen custom elements spec requires us preserve full casesensitive namespace continue discussion topic issue linked another issue tracking upcoming dom technology going close issue favor", "d": "10/2015"}, {"body": "keep perf work nt need stay open separate issue", "d": "10/2015"}, {"body": "related discussion closed suggestions one making use fire change event autofill manually think close well", "d": "10/2015"}, {"body": "would nice autofillevent part react possible addon functionality going necessary virtually everyone using react form validation autofillevent script also adds dependency jquery may undesirable many cases", "d": "10/2015"}, {"body": "browser bug effects browsers little differently think angular punted trying work around fix nt mean react common thing understand wontfix super well versed various browser bug trackers would nice someone could find open issues think react team weight users would opening issue could tract tickets react developers interested", "d": "10/2015"}, {"body": "caught angular thread firefox issues password fields still open word safari bug chrome fixed", "d": "10/2015"}, {"body": "issues already tracked places", "d": "10/2015"}, {"body": "fwiw first attempt solving issue given party component nt want neither modify reach deeply use sure much adding webpack bundle", "d": "10/2015"}, {"body": "spicyj seeing similar issue cursor jumping end whenever format modify controlled input value renders code js export default class giftpurchaseform extends component constructor props super props thisstate cardnumber cardnumberchanged event thisstatecardnumber eventtargetvalue thissetstate thisstate render return creditcardparse formatted simply turns number like card number like remove call pass cursor nt jump cursor still jumps even pass next value seems modification string renders means middle edits edits modification point string cause cursor jump end", "d": "10/2015"}, {"body": "wonder react ca nt export production env react package ships", "d": "10/2015"}, {"body": "results different copy code issues long remotely supported currently addons packages work ca nt might something like future though", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "per probably dropping reactlink controlled components linkedstate mixin really nt used much even less people moving towards classes also replies thread indicates lack interest topic since linkedstate appears way guess wo nt invest lot effort enhancing mixin mostly legacy point find useful feel free create linkedstate mixin apps andor publish others use", "d": "10/2015"}, {"body": "addons shipped via npm", "d": "10/2015"}, {"body": "nt dropped addons build entirely yet though going keep open", "d": "10/2015"}, {"body": "ffxsam think would cool react sort builtin easy way components quite far apart child greatgreatgreatgrandparent communicate also trying meteor considering using context storing window widthmedia queries thread making uncertain whether go something like might safer undry", "d": "10/2015"}, {"body": "first glance really convinced use context create single entry point action creators setup components something like suggested post setup component see actions creators used app one react app per page ok could pass actions downward props many nested components painful sad feature removed", "d": "10/2015"}, {"body": "fyi totally changed direction stopped using context likely dropped mention hit infinite loop issue feel like maybe halfbaked solution building meteor using package working great", "d": "10/2015"}, {"body": "document control messaging late pretend react nt currently support context least way document caveats talk whatever future plans might im tired linking couple issues fielding questions based people reading around internet friday october sam notifications githubcom wrote fyi totally changed direction stopped using context likely dropped mention hit infinite loop issue feel like maybe halfbaked solution building meteor using meteorflux dispatcher package working great reply email directly view github", "d": "10/2015"}, {"body": "love work everyone react feel like bug higher priority fix seeing approaching year mark discovery", "d": "10/2015"}, {"body": "dancoates sorry lower priority us feel free send pull request though little hairy blog post give idea general strategy range elements listen input change events fire events either happens even happen", "d": "10/2015"}, {"body": "need sorry realise tricky one take look changeeventplugin see help perhaps caveats section docs would help folks wondering changes nt firing though guess thread easy enough find", "d": "10/2015"}, {"body": "please put tapeventplugin addons exists reactaddons package want use materialui without nodejs build want use scala js ca nt compile tapeventplugin standalone compile include react core", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "thanks adewes giving fits", "d": "10/2015"}, {"body": "anyone still seeing issues please make new issue simple repro case", "d": "10/2015"}, {"body": "decorator comment edit would nt actually logical approach using decorators would mounted functions class prototype executed automatically mounted way could implemented without giving much thought would decorator register method name predictable signature could searchable something like js globalevent click onglobalclick e compiled reactglobalevent uuid handler would sort mechanism internally searches similar keys potential implementation approach decorator js function globalevent eventtype return function decorate target key descriptor function reactglobalbind reactglobalevent eventtype descriptorvalue class component extends reactcomponent globalevent click onglobalclick e consolelog clicked full discretion basically abuse decorator pattern make nice implementation detail though nt appeal ca nt utilize decorator pattern", "d": "10/2015"}, {"body": "fwiw created abuse pattern example", "d": "10/2015"}, {"body": "blainekasten different take thing nt really like either though specifically componentdidmountetc issue maybe annotating functions method decorators still using class decorator would way go still cool core mostly get event shimming benefits normal react events give", "d": "10/2015"}, {"body": "componentdidmount issue could solved internal react implementation selling way go thought experiment", "d": "10/2015"}, {"body": "looks pretty impressive", "d": "10/2015"}, {"body": "currently issue ios workarounds work versions ios recent one anyone else experiencing", "d": "10/2015"}, {"body": "uzarubin nt heard tested seems work fine", "d": "10/2015"}, {"body": "currently using react still issue event click firing safari ie added luck please help make work", "d": "10/2015"}, {"body": "issue fixed seeing wrong behavior react still please open new issue minimal repro case", "d": "10/2015"}, {"body": "anyone else keeps bumping state change asynchronous like getdata function var self var params foo thisstatefoo bar thisstatebar getsomedataasynchronously params function data selfsetstate data data handlefoochange function value thissetstate foo value thisgetdata handlebarchange function value thissetstate bar value thisgetdata case reading state ends previous state correct solution use second callback argument run update finished changing state course waits rerender nt really wanted wanted change state fire async call turn react nt let us would love know better solution also nt make sense change handler functions deal ca nt use pending state still nt understand rationale situation sebmarkbage suggested something props nt see issue perhaps missing context complete example might help anything possibly another example confusing behaviour", "d": "10/2015"}, {"body": "systemparadox getdata function params var self getsomedataasynchronously params function data selfsetstate data data handlefoochange function value thissetstate foo value var params foo value bar thisstatebar thisgetdata params handlebarchange function value thissetstate bar value var params foo thisstatefoo bar value thisgetdata params want agree slightly ugly hackworkaround assuming understanding question correctly want", "d": "10/2015"}, {"body": "wanted change state fire async call turn reason effectively different separately", "d": "10/2015"}, {"body": "jimfb works duplicating parameter handling worse pass correct state object time spicyj arguably nt make lot practical difference harder reason separates async call handler caused hinder debugging reason complicate things separating extra turn think would really help discussion see full example time changing pending state would also lead unexpected behaviour", "d": "10/2015"}, {"title": "example use routeroutlet angular", "body": "looking example use routeroutlet angular noticed changes area router apis could find documentation blog helps article talking ngviewport nt think valid anymore", "num": "5048", "d": "10/2015"}, {"title": "change detection inside socketio events", "body": "hello using socketio listen event changing component property inside event listener nt trigger change detection nt update view accordingly guess uses special kind events nt catched zone js import component injectable injectable component selector test template export class testcomponent static socket io scandone boolean false wanted plnkr requires socketio server work way manually trigger update added setinterval constructor see triggered view update really good practice", "num": "5046", "d": "10/2015"}, {"title": "hero editor tutorial", "body": "hello noticed things correct tutorial hero editor one redundant \u0430 gt tag end following html heroid heroname stands blocks code chapter masterdetail second thing end chapter show screenshot list heroes html different html showed us chapters get together differences dashboard heroes xxxx hero view details button cheers keep good work", "num": "5045", "d": "10/2015"}, {"title": "script tag renders", "body": "following template issue script tags rendering html basically part completely missing", "num": "5044", "d": "10/2015"}, {"title": "ngupgrade support using bindtocontroller object", "body": "since possible use convenient object notation use case nt seem covered", "num": "5042", "d": "10/2015"}, {"title": "svg elements rendered", "body": "sure bug something wrong looks like none svg elements insert page rendered app running live insert svg elements js import elementref component viewencapsulation ondestroy import icon services component selector glyph encapsulation viewencapsulationemulated viewencapsulationemulated viewencapsulationnative viewencapsulationnone default template styleurls appcomponentsglyphglyphcss directives glyph inputs src export class glyph implements ondestroy el htmlelement private icon icon constructor elementref elementref icon icon thisel elementrefnativeelement thisicon icon set src src string thisiconget src svg gt thiselchildrenlength thiselreplacechild svg thiselfirstchild else thiselappendchild svg ondestroy let svg thiselqueryselector svg svg thiselremovechild svg", "num": "5041", "d": "10/2015"}, {"title": "doesnt work set thislist router component", "body": "appts homets import component view ngif ngfor input import friendlistcomponent friendlist component selector homecomponent view templateurl jscomponentspageviewhomehtml directives ngif ngfor export default class homecomponent list array title string homehtml home title itemtitle result show charactors home", "num": "5040", "d": "10/2015"}, {"title": "allow developers specify pure providers", "body": "summary provide way developers specify providers stateless need instantiated next reqres cycle term rather backgroundwhy order increase response times angular application rendered server maintain reference platform injector maintains platform specific providers able determine providers every application application injector way determine providers kept others desposed since using di determine intent developer rather knowing current workaround developer would deconstruct bootstrap process create ways maintain application providers proposal promote specify metadata given provider typescript injectable pure true class statelessservice injectable pure true class directiveresolver resolve", "num": "5038", "d": "10/2015"}, {"title": "use property decorators lifecycle hooks instead interfaces", "body": "currently component routable component lifecycles defined via interfaces eg problematic interfaces runtime representation javascript runtime check method defined interface eg exists component instance call component method meant lifecycle hook still call name collisions result surprising results add new lifecycle hooks end breaking existing components reasons propose move away interfaces use property decorators instead import component oninit component selector testfoo class testfoo implements oninit oninit import component oninit component selector testfoo class testfoo oninit oninit dart notes api implemented via transformers production via mirrors development mode migration notes sure deal migration yet going reuse symbol different purpose might good way provide transitional path would argue making change asap cc mhevery vsavkin tbosch btford", "num": "5036", "d": "10/2015"}, {"title": "field read throws exception svg", "body": "fill read svg throwing exception alpha version height width export class vbutton public fill string blue", "num": "5035", "d": "10/2015"}, {"title": "svg rendering correctly xlink", "body": "textpath showing correctly alpha xmlns xlink version height width export class vbutton", "num": "5034", "d": "10/2015"}, {"title": "remove npm gulptraceur", "body": "obsolete confuses people gone remove gulptraceur bloats npm dependency tree", "num": "5030", "d": "10/2015"}, {"title": "pathlocationstrategybasehref null despite appbasehref set alpha", "body": "please consider following simplified example bootstrap javascript import bootstrap bind import routerbindings appbasehref routerprimarycomponent const routerconfig routerbindings bind appbasehref tovalue bind routerprimarycomponent tovalue rootcomponent bootstrap rootcomponent routerconfig routing links element page generated attributes links set believe code relies supposed set using dom adapter returns element dom get concatenated url sure fix moment perhaps setting empty string returns would enough", "num": "5028", "d": "10/2015"}, {"title": "errors auxiliary route", "body": "issues opening auxiliary route using syntax btford showed angular connect gives syntax errors runtime brandonroberts suggested fix using aux route opens required component shows errors console breaks urls routes run locally plunker open chat route url chat remains unchanged matter link clickthe back button nt work either plank", "num": "5027", "d": "10/2015"}, {"title": "routerconfig return page", "body": "config like routeconfig path component homecomponent homecomponent path book component bookcomponent bookcomponent path found component foundcomponent foundcomponent path component mecomponent mecomponent click link apphtml good press input url browser show page solve kinds problem someone help thanks", "num": "5026", "d": "10/2015"}, {"title": "prevent duplication pushstate history", "body": "clicked multiple times multiple history entries created exact url would possible compare current url page destination url call pushstate url already correct user perspective page click link page b click link page b press back button get back page", "num": "5025", "d": "10/2015"}, {"title": "formfind find controls nested controlgroups", "body": "form defined like changing email field invalid email want display error right field currently iterate deep tree makes really difficult come generic solution finding errors specific field makes pretty complicated come generic solution like one formsexample repo also really error prone especially deeper structures suggestion would offer possibilty make deep search pass whole path find method maybe something like", "num": "5024", "d": "10/2015"}, {"title": "circular dependency issues", "body": "current version madge fails detect circular dependencies tried upgrade issues found someone investigate fix issues upgrade madge", "num": "5022", "d": "10/2015"}, {"title": "memory leak repeated settimeouts", "body": "part project working found issue memory leaking repeatedly calling settimeout example simplified app following component selector app view template number encapsulation viewencapsulationnone export class app private number expected number counts looking chrome task manager memory usage quickly reaches using memory profiler gives following run using requestanimationframe gives obviously case similar using requestanimationframe would correct approach longer timeout slow running function example could result lot unnecessary overhead", "num": "5021", "d": "10/2015"}, {"title": "recommended way conditionally apply directive", "body": "would like apply directive conditionally something like classdraggable somebool draggable selector directive supported recommended way conditionally apply directive existing element use attribute selector pass boolean input ie directive always active prefer use ngifs duplicate elements everywhere cleaner way attach detach behavior", "num": "5019", "d": "10/2015"}, {"title": "http fix connectionresponse type observable", "body": "", "num": "5015", "d": "10/2015"}, {"title": "parser recognizing attribute", "body": "hi using issue using label element attribute template snippet component definition missing something exception get", "num": "5014", "d": "10/2015"}, {"title": "router clicking routerlink directives bypasses native onhashchange events", "body": "makes impossible thirdparty code aware angular know route changed honestly prefer routerlink go entirely away optional lot easier portable use plain instead router deal understanding example routerlink supports clicks keyboard", "num": "5013", "d": "10/2015"}, {"title": "polymer paperinput ngformcontrol regression", "body": "previously possible use paperinput ngformcontrol however throws error working error", "num": "5012", "d": "10/2015"}, {"title": "css shimming ignore matches regex comments", "body": "right css shimming uses lot regex magic break comments", "num": "5011", "d": "10/2015"}, {"title": "missing step tour heroes tutorial npm init cloning", "body": "may wrong believe missing step beginning tour heroes tutorial cloned quickstart directory also need run npm init new new tourofheroes directory create new packagejson file", "num": "5005", "d": "10/2015"}, {"title": "svg viewbox attribute converted lowercase templates", "body": "component arrives dom note lowercase way svg nt render correctly workaround using constructor manually set correct property", "num": "5004", "d": "10/2015"}, {"title": "dgeni publishes docs internal class members", "body": "example contains", "num": "5003", "d": "10/2015"}, {"title": "component needing injectable bootstrap providor found", "body": "attempting walk simple scenario component relies service say pull data see use amp commatinjectable make class injectable component constructor running situation throw provider found error working version modify bootstrap seems unmanagable add every service array would need import every single file top would nt someone want able inject injectable class without worry bootstrap also injectable made difference added bootstrap", "num": "5002", "d": "10/2015"}, {"title": "custom bundle generated systemjs builder working", "body": "created simple project setup systemjs loader one side load application libraries sources js sources second side generate custom application bundle systemjs builder using configuration loading app sources configuration provided builder application loading sources everything works fine case loading bundles browser problems trying use two systemjs builder paths build bundle case application runs throws maximum call stack size exceeded generate sfx case application nt starts ant token must defined exception general motivation configuration generate bundles contains exactly app needs modules dependencies solution also supports split application bundles lazy load modules demoed repo whole setup", "num": "4999", "d": "10/2015"}, {"title": "elements empty using canonical ngfor syntax inside", "body": "see plunker next template html first level tr level tr see plunker empty contents rendered outside works fine use instead see plunker", "num": "4998", "d": "10/2015"}, {"title": "uncaught typeerror mvalues function", "body": "hi angular quickstart guide working get error message alpha webpage shows template rendered single error javascript console copied exact folder structure html ts snippets running something wrong problem current beta", "num": "4997", "d": "10/2015"}, {"title": "dart build fails building examples", "body": "dart version dart vm version tue oct npm bin gulp builddart could find file named pubspecyaml usersmhwebstormprojectsangulardistdartexamples buildpubspecdart errored min error formaterror gulp emitone gulpemit gulporchestratoremittaskdone finish rejected promisewhen promisepromisepromisedispatch runsingle flush builddart errored min", "num": "4996", "d": "10/2015"}, {"title": "question seterror control removes validator errors desired behaviour", "body": "good idea setting errors property control overrides errors arose validator presume underlying reasoning manual validation performed control contained validator error make difference numeric input maxvalue validator controls form depending values min value constrained kicks might try write validator might conclude manual validation submit appropriate case max value error message lost min value constraint satisfied overriding errors arising validator control case combined clearing manual errors value updated would also consistent grouparray behaviour even simpler developer clear errors validator amp manual control calling seterror null seems strange", "num": "4995", "d": "10/2015"}, {"title": "invalid state control control group hierarchy detected root control group", "body": "consider following code var fb formbuilder injected var groupc controlgroup fbgroup groupb fbgroup controla validatorsrequired var controla control groupbfind groupbcontrola consolelog control valid controlavalid consolelog group b valid groupbvalid consolelog group c valid groupcvalid controlaupdatevalue consolelog control valid controlavalid consolelog group b valid groupbvalid consolelog group c valid groupcvalid cases invalid expected valid unexpected see first bullet point think bug", "num": "4994", "d": "10/2015"}, {"title": "keyframes shimmed components", "body": "since latest drop keyframes shimmed components breaking much animation", "num": "4993", "d": "10/2015"}, {"title": "scope injected controller appears create dependency issues angularmockinject", "body": "example given controller test js describe module function error given error longer present injection removed issue appears specific dependencies appear work quickly tested cloning adding scope injection see error", "num": "4990", "d": "10/2015"}, {"title": "testcomponentbuilder ability override pipe", "body": "today override template view directives adding cc juliemr", "num": "4988", "d": "10/2015"}, {"title": "update tests ff safari ie account renderer changes svg", "body": "changes introduced fix renderer support attribute svg broke tests browsers chrome tests need updated", "num": "4987", "d": "10/2015"}, {"title": "router lifecycle onactivate waiting promise displaying template", "body": "hi component looks like typescript component selector client view directives ngif template export class clientshow client client routeparams routeparams repository clientrepository constructor repository clientrepository routeparams routeparams thisrepository repository thisrouteparams routeparams onactivate return thisrepositoryfind thisrouteparamsparams id client gt thisclient client seems template displayed onactivate lifecycle hook promise resolved getting following error first promise resolved name displayed correctly desired behaviour may missing something easy find documentation theses lifecycle hooks thanks lot", "num": "4984", "d": "10/2015"}, {"title": "including code facadelangts twice leads rangeerror maximum call stack size exceeded errors", "body": "working cjs bundles decided duplicate facades code every bundle means multiple bundles loaded page say core executing code contained facades twice turns got piece code leads errors culprit javascript var assertionsenabled typeof global assert undefined export function assertionsenabled boolean return assertionsenabled todo remove calls assert production environment note ca nt export import files reserved keyword dart globalassert function assert condition assertionsenabled global assert call condition blocks", "num": "4981", "d": "10/2015"}, {"title": "datalist combined fallback support nt show proper data", "body": "provide fallback support using basic inside provide options shown value included demo screenshot edit sorry issue meant angular open", "num": "4980", "d": "10/2015"}, {"title": "quickstart install documentation packagejson issue", "body": "minor issue could nt see edit quickstart documentation right states also scripts section find replace following scripts start liveserver changed line otherwise errors error since packagejson nt valid json easy wayplace make pr let know", "num": "4978", "d": "10/2015"}, {"title": "ca nt npm install", "body": "sorry raising cloneissues tried latest npm npm save saveexact npm err darwin npm err argv save saveexact npm err node npm err npm npm err code npm err found npm err please include following file support request npm err even downgraded version npm save saveexact npm warn packagejson description npm warn packagejson repository field npm warn packagejson readme data npm err darwin npm err argv save saveexact npm err node npm err npm npm err code npm err found npm err please include following file support request npm err could please help", "num": "4977", "d": "10/2015"}, {"title": "feature request perl style given functionality ngswitch", "body": "perl given switch syntax godsend matching types regexes operations subject switch statement etc without reviewing source nt know much ties irreparably parse equivalent know directives created bridge gap functionality specifically ngif ngelif ngelse variable introduced ngswitch operated upon ngswitchwhen directive reference", "num": "4976", "d": "10/2015"}, {"title": "styleurls work root path", "body": "idea", "num": "4974", "d": "10/2015"}, {"title": "direct access dom", "body": "successfully integrated angular alpha import component bootstrap elementref component selector myapp template integrated background yellow providers elementref class appcomponent elementref elementref bootstrap appcomponent everything working fine angular documentation elementref states following use api last resort direct access dom needed use templating databinding provided angular instead alternatively take look link renderer provides api safely used even direct access native elements supported relying direct dom access creates tight coupling application rendering layers make impossible separate two deploy application web worker question arises integrate renderer api documentation renderer api samples", "num": "4973", "d": "10/2015"}, {"title": "suggestion property name mapping support minification components", "body": "thinking achieve better minification angular app difficult achieve due templates angular expressions interpreted angular could optional property decorator perhaps another decorator familiar codebase would map property names components names variables template expressions", "num": "4969", "d": "10/2015"}, {"title": "remove deprecated dgeni dgeneration dts files gulp ci", "body": "awesome new packagejson driven typedef generation online remove steps gulpfile linting checks travis", "num": "4967", "d": "10/2015"}, {"title": "feat router add ability define root component value", "body": "provide value component router overridden since angular notion root component router uses new object provide host component building initial route config value would default instance new object could changed point root directive name would allow routes configured without injecting router first", "num": "4965", "d": "10/2015"}, {"title": "add deep tree without viewcache static tree benchmarks", "body": "need know regressions well right tracking deep tree benchmark viewcache enabled", "num": "4964", "d": "10/2015"}, {"title": "benchpress codehealth remove metric abstraction introduce event processor", "body": "adding new metric benchpress hard right requires change already big file initially benchpress supposed handle different sources metrics turns metrics benchpress generated one source browser performance logs therefore metrics implemented file right benchpress changed support multiple event processors split additionally abstraction configuration around removed", "num": "4962", "d": "10/2015"}, {"title": "benchpress codehealth use multi bindings", "body": "benchpress multiple configuration options use arrays eg metrics reporters using multi bindings simplify configuration users", "num": "4961", "d": "10/2015"}, {"title": "router working ng", "body": "", "num": "4960", "d": "10/2015"}, {"title": "template directives nt properly export variable", "body": "attempting use templatebased directive following behaviour occurs used syntax get error directive exportas set foo despite true used nt get error export null method calls property access error way export work using specifying exportas despite edit actually necessary workaround manually set local viewrefsetlocal exportasname additionally case exported variable accessible external context set accessed inside template makes sense setlocal works inside template consequence overall divergent behaviour workaround get variable inside template nt constitute way export work since somewhat unrelated featurewise demonstration plunkr", "num": "4950", "d": "10/2015"}, {"title": "urlsearchparams properly escape keys values tostring", "body": "right case clients must escape query manually defeats one purposes using", "num": "4948", "d": "10/2015"}, {"title": "ngcontent projection root component", "body": "projection nt work root component eg following code content needs projected component selector app view template class app bootstrap app persists dom bootstrapped reviewed design doc nt found restriction plunker", "num": "4946", "d": "10/2015"}, {"title": "auxilary routes broken", "body": "nt get aux routes running creating aux route config always leads following exception originating routerjs following plnkr demonstrates error", "num": "4945", "d": "10/2015"}, {"title": "support url fragment links like angular anchorscroll", "body": "angular great service component anchorscroll something analogous angular html spec section navigating fragment identifier", "num": "4944", "d": "10/2015"}, {"title": "refactor location move router package platformcommon", "body": "summary discussion brought light would beneficial exist dependent bundle problem users need access url query params whether using component router sample user story manager needs quick form posted isolated marketing page single page routes developer wants build form using plans process various flows via url query params used across several different links emailed via marketing campaign developer wants use core bundle routes page needs access query params easily various usabilitymarketing tracking purposes proposal make part module would included main bundle thoughts begin working next day cc mhevery btford", "num": "4943", "d": "10/2015"}, {"title": "public api setting dom adapter", "body": "currently several places need set dom adapter serverside rendering webworker testing nt public api done today variant need decide upon public api selecting platformspecific dom adapter", "num": "4942", "d": "10/2015"}, {"title": "jasmine testing", "body": "seems source code unittestshtml nt correct cause user install jasminecore", "num": "4938", "d": "10/2015"}, {"title": "feat router add support auxiliary routes", "body": "component router angular currently supports unnamed outlets nt include support creating named outlets using auxiliary routes", "num": "4937", "d": "10/2015"}, {"title": "test router add tests location strategy", "body": "originally location strategy included small amount platformspecific behavior pragmatic test part tests order fix abstract behavior location strategies many tests bogus meanwhile pr needed refactoring add layer location strategy able test part include tests behaviors test resolved", "num": "4935", "d": "10/2015"}, {"title": "ngif container component checking property references", "body": "use container component hide children elements inserted via try access properties bindings till true posttitle component selector postmodal template template directives modal ngif export class postmodal component selector modal template template directives ngif export class modal", "num": "4934", "d": "10/2015"}, {"title": "add possibility reset form value states", "body": "current forms api possible reset states like dirty pristine typical scenario would form submit add entry database list submitting value form reset initial state also flags resetted using modeldriven approach currently possible reset values chance create new form plnkr demonstrates modeldriven approach using template driven approach possible reset ngmodel object initial state case flags like dirty pristine nt reset behaviour possible utilize form states something like candeactive imo needs way reset value flags form initial state still idea could solved ngmodel scenario dedicated object form controller would correct always reset flags changing ngmodel object programmatically like", "num": "4933", "d": "10/2015"}, {"title": "two lt input typenumber min gt element ngrepeat one display number", "body": "html js description three input element min type values scopedata problem last one display input element nt know anybody help thank sound code", "num": "4932", "d": "10/2015"}, {"title": "webworkers ca nt load one component templateurl", "body": "alright repo error clone run tsc run main component called component responsible wrapping exposing components app thise case simple todoapp see everything working fine go uncomment see application simply disappears errors thrown go change simply things work fine seems weird silent error idea", "num": "4930", "d": "10/2015"}, {"title": "sync commit persha sync", "body": "", "num": "4929", "d": "10/2015"}, {"title": "minification story needed", "body": "current bundle big need get closer mark", "num": "4925", "d": "10/2015"}, {"title": "run code noimplicitany", "body": "", "num": "4924", "d": "10/2015"}, {"title": "use camelcase instead dashcase html", "body": "new parser switch longer convert instead honor properties", "num": "4923", "d": "10/2015"}, {"title": "unable pass property root level component", "body": "noticed possible pass data root level component using properties hoping pass data root level component way initialize external data sources one simple example would javascript object defined indexhtml outside angular ex assume root level component indexhtml page would like pass array testing property way initialize main component nt seem work find unfortunate limitation since alternative define global variable access inside component instead able ferry data via properties", "num": "4921", "d": "10/2015"}, {"title": "remove old query api", "body": "old query api replaced contentchildren viewchildren old api needs removed", "num": "4919", "d": "10/2015"}, {"title": "remove lifecycle event move functionality applicationref", "body": "responsible creating notifies changes turn notifies root per bootstrapped", "num": "4918", "d": "10/2015"}, {"title": "form controll listen reset event", "body": "click reset button form value still unchanged see", "num": "4914", "d": "10/2015"}, {"title": "core better iterable support", "body": "see eg change maybe add dart method js", "num": "4911", "d": "10/2015"}, {"title": "cancel component host event", "body": "hi cancel component host event need mybutton component way achieve thanks advance tiago braga", "num": "4909", "d": "10/2015"}, {"title": "testing guide partially available", "body": "chapters angular testing guide available website menu chapters available end chapter testing angular pipe link next chapter using latest silk browser kindle hd fire tablet", "num": "4908", "d": "10/2015"}, {"title": "comunication components", "body": "tried use componente directive code directive export class datepicker public date date public callback function html componente use code import component ngif formdirectives elementref import datepicker datepickerdatepicker declare function initmaterial component selector modal directives ngif datepicker formdirectives templateurl frontendcomponentsmodalmodalhtml styleurls frontendcomponentsmodalmodalcss bindings datepicker export class modal public isopen boolean false private dtcompromise date private dscompromise string private datepicker datepicker html data descri\u00e7\u00e3o selected date function onselect called consolelog print undefined whats error", "num": "4906", "d": "10/2015"}, {"title": "lifecycletick called recursively submiting form enter key", "body": "form hooked event handler interessting thing submit form pressing enter keyboard get exception lifecycletick called recursively however happen click loginbutton submit form loginformhtml html username username login loginformts typescript import component view formdirectives ngif import userprovider servicesuserprovider view templateurl appcomponentsloginformhtml directives formdirectives ngif component selector loginform export class loginform constructor protected userprovider userprovider userproviderts typescript import injectable import http headers import user modelentities injectable export class userprovider private static tokenkey string usertoken private static defaultresultmapper res gt resstatus lt return resjson else throw new error resstatus", "num": "4904", "d": "10/2015"}, {"title": "newbie angular typescript deletes javascript", "body": "template indexhtml angular typescript basic application template javascript example loads jquery libraries problem tags template parsed deleted way prevent angular whatever engine used deleting tags change tags something else example tag thanks", "num": "4903", "d": "10/2015"}, {"title": "issue typings webworker bundle", "body": "create new angular project using alpha npm attempt load webworker bundle typescript project get following errors compilation looks like facade types loading reason", "num": "4902", "d": "10/2015"}, {"title": "angular cooperate amdcommonjs", "body": "original issue misunderstood closed early talking scenarios describing please read referenced case describes utilize angularjs requirejs using asynchronous loaders angularjs parses html document modules loaded", "num": "4901", "d": "10/2015"}, {"title": "input output nt work angular dart", "body": "input output work yet angular dart inputcomponentdart dart component selector inputcomponent properties const dateofbirth dateofbirth view templateurl inputcomponenthtml class inputcomponent inputcomponent input string name string dateofbirth inputcomponenthtml html name name dob dateofbirth dateofbirth updates properly name", "num": "4899", "d": "10/2015"}, {"title": "angular dart throwing implemented exception", "body": "get following exception version program bindings exception implemented exception implemented stacktrace package abstractchangedetectorchecknochanges package lifecycletick dart core listforeach package lifecycletick package lifecycleregisterwith dart async zonedelegaterun package ngzonerun exception uncaught error implemented stack trace package abstractchangedetectorchecknochanges package lifecycletick dart corepatchgrowablearraydart listforeach package lifecycletick package lifecycleregisterwith dart asynczonedart rootrun dart asynczonedart zonedelegaterun package ngzonerun dart asynczonedart customzonerun dart asynczonedart customzonerunguarded dart asynczonedart customzonebindcallback dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart microtaskloopentry dart html scheduleimmediatehelperhandlemutation undefined", "num": "4898", "d": "10/2015"}, {"title": "angular cooperate amdcommonjs", "body": "issue angularjs becomes clear angularjs nt work well amd amd commonjs seem become default loading technique typescript angular cope problem work amdcommonjs loaders like requirejs", "num": "4897", "d": "10/2015"}, {"title": "alpha router parenthesis urls", "body": "problem parenthesis characters works first try nt work page refresh returns player instead player try uri encode nt works first try route params return nt work page refresh returns instead guess problem router think parenthesis auxiliary routes refresh app router probably encode something else decode params make would probably good idea implemented within router special characters might use nt limited way regarding characters put url", "num": "4895", "d": "10/2015"}, {"title": "exception error instantiation token promise", "body": "follow quickstarthtml create run npm start browser notice like exception error instantiation token promise exception error instantiation token promise browserdomadapterlogerror anonymous function anonymous function anonymous function anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function promise asap flush original exception directive annotation found appcomponentbrowserdomadapterlogerror anonymous function anonymous function anonymous function anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function promise asap flush original stacktrace browserdomadapterlogerror anonymous function anonymous function anonymous function anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function promise asap flush error directive annotation found appcomponent new baseexception directiveresolverresolve runtimemetadataresolvergetmetadata templatecompilercompilehostcomponentruntime runtimecompilercompileinhost dynamiccomponentloaderloadasroot injectorinstantiate injectorinstantiateprovider injectornew", "num": "4892", "d": "10/2015"}, {"title": "upgrade module fires error upgrading directives without templates", "body": "trying use angularfileupload angular application try upgrade nvfileselect directive get error plans add support directives", "num": "4891", "d": "10/2015"}, {"title": "specify inputs outputs via annotations decorators", "body": "think would useful specify intputs outputs decorators similar hostbinding annotation declarative code exactly used much cleaner one big list inputs outputs top component imho javascript component selector task view template template directives task export default class task constructor thisfinishedhandler new eventemitter input taskdata set task task thistask task output finished get finishedhandler return thisfinishedhandler", "num": "4890", "d": "10/2015"}, {"title": "interpolate service", "body": "hello writing service need parse strings containing interpolated values something like use component would defeat purpose angular useful service searched angular source code thing found class seems used templates nt able use correctly wanted end nt able find anything even remotely similar service angular way parse string like without using component template could something would consider adding probably something needed well", "num": "4889", "d": "10/2015"}, {"title": "using syntax directives inputs also require", "body": "sure intentional took puzzle looked issue topic found none demonstration plunker basically use instead additional inputs also prefaced additionally values bound expressions default without use binding syntax several ways counterintuitive", "num": "4888", "d": "10/2015"}, {"title": "directive instantiating native html", "body": "hi directive instantiating native html refer plnkr link thanks", "num": "4887", "d": "10/2015"}, {"title": "router urparserparseparam decode keyvalue", "body": "router link query parameter value contains space eg hotel jurys inn dublin christchurch value properly encoded query string navigate url via browser address bar hotel parameter decoded jurys inn dublin christchurch stays jurys", "num": "4886", "d": "10/2015"}, {"title": "question support media queries style compiler", "body": "push content tag list discarding attribute applies guess want add support would need thinking wrt rules ie would possible add media query applies", "num": "4884", "d": "10/2015"}, {"title": "exported typings nt work target", "body": "include transitive typings", "num": "4882", "d": "10/2015"}, {"title": "fails load builtin types changerun cycles", "body": "lot errors like show restarting fixes", "num": "4881", "d": "10/2015"}, {"title": "provide keyword html bindings", "body": "event callback often would like access keyword mean things like course fine need element elements seems natural write something like less names think guess could also write basically could seen shortcut", "num": "4880", "d": "10/2015"}, {"title": "question templatenormalizer amp css order", "body": "parses styles push nonresolvable external style sheets bcss contains final order c b may b c nt check goes first think could cause issues styles order sensitive", "num": "4879", "d": "10/2015"}, {"title": "question htmlparser called twice compiler", "body": "called twice compilation would possible call reuse ast understand critical path potential refactoring given low priority", "num": "4877", "d": "10/2015"}, {"title": "changedetection errors events nt include debug information", "body": "eg directive fires event expression tries fired event contain property", "num": "4875", "d": "10/2015"}, {"title": "unit testing components styleurls fails", "body": "looks like try run test component fails tries load expected behaviour way avoid spec nothing special dummy test component create component using", "num": "4873", "d": "10/2015"}, {"title": "language support template", "body": "ca nt use chinese templateis supported yet set encoding", "num": "4871", "d": "10/2015"}, {"title": "dynamiccomponentloader ca nt instantiation constructor", "body": "hi team wan na use dynamiccomponentloader load components found dynamiccomponentloader instantiation constructor actually instantiation constuctor simplistic version dynamiccomponentloader confused bug use dynamiccomponentloader custom method", "num": "4868", "d": "10/2015"}, {"title": "interface abstract class naming", "body": "namingmd end impl word describes specific implementation interface interface name way identifying interface current state code abstract class compiler export class compiler extends compiler export class runtimecompiler extends compiler implements runtimecompiler export class xhrimpl extends xhr interface postmessageinterface tbc imo needs agree convention document amp enforce", "num": "4867", "d": "10/2015"}, {"title": "bindings default deps const", "body": "following fails const binding myclass tofactory buildmyclass following successful const binding myclass tofactory buildmyclass deps const valid use case const binding myclass tofactory buildmyclass deps null", "num": "4866", "d": "10/2015"}, {"title": "introduce angularentrypoint annotation decide pull ngdeps", "body": "currently use poor man pattern matching decide files rewrite swap reflection generated ngdeps instead developer able select file consider entry point test file app main method something else tell us right file need add ngdeps imports proposal introduce annotation developer applies function method dart library mytest angularentrypoint main nt methodfunction suffice transformer would look annotation rewrite file adding imports adding calls functions swapping even call would still add way people bring custom bootstrap api popular tests details let say following dart file dart library hasentrypoint import adart import bdart class app angularentrypoint void start bootstrap acomponent angularentrypoint main bootstrap bcomponent transformer identifies annotation rewrite file dart library hasentrypoint import adart import angdepsdart import bngdepsdart import bdart class app angularentrypoint void start bootstrapstatic acomponent angularentrypoint main bootstrapstatic bcomponent notes imports injected way alter line numbers better debugging experience reason calls go line opening curly functionmethod declaration entry points calling even use otherwise need resolve whole program figure types used developer split code multiple libraries get finer grained control code size practice would rarely production code multiple entry points file mostly useful tests", "num": "4865", "d": "10/2015"}, {"title": "checkbox form models scope changed model predefined controller", "body": "jsfiddle demo using latest issue submitting form checkbox keyvalue pair nt even populate scope checkbox touched changed b prepopulated ngmodel checkbox truefalse controller beforehand example active submit angularmodule app controller democontroller function var vm vmsubmit function formresults consolelog formresults controller first loaded pushed object simply outputs opposed checkbox checked submit pushed unchecked submit pushed populated quick fix course adding controller intentional seems everything else treated boolean even undefined things turn comes nt", "num": "4863", "d": "10/2015"}, {"title": "support event type information tools", "body": "assume user typed ide know complete suggestions sites turns dom event easy way know type ide recognize dom event implies ide needs preexisting schema schema something compiler needs well properly validate weather particular element event particular dom event examples element emitting change event goal event schema dom declared way toolable tools take advantage completion different kind event fired element bubble case look directive annotation derive type completion ide resolution logic would check schema derive type found check directives element see fire event type", "num": "4862", "d": "10/2015"}, {"title": "change detection infinite loop firefox", "body": "randomly found triggers cause infinite change detection loop firefox replicated one plunker scrolltofixed plugin basic dom manipulation applies styles however scroll main section sidebar section see docheck called infinitely also able trigger infinite loop firefox triggering marker within google map start animating infinite loop occur ie safari chrome unsure problem firefox find source issue", "num": "4861", "d": "10/2015"}, {"title": "using strict di", "body": "generated trying use ngstrictdi throws error using strict di nt fact cursory glance looks like nothing file uses strict di wanted make sure known going addressed", "num": "4860", "d": "10/2015"}, {"title": "support configuring global directivespipes", "body": "detailed design doc allow platform providers way load set ambient directives pipes compiler something would recommend user would useful platforms examples would etc would etc would native components case user would declare component component selector mycomp template need import platform directives directives ngfor ionview class mycomp platform ionic application component mycomp", "num": "4857", "d": "10/2015"}, {"title": "feature request viewqueries complete hook", "body": "subcomponent usecases configured data passed viewquery however hook subcomponent runs viewquery complete eg distinguish case configuration yet arrived configuration never arrive simple repro run prints would like hook complete query got subcomponent printed indexdart dart library main import package import package void main bootstrap appbodycomponent component selector appbody view template directives const subcomponent class appbodycomponent appbodycomponent viewquery subcomponent querylist subcomponents print initially saw subcomponentslength sub components subcomponentschangeslisten subcomponentsforeach subcomponent print query got subcomponent subcomponentdisplaytext hangry component selector subcomponent view template displaytext class subcomponent implements oninit aftercontentinit afterviewinit override oninit print subcomponent oninit override aftercontentinit print subcomponent aftercontentinit override afterviewinit print subcomponent afterviewinit string displaytext initial get displaytext gt displaytext set displaytext print setting display text displaytext indexhtml html please open dev console see order operations app app two components appbodycomponent subcomponent appbodycomponent using viewquery provide important configuration information subcomponent subcomponent able delay initialization configuration set app knows going set configuration largely purpose oninit however case notice subcomponentoninit called parent component able set configuration viewquery bug oninit delayed queries completed", "num": "4856", "d": "10/2015"}, {"title": "race condition two way databinding corrupt data", "body": "pointed gitter henriquefm plunker reference worst sort heisenbug behaviour occasionally desktop much often mobile clicking hero changing name clicking another hero result second hero name replaced first hero name reproduction open plunker click mr nice add foo make mr nice foo click narco rarely narco instantaneously change mr nice foo could take dozens reloads reproduce others room reported consistent immediate reproduction mobile see video attached gitter github nt support attaching videos currently reproduced chrome say reproduction rate attempt henriquefm reports better core duo diadistis reports lack reproduction reproduction htc", "num": "4855", "d": "10/2015"}, {"title": "events using wrong syntax fails silently", "body": "fails silently works actually prefer former working sugar least error would nice", "num": "4854", "d": "10/2015"}, {"title": "allow template local variables publish type information ides provide better completion", "body": "problem assume following code example userlast userfirst class myexample users list class user first string last string ide type information type information reason verify valid know number valid know type solution parameterize class row implicit index number even boolean odd boolean directive selector ngfor ngforof class ngfor constructor templateref templateref viewcontainer viewcontainer changing view api currently setting local variables done better way consistent proposal inject locals object view creation advantage currently compute regardless wether needed template injecting local object field computed class row implements locals constructor public implicit index number get even gt thisindex get odd gt thisindex means object rich api unless field actually referenced template cost computing fields furthermore using typed object get better performance locals using hashes add type templates requires read generics di dependencies constructor arguments typescript import user component types user template class myexample users list notice sets map template types real types allow compiler generate code generated code deduce generic row ngfor constructor asking templateref class extends appview changedetection var user user retrieved template context implicit var contextindex number contextindex number class appview context class templateref appview appview get context return thisappviewcontext", "num": "4850", "d": "10/2015"}, {"title": "alpha http request sent every subscribe call", "body": "subscribe multiple times observable created via http request sent plunkr intended behaviour like able pass observable services letting subscribe request", "num": "4848", "d": "10/2015"}, {"title": "range error loading", "body": "hi update projet quickstart instructions get following error loading uncaught rangeerror maximum call stack size exceeded objaddeventlistener zoneaddeventlistener zoneaddeventlistener try see happen notice infinite loop objaddeventlistener zoneaddeventlistener following arguments eventname open handler function zoneboundfn usecapturing false something wrong cyril", "num": "4847", "d": "10/2015"}, {"title": "remove deprecated ngzone api", "body": "happen roughly weeks released give people time migrate", "num": "4846", "d": "10/2015"}, {"title": "router fails generate link child route parent route loader", "body": "using loader function route child routes router link directive throws exception trying generate link nested route example plunk", "num": "4845", "d": "10/2015"}, {"title": "composing angular components angular directives", "body": "angular directives work inside angular components interact example use md directive like mdautocomplete inside angular component snippet productlistcomponent component mdautocomplete component", "num": "4844", "d": "10/2015"}, {"title": "use selectoptionngfor array objects", "body": "trouble creating select backed array objects instead strings knew angularjs using ngoptions nt seem work using alpha sample five selects three work select string simple stringbased select works fine select object via binding attempt use binding unfortunately fails two ways page loads select shows wrong value foo instead bar select option list value object object gets sent backing store instead correct value select object via event attempt get selected value event fails two ways initial load incorrect way selection option list value object object retrieved event ca nt get right value select gets cleared select object via string approach uses object works unfortunately really works using string array converting value string object back select object via json might bit better nt require string array involve using json way also sure getting event change better worse getting stringified objected ngmodelchange chocoloper helped version typescript import component formdirectives ngfor inject import routeparams interface testobject name string value number component selector app template select string directives formdirectives ngfor export class appcomponent objarray testobject name foo value name bar value testobject thisobjarray testobject thisobjarray testobject thisobjarray testobject thisobjarray strarray string thisobjarraymap obj testobject gt objname strvalue string thisstrarray stringify string return jsonstringify event event void const value string eventsrcelement value event event void const value string eventsrcelement value event string void jsonparse event functions testobject jsonparse would nt enough need thisobjarrayfind obj testobject gt objname jsonparse event name printvalues void consolelog strvalue thisstrvalue consolelog consolelog consolelog consolelog intended way seem pretty clunky another approach early alpha something silly", "num": "4843", "d": "10/2015"}, {"title": "change ngmodel property value property", "body": "order support two way databinding angular used desugars directive impeadence match element event expected name event reasonable crossplatform makes sense browser native applications proposal remove move responsibility render layer code become desugars dom rendering layer would intelligent enough know shim dom comes across element someone registers event knows register event extract value input value solution lot cross platform since rely render layer provide right kinds shim", "num": "4841", "d": "10/2015"}, {"title": "refactor upgrade better names adapter apis", "body": "currently comes two apis make angular angular components interoperable upgrades directive allows us define directive dependency component downgrades component directive bootstrap application two things feel bit weird using apis mainly names nt really fit idea upgrading angular app angular however take component want bootstrap module downgrade technically true naming says total opposite actually wan na upgrade angular component always lives module even component uses directives using downgrade component make available outer module technically correct feels weird naming perspective upgrade components components downgraded sure go back petebacondarwin suggested wrapping component component vice versa another idea came arvidkahl sth transforming component maybe although two names nt really say transforming leaving would love thoughts mhevery", "num": "4837", "d": "10/2015"}, {"title": "scroll supported webworkers", "body": "currently nt way serialize scroll event listening one throws error add basic serialization scroll events", "num": "4836", "d": "10/2015"}, {"title": "eager provider creation", "body": "eagerly create instance injector created needed platforms initialize statically even one injects", "num": "4835", "d": "10/2015"}, {"title": "rework bootstrapping imports bundles", "body": "full design doc x support configuring platform directivespipes x inject autoinit x refactor bootstrap using di bundles x x realign imports x rename make bootstrap process less verbose update decided x move imports per spreadsheet x create platform bundles x sfx bundles exports namespace additive fashion x commonjs bundle x bundle contains", "num": "4834", "d": "10/2015"}, {"title": "rework", "body": "", "num": "4833", "d": "10/2015"}, {"title": "router use routeparams angular application", "body": "use routeparams angular application javascript directive routeconfig path test id component test test testcontroller function routeparams thisrouteparams routeparams thisrouteparams always empty", "num": "4831", "d": "10/2015"}, {"title": "template work ieedge table", "body": "ieedge support table following code works fine chrome ff rxx ry sum sum rxy directives coredirectives class mycmp values x x sum number let total let lt ylength total return total diadistis provided workaround natual templatehtml author could parse template browser independent fashion support something like", "num": "4830", "d": "10/2015"}, {"title": "angular nt find module", "body": "set simple small text application using uigridrequirejs problem setup angular starts searching ngapp directive html finished loading randomly get angular error stating module gridtest could found injector modulerr failed instantiate module gridtest due error injector nomod module gridtest available either misspelled module name forgot load registering module ensure specify dependencies second argument anonymous function ensure module wrong angularjs searching module dom completely loaded source html jqgrid test page", "num": "4829", "d": "10/2015"}, {"title": "router routerrecognize path fails path query params", "body": "looks like try use shape path recognized would makes sense path recongnizer would ignore query params look path instead would look probably recongnized assuming route matching path", "num": "4827", "d": "10/2015"}, {"title": "docs", "body": "hi probably best place post follow path title directive component change detection lifecycle hooks implemented class methods use find afterviewinit description says called oncontentinit component view initialized applies components called aftercontentinit right feel free close anytime stay awesome tiago braga", "num": "4826", "d": "10/2015"}, {"title": "location search method", "body": "see service method used fetch path search query params nt already way get params would nt make sense method would return", "num": "4824", "d": "10/2015"}, {"title": "build browserify webpack", "body": "tool prefered angular team", "num": "4823", "d": "10/2015"}, {"title": "updating object member nt trigger update event object", "body": "seems update detection objects member values updated broken simple example multicomponent", "num": "4821", "d": "10/2015"}, {"title": "unit testing error thrown promise resolution causes digest already progress message next call apply", "body": "angular thrown errors digest function qwhen function throw new error test error codebase throws many errors alert developers problems lots trouble testing minimal test case showcases problem", "num": "4819", "d": "10/2015"}, {"title": "improve errors multiple template directives one element", "body": "using multiple template directives element throws errors related code angular nt report errors would nice error tells us ca nt use two template directives one element see comment plunker", "num": "4817", "d": "10/2015"}, {"title": "frameworkfeature easily load static html", "body": "suggest framework way easily include static html files directly routeconfigrouter probably every web application kind static data display example kind impressum agbconditions instructions far know one would create class annotations view component html file put routeconfig ends unneeded boilerplate code atm got factory gets html files via xmlhttp creates component puts route returns route simply instantiate factory root component use routeconfig export class htmlcomponentfactory components map constructor thiscomponents new map providecomponent htmlroute htmlroute route thiscomponentshas htmlroutehtmlpath var xmlhttp new xmlhttprequest xmlhttpopen get htmlroutehtmlpath false xmlhttpsend null export class htmlroute extends object path string htmlpath string string constructor path string htmlpath string string super thispath path thishtmlpath htmlpath thisas following root component named app var htmlcf new htmlcomponentfactory component selector app view template directives routerdirectives coredirectives routeconfig htmlcfprovidecomponent path admin htmlpath adminhtml admin htmlcfprovidecomponent path impressum htmlpath impressumhtml impressum export class app buttons string router router loc location constructor router router loc location thisrouter router thisloc loc thisbuttons admin impressum introduce something working like framework would create pull request nt much experience javascripttypescript angular stuff", "num": "4815", "d": "10/2015"}, {"title": "dependency reactivexrxjs version available npm", "body": "think packagejson need update latest version reactivexrxjs log npm install npm err found npm err npm err reactivexrxjs npm registry npm err bug author publish npm err specified dependency npm err npm err note also install npm err tarball folder http url git url npm err system darwin npm err command node usrlocalbinnpm install npm err cwd npm err node v npm err npm v npm err code npm err ok code updating version local copy stuck issue npm install angularsrcs preinstall users node toolsnpmchecknodemodules purge npm dependencies stale unknown state purging", "num": "4814", "d": "10/2015"}, {"title": "npm package bloated", "body": "seems like lot compressed better still quite lot better", "num": "4812", "d": "10/2015"}, {"title": "routeparams nt understand getting arrays format understood", "body": "using alpha able pass array strings query param like produces routeparams would like able produce routeparams using syntax well reason previous version angularjs app used syntax calls external apps would like able support migrated version unfortunately appears routeparams nt support syntax would helpful routeparams able understand something might supported future need redesign apps use shorter syntax note generate url top issue able use two different routerlink formats", "num": "4811", "d": "10/2015"}, {"title": "dart failing build", "body": "upgraded get following running pub build", "num": "4810", "d": "10/2015"}, {"title": "using routerlink navigate another component invoke oninit method", "body": "using angular version routerlink navigate child component use babel transpile code following example dashboard component winjs splitterview navigation area splitview link display people component content area split view problem click people link navigation area dashboard component see constructor people component called oninit method dom manipulation oninit ca nt put dom manipulation constructor work dashboardhtml javascript splitview pane area people appjs javascript import component view bootstrap bind import routeconfig routerbindings routerdirectives routerprimarycomponent import reflectmetadata import winjs import peoplecomponent peoplepeople component selector dashboardapp view templateurl dashboarddashboardhtml directives routerdirectives routeconfig path people component peoplecomponent people class dashboardappcomponent constructor bootstrap dashboardappcomponent routerbindings bind routerprimarycomponent tovalue dashboardappcomponent peoplehtml javascript peoplejs javascript import component view bootstrap import reflectmetadata import globalize component selector people view templateurl peoplepeoplehtml export class peoplecomponent constructor gets called click people dashboard", "num": "4809", "d": "10/2015"}, {"title": "improve routing regular expressions", "body": "think url property manage regular expressions defaultoptional parameters", "num": "4808", "d": "10/2015"}, {"title": "update reactivexrxjs", "body": "hello guys update reactivexrxjs typings fix alpha help compilers pr looks like updating dependencies requires mac nt done wo nt simple work might want update imports done example ping jeffbcross alexeagle robwormald", "num": "4806", "d": "10/2015"}, {"title": "css firstchild selector work using ngfor", "body": "seems like using render list items want use selector work expected looks like right first item tag inserted rendering ends html probably intentional taken consideration would break expected behaviour fix might good idea", "num": "4805", "d": "10/2015"}, {"title": "uncaught typeerror mvalues function", "body": "trying quickstart chromium browser throws error loading page error message uncaught typeerror mvalues function line return getvalues arrayfrom mvalues arrayfrom mkeys browser chromium ubuntu problems using firefox", "num": "4804", "d": "10/2015"}, {"title": "router allow di canactivate decorator", "body": "would nice decorator would resolve additional bindings provided instance check want step depends service created could something like aware passed function much help want use anything else beyond", "num": "4802", "d": "10/2015"}, {"title": "hidden attribute nt get updated dart", "body": "next component dart component selector myapp view template ngmodel example directives const formdirectives class app bool true click toggle button hidden however variable correctly changed typescript version works correctly next plunker sample", "num": "4801", "d": "10/2015"}, {"title": "feature comments tutorial pages", "body": "new tutorial pages extremely well written easy follow albeit typos however ran trouble section hero editor suggest add styles omission styles value array rather string shown took quite work sure lots others seen worked would great able add comments tutorial people see error like comment new readers could scroll see solution", "num": "4800", "d": "10/2015"}, {"title": "fire output property even outputs decorated w output", "body": "consider component hero detail hero fullname delete class herodetailcomponent input hero hero output deleted new eventemitter ondelete thisdeletednext thishero bind user clicks delete button inside parent method called twice remove either array decoration parent method called number parent method calls increase one additional decoration maintain number mentions output gt still mean single call parent method", "num": "4798", "d": "10/2015"}, {"title": "cssclasses get confused reload perhaps due commandcompilermergeattributevalue", "body": "alpha added ability reload component via canreuse routerrenavigate end css getting messed specifically two button bars component use css defined icons buttons bars component reloads buttons end wrong css end sharing styles button two icon styles get messed one button bar effect occur think problem might looks like concatenating styles two sources sure reload route away return via back button end three icon styles etc simplified version buttonbar component typescript angular decorators services import component view update rewrote button bar completely longer happens us new design", "num": "4795", "d": "10/2015"}, {"title": "pr proposal animationbuilder add styles animation completes", "body": "tl dr basically want able replace styles added animation completes long version want solve problem animating possible far animate fixed size replace currently piece code memory current working code plnkr repro problem code verbose trying things one animation actually creating two different animations returns new animation came solution would like feedback maybe better option aware proposal plnkr repro custom building see proposal one animation lines less current way clearly important point fact using one animation note styles would nt part animation would added everything completed animations content may dynamic fixed sizes would nt work comment lines add cases see fixed size ca nt see dynamic div nt know specific case opened issue instead sending pr know think", "num": "4794", "d": "10/2015"}, {"title": "using ngif ngfor throws errors", "body": "add element also causing variable set null even though expression returning true trying show element expression returns true show otherwise plunker reproducing issue way", "num": "4792", "d": "10/2015"}, {"title": "ngzone stream future notifies known asynchronous work finished", "body": "discussion pending thanks", "num": "4791", "d": "10/2015"}, {"title": "change detector support short circuiting", "body": "support short circuiting ternary operator working proto dynamic mode todo pr support pregen jit add coalesce support cc vsavkin related", "num": "4790", "d": "10/2015"}, {"title": "documentation error", "body": "section styling heroes styles property backquoted also needs brackets styles", "num": "4787", "d": "10/2015"}, {"title": "jspm loading right source", "body": "hey tried start working project back may wanted upgrade newest alpha release try new stuff every version newer seems break jspm found potentially unhandled rejection error loading scriptsapp found warning nonerror used tried fix systemconfig run problem file extensions used loading routerdevjs hope someone help", "num": "4786", "d": "10/2015"}, {"title": "error docs", "body": "lines read instead running former chrome gave exception original exception", "num": "4785", "d": "10/2015"}, {"title": "gulp error", "body": "get project repository github try run project works first time time automatically disconnects shows following errors sourabh npm run gulp gulpproject gulp gulp using gulpfile starting tslint starting compilets appts error find module componentsnavnav typescript semantic error typescript emit succeeded errors finished tslint finished compilets starting serve finished serve ms starting default finished default \u03bcs throw er unhandled error event error watch nodemodulesgulpnodemodulesgulputilnodemodulesdateformatnodemodulesmeownodemodulesnormalizepackagedatanodemodulesvalidatenpmpackagelicenseindexjs enospc exportserrnoexception fswatcherstart objectfswatch createfswatchinstance setfswatchlistener eventemitternodefshandlerwatchwithnodefs eventemitternodefshandlerhandlefile eventemitter fsreqwraponcomplete npm err linux npm err argv usrlocalbinnode usrlocalbinnpm run gulp npm err node npm err npm npm err code elifecycle npm err gulpproject gulp npm err exit status npm err npm err failed gulpproject gulp script gulp npm err likely problem gulpproject package npm err npm npm err tell author fails system npm err gulp npm err get info via npm err npm owner ls gulpproject npm err likely additional logging output npm err please include following file support request npm err", "num": "4783", "d": "10/2015"}, {"title": "returning false event longer cancels prevent default", "body": "prevent default last statement longer works new compiler", "num": "4782", "d": "10/2015"}, {"title": "broken links warnings api docs", "body": "api docs contain links following terms ca nt resolved probably nt exist appviewmanager compiler componentinstruction connection elementref jsonpbackend locationstrategy ngcontent platformref protoviewref also ambiguous link onchanges exported lifecyclehooks core unbalanced backticks exported lifecyclehooks core invalid errors router render docs please fix asap", "num": "4781", "d": "10/2015"}, {"title": "expose viewresolver extended overridden", "body": "expose viewresolver corelinkerviewresolverts viewresolver accessible ng module please open extend modify behavior override injector directiveresolver available curious viewresolver nt well since provides much function", "num": "4780", "d": "10/2015"}, {"title": "remove leaking roottestcomponent public api", "body": "currently accidentally leak via intentional likely result poor reexporting", "num": "4776", "d": "10/2015"}, {"title": "classes name different libraries trample protochangedetectorfactories", "body": "since protochangedetectorfactories map keys based nonqualified type names vsavkin expects tbosch latest compiler changes fix bug", "num": "4774", "d": "10/2015"}, {"title": "implementation ngfor render dom rows shown", "body": "mobiles performance much better render items need would amazing lists lot rows look implementation ionic collectionrepeat adamdbradley perrygovier mhevery", "num": "4773", "d": "10/2015"}, {"title": "querylist initially called empty list", "body": "seems wrong since nothing changed went empty list empty list expect first changes stream event come least single item found", "num": "4772", "d": "10/2015"}, {"title": "exception given incorrect incomplete stack trace", "body": "stack trace pointing abstractchangedetector pointing somewhere else reproduction case internal bug stacktrace package abstractchangedetectorhydrate package appviewmanagerutilshydrateview package appviewmanagerutilshydrateviewincontainer", "num": "4771", "d": "10/2015"}, {"title": "components created multiple times using ngfortemplate", "body": "using new ngfortemplate use collection rendered components new instances objects created beginning constructor called multiple times let describe problem code see full code plunker appts using list component creating objects setting property value expected rendered constructor listts using ngfortemplate listrowts defining template used ngfor custom content defined component mycustomlistrowts initializing property value value overwritten must rendered mycustomlistrowts defining content used listrow rowid customprop initializing property value value overwritten must rendered results current result expected result tbosch think", "num": "4769", "d": "10/2015"}, {"title": "form input valuechanges fires unexpectedly", "body": "binding form inputs valuechanges observable methods attached elements trigger valuechanges fire unexpectedly reproduction steps type input box observe valuechanges observable logging values expected click button outside form observe observable logging values unexpected cc vsavkin", "num": "4768", "d": "10/2015"}, {"title": "error npm package", "body": "getting npm error use npm download", "num": "4764", "d": "10/2015"}, {"title": "alpha router query param string arrays", "body": "potential bug string results query param value js thisrouternavigate userlist page gt users page actual gt users expected question update duplicate intended complex query params nt supported example js thisrouternavigate userlist filtering name andrew age gt users filtering object actual gt users filtering name andrew amp filtering age expected", "num": "4760", "d": "10/2015"}, {"title": "routing error", "body": "appts import component view coredirectives bootstrap import routeconfig routerdirectives routerbindings import navbarapp componentsnavbarnavbar component selector app routeconfig path navbar component navbarapp navbarcmp view template directives coredirectives routerdirectives class app bootstrap app routerbindings navbarts import component view component selector navbarapp view template hiii export class navbarapp indexhtml angular quickstart", "num": "4759", "d": "10/2015"}, {"title": "ngapp application css media queries working properly", "body": "angularjs app css media query working properly media query defined small screen effecting globally works resize browser inspect element issues browsers like chrome firefox tested browser works remove angularjs media query media minwidth maxwidth colsidebar colcontent large screen browser sidebar shows width global css large screen colsidebar colcontent", "num": "4757", "d": "10/2015"}, {"title": "edge browser disconnects running full unit tests campaign", "body": "found pr edge disconnects executing tests running full unit test campaign investigations showed particular tests causing without good reason executing individually successful tests skipping workaround make campaign complete successfully edge", "num": "4756", "d": "10/2015"}, {"title": "alpha traceurruntime", "body": "heard angular alpha version need use traceurruntime angular alpha version prpgram running perfectly traceurruntime remove traceur error uncaught typeerror arrayfrom function", "num": "4754", "d": "10/2015"}, {"title": "map object android polyfill", "body": "overview issue object used throughout corefacadecollectionts cause one following errors app bootstrap process android errors error source corefacadecollectionts motivation use case ca nt get stack trace see arrayfrommap called seems like may getting called bootstrap process could affect android browsers browsers operating system seems affect android browsers confirmed affects android stock browser chrome nt affect firefox tested android", "num": "4751", "d": "10/2015"}, {"title": "dart transformers depend fact run checked mode", "body": "", "num": "4749", "d": "10/2015"}, {"title": "host bindings execute right view component", "body": "currently execute host bindings right check inputs component correct instead execute right check view component", "num": "4748", "d": "10/2015"}, {"title": "query changes dart streams need closed", "body": "think lifecycle component querying querylist object subscription always exactly release references told enough also close stream releasing simple adding", "num": "4747", "d": "10/2015"}, {"title": "usage changedetectionstrategyonpush", "body": "read article vsavkin change detection angular iam little bit confused usage understood component changed property replaced example result list dimitri laura divs although array nt replaced component selector app changedetection changedetectionstrategyonpush view template class app input names name string name dimitri constructor settimeout gt thismodelspush name laura", "num": "4746", "d": "10/2015"}, {"title": "sketchy blockscoped var export initializers", "body": "break typescript next looks wrong reported vladima", "num": "4742", "d": "10/2015"}, {"title": "update plunker templates", "body": "especially might something else", "num": "4738", "d": "10/2015"}, {"title": "consider switching prefixfoo banana style prefixfoo", "body": "keep making mistake using wrong one time currently results frustrating silent failure mental model databind via oh make twoway biding intuitive currently nt work wanted switch mental model would say eventbind via oh make twoway binding relatively big syntax change agree transitional period work prints deprecation warning compilation", "num": "4737", "d": "10/2015"}, {"title": "error people write two way databinding prefixfoo rather prefixfoo", "body": "write incorrectly nt get warnings errors nothing happens hard debug", "num": "4736", "d": "10/2015"}, {"title": "router default hash location", "body": "build systems webpack push state enabled default definitely cause confusion frustration majority developers especially using live reload mechanism", "num": "4735", "d": "10/2015"}, {"title": "output property throw error plural metadata", "body": "output property throw error plural metadata", "num": "4734", "d": "10/2015"}, {"title": "warn unfulfilled directive dependencies", "body": "set directives collaborate get stuff done eg include one might get poor error messages stuff null example declaring view dependency ngmodel rather formdirectives results would great either warned missing dependency included default much magic maybe throwing error saying please import formdirectives would best", "num": "4733", "d": "10/2015"}, {"title": "css shimming transformers break rules", "body": "eg gets changed", "num": "4730", "d": "10/2015"}, {"title": "hashlocationstrategypath append query params", "body": "url path returns refreshing browser url turns", "num": "4729", "d": "10/2015"}, {"title": "issue double click nested route break router outlet", "body": "firstly soory plunker nt able run code import component provide bootstrap import routeconfig routerdirectives routerproviders routerprimarycomponent component template export class component template export class component template export class component directives routerdirectives template gt routeconfig path component path component export class component selector app viewproviders directives routerdirectives template routeconfig path component path component class app bootstrap app routerproviders provide routerprimarycomponent usevalue app recompile cas see browser simulate problem double click click click get click back everything work click everytime get error used mgechev build problem simulated chrome firefox opera", "num": "4728", "d": "10/2015"}, {"title": "working", "body": "indexhtml appts import component view bootstrap component selector myapp view templateurl apphtml class myapp bootstrap myapp error console get found object definepropertyvalue object definepropertyvalue globalupgradesystemloaderefetch system globalupgradesystemloaderefetch system globalupgradesystemloaderefetch system anonymous function potentially unhandled rejection error loading app found warning nonerror used heard angular alpha need traceure tried remove still working", "num": "4727", "d": "10/2015"}, {"title": "error angularprotractordts", "body": "hi getting error angular alpha upgraded nt know problem since think conflicts exports using visualstudio error get anyone solution commenting line seems like workaround nt feel right", "num": "4725", "d": "10/2015"}, {"title": "longer references jasminedts", "body": "looks like typings npm distribution longer referencing intentional something gone wrong builds", "num": "4723", "d": "10/2015"}, {"title": "", "body": "using npm version node version tried install running npm install throws errors npm err linux npm err argv usrlocalbinnode usrlocalbinnpm install npm err node npm err npm npm err code etarget npm err notarget compatible version found npm err notarget valid install targets npm err notarget npm err notarget npm err notarget likely problem npm npm err notarget cases one dependencies requesting npm err notarget package version nt exist npm err please include following file support request npm err", "num": "4722", "d": "10/2015"}, {"title": "set property lastinbinding undefined", "body": "attaching events template throws error eg following template works fine testnamevalue following one throws error moment add event testnamevalue looks like related issue", "num": "4721", "d": "10/2015"}, {"title": "code linted", "body": "something like example worth words", "num": "4719", "d": "10/2015"}, {"title": "asynctestcompleter exported", "body": "longer exported", "num": "4715", "d": "10/2015"}, {"title": "rename roottestcomponent componentfixture", "body": "filing issue discussion juliemr take look simple example unit test ts buildercreateasync testapp roottestcomponent gt let instance roottestcomponentdebugelementcomponentinstance let element roottestcomponentdebugelementnativeelement stuff roottestcomponentdetectchanges assert stuff asyncdone presently distinction hard define calling former component fixture however makes role bit clear cc mhevery", "num": "4711", "d": "10/2015"}, {"title": "expose static data components templates", "body": "need way read static data component template also need way reference static data resolved decorators eg decorator added party module example current workaround plnkr plnkr constructor might related related", "num": "4707", "d": "10/2015"}, {"title": "individual dts files included npm distribution", "body": "release reason nt include modulebymodule dts files alongside corresponding js files likely issue npmpublish script possibly broccoli tree", "num": "4706", "d": "10/2015"}, {"title": "fix internal typescript build step allow nodestyle resolution", "body": "current build process uses classic style module resolution inside broccoli tree prevents usage style imports internally works work prevents leveraging newstyle typings resolution inside build step prevents example using observable subject andor extendinginheriting la eventemitter discussed alexeagle irl", "num": "4704", "d": "10/2015"}, {"title": "node inspector sourcemaps", "body": "problem path source maps cjs node use node inspector problems reading correct sourcemaps path example workaround problem editing generated map file correct ts file path fixed version problem debugging angular server", "num": "4701", "d": "10/2015"}, {"title": "reactlike context", "body": "hello datahandling frameworks extremely usefull got context accessible widget tree example redux current implementation must pass state widgets like common pass everywhere top bottom react problem solved internal context problem solved", "num": "4698", "d": "10/2015"}, {"title": "routersubscribe nt fire using routernavigate", "body": "routersubscribe fires manually navigate different url nt using routernavigate", "num": "4695", "d": "10/2015"}, {"title": "auxiliary routes targeted via url via routerlink", "body": "auxiliary routing example test code navigates view auxiliary routing via url far see seem way navigate view using routerlink looking source code maybe purpose left guessing use feature see also", "num": "4694", "d": "10/2015"}, {"title": "auxiliary routes need proper documentation", "body": "moment clear auxiliary routes used test code contains trivial example leaves us guessing intent feature seems target one component named routerview one configured routeconfig path name name routerview flexibility seems parameters pass component named router view select auxiliary route path get error purpose auxiliary selector path offer possibility passing parameters stands looks view one main ie unnamed routerview several auxiliary ie named routerviews named router views fixed main routerview changed via routing path auxiliary routerview router theory possible use nested views functionality seems exposed least could see trigger could ok leaves us auxiliary views configured via parameter passing could missing something source code designed auxiliary routings different multiple view feature uirouter philosophy uirouter one could change auxiliary views together main view", "num": "4693", "d": "10/2015"}, {"title": "isolate scope specified elements", "body": "hello creating nested directive similar create directives communicate problem nesting scopes would like access outer scope inside foobar however order use way isolate scope select variables case eg reverse isolation specifying variables inherited using wo nt either want keep directive reusable without listing variables needs access outer scope", "num": "4692", "d": "10/2015"}, {"title": "docs tests absent travis", "body": "errors described introduced point nt enforce green travis", "num": "4690", "d": "10/2015"}, {"title": "docs appear editor decorator properties", "body": "example would expect get completion includes description template vs templateurl complete copy arguments type literal position could share interface supertype componentmetadata docs would appear editor also angulario", "num": "4689", "d": "10/2015"}, {"title": "animation extra change detection triggered browserdetails", "body": "constructor calls turn subscribe code executed inside angular zone triggers extra change detection runs something like notice wrapping inside would need injected matsko robertmesserle thoughts", "num": "4688", "d": "10/2015"}, {"title": "transformer crashes pub invalid syntax", "body": "internal issue", "num": "4687", "d": "10/2015"}, {"title": "dispose ngzone", "body": "todo applicationref dispose ngzone server rendering bootstrap application request reuse much providers get away subsequent request moment sure manages something like use keep track calls made bootstrap way render page calls done client", "num": "4685", "d": "10/2015"}, {"title": "chore router rename routeroutlet routerviewport", "body": "called change also introduced concept viewport directives directives allow structural changes dom avoid confusion came new name read discussion viewport directives terminology nt exist anymore directives template reference therefore like propose new name btford wdyt", "num": "4679", "d": "10/2015"}, {"title": "alpha query", "body": "hi guess query lifecycle changed alpha ca nt get querylist neither constructor oninit methods check console plunkr stay awesome tiago braga", "num": "4678", "d": "10/2015"}, {"title": "angular build dart sdk", "body": "next dart sdk release build step buildpubbuilddart fails tries build angular benchmarksexternal angular uses depends packages use dart profiler package removed failure dart analyzer overriding dependency newer analyzer without dart profiler enough think angular changed ship version built sdk", "num": "4677", "d": "10/2015"}, {"title": "min quickstart work", "body": "hey guys tried quickstart worked used try include newer version gt alpha failed seems appjs found locally module loader searchs module registry failed angularjs able resolve myapp component", "num": "4676", "d": "10/2015"}, {"title": "feature request element level bind event behavior", "body": "apologies advance already issue regarding even applicable already implemented proposing method basically abstract arbitrary portion dom sort enclosure applydigest cycles analogues touch parts inside unless element marked requiring update idea behind help performance inside eg ngrepeat dozens even thousands objects iterated application predict given object going change mark model needing change necessitating inspection single attribute instead attributes object bound element far know far react etc work anyway several directives already sort implement behavior notably bindonce notice bit buggy poorly supported suspect common enough use case vital enough performance included core angular", "num": "4674", "d": "10/2015"}, {"title": "scope filter longer watched angular", "body": "changing value scope used angular filter longer trigger update filter u change angular version loaded html work fine change intended regression", "num": "4673", "d": "10/2015"}, {"title": "publish angular next", "body": "hourlynightly build available npm would allow people verify fixes easily head without waiting release give us quicker feedback dogfood users", "num": "4671", "d": "10/2015"}, {"title": "polymer papermenubutton paperdropdownmenu nt work", "body": "hi two elements nt work fine anomalies errors different every browser tested chrome firefox edge app polymer elements angular directives work fine instead thanks", "num": "4670", "d": "10/2015"}, {"title": "quickstart requires users add typescript compiler options hand", "body": "quickstart would awesome installation instructions simply quite get typescript errors editor unless also run another command great could make working installation literally single command easy users run wrong typescript version get error flag nt exist eg tried earlier alpha installed could tell run ignore see feels bit leaky users need know flags required first minutes firsttime user experience polishing microoptimizations worth considering add flag another release users could easily follow older instructions miss already file command fail need edit file instead propose add bit magic script runs command hacking working directory parent piping errors hide typescript installed maybe user plans use file nt created likewise already exists note would still need explain tsconfig exists missing one flags", "num": "4669", "d": "10/2015"}, {"title": "docs decoratorfactory classes users navigate decorator", "body": "example demo start import component immediately show cool navigate definition symbol read documentation guaranteed correct docs version unlike blog post documentation says okay click definition observing probably lives type declared following line find want makes demo kind lame unneeded extra hop likely common jump docs use case also java jokes commence users see everything factory still change reason way mhevery docs nt appear properties like templateurl redeclared separate metadata class link syntax navigable vscode", "num": "4668", "d": "10/2015"}, {"title": "safari undefined errors since", "body": "implementation appears causing issues safari browsers multiple projects seem issues eg basic detailed", "num": "4665", "d": "10/2015"}, {"title": "feat http jsonp jsonp callback", "body": "jsonp question may missing something documentation messing around http jsonp able get http calls working fine attempted api supported jsonp curiosity fell back angular self threw jsoncallback url avail got thinking default callback jsonp requests angular thanks advance", "num": "4663", "d": "10/2015"}, {"title": "router get access router service within canactivate hook", "body": "implementing user authentication example app looking would best approach found order flexible go require authentication specific routes problem point redirect point least navigate desired route hook thought could access class looks possible thus lead post possible access way could new feature", "num": "4661", "d": "10/2015"}, {"title": "support incremental work tests", "body": "switching using bundles longer possible start work iteratively possible fix revert old perfile loading systemjs starting use different target travis", "num": "4659", "d": "10/2015"}, {"title": "properties binding angular", "body": "hi currently trying understand properties binding angular struggling component javascript import component view bootstrap component selector mycomponent properties name view templateurl templatesapphtml class mycomponent name string bootstrap mycomponent view html name page display page nothing add literal name view literal gets displayed test moreover initialize name constructor class works gets displayed trying set property component though html wrong fyi using", "num": "4655", "d": "10/2015"}, {"title": "update typescript version used plunkers", "body": "plunker template uses ts version pulled codeangularjsorg version buggy get upgrade please related", "num": "4653", "d": "10/2015"}, {"title": "ngmodel directive updating host data dart", "body": "next component dart component selector myapp view directives const formdirectives template query text searchquery class appcomponent string searchquery hello onchangemeclicked print searchquery prints old value searchquery change print searchquery prints change new value inputtext updated click inputbutton clicking console appears correctly changes variable inputtext updated also text updated correctly cases clicking input button editing inputtext", "num": "4646", "d": "10/2015"}, {"title": "add tslint check underscore member visibility internal", "body": "needed prevent methods libraryvisibility dart exposed dts files produced typescript compiler", "num": "4645", "d": "10/2015"}, {"title": "upgrade dart transformers pkg use protobuf", "body": "faster smile", "num": "4644", "d": "10/2015"}, {"title": "querylist querychangessubscribe function", "body": "changelog throws see containerts works querychangessubjectsubscribe though sure documentation issue bug", "num": "4635", "d": "10/2015"}, {"title": "rx observablenext trigger callback registered subscribe", "body": "unit tests seem fail latest releases created class fetches svg element caches returns rx observable js import eventemitter import http response import animation animation let cache map new map export class iconstore queue map new map private http constructor http thishttp get url string let iconstore let subject eventemitter new eventemitter subject subjecttorx cachehas url delay next tick subject returned otherwise subscriber notified next tick called return todo make sure happens promise returned animationraf function subjectnext cacheget url clonenode true else let pending boolean thisqueuehas url pending thisqueueset url let subs thisqueueget url pending subspush subject else subspush subject thishttp get url map response gt svg response subscribe element gt cacheset url element subsforeach sub gt subnext elementclonenode true thatqueuedelete url return subject function svg response response node let parser domparser new domparser let doc document parserparsefromstring responsetext imagesvgxml let svg docqueryselector svg return svgclonenode true small unitintegration test js import asynctestcompleter aftereach beforeeach describe expect inject spyobject import injector bind import mockbackend mockconnection connectionbackend baserequestoptions responseoptions response http import iconstore icon const svgglyphhtml const fakeurl glyphsvg export function main describe iconstore gt let injector injector let store iconstore let backend mockbackend let glyph node let response class backendconnectionspy extends spyobject onestablish constructor super thisonestablish thisspy onestablish function createglyphnode node let container documentcreateelement div containerinnerhtml svgglyphhtml return containerfirstchildclonenode true seems like tests callback registered subscription never get triggered tried debug confirm code reached works reaches seems triggered anything failing tests seen source code located pointers happening maybe missed something misunderstood things work", "num": "4634", "d": "10/2015"}, {"title": "componentrouter templateurl lifecycle hook angular", "body": "application angular use property template directive onactivate works fine use property templateurl onactivate nt work template displayed fine exemple javascript angular module test directive testcomponent q function q return templateurl templatepath onactivate nt work template hello onactivate works controlleras ctrl controller q test function test q consolelog controller testprototype onactivate function consolelog onactivate bug", "num": "4633", "d": "10/2015"}, {"title": "postdata options set header", "body": "nt add content type header header remains textplain", "num": "4632", "d": "10/2015"}, {"title": "problem ngcontent within ngfor", "body": "component within one rendered component content listts component using list component appts see code problem maybe tbosch see problem", "num": "4631", "d": "10/2015"}, {"title": "router outlet contents disposed component throws exception", "body": "came across issue due leaving binding component component throws exception loaded component contents displayed go another route contents component threw exception still left behind navigate back forth home routes plunk reproduce based alpha", "num": "4630", "d": "10/2015"}, {"title": "shadow css import firefox", "body": "due trick transform css string rules fails firefox import rule see currently trycatch avoid error means rules lost transformationthe new test introduced yjbanov check import rules modified succeed firefox", "num": "4628", "d": "10/2015"}, {"title": "binding radio button form using angular", "body": "hi bind radio button using best regards", "num": "4627", "d": "10/2015"}, {"title": "componentrouter use canactivate angular application", "body": "use canactivate method componentrouter angular application", "num": "4626", "d": "10/2015"}, {"title": "feat router links without leading slash", "body": "matsko igorminar talked past currently require first element start either apps one level routing distinction routing child routing sibling irrelevant nice omit leading change behavior generating instruction subsequent link match link dsl array leading follows look child route named look sibling route named exist throw error explaining developer must provide leading link unambiguous otherwise one exists use resolved instruction neither route matches throw error telling developer help address developer confusion wrt routes come hackathons", "num": "4623", "d": "10/2015"}, {"title": "refactor router rename name routeconfig", "body": "john papa proposes rename reduce confusion purpose would become cc johnpapa", "num": "4622", "d": "10/2015"}, {"title": "ca nt add event listener output binding without body", "body": "example nt work html mynamevalue works perfectly well html mynamevalue see plunker stackoverflow question", "num": "4615", "d": "10/2015"}, {"title": "angular material", "body": "jelbourn sorry open thread couple questions date expect start using angular material since ready recomend framework need keep things going ready change angular material regarding mdinputcontainer directive choose way avoid retargeting events ids validation thing need build wrapper around ng material want like experts mdinput access container host call function could nt query parent also seems bit less intrusive thank stay awesome tiago braga", "num": "4612", "d": "10/2015"}, {"title": "custom events fired twice", "body": "plnkr", "num": "4611", "d": "10/2015"}, {"title": "colspan recognized native element tdth table elements", "body": "need bind colspan td element unfortunately working templatehtml error way add native properties elements", "num": "4610", "d": "10/2015"}, {"title": "systemjs loading well dependencies alpha cdn", "body": "html angular quickstart html body height systemconfig packages defaultextension js systemimport app html angular quickstart systemconfig packages defaultextension js html body height systemimport app", "num": "4608", "d": "10/2015"}, {"title": "attribute decorator able use parameter name name property", "body": "right specify attribute name parameter attribute decorator would interesting able specify attribute name directly naming correctly corresponding parameter order avoid duplicates code example think", "num": "4607", "d": "10/2015"}, {"title": "feature hot reload support", "body": "hey guys right playing react webpack found hotreload feature extremely powerful developing apps edit html dom preserve js variables architecture support hope adapt feature", "num": "4606", "d": "10/2015"}, {"title": "pipes chaining pipe slice", "body": "chaining pipe broken see quick repro", "num": "4605", "d": "10/2015"}, {"title": "implement zonescheduler observable eventemitter integration", "body": "background see insightful useful comment initial thoughts could provide nice performance testability boosts observable things run outside zone trigger ui updates things like async pipe would provide easy way hook appropriate zone internal implementation observableeventemitter would provide nice place implement additionally could possibly leverage virtual scheduler tests fine grained control cc jeffbcross vsavkin jeffbcross could use brainpower", "num": "4603", "d": "10/2015"}, {"title": "conditional ternary operator shortcircuited template expressions", "body": "expressions template branches conditional ternary operator evaluated therefore expression like executed simple plunk demonstrating issue", "num": "4599", "d": "10/2015"}, {"title": "content projection prioritize ngcontent projection selector specifity", "body": "eg would first find nodes fit selector would use remaining nodes filter ones match selector nodes nt match selector would go without selector projection independent order elements", "num": "4598", "d": "10/2015"}, {"title": "clangformat understand regexps", "body": "demands formatted", "num": "4596", "d": "10/2015"}, {"title": "min quickstart javascript documentation shows typescript code", "body": "shows typescript tutorial show javascript tutorial", "num": "4595", "d": "10/2015"}, {"title": "proposal directive receive events fired", "body": "eg export class checkbox output change eventemitter new eventemitter hostlistener change eventtargetvalue onchange event", "num": "4593", "d": "10/2015"}, {"title": "build support serving examples without full", "body": "since targets nt work unless manual done prevents incremental development examples makes debugging errors extremely hard", "num": "4591", "d": "10/2015"}, {"title": "add test testtransformintegration transforming deferred libraries", "body": "", "num": "4590", "d": "10/2015"}, {"title": "fix async pipe works http proper observables", "body": "http returns observables proper async pipe nt work fixed work either proper observables abstraction eventemitter refactor complete", "num": "4588", "d": "10/2015"}, {"title": "deferred import causes incomplete ngdepsdart", "body": "", "num": "4587", "d": "10/2015"}, {"title": "wrong transpilation type specified input", "body": "consider following code gets transpiled add type works nicely typescript input myprop string lt missing type transpiles decorate prop metadata design type string yay myclassprototype myprop nt first case fallback default type ca nt reproduce plnkr ca nt see transpiled code plnkr get pointing", "num": "4585", "d": "10/2015"}, {"title": "classes added original element removed host class property", "body": "code css class added original element removed directive property directive selector myitem host class item export class myitem component selector myapp view template directives myitem export class app remove yellow css class element remove yellow css class element", "num": "4583", "d": "10/2015"}, {"title": "ngcontent projection working selects", "body": "example third selects finding children attribute export class myitem component selector myapp view template left right directives myitem export class app working working", "num": "4582", "d": "10/2015"}, {"title": "unable create dynamic anchornames dynamiccomponentloaderloadintolocation", "body": "need create unique anchornames ngfor loop use dynamiccomponentloaderloadintolocation litte example see resulting html look something like could load dynamic content dynamiccomponentloaderloadintolocation table element problem mustache get replaced way create anchors provide dynamiccomponentloader something else anchor see stackoverflow question", "num": "4581", "d": "10/2015"}, {"title": "add support observe watch variable property", "body": "something like onchanges nt works works props eventemitter return rxobservable returns first watchobserve variable vicb mhevery", "num": "4576", "d": "10/2015"}, {"title": "code font weight documentation", "body": "hello find font used code samples angulario really hard read problem comes bold style remove class becomes much readable ex following page try changing code style dev tools chance could consider style update", "num": "4574", "d": "10/2015"}, {"title": "test text bindings bound elements anymore", "body": "new compiler introduced elements simple text binding like bound element anymore writing tests means nt appear leads write less readable tests relying something like tests less readable fragile plan fix improve", "num": "4573", "d": "10/2015"}, {"title": "add helper testlib", "body": "problem currently using test injector async test wordy unintuitive js import inject asynctestcompleter stuff inject classa classb asynctestcompleter b async gt asyncdone split code path anyway async notasync let make explicit js import injectasync stuff injectasync classa classb b done gt done could deprecate asynctestcompleter separately nt want two ways thing thoughts cc wardbell see version cc vicb thoughts", "num": "4572", "d": "10/2015"}, {"title": "getting started tutorial missing npm install traceur step", "body": "hi going step given updated getting started page launch liveserver opensrc browser could nt load page nt find traceurruntimejs file think npm install package command given tutorial missing traceur package currently think like correct wrong thanks balram", "num": "4571", "d": "10/2015"}, {"title": "error message excessively long missing builtin directives", "body": "missing example throws note message long depending html structure print entire tree error message represents piece code error much shorter repro repro ps ngfor ngif empty error message intended", "num": "4569", "d": "10/2015"}, {"title": "types property directives incompatible using routerlink routeroutlet", "body": "started seeing issue compiling new typing files specifically get error adding routerlink routeroutlet directives array seems miss match types expected directives array something related directive definitions change anything special populating array injected directives also change typings compiles fine using typescript tsc watch commonjs emitdecoratormetadata experimentaldecorators jsx react appts link code error message error argument type templateurl string directives injectablereference assignable parameter type templateurl string template string directives type pipes type types property directives incompatible type injectablereference assignable type type type injectablereference assignable type type type injectablereference assignable type message compilation complete watching file changes", "num": "4564", "d": "10/2015"}, {"title": "run dart tests ff ie etc saucelabs", "body": "", "num": "4562", "d": "10/2015"}, {"title": "support using transformers dartium checked mode", "body": "currently fail implemented thrown transformed code dartium running checked mode transformer decides whether generate nochange checks separately dartium instead always generate checking code guarded way tree shake checks production assertions behave consistently following checked mode option dartium", "num": "4560", "d": "10/2015"}, {"title": "dart transformer url resolver handle import statements stylesheets", "body": "dart transformer fails stylesheet contains statement alpha project layout maincss import url error build error transform stylesheetcompiler threw error invalid argument absoluteuri unsupported uri scheme encountered instance uri package transformerurlresolvertoassetscheme package transformerurlresolverresolve package extracturls", "num": "4559", "d": "10/2015"}, {"title": "angular exceptionbinding swallows exceptions", "body": "reason exceptionbinding default exceptionhandler swallow exceptions instead rethrowing certainly leads unexpected hard diagnose behaviour minimalistic sample demonstrates surprising behaviour default causes please see example", "num": "4558", "d": "10/2015"}, {"title": "support keypressescape style event bindings", "body": "would cool support keyboard event bindings style html misko idea ago issue tracking", "num": "4557", "d": "10/2015"}, {"title": "incorrect viewcontainerref injected w nested components", "body": "appears viewcontainerref getting wrong references components nested tried come plnkrs show nested components injecting wrong viewcontainerref examples printing native element tag name show component referencing wrong one inject correct ref injects correct ref", "num": "4551", "d": "10/2015"}, {"title": "refactor linker move common functions util file", "body": "duplicate declarations instance case gets merged nice extract separate file include wherever required makes sense take one", "num": "4549", "d": "10/2015"}, {"title": "angular", "body": "npm install working throws error npm err reactivex npm registry npm err bug author publish npm err npm err note also install npm err tarball folder http url git url npm err system linux npm err command usrbinnodejs usrbinnpm install npm err cwd homeshatakshidocumentsa npm err node v npm err npm v npm err code npm http npm err npm err additional logging details found npm err homeshatakshidocumentsanpmdebuglog npm err ok code", "num": "4546", "d": "10/2015"}, {"title": "add support router handle components attribute parameter consturctor", "body": "hi following component implementation import component view import attribute component selector thisselector view templateurl thistemplateurl export class basecomponent selector string templateurl string would like assign route component routeconfig need give values constructor parameters", "num": "4545", "d": "10/2015"}, {"title": "include rxjs operators angular", "body": "wanted open issue track since discussed today nt think came conclusions unsure issue tracked issue hand include rxjs operators dependency without greatly increasing size librarytotal required download probably break solutions ideas shortterm ideas longterm cc jeffbcross vsavkin igorminar mhevery", "num": "4543", "d": "10/2015"}, {"title": "navigate back iteration", "body": "protractor tool new could please help following iterate browsernavigate back page automate need click links home page go back home page click remaining links time derived like following homepagehomegmenuitemclick homepagereferenceclick browsernavigate back homepagemachineclick browsernavigate back homepageconnectivityclick browsernavigate back homepage var declared page objects thanks", "num": "4541", "d": "10/2015"}, {"title": "test injector default mock compiler xhr service", "body": "want test component external templates need reach angular privates override xhr provider nee di binding import xhr import xhrimpl beforeeachbindings gt return bind xhr toclass xhrimpl default useful testing angular compiler testing angular applications change default xhr service mocked angular core suite override provider mock cc wardbell johnpapa", "num": "4539", "d": "10/2015"}, {"title": "error injecting elementref", "body": "get error trying inject elementref used work previous versions wondering api changed get following error exception resolve parameters jqueryintegration make sure valid type annotations null exception resolve parameters jqueryintegration make sure valid type annotations null browserdomadapterlogerror anonymous function anonymous function original exception resolve parameters jqueryintegration make sure valid type annotations sample code bellow import component view elementref declare var jquery component selector jqueryintegration view templateurl componentsjqueryintegrationjqueryintegrationhtml export class jqueryintegration elementref elementref", "num": "4538", "d": "10/2015"}, {"title": "ditransformer factories support features constructors", "body": "theory work fine dart const domservicebindings const const binding domservice tofactory createdomserviceifneeded deps const domservice injectable domservice createdomserviceifneeded optional skipself domservice domservice domservice null domservice domservice return domservice however results cyclical dependency talking vsavkin noted likely transformer recording annotations factory functions internal issue", "num": "4536", "d": "10/2015"}, {"title": "allow multiple callback overrides ngzone", "body": "angular seems allow one override onturnstart oneventdone ngzone testability api overriding callbacks internal stuff see also overrides however due mentioned limitation last registration actually successful earlier registrations silently ignored problem webdriver latency tests testability api looses race never able tell tests angular app stable test time waiting testability api tell us app stable never happen due broken callback registration bug internally tracked", "num": "4535", "d": "10/2015"}, {"title": "routerlink add class routerlink html", "body": "given following template assign class active route added element style inactive router links add class element currently css propose add router link elements additionally add active one way could cc btford", "num": "4532", "d": "10/2015"}, {"title": "polymer zone error alpha", "body": "upgrading alpha seems polymer longer wants play nice really sure root source error best supply plunkr worked alpha breaks working error", "num": "4531", "d": "10/2015"}, {"title": "test roottestcomponent longer extends debugelement", "body": "previously unit tests could use longer attribute test must written thing accessing already bit verbose bit unreadable nt think also mentioned changelog breaking change maybe", "num": "4528", "d": "10/2015"}, {"title": "unexpected token illegal trying run npm install", "body": "fresh clone angular npm install angular preinstall tmpangular node toolsnpmchecknodemodules purge npm dependencies stale unknown state purging npm warn prefer global marked installed g npm warn prefer global karmacli installed g npm warn peerdependencies peer dependency dgeni included dgenipackages npm warn peerdependencies longer automatically installed fulfill peerdependency npm warn peerdependencies npm application need depend explicitly npm warn prefer global jsbeautify installed g npm warn engine joiassert wanted node lt current node npm npm warn peerdependencies peer dependency ministyle included minitable npm warn peerdependencies longer automatically installed fulfill peerdependency npm warn peerdependencies npm application need depend explicitly npm warn engine hawk wanted node current node npm npm warn engine cryptiles wanted node current node npm npm warn engine sntp wanted node current node npm npm warn engine boom wanted node current node npm npm warn engine hoek wanted node current node npm npm warn engine hawk wanted node current node npm npm warn installmany tapconsumer bundled tap bundled package nt found unpacked tree npm warn engine cryptiles wanted node current node npm npm warn engine sntp wanted node current node npm npm warn engine hoek wanted node current node npm npm warn engine boom wanted node current node npm sauceconnectlauncher postinstall tmpangularnodemoduleskarmasaucelaunchernodemodulessauceconnectlauncher node scriptsinstalljs spawnsync postinstall tmpangularnodemodulesgulpsassnodemodulesnodesassnodemodulescrossspawnnodemodulesspawnsync node postinstall install nodegyp rebuild make entering directory bufferutil install tmpangularnodemoduleskarmanodemodulessocketionodemodulesengineionodemoduleswsnodemodulesbufferutil nodegyp rebuild make entering directory tmpangularnodemoduleskarmanodemodulessocketionodemodulesengineionodemoduleswsnodemodulesbufferutilbuild install nodegyp rebuild make entering directory npm warn optional dep failed continuing fsevents bufferutil install tmpangularnodemoduleskarmanodemodulessocketionodemodulessocketioclientnodemodulesengineioclientnodemoduleswsnodemodulesbufferutil nodegyp rebuild make entering directory tmpangularnodemoduleskarmanodemodulessocketionodemodulessocketioclientnodemodulesengineioclientnodemoduleswsnodemodulesbufferutilbuild npm warn prefer global tsd installed g nodesass install tmpangularnodemodulesgulpsassnodemodulesnodesass node scriptsinstalljs binary downloaded installed npm warn prefer global bower installed g nodesass postinstall tmpangularnodemodulesgulpsassnodemodulesnodesass node scriptsbuildjs exists testing binary binary fine exiting angular postinstall tmpangular node toolsnpmcopynpmshrinkwrap amp amp node toolschromedriverpatchjs amp amp webdrivermanager update amp amp bower install amp amp gulp pubgetdart amp amp tsd reinstall overwrite clean config amp amp tsd reinstall overwrite clean config toolstsdjson amp amp tsd reinstall overwrite config modulesupgradetsdjson updating selenium standalone downloading updating chromedriver downloading downloaded downloaded bower polymer notcached git githubcomdartlangpolymerjsgit bower polymer resolve git githubcomdartlangpolymerjsgit bower polymer checkout bower polymer invalidmeta polymer missing main entry bowerjson bower polymer invalidmeta polymer missing ignore entry bowerjson bower polymer resolved git githubcomdartlangpolymerjsgit bower polymer install polymer polymer bowercomponentspolymer var travisfoldend travisfoldstart syntaxerror unexpected token illegal exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs npm err linux npm err argv node install npm err node npm err npm npm err code elifecycle npm err angular postinstall npm err exit status npm err npm err failed angular postinstall script node toolsnpmcopynpmshrinkwrap amp amp node toolschromedriverpatchjs amp amp webdrivermanager update amp amp bower install amp amp gulp pubgetdart amp amp tsd reinstall overwrite clean config amp amp tsd reinstall overwrite clean config toolstsdjson amp amp tsd reinstall overwrite config modulesupgradetsdjson npm err likely problem angular package npm err npm npm err tell author fails system npm err node toolsnpmcopynpmshrinkwrap amp amp node toolschromedriverpatchjs amp amp webdrivermanager update amp amp bower install amp amp gulp pubgetdart amp amp tsd reinstall overwrite clean config amp amp tsd reinstall overwrite clean config toolstsdjson amp amp tsd reinstall overwrite config modulesupgradetsdjson npm err get info via npm err npm owner ls angular npm err likely additional logging output npm err please include following file support request npm err tmpangularnpmdebuglog", "num": "4527", "d": "10/2015"}, {"title": "gulp testunitjs failing windows error emfile many open files", "body": "issue appeared update node npm karma etc upgrading node npm clean running raises following error different machines windows windows running raises note working fine", "num": "4525", "d": "10/2015"}, {"title": "property bindings text interpolations get mixed using components light dom components", "body": "eg component selector acomp view template class acomp component selector bcomp view template class bcomp component selector main view template directives acomp bcomp class main display text instead", "num": "4522", "d": "10/2015"}, {"title": "returning observable eventemitter", "body": "looks like got problem eventemitters either missing something plnkr situation basically ca nt return observable anymore using see change return observable though nt feel right anyone word still using eventemitter kind situation switch rx observables full code js import component view eventemitter oninit bootstrap class somethingservice ee eventemitter new eventemitter firestuff settimeout gt thiseenext fire component selector hello viewbindings somethingservice view template export class hello implements oninit f string constructor private ss somethingservice oninit consolelog hello init fire thisf loading bootstrap hello old issue cc ericmartinezr robwormald pkozlowskiopensource", "num": "4521", "d": "10/2015"}, {"title": "retire magic rewriting privateconstructorclass interface", "body": "part want use typescript compiler outputs distribute typings users magic dgeni rewriting classeswhichshouldnotbeconstructed represented interfaces ca nt retained anyway satisfy dart users classes still appear instantiatable instead create abstract superclasses types constructor classes take name documentation existing class concrete implementation needs name great choice propose eg note talked mhevery one concern new classes bloat codesize checked current minified bundle becomes classes could potentially optimized", "num": "4518", "d": "10/2015"}, {"title": "version npm package missing rxjs", "body": "nt know right place post bug please let know ise nt failing install latest package npm npm err found npm err npm err reactivexrxjs npm registry npm err bug author publish npm err specified dependency npm err npm err note also install npm err tarball folder http url git url npm err system windowsnt npm err command c program files microsoft visual studio toolsexternalnodenode c program files microsoft visual studio toolsexternalnpmnodemodulesnpmbinnpmclijs install npm err cwd c npm err node v npm err npm v npm err code", "num": "4516", "d": "10/2015"}, {"title": "using attrbute ts throws error compilation", "body": "looks like use class constructor causes ts compiler throw semantic error", "num": "4515", "d": "10/2015"}, {"title": "change detector throws exception triggering next instance eventemitter", "body": "create custom checkbox component js import inject input output hostbinding hostlistener eventemitter component view self attribute viewencapsulation controlvalueaccessor checkboxcontrolvalueaccessor ngcontrol opaquetoken forwardref binding renderer elementref import ispresent isnativeshadowdomsupported commonlang import keycodes commonkeycodes import icon iconicon const ngvalueaccessor opaquetoken new opaquetoken ngvalueaccessor const checkboxvalueaccessor new binding ngvalueaccessor toalias forwardref gt checkbox multi true component selector checkbox ngcontrol checkbox ngformcontrol checkbox ngmodel bindings checkboxvalueaccessor inputs disabled view encapsulation isnativeshadowdomsupported viewencapsulationnative viewencapsulationemulated emulated native none default encapsulation viewencapsulationemulated emulated native none default templateurl appcomponentscheckboxcheckboxhtml styleurls appcomponentscheckboxcheckboxcss directives icon export class checkbox implements controlvalueaccessor input checked checked boolean false output change eventemitter new eventemitter html used looks like made update latest alpha version keep getting exception thrown whenever try clickkeydown checkbox stacktrace", "num": "4514", "d": "10/2015"}, {"title": "encapsulation viewencapsulationnative view breaks styles appended", "body": "transitioning latest alpha version noticed use views tags get appended wrong places actually style tag gets duplicated shadow root works fine", "num": "4513", "d": "10/2015"}, {"title": "testing library name used inconsistently", "body": "declares module registers module unify jeffbcross thought settled final name big package rename nt case", "num": "4512", "d": "10/2015"}, {"title": "better hostlistener support observable", "body": "way get sugar events observables eg typescript import component view directive output eventemitter hostlistener import dom import elementref directive selector draggable export class draggable mouseup new eventemitter mousemove new eventemitter mousedown new eventemitter mousedrag hostlistener mouseup event onmouseup event thismouseupnext event hostlistener mousedown event onmousedown event thismousedownnext event hostlistener mousemove event onmousemove event thismousemovenext event constructor public element elementref oninit thismousedragsubscribe next pos gt update position thiselementnativeelementstyletop postop px thiselementnativeelementstyleleft posleft px component selector app view needed order tell angular compiler template directives draggable styles template draggable div export class app constructor", "num": "4511", "d": "10/2015"}, {"title": "use websocket transport travis sauce", "body": "sauce connect supports web sockets requires special settings advantage using web sockets usually stable connection lower latency already use web sockets test zonejs hopefully wo nt hard replicate setup zonejs pr", "num": "4510", "d": "10/2015"}, {"title": "compile browsertree type checking", "body": "vsavkin accidentally turned type checking noncjs tree turning back fails reason wellknown documented jquery selenium define runtime variable global scope named typings files define symbol benefit typechecker different types right solution compile separately testing code depends protractor nontrivial change build", "num": "4507", "d": "10/2015"}, {"title": "svg elements rendering incorrectly", "body": "svg elements inside templates visible see browser recognizing svg element works breaks import bootstrap bind component view component selector appcmp view template class app constructor bootstrap app", "num": "4506", "d": "10/2015"}, {"title": "stack trace transformer importing angulardart ng", "body": "one dart files tried changing statement fixing references get build error build error transform templatecompiler minimllibsrcplaygroundappngdepsdart threw error invalid argument dart corepatchregexppatchdart jssyntaxregexpallmatches package regexpwrappermatcher package cssselectorparse package directiveparserdirectiveparser package compilestepfactorycreatesteps package templateextractorextracttemplates dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecompletewithvalue dart asyncfuturedart futurewait dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecompletewithvalue dart asyncfutureimpldart futureasynccomplete dart asynczonedart rootrun dart asynczonedart customzonerun dart asynczonedart customzonebindcallback dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart microtaskloopentry dart isolatepatchisolatepatchdart runpendingimmediatecallback dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage dart core jssyntaxregexpallmatches package regexpwrappermatcher package cssselectorparse package directiveparserdirectiveparser package compilestepfactorycreatesteps package templateextractorextracttemplates", "num": "4505", "d": "10/2015"}, {"title": "interpolation routertemplates working systemjs", "body": "simple application router router currently pages pages consist simple binding problem whole object containing binding empty router loads page becomes intressting thing hereby issue occures use systemjs load soon add tag pointing bindings working link repository", "num": "4504", "d": "10/2015"}, {"title": "route typing compiling type ngtype", "body": "updating routing code reflect latest angular source example however noticed router typings nt compile work around tweak component part ngtype class route implements routedefinition", "num": "4500", "d": "10/2015"}, {"title": "ngnonbindable longer working standalone injection", "body": "noticed injecting ngnonbindable longer works include individual directive get following error error unexpected directive value undefined view component ignorebindings new baseexception runtimemetadataresolvergetviewdirectivesmetadata runtimecommandfactorycomponenttemplatefactory runtimecommandfactorycreatebegincomponent commandbuildervisitorvisitelement elementastvisit arrayforeach native objecttemplatevisitall commandbuildervisitorvisitelement however works include part coredirectives ngnonbindable deprecated standalone directive basically", "num": "4499", "d": "10/2015"}, {"title": "need inject inject elementref dynamiccomponentloader", "body": "di works fine needs", "num": "4497", "d": "10/2015"}, {"title": "actual type querylistchanges eventemitter", "body": "changelog jsdoc querylist misleading method", "num": "4496", "d": "10/2015"}, {"title": "several bundle size problems noncore bundles", "body": "several issues noncore bundles publish npm using bundle arithmetic means bundle parts core optional bundles mostly visible http bundle pulling fact bigger noncore bundle import nonpublic apis ex router makes pretty hard impossible move cjs bundles would nt bundle core cc jeffbcross rkirov", "num": "4495", "d": "10/2015"}, {"title": "viewencapsulationemulated longer default", "body": "updated components seemingly rendered behaviour manually setting component encapsulation restores previous behaviour going source longer seems code make default particular line formerly block code seems moved longer present block code might red herring seem remaining references strict comparisons without faculty fallback", "num": "4494", "d": "10/2015"}, {"title": "published", "body": "available useful plunkers like jeffbcross sth went wrong release process maybe part automated yet", "num": "4493", "d": "10/2015"}, {"title": "router navigate throws exception component route config alpha", "body": "tried alpha found minor things one confusing router use latter accepts string old style works former accepts tuple tosses error detail thisselectedheroid work thisrouternavigate id thisselectedheroid error see example cc btford", "num": "4490", "d": "10/2015"}, {"title": "missing forwardref viewchildviewchildren throw", "body": "follow updating issue still reproducible added issue returns null instead directives forwardref gt child class parent implements afterviewinit length viewchildren forwardref gt child children querylist length viewchildren child children querylist returns child viewchild forwardref gt child child child returns null viewchild child child child afterviewinit consolelog thischild consolelog thischildren component selector child view template child class child assume contentchildcontentchildren works way viewchildviewchildren nt test issue repro", "num": "4489", "d": "10/2015"}, {"title": "error caught attempt detect changes dehydrated detector common amp difficult debug", "body": "cf internal bug id", "num": "4486", "d": "10/2015"}, {"title": "core better errors malformed bindings", "body": "consider opposed closing square bracket wrong place right silently fails", "num": "4485", "d": "10/2015"}, {"title": "remove stringmap", "body": "discussed mhevery stringmap one strange type use angular code without importing provide users sidechannel listing directly dgeni template never reexport library also unconstrained every object stringmap subject numerous discussions vsavkin tbosch among others part reason exists satisfy dart users translate part effort deliver typings directly compiler users see propose remove stringmap public api use proper ts type first change change nt affect dart output", "num": "4483", "d": "10/2015"}, {"title": "transformer handle const instance annotations properties", "body": "example registers annotation rather", "num": "4481", "d": "10/2015"}, {"title": "fix docs add support type aliases doc generation process", "body": "documenting couple type aliases jade output parsing correctly therefore causing errors serving locally angulario sha problems become obvious add code samples jade tries parse sample indentations jade statements comments sample code followed source code jade output jade requestoptionsargs type alias exported defined line interface options construct object based requestinit fetch spec example live demo pre class prettyprint linenums code import requestoptionsargs change interface output fine plocationbadge exported defined line markdown interface options construct object based requestinit fetch spec example live demo import requestoptionsargs cc petebacondarwin", "num": "4480", "d": "10/2015"}, {"title": "view caching leads unexpected reuse stateful elements eg", "body": "see plunker example creates destroys views underlying iterable changes views contain stateful element like rehydrated state remains unchanged example user enters text element element removed new view requested adding perhaps view cache deliver old element old input instead", "num": "4478", "d": "10/2015"}, {"title": "make angular dart work ie", "body": "getting critical many customers", "num": "4476", "d": "10/2015"}, {"title": "develop angular improvement process", "body": "far leaning upon learnings previous versions angular drive feature development angular sort knew wanted however slowly exhausting body knowledge prepare take framework beyond simply improving old stuff accept proposals improve based angular usage growing quickly state web new usage patterns end propose introduce angular improvement process process would document clear path crazy idea accepted proposal prototype finally implementation core framework process would mimic similar processes python pep dart dep java jcp", "num": "4475", "d": "10/2015"}, {"title": "missing eventemitter produces tricky message", "body": "produces error error hard understand since clear issue", "num": "4473", "d": "10/2015"}, {"title": "refactor convert connection interface observable response", "body": "recapping discussion blesh probably correct current state right connection interface implemented simple interface calls http service return observable end users nt really interact interface much application code tests however users working instances created mockbackend order create mock responses requests note mock responding mechanism improved outside scope proposal proposal change observable keep property intact blesh says aint bad add properties observables though adding methods bad idea observable methods expected operators extend subject ed change actually pretty minor enduser perspective change calling rather current internally reduces cruft simplifies logic cc robwormald", "num": "4472", "d": "10/2015"}, {"title": "invalid nested binding amp error message", "body": "consider following template spot typo tittle error message would", "num": "4471", "d": "10/2015"}, {"title": "invalid binding error message amp input vs property", "body": "template contains ie directive added view ng generate following errors first error probably read input hellocomp bind either input ie property ie call input instead property plans may also use check inputproperty exists using method place decide whether use input property", "num": "4469", "d": "10/2015"}, {"title": "dart dev breaks build", "body": "last dev version good test run", "num": "4467", "d": "10/2015"}, {"title": "doc errors introduced recent compilerview api doc changes", "body": "new issue docs seems related recent set compilerview api changes links nt target igor please review fix reproduce errors plus others related changes command gulpdocsangulario", "num": "4464", "d": "10/2015"}, {"title": "doc errors introduced recent bootstrap api changes", "body": "two issues docs seem related latest set bootstrap api changes links nt target alex please review fix reproduce errors plus others related changes command gulpdocsangulario", "num": "4463", "d": "10/2015"}, {"title": "doc errors introduced recent di change detection changes", "body": "bunch issues docs seem related latest set di change detection changes links nt target victor please review fix reproduce errors plus others related changes command", "num": "4462", "d": "10/2015"}, {"title": "ngform disable validation control disabled", "body": "think ngcontrol validators disabled control disabled example control disabled property could change depending value control also need functionality disableenable validity ngcontrol", "num": "4460", "d": "10/2015"}, {"title": "dart extending lifecycle class like register hook", "body": "easy mistakenly write instead currently wo nt call hook first case", "num": "4457", "d": "10/2015"}, {"title": "feat router binding routeroutlet child component", "body": "example able pass binding", "num": "4452", "d": "10/2015"}, {"title": "bug dialog angularjs", "body": "built module manage loading templates modal bootstrap upgrading version angularjs close modal open simulation open console browser click open modal button opened perfectly island writing element scored open close modal try open see longer displayed note console writing element different first time opened note change version angularjs see problem happen", "num": "4448", "d": "10/2015"}, {"title": "extending dom elements", "body": "hi possible extend dom elements angular way use like thanks advance tiago braga", "num": "4446", "d": "10/2015"}, {"title": "bug date pipe throws reference error safari", "body": "issue appears related dateformatter intl service", "num": "4445", "d": "10/2015"}, {"title": "main app components constructor oninit method runs multiple time", "body": "following code execution following initialize restmanager routermanager skins sets variables constructor oninit mehtod oninit invokes var promise thisrestmanagergetsitemapconfiguration inside method returns promise pending status next line promisethen data gt thisroutermanagerconfigurerootrouter data yet ready invoked whole oninit method starts reexecute beginning log get following exceptions course route config provided success promise promisethen data gt thisroutermanagerconfigurerootrouter data", "num": "4444", "d": "10/2015"}, {"title": "include settimeout eventemitter onerror oncomplete", "body": "summary also resolve onerror oncomplete asynchronously onerror oncomplete problem server running problem eventemitter oncomplete called onnext typescript export class eventemitter extends observable subject new subject observer generator return thissubjectsubscribe value gt settimeout gt generatornext value error gt generatorthrow generatorthrow error null gt generatorreturn generatorreturn null torx return next value thissubjectnext value throw error thissubjecterror error return value thissubjectcomplete typescript export class eventemitter extends observable subject new subject observer generator return thissubjectsubscribe value gt settimeout gt generatornext value error gt generatorthrow settimeout gt generatorthrow error null gt generatorreturn settimeout gt generatorreturn null torx return next value thissubjectnext value throw error thissubjecterror error return value thissubjectcomplete current workaround include backgroundwhy far know added order zonejs pick changes problem resolves first without change since push event loop dispose logic callback whatever obj working may work callback example wrap callbacks work expected proposal find better way notify zonejs include callbacks", "num": "4443", "d": "10/2015"}, {"title": "tmp directory cleaned correctly", "body": "several us noticed directory keeps growing time spite gulp task runs gulp exit seems cleans stuff correctly exiting leaves files behind tmp folder", "num": "4441", "d": "10/2015"}, {"body": "derp angular question disregard previous link point still stands though try keep github issues verified issues try gitter support requests read thru integration spec", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "hey ocombe use socketio nt use events directly manipulate incoming data pass subject subscribe know asking able register kind events could nt say nothing surely help", "d": "10/2015"}, {"body": "ahh using observables great idea try thanks", "d": "10/2015"}, {"body": "ok found simpler way wrap callback complex possibility use ngzone made simple socketservice call needed nt use zonebind time js export class socketservice static socket io nt close issue case socketio events something want fix close issue", "d": "10/2015"}, {"body": "cajoy script tags removed templates long time ago", "d": "10/2015"}, {"body": "yep purpose thnx linking appropriate issue ericmartinezr", "d": "10/2015"}, {"body": "inject script text template sent iphone oct ericmartinezr notifications githubcom wrote cajoy script tags removed templates long time ago reply email directly view github", "d": "10/2015"}, {"body": "cajoy use component contain autocomplete template", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "igorminar fine proposal decorators would like see code look decorators want make sure syntax expense users", "d": "10/2015"}, {"body": "aside probably another issue needs created would suuuper cool could observable interface something like done proper observables vs subjecteventemitter would significantly lighter would remain cold unless subscribed thought", "d": "10/2015"}, {"body": "could migration path using named import ie create namespace promote usage vs interface deprecate former interfaces remove interfaces deprecate namespace make decorators available without prefix remove namespace", "d": "10/2015"}, {"body": "feature request two cents far put everything run component initialization inside end huge method lot code see proposal decorator method think would nice make n decorator per method n methods every method would concatenated maybe add lifecycle directives oninit oninit would run two differents moments oninit afterviewinit checkforsomethingtwice nt know good idea possible idea wanted write", "d": "10/2015"}, {"body": "ericmartinezr nt think multiple good idea would make code less readable would make code less predictable order methods called would make harder test would update tests addremove would probably make angular tiny bit less efficient top easy call many methods want hook", "d": "10/2015"}, {"body": "ericmartinezr think better use functional composition running multiple methods single hook makes refactoring easier avoids surprises wrt ordering case one method multiple decorators work fine err vicb said", "d": "10/2015"}, {"body": "java developers gon na feel home sat oct brian ford notifications githubcom wrote ericmartinezr think better use functional composition running multiple methods single hook makes refactoring easier avoids surprises wrt ordering case one method multiple decorators work fine reply email directly view github", "d": "10/2015"}, {"body": "feature also question never considered use symbols randomly generated tokens browsers nt support example igorminar example would look like js import component oninit import onactivate import onsomething thirdpartylibrary component selector testfoo class testfoo oninit code onactivate code onsomething code syntactically cool decorators real limitations", "d": "10/2015"}, {"body": "subject ever considered point configuration decorator let class free decorators eg wrt oninit note may make possible ericmartinezr suggesting since array maintain order point making keep class free decorators import component oninit component selector testfoo oninit class testfoo", "d": "10/2015"}, {"body": "webteckie would advantage keeping class free decorators downside approach duplicating method names want rename need places", "d": "10/2015"}, {"body": "pkozlowskiopensource may naive suggestion part stand would advantageous component config one place like configuration system usually single place quickly know go see configuration instead browsing potentially significant number lines figure things would minimize number decorators learnuse well would also keep class standard even programming typescript whatever anyways probably late making suggestions like wanted say", "d": "10/2015"}, {"body": "according mdn documentation fill attribute must use instead", "d": "10/2015"}, {"body": "ericmartinezr thank much solved", "d": "10/2015"}, {"body": "kucharskimaciej sure deprecated tried using import bootstrap provide import routerproviders appbasehref routerprimarycomponent const routerconfig routerproviders provide appbasehref usevalue provide routerprimarycomponent usevalue rootcomponent", "d": "10/2015"}, {"body": "yup gives result see code used function file see base element function always return value used constructor javascript export class pathlocationstrategy extends locationstrategy private location location private history history private basehref string constructor super thislocation domgetlocation thishistory domgethistory thisbasehref domgetbasehref therefore base element property used function used directive javascript set routeparams changes thisrouteparams changes thisnavigationinstruction thisroutergenerate thisrouteparams property bound element attribute since wrong link btw guide somewhere build source think able fix issue want sure works", "d": "10/2015"}, {"body": "kucharskimaciej good catch way", "d": "10/2015"}, {"body": "see discussion", "d": "10/2015"}, {"body": "pkozlowskiopensource sorry think ca nt understand mean u give simple demo eg", "d": "10/2015"}, {"body": "need configure server return indexhtml requests exact configuration depend web server obviously ca nt demonstrated plunker please ask support questions", "d": "10/2015"}, {"body": "thanks pkozlowskiopensource ur mean deal kinds problems webserver http code", "d": "10/2015"}, {"body": "try path also able use", "d": "10/2015"}, {"body": "great thank totally working gon na close one", "d": "10/2015"}, {"body": "sumigoma hard give good answer without full understanding usecase trying make predictable among things means tools could quickly easily analyze template figure directives active nt want support matching directives dynamically response runtime property changes going close one nothing immediately actionable would suggest continuing discussion", "d": "10/2015"}, {"body": "attribute property try binding attrfor", "d": "10/2015"}, {"body": "great thanks pawel indeed bind attributes like", "d": "10/2015"}, {"body": "two parts bugs behavior intercepting link clicks external party code think makes sense application implement directive nt option compile party templates intercepting hashchange events makes sense sure makes sense angular apps might add listener add routing self chatted past still thinking ideal solution start work earnest next week", "d": "10/2015"}, {"body": "hi brian ca nt via directive need something works global scale reasonable track required places add directive also notify us url change done parts app nt managed angular need router work seamlessly onhashchange like router right", "d": "10/2015"}, {"body": "clear yes option intercept event seamlessly use case router also needs support cases well nt disagreeing trying fully capture scope issue developers different needs nt confused", "d": "10/2015"}, {"body": "landed change third option master", "d": "10/2015"}, {"body": "looks like broken per robwormald previously would use nt get one workaround implement probably extending selector matches one shortterm option would add attribute selector allow directive applied arbitrary inputlike element least fixed", "d": "10/2015"}, {"body": "sambuchl could please move tutorial lives thnx", "d": "10/2015"}, {"body": "thanks redirect", "d": "10/2015"}, {"body": "duplicate", "d": "10/2015"}, {"body": "closing favor", "d": "10/2015"}, {"body": "kikketer first necessary inject component see article discussion overall comment inject service component must use working use bootstrap injecting bootstrap makes visible entire app makes visible component children difference two nt remember exactly remove bootstrap make part component", "d": "10/2015"}, {"body": "thnx helping issues ericmartinezr answer spot", "d": "10/2015"}, {"body": "ericmartinezr fantastic thanks quick response worked", "d": "10/2015"}, {"body": "still nt figure completely bundling distribution story afraid ca nt help much specific setups moment afraid dig end till problem space stabilizes got recommendations area closing feel free reopen believe got anything fix side make workflow workable", "d": "10/2015"}, {"body": "content could either see", "d": "10/2015"}, {"body": "vicb right sounds like legit usecase iterating sibling imo need support one way another", "d": "10/2015"}, {"body": "works chrome maybe alexpods run ie edge see", "d": "10/2015"}, {"body": "right new compiler browserdomwalking based indeed solve let track issue part", "d": "10/2015"}, {"body": "pkozlowskiopensource nt get mean anything solve even parse text node child tr new compiler output would remain invalid html", "d": "10/2015"}, {"body": "wrap text see", "d": "10/2015"}, {"body": "vicb absolutely right sorry lazy check standards making fuss", "d": "10/2015"}, {"body": "hey danijar add project see", "d": "10/2015"}, {"body": "ericmartinezr right browser use probably support maps need polyfill", "d": "10/2015"}, {"body": "think saw error earlier reason folder project move local files folder build system try build folder find dart files solution remove folder completely might want transfer filesfolders folder feel free reopen fix issue", "d": "10/2015"}, {"body": "typotter could give example source css expected css", "d": "10/2015"}, {"body": "hey micahblu repo looking one", "d": "10/2015"}, {"body": "ericmartinezr sorry thanks", "d": "10/2015"}, {"body": "youknowriad need set client initial value put ngif template make sure client defined first component already loaded onactivate happens js component selector client view directives ngif template export class clientshow client client routeparams routeparams repository clientrepository constructor repository clientrepository routeparams routeparams thisrepository repository thisrouteparams routeparams onactivate return thisrepositoryfind thisrouteparamsparams id client gt thisclient client", "d": "10/2015"}, {"body": "brandonroberts yes think angular handle purpose waiting promise resolution onactivate hook case", "d": "10/2015"}, {"body": "mainly resolve data properties may need continuing child components like client prevent instantiation component onactivate finishes also provides information component navigated current navigation", "d": "10/2015"}, {"body": "brandonroberts correct think cases like better use strategy brandonroberts suggesting ngif", "d": "10/2015"}, {"body": "btford ok stick something like thank", "d": "10/2015"}, {"body": "mcpdesigns tutorials live open issue send pr thnx", "d": "10/2015"}, {"body": "try", "d": "10/2015"}, {"body": "kind npm save latest npm err darwin npm err argv save latest npm err node npm err npm npm err code npm err found npm err please include following file support request npm err front ubuntu installs fine macos", "d": "10/2015"}, {"body": "hmm idea", "d": "10/2015"}, {"body": "rootical try npm got osx works fine still fails version afraid dig end debugging npm issues without access ones machine next impossible", "d": "10/2015"}, {"body": "even tried reinstall npm curious could done", "d": "10/2015"}, {"body": "wrong npm registry set check set", "d": "10/2015"}, {"body": "guess best documentation source code basic idea implement interface feed implementation dependency injector example canonical implementation alternatively take look web worker implementation angularuniversal see server side renderer", "d": "10/2015"}, {"body": "implementing entire renderer get dom element looks like overkill ziaukhan try using renderergetnativeelementsync api move code directive nonhtml users opt get reference implementation via injected constructor parameter example", "d": "10/2015"}, {"body": "thank much hdeshev number related questions renderergetnativeelementsync method requires location object purpose injecting elementref use location api call way create location object type renderelementref elementref renderergetnativeelementsync method returns object returned elementrefnativeelement use renderergetnativeelementsync method get object easily elementrefnativeelement understand comment move code directive nonhtml users opt please elaborate", "d": "10/2015"}, {"body": "use input templatename decorator register minified variable name", "d": "10/2015"}, {"body": "hopefully herringtondarkholme answer sufficient one usecase bryanerayner", "d": "10/2015"}, {"body": "think full intent suggesting nt fully grasped thorough explanation thinking suppose simple component ts class templatecomponent componentimagesrc string constructor thiscomponentmagesrc wwwsomeimage given template follows html proposed remapping annotation afaik nt exist template would compiled converted something looking like html would support advanced minification typescript output typescript ever implement proposed operator would powerful way minify angular applications also lessens coupling templates components refactoring code sharing also become easier mechanism like available", "d": "10/2015"}, {"body": "indeed sounds like interesting minification strategy rather solved tooling side suggesting provide tools", "d": "10/2015"}, {"body": "would definitely done build step minifying typescript satisfactory manner would require movement typescript team think best done typescript compiler said big problem minification knowing safely minify ca nt many times property names angular component classes ca nt minified angular binds templates properties mechanism also minifyalias names template think would help bridge gap thinking might become complicated runtime step might template binding along lines minified also minified alias mapping would need way know sure suggesting trying find solution problem thought might able elegantly solved angular template binding service upon thought complicated done inside angular runtime", "d": "10/2015"}, {"body": "bryanerayner understand trying achieve noble goal said nt think sth immediately actionable sounds like nice longerterm project though", "d": "10/2015"}, {"body": "agreed", "d": "10/2015"}, {"body": "think compression level default supported compiler practically users safe use decorator uglify requires closure compiler requires advanced mode afaik typescript currently clear roadmap support minification property minification needs specific knowledge code framework hoping see collaboration ts angular team", "d": "10/2015"}, {"body": "blocks", "d": "10/2015"}, {"body": "router actually fine afaik see please close issue confirm thanks", "d": "10/2015"}, {"body": "right", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "choeller correct way currently generate urls auxiliary routes get example working need use", "d": "10/2015"}, {"body": "brandonroberts ok thank think problems possible create link possible link guestbook without passing auxroute getting concept wrong understanding auxroute part optional otherwise could put content auxroute template sure right place discussion also problems understanding concept say config whole config totally static sidebar always see settings dialog would assume auxroute load different templates shed light", "d": "10/2015"}, {"body": "ran problem aux route optional", "d": "10/2015"}, {"body": "choeller yea think bug also named outlet currently populate auxiliary route also throws error", "d": "10/2015"}, {"body": "think good hold implementing anything major refactors need wrap reason hesitant yet pragmatic make change lands matsko pair next week eager help happy guide helping thanks", "d": "10/2015"}, {"body": "sounds good btford love help lem know anything else comes realm falling behind one else get feel free assign anything meantime assist starting feel like hard grab anything due ran", "d": "10/2015"}, {"body": "nathanwalker please nt discouraged problem misko tagged without knowing much context mistake part right organization definitely need something like using location service without router", "d": "10/2015"}, {"body": "cc igorminar", "d": "10/2015"}, {"body": "eventually wo nt need domadapters parsing use custom html parser need dom special renderers every platform browser serverside tue oct pawel kozlowski notifications githubcom wrote cc igorminar reply email directly view github", "d": "10/2015"}, {"body": "already pr merged yet though", "d": "10/2015"}, {"body": "closing duplicate angularangulario since belongs angulario repo", "d": "10/2015"}, {"body": "agreed thinkingdoing", "d": "10/2015"}, {"body": "use elvis operator", "d": "10/2015"}, {"body": "lot bindings use anyway thinking quite logically correct", "d": "10/2015"}, {"body": "one hand result discussion mentioned forced mark optional parts expressions makes things obvious laborious well hand trivial situation property nt predefined since data usually comes asynchronously use elvis operator case regardless many bindings difference", "d": "10/2015"}, {"body": "child element nt rendered hence binding nt activated case child element inserted via working correctly binding still activating nt", "d": "10/2015"}, {"body": "gotcha surely right plunk reproduces issue issue occurs renders entire view wrapping using", "d": "10/2015"}, {"body": "baio could set element see", "d": "10/2015"}, {"body": "repo angular looking", "d": "10/2015"}, {"body": "gkalpak sorry", "d": "10/2015"}, {"body": "trying bit realized sometimes even using templateurl one component app work refreshing page many times example leads believe concurrency problem update gon na use webworker plnkr try simulate bug nt time", "d": "10/2015"}, {"body": "yes please", "d": "10/2015"}, {"body": "thelgevold think related", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "todoubaba saw comment gitter forgot close thank", "d": "10/2015"}, {"body": "siritsch right dev guides still work progress live could please move issue", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "datepicker call onselect", "d": "10/2015"}, {"body": "problem comunicate interface html controller ts use component per example call controller return undefined", "d": "10/2015"}, {"body": "emirdeliz sounds like general support request could please move thnx", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "script tags page potentially loaded via script loader ie systemjs script tags templates work", "d": "10/2015"}, {"body": "totally fine load js libraries application fact example sample components inspect dom see loading react jquery underscore outside angular add indexhtml like robwormald suggests angular part basically sandbox whatever want outside", "d": "10/2015"}, {"body": "vicaba removing tags templates purpose nt use load code demand hope others answered question details", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "use angular fine async loader need remove declaration html use ready uses kind bootstrapping default currently uses systemjs also async loader would work absolutely fine loader desire", "d": "10/2015"}, {"body": "closing feel free ask questions thread still confusion", "d": "10/2015"}, {"body": "dup", "d": "10/2015"}, {"body": "seems issue", "d": "10/2015"}, {"body": "yes seems", "d": "10/2015"}, {"body": "closing duplicate please track thanks", "d": "10/2015"}, {"body": "written typescript could transpiled module system supported ts nothing special guess talking kind bundled version plan providing cjs bundles see intention providing amd bundles closing duplicate", "d": "10/2015"}, {"body": "ocombe fyi encodeuricomponent encode sure get routeparams first try encoding see behaviour get expected", "d": "10/2015"}, {"body": "yes know nt encode parenthesis tried discovering auxiliary routes seems problem works refresh page router gets fooled analyzing url", "d": "10/2015"}, {"body": "ok temporary fixed problem running routes extended encodeuricomponent function still would nice built router poke btford", "d": "10/2015"}, {"body": "next impossible diagnose going based info provided could please ask help providing context ideally share code somewhere thnx", "d": "10/2015"}, {"body": "tandu nt know configuration directive looks like know ca nt upgrade directives nt components basically directives without isolated scopes ca nt upgraded using", "d": "10/2015"}, {"body": "confirm yes directive using nt component directive wo nt work", "d": "10/2015"}, {"body": "nvfileselect defined see sources upgrade supports directives templates think important add support directives without templates common thing angular added future releases upgrade module never work", "d": "10/2015"}, {"body": "afaik wo nt supported", "d": "10/2015"}, {"body": "saw spec possible", "d": "10/2015"}, {"body": "gionkunz correct component selector task template template directives task export class task input taskdata task output finished finishedhandler new eventemitter somethinghappened thisfinishedhandlernext emit event hope makes things clear also note removing since optional since latest release", "d": "10/2015"}, {"body": "okay yeah works already awesome", "d": "10/2015"}, {"body": "direct equivalent closest thing would pretty lowlevel guess would like use service right guess best solution handroll sth plans direct equivalent interpolate", "d": "10/2015"}, {"body": "yeah tried use parseinterpolation could nt make work documentationcomments ast trying understand thing gave whenever free time appreciate help make work looks like good idea new library wrote naive parser works objects still think would interesting addition angular pretty sure robwormald agreed understand probably blocking feature request beta maybe later", "d": "10/2015"}, {"body": "endash interesting one imo example got plunker better illustrates going let say got example look closely see ways desugarring one choose nt make sense take arbitrary decisions go desugared version pb see nt throw see several element think got issue already", "d": "10/2015"}, {"body": "pkozlowskiopensource assumption syntax nt would get binding similar directivescomponents normally work would go whichever one matching assumption reinforced fact fails nt get error saying neither matching throwing duplicate nt help much want throw regular input binding syntax ca nt disambiguated right nt anything help figure binding nt work preferably compilerlinkerrendererwhatever part angular handling would able look inputs intelligently route binding expected directives components", "d": "10/2015"}, {"body": "nt fail silently afaik since nt check non standard attributes see throwing duplicate nt help much want throw regular input binding syntax ca nt disambiguated sugar common nonambiguous cases risk confusion people using canonical syntax nt think making smarter", "d": "10/2015"}, {"body": "entire point nt risk confusion unless already know confusion entirely hidden nonobvious unintuitive needs error nt supported fine use fine default behaviour drop binding ground", "d": "10/2015"}, {"body": "needs error nt supported agreement got issues already opened tackle closed issue", "d": "10/2015"}, {"body": "hey tejji plunk posted nt really help simply bootstraps application everything seems work fine could provide plunk illustrates issue thanks", "d": "10/2015"}, {"body": "trying use native element html file indexhtml issue click button onclick executing constructor logonclick called use native element html file indexhtml", "d": "10/2015"}, {"body": "might misunderstanding question asking abut applying angular directives elements outside bootstrapping point myapp would helpful see actual use case angular code begins inside app element ca nt apply angular code elements outside myapp", "d": "10/2015"}, {"body": "may understood well works let clarify way access amp manipulate dom elements outside myapp", "d": "10/2015"}, {"body": "hm example basically article shows get access underlying dom element backing angular directive handle dom use standard dom manipulation techniques like jquery regular js manipulate elements ancestor tree something like said strongly discourage pattern norm since creates tight coupling dom angular app one advantages angular decoupled models nt assume fixed dom structure soon start reaching dom directly imposing rigid relationship models dom around", "d": "10/2015"}, {"body": "understood thanks guiding many times data embed html use approach recommended recommended way pass data angular component use script type applicationjson embed data html use get get data server json format approach", "d": "10/2015"}, {"body": "tejji could move discussion usage best practices thnx", "d": "10/2015"}, {"body": "noticed build chain ts angular would nt play nice decided go back ts abandon use asyncawait nt important anyway", "d": "10/2015"}, {"body": "came across also temporary fix empty file get working using browserify tsify plugin go ts", "d": "10/2015"}, {"body": "started working change need think moment work users currently get transitively brings good emit minimal setup work bad emit duplicate declarations see vs change adding separate entry point convenient typing changing emit would require changing code plus runtime module bundle another way would change depend good emit users vast majority need bring compiler means changing reference worse finding right spot build tsc gets invoked means chances new user get setup wrong see background underlying ts issue", "d": "10/2015"}, {"body": "maybe called instead sounds like instance component", "d": "10/2015"}, {"body": "definitively good name since might confused template instance directive instance probably things proposed sugar sure buys enough justify new concept reasonable imo going close revisit later high demand sugar", "d": "10/2015"}, {"body": "according mdn rules need precede rules see change current implementation ie oder example think right opposite sure", "d": "10/2015"}, {"body": "rules need precede rules understand stylesheet could rule type rule case example still expected order b c", "d": "10/2015"}, {"body": "yes could improve onthefly compile time restrictions need able serialize compilemetadata string deserialize also keep interface take string someone could replace templateparser altogether implementation use htmlparser everything one go eg transform jsx templateast fri oct pm victor berchet notifications githubcom wrote htmlparser called twice compilation templateparser templatecompiler would possible call reuse ast understand critical path potential refactoring given low priority reply email directly view github", "d": "10/2015"}, {"body": "encoding works fine chinese charactors template translated uxxxx", "d": "10/2015"}, {"body": "thanks find ide encoding setting wrong", "d": "10/2015"}, {"body": "inject dynamiccomponentloader service class see", "d": "10/2015"}, {"body": "todoubaba use method use service actually wan na know ca nt instantiation method", "d": "10/2015"}, {"body": "dynamiccomponentloader abstract class impl class dynamiccomponentloader internal instantiate directly", "d": "10/2015"}, {"body": "todoubaba thx", "d": "10/2015"}, {"body": "null discover dependencies using reflection gt try firgure using reflection vs gt dependency", "d": "10/2015"}, {"body": "cc tedsander kegluneq mhevery", "d": "10/2015"}, {"body": "board general approach minor nits need add one per import add unless determine ed coming probably could reading summaries transformer generates try avoid changing line numbers keep source maps fresh calls happen line opening bracket method labeled", "d": "10/2015"}, {"body": "kegluneq good points updated description", "d": "10/2015"}, {"body": "another edit renamed", "d": "10/2015"}, {"body": "fine proposal comment dart specific", "d": "10/2015"}, {"body": "wrong angular github apologies", "d": "10/2015"}, {"body": "type", "d": "10/2015"}, {"body": "examples implement analyzer would walk type hierarchy figure", "d": "10/2015"}, {"body": "related", "d": "10/2015"}, {"body": "well question type event declarations something implementing yes sure extracting event type trivial", "d": "10/2015"}, {"body": "something implementing stream yes", "d": "10/2015"}, {"body": "good yes proposed solution works thank", "d": "10/2015"}, {"body": "seems like jquery plugin binds event listener could cause issue every time listener executed would trigger change detection issue one way solve would call plugin outside angular zone check later today solves issue", "d": "10/2015"}, {"body": "reproduce issue ubuntu ff could please try report helps", "d": "10/2015"}, {"body": "thanks dup please track one", "d": "10/2015"}, {"body": "different", "d": "10/2015"}, {"body": "jessegood quite different proposal understand reading design doc inheriting directives throughout view hierarchy new proposal allows specify platformdependent set default directives", "d": "10/2015"}, {"body": "nativescript might needed nativescript renderer determined element name native component use similar browser also ngif ngfor independent environment relating browser seems correct", "d": "10/2015"}, {"body": "ionic probably soon need hook renderer well eg define click event really", "d": "10/2015"}, {"body": "side note want introduce need way tell dart transformers future js build tools ides platform used directives active globally could ngconfjson file similar tsconfigjson file tylescript tools would locate looking current directory walking could also used eg configuring element schema registry thu oct pawel kozlowski notifications githubcom wrote jessegood quite different proposal understand reading design doc inheriting directives throughout view hierarchy new proposal allows specify platformdependent set default directives reply email directly view github", "d": "10/2015"}, {"body": "typotter pointed viewchild viewchildren seem order operations viewquery", "d": "10/2015"}, {"body": "internal issue", "d": "10/2015"}, {"body": "think would note gets called multiple times sure interested first call", "d": "10/2015"}, {"body": "first call yes called early example", "d": "10/2015"}, {"body": "learned afterviewchecked sure really provide quick explanation built virtualized spreadsheet component use give current grid cell focus based arrow key based navigation appears work assuming event fires model updated fire view updates result model updates demo works seam work curious details event relates timing view side effects model updates", "d": "10/2015"}, {"body": "jbdeboer oh wait nt seen lifecycle hooks implemented child component vs parent component result expected query ready hook parent component happen later point time vs one child component sure get trying use case thelgevold called view checked change detection update view based model response see doc runnable examples", "d": "10/2015"}, {"body": "passing configuration data parent child using viewquery want need avoid state child renders invalid data eg example never render initial experimentation changes stream fires even parents afterviewinit expect issue wednesday october victor berchet notifications githubcom wrote jbdeboer oh wait nt seen lifecycle hooks implemented child component vs parent component result expected query ready afterviewinit hook parent component happen later point time vs one child component sure get trying use case thelgevold afterviewchecked called view checked change detection update view based model response see doc runnable examples reply email directly view github", "d": "10/2015"}, {"body": "vicb thanks mean view settled time calling afterviewchecked meaning effects detected model changes rendered html", "d": "10/2015"}, {"body": "yep", "d": "10/2015"}, {"body": "discussion jbdeboer decided best use case instead data passed di closing infeasible", "d": "10/2015"}, {"body": "use force cpu load sometimes see changing click narco details section changes narco details fraction second later changes mr nice foo details never happened without forcing cpu load", "d": "10/2015"}, {"body": "goes versus", "d": "10/2015"}, {"body": "couple things nt understand proposed solution every directive declaring local variables going provide type argument like case currently declares property expected see instead expectation ide solve set type equations type parameters using properties order know exact types subclass fields", "d": "10/2015"}, {"body": "yes directive would implement give ide hints sorry typo changed yes ide solve type equations propagate types problem ideas make bettersimpler please share", "d": "10/2015"}, {"body": "problem want make sure correctly understand solution see used thank think give analysis plugin enough type information", "d": "10/2015"}, {"body": "scheglov could another look simplified proposal rely new interface rather make parameterized locals type would also work", "d": "10/2015"}, {"body": "yes works", "d": "10/2015"}, {"body": "hey binarious according observable documentation inteded behavior pushbased everytime create new request want pass request different services use saw operator angularconnect talk ben lesh change nth subscribers sharing result looks awesome plnkr example check network tab console hope helps", "d": "10/2015"}, {"body": "hey ericmartinezr great thanks lot clarification example", "d": "10/2015"}, {"body": "something wrong hard say based info provided could try reproduce problem plunker fork one documentation site thnx", "d": "10/2015"}, {"body": "ok got error cames livereload behavior provide gruntexpress task thanks pkozlowskiopensource", "d": "10/2015"}, {"body": "hi cbalit could please explain solve problem issue architecture uses gulp browsersync superstatic gruntexpress thanks", "d": "10/2015"}, {"body": "hi guilhermevrs fact set livereload property gruntexpress config false", "d": "10/2015"}, {"body": "hi cbalit nt think case tried thing browsersync result always thanks anyway", "d": "10/2015"}, {"body": "take look", "d": "10/2015"}, {"body": "yes see", "d": "10/2015"}, {"body": "vsavkin think need something like see", "d": "10/2015"}, {"body": "totally make sense custom directives mean u still able use correct wrong custom directives point nt really make sense use syntax proposed proposal input elements guess seems reasonable need handle directives differently point think consistency drives point might need stick", "d": "10/2015"}, {"body": "iamisti need use custom directives since directive create propertyevent pair allow bound using notation", "d": "10/2015"}, {"body": "like wrapas", "d": "10/2015"}, {"body": "point personal experience original api see turns really confusing importexport really depend point looking wether really making head hurt one wrote component exported imports component give headache quickly reason like implies specific direction makes sense component component makes sense component component chosen name pascalprecht sure understand argument names opposite want upgrade used downgrade used wardbell confusing every component wrapped implies direction", "d": "10/2015"}, {"body": "like", "d": "10/2015"}, {"body": "seems pretty clear indicators direction upgrade downgrade slightly pejorative problem pascal talking nt strong feelings asked", "d": "10/2015"}, {"body": "dont like terms", "d": "10/2015"}, {"body": "upgrade downgrade feel like final outcome eg compx downgraded therefore longer used", "d": "10/2015"}, {"body": "direction needed specify wrapping mean taking component making available", "d": "10/2015"}, {"body": "works", "d": "10/2015"}, {"body": "agree downgrade sounds pejorative", "d": "10/2015"}, {"body": "sure understand argument names opposite want upgrade used downgrade used mhevery yupp said technically correct word downgrade nt really fit process upgrading think various proposals maybe go one", "d": "10/2015"}, {"body": "another idea creating internal namespace something like js import upgradeadapter let adapter new upgradeadapter let adapter using let app angularmodule myapp appdirective productdetail productdetail appfactory productservice productservice using component directives ngfor productlistitem template class productlist consistently using provides clue developer api working takes arguments context coming also makes adapter method names less noisy provides simple extension adapters either context", "d": "10/2015"}, {"body": "assuming dupe", "d": "10/2015"}, {"body": "vguede nt way access currently injector access onactivate method called constructor", "d": "10/2015"}, {"body": "brandonroberts many thanks", "d": "10/2015"}, {"body": "solved new compiler parser", "d": "10/2015"}, {"body": "hey settrend repo looking one v", "d": "10/2015"}, {"body": "oops sorry nt recognize distinction blush", "d": "10/2015"}, {"body": "investigate get change", "d": "10/2015"}, {"body": "great", "d": "10/2015"}, {"body": "rolandjitsu show routeconfig better yet runnable example may improper use api", "d": "10/2015"}, {"body": "btford tried app available removed since working could try make plunk tonight illustrate behaviour basically happens perhaps wrongly using api also keep getting things like use browser back button navigates back path path leads furthermore reason could debug invoked navigates page change detection seems triggered click inside input blur sorry pasting links", "d": "10/2015"}, {"body": "thanks report please reopen", "d": "10/2015"}, {"body": "probably already covers work components bound route", "d": "10/2015"}, {"body": "nt want breaks encapsulation component model", "d": "10/2015"}, {"body": "mhevery please check next time tagging issues like community nt spend time something fruitless", "d": "10/2015"}, {"body": "btford sorry", "d": "10/2015"}, {"body": "talking tomorrow angularconnect talk streamed watch live tomorrow later youtube", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "issue pipe marked pure runs time", "d": "10/2015"}, {"body": "hey gregjacobs repo looking one", "d": "10/2015"}, {"body": "ah sorry thanks", "d": "10/2015"}, {"body": "cents think would belong external package angular core something potentially specific app implementation", "d": "10/2015"}, {"body": "whats see specific load static html nt depend javascript class easily register routeconfig similiar existing approaches like route asyncroute end put routeconfig make button view nt mean put presented code angular dirty code hacked without much knowledge existing approach would write class like every htmlfile register routconfig route make buttons ps maybe also talked created buttons convenient way nt become part framework", "d": "10/2015"}, {"body": "add feature universal nt make core understand benefits probably interesting server rendering section parts app server view etc", "d": "10/2015"}, {"body": "well saw thought way complicated looked route routedefinition class could easily achieve following export class htmlroute implements routedefinition data path string component type string loader function redirectto string constructor path templateurl data path string templateurl string string data thispath path use routeconfig like makes framework would favor create pull request", "d": "10/2015"}, {"body": "mhevery rkirov vsavkin regardless represented api would nt require changes core going retag reflect way router happy", "d": "10/2015"}, {"body": "two kinds including static data directives likely nt want security breaking mental model template loading static html doc done trouble safe needs sanitizer lot security implications", "d": "10/2015"}, {"body": "version npm", "d": "10/2015"}, {"body": "earlier npm v updated node npm hour back latest version hope work right clonecurrenttree happening", "d": "10/2015"}, {"body": "ca nt repro", "d": "10/2015"}, {"body": "something might supported future yep reasonable feature nt got yet", "d": "10/2015"}, {"body": "seems related running dart dev", "d": "10/2015"}, {"body": "fixed head", "d": "10/2015"}, {"body": "varghesep nt know going however invokes example", "d": "10/2015"}, {"body": "upgraded alpha unfortunately problem see oninit dashboardcomponent gets called peoplecomponent also nt see error console difference see code following code dashboardhtml suggestion debug find oninit peoplecomponent called", "d": "10/2015"}, {"body": "varghesep try", "d": "10/2015"}, {"body": "ericmartinezr tried suggestion work please note oninit dashboardappcomponent works fine without importing oninit please see screen shot chrome dev tools see oninit undefined nt think import oninit anymore latest alpha version think may issue babel compiling code correctly may work typescript compiler rosendi shown", "d": "10/2015"}, {"body": "says implement interface execute custom initialization logic though component lifecycle tracked without extending interfaces etc hmm expected behaviour documentation outdated varghesep latest alpha version exported member checked", "d": "10/2015"}, {"body": "rosendi sample provided also import oninit documentation says oninit called right directive databound properties checked first time suspecting whether happening peoplecomponent causing follow app lifecycle", "d": "10/2015"}, {"body": "varghesep misread implementation extending clear says example method exists called right necessary import extend component class interface back suggestion problem babel plunk works", "d": "10/2015"}, {"body": "rosendi thanks examples debugged code see lifecycle hooks like oninit considered second component use event like onactivate peoplecomponent event triggered navigation complete gets called oninit navigation complete code exited run life cycle hooks one important thing mention use jspm systemjs way wire app like javascript systemimport reflectmetadata function systemimport function systemimport dashboardapp catch consoleerrorbind console", "d": "10/2015"}, {"body": "mhevery nt think bug router since plunks systemjs based typescript work fine point might varghesep environment varghesep could reproduce issue plunk", "d": "10/2015"}, {"body": "provide example would imagine work", "d": "10/2015"}, {"body": "hey thanks reply mind imagine simple way pass regular expression instead string think possible declare route ways posts id posts id", "d": "10/2015"}, {"body": "reasonable feature request super high priority moment", "d": "10/2015"}, {"body": "yep nt highpriority feature plan future", "d": "10/2015"}, {"body": "hello anguar possible route params like routecurrenttemplateurl routeparamssr routeparamsty routeparamstc dash important get url seo friendly tried implement without success possible present version thank advance", "d": "10/2015"}, {"body": "yet", "d": "10/2015"}, {"body": "thank reply focus something else moment", "d": "10/2015"}, {"body": "thanks reminder actually first alpha nt want attempting avoid bringing whole rx updating import blocked pending resolution", "d": "10/2015"}, {"body": "ah good know thanks", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "right ran ago happens probably directive uses workaround iterating children finding first element needed case use edit know point anyway affects may affect others css selectors html css div span wo nt work", "d": "10/2015"}, {"body": "know use point lists expect children insert anything else along also little weird first time see nt work clue", "d": "10/2015"}, {"body": "according spec element containt check definition scriptsupporting elements represent anything ie rendered used support scripts eg provide functionality user following elements scriptsupporting elements script template first child element right developerfriendly kind element like frameworks insert tags html content tag", "d": "10/2015"}, {"body": "content tag content marks place views inserted", "d": "10/2015"}, {"body": "vicb said content anchor angular know insert views case place knows add elements next", "d": "10/2015"}, {"body": "tbosch switch back new compiler would make problem go away", "d": "10/2015"}, {"body": "nevermind figured load traceurruntime", "d": "10/2015"}, {"body": "removed traceur instead use", "d": "10/2015"}, {"body": "ericmartinezr thank hint works", "d": "10/2015"}, {"body": "duplicate", "d": "10/2015"}, {"body": "looks resolved", "d": "10/2015"}, {"body": "see open issuepr thanks", "d": "10/2015"}, {"body": "fwiw reported days ago closed immediatly", "d": "10/2015"}, {"body": "use case would consider mistake code would like framework tell throwing exception", "d": "10/2015"}, {"body": "think throw error event registered", "d": "10/2015"}, {"body": "ok tolerant accept person policy lead us trouble maybe would lets", "d": "10/2015"}, {"body": "lmfinney mhevery sounds like nt issue related routing still issue", "d": "10/2015"}, {"body": "btford nt know routing involved know able invoke problem reloading routerrenavigate problem might rewritten part app problem anymore initial implementation used button bars embedded bigger component used javascript define configurations buttons new approach extracts button bar component buttons defined html", "d": "10/2015"}, {"body": "think related view caching angular reuses previously created dom elements default see verify adding provider providers passed bootstrap deactivate view pooling tue oct lance finney notifications githubcom wrote btford nt know routing involved know able invoke problem reloading routerrenavigate problem might commandcompilermergeattributevalue rewritten part app problem anymore initial implementation used button bars embedded bigger component used javascript define configurations buttons new approach extracts button bar component buttons defined html reply email directly view github", "d": "10/2015"}, {"body": "check live stream angular connect next week matsko robertmesserle talk animation probably get answers", "d": "10/2015"}, {"body": "ericmartinezr implementation animation temporary system real system announced next week", "d": "10/2015"}, {"body": "ohhh ok thanks heads try achieve real system nt already p closing", "d": "10/2015"}, {"body": "could one template directive per element directive current invalid category categorydisplayname working extra div level category categorydisplayname working single div category categorydisplayname error example report error could check already pending issue amp close case", "d": "10/2015"}, {"body": "reasoning behind limitation one template directive per element case angular seems like unnecessary limitation imo also annoyance converting angular angular since change markup use wrapper element", "d": "10/2015"}, {"body": "particular case exactly want categories returns evaluate ten times display nothing end evaluate first call probably want second solution trivial case solve cases things explicit", "d": "10/2015"}, {"body": "one solution give directives priority dictate evaluation order case ngif could take precedence ngfor ngif false execution ngfor skipped together", "d": "10/2015"}, {"body": "reasoning behind limitation one template directive per element may nt want walk dom collect directives like angular perf", "d": "10/2015"}, {"body": "priorities work directives might different need explicit work time perf problem much better angular", "d": "10/2015"}, {"body": "end big deal long people aware limitation nt see optional directive priority property default value wouldnt work custom directives priority could offset make sure coredirectives always take precedence", "d": "10/2015"}, {"body": "think would cool directives evaluated order exist markup example html name could desugared html name could desugared unfortunately dom namednodelist nt guarantee maintain order maybe one reason implement think vicb thelgevold mhevery pkozlowskiopensource", "d": "10/2015"}, {"body": "interesting would clear departure html way things mentioned nt guarantee order attrs imo slippery path take ca nt put finger gutfeeling screams atm think got bigger problem desugared form way could remember write correctly top head agree pb solve", "d": "10/2015"}, {"body": "think would cool directives evaluated order exist markup example far noticed versions internet explorer reorder attributes alphabetically", "d": "10/2015"}, {"body": "sort supported angularjs created endless sets issues going support angular easy work around nest tag", "d": "10/2015"}, {"body": "thanks responses plunker simple show problem actual use case bit complex need use one properties showhide element wrapping template tag wo nt work wo nt access object actually using instead wrapping inner content ngif still show button reading replies decided hide button class hopefully nt run problems approach created new plunker show complex use case anyone stumbles let know better way still learning angular vicb created issue better error messages", "d": "10/2015"}, {"body": "brandyscarney thanks creating new issue probably looking something like would method class returning list categories filtered name one important thing must return new array time method called otherwise change detection get confused ie work return new array categories modified plans improve implementing functionality", "d": "10/2015"}, {"body": "vicb actually started way thought ngif would simplest way thanks mentioning though letting know return array time probably end way", "d": "10/2015"}, {"body": "thnx reporting tracked", "d": "10/2015"}, {"body": "updated jspm packagejson points jspm typescript devdependencies jspm dependencies angular version set npm delete jspm npm directories run install sure need update configjs file would nt surprise", "d": "10/2015"}, {"body": "get found getting right everything else loads properly least looks like cant change fileextension true imports wont work devjs", "d": "10/2015"}, {"body": "nt support jspm community recommend instead", "d": "10/2015"}, {"body": "thanks already pr fix", "d": "10/2015"}, {"body": "closing duplicate", "d": "10/2015"}, {"body": "nayyarjamal fork repository use command gulp npm run gulp browsersync connecting", "d": "10/2015"}, {"body": "tried still working shows another error use gulp run project error", "d": "10/2015"}, {"body": "nayyarjamal looks like problem specific project setup might try asking gitter channel stackoverflow please try use github reporting issues specific framework thanks octocat closing feel free discuss", "d": "10/2015"}, {"body": "explain looking work around issue able override viewresolver could alter directives pulled viewdecorator like import injectable injector type bind import viewmetadata viewresolver injectable export class diviewresolver extends viewresolver injector injector constructor injector injector thisinjector injector super", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "think oversight", "d": "10/2015"}, {"body": "per vsavkin issue new compiler synced since longer look things strings", "d": "10/2015"}, {"body": "could point test case verified would great", "d": "10/2015"}, {"body": "would amazing unfortunately easy way know something fold ionic guess controls whole rendering knows big rows way ngrepeat know would run browser layout engine extremely expensive unlikely able deliver feature", "d": "10/2015"}, {"body": "think correct behavior saying list unknown empty imagine list would created items would expect callback decrease number items list gets called reach items would call right empty array still information delivered", "d": "10/2015"}, {"body": "resolved longer inject constructor rather set properties component query resolved", "d": "10/2015"}, {"body": "upon closer investigation exception coming correct location", "d": "10/2015"}, {"body": "make sure using latest versions node npm issue adding path latest node web tools external paths fixed", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "matthewddennis thanks help old version problem updated node latest version moved path external tools order downloads unfortunately make change get errors atleast isolated issue note also added node folder experience problem", "d": "10/2015"}, {"body": "matthewddennis curious node path used web tools external paths getting errors add latest node version added question team thanks", "d": "10/2015"}, {"body": "first looks like legit issue second implemented another open issue passing complex objects params navigation", "d": "10/2015"}, {"body": "experience since every backend language use different deserialization logic query string use better pass one single param query string complex object json encoded string thanks", "d": "10/2015"}, {"body": "nayyarjamal consumes dsl use alias route configuration try", "d": "10/2015"}, {"body": "working thanks blush", "d": "10/2015"}, {"body": "references changelog angular issue commit", "d": "10/2015"}, {"body": "think might looking angular lives", "d": "10/2015"}, {"body": "ok sorry", "d": "10/2015"}, {"body": "need include instead", "d": "10/2015"}, {"body": "sabartius mean work corejs well", "d": "10/2015"}, {"body": "guys need polyfill want run browsers nt support new methods pretty much majority point corejs work well top want run older ies might need polyffils check needed framework run ie nt need traceurruntime traceurruntime polyfills inside could act polyfills said much polyfills using shim methods bit overkill", "d": "10/2015"}, {"body": "including solve issue", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "possible get stream angular provides events", "d": "10/2015"}, {"body": "probably also array would better defined array modified whenever things alter array would theory trigger change detection", "d": "10/2015"}, {"body": "tried many variants order understand change detection works sorry small bugs according article onpush strategy forces component depends input properties immutable therefore immutable example immutable data changed created push instead return new immutable collection previous example use mutable collection understand correctly change detection occurs property case replaced mutated", "d": "10/2015"}, {"body": "found live example angular source code", "d": "10/2015"}, {"body": "yes actually changing input would trigger change detection simply definition says act changes data expected immutable", "d": "10/2015"}, {"body": "example posted manually triggers change detection actually lets angular know next event occurs current zone trigger change components marked check least understanding also see bit maybe use", "d": "10/2015"}, {"body": "rolandjitsu u read article vsavkin change detection angular example immutable structures change detection occurs manually call data property replaced maybe wrong however onpush strategy detect input replacement automatically please take look example", "d": "10/2015"}, {"body": "rosendi yes right trigger change detection replace input value may bug mhevery labeled may also expected behaviour vsavkin surely tell us going", "d": "10/2015"}, {"body": "rolandjitsu look new plunk two components named component host component fils data case component bound binding occurs input property purposely use mutable data structures track object mutation strategy trigger change detection scenario strategy works expected viz component changed property replaced issue still could nt closed since previous plunk replacing object entirely component named trigger change detection might unexpected behavior vsavkin could clear", "d": "10/2015"}, {"body": "strategy component checked mode set checked called observe first examples think expecting behavior similar ie running cd property triggers change event implemented dart atm must work improving documentation area edited", "d": "10/2015"}, {"body": "rosendi answer last comment trigger change detection input property changed result change detection check first plunk parent updated trigger check child second plunk way know input changed dirty check unless input properties changed call explicitly trigger change detection callback one last thing changes result event would automatically dirty check hopefully answers questions", "d": "10/2015"}, {"body": "vicb thank detailed explanation close discussion improved documentation", "d": "10/2015"}, {"body": "robwormald jeffbcross please take care since gists anyone else need involved", "d": "10/2015"}, {"body": "igorminar sure update plunk folks forked create samples though trying understand purpose updating templates api docs created future based updated template thought close api docs process use embedded code samples instead plunker case", "d": "10/2015"}, {"body": "btw update since version encouraging folks use npm new feature release addition minlength maxlength validators", "d": "10/2015"}, {"body": "ts plunker template updated jeffbcross think mostly quick bug reproductions generalized freeform plunkery anything specific docs rkirov owns versions believe", "d": "10/2015"}, {"body": "base plunk also updated", "d": "10/2015"}, {"body": "robwormald cool mostly core contributors benefit published somewhere community members use starting point", "d": "10/2015"}, {"body": "mine rkirov templates ones see bottom list", "d": "10/2015"}, {"body": "upgraded", "d": "10/2015"}, {"body": "robwormald using input output decorators instead component intput output template", "d": "10/2015"}, {"body": "done cross check make sure right oct rado kirov notifications githubcom wrote robwormald using input output decorators instead component output template reply email directly view github", "d": "10/2015"}, {"body": "ts plunker still includes traceurruntime remove please also see plunkers use minified bundles intentional maybe perf reasons think makes debugging harder switch nonminified version needed lastly ts plunker pulls system codeangularjs pulls jspmio unify unless jspmio unreliable use everywhere wed oct rob wormald notifications githubcom wrote done cross check make sure right oct rado kirov notifications githubcom wrote robwormald using input lt output decorators instead component output template reply email directly view github lt reply email directly view github", "d": "10/2015"}, {"body": "currently none working least pc console shows info", "d": "10/2015"}, {"body": "looks like local proxy issue thu oct roel van bakel notifications githubcom wrote currently none working least pc console shows get virusfound reply email directly view github", "d": "10/2015"}, {"body": "sure since issues single file thought mention anyway", "d": "10/2015"}, {"body": "updated", "d": "10/2015"}, {"body": "looks like resolved closed closing reopen", "d": "10/2015"}, {"body": "btw banana reference comes functional programing papers term already used f cc vsavkin", "d": "10/2015"}, {"body": "nt really care one end however maybe help change mental model thinking current one boxed banana banana box", "d": "10/2015"}, {"body": "thelgevold still nt solve problem", "d": "10/2015"}, {"body": "like idea current style prop based desugared double square brackets twoway biding simple ca nt wrong idea", "d": "10/2015"}, {"body": "personally think removed write desugared form less magical renaming confusing imho", "d": "10/2015"}, {"body": "personally would nt mind meta based binding syntax perhaps one could default know lot people disagree always argued onetime default feels natural opt change tracking needed opposed opting needed default performance enhancement since common need one time binding help compose default view", "d": "10/2015"}, {"body": "igorminar havig would read event realize see confusion think get equally confused way reads binding ohh see bidirectional words see two syntaxes wash nt see one qualitatively better vote either leave support btw throwing error unrecognized syntax silent failure go away", "d": "10/2015"}, {"body": "live boxed banana definitely allow syntaxes issue throwing error unrecognized syntax found", "d": "10/2015"}, {"body": "closing since change required schema support complain extra attributes prevent", "d": "10/2015"}, {"body": "definitively got issue already going close one duplicate", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "open changing sure build systems nt server issue give example setup problematic igorminar matsko think", "d": "10/2015"}, {"body": "defaulted hash location many people nt even know another option stick pushstate default unless overwhelming evidence problematic rather work exposing developers correct serve side configuration provide box wherever", "d": "10/2015"}, {"body": "know simple webservers support mapping minimal configuration something like", "d": "10/2015"}, {"body": "issue", "d": "10/2015"}, {"body": "think force backend concern frontend framework way get push state work configuring server could involve number permutations concerns unified way one size fits solution forcing developer know angular also configure push state server one barrier entry strong proponent easy mode default plenty room power easy configuration", "d": "10/2015"}, {"body": "simpulton less friction newcomers better experience part angular popularity could get started quickly experiment framework without much fuss stick pushstate default unless overwhelming evidence problematic rather work exposing developers correct serve side configuration provide box wherever igorminar imo correct debatable need support older browsers ca nt use push state anyway great diversity web servers used dev prod sure want go business handholding people comes serverside config", "d": "10/2015"}, {"body": "think force backend concern frontend framework right could said backend forcing frontend behavior try improve tooling first think johnpapa implemented something like support history lets get tools good place let people spend time tools come back issue better understanding", "d": "10/2015"}, {"body": "simpulton pkozlowskiopensource nice default adding routing since nt give page refresh surprise enabled", "d": "10/2015"}, {"body": "folks use real server wo nt issue code really onboarding friction understand felt friction share folks think better option tooling brian said want folks use mode wrote simple server called runs launch static server inject css refresh watched files change also relies handles issue mentioned since using much easier time getting folks board saying best way think simple server make much easier still drive folks mode", "d": "10/2015"}, {"body": "simpulton idea took bit time finding solution development think better spafriendly default built angular record easiest solution found issue combine browsersync connecthistoryapifallback plugin used like", "d": "10/2015"}, {"body": "defaulting need backend tweaking aka hash location even tools easy set nt want use easytosetup tool want use tool worry setting backend stuff spin new angularbased prototype", "d": "10/2015"}, {"body": "example confusion current defaults", "d": "10/2015"}, {"body": "use typescript", "d": "10/2015"}, {"body": "example", "d": "10/2015"}, {"body": "fixed csslib change angular necessary adding test futureproofing", "d": "10/2015"}, {"body": "actually think reasonable behavior using hashlocation strategy nt reason also use query params way update query params clientside without page refresh describe aside perhaps aesthetic preference problematic", "d": "10/2015"}, {"body": "page base url irrelevant router url path return", "d": "10/2015"}, {"body": "see behavior set app base reason include domain part url", "d": "10/2015"}, {"body": "app base url page preloadembed data server based param page loaded spa router parameter used navigration path works fine commit", "d": "10/2015"}, {"body": "svrcekmichal chance move example runable plunkr jsfiddle really help save time debugging thanks", "d": "10/2015"}, {"body": "btford tried got", "d": "10/2015"}, {"body": "great work svrcekmichal backlog pretty long definitely spend time looking get chance", "d": "10/2015"}, {"body": "hey check issue solution worked plnkr want something local follow pkozlowskiopensource repo", "d": "10/2015"}, {"body": "yep pointers new docs uptodate getting started guide online soon", "d": "10/2015"}, {"body": "basvandenheuvel see sorry nt know solution visual studio though", "d": "10/2015"}, {"body": "thanks indeed nt able solve problem vs commented line dts file", "d": "10/2015"}, {"body": "correct way around issue using seed added jquery run third party scripts hitting issue commenting fine hacky", "d": "10/2015"}, {"body": "dennisroam closed issue without giving kind solution sorry moment comment line problem run npm update npm install file downloaded comment line nt understand angular would declare var named since thats jquery past years", "d": "10/2015"}, {"body": "think intentional", "d": "10/2015"}, {"body": "specify exact version want install", "d": "10/2015"}, {"body": "want", "d": "10/2015"}, {"body": "ericmartinezr npm install worked thanks", "d": "10/2015"}, {"body": "ericmdantas nt know one keep mind much easier specifying version thanks", "d": "10/2015"}, {"body": "smile", "d": "10/2015"}, {"body": "hey racksen issue related", "d": "10/2015"}, {"body": "duplicate using event handler without handler nt make much sense nt want read dom time like trying example many ways differently", "d": "10/2015"}, {"body": "pkozlowskiopensource say using event handler without handler nt make much sense understand written doc confusing", "d": "10/2015"}, {"body": "noted docs need fixed error message needs fixed docs redone atm covered soon", "d": "10/2015"}, {"body": "one example would save digging code missing semicolon adding fixes indentation remember run linter catches kinds things", "d": "10/2015"}, {"body": "ha nt run travis", "d": "10/2015"}, {"body": "maybe happens clangformat clangformat much faster alexeagle rescue", "d": "10/2015"}, {"body": "run asi linter think paths match file question think linting everything objection probably noisy commit turn", "d": "10/2015"}, {"body": "indeed looks like missing", "d": "10/2015"}, {"body": "workaround", "d": "10/2015"}, {"body": "think deprecated replaced juliemr knows probably update inline doc remove references add doc", "d": "10/2015"}, {"body": "new never exported want need use yes vicb says preferred method unnecessary use jasmine spies internal library allow transpilation dart", "d": "10/2015"}, {"body": "vicb juliemr understand use suggested know used internally make switch jasmine spies", "d": "10/2015"}, {"body": "juliemr consumers setup tests sut observable eg rxjs observable promise expects promise returned test method supposed internal use another way invoking something like callback jasmine tests", "d": "10/2015"}, {"body": "larrifax rxjs topromise method trick guess", "d": "10/2015"}, {"body": "agreed", "d": "10/2015"}, {"body": "yay thanks jumping", "d": "10/2015"}, {"body": "proposed resolution", "d": "10/2015"}, {"body": "proposed resolution would use nodestyle resolution relative paths internally alexeagle said would take couple fixes make work let comment", "d": "10/2015"}, {"body": "alexeagle fix", "d": "10/2015"}, {"body": "alexeagle looks like might fix way", "d": "10/2015"}, {"body": "think fixed closing unless robwormald says otherwise judging imports", "d": "10/2015"}, {"body": "jeffbcross robwormald may know fixed issue projects", "d": "10/2015"}, {"body": "use dependency injection better react anyone wondering reactlike context angular terms like optin", "d": "10/2015"}, {"body": "could add example aetet", "d": "10/2015"}, {"body": "oh would great", "d": "10/2015"}, {"body": "mhevery take look request seems like good boilerplate savings reasonable method making work", "d": "10/2015"}, {"body": "aetet tell seems would like object called context available components ca nt configure di pass class context component selector foo template class foo constructor context context component providers context child directives able inject instance template directives foo class myapp bootstrap myapp", "d": "10/2015"}, {"body": "ok see exactly need thanks one question read doc currently doc preview api responds", "d": "10/2015"}, {"body": "aetet redux demo weeks back tldr redux store wrapped observable stream pushing updates components might find helpful", "d": "10/2015"}, {"body": "working intended docs works", "d": "10/2015"}, {"body": "update turns routersubscribe firing correctly closing bug navbar component subscribes router determines whether display certain menu items depending route active callback subscribe flips flag view typically picks updates reason one case routernavigate view routersubscribe calls right callback callback correctly flips flag view nt update case router fault", "d": "10/2015"}, {"body": "yep still process working docs please bear us", "d": "10/2015"}, {"body": "closing track individual docs", "d": "10/2015"}, {"body": "repo angular please move issue better use gitter chat support questions like thanks tue oct akos vandra notifications githubcom wrote hello creating nested directive similar create directives communicate problem nesting scopes would like access outer scope inside foobar however order use parent parent parent parent way isolate scope select variables panes pane addpane select case using bindtocontroller wo nt either want keep directive reusable without listing variables needs access outer scope reply email directly view github", "d": "10/2015"}, {"body": "think zone auto gc soon async callbacks closed app would mean settimeouts event listeners cleaned sure explicit thing", "d": "10/2015"}, {"body": "tasked johnpapa determining new name john conclusions pascalprecht interested making breaking change angular connect", "d": "10/2015"}, {"body": "understood totally angularconnect mon oct pm brian ford notifications githubcom wrote tasked johnpapa determining new name john conclusions pascalprecht interested making breaking change angular connect reply email directly view github", "d": "10/2015"}, {"body": "polled lot devs informally resounding answers folks liked cited liked routerview similar uiview ngview formal poll like want go dont think name critical call whatever prefer name makes sense seem good", "d": "10/2015"}, {"body": "dont think name critical call whatever prefer name makes sense seem good agree long chance make names nicer think like better opinion", "d": "10/2015"}, {"body": "good first two worried last one going confusing slight preference", "d": "10/2015"}, {"body": "cool let go post angularconnect ofc", "d": "10/2015"}, {"body": "like best personally", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "also similar previous newcomers understand easily meaning component", "d": "10/2015"}, {"body": "favorite well", "d": "10/2015"}, {"body": "routerview", "d": "10/2015"}, {"body": "okay think agreed pr coming", "d": "10/2015"}, {"body": "late party wanted speak favor apparently smiley nice name", "d": "10/2015"}, {"body": "nt think directive represent view think something contains view better name would choice plus really dealing views components serious point would properly descriptive name even clear may view common terminology strictly speaking correct directive anchor container components get loaded component would like calling garage car car goes", "d": "10/2015"}, {"body": "mhevery yes right course exactly accurate less important communicating effectively developers use nt think leads anyone bad path folks spoke seemed click said fine works", "d": "10/2015"}, {"body": "think would better suggests window frame something could anything could lot things suggests router view see google computing", "d": "10/2015"}, {"body": "mind component created next loadnexttolocation example created inside change made animating views switching old new technically viewport nt make sense behavior outlet", "d": "10/2015"}, {"body": "true technically speaking outlet also something plug next good name would something similar", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "also never triggers", "d": "10/2015"}, {"body": "goddamit mind remembers important stuff late using aftercontentinit thisitemschangesnext still seem trigger", "d": "10/2015"}, {"body": "gitter room told replaced still sorry regarding subscribe emitting subscribers change querylist already emits subscribe", "d": "10/2015"}, {"body": "believe known issue yjbanov confirm", "d": "10/2015"}, {"body": "yep sent pr fix", "d": "10/2015"}, {"body": "yjbanov pr angularangulardart angularangular", "d": "10/2015"}, {"body": "igorminar right angulardart breaks us run externalbenchmarks", "d": "10/2015"}, {"body": "ah thanks thu oct yegor notifications githubcom wrote igorminar right angulardart breaks us run externalbenchmarks reply email directly view github", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "get running alpha pub get loading observe smokesrcdefaulttransformer transformers builtin library dart profiler available standalone vm package analyzersrcgeneratedutilitiesgeneraldart error line pos library handler failed import dart profiler dart isolatepatchisolatepatchdart isolatespawnuri dart isolatepatchisolatepatchdart isolatespawnuri package pubsrcdartdart isolatebuffer dart isolatepatchisolatepatchdart startisolate dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage", "d": "10/2015"}, {"body": "rightisleft help", "d": "10/2015"}, {"body": "believe issue fixed loading systemjs scripts ca nt remember details documentation updated get app work rearranging like", "d": "10/2015"}, {"body": "thanks strange follow guide results something like system loaded angularjs typescript internally loads appjs", "d": "10/2015"}, {"body": "killercodemonkey moved system would recommend upgrade remove traceur well", "d": "10/2015"}, {"body": "ericcarraway thanks respond played around versions know upgraded system alpha change something else source code upgrading removing traceur system find appjs need load appjs manually indexhtml thanks advance", "d": "10/2015"}, {"body": "killercodemonkey follow template two things template official one btw using safely move includes traceur avoid recent plnkrs break safely remove well note config file pilar thing make everything work expected see plnkr took config removed traceur updated system versions added config file official template works", "d": "10/2015"}, {"body": "ericmartinezr doukasd thnx helping issues killercodemonkey hopefully plunks provided ericmartinezr able figure setup need simple serverside compilation alternative might want look currently massive overhaul entire documentation including quick start guides updates live shortly setup covered great details", "d": "10/2015"}, {"body": "ericmartinezr works plunker local system error message everything loads hellocomponent replaced thanks help ericmartinezr doukasd play around little bit", "d": "10/2015"}, {"body": "killercodemonkey probably typescript thing local machine differs little bit transpile manually command plnkr seems automagically follow pkozlowskiopensource repo see indexhtml file almost identical plnkr also step convert ts js think might missing", "d": "10/2015"}, {"body": "generated appjs load automatically network section chrome developer console", "d": "10/2015"}, {"body": "killercodemonkey ask gitter channel provide plnkr repo least pastebin see set looks like", "d": "10/2015"}, {"body": "ericmartinezr found put ts compiled ts files subfolder everything works lay directly root dir work without error maybe system find appjs changed configjs set appdir however thanks help", "d": "10/2015"}, {"body": "killercodemonkey problem tried solutions errors gone output please help", "d": "10/2015"}, {"body": "need put appts subfolder project dir eg src", "d": "10/2015"}, {"body": "already supported", "d": "10/2015"}, {"body": "clear read article posted issue right way described therein mark component update specific property triggered event received etc without watch individual properties", "d": "10/2015"}, {"body": "sorry wrong version", "d": "10/2015"}, {"body": "yes please oct alex eagle notifications githubcom wrote hourlynightly build available npm would allow people verify fixes easily head without waiting release give us quicker feedback dogfood users reply email directly view github", "d": "10/2015"}, {"body": "sorta related", "d": "10/2015"}, {"body": "thumbsup", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "yeah thinking thing weekend well angular awesome", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "went ahead tried app seeing slightly different behaviour visually component appears ok however click open dropdown get error item selected dropdown notice second error coming zone could related", "d": "10/2015"}, {"body": "nt know app problems eg chrome latest version see clean browser cache launch app two elements rendered fine whereas elements yes refresh browser dropdown rendered fine menubutton error click dropdown item selected see errors described", "d": "10/2015"}, {"body": "suggest using full version also believe still need force polymer use native shadow dom html var polymer polymer polymerdom shadow try see fixes component display problems", "d": "10/2015"}, {"body": "thanks zyzle fixed display problems remain errors click select menu dropdown", "d": "10/2015"}, {"body": "good know vicb sorry ping know looked previous zonepolymer issue raised one seems component specific come across polymer component", "d": "10/2015"}, {"body": "resolved", "d": "10/2015"}, {"body": "mhevery fix master still seeing behaviour", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "polymer needs everybody uses use dom wrappers know things change see want good support polymer components need detect whether polymer page go api", "d": "10/2015"}, {"body": "also see generic polyfill allows use polymer components framework without needed use special dom api", "d": "10/2015"}, {"body": "hi tbosch made several attempts patch recommended nt solve errors reported issue regarding zone", "d": "10/2015"}, {"body": "note would still need explain tsconfig exists missing one flags would possible parse existing file check required flags values display warning configured properly", "d": "10/2015"}, {"body": "yes could ask wait next release widely available could say think bigger question", "d": "10/2015"}, {"body": "totally agree improve first minutes newcomer spent framework also possiblenecessary download type definition files manu", "d": "10/2015"}, {"body": "tsd step typings included npm distro see context", "d": "10/2015"}, {"body": "propose add bit magic postinstall script runs command hacking working directory parent nodemodules piping errors hide much magic shipping npm saying", "d": "10/2015"}, {"body": "alternately npm install g angularcli add simplest first step npm installs inits tsconfig", "d": "10/2015"}, {"body": "alexeagle thanks", "d": "10/2015"}, {"body": "yeah since cli wo nt primary ftue point maybe worth trouble plus never convinced hiding everything programmers useful end since denied chance build good mental model things work", "d": "10/2015"}, {"body": "another argument putting tsconfigjson toplevel probably angularcli user reinstalls get extra file nt", "d": "10/2015"}, {"body": "rise good point specific ideas could make better issue class reason want able called three different ways declaration needs issue click probably want see ideas", "d": "10/2015"}, {"body": "obvious answer place docs declaration component problem var break dgeni presents docs", "d": "10/2015"}, {"body": "try morning nothing else think duplicate tsspecific portion docs places", "d": "10/2015"}, {"body": "alexeagle still coming", "d": "10/2015"}, {"body": "wait till later release", "d": "10/2015"}, {"body": "checked startswith safari return error think reason startswith one features tsc transplie typescript issue", "d": "10/2015"}, {"body": "available browsers uses currently compatibility older browsers using project solve issue", "d": "10/2015"}, {"body": "yes called", "d": "10/2015"}, {"body": "thanks pascalprecht", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "ericmartinezr thanks", "d": "10/2015"}, {"body": "could change script replacement check current url contains wo nt load bundle would work rather create yet another set build artifacts single artifact uses bundle default load individual files based url flag going easier maintain could make nonbundled version default need change tests benchmarks", "d": "10/2015"}, {"body": "might looking outdated docs working example works close issue", "d": "10/2015"}, {"body": "ok see difference actually wondering possible directly put", "d": "10/2015"}, {"body": "ssougnez always need least single root component bootstrap application", "d": "10/2015"}, {"body": "closing one hopfully questions clarified let move discussion", "d": "10/2015"}, {"body": "igorminar besides could update version remove traceur", "d": "10/2015"}, {"body": "igorminar sure used nt see mentionned would nt implicit mode kick used sent pr plunker update ts see", "d": "10/2015"}, {"body": "igorminar see vicb plunkers request thus plunker nt involved systemjs compilation plunker bumps adjust plunker template", "d": "10/2015"}, {"body": "vicb indexhtml ericmartinezr remove traceur later would break relatively recent plunks", "d": "10/2015"}, {"body": "landed", "d": "10/2015"}, {"body": "vsavkin feel free drop priority workaround", "d": "10/2015"}, {"body": "looks resolved version", "d": "10/2015"}, {"body": "tlancina fact bug use eventemitter refactored returned futures releases able use directly querychangessubscribe", "d": "10/2015"}, {"body": "ericmartinezr great thanks feels much better using private property", "d": "10/2015"}, {"body": "duplicate", "d": "10/2015"}, {"body": "ah nt see dup closing", "d": "10/2015"}, {"body": "rolandjitsu possible exception raised inside subscription swallowed still experiencing issue latest angular", "d": "10/2015"}, {"body": "jeffbcross actually nt tried yet got stuck trying fix svg issues updated latest definitely give shot though tell tried switch promises longer issue", "d": "10/2015"}, {"body": "plunker navigate home test thanks brandonroberts", "d": "10/2015"}, {"body": "btford idea", "d": "10/2015"}, {"body": "btford idea long fix bug", "d": "10/2015"}, {"body": "wed oct vincent gu\u00e9d\u00e9 notifications githubcom wrote btford idea long fix bug reply email directly view github", "d": "10/2015"}, {"body": "headers inside options type try instead", "d": "10/2015"}, {"body": "mgechev thanks help way nt make lot sense tried result contenttype get changed", "d": "10/2015"}, {"body": "robhicks would send plnkr reproduces issue", "d": "10/2015"}, {"body": "supposed work match nodes first gets nodes similar template ie given node light dom projected", "d": "10/2015"}, {"body": "looking added master released soon look integration test", "d": "10/2015"}, {"body": "closing works expected", "d": "10/2015"}, {"body": "excellent news looking forward release thanks", "d": "10/2015"}, {"body": "added example interested", "d": "10/2015"}, {"body": "thnaks lot works well", "d": "10/2015"}, {"body": "renamed must specified function returns directive definition typescript function pagedirective return restrict templateurl etc pagedirective canactivate function injectables angularmodule myapp directive page pagedirective", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "works fine ca nt minify code use di canactivate method strict di", "d": "10/2015"}, {"body": "found solution", "d": "10/2015"}, {"body": "following question might simply stupid give try leading slash going optional one level routing go could nt make shorthand syntax bit intuitive looks sth like might totally miss something maybe simplifies use cases otherwise need explain upfront dsl way powerful actually need particular case stick brackets thinking loud would nt surprised reasons ca nt work", "d": "10/2015"}, {"body": "rhs binding needs js literal would nt work nt get tricky sugar proper dsl note make optional rather adds new option link without leading slash distinct semantics", "d": "10/2015"}, {"body": "note make optional rather adds new option link without leading slash distinct semantics ah course hey thanks clarifying", "d": "10/2015"}, {"body": "variable string right", "d": "10/2015"}, {"body": "alias call", "d": "10/2015"}, {"body": "johnpapa correct reference type ericmartinezr opposed alias nt think serves explain meaning better name alias suggests alternative way refer route primary typical case", "d": "10/2015"}, {"body": "think clear conveys name route", "d": "10/2015"}, {"body": "like better well", "d": "10/2015"}, {"body": "nt provide name default something perhaps something defined component", "d": "10/2015"}, {"body": "guess even make default case using component name", "d": "10/2015"}, {"body": "seems semantic well set default component name currently", "d": "10/2015"}, {"body": "guess even make default case using component name talking would break minification nt like idea basing default name property component especially static property moves route name away route defined developer would mentally map route component", "d": "10/2015"}, {"body": "prefer also previous propery", "d": "10/2015"}, {"body": "fine either way would love hear confusions tho", "d": "10/2015"}, {"body": "pascalprecht folks asked alias another route want mimic put name route", "d": "10/2015"}, {"body": "ha third one nice admit cburgdorf also asked property first place especially single component loaded yea let go", "d": "10/2015"}, {"body": "yeah easy win imo", "d": "10/2015"}, {"body": "yep seems like better fit", "d": "10/2015"}, {"body": "would considered good first contribution interested tackling", "d": "10/2015"}, {"body": "tyleranton yep great think accepting either would best fully depreciate option bit later", "d": "10/2015"}, {"body": "hi btford working added classes implementing interface constructors renamed everywhere including unit tests left one test syntax tests passing q throw error prefer one passed", "d": "10/2015"}, {"body": "throw sun oct vamsi v notifications githubcom wrote hi btford working added name string classes implementing routedefinition interface constructors thisname name renamed name everywhere including unit tests left one test syntax q throw error prefer one name passed reply email directly view github", "d": "10/2015"}, {"body": "adding beta since breaking change pr open", "d": "10/2015"}, {"body": "alexpods see saw question error showed nt seem anything like one see repro", "d": "10/2015"}, {"body": "ericmartinezr ouh thanks nt seen close dup", "d": "10/2015"}, {"body": "nope angular still alpha exactly wealth component libraries existing js libraries used via wrapper like angular current state components super experimental mdinput definitely going change long simply nt template nt exist wrote", "d": "10/2015"}, {"body": "got thank much", "d": "10/2015"}, {"body": "jelbourn hi jelbourn mellbourn point existing js libraries used via wrapper like angular saying angular material used inside angular project far see currently public tools consume angular components inside ngupgrade seems collection ideas would use angular material inside angular know sample project thanks", "d": "10/2015"}, {"body": "mellbourn would ngupgrade tool bit developed", "d": "10/2015"}, {"body": "posterity correcting code plnkr following js import component directive view output bootstrap eventemitter directive selector something host input inputhandler outputs fired class somethingdirective output fired eventemitter new eventemitter inputhandler thisfirednext component selector hello view template directives somethingdirective class hellocmp count number firedhandler thiscount resetcount thiscount bootstrap hellocmp count one one thanks ericmartinezr", "d": "10/2015"}, {"body": "colspan h sugar colspan h turn means bind h colspan property colspan property html colspan attribute want bind attribute use attrcolspan h syntax", "d": "10/2015"}, {"body": "nt look like systemjs config correct see working action send plunk need help please direct support questions keep github issues bug reports feature requests thnx", "d": "10/2015"}, {"body": "pkozlowskiopensource nt know close issue example html angular quickstart html body height configure system loader systemconfig defaultjsextensions true systemimport app nt work please nt use nodemodules use cdn changed systemjs error occurs", "d": "10/2015"}, {"body": "closed issue since nothing angular side pb systemjs configuration support question questions belong gitter support channel talking gitter explicitly asked provide plunker help short github place support questions let conversation gitter", "d": "10/2015"}, {"body": "ok thought problem sorry pkozlowskiopensource", "d": "10/2015"}, {"body": "makes sense think already supported property decorators", "d": "10/2015"}, {"body": "would survive minification attribute names valid js identifiers ex", "d": "10/2015"}, {"body": "pkozlowskiopensource attribute names valid js identifiers could normalized lowercamelcase like html property names normalization minification definitely seems like valid point", "d": "10/2015"}, {"body": "pkozlowskiopensource attribute names valid js identifiers could normalized lowercamelcase like html property names normalization course introduces yet another thing remember", "d": "10/2015"}, {"body": "taking tricks consistent possible supported platforms ie dart", "d": "10/2015"}, {"body": "believe hot reloading angular doable however issue seems scope repository seems like good discussion gitter", "d": "10/2015"}, {"body": "yeh many parts workflow nt quite figure yet hot reload one understand importance kickingass workflow lot work going moment priority figure proper packagining bundling story though going close one since immediately actionable radar sure", "d": "10/2015"}, {"body": "printing add parents", "d": "10/2015"}, {"body": "sounds like pain chaining multiple pipes quite common could nt associativity changed possible chanin pipes without needing paranthesis", "d": "10/2015"}, {"body": "gkalpak exactly thoughts especially works fine going reopen one vicb let conversation one", "d": "10/2015"}, {"body": "gkalpak exactly syntax one currently angular", "d": "10/2015"}, {"body": "ref cc mhevery", "d": "10/2015"}, {"body": "agreed parenthesis necessary", "d": "10/2015"}, {"body": "fwiw problem appears limited pipes parameters works fine", "d": "10/2015"}, {"body": "wrote morning describing issues running zonescheduler would solve", "d": "10/2015"}, {"body": "robwormald guess got doublementioned reply make sure follow saying performance benefit would avoid intermediate digests observable chain progressing async tasks part chain would great nt think implementation could rely pipe though tbh zones kind mysterious sure zone scheduler implementation would actually achieve would great", "d": "10/2015"}, {"body": "danculley may related similar problem waiting fix merged test", "d": "10/2015"}, {"body": "point different code path template bindings actions amp would shortcircuit later case today single code path within change shortcircuit template bindings amp actions behavior vsavkin remember change occurred plan shortcircuiting future", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "note contrast original new elements shadowdom work always project using order elements", "d": "10/2015"}, {"body": "think approach useful ngcontent allows devs create templates without gotchas", "d": "10/2015"}, {"body": "refs apple microsoft pushed back select approach due concerns around complexity performance careful perf implication whatever choose implement let start collecting use cases selector specificity would useful", "d": "10/2015"}, {"body": "vicb happens compilation eventually done build step also know new compiler almost impact compile performance essentially add cost one sort operation ngcontent elements template need calculate specifity css selector already parsed via number", "d": "10/2015"}, {"body": "remember static see", "d": "10/2015"}, {"body": "useful link thanks", "d": "10/2015"}, {"body": "common scenario another reallife example simple bootstrap panel directive", "d": "10/2015"}, {"body": "pawel example require special projection order selectors nt overlap thu oct pawel kozlowski notifications githubcom wrote common scenario another reallife example simple bootstrap panel directive reply email directly view github", "d": "10/2015"}, {"body": "tbosch impression template linked would hit pb described understand description would project everything would nothing left anyway going retest scenario report back", "d": "10/2015"}, {"body": "look probably work around time escaping slash instantiating regexp object string yegor notifications githubcom schrieb mi okt demands var urlwithschemare g formatted var urlwithschemare g reply email directly view github", "d": "10/2015"}, {"body": "fix review", "d": "10/2015"}, {"body": "ugh fix broke behaviour regexps take wee bit longer", "d": "10/2015"}, {"body": "ok fixed", "d": "10/2015"}, {"body": "nt issue posted angulario related documentation", "d": "10/2015"}, {"body": "yes belongs angulario", "d": "10/2015"}, {"body": "examples tests use bundles way switch using bundle vs individual files supporting incremental rebundling option moment takes long", "d": "10/2015"}, {"body": "closed", "d": "10/2015"}, {"body": "rob jeff address todaytomorrow", "d": "10/2015"}, {"body": "moving working simple solution manually add combinators need eventemitter without changing anything inheritance", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "regression test complete today", "d": "10/2015"}, {"body": "ericmartinezr plunker syntax error would useful well yeh confirm happens saw today well nt time dig", "d": "10/2015"}, {"body": "pkozlowskiopensource ok goes", "d": "10/2015"}, {"body": "affects quick reference igorminar look potentially assign someone", "d": "10/2015"}, {"body": "ericmartinezr still reproduce error related ts angular seems fixed type would explicit type given ie sure version compiler used plunker still fails", "d": "10/2015"}, {"body": "vicb thanks issue using like said transpiles posted thinking may could something thanks advice", "d": "10/2015"}, {"body": "works tsc plunker using see", "d": "10/2015"}, {"body": "igorminar yes using machine upgraded works nice thanks", "d": "10/2015"}, {"body": "important blocking adamdbradley says another way around", "d": "10/2015"}, {"body": "adamdbradley tbosch discussed today believe tbosch said correct behavior tbosch verify", "d": "10/2015"}, {"body": "tbosch would surprised new behaviour would correct one remember used logic compiler classes set host merged ones already present host element imo made sense would rationale changing merging behaviour", "d": "10/2015"}, {"body": "initial thought treating special case seems wrong intuitive users however alternatives seem right either eg using would clearly show special case however one would use value adding previous behavior back ie host attribtues get merged attributes element", "d": "10/2015"}, {"body": "looks like bug fix element already projected projected would already projected would projected feel free reopen think something wrong", "d": "10/2015"}, {"body": "vicb saying bug must say could understand takes nothing reproject looks like valid common usecase must say nt know solve properly use negation selectors", "d": "10/2015"}, {"body": "saying bug yep works expected looks like valid common usecase well seems like removed wc standard using instead useful used", "d": "10/2015"}, {"body": "vicb hear saying alternative solution suggestion adamdbradley trying achieve must say bumped similar usecases resort hacks drop functionality", "d": "10/2015"}, {"body": "would one solution control templates probably come solutions", "d": "10/2015"}, {"body": "one solution could css", "d": "10/2015"}, {"body": "guess see happening second grabbing everything include third ngcontent right however think valid use case developers would want projected content go specific areas template working great work way web components different output web components", "d": "10/2015"}, {"body": "tbosch could help describe changed future plans", "d": "10/2015"}, {"body": "problem stay even slots proposal also distributes based order used nodes however going away standard free define meaning right thing would project ngcontent elements based selector specifity ie first project long selector project remaining ones ngcontent selector created issue track adam please feel free issue tobias wed oct victor berchet notifications githubcom wrote tbosch could describe changed future plans reply email directly view github", "d": "10/2015"}, {"body": "sorry anchors statically analyzable hence dynamically generated way dynamically create local variables programing languages perhaps place directive locations query directive using retrieve way", "d": "10/2015"}, {"body": "trying accomplish watching variable could provide plnkr reason want watch variable", "d": "10/2015"}, {"body": "example plnkr able watch observe component variables example want create service library need observe variables without relate props template", "d": "10/2015"}, {"body": "danicomas could expand use case component property change result event trigger change detection thanks zonejs", "d": "10/2015"}, {"body": "vicb probably component yes services libraries controls need power used objectobserve ecmascript works well look import component view bootstrap component selector myapp view template hello name class myappcomponent name string constructor thisname alice bootstrap myappcomponent typescript topic instead problem think use vicb thing example changing child props want detect component top variablesprops", "d": "10/2015"}, {"body": "believe asking arbitrary watch properties objects like angular added angular requires would ship parser every release would prevent offline compilation fast bootstrap mobile devices tradeoff knowingly made wontfix", "d": "10/2015"}, {"body": "ok mhevery know recommend use observe good idea look", "d": "10/2015"}, {"body": "ocombe could please move thnx", "d": "10/2015"}, {"body": "woops sorry", "d": "10/2015"}, {"body": "cexbrayat try number fixes went released yesterday", "d": "10/2015"}, {"body": "pkozlowskiopensource got admit yet wanted tests green moving far saw commits though changes part", "d": "10/2015"}, {"body": "cexbrayat several problems several fixes would advise going straight unstable", "d": "10/2015"}, {"body": "pkozlowskiopensource confirm", "d": "10/2015"}, {"body": "nt think make bound elements tbosch please comment reason used different mechanism locating text nodes new mechanism faster unlikely would add back perhaps could suggest better syntax tests could work", "d": "10/2015"}, {"body": "thanks considering understand point really problem think really need easy way query elements tests among things got around tests right ebook testing pretty much everything think friendly enough least knowwe right let take simplified example username userusername awesome username tcboverridetemplate registerformcmp html createasync registerformcmp formcmp gt formcmpdebugelementcomponentinstanceuserusername c\u00e9dric formcmpdetectchanges asserts let input formcmpdebugelementquery bycss input nativeelement expect inputvalue tobe c\u00e9dric let small domchildnodes domchildnodes formcmpdebugelementquery bycss form nativeelement expect small tohavetext c\u00e9dric awesome username things could straightforwardless verbose really long maybe could something like horrible elements text bindings bound elements css query work anymore quick fix make tests green right nt know could access element ca nt queried moment missing something obvious something like would better perhaps would give username userusername awesome username tcboverridetemplate registerformcmp html createasync registerformcmp formcmp gt formcmpuserusername c\u00e9dric formcmpdetectchanges asserts let input formcmp find input expect inputvalue tobe c\u00e9dric let small formcmp find small expect small tohavetext c\u00e9dric awesome username", "d": "10/2015"}, {"body": "agree annoying ran yesterday assigning take look see modify search text bindings addition normal bound elements fyi going angularconnect priority bucket", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "even need injectasync ca nt provide last argument callback also thinking make callback return promise back automatically know call done importantly propagate display errors automatically without users anything could shortened even tcb specific helper since need able override metadata via tcb creating instance component things get tricky", "d": "10/2015"}, {"body": "ca nt provide done last argument callback depends plan drop mirrors reflection tests dart", "d": "10/2015"}, {"body": "stab nt looked would work dart yet provide function asked works asynchronously js import inject stuff inject classa classb b done gt done also works synchronously js import inject stuff inject classa classb b gt sync done function", "d": "10/2015"}, {"body": "victor tests need runtime compiler works mirrors wed oct pm julie ralph notifications githubcom wrote stab master juliemr testapi nt looked would work dart yet reply email directly view github", "d": "10/2015"}, {"body": "design best api possible jsts necessary create separate api dart keep mind api meant angular apps nt need used angular core test suite needs transpilable real world dart wed oct pm tobias bosch notifications githubcom wrote victor tests need runtime compiler works mirrors wed oct pm julie ralph notifications githubcom wrote stab master juliemr testapi nt looked would work dart yet reply email directly view github reply email directly view github", "d": "10/2015"}, {"body": "agreed however possible really helpful able use angular core test suite examples documentation test make work smoothly would happy", "d": "10/2015"}, {"body": "hi folks took first stab made first parameter parameter essential callback reliable home function nt think huge deal tester saying seems easier first position things equal thrilled found way one either sync async approximately manner jasmine callback sure like know fn parameter list", "d": "10/2015"}, {"body": "wardbell current implementation pretty naive check length parameters injected function greater length types inject", "d": "10/2015"}, {"body": "igor mentioned feature version namely callback returns promise wrapper appends requisite trailer alleviates need developer remember sequence find absent many tests works great long test function ready promise return time bit clumsy testing something uses observables instead promises nt enough observable testing experience recommend best practice yet", "d": "10/2015"}, {"body": "juliemr sweetly naive probably sufficient time must tell test developer past injected service sideeffect without actually needing cases listed trailing inject list position case could omit end parameter list maybe clever hard time recommending approach obviously wo nt work cool less perfect function folks write tests bit forgiving sophisticated broader angular audience otoh want api approach standard mainstream angular apis probably play games go separate explicit methods nt strong feelings either way", "d": "10/2015"}, {"body": "note get working dart see", "d": "10/2015"}, {"body": "ok latest greatest still progress idea commit commenting directly strategy make separate test library use outside core angular may merge two later lets us develop without worrying transpiling dart without make massive changes core tests wait returned promises tests example tests problem area user asynchronous work forgets promise masked synchronous test pass see test may even cause later unrelated test fail would appreciate comments", "d": "10/2015"}, {"body": "also wardbell sure mean entire angular audience writes tests right", "d": "10/2015"}, {"body": "nt know else document test goes bad nt return promise much different failing provide done param standard jasmine test good news vs code displays massive number red squiggles forget return promise injectasync prototype maybe another reason separate inject injectasync methods", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "longer require traceurruntime please update", "d": "10/2015"}, {"body": "agree igor able run alpha also installing traceur alpha point given tutorial official website uses anybody try follow getting started page face error unless install traceur missing website step issue update website npm install step either npm install save systemjs npm install save systemjs traceur", "d": "10/2015"}, {"body": "sorry docs refresh posted later week tue oct pm ultrasonicsoft notifications githubcom wrote agree igor able run alpha also installing traceur alpha point given tutorial official website uses anybody try follow getting started page face error unless install traceur missing website step issue update website npm install step either npm install save systemjs npm install save systemjs traceur reply email directly view github", "d": "10/2015"}, {"body": "working new parser output source linecolumn make reporting lot nicer tue oct pm ericmartinezr notifications githubcom wrote missing ngfor ngif example throws exception template parse errors ca nt bind ngforof since nt known native property hello gt div nthchild ngfor item items property binding ngforof used directive embedded template hello gt div nthchild ngfor item items note message long depending html structure print entire tree error message represents piece code view template ngfor directive error much shorter exception ca nt bind ngforof since nt known property element matching directives corresponding property repro repro reply email directly view github", "d": "10/2015"}, {"body": "tbosch thanks closing dup", "d": "10/2015"}, {"body": "seems related adding directives array", "d": "10/2015"}, {"body": "solution instead import routerdirectives add directives array", "d": "10/2015"}, {"body": "ran using directives individually", "d": "10/2015"}, {"body": "hm seems like issue typings alexeagle mprobst offer advice", "d": "10/2015"}, {"body": "yeah typings issue since get around changing type inject routerdirectives runtime issues general nt mind using umbrella constructs like routerdirectives coredirectives big deal basically added issue awareness case developers come across", "d": "10/2015"}, {"body": "think hope improve experience next dev runs issue", "d": "10/2015"}, {"body": "btford looks subtype subtype actually find type looking wrong place", "d": "10/2015"}, {"body": "mprobst defined dts template", "d": "10/2015"}, {"body": "jeffbcross see well empty interface ie requirements type whereas essentially explains compatible nt know enough di say right way fix though could make extend make markerempty interface maybe vsavkin opinion", "d": "10/2015"}, {"body": "would work", "d": "10/2015"}, {"body": "nope still fails vicb", "d": "10/2015"}, {"body": "bug template precompiler fix", "d": "10/2015"}, {"body": "andresaraujo able handle absolute uris properly could give try report issue fixed", "d": "10/2015"}, {"body": "closing please reopen issue still", "d": "10/2015"}, {"body": "sample code typescript import inject elementref dynamiccomponentloader componentmetadata component viewmetadata view bootstrap coredirectives component selector burner view template directives coredirectives export class burner constructor yeah raze ground mhuh mhuh mhuh throw new error component selector root view template directives coredirectives export class root constructor inject elementref elementref inject dynamiccomponentloader dynamiccomponentloader thiselementref elementref thisdynamiccomponentloader dynamiccomponentloader burn burner component throws exception within constructor thisdynamiccomponentloaderloadnexttolocation burner thiselementref componentref gt nt expect code run promise rejected yet find code execute consolelog wat throw new error crazy nightmare gt definitely nt expect run checkout exception thrown resolve handler yet find code execute consolelog wtf bootstrap root console output", "d": "10/2015"}, {"body": "discovered easy create typescriptangularjs plnkr awesome sample onlinerunnable form", "d": "10/2015"}, {"body": "see promises work nt directly related angular", "d": "10/2015"}, {"body": "jessegood unless missing something issue nt seem relevant please correct wrong issue unhandled exceptions issue angular api method combination default angular exceptionhandler returning promise behave like promises behave short running default exceptionhandler results output console never happen breaks promise specification crazy unintuitive could solved either fixing whatever bug might causing perhaps zonejs issue alternatively changing default exceptionhandler rethrow exceptions instead swallowing", "d": "10/2015"}, {"body": "hack angular library change default exceptionhandler rethrow exceptions instead swallowing promises behave expected words changing appears fix problem note false means swallow exceptions true means rethrow exceptions brings original question posed issue reason exceptionbinding default exceptionhandler swallow exceptions instead rethrowing", "d": "10/2015"}, {"body": "see impression linked issue would get official comment angular team", "d": "10/2015"}, {"body": "idea behind throwing helpful tests since something goes wrong test want error test runner message console exception handler last line defense exception happened nt know default log console implying throwing better user experience logging cases", "d": "10/2015"}, {"body": "looking expansion simple example nt matter last line defense case promises contract violated exception handled get chance deal exception handler getting involved responding errors within promise chains inserting first line defense preventing adding lines defense maybe bug exception handler involved promise chains", "d": "10/2015"}, {"body": "adamdbradley could retry current master bug element indices mixed", "d": "10/2015"}, {"body": "released bug fixed", "d": "10/2015"}, {"body": "yup everything working thanks", "d": "10/2015"}, {"body": "everything fine comes distributing nodes shadow dom content components swapped check html", "d": "10/2015"}, {"body": "yes right still buggy", "d": "10/2015"}, {"body": "oh great catch thanks pointing nt even notice", "d": "10/2015"}, {"body": "commitbranch work", "d": "10/2015"}, {"body": "commitbranch work master", "d": "10/2015"}, {"body": "phamcharles yet working take waiting master", "d": "10/2015"}, {"body": "mgechev go work picked nt time", "d": "10/2015"}, {"body": "see need update npm least", "d": "10/2015"}, {"body": "closing duplicate", "d": "10/2015"}, {"body": "depricatedremoved hence adding support", "d": "10/2015"}, {"body": "hi achive scenario still nt see case supported", "d": "10/2015"}, {"body": "davidgangel think may useful case", "d": "10/2015"}, {"body": "ericmartinezr thank going wait final outcome linked ticket see use", "d": "10/2015"}, {"body": "related vsavkin pointed rxjs creates default observable export module must imported order include operators subsequently mutates prototype also related discussion reactivex side including core operators part observable would make certain optimizations straight forward terms things like overriding operators scalarobservable example might also slightly reduce output size eliminated modulerelated output code doubts point option", "d": "10/2015"}, {"body": "related discussion rxjs side", "d": "10/2015"}, {"body": "shortterm think probably best depend main rxjs library output people need want operators longterm think probably come something interesting", "d": "10/2015"}, {"body": "looks promising", "d": "10/2015"}, {"body": "robwormald yeah jayphelps mentioned morning named couple caveats escape", "d": "10/2015"}, {"body": "biggest issues see angularrxjs written typescript supports technically could transpile ts run rollup wtf also requires consumers use module packer tough crowded field people loving gruntgulpbroccolibrowserifywebpackwhatever soangular would use worried rx nt exposed users angular internally would used instead creating yet another module packer community needs create library ast ast bolted onto module packer work others depending whether use asts format probably missing something probably good reason richharris nt go route", "d": "10/2015"}, {"body": "jayphelps interested better understand needs issue bundle needs exported using custom format probably missing something probably good reason richharris nt go route two main reasons performance code readability generating code ast costly manipulating original source code rollup uses utility called magicstring sourcemapaware way nt jump hoops preserve original formattingcommentsetc", "d": "10/2015"}, {"body": "richharris sure mean issue theres underlying quest ship monolithic project like rxjs easy way consumers shake unused operators considering rollup merely pointing nt feasible angular case typescript somehow worked around would still require angular devs actually use rollup module transpiler question feasibility cringe yetanothermoduletranspiler syndrome go every year feels like since ts es share exact syntax importexport seems would possible parse build module tree ignore everything else files shaking source fed normal build pipelines including preferred module transpilation process could remove files leaving kept ones untouched thoughts would certainly incur perf penalty transpiler directly aware flexible devs still make love preferred language tses transpiler devs could limit usage prod builds build time relatively less concern", "d": "10/2015"}, {"body": "second thought certainly complicated parsing importexports primarily exports side module exports identifier nt parse rest file ca nt shake code identifier references unless none exports file ever imported could exclude entire file also sure could reliably parse export without also parsing inner body item exported eg export function ca nt find function boundryclosing curly without parsing function body hmmm", "d": "10/2015"}, {"body": "exactly treeshaking work need work level individual statements rather modules view modularising things extent one tool responsible generating dependency graph another responsible bundling wrong direction going aside inefficiencies would create fact need create yet another bundler usability standpoint need tools integrated less would still require angular devs actually use rollup module transpiler mean use something grinning also requires consumers use module packer tough crowded field people loving gruntgulpbroccolibrowserifywebpackwhatever rollup alternative browserify webpack gruntgulpbroccoli basically coordinate activity underlying tools like browserifywebpackrollup", "d": "10/2015"}, {"body": "closing favor", "d": "10/2015"}, {"body": "though nt let stop bundling discussion feel free add thoughts", "d": "10/2015"}, {"body": "richharris yum referring bundlers made gruntgulp specifically like", "d": "10/2015"}, {"body": "jayphelps must rule grunt gulp plugins already exist based longsincedeprecated project need use directly slot existing build process", "d": "10/2015"}, {"body": "hey repository angular found issues protractor report need support use gitter channel", "d": "10/2015"}, {"body": "hey minko thanks directing right page new github well learning", "d": "10/2015"}, {"body": "igorminar understand correctly nt bind xhr mockxhr nt bind xhrimpl either nt think really solves problem user still needs reach angular privates order get actual xhrimpl misunderstanding reopen", "d": "10/2015"}, {"body": "oh crap need fix", "d": "10/2015"}, {"body": "thelgevold see", "d": "10/2015"}, {"body": "ericmartinezr thanks", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "naomiblack anyone assigned causing us pain latency tests", "d": "10/2015"}, {"body": "might exactly want using classactive samples since gives active class active route based boolean check example maybe wrap directive though hide url passed function", "d": "10/2015"}, {"body": "johnpapa maybe getting wrong want style list links ones active differently matter angular routerlinks right could nt use parent css selector already introduce class link needed thing every routerlink active inactive basically default anyways unless want make links routerlinks look exactly entire application doubt nt need add extra classes provide information routerlinks considered inactive default tue oct torgeir helgevold notifications githubcom wrote might exactly want using classactive samples since gives active class active route based boolean check example maybe wrap directive though hide url passed function reply email directly view github", "d": "10/2015"}, {"body": "yes applying anchors broad container class element contains anchors ways adding classes code generated router link supply attributes way identify elements use hierarchical parent child ones ass one anchor thought made sense adding active class could add regular one", "d": "10/2015"}, {"body": "sure common style links router links way actually nt even know css links upgraded routerlink routerlinkactive also rather allow add css classes defined user never know conflict surrounding css would vote want style list links rather define context css module nt matter links generated happen remove routerlink directive reason navigate imperatively css wo nt work anymore tue oct john papa notifications githubcom wrote yes applying anchors broad container class element contains anchors ways adding classes code generated router link supply attributes way identify elements use hierarchical parent child ones ass one anchor thought made sense adding active class could add regular one reply email directly view github", "d": "10/2015"}, {"body": "johnpapa pascalprecht guess would ok add active inactive class cases relates anchor tag find typically add styles element around anchor often li element find classactive approach desirable since decoupled anchor tag", "d": "10/2015"}, {"body": "cc matthewjh", "d": "10/2015"}, {"body": "vicb please look today determine must fix due tomorrowwed surface looks serious enough", "d": "10/2015"}, {"body": "sure find time look today check first thing tomorrow", "d": "10/2015"}, {"body": "pb returns undefined return polymer try come fix asap", "d": "10/2015"}, {"body": "thanks mon oct pm victor berchet notifications githubcom wrote pb var target iswebworker amp amp self returns undefined return window polymer addeventlistener webcomponentsready resolve try come fix asap reply email directly view github", "d": "10/2015"}, {"body": "zyzle thanks bug report zonejs fixed next angular release include fix", "d": "10/2015"}, {"body": "vicb thanks", "d": "10/2015"}, {"body": "changed yjbanov intentional commit message nt mention change", "d": "10/2015"}, {"body": "marking determine intentional", "d": "10/2015"}, {"body": "let check mhevery first reviewed change aware reasons done", "d": "10/2015"}, {"body": "spoke mhevery intentional change needed hide internal apis also makes sense make components looks like elements whether test components yjbanov please update change log close issue thanks", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "yjbanov igorminar thanks considering issue adding changelog may inquire plan better test api currently tests borderline readable imho", "d": "10/2015"}, {"body": "yes process improving testing apis cc juliemr wed oct c\u00e9dric exbrayat notifications githubcom wrote yjbanov igorminar thanks considering issue adding changelog may inquire plan better test api currently tests borderline readable imho reply email directly view github", "d": "10/2015"}, {"body": "hi please update node version recommend using nvm", "d": "10/2015"}, {"body": "issue tmp folder cleaned properly might related verify repro issue tmp folder manually removed", "d": "10/2015"}, {"body": "nt help investigating", "d": "10/2015"}, {"body": "observations works works commenting part works commenting watcher part could kind race condition filesystem access", "d": "10/2015"}, {"body": "nt know commenting helps really odd trace inside checkenvironment causing problem could give us hints mon oct pm marc laval notifications githubcom wrote observations karma start karmajsconfjs works gulp testunitjsci works commenting toolscheckenvironment part gulp testunitjs works commenting watcher part could kind race condition filesystem access reply email directly view github", "d": "10/2015"}, {"body": "obviously cause problem tries open file many already opened digging bit found executing file handle available means next file access fail karma impacted uses open files adding long synchronous wait loop start nt solve problem adding settimeout eg yet clear comes karma gracefulfs node windows", "d": "10/2015"}, {"body": "mlaval patch worked perfectly thanks possibility adding patch master branch fix situation karmagracefulfsnode get fixed little bit pain file always dirty local folder anyway something live guess sigh", "d": "10/2015"}, {"body": "btw case gives clues run tests applying patch lot much better watching instead full modules folder way runs seems like still file handles avail least one", "d": "10/2015"}, {"body": "sorry bumping issue upgraded ran issue prior nt happen tried mlaval patch nt work instead failing crashing throws error message pass gets stuck posterior step part log get stuck last line even tried giving time settimeout ubuntu lts vm fwiw edit followed comment also removed patch edited added rebooted working correctly", "d": "10/2015"}, {"body": "windows still situation latest master upgrading node nt help", "d": "10/2015"}, {"body": "marc let debug angular connect office fri oct marc laval notifications githubcom wrote windows still situation latest master upgrading node nt help reply email directly view github", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "alexeagle put since think essentialurgent anyone speaking angular connect please move think blocking anyone", "d": "10/2015"}, {"body": "part change typings demoed ca nt release typings expose private constructors move mon oct pm naomi black notifications githubcom wrote alexeagle put since think essentialurgent anyone speaking angular connect please move think blocking anyone reply email directly view github", "d": "10/2015"}, {"body": "proposal reexported users export abstract class compiler internal protected foo number void consolelog thisfoo reexported toplevel export class compiler extends compiler constructor foo number super thisfoo foo note protected member exposed dts file even though private members needs must protected subclass assign", "d": "10/2015"}, {"body": "mhevery tbosch take look comment make change widely cc igorminar soln current problem symbols injectable runtime value disappeared", "d": "10/2015"}, {"body": "need put rather otherwise seem reasonable", "d": "10/2015"}, {"body": "referenced compiler another way also yet thought translate dart know nt allow protected right mon oct pm mi\u0161ko hevery notifications githubcom wrote need put foo compiler rather compiler otherwise seem reasonable reply email directly view github", "d": "10/2015"}, {"body": "ohh see would make compiler totally abstract need complicate splitting implementation reexported users export abstract class compiler abstract void reexported toplevel export class compiler extends compiler protected foo number", "d": "10/2015"}, {"body": "ah yes course bigger change protected needed keep shorthand property declarations constructor signature well", "d": "10/2015"}, {"body": "alexeagle misko version result bigger change expect code splitting version complicated implement", "d": "10/2015"}, {"body": "sorry wrote hurry bigger sense different transformation needed either way simple mechanical working", "d": "10/2015"}, {"body": "one complication getters currently readonly properties implementing getter setter concrete class eg believe discussion way model abstract class typechecker allow users modify properties", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "windows node clean npm install errors would suggest problem might os version npm running repository", "d": "10/2015"}, {"body": "got issue using ubuntu", "d": "10/2015"}, {"body": "thing make clean wanted use dependency meteor package angular works fine throws error", "d": "10/2015"}, {"body": "sclausen able install require repo meteor package using npm namespacesscopes perhaps unsupported whatever meteornpm", "d": "10/2015"}, {"body": "yes exactly trying look meteors npm stuff works file issue thanks", "d": "10/2015"}, {"body": "think meteor problem npm version use way old support package naming", "d": "10/2015"}, {"body": "ah shame successful would guess issue probably related older version npm well looking error using within visual studio", "d": "10/2015"}, {"body": "special problem meteor problem npm version use way old support package naming filed issue successful usecase npm version also old sh", "d": "10/2015"}, {"body": "ok closing duplicate meteormeteor", "d": "10/2015"}, {"body": "looks like minimum npm version future reference oct sebastian clausen notifications githubcom wrote special problem meteor problem npm version use way old support package naming filed issue meteormeteor reply email directly view github", "d": "10/2015"}, {"body": "embarrassed updating node npm solved issue thanks", "d": "10/2015"}, {"body": "version could please provide minimal plunker afaik ca nt inject attributes toplevel element might issue anyway send plunk", "d": "10/2015"}, {"body": "pkozlowskiopensource sure create plunk ts compiler see line occurs error around impact output keeps complaining sure mean inject attributes top level elements could elaborate please oh forgot mention error latest alpha version previous one probably even two versions back sure", "d": "10/2015"}, {"body": "alexeagle something reproduce", "d": "10/2015"}, {"body": "guess typings related completely changing release please see reproduce next week", "d": "10/2015"}, {"body": "alexeagle sure try soon release close nt occur anymore", "d": "10/2015"}, {"body": "confirm issue upgrading still exists line lines", "d": "10/2015"}, {"body": "yes still", "d": "10/2015"}, {"body": "ca nt repro help cat tsconfigjson compileroptions target emitdecoratormetadata true experimentaldecorators true module commonjs noimplicitany false outdir built rootdir sourcemap false exclude nodemodules alexeagle cat appts import component attribute component selector greet template hello name class greet name string type string constructor attribute type type string thisname world thistype type alexeagle tsc", "d": "10/2015"}, {"body": "alexeagle looks like could clone repo try locally", "d": "10/2015"}, {"body": "repo old version though still message compiling latest alpha version", "d": "10/2015"}, {"body": "run tsc repo head get tons errors including duplicate definitions typescriptservicesdts one thing see use module system requires moduleresolution node otherwise assumes loading browser uses classic module resolution also tsconfigjson top really fishy requires ts adding nt fix could make minimal repro fri oct roland groza notifications githubcom wrote alexeagle tsconfigjson looks like compileroptions declaration false module system target emitdecoratormetadata true listfiles true noimplicitany false nolib false removecomments true sourcemap true experimentaldecorators true exclude nodemodules could clone repo try locally reply email directly view github", "d": "10/2015"}, {"body": "yeah tons errors locally soon add option get tons errors lots unsure option adding solve tons errors top compiler options options experimental might stable causing errors", "d": "10/2015"}, {"body": "want typings work need come nodemodules get duplicate identifier adding typescript nodemodule comes typings included providing compiler second time one nodemodulesgulptslintnodemodulestslinttypingstypescriptservicesdts also ran get stuck research fix fri oct pm roland groza notifications githubcom wrote yeah tons errors moduleresolution node locally compileroptions declaration false module system target emitdecoratormetadata true listfiles true noimplicitany false nolib false removecomments true sourcemap true experimentaldecorators true exclude nodemodules soon add moduleresolution option get tons errors lots duplicate identifier unsure option adding solve tons errors top compiler options options experimental might stable causing errors reply email directly view github", "d": "10/2015"}, {"body": "see actually switched typing least ones angular versions back think also think know get duplicates errors follow saying use option everything resolved need include sourcing gulp task actually include typings gulp task removed duplicate errors gone get problems modules need declaration option enabled modules nt get things like fix", "d": "10/2015"}, {"body": "looks like need reference modules write absolute paths example could use without compiler complaining way around", "d": "10/2015"}, {"body": "actually problem well inside angular using classic module resolution hope work tomorrow using relative paths obvious fix mind team would prefer way around suggest fri oct pm roland groza notifications githubcom wrote looks like need reference modules write absolute paths commonanimation example could use commonanimation without compiler complaining way around reply email directly view github", "d": "10/2015"}, {"body": "shame try things well tomorrow hopefully find something works also think error message might gone right way many errors sure hope figure way fix issue ts share", "d": "10/2015"}, {"body": "sounds like issue angular present follow remaining issues share", "d": "10/2015"}, {"body": "vsavkin please take look today determine need fix due tomorrowwed likely affect sync edit oops tagged vicb accident", "d": "10/2015"}, {"body": "triaging vsavkin move different milestone likely affect sync", "d": "10/2015"}, {"body": "ok think bug code method firing event value boolean listening event well tries evaluate throw boolean ie listening events component firing well solution use different event name", "d": "10/2015"}, {"body": "created another issue discuss whether want prevent directives listenting events", "d": "10/2015"}, {"body": "thanks tbosch", "d": "10/2015"}, {"body": "tbosch event name rename also calling unnecessary", "d": "10/2015"}, {"body": "actually stumbled upon issue well running unit tests", "d": "10/2015"}, {"body": "fixed partially without breaking change aligning everything still follow breaking change renames module", "d": "10/2015"}, {"body": "igorminar make alpha also exposed public api use tests", "d": "10/2015"}, {"body": "rolandjitsu part due tomorrowish wrt public api moment juliemr make note testing api doc think useful api need look made public changes needed", "d": "10/2015"}, {"body": "igorminar see looking forward figured said might prove useful users know would great public", "d": "10/2015"}, {"body": "sorry sure decision naming clarify public testing library currently module internal angular core testing module currently module think unified since may using internal things testing publicly exported think naming clarified made specific propose make test internal say clearly public renamed nt really care", "d": "10/2015"}, {"body": "igorminar taking one think whether breaking change trying land angular connect", "d": "10/2015"}, {"body": "one proposal take look ci errors unhappy dart analyzer morning like rename", "d": "10/2015"}, {"body": "closed", "d": "10/2015"}, {"body": "closing duplicate", "d": "10/2015"}, {"body": "mlaval take look please", "d": "10/2015"}, {"body": "similar problem vs code project contains jquery ide always uses first complains sign", "d": "10/2015"}, {"body": "must linked new compiler cc tbosch", "d": "10/2015"}, {"body": "issue", "d": "10/2015"}, {"body": "using current workaround javascript import browserdomadapter browserdomadapterprototypecreateelement function tagname doc doc void doc document", "d": "10/2015"}, {"body": "yes know issue working right", "d": "10/2015"}, {"body": "tbosch xbtequila fix works well extended include polygon polyline etc", "d": "10/2015"}, {"body": "xbtequila tried workaround nt work svg looks like happen know working", "d": "10/2015"}, {"body": "xlink attribute working quick workaround created correct namespace fork node attribute namespaces found", "d": "10/2015"}, {"body": "updates issue looks like new compiler breaks svg css calculations", "d": "10/2015"}, {"body": "quick update similar hotfix landed master real fix still open though", "d": "10/2015"}, {"body": "tbosch binding attribute still seem work example", "d": "10/2015"}, {"body": "let handle component arrives dom note lowercase way svg nt render correctly workaround using constructor manually set correct property", "d": "10/2015"}, {"body": "tragetaschen wow annoying nt see longest time wracking brain figuring going wrong thanks", "d": "10/2015"}, {"body": "file using template directive changed ngdirective", "d": "10/2015"}, {"body": "try add right", "d": "10/2015"}, {"body": "wow fast response trick thanks", "d": "10/2015"}, {"body": "ca nt reproduce ensure typings date ideally use tsd link link npm distribution problem still exists please file new issue repro instructions thanks", "d": "10/2015"}, {"body": "thelgevold see sent pr update changelog missed breaking change", "d": "10/2015"}, {"body": "pkozlowskiopensource ah thanks clarifying", "d": "10/2015"}, {"body": "todoubaba could provide context ideally plunk usually need use metadata generated usually case injecting services services hard tell actual code take look", "d": "10/2015"}, {"body": "pascalprecht codeangularjsorg create plunk html ts file typescript import component view elementref bootstrap component selector myapp view template class myapp constructor elementref elementref consolelog elementref bootstrap myapp error following code works fine typescript import component view elementref inject bootstrap component selector myapp view template class myapp constructor inject elementref elementref elementref consolelog elementref bootstrap myapp", "d": "10/2015"}, {"body": "started debugging issue found gets transpiled means generated metadata param types wrong however use instead get correct error occurs try inject another thing noticed using gulp task following src get error however use target instead everything works another way make work changing name export inside bundle later import ps dug inside typescript compiler saw parameters serialization writing metadata class properly resolved instead resolved may typescript issue", "d": "10/2015"}, {"body": "experienced issue well", "d": "10/2015"}, {"body": "rpark could paste tsconfig often see forget turn emitdecoratormetadata ts compiler options", "d": "10/2015"}, {"body": "robwormald tsconfig", "d": "10/2015"}, {"body": "elementref class interface", "d": "10/2015"}, {"body": "well would explain mgechev comment expected result believe interfaces get transpiled obviously expected result consumers", "d": "10/2015"}, {"body": "robwormald elementref still class", "d": "10/2015"}, {"body": "mgechev class interface typings file got hit angular team", "d": "10/2015"}, {"body": "right change typing file di works many classes like one two declarations one type typing file example one line another line", "d": "10/2015"}, {"body": "issue caused commit converts class private constructor interfalce", "d": "10/2015"}, {"body": "looks like typetranspilation issue class decorator constructor like gets transpiled note last paramtype object rather elementref var", "d": "10/2015"}, {"body": "affects everything defined dts file eg defined alexeagle mhevery ever work properly maybe nt recent expansion classes got converted interfaces surfaced problem alexeagle close going land tomorrow wednesday skip fix otherwise work intermediate fix", "d": "10/2015"}, {"body": "really close working test failures tbosch helping failure due injecting renderer rebase close still need review pr well misko today", "d": "10/2015"}, {"body": "alright going wait fix tbosch please work alexeagle expedite fix", "d": "10/2015"}, {"body": "postmortem analysis tests typings tests assert compile angular application runs hello world examples nt use custom bindings endtoend test uses typings distribution starts nontrivial app custom bindings verifies starts", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "use workaround eventemitter exposing anymore nt know intended usage changed mistake", "d": "10/2015"}, {"body": "exposing subject bug due fixed lands intended behave like observable system", "d": "10/2015"}, {"body": "rkirov case line return", "d": "10/2015"}, {"body": "ericmartinezr nt sound crazy let check rx experts reopen makes sense case urgency fix lower given workaround", "d": "10/2015"}, {"body": "ericmartinezr", "d": "10/2015"}, {"body": "obviously issue raises many questions want tell people use bundles app dev plunkers even bundles plunkers anything bundles size interesting question jeffbcross btford want make http router working outside app frameworks nongoal", "d": "10/2015"}, {"body": "correction router using correct bundle arithmetic case sure intentional", "d": "10/2015"}, {"body": "thanks yes viewencapsulationemulated default sat oct christopher swasey notifications githubcom wrote updated components seemingly rendered behaviour viewencapsulationnone manually setting component encapsulation emulated restores previous behaviour going source longer seems code make emulated default particular line thisencapsulation ispresent encapsulation encapsulation viewencapsulationemulated formerly renderapi block code seems moved metadataview longer present form might red herring seem remaining references viewencapsulationemulated strict comparisons without faculty fallback reply email directly view github", "d": "10/2015"}, {"body": "thanks fix", "d": "10/2015"}, {"body": "also nt seem published dart yet", "d": "10/2015"}, {"body": "true wrote skeleton plnkr copy amp pasting min bundle directly plnkr meanwhile", "d": "10/2015"}, {"body": "jeffbcross discussed still push things would awesome", "d": "10/2015"}, {"body": "pkozlowskiopensource guys problems using codeangularjsorg may consider using another system like edit jimthedev already request", "d": "10/2015"}, {"body": "fixed jeffbcross thnx", "d": "10/2015"}, {"body": "thanks reminder pkozlowskiopensource release lastminute decision friday afternoon forgot code push kasperpeulen yjbanov suggested release broken publish dart", "d": "10/2015"}, {"body": "fwiw cdnjs updated also mirror latest angular", "d": "10/2015"}, {"body": "change tuple routesdetailas seems work notice prefixing dot time dot matter error message clearer", "d": "10/2015"}, {"body": "means relative root application means child component expected behavior exception could bit better", "d": "10/2015"}, {"body": "thanks explanation yes think error message docs clear agreed feedback recent hack night router might easier folks use gather send coherent form later", "d": "10/2015"}, {"body": "sounds good much appreciated", "d": "10/2015"}, {"body": "issue valid well working issue", "d": "10/2015"}, {"body": "may resolved new compiler checking internal teams verify", "d": "10/2015"}, {"body": "btford ha interesting one browser parses come btw also proves funny way using attribute name legal still dive new compiler hard time tracking properly reporting errors use browsers parse things one argument consider", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "may obsolete alexeagle change way generate file", "d": "10/2015"}, {"body": "yes give days land needed changes confirm obsolete", "d": "10/2015"}, {"body": "alexeagle pretty sure obsolete", "d": "10/2015"}, {"body": "wait issue ts dgeni html right obsoleted new typings still path generating humanreadable docs jeffbcross", "d": "10/2015"}, {"body": "fix handled dom renderer dom renderer intelligent enough understand dom elements internal state needs reset binding attached examples property property element property dom renderer reset detects special properties written call", "d": "10/2015"}, {"body": "agree", "d": "10/2015"}, {"body": "examples material widgets work ie marking fixed open separate issue add dart tests saucelabs", "d": "10/2015"}, {"body": "post crazy ideas", "d": "10/2015"}, {"body": "develop process process would define post ideas communicatereview angular team community prototype finally acceptreject", "d": "10/2015"}, {"body": "totally agree opened", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "observable interface nt actually exist yet could use files rxjs directly point given contributor status level partnership really doubt reason change guts time soon", "d": "10/2015"}, {"body": "sounds good makes lot sense change calling next mockconnection rather current mockrespond internally reduces cruft simplifies logic reason add mockrespond mockerror methods mockconnection trying avoid many new concepts end users call next complete every request could use ts files rxjs directly would simply stuff nicely would mean distributing rx part angular codebase vs npm dependency think issues", "d": "10/2015"}, {"body": "could use ts files rxjs directly blesh yeah think try real meaning typings nt yet brought new rx typings angular since typings distribution process changing wanted get new rx right places nt", "d": "10/2015"}, {"body": "would simply stuff nicely would mean distributing rx part angular codebase vs npm dependency think issues distributing library returns observable type combinators like distributing kegs beer taps", "d": "10/2015"}, {"body": "distributing library returns observable type combinators like distributing kegs beer taps blesh whoa", "d": "10/2015"}, {"body": "current state also preventing retry working correctly robwormald recently discovered", "d": "10/2015"}, {"body": "current state also preventing retry working correctly try rxjs bugs corrected", "d": "10/2015"}, {"body": "status issue given", "d": "10/2015"}, {"body": "vicb imo say input div people really confused", "d": "10/2015"}, {"body": "imo say input div people really confused agree inputoutput analogy breaks wink", "d": "10/2015"}, {"body": "think error message fine way closing action", "d": "10/2015"}, {"body": "whole bunch broken links docs docs still missing want complete sweep links docs place", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "currently working intended even unit test behavior file test operates nt mean ca nt change intention vsavkin yjbanov remember allow know wanted ensure people explicit opting lifecycle events inheriting superclasses could allow ing pretty easily", "d": "10/2015"}, {"body": "think consistency make people implement perhaps transformer emit warning", "d": "10/2015"}, {"body": "works rkirov take", "d": "10/2015"}, {"body": "came straight confused user frustrating expect framework call callback doesnt way user debug shooting consistency least throw transformer lifecycle hooks hence ignored angular", "d": "10/2015"}, {"body": "would vote make error reason extend maybe put throw constructor interface throw", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "perfect current workaround cburgdorf introduced using state components state components simply wrapper components navigate actual component needs data binding view child", "d": "10/2015"}, {"body": "need help someone familiar angular tbosch mhevery rkirov vsavkin approach", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "nt mean ruin party since may several routes therefore several completely different components behind components would want bind different properties may getting wrong way stands seems useful routes take properties likely case recently introduced concept state components demo app pascalprecht referring reason build components kept free routing concerns eg", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "totally need feature idea point could implemented plunk point could passed children components", "d": "10/2015"}, {"body": "vsavkin could look pair brian best way move forward", "d": "10/2015"}, {"body": "repository angular related issues use", "d": "10/2015"}, {"body": "sorry enrolling", "d": "10/2015"}, {"body": "ok would close issue", "d": "10/2015"}, {"body": "think closed problem occurs sample code right", "d": "10/2015"}, {"body": "fernandomoraes mentioned repository angular related issues occurs", "d": "10/2015"}, {"body": "oh sorry mistake", "d": "10/2015"}, {"body": "aparently standard answer probably present neither could directive class responsible rendering attribute anyone confirm assumptions close time want", "d": "10/2015"}, {"body": "today custom directive cover usecases adding new properties events changing properties underlying button etc closing share concrete usecase believe things missing", "d": "10/2015"}, {"body": "yes filters need update duplicate", "d": "10/2015"}, {"body": "hi david expert router btford would know believe caused use directive component template change detection causes evaluated immediately returns exception thrown router configuration set yet promise still pending positive think might able delay using pipe give value configuration loaded called multiple times believe", "d": "10/2015"}, {"body": "try adding empty annotation", "d": "10/2015"}, {"body": "thank responses btford change anything", "d": "10/2015"}, {"body": "think one solution could allow code inside oninit method jump next instruction configuration fetched server router config ready based problems must go away consequence approach make execution sync async ask benefits load app router configured guess answer could wait router config done", "d": "10/2015"}, {"body": "fix merged master everyone need delete tmp directory delete old leaks", "d": "10/2015"}, {"body": "vicb nope sorry forgotten creating straight away matsko trying bind attribute make work today", "d": "10/2015"}, {"body": "well actually keep issue open rename sligtly", "d": "10/2015"}, {"body": "thanks worked great us", "d": "10/2015"}, {"body": "fixed later sync", "d": "10/2015"}, {"body": "problem find way bypass problem martinsik", "d": "10/2015"}, {"body": "hi ocombe used little hack nt use angular directive control element added event updates object associated field using whatever want although use custom mark makes little messy", "d": "10/2015"}, {"body": "vicb afair also supports line numbers correct come linecol support well", "d": "10/2015"}, {"body": "vicb think nt word clearly nt meant say see dart support issue love dart outsider looks like philosophy sense problem go bit standards gives big gains actively recommending typescript supporting dart like way thinking feels like proposal line polymer seem philosophy use web standards web standards good enough try push standards improve people may prefer sure try fish water already big google ship fishing", "d": "10/2015"}, {"body": "would rather stick term instead since yet another meaning di source code", "d": "10/2015"}, {"body": "oh one last thing still use term binding passed injector configuration right wardbell sure frees naming entirely igorminar wdyt", "d": "10/2015"}, {"body": "wardbell streamline di guide change landed code base", "d": "10/2015"}, {"body": "pascalprecht impression going drop binding word di altogether otherwise confusion stays", "d": "10/2015"}, {"body": "pascalprecht pkozlowskiopensource woke morning regretting called wanted rush update saw late nt problem word binding long qualified order strengthen notion provider wanted refer provider binding easy get rid bind word verb associates keytoken provider excited changing expression rid term change verb perhaps mapping would case also like using suggestion pkozlowskiopensource although bit weird say providing string rather object clause could get minor discomfort immediate concern another late breaking change angular steer quickly someone really wants ride pony finish line personally feel term provider binding partly bind traditional term di world mostly opportunities ambiguity time mention form binding registering provider injector ca nt think reason talk context thought also following phrasing although write class key token may use class name alone shorthand expression", "d": "10/2015"}, {"body": "pascalprecht refresh memory difference key token di context problem token necessary prefer key programmers familiar keyvalue pairs key also faster type shorter token", "d": "10/2015"}, {"body": "berkana data binding predominant form binding angular applications painful oblige people use four syllables used using two simply moreover calling simply binding avoid spelling question hypen hyphen plagued term since earth cooled", "d": "10/2015"}, {"body": "refresher binding refer databinding reason change lose ambiguity di yes di systems use word binding providers tho luxury nt deal databinding well hence forth binding refers data di providers di configurations sets providers yes bit awkward one provided alternative bind sounds reasonable even bit awkward even alternatively could use word resolved gt note introducing new concept concept always two concepts name marly changing names collide semantically nothing changing", "d": "10/2015"}, {"body": "mhevery wish nt use word term commonly encountered promises much way binding comes frequently context data binding already bummed would prefer plain old nt classes perfectly usual supply optional array initialization values constructor static creation method long mood fix api make change nt much care term familiar di specialists hard application developer multiple meanings words nt appear regularly everyday english also big nested object definition eg notice mistyped expression meant write common silly mistake adds friction writer reader maybe around time nt remember seeing used concede marginally easier compose programmatically nt common practice expression hard eyes dsl much nicer perhaps saying dsl expands object notation hood ok", "d": "10/2015"}, {"body": "also like using suggestion pkozlowskiopensource although bit weird say provide bar providing string bar rather object using clause could get minor discomfort wardbell imo quite rare practice imo would expect people use sth like interface case truly provide interface thing user foo cares agree using used already different context", "d": "10/2015"}, {"body": "ok nt throwing let stick reason going dsl works ok missing method call tricky detect possible compile time error awkward equally readable dsl suffer issues", "d": "10/2015"}, {"body": "config key factory tuple array keyvalue", "d": "10/2015"}, {"body": "provide key multi true asvalue awkward agreed toying could implemented getter sure feel", "d": "10/2015"}, {"body": "cool could survive wo dsl tricky injector configuration nt something lot cool keep simple special case scenario remains simple", "d": "10/2015"}, {"body": "one suggesting taking away semantic change purely syntactical change", "d": "10/2015"}, {"body": "yup nailing loose ends", "d": "10/2015"}, {"body": "bit late particular renaming party remiss nt point dichotomy backwards providing signifier exactly opposite communicating using provide particular sense direct object must thing made available use case providing token already rather bound true sense providing something injector developer sense injector providing something consuming classes one solution subtly shift understanding making available use making adequate preparation eventuality sense person provider family provides retirement savinginvesting first case provide something full stop second case provide something provide use given token registering classvaluefactory dropping prepending resolve ambiguity alternatively verbs might work better existing syntax instead provide ok one got", "d": "10/2015"}, {"body": "english native prolly less problem others seeing code sample endash see problem actual token always end line makes hard read really want find get certain token think tokens beginning better way go", "d": "10/2015"}, {"body": "pascalprecht thinking reason ca nt beginning since hash important imo readable natural english rather natural english reading nt imply opposite granted somewhat selfdocumenting seen examples account fully qualified names construction unnatural unnecessarily unclear actually going edited comment potential alternate forms settled preferred form far concerned", "d": "10/2015"}, {"body": "endash think fair point like proposal could still keep term result calling vsavkin mhevery", "d": "10/2015"}, {"body": "igorminar nt think obstacle calling result roots mean similar things way actually makes sense call result call call result call since point seems per language used providing already done nt third possibility tack", "d": "10/2015"}, {"body": "want call provisions take like end day nt see objective way showing provisions better providers long angular documentation consistent nt think makes much difference", "d": "10/2015"}, {"body": "mhevery read comments one suggested renaming providers problem currently misusing verb way yes objectively incorrect", "d": "10/2015"}, {"body": "hi everybody also bit late want add two cents using also seems pretty misleading imh complete opposite used parts framework eg modulesyntax usually means target source following statement would let think could inject foo get value bar way around really like pkozlowskiopensource suggestion imo much clearer way mixing things expression", "d": "10/2015"}, {"body": "update changed api thanks bringing attention", "d": "10/2015"}, {"body": "choeller good point igorminar awesome", "d": "10/2015"}, {"body": "seems fixed since alpha", "d": "10/2015"}, {"body": "true validated alpha ready closed", "d": "10/2015"}, {"body": "also wait rename done postpone rename till precompilation lands master", "d": "10/2015"}, {"body": "blocked", "d": "10/2015"}, {"body": "going stay since proposal materially different", "d": "10/2015"}, {"body": "igorminar bradlygreen take bug needed first time contributing angular", "d": "10/2015"}, {"body": "thanks offer completely rewamping dts generation works problem go away see tue oct pm justin willis notifications githubcom wrote take bug needed first time contributing angular hardcore mozillian reply email directly view github", "d": "10/2015"}, {"body": "longer generating file applicable", "d": "10/2015"}, {"body": "opened new issue solved variables", "d": "10/2015"}, {"body": "spec specify behavior native object get", "d": "10/2015"}, {"body": "btw fully grasping use case could break problem realworld use case", "d": "10/2015"}, {"body": "tldr usecase server bootstrap need serialize http call success made server transfer request client embedding call client application replay calls bootstrap client replay client calls need reconstruct http call response return immediately tostring thinking makes sense usecase use case mimic one techniques used facebookrelay difference lot optimizations within framework ensure optimum rendering note react nt control async calls done relay pretty clever try explain happening know given component tree root component react land original way managing data sending data props component problem happens want change structure data end manually changing component bottom touching file new best practice component request state queries declared statically component done facebookrelay technique interesting sorta feature already angular known imagine injecting data using resolve try emulate facebookrelay preload prime cache technique angular sake explanation let go using mostly pseudo code typical best practice module folder structure done angular today example state uirouter using component directive design imagine magical method called let walk state tree convert url list states route states var routeasstate state routeasstate imagine also another magical method called resolve state using something like let change root state resolve use two magic methods state name root url controller rootctrl template resolve serverdata function state q queries var routeasstate state routeasstate walk state tree var resolvedstates routeasstatemap state gt state resolve resolve data return object return qall resolvedstates queriessetresolveddata left injecting directive similar would pass props component tree angular react one last thing replace resolve another property since resolving root let go queries also nt di let refactor http service root let remove function keep static metadata function resolvequeries queries q var dataqueries objectkeys queries foreach prop gt var method queries prop method var url queries prop url dataqueries prop return qall dataqueries var resolvedstates routeasstatemap state gt resolvequeries statequeries q simple cache service provide cache version data per query metadata lot boilerplate implement features simpler angular end deleting half angular code writing thing angular facebookrelay replace http metadata component graphql queries simple angular falcorjs json graph example assuming user making optimizations declaring ajax call component make batch call suggest attaching metadata components batch call optimization also want account naive case solving naive case lot constraints hijacking server success embed request client response inside data transfer http server client jsonp ajax one benefits angular allows firstclass components allowing us access view tree components tostring thinking makes sense problem returning native implementation object native instance check equal implementation false comparison method compare types correctly determine different types array object window crazy thought since use method type checking might able something like might use another di framework past module removed module problem one two alpha releases released version mismatch module required older version angular turn different version due works lead error anyone tried use commonjs version since presented error instance correct even though definitely correct inserting break point check since two versions one old angular nghttp correct version angular error using resolve bindings two separate modules used rather next error using different di framework would problem interface rather confusing reference mismatch probably type check assume interface correct even make another pass check signature correct development version well maybe crazy thought since probably wo nt work dart want di module live module", "d": "10/2015"}, {"body": "meeting igorminar blesh robwormald today discuss issue wanted come solution would allow us keep byte size core small make easy rx powerusers easily get useful operators proposal use lite observable method use di provide observablefactory token could overwritten mhevery brings point requiring injector users could take advantage field assignment shorthand provided typescript counterargument users wanted instantiate subjectsobservables could import one one already bound token instantiate without di whomever consuming component events know shape provided benefit di binding angular framework produce shape consumer would like however still issues type information di approach angular apis say return observable angular observable lite code consumes observable would automatically know binding replaced new shape another discussion topic came strategies composing operators right possible compose operators onto instance using method current rxjs design prototypebased monkeypatching extending way add default operators random notes know wanted get forget miss misrepresent anything blesh robwormald igorminar", "d": "10/2015"}, {"body": "clear method allows use rxjs factory chain operators unergonomic one could either decorate prototype subclass observable overriding return subclass add whatever operators care use function bind available babel typescript think observablefactory create observable class could responsible decorating observableprototype nt know enough angular current di presume dynamically create classes injected object instances", "d": "10/2015"}, {"body": "nt know enough angular current di presume dynamically create classes injected object instances yes would nt necessarily strategy used also maybe others", "d": "10/2015"}, {"body": "uglified gzipped distglobalrxminjs bundle", "d": "10/2015"}, {"body": "browserified uglified gzipped observable using distcjsobservablejs", "d": "10/2015"}, {"body": "shortterm essentially comes decision user experience tradeoff two competing priorities option include observable core operators included rxjs benefit user automatically gets operators likely want cost extra core users really nt want bytes would need rewrite import paths part build process loader configuration though users care much probably types users comfortable writing custom build processes loader configurations option include observable absolute minimum operators subscribeforeach benefit fewer bytes cost consumer wants use observablecore operators would recast angularexported observable standard rx observable using could use di allow overriding binding users could bringtheirownobservable angular use would require user know binding require add binding bootstrapping application could suggest users simply mutate global observable prototype include operators like believe behavior already occurs merely importing rxjs according vsavkin generally considered bad goes ethos angular typing information would lost replacing plain observable differentshaped observable user would explicitly recast every observable exported angular every place angular observable consumed personally favor option nt much context igorminar mhevery byte budgets longer term approach focus simplifying distribution composition operators well helping move forward standards make nicer ie function bind", "d": "10/2015"}, {"body": "believe behavior already occurs merely importing rxjs according vsavkin generally considered bad goes ethos angular prs favor option well willing work community rxjs angular determine operators core also would enable rxjs put core operators directly observable helps issues", "d": "10/2015"}, {"body": "prs blesh sorry nt meant dig rxjs referring idea mutating shared global object approach recommend", "d": "10/2015"}, {"body": "think thing option adding mutating global state purposes code loading ok data bad believe way extend file another file typings preserved casting necessary lot", "d": "10/2015"}, {"body": "mhevery lot", "d": "10/2015"}, {"body": "put bytes size context around min gzip react weights around sure talking min gzip would lot books well", "d": "10/2015"}, {"body": "based jeffbcross comments eg indeed minified gzipped equally important much weight minified gzipped", "d": "10/2015"}, {"body": "one thing know current minified version rxjs minified nt think even mangling variable names could probably cut quite bit", "d": "10/2015"}, {"body": "angular min amp gzipped", "d": "10/2015"}, {"body": "fwiw run current output rxjs file closure compiler sure probably cut another", "d": "10/2015"}, {"body": "fact bet lot repetitious cruft transpiling classes modules", "d": "10/2015"}, {"body": "core bundle currently including rx understanding goal get number lt still keeping current size number aim", "d": "10/2015"}, {"body": "could nt get completely removed rx right suspect could get still", "d": "10/2015"}, {"body": "seems like maybe bytes nt great thing base decision anyway ideal case sometool la rollup stripping unused code modules anyway nottoodistant future hard quantify rx actually weighs oct pm ben lesh notifications githubcom wrote could nt get completely removed rx right suspect could get still reply email directly view github", "d": "10/2015"}, {"body": "robwormald afaik rollup works treeshake neverimported exports modules would require refactoring rx take advantage angular sure since operators prototype", "d": "10/2015"}, {"body": "better getting function bind typescript although using function likely hit operator performance would guess probably nothing people care", "d": "10/2015"}, {"body": "moving working simple solution manually add combinators need eventemitter without changing anything inheritance", "d": "10/2015"}, {"body": "would part main module separated one", "d": "10/2015"}, {"body": "hopefully main module idea someone use service party module transfer data client server rendering eg moment relying implementation cache bind server someone use prefered ajax service well bind token since framework coupled interfaces much rather hook service rather relying implementation inmemory cache facebookrelay framework using react serverrendering angular need rely zonejs di hopefully service otherwise lowest stage data transfer client since would optimise method relay statically declaring queriesrequests component walking component tree build query make batch call transfer cache queriesrequests client provides better server rendering story universal data model similar relay would next stage data transfer angular", "d": "10/2015"}, {"body": "like also would drop custom cache nice", "d": "10/2015"}, {"body": "alexeagle bundling work wrt interfaces brandonroberts see errors interfaces brandonroberts example never situation would called never reuse components different type navigating routes also interfaces imported rather directory going close since think working expected please feel free file another issue reproduction explanation behavior differs expect typescript error runtime error wrong navigation behavior etc thanks", "d": "10/2015"}, {"body": "working reimplement exported typings suspect particular issue obsolete preview", "d": "10/2015"}, {"body": "love direction attribute could answer none may able come obvious approach need micro syntax thinking approach nt come extra rules", "d": "10/2015"}, {"body": "think users going hard time grasping wo nt need learned normally sure maybe worth considering keeping", "d": "10/2015"}, {"body": "thought treat template component properties might end sure handle", "d": "10/2015"}, {"body": "dup", "d": "10/2015"}, {"body": "mhevery reopening since closed dup one", "d": "10/2015"}, {"body": "robwormald look see resolved todaytomorrow blocking tasks otherwise push complete eow", "d": "10/2015"}, {"body": "yep let know within hour oct pm naomi black notifications githubcom wrote robwormald look see resolved todaytomorrow blocking tasks otherwise push complete eow reply email directly view github", "d": "10/2015"}, {"body": "naomiblack good today", "d": "10/2015"}, {"body": "naomiblack actually let bump implications files loaded want discuss pkozlowskiopensource", "d": "10/2015"}, {"body": "robwormald implications let kick discussion packaging channel", "d": "10/2015"}, {"body": "ping", "d": "10/2015"}, {"body": "matanlurey get resolved yes easy way especially tricky dart semantics", "d": "10/2015"}, {"body": "rvramesh exactly right", "d": "10/2015"}, {"body": "update moving systemjs traceurruntime rxjs cdn pretty fast works well", "d": "10/2015"}, {"body": "postpone till lands marking blocked", "d": "10/2015"}, {"body": "already landed", "d": "10/2015"}, {"body": "closing per igorminar comment", "d": "10/2015"}, {"body": "opposed gkalpak suggestion seems quite verbose going go always revisit name later proves confusing", "d": "10/2015"}, {"body": "aux routes akin named sub views uirouter proposed solution confusing part immediately clear aux routes relate primary route router definition alone thinking following alternative syntax router def routeconfig path foo component maincomponent outlets path component path component inside maincomponent renders renders guess point seeing need distinguish aux vs regular routes since route could potentially serve purposes basically route configured standalone route named view route added outlets array assuming urls would still format angular connect presentation sub views parameters primary primary namedviewn", "d": "10/2015"}, {"body": "aux routes akin named sub views uirouter docs forthcoming", "d": "10/2015"}, {"body": "need alxhub sgty", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "juliemr looking upgrading systemjs builder generate systemregister well cjs bundles", "d": "10/2015"}, {"body": "igorminar juliemr could please look comment regarding cjs output investigations might look like cjs bundles would huge http router well noncore module since sure proper bundle arithmetic using cjs format also please also see available help chat needed", "d": "10/2015"}, {"body": "took care first checkbox means work bundles actually make sure bundles work tests", "d": "10/2015"}, {"body": "cc robwormald working cjs stuff", "d": "10/2015"}, {"body": "dup", "d": "10/2015"}, {"body": "nt subclass differ create override think better left third parties rather core", "d": "10/2015"}, {"body": "think fixed removing magic interface class logic mhevery proposed create abstract parent classes internal constructors", "d": "10/2015"}, {"body": "moving avoid breaking changes due sync", "d": "10/2015"}, {"body": "pr resolve", "d": "10/2015"}, {"body": "moving working simple solution manually add combinators need eventemitter without changing anything inheritance", "d": "10/2015"}, {"body": "robwormald planning implement", "d": "10/2015"}, {"body": "yessir oct jeff cross notifications githubcom wrote robwormald planning implement reply email directly view github", "d": "10/2015"}, {"body": "robwormald please deprecate old api instead outright removing", "d": "10/2015"}, {"body": "noted nt think remove anyway emit alias next oct igor minar notifications githubcom wrote robwormald please deprecate old api instead outright removing reply email directly view github", "d": "10/2015"}, {"body": "sorry bring dup found issue via google want see workaround use project litor mhevery help link dup thanks", "d": "10/2015"}, {"body": "ok experiments cjs bundling summary findings cjs output smaller compared systemregister main difference size cjs systemregister comes fact cjs nt expose internal structure bundle one ca nt import file public api exported toplevel bundle soon drop systemregister nt allow importing private paths start pb noncore modules router importing private modules sure existing bundlers handle situation checked see discussion today http bundle nt use bundle arithmetic include entire believe bug", "d": "10/2015"}, {"body": "compile ts cjs systemjs use systemjs load either format way use whichever bundle better tested see pros cons", "d": "10/2015"}, {"body": "systemregister distribution format rather static optimized module systemjs sfx builds becoming integrate optimizations like rollup separate raw es modules best provide users use environments guybedford would mind elaborating worry tell users hey raw unpackaged files use bundle application immediately telling use one bundlers jspm webpack sth else fear might much users judging supporting people example released new version yesterday today several people struggling setup changed rxjs dependency", "d": "10/2015"}, {"body": "compile ts cjs systemjs course issue use systemjs load either format way use whichever bundle better sure clear better tested see pros cons yes right goes pretty much like systemregister import file path big cjs smaller cjs ca nt import file path might pb router http bundles next step check proper bundle arithmetic way import private paths", "d": "10/2015"}, {"body": "ok sounded importing cjs maybe browserify systemjs mistake", "d": "10/2015"}, {"body": "using bundles distribution format encouraged bundles contain environmentspecific names assume names going used users environment loader maximum portability usually users consume separate anonymous modules like get commonjs amd files sfx bundles going optimized small format possible like commonjs bundle want able provide angular bundle still exhibits public dependencies http router rx etc exactly loader necessary allows public dependencies shared without duplication ideally build would made main entry points whatever means depends external dependencies commonjs amd umd global module consumable compacted builds external public dependencies listed way internal modules optimized smallest possible build public modules external dependencies remain separate anonymous modules treecompacting optimization example systemjs builder create something like via currently normal commonjs bundler like rollup external dependency wrapping would likely provide smaller overhead terms consuming file npm packagejson config set dependencies configurations created systemjs jspm others well maximise consumption compatibility certainly option compile everything commonjs systemregister separate files great starting point best performance footprint would internal compacting optimizations like sorry longwinded comment let know help", "d": "10/2015"}, {"body": "ok guybedford kind enough spend time robwormald yesterday discuss topic great details thank guy much time main outcomes discussion point view format best longterm idea bundles arguments bundle size runtime perf hit polluting registry private internal modules paths cjs bundles would solve problems would work large cjs tooling ecosystem want properly share code core http router using cjs bundles need create additional shared bundle would code shared core http router bundle needs proper public api parts framework would depend upon might challenging produce correct ones nt duplicate code cjs bundles given way code structured right", "d": "10/2015"}, {"body": "weswigham thnx pointing bundlingrelated work ts side went entire conversation think many corner cases discussed ex bundled module importing sth another bundled file dynamic loads bundles relevant bundling problem discussing want go first reaction format many downsides pointed makes easy create bundles shape content simply concatenating named calls true side effect polluting global module registry internal module paths paths registry makes super easy load modules different bundles statically dynamically got bit catch want info internal bundle structure nt want expose outside bundle boundary feels like bit like set contradictory requirements", "d": "10/2015"}, {"body": "quick update based work rkirov today see different workflows applicable people using cjsbased tools workflows combine application code sources one bundle sfx people load via script tag people use webpack today combine application code bundle one bundle work would publish bundle build bundles application code use external dependency case still need prepare bundle umd tested workflows outcome summarized quickly webpack configuration similar presented case benefit using bundles config simpler produce proper code duplication bundles need solve problem shared dependencies trivial", "d": "10/2015"}, {"body": "ok another round discussions igorminar rkirov decisions regarding cjs bundles going produce umd bundles consumed tools workflows replace sfx bundles longer run going duplicate shared facades code every bundle rxjs wo nt bundled party dependency zonejs wo nt provide umd bundles would include zonejs reflectmetadata external dependency provided users via tag", "d": "10/2015"}, {"body": "pkozlowskiopensource like idea bundling deps users include", "d": "10/2015"}, {"body": "done test library renaming changes", "d": "10/2015"}, {"body": "oh didnt know component api looks great case great router coming support api", "d": "10/2015"}, {"body": "closing longer generate file", "d": "10/2015"}, {"body": "petebacondarwin could help dgeni", "d": "10/2015"}, {"body": "fixed switching replacing", "d": "10/2015"}, {"body": "mhevery problem nt templates stuff going solve problem reopening", "d": "10/2015"}, {"body": "fixed via", "d": "10/2015"}, {"body": "lilotop explain working two lines gave identical", "d": "10/2015"}, {"body": "closed around", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "dispatchevent meant public api internal helper leaked provide ergonomic way trigger events post angularconnect meantime use regular dom apis create dispatch events", "d": "10/2015"}, {"body": "closing favor", "d": "10/2015"}, {"body": "critical sync bumping", "d": "10/2015"}, {"body": "working one", "d": "10/2015"}, {"body": "using import default pipes without problem found jspm tsd solved", "d": "10/2015"}, {"body": "obsolete", "d": "10/2015"}, {"body": "bug appears happening least angulardart", "d": "10/2015"}, {"body": "bumping breaking changes last chance make ac", "d": "10/2015"}, {"body": "resolved", "d": "10/2015"}, {"body": "moving working simple solution manually add combinators need eventemitter without changing anything inheritance", "d": "10/2015"}, {"body": "fixed move new library nt mask", "d": "10/2015"}, {"body": "fixed getting resolved slight chance landing critical", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "appears fixed updating include plunkr shall close", "d": "10/2015"}, {"body": "bumping need angular connect please let us know otherwise likely happen", "d": "10/2015"}, {"body": "changelog error message says camelcase think meant titlecase btford", "d": "10/2015"}, {"body": "nitpick nt correct terminology thought spaces words", "d": "10/2015"}, {"body": "pascalcase known everywhere found calling uppercamelcase", "d": "10/2015"}, {"body": "mention seen msdn msrelated documentation although using typescript typescript guidlines use", "d": "10/2015"}, {"body": "added breaking changes", "d": "10/2015"}, {"body": "chatting vsavkin earlier today perspective putting component control instead template idea extending property decorator something like typescript class mycomponent implements afterviewinit observechild searchbutton click searchclick eventemitter afterviewinit thissearchclicksubscribe evt gt alert clicked could work native custom events aside setting generic type tight coupling dom component portable different platforms", "d": "10/2015"}, {"body": "jeffbcross would beautiful although would call keep aligned latest naming", "d": "10/2015"}, {"body": "spent time digging noticed redirect regexp wild cards requires name like params might make sense way get data wildcard original example path would something like actually work plain recognized wild card actually literally define route reason wild cards changed perhaps optional extra characters current regexp", "d": "10/2015"}, {"body": "itslenny completely right think good behavior would recognize provide default name param like instance", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "move current", "d": "10/2015"}, {"body": "superseded", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "per", "d": "10/2015"}, {"body": "since moving away typings bundles tsddefinitelytyped would good work individual permodule files produced compiler think need couple files added new task directory router already add use cases expect users want like", "d": "10/2015"}, {"body": "work without typings distribution think could close ifwhen provide bundled typings decide entry points produce bundles", "d": "10/2015"}, {"body": "good discussion bundling based discussion morning standup nt need anything typings right close please reopen file specific issues remaining stuff discuss", "d": "10/2015"}, {"body": "jeffbcross still valid close", "d": "10/2015"}, {"body": "move want trigger route change function side component like onsubmit tried locationgo working", "d": "10/2015"}, {"body": "using di string tokens cases giving component model avoid coupling central service class something higher level router would awesome", "d": "10/2015"}, {"body": "related dgeni doc generation dts generation latter nt need fix whole dts generation soon replaced different process lands", "d": "10/2015"}, {"body": "moving", "d": "10/2015"}, {"body": "petebacondarwin chance might quick fix", "d": "10/2015"}, {"body": "nt care since publish dts files nonbundled form expect completely remove dgeni based dts bundle generation soonish", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "thing left remove old api", "d": "10/2015"}, {"body": "already semantics behind see static content projection using selectors allows build components nicer api user use attribute child nodes performance issue angular precalculate content projection compilation eventually end build step far stick", "d": "10/2015"}, {"body": "add trivially though users really want", "d": "10/2015"}, {"body": "imo renaming would confusing users vs", "d": "10/2015"}, {"body": "stick interesting question want implements tbosch thank doc read makes also finally clear based document really seems like hard implement boils however say add soon people actually asking could imagine users use case might change future tho", "d": "10/2015"}, {"body": "stick content injection content change detection contentbindings etc cases slot make sense may implement new functionality outside scope issue closing", "d": "10/2015"}, {"body": "trying help contribute moment build running tests thrashes system macbook pro ghz intel core gb ram trying rather easy hr estimate issue staring incredibly unreasonable amount time going end taking hours complete task order run build test done code hours ago", "d": "10/2015"}, {"body": "description lot extreme experienced bug referencing doublecheck right versions things node npm etc build script warn try opening activity monitor see eating cpu guess less ram many us team try freeing closing whatever apps", "d": "10/2015"}, {"body": "thanks alexeagle sorry adds noise issue misunderstanding excited want help anyway push versions also brings point confusion points upon fresh install folder installs expected however contains semantics supposedly works right start unable run using locally installed gulp complatined character frustrating eventually got run using globally installed finally got run task takes nearly ram run big deal certainly would nt think would hard system rate slow lot patience want help waited wanted test code running unit tests watch mode via also pretty painful nonetheless finally ran mins staring woohoo wanted nothing choose collared greens anyday may need see doctor sudden distaste sudden digress made change test file see live results picked changed file chrome instance launched never reconnected therefore could never get unit testing live mode run tried several times anyway amidst much frustration patience able get pr hopefully helps imagine lot others run similar experience trying help probably gave hunch couple things either faster simpler build may increase amount contributions sure look forward helping", "d": "10/2015"}, {"body": "thanks digging indeed hard contribute right good project want take seriously igorminar data points would useful diagnose", "d": "10/2015"}, {"body": "hw running give us full spec especially info disk", "d": "10/2015"}, {"body": "truble problem u solved", "d": "10/2015"}, {"body": "alxhub give status update", "d": "10/2015"}, {"body": "resolve issue", "d": "10/2015"}, {"body": "closed landed", "d": "10/2015"}, {"body": "fyi eventually done protractor setting next protractor release take care", "d": "10/2015"}, {"body": "status vicb mhevery jeffbcross", "d": "10/2015"}, {"body": "closed alpha works well", "d": "10/2015"}, {"body": "closing favor", "d": "10/2015"}, {"body": "believe obsolete closing reopen feel otherwise", "d": "10/2015"}, {"body": "well case every method starting better also annotation output typings enforce clear every one victor steps effectively taken example setting enforce public underscore currently", "d": "10/2015"}, {"body": "vsavkin fyi closed case still something say subject", "d": "10/2015"}, {"body": "rosendi thanks", "d": "10/2015"}, {"body": "think stale closed", "d": "10/2015"}, {"body": "seeing const api docs see example alexeagle petebacondarwin could investigate", "d": "10/2015"}, {"body": "reason patch never made angulario", "d": "10/2015"}, {"body": "copied patch angulario fix", "d": "10/2015"}, {"body": "dup", "d": "10/2015"}, {"body": "js class myappcomponent text string constructor thistext thisemit subscribe response gt consolelog response fist time text open second time fired happen thistext open causes subscribe fire thistext fire settimeout gt thistext fire emit rxobservable var emitter new eventemitter var emitter new eventemitter settimeout gt emitternext thistext pkozlowskiopensource event emitter firing second time", "d": "10/2015"}, {"body": "nt forget subscribe asynchronous call nt see consolelog thistext open actually happens first settimeout make trigger since subscribing emit function guessing getting text open triggered emit function basically need sure watch variable never tried since nt use case variable property component use onchanges lifecycle event way help", "d": "10/2015"}, {"body": "alright reopening got new problem eventemitters either missing something plnkr situation basically ca nt return observable anymore using see change return observable though nt feel right anyone word still using eventemitter kind situation switch rx observables full code js import component view eventemitter oninit bootstrap class somethingservice ee eventemitter new eventemitter firestuff settimeout gt thiseenext fire component selector hello viewbindings somethingservice view template export class hello implements oninit f string constructor private ss somethingservice oninit consolelog hello init fire thisf loading bootstrap hello cc ericmartinezr robwormald pkozlowskiopensource", "d": "10/2015"}, {"body": "closing opened new one", "d": "10/2015"}, {"body": "creating node version universal ran problem needed url resolved baseurl sent give info use case trying support want app running server make http request resource server actual url request made expected", "d": "10/2015"}, {"body": "guide template syntax cheat sheet address need", "d": "10/2015"}, {"body": "nt think finished yet dart change angular typescript pulldown angular dart directs also impression expression language somewhat different dart", "d": "10/2015"}, {"body": "fyi node upgrade improved time still create separate core src compilation unit bunch auxilary compilation units router examples etc", "d": "10/2015"}, {"body": "think stale jelbourn going close please verify reopen still issue", "d": "10/2015"}, {"body": "checked working expected master", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "hi upgrade library available alpha thanks david", "d": "10/2015"}, {"body": "sure make bundle next weeks", "d": "10/2015"}, {"body": "know released drop message ways know thanks", "d": "10/2015"}, {"body": "think easiest way follow repo check everyday happening releases go almost weekly basis ppl community tweet new releases included", "d": "10/2015"}, {"body": "pascalprecht team could webhook posts twitter every time new release", "d": "10/2015"}, {"body": "would also help opensource users nightlyhourly build catch problems sooner", "d": "10/2015"}, {"body": "problem selector validation fails attribute value int string value fine check", "d": "10/2015"}, {"body": "trying catch error selector however discussed tbosch check compiler", "d": "10/2015"}, {"body": "hi sorry digging issue forms export back nt see change referenced changelog decision regression best regards", "d": "10/2015"}, {"body": "plunker showing behavior alpha remove first element add new element see order view right identical inside console log click times showhide button see order view correct like someone said stackoverflow occurs syntax syntax html posted stackoverflow first", "d": "10/2015"}, {"body": "yjbanov obsolete right", "d": "10/2015"}, {"body": "still use getterssetters support events queries", "d": "10/2015"}, {"body": "ah nt sure meant element injector yes still using reflected getters amp setters cases", "d": "10/2015"}, {"body": "finished last month", "d": "10/2015"}, {"body": "obsolete", "d": "10/2015"}, {"body": "think completely drop beta", "d": "10/2015"}, {"body": "update", "d": "10/2015"}, {"body": "johnpapa afaik replaced", "d": "10/2015"}, {"body": "thanks heads indeed replaced removed closed looking forward ng team take", "d": "10/2015"}, {"body": "might resolved sure created slice filter nt aware issue nt make effort resolve quick attempt reproduce modified routing test updated line use slice returns whole array seems work fine produce errors encourage ng team confirm think issue closed", "d": "10/2015"}, {"body": "anyone actually tried combination ngswitch ngswitchwhen actual application test trying various combinations put breakpoint ngswitch setvalue ngswitchwhen setvalue always see ngswitch setvalue called ngswitchwhen one never hits result always see ngswitchwhen elements added regardless whether match able find examples outside forum shows syntax working curious missing something bug", "d": "10/2015"}, {"body": "bernardyen look unit tests pending pr adds doc plunker example hope helps", "d": "10/2015"}, {"body": "thanks look doc posting comment still get work use angulardart sure dart translation issue issue posting first turns dart issue repost basically combination ngswitch ngswitchwhen recall call ngswitchwhen methods even value match get anything show fact ca nt find many angulardart references syntax anywhere except forum suspicious could still missed something", "d": "10/2015"}, {"body": "closing let resurrect really want", "d": "10/2015"}, {"body": "anyone wondering timeouts message handler ramping outstandingrequestcount", "d": "10/2015"}, {"body": "measured current master following results dart static tree ms static tree baseline ms", "d": "10/2015"}, {"body": "solution works thank liveserver opensrc", "d": "10/2015"}, {"body": "also works issue probably closed", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "update written doc proposing switch builtin support distributing typings ts could addition providing bundled typings file could replace discuss next week microsoft steps listed doc start sending prs", "d": "10/2015"}, {"body": "hi almost ready ship comments welcome", "d": "10/2015"}, {"body": "chatted matan working dart internal folks unblocked could use help turning typescript contribution angular mhevery assigning maybe sync matan next week figure much work needed close", "d": "10/2015"}, {"body": "think go proposal using rules would simple one directive role present per element one directive given role matches element chose one highest selector specificity note could optionally concept priority bad examples angularjs priority difficult come absolute scale priorities across libraries", "d": "10/2015"}, {"body": "might work new compiler yet master", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "tamascsaba scenario mind feature would nice", "d": "10/2015"}, {"body": "think authenticated check done canactivate handler concern canactivate handler specific component would put every component routing target would distinguish data present authenticated event uirouter statechangestart event similar concept seems missing angular router maybe good reasons already possible listen navigation finish events would wary giving access router service handler canactivate startnavigation handler order change routing could get tricky first glance seems cleaner navigationstart handler able return something router resolves new navigation instruction overrides original one exceptional case like authentication check", "d": "10/2015"}, {"body": "agree put decorator like canactivate every component also seems way redirect say login page since di router etc instead put router definitions router configuration let specify routes needs authentication even better generic routes would like provide hook let add hook router config sure stepping anyone toes think way aurelia implemented looks nice see", "d": "10/2015"}, {"body": "put decorator like canactivate every component would nt put every component always make parent route behavior let specify routes needs authentication even better generic routes would like provide hook let add hook router config precisely child routes listening global events firing redirects would break encapsulation", "d": "10/2015"}, {"body": "ok fair enough put canactivate big issue must admit nt get rest reply let explain bit practical trying solve think people thread asked bunch discussions pages user types url authenticated interpreted canactivate place check authenticated return false however would also like redirect user login page happens note using real security view filter data secured server extending routeroutlet overrride activate use router navigate somewhere else however seems wrong several reasons one late view rendered flash quickly screen login user logged would like navigate first typed url canactivate use ca nt get router canactivate decorator since nt support di interpreted igor post canactivate redirect another view component decorated ca nt get data still feel would elegant router could handle configuration best practice scenario early given alpha status keep good work", "d": "10/2015"}, {"body": "vsavkin mhevery news thanks", "d": "10/2015"}, {"body": "validation already implemented definitely validated", "d": "10/2015"}, {"body": "rolandjitsu believe data type validation handled", "d": "10/2015"}, {"body": "rafacm thanks looking forward", "d": "10/2015"}, {"body": "take one implement see accept strings nt think extended work data types well", "d": "10/2015"}, {"body": "fyi seems milestone needs updated", "d": "10/2015"}, {"body": "hello wondering guys still giving thought trying develop component base maintenance view container acts container components entity maintenance screens idea base maintenance view container would afford maintenance screens common behaviour common ui elements view could done using concept view subclassing perhaps knowledge framework leading wrong direction anyone another way achieve please share best regards andr\u00e9", "d": "10/2015"}, {"body": "hold sort best way forward details", "d": "10/2015"}, {"body": "closed via", "d": "10/2015"}, {"body": "closing since js", "d": "10/2015"}, {"body": "mhevery think need enforce compiletime type checking also runtime type checking dsl users however small problem enforcing compiletime type checking using mandatory field used http method aliases like etc pass url first argument need second parameter type solution refactor interface make mandatory extend like way request second parameter type etc use semantical point view think makes sense since generic compared runtime type checking enforce drawback see one interface documented see clean way jeffbcross mhevery thoughts open pull request think sounds fine", "d": "10/2015"}, {"body": "mgechev yes makes sense multiple interfaces think regarding whether runtime error consistent rest framework think generally strays away runtime type checking splitting interfaces accomplish original objective issue pr welcome", "d": "10/2015"}, {"body": "okay take one", "d": "10/2015"}, {"body": "mgechev selfassigned show owner", "d": "10/2015"}, {"body": "still possible create request empty url want case value think alright however passing object literal typescript wo nt compile", "d": "10/2015"}, {"body": "closed", "d": "10/2015"}, {"body": "tedsander new compiler converts stylesheets separate files follow path ie stylesheet used components generated template used generated file also new compiler understands relative templatestyle urls leaving open new compiler", "d": "10/2015"}, {"body": "jeffbcross one use case consider might following using http interceptors angular ensure certain behaviour eg redirect authentication default without developers remember use particular wrapper shared service would kind default behaviour still possible angular using wrapper approach guessing tell di use wrapper whenever http injected right know angular well enough yet", "d": "10/2015"}, {"body": "tedsander solved new compiler could double check", "d": "10/2015"}, {"body": "solved", "d": "10/2015"}, {"body": "still thing might help", "d": "10/2015"}, {"body": "ended deciding move http test dependencies separate module bundle called sorry slow update issue thanks pr rixrix think robwormald started work part work assign", "d": "10/2015"}, {"body": "jeffbcross problem thanks looking", "d": "10/2015"}, {"body": "impression change detectors would coalesce multiple reads expressions twice issue self consistent rest templates new variables declared templates hence would present template sure worth trouble given change detectors coalesce", "d": "10/2015"}, {"body": "mhevery sure status see api assume use help loading relative compiled commonjs tries load browser get going work point component", "d": "10/2015"}, {"body": "sorry still work progress tue oct pm roland groza notifications githubcom wrote mhevery sure status see component api moduleid assume use help loading relative compiled commonjs moduleid moduleid tries load browser get xmlhttprequest load package cross origin requests supported protocol schemes data chrome chromeextension chromeextensionresourcetget anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function angular anonymous function anonymous function anonymous function exception failed load package going work point moduleid component reply email directly view github", "d": "10/2015"}, {"body": "tbosch thanks looking forward solution", "d": "10/2015"}, {"body": "see option could enable enforces much nt good answer marking fieldsmethods ts may accessed anywhere file currently make private meantime good next step would tslint check angular repo private method starts underscore better enforce way since tsonly contributors still enforcement", "d": "10/2015"}, {"body": "alexeagle created pr lint thing", "d": "10/2015"}, {"body": "frequently encounter wrap compose components exposing part inner components apis properties events", "d": "10/2015"}, {"body": "typotter said currently project going found nobubble restriction custom events frustrating ended using scope events assumed angular would bubble custom events thought better polyfilled angular great use case code example product purchasing app grid products add product want talk services directly remain dumb component want broadcast happened also good place deal event like keep guy dumb ends highest point bubble event makes sense handle event passes payload throwaway layer app two components truly reusable call idea components composers components dumb composers components also tie together services models components see event bubbles right add productdataname class productcard input productdata output addtocart new eventemitter component selector productcardgrid view template class productcard input products stuff pagination etc component selector app view template class productcard constructor thisproducts name car name boat", "d": "10/2015"}, {"body": "timkindberg add event output property done component make interface explicit result much easier maintain also bubbling lead event name collision two child elements emit different events name mine", "d": "10/2015"}, {"body": "small offtopic btw also much like dumbsmart components idea handy create smart components statefull using lot dumb components statelesss receive properties inputs emit events outputs unfortunately bad adopted sort things example react create dumb components pretty easy must looks verbose maybe somehow improve mhevery", "d": "10/2015"}, {"body": "got feeling problem back sure version ca nt load angular webs safari", "d": "10/2015"}, {"body": "mhevery could please answer questions thanks", "d": "10/2015"}, {"body": "sorry us design later", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "reason working place angular component angular wo nt compile element angular read attribute values runtime compile time otherwise would get performance hit ie works intended please use code snippet mewel described", "d": "10/2015"}, {"body": "let leave issue open see many people need feature", "d": "10/2015"}, {"body": "get attributes outside angular app useful easy use wo nt provide feature add good documentation address use case btw reading attributes toplevel component easier understand smile", "d": "10/2015"}, {"body": "big performance hit talking building single page app understand big deal something like building interactive reusable user profile component use wordpress theme something able say pretty important cycling attributes causes hit flag attribute check something like import nt set true bypasses reading properties thought", "d": "10/2015"}, {"body": "clear work using component root application ie application component use component inside angular app works fine reading attribute consistent interpreting attributes root element mon oct pm anakinjay notifications githubcom wrote big performance hit talking building single page app understand big deal something like building interactive reusable user profile component use wordpress theme something able say pretty important cycling attributes causes hit flag attribute check something like import nt set true bypasses reading properties thought reply email directly view github", "d": "10/2015"}, {"body": "feature would require lot special cases code paths special change defectors root components regular ones precompiled code build step soon nt know app gets bootstrapped special readattributes method renderer api angular running nativescript webworkers mon oct pm tobias bosch tbosch googlecom wrote clear work using component root application ie application component use component inside angular app works fine reading attribute consistent interpreting attributes root element mon oct pm anakinjay notifications githubcom wrote big performance hit talking building single page app understand big deal something like building interactive reusable user profile component use wordpress theme something able say pretty important cycling attributes causes hit flag attribute check something like import nt set true bypasses reading properties thought reply email directly view github", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "much point closed issue see pb please open new issue clear description steps reproduce ideally runnable demo plunker see kind info looking comes issue reports", "d": "10/2015"}, {"body": "pkozlowskiopensource attaching events template throws error eg following template works fine testnamevalue following one throws error moment add event testnamevalue", "d": "10/2015"}, {"body": "mhevery thinking think syntax", "d": "10/2015"}, {"body": "jelbourn think ideal implies always executed throttle output function think syntax needs make clear goes first part normal expression also explain comes ideal syntax would make clear part part guard expression something like need created", "d": "10/2015"}, {"body": "hi subject done examples debouncing alternatives thought pros declarative easy read similar approaches followed libs underscore lodash cons name colision functions already present component alternative could name colision still happen feels clean alternative following jelbourn approaches personally think introducing new kind operator gt something avoided see reasoning behind reversing order think aligns better mhevery concern also share", "d": "10/2015"}, {"body": "figured details thinking far wanted get feedback would developer declared function would declared ui thread would execute outside zone idea would allowed transform stream events time generate new stream events would used execute named symbol rather inline parameters would easy apply many different events get behavior easy change one location applies everywhere maybe could allow chaining well canonical version still thinking register template", "d": "10/2015"}, {"body": "syntax execute callback outside angular user whatever feels like method would avoid overloading templates logic help testing", "d": "10/2015"}, {"body": "thinking think better way think could synthetic event streams example invoke similarly could trick becomes declaring new event one way could extend capabilities would also solve issue ionic would like create custom events polyfill events different platforms even redefine click mobile wait ms advantage approach introduce new concepts extends existing concept directives thoughts note may also related", "d": "10/2015"}, {"body": "need think also caveats see proposal let know wrong needs one directive per event name possible define reusable behaviors ie debounce solve thing", "d": "10/2015"}, {"body": "needs one directive per event name possible define reusable behaviors ie debounce could solved selector would would somehow extract name solve runoutsideofangular thing would assumed run outsize zone", "d": "10/2015"}, {"body": "eventdirective would live app side ie events need marshaled webworker scenario also clear relates zones better option would provide plugins renderer deal based event name independent current component sun oct mi\u0161ko hevery notifications githubcom wrote needs one directive per event name possible define reusable behaviors ie debounce could solved selector would debounce would somehow extract name solve runoutsideofangular thing would assumed eventdirectives run outsize zone reply email directly view github", "d": "10/2015"}, {"body": "point big fan option seems purpose something similar introduce new concepts extend existing concepts think users hard time remembering use selector use selector regular selector could also problematic wrt name collision actually preferred previous proposal ie oninput event mhevery would problem vs", "d": "10/2015"}, {"body": "like concept composable", "d": "10/2015"}, {"body": "still phase throwing ideas getting feedback sounds like thinking form synthetic events registered renderer way could short circuit marshaling app ui side thinking", "d": "10/2015"}, {"body": "would say solves mhevery issues nt really understand technical discussion think would much simpler instead extending meaning directive would nice extend use output add extra param object contain certain properties approach possible keep template clean make everything componentdirective side also remember changed term event called fwiw two cents throws smoke dissapears", "d": "10/2015"}, {"body": "alpha use attribute selector svg group work seem get component custom element syntax looking work example works fine", "d": "10/2015"}, {"body": "nborelli yes known issue new compiler working fix tbosch", "d": "10/2015"}, {"body": "edge case using g attribute selectors absolutely fine nice see works", "d": "10/2015"}, {"body": "alxhub land closed", "d": "10/2015"}, {"body": "yes landed", "d": "10/2015"}, {"body": "mhevery elaborate issue either want base query list proposed replace wherever querylist imported import package observeobservedart show observablelist", "d": "10/2015"}, {"body": "obsolete longer use traceur", "d": "10/2015"}, {"body": "allow dom events bubble still issue shadowdom retargeting changes property event event come form component hide shadow dom implementation detail sure important jelbourn come concrete example would need think example would make easier discuss needed", "d": "10/2015"}, {"body": "less issue dom events bubble think event retargeting still happen components also probably control whether want retarget usecase component wants act like widget form control say example material design button rendered output would look something like far consumer concerned target click event element put page without retargeting though target going div leaking implementation details component", "d": "10/2015"}, {"body": "landed master", "d": "10/2015"}, {"body": "think obsolete thinking closing", "d": "10/2015"}, {"body": "want integrate protractor application help guide help setting protractor also need know whether phantomjs would work protractor application", "d": "10/2015"}, {"title": "custom directive params binding problem", "body": "hi using vue trying bind params custom directive params parsed strings problem seen example vuejs site param longer parsed array string tried use also convert params string", "num": "1662", "d": "10/2015"}, {"title": "fail resolve literal binding", "body": "literal bindings resolved syntaxes needs written resolved managed reproduce issue vuejs vuejs fiddle reproduce issue", "num": "1661", "d": "10/2015"}, {"title": "array set buggy", "body": "see behavior fiddle click button change state item", "num": "1659", "d": "10/2015"}, {"title": "", "body": "\u62a5\u9519", "num": "1656", "d": "10/2015"}, {"title": "class name propagation", "body": "vue components propagate css class names one level deep working example using jade jade parent component div final outcome divfirstclassname perfect however using another components inside failing example using jade jade parent component div final outcome div firstclassname missing", "num": "1655", "d": "10/2015"}, {"title": "suggestion add transition mode transition list vfor", "body": "hi list components rendered via array prop like fact already filled beginning would like transition bouncein list beginning first time could triggering class loose benefit stagger effect achieve found way dirty hack flush prop beginning refills give option trigger enter transition first time thanks", "num": "1654", "d": "10/2015"}, {"title": "custom sort filter err", "body": "following custom sort ok repl set filter get err", "num": "1648", "d": "10/2015"}, {"title": "use vif image loaded", "body": "javascript code condition satisfied insert image condition satisfied would insert image network panel seen image loaded", "num": "1646", "d": "10/2015"}, {"title": "el body working since", "body": "tested fine deprecated", "num": "1642", "d": "10/2015"}, {"title": "filter work", "body": "filter nt work demo code html itemname itemage say var vm new vue el app data items name hxh age name huhu age created function consolelog thismessage lt br gt lt p gt vuefilter say function value return value", "num": "1641", "d": "10/2015"}, {"title": "upgrading duplicate value found vfor", "body": "hello try upgrade vue app get following error times loop template code loops booktitle array entries someone explain issue", "num": "1552", "d": "10/2015"}, {"title": "analog angularjs nginclude", "body": "thank", "num": "1501", "d": "10/2015"}, {"title": "p\u6807\u7b7e\u4f7f\u7528vfor\u65e0\u6cd5\u6b63\u5e38\u6267\u884c", "body": "\u4ee3\u7801\u5982\u4e0b html js new vue el demo data list message message abcdefg", "num": "1500", "d": "10/2015"}, {"title": "sufficient replacement", "body": "directive used allow pass object like example would render using new attribute would result following output new way massassign attributes dom element using attribute", "num": "1499", "d": "10/2015"}, {"title": "bug filterby resulting duplicate entries", "body": "hi witnessed following jsbin filtering multiple fields search value null instead empty string user types something search box filter works deleting input output results duplicate entries initial rendering fixed initialising search null cheers koen", "num": "1479", "d": "10/2015"}, {"title": "async component asset array syntax", "body": "prior able create async component factory function give could register array syntax eg javascript component import component register import chartistcomponent xxx components chartistcomponent changed longer read apart using array asset registration syntax anything done", "num": "1477", "d": "10/2015"}, {"title": "twoway binding spaces", "body": "twoway binding example getting started section docs using multiple spaces row translates one space behavior seen html multiple spaces row order accurately translate passed number spaces could done replacing space order bypass html behavior thoughts", "num": "1476", "d": "10/2015"}, {"title": "cdnjs link docs broken", "body": "linked currently", "num": "1475", "d": "10/2015"}, {"title": "\u5982\u4f55\u7ed1\u5b9a documentscroll", "body": "\u5b9e\u73b0\u7c7b\u4f3c coffeescript document scroll gt get loadlist data gt loadlist append data", "num": "1474", "d": "10/2015"}, {"title": "custom", "body": "", "num": "1473", "d": "10/2015"}, {"title": "error documentation building largescale apps gt unit testing wrong test", "body": "mycomponentjs data contains msg property test referred message", "num": "1472", "d": "10/2015"}, {"title": "comment nodes returned component el", "body": "enabled noticed component would return debug comment nodes trying access component tried recreate jsfiddle quite issues using template script style together code hope help js able keep deving turning debug prop goal component appear row types field clicked edited passing component data parent node row via component sets prop component knows row appended click component component sets prop component used append passed new vue week challenge think outside jquery apologize way getting work roundabout learning ton importantly relearning think solving problems vue awesome far hope issue helps", "num": "1471", "d": "10/2015"}, {"title": "allow methods nested", "body": "think would make sense allow methods nested subobjects", "num": "1470", "d": "10/2015"}, {"title": "beforedetach hook", "body": "trying write list view component vue problem saving state current items detach want collect boundingclientrect list items beforedetach restore listview reattach wonder way exec certain code right detach plan", "num": "1469", "d": "10/2015"}, {"title": "vue directives vhtml directive", "body": "trying parse html text uses vue directives inside html file got way parse content", "num": "1468", "d": "10/2015"}, {"title": "vif velse nt work correctly tags", "body": "hello noticed vif velse nt work correctly applied example example made simple nested ifelse work instead fail nt think specific tags tried work", "num": "1467", "d": "10/2015"}, {"title": "missing targetvm", "body": "happen", "num": "1466", "d": "10/2015"}, {"title": "index value vfor vue", "body": "hi upgraded project made saw values get current index vue subcomponent nt available anymore project used following get index key inside vfor var key index gave back current index var container parent value gave back containing array best way get back working idea pass key index props childcomponent thanks", "num": "1465", "d": "10/2015"}, {"title": "invalid prop type check stringundefined", "body": "getting following warning transitioning setup seems last issue ca nt get past thanks help", "num": "1464", "d": "10/2015"}, {"title": "passing data child components via props", "body": "child components unable inherit data parent via props attribute steps reproduce create child component try pass data properties outlined docs see reproduced", "num": "1463", "d": "10/2015"}, {"title": "vtext option", "body": "sure strictly bug vuejs tested jsfiddle nt work objtext shown works reason likely allows text least chrome nt problem normal must connected vuejs treating vtext", "num": "1461", "d": "10/2015"}, {"title": "uncaught typeerror read property get undefined", "body": "v line var fn expparserparse expression get uncaught typeerror read property get undefined directivecheckstatement directivebind linkandcapture compositelinkfn exportscompile exports mount exportsinit vue init", "num": "1460", "d": "10/2015"}, {"title": "access nested data objects", "body": "following data errormessages returning server data json access data tried following way luck working email field html help access profileaddress amp profilecity", "num": "1459", "d": "10/2015"}, {"title": "vbind class array nt remove classes", "body": "hello using array attribute classes removed element get removed array use inspector check classes element check checkbox uncheck classes remain element", "num": "1458", "d": "10/2015"}, {"title": "vtransition called component", "body": "component child components like call methods child component animate parent component needs leave hook ca nt access references anymore everything already destroyed think components wait leave finish calling destroy", "num": "1457", "d": "10/2015"}, {"title": "alpha deprecation issue vbind readonly", "body": "getting deprecation warnings using vbind readonly isreadonly input field make warning go away using hyphenated version vbind readonly isreadonly however behave expected putting readonly attribute html element instead adds readonly attribute element suspect due javascript equivalent attribute readonly whereas html version readonly knownplanned workarounds", "num": "1456", "d": "10/2015"}, {"title": "problems new syntax", "body": "hello troubles trying lately jade fails work attributes ones beginning colons used two line get syntax error example look like jade bug reported feel like developers wo nt fix colons special jade syntax using webpack uglifyjsplugin like fails attributes freezes building overall directly vuejs problem yes looks like vuejs developers face many unexpected problems new syntax nt think list complete one", "num": "1455", "d": "10/2015"}, {"title": "filter used options run", "body": "template filter change one object item property filter nt make option disabled property filter options run used wrong way make work", "num": "1454", "d": "10/2015"}, {"title": "\u52a8\u6001\u6a21\u677f\u95ee\u9898", "body": "", "num": "1453", "d": "10/2015"}, {"title": "nt remove attributes directives debug mode", "body": "vue removes directive attributes compiling difficult removed debug mode would convenient debugging suggestion", "num": "1452", "d": "10/2015"}, {"title": "using event modifiers alone without handler", "body": "excepted would work luck html prevent blur form textarea mousedownprevent epreventdefault new vue el html ready function elstextfocus", "num": "1451", "d": "10/2015"}, {"title": "ca nt bind variable", "body": "error", "num": "1449", "d": "10/2015"}, {"title": "docs rc missing", "body": "docs missing docs rc", "num": "1448", "d": "10/2015"}, {"title": "demo transitions current docs broken", "body": "embedded fiddle error using js branch fiddle uses old syntax vrepeat vtransition", "num": "1447", "d": "10/2015"}, {"title": "ajax\u52a0\u8f7d\u663e\u793a\u95ee\u9898", "body": "ajax\u6ca1\u6709\u52a0\u8f7d\u5b8c\u65f6 \u9875\u9762\u663e\u793a \u5982\u4f55\u5904\u7406 \u6211\u73b0\u5728\u7528\u7684\u662fvtext", "num": "1446", "d": "10/2015"}, {"title": "dynamic component vbind one way modifier working", "body": "vbind one way vbind still allows child component change parent component data see click one link compa compb edit text input textbox child component value parent component changed accordingly even modifier used pass data child component", "num": "1445", "d": "10/2015"}, {"title": "change data another var model also changed", "body": "tried define new var change data model nt want change vue model data vue model also changed", "num": "1444", "d": "10/2015"}, {"title": "pass token string prop doesnt work", "body": "html file vueloader created custom component use html file component vuejs token name moduleexports props token name pass token long string prop component seems vue handle large strings output token empty short string got problems name prop shown output", "num": "1443", "d": "10/2015"}, {"title": "fail resolve custom directive component", "body": "apply custom directive component vue complain custom directive found directive resolved component options context online example error message logged console test version", "num": "1442", "d": "10/2015"}, {"title": "vfor triggering detach children", "body": "using think found issue using vfor repeats vue components vue components hooks detached see following fiddle observe console every additem removeitem expect see attached detached console however see attached think problem lies vfor notifies children lines problem previous line execution lead removing following iterate children notify missing still new vuejs may wrong way far really like", "num": "1440", "d": "10/2015"}, {"title": "api nt content vbind", "body": "", "num": "1439", "d": "10/2015"}, {"title": "problem binding class two arrays", "body": "javascript html result html change html result become comma html tried bind class two arrays javascript html html result html", "num": "1438", "d": "10/2015"}, {"title": "binding syntax suggestion", "body": "way assign value multiples modifiers von directive von focus reseterrordisplay input reseterrordisplay von focus input reseterrordisplay thanks", "num": "1436", "d": "10/2015"}, {"title": "vattr substitute", "body": "hey trying disable button form clicked returns warning console markup button html formtext guess altered something else achieve behaviour", "num": "1435", "d": "10/2015"}, {"title": "hide element rendering", "body": "avoid something like basically want hide elementsdata show dom ready thanks", "num": "1434", "d": "10/2015"}, {"title": "vfor filters sync work expected", "body": "fiddle expected change items one two clicking buttons write filter never called one two never changed obviously simple use case work least show warning", "num": "1433", "d": "10/2015"}, {"title": "dynamic component props passing issue", "body": "create dynamic components sample router change currentview value render component warn message print like obviously passed parent data vuejs", "num": "1432", "d": "10/2015"}, {"title": "warns duplicated props mixins", "body": "sometimes would abstract behaviours mixins example mixed required prop named component requires mixins vue warn required even value passed one prop check digests value leaving another one nothing way suggestions use compose mixins features mixins sometimes implicit conflicts raise easy find addition mixins require component obey implicit interfaces lead hard maintain codes", "num": "1431", "d": "10/2015"}, {"title": "failed resolve component \u7236\u7ec4\u4ef6\u5b50\u7ec4\u4ef6\u7b2c\u4e09\u5c42\u7ec4\u4ef6", "body": "\u7ed3\u6784\u662f\u8fd9\u6837\u7684 \u6700\u9876\u5c42\u7ec4\u4ef6\u4e3aappvue \u5176\u4e2d\u5b50\u7ec4\u4ef6myvue\u662f\u8fd9\u6837\u7684 \u5728\u5176\u4e2d\u7684\u4e00\u4e2a\u7ec4\u4ef6my\u4e2d \u6211\u5c31\u7167\u846b\u82a6\u753b\u74e2\u5728myvue\u4e2d\u52a0\u4e0a\u4e86components\u5e76\u4e14\u5176\u4e2d\u4e00\u4e2a\u6309\u94ae\u94fe\u63a5\u5230mycents \u4f46\u662f\u65e0\u6cd5\u5207\u6362\u5230my\u7ec4\u4ef6\u4e0b\u7684mycents\u7ec4\u4ef6 \u6211\u60f3\u80af\u5b9a\u662f\u7528\u9519\u4e86\u6982\u5ff5 \u591a\u8c22\u5e2e\u52a9", "num": "1430", "d": "10/2015"}, {"title": "view nt update update data", "body": "code html item item javascript var vue require vue vueconfigdebug true var app new vue el app template require mainhtml replace false ready function windowvue vue thx answer question", "num": "1429", "d": "10/2015"}, {"title": "fails resolve components using variable passed via prop using expression syntax", "body": "hard coding component name makes resolvable works doesnt itemcomponent variable value item", "num": "1428", "d": "10/2015"}, {"title": "binding filtering references", "body": "hi first would like congratulate devs dev framework anyway let get business would like know copy one object cut bindings references attached object tried using oneway binding child component everytime change object child component affect parent component even object notation much reference jsside components documentation focused templating would suggest maybe create cheat sheet something like anyone wondering builtin filtering js example var country optionsfiltersfilterby thiscountries thisprofilecountrycode code", "num": "1427", "d": "10/2015"}, {"title": "vm watch specific property objects array", "body": "feature request useful efficient watch specified property objects array example data users name peter name john vm watch usersname function newval oldval newval oldval return particular user name changed deep false", "num": "1426", "d": "10/2015"}, {"title": "css class bindings break unexpectedly", "body": "hello ran problem using custom singlemustache config everything tried far worked well vue quite nice work template breaks revert back doublemustache config html item made fiddle demonstrates problem thanks much please let know anything else update may actually issue bindings even default delimiters error occurs", "num": "1425", "d": "10/2015"}, {"title": "using dynamic components inline templates", "body": "trying use dynamic components directive also need inline templates html category inline templates always instantiated shown way use inline templates dynamic components", "num": "1424", "d": "10/2015"}, {"title": "multiple classes name", "body": "manually destroy add component class applied multiple times gt btw sure right way achieve hard reload component best wishes benny", "num": "1423", "d": "10/2015"}, {"title": "propertychange\u80fd\u652f\u6301\u5417", "body": "", "num": "1422", "d": "10/2015"}, {"title": "component data send child components", "body": "components sending data props requested child components missing something", "num": "1421", "d": "10/2015"}, {"title": "escape inside property", "body": "sometimes need put server side data json prop component data may using vpre option escape printing instead really ok following html breaks things inside nested string matched outside fiddle", "num": "1420", "d": "10/2015"}, {"title": "prop validation prevent correct rendering components async situations", "body": "tried restrict component props specific type data already set correct like undefined different expected type component nt render properly even future data filled proper values typically async call resources example situation jsfiddle", "num": "1419", "d": "10/2015"}, {"title": "index", "body": "\u8c22\u8c22", "num": "1418", "d": "10/2015"}, {"title": "vfor child component seems pass data using vcomponent syntax", "body": "vue component named scoped child vue marked style seem play nicely data passed compare alternative directivebased syntax works expected javascript unless something wrong entirely possible seems inconsistent least unexpected", "num": "1417", "d": "10/2015"}, {"title": "question", "body": "nt understand example nt work vue beta html title content", "num": "1416", "d": "10/2015"}, {"title": "new modal component sample", "body": "simple comment newbie might easy fix would nice modal component replace default header custom header originally intended left exercise might good exercise would nice show examples", "num": "1415", "d": "10/2015"}, {"title": "", "body": "html expandtransition transition ease height padding backgroundcolor eee overflow hidden expandenter expandleave height padding opacity hello var vm new vue el html data show true", "num": "1414", "d": "10/2015"}, {"title": "use better native attribute check", "body": "current implementation still somewhat flawed due many attributes nt clear mapping rule attribute names corresponding property names", "num": "1413", "d": "10/2015"}, {"title": "registering components components attribute nt work", "body": "hello developing spa vuerouter try register components property vue instance nt work root component stored js moduleexports router load views include used work try code get warning components nt defined order make work need hack register components globally ready method js moduleexports nt feel right take look thread bit details", "num": "1412", "d": "10/2015"}, {"title": "watch handler returns identical values newval oldval", "body": "issue vue beta email", "num": "1411", "d": "10/2015"}, {"title": "could implement something like templateurl angular", "body": "know officially suggested use webpack browserify maintain components want get github pages taking effect push source github without extra building process supported work around plan", "num": "1410", "d": "10/2015"}, {"title": "regarding template property dom nodes", "body": "tl dr could template property support using already constructed detached dom elements templating documentation specifies template string property looking code see actually accepts dom elements however also looks stuff nt exactly get could possible directly pass dom node without alteration ie without extracting children generally use jsx custom function compiles dom element along pragma babel would like write stuff like right enclose everything element like approach work also sure way things still work future releases thoughts matter", "num": "1409", "d": "10/2015"}, {"title": "examples rcvuejsorg using rather", "body": "examples rcvuejsorg using library rather library may changes codebase html js well may need revised one start learning vuejs examples important pages website", "num": "1408", "d": "10/2015"}, {"title": "crash vfor child element manually removed dom", "body": "manually delete vfor element jquery update vfor source vue crash trying remove corresponding element following code works vue working latest alpha sense removing element manually legacy code separate file anyway maybe worth handle situation", "num": "1407", "d": "10/2015"}, {"title": "option change interpolation delimiter", "body": "looking use django django already uses option change something like", "num": "1406", "d": "10/2015"}, {"title": "dom node leak todo app", "body": "stumbled across interesting library called drool basically finds dom leaks ran vuejs todo app results code used javascript var drool require drool var assert require assert var driver droolstart chromeoptions nosandbox droolflow repeatcount setup function driverget action function driverfindelement droolwebdriverbycss newtodo sendkeys find magical goats droolwebdriverkeyenter driverfindelement droolwebdriverbycss todolist li click driverfindelement droolwebdriverbycss destroy click assert function initial consolelog jsonstringify initial jsonstringify assertequal initialnodes afternodes node count match driver driverquit nt know implementation issue library todo app written may also worthwhile add ci build since see frameworks", "num": "1405", "d": "10/2015"}, {"title": "better trigger attached event ready event", "body": "sometimes hook need wait onetime initial dom related operations logic hook different attached first time reattached currently use promise attached function var self thisready new promise function resolve selfreadyresolve resolve ready function create gsap animation object thisanimation new timelinelite elsfoo opacity", "num": "1404", "d": "10/2015"}, {"title": "vif vrepeat", "body": "vrepeat name vif value vif working vif used vrepeat version", "num": "1403", "d": "10/2015"}, {"title": "bug vrepeat working version", "body": "bug vrepeat working version", "num": "1402", "d": "10/2015"}, {"title": "", "body": "standard html element", "num": "1401", "d": "10/2015"}, {"title": "vue nonrequired twoway binding warns omitted", "body": "vue creating component twoway binding specified required warning still thrown example prints warning vue warn prop show expects twoway binding type", "num": "1400", "d": "10/2015"}, {"title": "custom directive include modifier", "body": "log shows", "num": "1399", "d": "10/2015"}, {"title": "auto timeout css transition", "body": "common one component change parent still hidden means transition hooks wo nt triggered due transition events fired even becomes visible later make work properly transition timeout events fired given time", "num": "1398", "d": "10/2015"}, {"title": "partial templates incompatibile vuerouter", "body": "common navigation elements sidenav breadcrumb bar trying capture partials using vlink inside partial raised error relevant lines also fails child components registered router although expected", "num": "1397", "d": "10/2015"}, {"title": "helper make object reactive", "body": "simple centralized stores", "num": "1396", "d": "10/2015"}, {"title": "inside vfor inside nt get repeated", "body": "add element", "num": "1395", "d": "10/2015"}, {"title": "way escape", "body": "exact actually print page", "num": "1394", "d": "10/2015"}, {"title": "value variable null", "body": "hi variable null show variable html variable value instead null solution thanks", "num": "1393", "d": "10/2015"}, {"title": "update issue", "body": "try update vue error throws according release note loaded vue changed template syntax project still thorw error nt know happened", "num": "1392", "d": "10/2015"}, {"title": "binding syntax issue update partial element", "body": "directive element expects attribute special binding syntax sure expecting issue states incorrect static partial check", "num": "1391", "d": "10/2015"}, {"title": "loading spinner loading image", "body": "sildeshow build vrepeat want show spinner image loaded browser memory show image afterwards ideas", "num": "1390", "d": "10/2015"}, {"title": "time tag considered custom element", "body": "hello seems tag considered custom element vuejs keep getting following warning alpha beta", "num": "1389", "d": "10/2015"}, {"title": "vshow component work template another component", "body": "please see", "num": "1388", "d": "10/2015"}, {"title": "vrepeat array strings reuse child component changed value", "body": "please see press click", "num": "1387", "d": "10/2015"}, {"title": "addchild inlinetemplate works", "body": "hi think expected behaviour decided fire bug description placing new html dom creating new component instance using addchild fly component template inlineone component rendered correctly first time important component template inline everything ok reproduction clicking button place proper component following attempts would lead unexpected behaviour regards", "num": "1386", "d": "10/2015"}, {"title": "objectprototype set breaking meteor", "body": "heads setting object prototype method breaking usage meteor meteor uses mongo db update property sometimes checks existence like always true vuejs loaded set prototype", "num": "1385", "d": "10/2015"}, {"title": "allow optional syntax", "body": "optionally binding iteration index key iterating object name simplify work nested html name row vs html parent key row feature implemented private fork would submit pullrequest wanted patch lines", "num": "1384", "d": "10/2015"}, {"title": "template parser provide way explicitly declare svg namespace", "body": "ref", "num": "1383", "d": "10/2015"}, {"title": "suggestion automatically bind props default value functions current vm", "body": "sometimes need set objectsarrays default values property cases need specify function return default value docs link suggestion automatically bind kind functions current vm get access vm context global context", "num": "1382", "d": "10/2015"}, {"title": "add unobservable data", "body": "versions ago defined property prepended ex property observed achieved latest versions", "num": "1381", "d": "10/2015"}, {"title": "latest binding syntax vue webpack compatibility issue", "body": "sure best post one code breaks webpack loader next error compiles fine incorrect know deal definitely way attr handled webpack ideas", "num": "1380", "d": "10/2015"}, {"title": "refreshing page nt call dispatch", "body": "refreshing page browser sure nt fire child parent", "num": "1379", "d": "10/2015"}, {"body": "ah custom directive nt setup priority properly params api change fiddle fixed explicit priority work default next release", "d": "10/2015"}, {"body": "literal modifier nt work props literal props prop string", "d": "10/2015"}, {"body": "even simpler thanks", "d": "10/2015"}, {"body": "see warning console need add array contains duplicate values", "d": "10/2015"}, {"body": "markdown \u5417", "d": "10/2015"}, {"body": "sortby \u628a\u5927\u5199\u7684 b", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "design see docs fragment instance", "d": "10/2015"}, {"body": "said design better warnings case later releases", "d": "10/2015"}, {"body": "yeah thinking could useful", "d": "10/2015"}, {"body": "glad hear eventually implemented future versions thanks", "d": "10/2015"}, {"body": "warning explains using object object converted array passed filter changed", "d": "10/2015"}, {"body": "proof", "d": "10/2015"}, {"body": "image dom node nodes tree see image load request chrome network panel", "d": "10/2015"}, {"body": "proof mean reproduction jsfiddle jsbin", "d": "10/2015"}, {"body": "proof also see directly", "d": "10/2015"}, {"body": "likely browser attempts download image vue gets chance remove element dom try wrapping template even inlining js", "d": "10/2015"}, {"body": "unfortunately happens vue clones template even node offdom still trigger network request happens vue compiles simple workaround use trigger request compiled", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "sorry bad forgot jade ca nt pass", "d": "10/2015"}, {"body": "try register filter initializing vm post questions like forumvuejsorg next time", "d": "10/2015"}, {"body": "thanks work write filter initializing vm mybe custom filters part guid indicate", "d": "10/2015"}, {"body": "says recommend dedicate hour two reading whole guide useful", "d": "10/2015"}, {"body": "good reading guid part", "d": "10/2015"}, {"body": "please make live reproduction", "d": "10/2015"}, {"body": "solved minutes ago component inserted json string prop method converted json string array override prop seems tries iterate json string method called solved renaming prop save converted json string data array component", "d": "10/2015"}, {"body": "please nt use issues simple questions questions better asked gitter channel forum nginclude may want take look", "d": "10/2015"}, {"body": "p \u91cc\u9762\u4e0d\u80fd\u5d4c\u5957", "d": "10/2015"}, {"body": "style", "d": "10/2015"}, {"body": "aware format however need ability pass dynamic object directive building formbuilder", "d": "10/2015"}, {"body": "able simulate behaviour directive add bindings thought sure best", "d": "10/2015"}, {"body": "issue moving unknown attribute keys passed longer attach object vattr vbind works know keys think need special directive vbind much like class amp style accepts object could pass unknown attributes output element sure others makes great difference way built cases currently would nt need track state object outputs attributes static", "d": "10/2015"}, {"body": "temporary solution grab old source remove priority option necessary add object register custom directive necessary seems work well enough still think supported", "d": "10/2015"}, {"body": "supports object binding check commit", "d": "10/2015"}, {"body": "works well nt reactive fine cases currently need feature thank", "d": "10/2015"}, {"body": "thegc ah reactive case next patch", "d": "10/2015"}, {"body": "testing helps", "d": "10/2015"}, {"body": "hmm something overlooked renaming option use also js import chartist xxx export default components chartist", "d": "10/2015"}, {"body": "want accurate whitespace use tag", "d": "10/2015"}, {"body": "works fine", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "\u8bf7\u4e0d\u8981\u7528 issue", "d": "10/2015"}, {"body": "vue\u6709\u8def\u7ebf\u56fe\u4e48", "d": "10/2015"}, {"body": "\u6700\u8fd1\u5fd9 \u4e2d\u6587\u6587\u6863\u7684\u7ffb\u8bd1", "d": "10/2015"}, {"body": "\u54e6 \u5929\u554a \u6211\u7cdf\u7cd5\u7684\u82f1\u8bed", "d": "10/2015"}, {"body": "\u6211\u5f53\u524d\u6b63\u4f7f\u7528", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "bind called directive first bound element", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "\u53ef\u4ee5\u5728 \u91cc\u9762\u7b2c\u4e00\u6b21\u8c03\u7528\u8bbe\u7f6e\u4e00\u4e2a flag \u4e3a true \u5c31\u4e0d\u518d\u66f4\u65b0", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "skupr next time create fix submit pr smile sure contribute right branch", "d": "10/2015"}, {"body": "extra comment node turning component fragment instance remove comment node ensure component template single root node", "d": "10/2015"}, {"body": "yeah kind namespaceing would really beneficial result cleaner code example personal project moment ui describing variables live yet ui manipulator live prefixed makes imo fact consistent yet typo prone code eg", "d": "10/2015"}, {"body": "nt see point style preferences makes different say methods invoked instance nt nested", "d": "10/2015"}, {"body": "mainly style preference yes another use case convenient pass group methods child component vue validation component used show serverside validation errors used component conjunction mixin watereddown version component inherit true props name property type string required true mixin js data return servervalidation methods isinvalid property hasown thisservervalidation property return true isvalid property return thisisinvalid property getvalidationerror property thisisvalid property return null page short component mixin work hand hand since vue supported component able utilize validation methods directly parent component fast forward pass methods directly child component passing separately input field would severely clutter template thought grouping single object passing would make sense might approaching wrong happy hear alternate solution regardless still think allowing methods grouped good idea like nesting shorter method names smile", "d": "10/2015"}, {"body": "currently easy add use transition hook", "d": "10/2015"}, {"body": "thanks lot", "d": "10/2015"}, {"body": "nt abuse use components want reuse templates use partials", "d": "10/2015"}, {"body": "according spec nested tags allowed see", "d": "10/2015"}, {"body": "longer necessary longer creates anonymous child instances", "d": "10/2015"}, {"body": "yes pass props", "d": "10/2015"}, {"body": "likely passing prop correctly note need explicitly pass props using custom component ca nt help without looking actual code closing since unlikely bug", "d": "10/2015"}, {"body": "thanks quick response distilled code bunch share seems pretty simple straightforward right could definitely issue end using directive anywhere component nt think related component props section calling component thanks taking look", "d": "10/2015"}, {"body": "bryannielsen take guess say trying pass literal string prop syntax would without", "d": "10/2015"}, {"body": "treat expression try evaluate", "d": "10/2015"}, {"body": "ah absolutely right simplesmiler got overzealous converting props upgrade thanks help thanks awesome framework", "d": "10/2015"}, {"body": "passing props", "d": "10/2015"}, {"body": "ahhhh thanks", "d": "10/2015"}, {"body": "chrome removes empty tags inside options vue related", "d": "10/2015"}, {"body": "ok empty nt oct evan notifications githubcom wrote chrome removes empty tags inside options vue related reply email directly view github", "d": "10/2015"}, {"body": "ah sorry assume chrome removes tag vue starts clear might worth comment docs somewhere probably one fall trap oct kai duebbert kai mapsunitedcom wrote ok empty nt oct evan notifications githubcom wrote chrome removes empty tags inside options vue related reply email directly view github", "d": "10/2015"}, {"body": "need provide reproduction showing code causing error", "d": "10/2015"}, {"body": "hi ran updating code using older version vuerouter problem improper vlink syntax correct syntax error message could improved though", "d": "10/2015"}, {"body": "tries access key undefined access data html format would look something like", "d": "10/2015"}, {"body": "invalid key names html", "d": "10/2015"}, {"body": "wow even works arrays", "d": "10/2015"}, {"body": "hmm magic", "d": "10/2015"}, {"body": "make repro", "d": "10/2015"}, {"body": "one libraries nt cdn version make fiddle work", "d": "10/2015"}, {"body": "turns changing order complicated thought like workaround children still destroyed refs kept seems address specific issue although sure valid use case want child alive leave hook", "d": "10/2015"}, {"body": "nt quite address issue accidentally left line editing code around lot yesterday updated file parent animateout supposed something like parent supposed call method child tell animate child nt receive transition events parent animates leave happens transition calls parent parent would call child reference sufficient since methods called child el nt referenceable anymore", "d": "10/2015"}, {"body": "considered type subanimation route hook instead transition", "d": "10/2015"}, {"body": "works perfectly thank", "d": "10/2015"}, {"body": "warning relaxed alpha version using old check fixed soon", "d": "10/2015"}, {"body": "excellent good hear correct assuming means attribute binding still behave expected", "d": "10/2015"}, {"body": "yes", "d": "10/2015"}, {"body": "update write like jade want begin colon like", "d": "10/2015"}, {"body": "personnaly use everywhere writing jade never bug webpack repro", "d": "10/2015"}, {"body": "think proper jade syntax separate attributes commas never issue make sure upgrade everything webpack vueloader latest version", "d": "10/2015"}, {"body": "gave shot mostly works caveat nt update whilst select box still open", "d": "10/2015"}, {"body": "squirmy thank think found reason nt initial property wo nt work properly found another problem changed object nt fired event", "d": "10/2015"}, {"body": "event fires user input nt fire set value javascript", "d": "10/2015"}, {"body": "problems actually surprised disabled thing worked set selected object try instead problem setting object nt exist select", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "unfortunately would somewhat interfere vue compilation process simple change future new vue devtool allow inspect directives bound element", "d": "10/2015"}, {"body": "fixed also introduces api custom directives easily handle params", "d": "10/2015"}, {"body": "believe missing", "d": "10/2015"}, {"body": "oh yes oo looking wrong place edit thank", "d": "10/2015"}, {"body": "fiddle used dev branch dev version guess want old syntax deprecation warnings use migration branch working rc fiddle", "d": "10/2015"}, {"body": "thanks mainly concerned anyone looking broken example doc", "d": "10/2015"}, {"body": "fixed thanks", "d": "10/2015"}, {"body": "\u8d34\u4ee3\u7801", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "see red note section passing object reference ensures child sets wo nt affect parent want completely fresh object need make deep clone", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "exactly happen modifying array reference", "d": "10/2015"}, {"body": "change keep vue model", "d": "10/2015"}, {"body": "need deep clone array", "d": "10/2015"}, {"body": "name myname name myname mon oct simon notifications githubcom wrote vueloader created custom component use html file accesstoken name moduleexports props token name pass token long string prop component seems vue handle large strings output token empty short string got problems name prop shown myname reply email directly view github", "d": "10/2015"}, {"body": "typo reason updated post", "d": "10/2015"}, {"body": "sorry replied old issue email sent github", "d": "10/2015"}, {"body": "isssue kind solved original code use prop name case could nt set property like example work", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "found problem yesterday sure intended", "d": "10/2015"}, {"body": "design", "d": "10/2015"}, {"body": "thanks quick response", "d": "10/2015"}, {"body": "added", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "html", "d": "10/2015"}, {"body": "running similar issue needing combine array object shorthands current solution something like would make sense allow multiple vbind class statements", "d": "10/2015"}, {"body": "rpkilby ca nt two attributes name use case complex enough use computed property", "d": "10/2015"}, {"body": "wanted also fri oct alexandrebonaventure lt notifications githubcom wrote way assign value multiples modifiers von directive von focus reseterrordisplay input reseterrordisplay von focus input reseterrordisplay thanks reply email directly view github", "d": "10/2015"}, {"body": "much complexity almost benefit imo", "d": "10/2015"}, {"body": "like arrilot said complex could also use shorthand way readable imo", "d": "10/2015"}, {"body": "agree arrilot handler different events pretty rare use case", "d": "10/2015"}, {"body": "even use case issue irrelevant able enter input first need focus input field already called want reset error display might better watch model check valid reset errors think scenario could useful", "d": "10/2015"}, {"body": "marcvdm may something etc still hmm thin definitely useful enough modify syntax", "d": "10/2015"}, {"body": "karevn combination mouseover obsolete use", "d": "10/2015"}, {"body": "may something mouseover mousemove keyup keydown needed many times uncommon since alternative fri oct pm marc van der meulen lt notifications githubcom wrote karevn input keyup keydown combination mouseover obsolete use mousemove reply email directly view github", "d": "10/2015"}, {"body": "thanks suggestion however opinion useful enough warrant syntax adjustment adjust syntax enables something easily achieved case typing convenience addition nt play well shorthand none look right explicit", "d": "10/2015"}, {"body": "well easier thought magic happens", "d": "10/2015"}, {"body": "suppose display templates vue initialised put templates tags wrap invisible div actually think problem addressed vue question specific app code design", "d": "10/2015"}, {"body": "karevn ah thanks idea choose wrap invisible div event listening display yes bug need thought fellows", "d": "10/2015"}, {"body": "ghprod nt need display mount vue instance visible element initialisation templates stay invisible", "d": "10/2015"}, {"body": "karevn ah yappp thanks lot closed", "d": "10/2015"}, {"body": "ghprod use vcloak directive also please post questions forum issues", "d": "10/2015"}, {"body": "oevgeny ah bad didnt notice forum sorry thanks hint", "d": "10/2015"}, {"body": "oevgeny ghprod talks moment vue launched directives effect", "d": "10/2015"}, {"body": "karevn yes style display none works perfectly", "d": "10/2015"}, {"body": "animatedcss add element thanks", "d": "10/2015"}, {"body": "ghprod wow good know", "d": "10/2015"}, {"body": "oevgeny ghprod talks moment vue launched directives effect nt need vue initialized correct way hide vue templates compiled", "d": "10/2015"}, {"body": "fiddling around jsfiddle got following error result filter bound current vm ca nt way bind better ways solve problem facing", "d": "10/2015"}, {"body": "marcvdm exactly worked around app still workaround solution btw warning show fiddle replaced binding expression generates warning", "d": "10/2015"}, {"body": "hmm think watcher created deep option fix instead shallow watcher right", "d": "10/2015"}, {"body": "use case design going work deep nothing twoway bindings filtered copy nt really make sense anticipated cases like usage somehow bypassed warning check give warning scenarios", "d": "10/2015"}, {"body": "may still kind solution think possible deepwatch changes filtering result run write filter reassign initial value", "d": "10/2015"}, {"body": "nt see reasons code complexity work think next way initial object passed filter build new one array iterated filter results changed run write filter rebuild initial value always possible appspecific detail streamlined version marcvdm workaround imo", "d": "10/2015"}, {"body": "yes marignally useful feature involves lot code complexity maybe requires rewriting parts filters work although theoretically work given limited time nt see ever become priority foreseeable future free investigate submit pr feel worth effort", "d": "10/2015"}, {"body": "okay look solution thing \u043e\u043a\u0442 \u0433 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c evan notifications githubcom \u043d\u0430\u043f\u0438\u0441\u0430\u043b yes marignally useful feature involves lot code complexity maybe requires rewriting parts filters work although theoretically work given limited time nt see ever become priority foreseeable future free investigate submit pr feel worth effort reply email directly view github", "d": "10/2015"}, {"body": "ije code example would helpful", "d": "10/2015"}, {"body": "sorry many lines project paste keypart dynamic component template look like parent vm config look like look like", "d": "10/2015"}, {"body": "sorry forget note parent vm also dynamic component", "d": "10/2015"}, {"body": "karevn thank", "d": "10/2015"}, {"body": "screen shot console warn messages", "d": "10/2015"}, {"body": "ije design behavior new versions need default values props pass prop config", "d": "10/2015"}, {"body": "declaring props enough need duplicate", "d": "10/2015"}, {"body": "looks like props properly deduped merged however seems bad idea duplicate props multiple mixins nt think mixin mechanism problem rather use mixins imo use multiple mixins serve distinct purpose two mixins overlapping responsibilities probably need rethink design", "d": "10/2015"}, {"body": "thanks duplicated props actually bad idea think remove dep require mixins component", "d": "10/2015"}, {"body": "curious imagine mixin prop need redefine prop default value component", "d": "10/2015"}, {"body": "oevgeny probably work like described docs sure props thought", "d": "10/2015"}, {"body": "oevgeny sounds like bad idea ideally nt want sub fields option merged multiple sources especially object like prop makes code hard reason hooks hand makes sense", "d": "10/2015"}, {"body": "azamatsharapov thank also think something wrong approach", "d": "10/2015"}, {"body": "bug report \u548c feature", "d": "10/2015"}, {"body": "use tries bind variable given want send hardcode string try using without colon like fixed working fiddle docs reference", "d": "10/2015"}, {"body": "thanks breakdown correct value seems getting passed get logs warning ca nt resolve component item nt everything working intended right", "d": "10/2015"}, {"body": "binding binding variables intended send literal string bind literal string using count quotes part string get notice quotes like want send literal string without bind like hope helps wrong please correct", "d": "10/2015"}, {"body": "ah right failure resolve warning indeed nt usually wrap quotes around missing component thought vbind syntax binding expressions necessarily variables since moustache syntax deprecated else would something like imagine supposed work", "d": "10/2015"}, {"body": "strip quotes seems reproducible", "d": "10/2015"}, {"body": "questions general discussion better posted forums issue list bug feature requests cutting references deep copy object simplest form", "d": "10/2015"}, {"body": "first issue set delimiter something ambiguous inside valid javascript expressions makes difficult differentiate interpolation tag vs object literal users vue parser recommend using something obvious eg code update section invalid syntax directives expect single valid javascript expression", "d": "10/2015"}, {"body": "okay", "d": "10/2015"}, {"body": "may suggest using forums bug reporting", "d": "10/2015"}, {"body": "piece already compiled dom mounted need reomove old dom append new one", "d": "10/2015"}, {"body": "\u8fd9\u662f ie", "d": "10/2015"}, {"body": "read guide send props template", "d": "10/2015"}, {"body": "apologies looking last half hour", "d": "10/2015"}, {"body": "see working example", "d": "10/2015"}, {"body": "limitation prop syntax longer issue longer use mustaches indicate expressions props since escape slash going wontfix", "d": "10/2015"}, {"body": "good looking forward", "d": "10/2015"}, {"body": "working intended far tell initially passing items string indeed wrong type give parent initial value empty array works properly", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "\u662f\u8fd9\u6837\u7684", "d": "10/2015"}, {"body": "different scoping rules deprecated use nonminified version fiddles see warnings", "d": "10/2015"}, {"body": "replaced new api use build migration warnings also see latest doc rcvuejsorg", "d": "10/2015"}, {"body": "mean broken seems replacing default header correctly", "d": "10/2015"}, {"body": "bad must tired yes worked realized later side note unrelated comment nt looked vue andor web development today reason home finding vue much simpler awesome von applied want handle events click lost focus button", "d": "10/2015"}, {"body": "please post questions forumvuejsorg instead also note syntax different", "d": "10/2015"}, {"body": "transition", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "compat issue vuerouter beta fixed next release router", "d": "10/2015"}, {"body": "thanks reply check today curiosity happened made break testing seemed like route components properly registered root component properly registered aswell super frustrating bug happens clue causes", "d": "10/2015"}, {"body": "core going internal api changes final release stable type breakage longer happen", "d": "10/2015"}, {"body": "hey tested version issue idea", "d": "10/2015"}, {"body": "trying access components nested components beta strict mode default use alpha releases upgrading get deprecation warnings mon oct kfirba notifications githubcom wrote hey tested version issue idea reply email directly view github", "d": "10/2015"}, {"body": "sure mean define components root vue instance router called component file define routes components access every component ancestors defined case access components defines bootstrap file code js import requirements using browserify windowvue require vue windowvuerouter require vuerouter insert vuerouter vueresource vue vueuse vuerouter vueuse require vueresource import actual routes aliases import configrouter routes create router object set options const router new vuerouter inject routes vuerouter object configrouter router bootstrap app const app vueextend require appjs routerstart app app appjs js moduleexports routesjs js moduleexports component defined use code worked fails returns error components defined btw mean beta release strict mode", "d": "10/2015"}, {"body": "longer allows child components access ancestor assets either register globally explicitly depend child components mon oct pm kfirba notifications githubcom wrote sure mean define components root vue instance router called component routesjs file define routes components access every component ancestors defined case access components appjs defines bootstrap file code import requirements using browserifywindowvue require vue windowvuerouter require vuerouter insert vuerouter vueresource vue vueuse vuerouter vueuse require vueresource import actual routes aliases import configrouter routes create router object set options itconst router new vuerouter inject routes vuerouter object configrouter router bootstrap appconst app vueextend require appjs routerstart app app appjs moduleexports template require apphtml data function return user null token null authenticated false business false admin false components navcomponent require componentsnavjs footercomponent require componentsfooterjs routesjs moduleexports configrouter function router home component navcomponent footercomponent defined use code worked fails returns error components defined btw mean beta release strict mode reply email directly view github", "d": "10/2015"}, {"body": "expected mutate user object replacing", "d": "10/2015"}, {"body": "create script js shell creates branch add new compiled code push branch like ghpages give look", "d": "10/2015"}, {"body": "posva know auto compile hard automatically run rebase revert something like nt think elegant maintain one branch best approach templateurl", "d": "10/2015"}, {"body": "want one branch keep folder release honestly branch release force pushing nt issue furthermore branch follows different path wo nt deal kind issues", "d": "10/2015"}, {"body": "think dir another branch nt like trying something ajax may works way", "d": "10/2015"}, {"body": "imho complicating things make messier confused master branch another ghpages branch release hosted github messy lot people using technique", "d": "10/2015"}, {"body": "um believe dist part git repository really hard accept", "d": "10/2015"}, {"body": "talking ghpages want host page github deploy content somehow common way separated ghpages branch", "d": "10/2015"}, {"body": "two branches nt need dist folder inside master branch", "d": "10/2015"}, {"body": "plan support somewhat simulate using async components", "d": "10/2015"}, {"body": "know two ways neither like", "d": "10/2015"}, {"body": "afraid implement sun oct pm kane blueriver notifications githubcom wrote know two ways neither like reply email directly view github", "d": "10/2015"}, {"body": "got thanks posva", "d": "10/2015"}, {"body": "another food thought would think allowing template function returns new dom elements nt need cloned", "d": "10/2015"}, {"body": "seems benefits approach inline syntax highlighting jsx possible compile jsx string instead", "d": "10/2015"}, {"body": "use things like return string course lose time creating nodes transform string parsed back dom nodes figured since take string create dom nodes via parsing functions nodes directly supplied would skip step thus gain time short template gets assigned nodes compiler would clone missing something way compiler working", "d": "10/2015"}, {"body": "actually template parser gets direct node simply clones childnodes mon oct christophe eymard notifications githubcom wrote use things like outerhtml return string course lose time creating nodes transform string parsed back dom nodes figured since take string create dom nodes via parsing functions nodes directly supplied template would skip step thus gain time short template gets assigned nodes compiler would clone missing something way compiler working reply email directly view github", "d": "10/2015"}, {"body": "yes enclosed everything far supposed nodes present dom get id would much hassle change behaviour textvuetemplate attribute nt recall mime use clone childnodes otherwise clone everything reason limited cloning childnodes", "d": "10/2015"}, {"body": "keeping behavior consistent uses inner content excluding outer node assume using babel plugin transpiling would something like work", "d": "10/2015"}, {"body": "ah actually quite nice think close issue anyway realize requestsuggestion probably vue scope thank time", "d": "10/2015"}, {"body": "thanks rc site previewing docs examples updated moved officially vuejsorg", "d": "10/2015"}, {"body": "never designed work situations like say wontfix", "d": "10/2015"}, {"body": "please post questions forums yes change delimiters", "d": "10/2015"}, {"body": "sorry thanks quick response looked documentation config options nt able find exactly looking thanks", "d": "10/2015"}, {"body": "honest highly doubt accuracy methodology chrome timeline profiling memory snapshots show inconsistent results using timeline profiler record node counts shows node counts increasing however try identify leak comparing memory snapshots dom leaks found author drool actually opened issue long time ago see comment also see paul irish comment basically saying forced garbage sweeps may always clean nodes fact already detached way track node leaks using memory snapshots comparison todomvc app using latest beta snapshots diffs clean nothing even look reasonable explanation snapshots force cleaner gc profiling mechanisms beyond control someone tells vue dom leaks testing using profiling mechanism tell leaks tell leaks coming", "d": "10/2015"}, {"body": "thanks clarifying", "d": "10/2015"}, {"body": "nt use hook", "d": "10/2015"}, {"body": "alexandrebonaventure called component insertion need onetime event dom insertion dom related initial jobs", "d": "10/2015"}, {"body": "need sort juggling timeline domdependent create hook hook", "d": "10/2015"}, {"body": "example nt clear added key parts part gsap animation library surely domdependent talking gsap example use case jquery plugins many libraries domdependent ca nt initiate hook elements time even compiled hook libraries wo nt work elements nt inserted dom tree", "d": "10/2015"}, {"body": "still possible use though", "d": "10/2015"}, {"body": "ok acceptable solution", "d": "10/2015"}, {"body": "use development build see warning tells nt", "d": "10/2015"}, {"body": "replaced slightly different semantics see", "d": "10/2015"}, {"body": "simplesmiler thank", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "nt mean required mean fri oct pm christopher case lt notifications githubcom wrote vue creating component twoway binding specified required warning still thrown example var component vuecomponent props show type boolean default false twoway true prints warning vue warn prop show expects twoway binding type reply email directly view github", "d": "10/2015"}, {"body": "could fixed reliable visibility check determining css transitions see commit", "d": "10/2015"}, {"body": "move vuerouter repo instead also note version using ideally provide repro", "d": "10/2015"}, {"body": "really necessary whenever object passed vue instance set already reactive object also becomes reactive", "d": "10/2015"}, {"body": "create communication storage like let store new vue data path data true let view new vue data storepathtosomedataits watch function consolelog update must use watch code think first example see pretty really", "d": "10/2015"}, {"body": "astaroverov please read nt think understand reactivity works vue", "d": "10/2015"}, {"body": "thx helped", "d": "10/2015"}, {"body": "actually happening tables", "d": "10/2015"}, {"body": "hmm similar custom elements inside tables allow certain elements inside guess need implement something like", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "turns even implement still quite awkward use slots table elements parent template directly render table elements gets rendered basically table elements appear naked ignored content transclusion even starts suggestion always transclude nontable elements use inside instead", "d": "10/2015"}, {"body": "hmm interesting impossible insert headers columns fly", "d": "10/2015"}, {"body": "think looking vpre updated example", "d": "10/2015"}, {"body": "ah yes indeed thank", "d": "10/2015"}, {"body": "problem", "d": "10/2015"}, {"body": "provide reproduction", "d": "10/2015"}, {"body": "inactive", "d": "10/2015"}, {"body": "think need use development version migration also turn debug mode vue show warnings", "d": "10/2015"}, {"body": "oevgeny thanks work", "d": "10/2015"}, {"body": "attribute interpolation mustaches inside attributes works allowed inside native attributes partial vuespecific attribute must use reactive binding", "d": "10/2015"}, {"body": "yeah understand issues section correct", "d": "10/2015"}, {"body": "wrong shorthands", "d": "10/2015"}, {"body": "sorry clear shorthand syntax work getattribute", "d": "10/2015"}, {"body": "first checks static nt exist checks dynamic one", "d": "10/2015"}, {"body": "dynamic one expects expression evaluates partial id static one expects literal partial id", "d": "10/2015"}, {"body": "ask forum", "d": "10/2015"}, {"body": "thanks reporting vue using check browser returns looks like bug chrome valid elements return unknown instead filed bug chrome ignore warning also warning show use production build", "d": "10/2015"}, {"body": "chrome team considers wontfix moment added extra rule exclude affected elements check", "d": "10/2015"}, {"body": "oh chrome issue bad thanks patch headsup production build nt notice", "d": "10/2015"}, {"body": "vshow works dom elements replacing ca nt use display none etc try vif instead", "d": "10/2015"}, {"body": "replacing dom works case", "d": "10/2015"}, {"body": "component contains another component makes parent component fragment instance two components share root node general avoid components contain another component would first place", "d": "10/2015"}, {"body": "several object types displayed similar way inner component handles presentation several outer ones contain business logic specific particular type object pass data inner component instance", "d": "10/2015"}, {"body": "add warning case future release simple solution wrap component outer element html use instead", "d": "10/2015"}, {"body": "specific issue please nt understand expecting", "d": "10/2015"}, {"body": "expect component created specific id id change data model component iterate objects id property achieve using trackby id even without trackby components never reused new objects collection iterating string array different looks like bug", "d": "10/2015"}, {"body": "primitive values always reuse instances like default always use objects expect positiontracking full rerendering", "d": "10/2015"}, {"body": "makes sense keep object component bound trackby id use full rerendering objects also reasonable keep id bound component use full rerendering use case following iterate ids objects want load object db created instead forced watch id reinitialize component whenever id changes initialization logic contain multiple steps component might appear unexpected intermediate states", "d": "10/2015"}, {"body": "primitive values unique identities array contains two duplicate primitive values reliable way know component correspond also iterating ids load object inside components sounds inefficient one http request every item better way approach fetch objects one request first iterate actual data", "d": "10/2015"}, {"body": "nt thought duplicates array objects also object several positions fundamentally different primitives already handle way duplicate primitives may occur often duplicate objects scenarios case understand defaults flag like trackbyidentity iterate objects efficiency also issue since cache load related objects every component wonder put loading logic component initialization including loading root object", "d": "10/2015"}, {"body": "would actually warn array contains duplicate objects agree using default behavior based value types confusing use caching mechanism raise warning prompting duplicate values found stuck still id proper data reload", "d": "10/2015"}, {"body": "like anyway much straightforward use push items array try make interface datadriven whenever possible avoid relying imperative adhoc manipulations", "d": "10/2015"}, {"body": "use vue google maps api infowindow concept window appears click marker map windows dynamically added dom google maps api informs us window help domready event want attach vue component newly appeared window use inline template way template provided inside component would meet glitch tried variants get rid glitch inline template solution nt see option put regards", "d": "10/2015"}, {"body": "need could much simpler", "d": "10/2015"}, {"body": "please close issue respect work much bug feature solution cover topic aware without inline templates works perfectly said need use inline template otherwise glitch rendering video google maps api dictates rules places html dom apply template afterwards see text falling infowindow rendering use methods framework documentation nt work want help create framework better tried several variants narrowed issue came reproduction issue simply closed completely understand ca nt require anything framework opensource expect real issue would investigated free time please reopen issue", "d": "10/2015"}, {"body": "reproduction misusing option return selector option must return real element returning selector always selects first element already compiled bug framework", "d": "10/2015"}, {"body": "thanks makes sense case last question somehow pass variable object would visible inside method tried yet available call somehow put dynamic inside function would allow something like nt rendering works fine reason change objects done inside newly created objects affect application nt managed reproduce short regards", "d": "10/2015"}, {"body": "yeah aware vue longer modify", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "vprimachenko definitely recommend putting pr", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "pr would proceed contribution guidelines states checkout topic branch dev merge back dev yet lives pullrequest github contain single branch also nt feel comfortable making public fork submit line patch abandon later", "d": "10/2015"}, {"body": "vprimachenko please pr beta branch handle backporting alpha branch pr totally fine people submit fixes time feel comfortable fork anything way like nobody gon na judge fork", "d": "10/2015"}, {"body": "merged", "d": "10/2015"}, {"body": "easy implement although curious particular use case", "d": "10/2015"}, {"body": "came across trying migrate since separated ca nt implement logic function seems default values flexible case components get default values local cache cache service available vm", "d": "10/2015"}, {"body": "see thanks explanation", "d": "10/2015"}, {"body": "thanks lot evan", "d": "10/2015"}, {"body": "hmm found problem larger knows parsers like char attribute names", "d": "10/2015"}, {"body": "karevn means crappy parser valid html attribute char", "d": "10/2015"}, {"body": "constructive", "d": "10/2015"}, {"body": "karevn current syntax correctly parsed supported browser commonly used nodejs parsers like parser implemented correctly according html spec able handle syntax unfortunate case happens notsostandardcompliant parser toolchain fixed nt see reason change vue syntax someone could happen write non standardcompliant html parser", "d": "10/2015"}, {"body": "tell anything changing syntax least would pragmatic become defensive think comprehensive testing surrounding ecosystem make sure vue works fine tools", "d": "10/2015"}, {"body": "apologize sound defensive opening issue implies think something done vue core address problem nothing vue core opened issue vueloader directly htmlloader instead thu oct pm nikolay karev notifications githubcom wrote tell anything changing syntax least would pragmatic become defensive think comprehensive testing surrounding ecosystem make sure vue works fine tools reply email directly view github", "d": "10/2015"}, {"body": "see figured fixed problem another project code actually still think worths retest vue surrounding frameworks webpack browserify etc release preventive action", "d": "10/2015"}, {"body": "sure point beta thu oct pm nikolay karev notifications githubcom wrote see figured fixed problem another project code actually still think worths retest vue surrounding frameworks webpack browserify etc release preventive action reply email directly view github", "d": "10/2015"}, {"body": "please provide reproduction", "d": "10/2015"}, {"body": "sorry new fiddle maybe wrong sorry", "d": "10/2015"}, {"body": "listen event created hook instead ready hook", "d": "10/2015"}, {"body": "created hook nt catch either", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "dennisver fixes issue thank", "d": "10/2015"}, {"body": "stumble upon problem happens subchild repro bug return true instances works", "d": "10/2015"}, {"body": "use trigger events siblings", "d": "10/2015"}, {"body": "thelinuxlich thougt done mutual parent handles event prop sibling handle change prop interested ways", "d": "10/2015"}, {"body": "sibling dispatches parent gets message broadcasts another message another sibling gets much pingpong nt think", "d": "10/2015"}, {"body": "thelinuxlich nt thinking another message prop sibling thought props communicating events made communicate please confirm", "d": "10/2015"}, {"body": "posva seems recommendation section wiki binding syntax reference von also listen custom vue events emitted via vm emit used child component idea props events constitute public api component props passing data events handling actions", "d": "10/2015"}, {"body": "yeah read smile", "d": "10/2015"}, {"body": "turns fixed beta forgot backport alpha fixed", "d": "10/2015"}, {"body": "plans adding utility method something similar access said clean data eg vmdata vm datadata vmnestedobjectdata etc maybe note section api documentation", "d": "10/2015"}, {"body": "furey think simple enough need extra api method feel free send pr docs", "d": "10/2015"}, {"body": "sure proseterminology done", "d": "10/2015"}, {"body": "keep mind case date turns string jsonparse jsonstringify new date date string utc cases would better use deep cloning use custom replacer", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "would make sense always call certain events eg particular legit use cases nt want preventdefault three cases", "d": "10/2015"}, {"body": "guess makes sense element von directive", "d": "10/2015"}, {"body": "skyrpex course talking context behavior", "d": "10/2015"}, {"body": "thing consider behavior click modifier keys ctrl shift andor otherthanleft mouse button nothing infuriating app ignoring middle click open link new tab", "d": "10/2015"}, {"body": "eg click easily imagine wanting multiple things happen click like closing ancestor components thu oct pm denis karabaza notifications githubcom wrote thing consider behavior click modifier keys ctrl shift andor otherthanleft mouse button nothing infuriating app ignoring middle click open link new tab reply email directly view github", "d": "10/2015"}, {"body": "maybe special option like ko", "d": "10/2015"}, {"body": "think make explicit approach applied match developer expectations may yet another attribute name modifier like", "d": "10/2015"}, {"body": "hmm nice suggestion attribute modifier think call automatically want opposite", "d": "10/2015"}, {"body": "thelinuxlich looks good problem events like click bubble default events like mouseover bubble cases defaults different different event types look good", "d": "10/2015"}, {"body": "defaults different different event types would horrible thu oct pm nikolay karev notifications githubcom wrote thelinuxlich looks good problem events like click bubble default events like mouseover bubble cases defaults different different event types look good reply email directly view github", "d": "10/2015"}, {"body": "agreed keep original behavior want", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "good options", "d": "10/2015"}, {"body": "options proposed karevn look better opinion remind functions first time ever heard laughing funny name btw", "d": "10/2015"}, {"body": "event bubbling event capturing event propagation different things", "d": "10/2015"}, {"body": "rastishka bubble propagation thing difference vs though like modifier approach fact thinking exactly karevn proposed went sleep yesterday seems rare specific use case think fine leave javascript land", "d": "10/2015"}, {"body": "like idea always preventing default unless specified time adding click handler element default behavior desired html click click click", "d": "10/2015"}, {"body": "anyone know angular definitely prevent events submit comes mind", "d": "10/2015"}, {"body": "josephsilber looks like submit one ng docs ngsubmit additionally prevents default action form means sending request server reloading current page form contain action dataaction xaction attributes", "d": "10/2015"}, {"body": "youngsteveo seems harder remember think like without modifier behavior native browser behavior means called means called seems much simpler conceptually", "d": "10/2015"}, {"body": "landed alphabeta branches modifiers used together", "d": "10/2015"}, {"body": "syntax working angular way cases example", "d": "10/2015"}, {"body": "nervgh use", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "\u4e0d\u597d\u610f\u601d \u6211\u60f3\u95ee\u4e0b \u5982\u4f55\u7ed1\u5b9a\u591a\u79cd\u4e8b\u4ef6 \u6211\u53ea\u770b\u5230\u5355\u4e2a\u7684\u4f8b\u5b50 \u5982", "d": "10/2015"}, {"body": "\u54e6 \u6211\u770b\u5230\u4e86\u8fd9\u4e2a \u662f\u7528\u9017\u53f7\u9694\u5f00\u5417", "d": "10/2015"}, {"body": "\u6211\u53d1\u73b0\u8981\u8fd9\u6837\u624d\u4e0d\u4f1a\u62a5\u9519 \u4f46\u6587\u6863\u91cc\u6ca1\u6709\u63d0\u5440", "d": "10/2015"}, {"body": "\u5728\u4e0b\u4f7f\u7528 webpack \u6253\u5305\u751f\u6210 \u6811\u72b6\u89c6\u56fe \u53ea\u751f\u6210\u4e86\u7b2c\u4e00\u7ea7\u8282\u70b9 componentstreeshowindexcoffee componentstreeshowtemplatehtml html nodeareaname", "d": "10/2015"}, {"body": "componentstreeshowchildindexcoffee componentstreeshowchildtemplatehtml html nodeareaname componentstreeshowindexcoffee componentstreeshowtemplatehtml html nodeareaname", "d": "10/2015"}, {"body": "\u9012\u5f52\u8c03\u7528\u975e\u5168\u5c40\u6ce8\u518c\u7684\u7ec4\u4ef6\u9700\u8981\u7ed9\u7ec4\u4ef6\u4e00\u4e2a", "d": "10/2015"}, {"body": "componentstreeshowindexcoffee componentstreeshowtemplatehtml html nodename \u4f20\u5165\u7ed3\u6784\u5316\u6570\u636e\u6765\u4f7f\u7528 html", "d": "10/2015"}, {"body": "componentstreeshowindexcoffee", "d": "10/2015"}, {"body": "oh damn removed veryveryveryvery useful feature know already possible almost thing option project forms leaning removed behavior ca nt move", "d": "10/2015"}, {"body": "like go use jquery honestly", "d": "10/2015"}, {"body": "fullfs really simple revert remove", "d": "10/2015"}, {"body": "wow thanks providently always would like option possible", "d": "10/2015"}, {"body": "causes problems templating engines forcing use plain html possible keep old vel item syntax backup", "d": "10/2015"}, {"body": "jhaesus template engine", "d": "10/2015"}, {"body": "slim found something works like longer use regular syntax render html vel item suppose", "d": "10/2015"}, {"body": "ing facilities used simplified away gone issue properly solved using change also makes using filter logical filters receive value referenced directive user return specifically formatted values filter promotes filter reuse", "d": "10/2015"}, {"body": "actually bit complicated involves compatibility yes work proposed official", "d": "10/2015"}, {"body": "syntax ca nt visit property obj objlist following example options value equal node text wish options value equal objvalue", "d": "10/2015"}, {"body": "ije issue bit data syntax instead", "d": "10/2015"}, {"body": "problem ie every mustache tag problem sure provide reproductioni ues vtext instead mustache expression think best way vue version", "d": "10/2015"}, {"body": "kennywho nonstandard use laughing", "d": "10/2015"}, {"body": "sake ie change tag", "d": "10/2015"}, {"body": "happening", "d": "10/2015"}, {"body": "josephsilber official release likely week next", "d": "10/2015"}, {"body": "cdn", "d": "10/2015"}, {"body": "process actually move issues create another repository", "d": "10/2015"}, {"body": "matteocontrini move", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "clap", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "sparkles", "d": "10/2015"}, {"body": "doc rcvuejsorg syntax support", "d": "10/2015"}, {"body": "furybean supported use", "d": "10/2015"}, {"body": "simplesmiler thanks", "d": "10/2015"}, {"body": "ran problem trick nt solve using version managed get working right way", "d": "10/2015"}, {"body": "javascript vuecomponent insertcfparams template insertcfparamstemplate data function return params result loading false methods submit function using works fine vue problem changed vue changed error console says function workaround using vue", "d": "10/2015"}, {"body": "please read docs carefully objects deprecated since methods", "d": "10/2015"}, {"body": "thanks man oevgeny", "d": "10/2015"}, {"body": "hey thelinuxlich able make work basically switched using systemjs builder started building self executing bundles vue something similar js var template require templatehtml text var component vueextend template template vuecomponent app component new vue el app let systemjs builder cli transpile javascript", "d": "10/2015"}, {"body": "moved webpack", "d": "10/2015"}, {"body": "great discussion heard vuejs today quite fond typescript like many seems like none implementations provide type safety template string something recently added ts tsxjsx support might suggest something like following ts class person public classname myclass constructor public first string public last string public age number thisclassname someotherclass function render p person type safety refactoring methods vars wo nt silently break return data member variables methods var data new person john doe suggested var demo new vue el demo data data render render seem plausible fail use vuejs binding since assigned value property name", "d": "10/2015"}, {"title": "objectprototype properties conflict", "body": "run issue today firefox added support new function objectprototype unfortunate use watch name attribute model problem caused model constructor line fact lodash defaults implementation sees want override one found sure issue backbone lodash firefox one thing sure avoid today magic properties like etc really anticipate word forbiden future nt like idea updating app future whenever one favorite words get banned", "num": "3842", "d": "10/2015"}, {"title": "", "body": "features x use x add bug fixes x model still collection regression x model id regression x returning regression x friends regression maybe deopt underscore methods containing add add event feedback conflicts cc paulfalgout smile", "num": "3839", "d": "10/2015"}, {"title": "backbone object duplicated imported", "body": "backbone imported file new copy created time consider files routerjs javascript import backbone backbone backbone export default backbonerouterextend stuff mainjs javascript import backbone backbone import router router backbone object new router trigger router router using different copy backbone backbonehistorystart make test another library like jquery always object never duplicated looked source seeing causing backbone get duplicated time may try later though figure cause make pr assuming would wanted nt see would intentionally duplicated", "num": "3838", "d": "10/2015"}, {"title": "backbone partial view rendering cases", "body": "relatively new backbone running problem using backbone dustjs template looks something like gt appincresponsemessage button get user details partial eq key datasuccess value true success eq js looks like function called event occurs post returns successfully indexdust triggers event post event backend thislistentoonce thismodel sync thisprimaryviewsuccess render whole view thislistentoonce thismodel error thisprimaryviewerror thismodelsave data x responsevieweventtrigger function event button click triggers event post event backend thislistentoonce thisresponsemessageviewmodel sync thisresponseviewsuccess render partial view responsemessagedust thislistentoonce thisresponsemessageviewmodel error thisprimaryviewerror thisresponsemessageviewmodelsave data x primaryviewsuccess function model response thismodelset data responsedata thisrender responseviewsuccess function model response thisresponsemessageviewmodelset data responsedata consolelog thisresponsemessageviewmodel thisresponsemessageviewrender work cases implementations callback function belongs model whole page whereas model partial question works perfectly fine cases one case render partial latest model values click button executed click another button trigger post successfully comes stores model show frontend still true whereas show behavior refresh page works perfect called taking latest model changes spent days nt understand wrong thanks time jridgewell jashkenas", "num": "3836", "d": "10/2015"}, {"title": "collectionremove requires updated documentation fix", "body": "according documentation remove model array models collection return seems part returning removed models always case latest stable release well edge version expected based documentation get back array always even array empty would allow things without worry return type problem actually returning different value types depending pass arguments see become issue open browser console backbone loaded attempting following trying following operations sure recreate collection time last one get really becomes issue since adds new item collection even though nt want add anything try see collection property increase recommendations resolve update documentation clarify various return types returns back update always return array regardless input arguments update add anything passed first argument", "num": "3835", "d": "10/2015"}, {"title": "event documentation add arguments", "body": "documentation catalog events special event fires triggered event passing event name first argument would great something added specify arguments passed trigger function also passed listener function", "num": "3831", "d": "10/2015"}, {"title": "historyupdatehash correctly encoded fragment breaks uri safari browser", "body": "fyi coding first backbone marionette project run strange uri encoding problem means far backbone professional maybe getting something wrong problem description following route marionette router handles searches get style query parameters trying persist application state need url fragment able handle special characters like \u00f6 \u00e4 \u00fc correctly therefore encode query eg loccity berlin amp loccty m\u00fcnchen call works perfectly browsers testing safari encountered navigation routine fragment decoded given backbonehistoryupdatehash updates windows location point safari desktop mobile version encodes given fragment iso query consumed javascriptbackbone anymore break code urierror calling decodeuricomponent backbonerouterextractparameters find much information web call help obvious bug anywhere got something wrong please give hint already checked encoding sides documents server delivers correct encoding well headers also say", "num": "3830", "d": "10/2015"}, {"title": "update new user caldroid android", "body": "application used caldroid library get enter user details purticular day calander view first user enter details save database used database called activeandroid orm issue try enter details another user showing previous user enterd details aslo add many user means show first enterd details dont know fix bug one help issue", "num": "3829", "d": "10/2015"}, {"title": "dropping support", "body": "jan ms essentially dropping support mind jquery lodash dropping support releases let discuss dropping next major bump backbone", "num": "3828", "d": "10/2015"}, {"title": "model id change collectionget event order", "body": "change id triggered onmodelevent swapped id collection call collectionget fails var new bbmodel var c new bbcollection model cadd fails con change id function x consolelog cget xattributesid works con change function x consolelog cget xattributesid mset", "num": "3826", "d": "10/2015"}, {"title": "modelget method returns objectprototype methods", "body": "javascript var new backbonemodel mget tostring gt function tostring native code think would correct receive case", "num": "3825", "d": "10/2015"}, {"title": "entity type part model current context", "body": "using unitofwork entity framework mvc created service layer repository controller getting entity type part model current context step services public interface idocumentservice iservice int uploaddocuments httppostedfilebase file document documents int contractid public class documentservice service idocumentservice repository public static class documentsrepository private static idatacontextasync test new datacontext mymodel getting error one public virtual void insert tentity entity entityobjectstate objectstateadded dbsetattach entity contextsyncobjectstate entity", "num": "3824", "d": "10/2015"}, {"title": "error opencv stitching project", "body": "building opencv stitching project adding available files project gets build without error error run without debugging using static libraries error shown screenshot debug program throws following message going line line error debugged firstchance exception access violation reading location handler exception program may safely continued please answer question soon possible thankyou advance", "num": "3823", "d": "10/2015"}, {"title": "collection model attribute", "body": "attribute collection expects constructor opposed attribute array model instances personally find syntax confusing would prefer one constructor attribute uppercased formats supported take may good reason syntax would find helpful know thoughts", "num": "3814", "d": "10/2015"}, {"body": "ooo good find", "d": "10/2015"}, {"body": "dupe others", "d": "10/2015"}, {"body": "nope nt setting attributes construction js var model function attrs attrs defaults attrs result defaults var new model hasownproperty test mattributeshasownproperty test gt false", "d": "10/2015"}, {"body": "right related nt name keys admonition seems fairly relevant", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "nt name keys watch seems fairly prescient creating model arbitrary keys nt mercy runtime use right related related slightly issues conflicts properties nt define one prevents creating model reserved properties", "d": "10/2015"}, {"body": "yeah agree justin would consider bug", "d": "10/2015"}, {"body": "aside using objectcreate null place comes worms would propose", "d": "10/2015"}, {"body": "use times need argument orders adjusted", "d": "10/2015"}, {"body": "feels like halfsolution drops readability fine go still think avoid et al app least", "d": "10/2015"}, {"body": "could modify check notskip assignment existing value firefox experimenting making nonwritable would nt classify bug behaving design anything request would enhancement change", "d": "10/2015"}, {"body": "changing introduce subtle bug apps relied behavior let tread carefully", "d": "10/2015"}, {"body": "would nt effect case behavior assign even value exists value still assign change allow assigning values exist something like", "d": "10/2015"}, {"body": "jdalton mean referring case js var model backbonemodelextend defaults foo true var model new model foo undefined defaults modelget foo true extend modelget foo undefined", "d": "10/2015"}, {"body": "extend would preserve undefined adam modelextend differs semantics extend extend foo undefined defaults foo undefined thu oct pm adam krebs notifications githubcom wrote jdalton mean referring case var model backbonemodelextend defaults foo true var model new model foo undefined defaults modelget foo true extend modelget foo undefined reply email directly view github", "d": "10/2015"}, {"body": "mean referring defaults behavior", "d": "10/2015"}, {"body": "megawac aware expressionless referring line", "d": "10/2015"}, {"body": "checking source value instead destination value", "d": "10/2015"}, {"body": "well escalated quickly expecting simple solution like used would bad solution reason could come want support use cases developer intentionally creates prototype chains really wants inherited properties assigned attributes would bit strange usually things interested inherting prototype methods fields would like treat attributes model perhaps thing really like use let developer decide many properties inherited want treat attributes third approach perhaps stupid really want treat fields even worth attribute criterion decide prefer value argument passed constructor intuitively match developer intent specified attribute explicitly constructor argument used leads following idea let us traverse prototype chains find lowest common ancestor compare values fields values lca", "d": "10/2015"}, {"body": "reading code bit puzzled merging uses forin loop definition iterates fields certainly function set reason get conflict check propertyisenumerable objects one implicitly iterating", "d": "10/2015"}, {"body": "well jeremy currently taking americas bike believe decision falls braddunbar cut release pretty ugly hacks sure necessary", "d": "10/2015"}, {"body": "scaled back deopting check arguments check nt necessary think go release since nt imagine releases rather start merging prs nonbreaking generic people choose incorporate without redoing entire app think pretty good solution particular objection", "d": "10/2015"}, {"body": "arguments check nt necessary right referring presplit still fan rather start merging prs got mind complete overhaul something gradual think pretty good solution particular objection responding clarity", "d": "10/2015"}, {"body": "adding needed bugfix", "d": "10/2015"}, {"body": "looks like problem module loader setup packagejson dependencies usually marionette depending different version backbone one packagejson try stackoverflow mailing list gitter page debug backbone nt anything special", "d": "10/2015"}, {"body": "hi supritashankar kind request best left one channels questions working backbone general discussions recommend trying stackoverflow", "d": "10/2015"}, {"body": "jridgewell put first also bounty question", "d": "10/2015"}, {"body": "added jridgewell could return array even empty removed nothing get back empty array", "d": "10/2015"}, {"body": "whoops always returning array", "d": "10/2015"}, {"body": "want work pr", "d": "10/2015"}, {"body": "braddunbar mind taking look", "d": "10/2015"}, {"body": "jirgn looked today able replicate reopen provide jsfiddle causes error", "d": "10/2015"}, {"body": "yep seems like good idea dependencies drop support backbone implicitly lose support anyway syncing seems like good plan", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "specifically need fix finally use still ca nt use could get rid iframe end missing supporting older browsers", "d": "10/2015"}, {"body": "besides able adopt various methods scanned backbone see fixes ie lt old ie amp earlier dropped", "d": "10/2015"}, {"body": "iframe issues affect us moving forward things besides able adopt various methods got rid underscore remember mostly objectcreate see", "d": "10/2015"}, {"body": "iframe issues affect us moving forward things dropping support means less code less workarounds less testing overhead generally less headaches allows expanding features new lowest common denominator instead boxing features doable got rid underscore remember mostly see suuuper handy though", "d": "10/2015"}, {"body": "instead boxing features doable give example happening currently seems mostly talking minor code changes anything fundamentally different backbone iframe section could removed ton code", "d": "10/2015"}, {"body": "give example happening currently really involved daytoday backbone maybe jridgewell braddunbar insights know developing lodash issue scoping features lowest supported environment comes plenty things like mapsetweakmap null prototypes etc seems mostly talking minor code changes anything fundamentally different backbone iframe section could removed ton code reduction code complexity nice though see something like supporttriage may bigger win know debugging older ie issues nt easiest many devs lack vms may volunteering oldiesupportcontact cool guess", "d": "10/2015"}, {"body": "iframe section could removed ton code nt discount history fixes done iframe tried refactoring router code times always frustrated legacy code really involved daytoday backbone maybe jridgewell braddunbar insights thankfully jquery took brunt ie code fixes history code know work around", "d": "10/2015"}, {"body": "thankfully jquery took brunt ie code fixes history code know work around jquery moves away support backbone take support burden fixes", "d": "10/2015"}, {"body": "jquery moves away support backbone take support burden fixes nah enddev code views ajax requests backfill anything missing updating latest jquery", "d": "10/2015"}, {"body": "clarify backbone wo nt drop support even though jquery amp microsoft also wo nt put effort extend support beyond history correct anguished", "d": "10/2015"}, {"body": "get rid ie workarounds history", "d": "10/2015"}, {"body": "certain extra features gain dropping support certain wo nt gain anything keeping past end support", "d": "10/2015"}, {"body": "could define gettersetter stop", "d": "10/2015"}, {"body": "news jquery somewhere know nt support neither stopping development branch", "d": "10/2015"}, {"body": "paulfalgout yes plan branch official post yet", "d": "10/2015"}, {"body": "going backbones source code set method changes triggered changed attributes one one later change event fired see assignments happening two points nt know id getting updated two points way looking get updated model works", "d": "10/2015"}, {"body": "listening event change happens event need model follow anoopmd suggestion", "d": "10/2015"}, {"body": "see many duplicates", "d": "10/2015"}, {"body": "see personally hate lowercased name sigh", "d": "10/2015"}, {"body": "strong preferences whether batches think would prefer batches avoid possible merge hell scenarios better guys", "d": "10/2015"}, {"body": "nt understand using npm package npm download use git github releases fedora package manager tied npm", "d": "10/2015"}, {"body": "tarball downloaded makes difference problem nt contain license text answer question fedora package uses npm packages npm dependency backbone satisfied actual build output two binary packages contains actual js people nt care npm requires also provides npm metadata npm requirements satisfied common way packaging js libraries fedora nowadays spec file interested change fedora package use github tarball prefer getting bit offtopic issue putting aside fedora packaging stuff npm pull tarball include license text like", "d": "10/2015"}, {"body": "hmm seems incorrect reverting sure logic keeping js library os package manager know", "d": "10/2015"}, {"body": "moving", "d": "10/2015"}, {"body": "heedster remember encountering similar issue ver upgraded ver solved problem", "d": "10/2015"}, {"body": "weird issue update would fire using upgraded problem fixed", "d": "10/2015"}, {"body": "added notice changelog incorrectly spelled corrected", "d": "10/2015"}, {"body": "reason needs stay open looks like linked pr closed", "d": "10/2015"}, {"body": "referring changes neat side effect backbonehistory longer uses jquery event methods pushstate hashchange listeners native way changing worked", "d": "10/2015"}, {"body": "eventually found rooted chrome instability shutting chrome restarting fixed behavior", "d": "10/2015"}, {"body": "problem added idattribute models assigned id removed direct assignments think works lot models little problematic regression problem error console effect components disappear application lots different cases lines code", "d": "10/2015"}, {"body": "got exactly issue backbone filipmares backbonehistoryhandlers array empty", "d": "10/2015"}, {"body": "similar problem research found two backbone versions bundled webpack project depends backbonesyphon dependent updated backbonesyphon dependency accept run npm dedupe rebuild app worked tip run webpack displaymodules know two versions bundled", "d": "10/2015"}, {"body": "correct thanks tip sun oct pm luiz am\u00e9rico notifications githubcom wrote similar problem research found two backbone versions bundled webpack project depends backbonesyphon dependent updated backbonesyphon dependency accept run npm dedupe rebuild app worked tip run webpack displaymodules know two versions bundled reply email directly view github filip", "d": "10/2015"}, {"body": "error please fix", "d": "10/2015"}, {"body": "moving", "d": "10/2015"}, {"body": "braddunbar", "d": "10/2015"}, {"body": "use", "d": "10/2015"}, {"body": "agree spent quite lot time figuring firing unset server use workaround aratlas meanwhile", "d": "10/2015"}, {"title": "doc object observers", "body": "hello realized recently working admittedly docs correct need use precise target specified docs though got confused got inspired code people using totally understand need precise target using string function need specifying function though thinking brief explanation necessity use either targetstring function woud good docs got type incomprehension emberrunonce looking thinking check precise explanations difference string functions method actually never use function emberrunonce targetstring thanks", "num": "12543", "d": "10/2015"}, {"title": "contextual components hash helper causes attribute assignments prototypes", "body": "seeing unexpected behaviour using contextual components conjunction helper causes passed component template invocation appear assigned component prototype rather component known issue perhaps way invoking components twiddle demonstrating issue cc mixonic", "num": "12540", "d": "10/2015"}, {"title": "returning rejected promise application route fails ungracefully", "body": "reduced example nt know want behavior current state clearly less ideal think cc nickiaconis krisselden", "num": "12539", "d": "10/2015"}, {"title": "contextual components new instances", "body": "selectboxhbs applicationhbs renders foo three times fiddle expected select box public api render new instance selectboxoption", "num": "12537", "d": "10/2015"}, {"title": "using observes child class emberobject breaks ember data eachcomputedproperty proto firefox", "body": "js bin breaks eg firefox ubuntu windows windows works eg chrome ubuntu windows setup simple create ember object properties create child class extends object defines observer try iterate properties bar way via disappeared bizarrely still shows iterator seems skipping massively breaking issue ember data uses part pushing data models method fire properties bug means ember data silently ignores whatever payload produces model without data eg turn effectively means entire user interface application broken wherever pattern occurs options docs state observes used properties class fix firefox needs found ideas firefox breaking dug enough ember know block least bug appear must something going deep addobservelistener code nt time dig moment", "num": "12534", "d": "10/2015"}, {"title": "enumerable vs array", "body": "docs says return boolean nt necessarily true returns first truthy value returned last falsey value returned inconsistent well always returns correct functionality either way make either pr docs repo correct behaviorexplanation", "num": "12533", "d": "10/2015"}, {"title": "expose test stubbing", "body": "currently dynamically replaced function invocation makes sense nt currently lend stubbing method tests since whatever stub replaced actually call function additionally since nt exposed lives function closure ca nt stub directly realize might small usecase wondering would worthwhile expose via property returned function", "num": "12531", "d": "10/2015"}, {"title": "build error editing js files", "body": "developing locally get build error every time save js file restarting server fixes error save", "num": "12530", "d": "10/2015"}, {"title": "make regexps emberstring configurable", "body": "emberstring methods support cyrillic letters add cyrillic letters regexps probably good idea would great make regexps emberstring configurable", "num": "12529", "d": "10/2015"}, {"title": "guides issue better doc emberobserver", "body": "page lost debugging instead selectedfeatures embera", "num": "12528", "d": "10/2015"}, {"title": "node supported", "body": "get ember cli lol also getting started documentation instruct install unstable version phantom install hangs osx", "num": "12527", "d": "10/2015"}, {"title": "helper returning emberstringhtmlsafe string passes unit tests chrome fails phantomjs", "body": "created twiddle shows functionality helper given large string smaller string bolds occurrences smaller string larger string ie returns run autocompleteemphasizer unit tests chrome pass run phantomjs via fail instead returning string returns testsunithelpersautocompleteemphasizertestjs file import autocompleteemphasizer helpersautocompleteemphasizer import module test qunit module unit helper auto complete emphasizer test emphasizes one word correctly single search word defaults bold function assert assertexpect var inputstring end batman longer afraid bats var searchtext batman var expected end batman longer afraid bats var result autocompleteemphasizer inputstring searchtext assertequal result expected test using non default emphasizer works function assert assertexpect var inputstring end batman longer afraid bats var searchtext batman var emphasiselement empher var expected end batman longer afraid bats var result autocompleteemphasizer inputstring searchtext emphasiselement assertequal result expected test emphasizes multiple words correctly single search word function assert assertexpect var inputstring end batman longer afraid bats var searchtext bat var expected end batman longer afraid bats var result autocompleteemphasizer inputstring searchtext assertequal result expected test emphasizes multiple words correctly multiple search words function assert assertexpect var inputstring tick tock went clock var searchtext ck ent var expected tick tock went clock var result autocompleteemphasizer inputstring searchtext assertequal result expected test space end search text effect result function assert assertexpect var inputstring end batman longer afraid bats var searchtext batman var expected end batman longer afraid bats var result autocompleteemphasizer inputstring searchtext assertequal result expected test search word equal emphasizer works function assert assertexpect var inputstring building supplies var searchtext b var expected building supplies var result autocompleteemphasizer inputstring searchtext assertequal result expected helper save taking twiddle import ember ember inputs params text add emphasis parts params searchtext use emphasizing params optional emphasizing element ie defaults export function autocompleteemphasizer params params undefined params null paramslength return false var result params provide string search return unaltered paramslength return result var searchtext params tolowercase replace g searchtextlength return result get search words make sure search wordsare unique non empty var searchwords searchtextsplit uniq reject w gt w var emphasiselement params b search words match emphasis element word first searchwordscontains emphasiselement searchwordsremoveobject emphasiselement searchwordsinsertat emphasiselement make sure result html safe contains nothing malicious result emberhandlebarsutilsescapeexpression result searchwordsforeach w gt result resultreplace new regexp w ig lt emphasiselement gt make result html safe know contains malicious html return emberstringhtmlsafe result export default emberhelperhelper autocompleteemphasizer unsure ember issue stringhtmlsafe something like ember qunit issue phantomjs", "num": "12524", "d": "10/2015"}, {"title": "jscs tests failing", "body": "getting lot jscs errors cc rwjblue", "num": "12521", "d": "10/2015"}, {"title": "action helper argument placeholders", "body": "currently ember simple component gridlike functionality happens becomes first argument action callback default reads first argument case instead jquery event case arguments fix bypass neatness value setting modify click code would neat able would also quite powerful currying etc also give flexibility using someone else api ca nt control farfetched", "num": "12520", "d": "10/2015"}, {"title": "embercomputedsort nt update live recordarray updates", "body": "upgraded ember ember noticed embercomputedsort longer updates live recordarray updates example javascript users embercomputed function return thisstorefilter user filter isactive true function record return recordget isactive sortlastname lastname asc firstname asc userssorted embercomputedsort users sortlastname print add new user users list update userssorted list", "num": "12516", "d": "10/2015"}, {"title": "setter embercomputed nt fire set false", "body": "hello maybe missing something nt find anyone else complaining think found bug computed property looks like javascript import ember ember export default embercomponentextend someprop embercomputed get return emberispresent windowlocalstoragegetitem someprop set key value consoledebug somepropset value value windowlocalstoragesetitem someprop windowsessionstoragegetitem someprop else windowlocalstorageremoveitem someprop volatile custom checkbox component something like javascript import ember ember export default embercomponentextend checked null value determines checkbox checked actions toggle function really nt matter use toggleproperty problem still thisset checked thisget checked code running setter nt get invoked value set get around problem actually using happening value valid value set", "num": "12515", "d": "10/2015"}, {"title": "setting placeholder component broken", "body": "try localize placeholder text component hook passing localization key parameter component code working broken versions twiddle demonstrates problem bug something wrong javascript emberstrings hello bonjour componentslocalizedinputjs export default embercomponentextend tagname input attributebindings placeholder willinsertelement function thissuper var placeholder thisget placeholder placeholder thisset placeholder placeholderloc template localizedinput placeholder hello", "num": "12514", "d": "10/2015"}, {"title": "memory leak conditionally included components", "body": "twiddle demonstrates simple example using two components conditional logic determine one included appears causing memory leak application came light memory usage climbs lot data around application crashes memory usage climbs change underlying data determines components include remove toggling data back forth various components included removed repeatedlyafter iteration data hence component use returned initial state would therefore expect memory usage also return gc back initial amount chunk memory allocated fraction ever released second twiddle produces exact output one without component outputs divs text instead text conditionally included inline example memory released although convinced memory full description problem stackoverflow", "num": "12513", "d": "10/2015"}, {"title": "linkto currentwhen supplied per docs", "body": "docs specify however currently appear case always treated string called docs updated reflect expected string separated list route names work documented shall pr either way", "num": "12512", "d": "10/2015"}, {"title": "allow queryparams sub expression reset query params", "body": "also like weigh addition would great able pass simple use case would example filter bar multiple different options etc typically want clear currently way would would uhhhhh verbose redefine every query param ton duplication remember add new one rename one need go back clear link multiple clear links addchange would great could instead say know simply remove query params url", "num": "12510", "d": "10/2015"}, {"title": "add gitter badge readme", "body": "discovered official gitter chatroom repo wondering nt add badge readme", "num": "12508", "d": "10/2015"}, {"title": "parameterless helper calls nt work inside attributes", "body": "example given helper nt able call without parameters inside attribute quick workaround specify parameter wo nt used", "num": "12506", "d": "10/2015"}, {"title": "aborted transitions ember propagate error emberrsvpon error", "body": "seen example aborted transitions redirection manual abortion propagates error rsvp error handler intentional change error erroneous error", "num": "12505", "d": "10/2015"}, {"title": "html progress element value changes rendered outlet ie", "body": "experiencing weird issue html progress element value changes one rendered compiled templates coming server contain correct values rendered value always nt know put fiddle together embercli syntax replicate use ie windows place following code indexhtml opening body tag applicationhbs end file progress bar indexhtml render correctly one inside application template value changed ember jquery", "num": "12504", "d": "10/2015"}, {"title": "perf manually force gc node", "body": "summary noticed fastboot appears gc related issues quote coworker prateek briefly app ember allocating lot objects every request triggers pathological behavior garbage collector best guess dynamically increases new gen size uses incremental scavenging algorithm gc however larger new gen sizes require iterations collect results early requests small new gen fast subsequent requests progressively getting slower full gc since nt expose many gc tuning options solution found far force full gc new old gen every request adds every request still faster consistent normal behavior average even percentile without forced gc forced gc graphs include rendering simply resource discovery meaning execute route handlers would assume would allocations rendered string questions steps taken make gc less issue ember land done application land would transpiled classes allocate less rewrite ember functionally pure everyone knows oop considered harmful wink cc wycats kratiahuja chancancode krisselden tomdale", "num": "12499", "d": "10/2015"}, {"title": "acceptance tests leak container every test run", "body": "came across issue app basically pretty large test suite hits chrome tab memory limit clearly unacceptable prevents running tests integration server js bin repro steps open developer tools new tab open jsbin chrome wait developer tools hit debugger line take memory snapshot note chrome automatically continues snapshot complete sure continue better demonstrate problem take another memory snapshot use comparison snapshot snapshot see memory leaking notably container objects hold references virtually everything else scroll see delta next container following screenshot demonstrates results machine", "num": "12490", "d": "10/2015"}, {"title": "objectkeys emberobjectcreate return values differ development production", "body": "tried current master well release development return value objectkeys emberobjectcreate empty array code built production return value super happening latest versions firefox chrome nt appear browser issue please let know need information", "num": "12489", "d": "10/2015"}, {"title": "route storefindall working correctly records type already present previous page", "body": "working fine ember ember data nt seem work ember ember data navigate works fine see orders come api page displays information seven orders first navigate correctly see orders member account however press link goto displays orders api deffinitely hit correctly returns orders put breakpoint end ember data findall method returning array items line posted first think ember data done job orders route import ember ember import authenticatedroutemixin embersimpleauthmixinsauthenticatedroutemixin export default emberrouteextend authenticatedroutemixin model function return thisstorefindall order function orders return orderssortby creationdate reverse aftermodel function orders documenttitle orders return emberrsvpall ordersgeteach orderitems account member model import ds emberdata export default dsmodelextend accounttype dshasmany accounttype async true addresses dshasmany address async true contacts dshasmany contact async true membershiptype dsbelongsto membershiptype async true communicationsavailable function var commsavailable thisget contacts foreach contact gt commsavailablepushapply commsavailable contactget communicationsavailable property contacts eachcommunicationsavailable joindate dsattr date name dsattr string orders dshasmany order async true prices dshasmany price async true suppliercode dsattr string order model import ds emberdata export default dsmodelextend account dsbelongsto account async true address dsbelongsto address async true collect dsattr boolean deliverydate dsattr date paymentdate dsattr date memberpurchaseordernumber dsattr string orderitems dshasmany orderitem async true ordernotes dshasmany ordernotes async true ordernotifications dshasmany ordernotifications async true orderstatus dsbelongsto orderstatus async true creationdate dsattr date", "num": "12488", "d": "10/2015"}, {"title": "calling watch property update cached value", "body": "record watched template computed property nt appear possible update cached value returned unless makes impossible use signal value property updated outside looks like branch code always checks value watched property however updated emberset jsbin reproduces issue", "num": "12484", "d": "10/2015"}, {"title": "inconsistent behaviour extendprototypesfalse", "body": "note behaviour appears prototype extension disabled return different arrays returns empty array returns non empty array due ember mixins injected native array looks like keys added array declared nonenumerable jsbin prototype extensions enabled cases empty array returned", "num": "12482", "d": "10/2015"}, {"title": "emberset clobbers computed property setters", "body": "jsbin would expect setter log console however setter code never gets run line emberset overrides existing property descriptor defined property otherwise ember tries copy value form property subclassing class edit computed setter gt setter setter es something different nt directly issue", "num": "12480", "d": "10/2015"}, {"title": "add options object deprecate calls missing", "body": "app working eliminating deprecations going end life using emberdebughandlerspolyfill filter anything noticing depcrecations provide options properties going list go one one fix adding options emberviewslibviewsviewjs line line emberviewslibviewscomponentjs line emberapplicationlibutilsvalidatetypejs line containerlibregistryjs line line emberruntimelibcontrollersobjectcontrollerjs line", "num": "12478", "d": "10/2015"}, {"title": "disallow using context property name", "body": "hello suggest disallowing least logging warning use property name granted smart use name generic one bit twice week debugging first occurence quite hard obvious context happened service named gets injected controllers routes components route query params refreshes model property named prevented model ever reloaded internal property name replaced service instance expected therefore method call throwing error appear console found copypasted default implementation didchangequeryparams putting something similar happened morning component time knew look easier know smart first place use name hand though nowhere said name used obvious warning error happens using since maybe property names blacklisted nt know hope clear enough misdiagnosed issue thanks time efforts making emberjs great piece software", "num": "12477", "d": "10/2015"}, {"title": "use hook didinsertelement", "body": "used emberjs version less used hook far function removed ember solution instead thanks", "num": "12476", "d": "10/2015"}, {"title": "computed properties broken", "body": "every computed property based something using broken upgrade two examples functions longer running expected attribute changed edited reflect stefanpenner comment", "num": "12475", "d": "10/2015"}, {"title": "helpers properties meta", "body": "meta information helper properties quite helpful case wonder removed case many helpers wrote application using meta information extract key used resolved value key question workaround", "num": "12474", "d": "10/2015"}, {"title": "infinite loop aborting query param transition opting refreshmodel", "body": "title says really aborting transition sends router infinite loop see jsbin hit go get call stack exceeded error thing happens surprising bad code routerjs", "num": "12473", "d": "10/2015"}, {"title": "adaptererror persisting despite route errorhook treatment", "body": "two jsbins identical except first uses ember data ember second uses ember data ember represent app enters route testroute tries get testmodel record model adapter fails get record rejecting promise adaptererror back route handle error transitioning servererror route although versions successfully transition servererror route second ember data see error console errorreportingpersistence seems breaking tests anybody able comment whether regression something wrong error handling route jsbin dumping console expected", "num": "12472", "d": "10/2015"}, {"title": "sortablemixin never deprecated", "body": "please deprecate sortablemixin ember patch noted workmanw never deprecated removed without warning", "num": "12470", "d": "10/2015"}, {"title": "applicationcurrentroutename nt change switching routes", "body": "appears stuck first route comes across name loading route setup working ember currentroutename appears stuck also seems causing trouble linkto component setting active current page turned logtransitions transitions complete without error", "num": "12469", "d": "10/2015"}, {"title": "component layout problem", "body": "get work overwriting component layout property nt seem anything ember import ember ember import layout templatestest export default embercomponentextend layout layout", "num": "12467", "d": "10/2015"}, {"title": "namespace vs component name hyphenation rule", "body": "currently check hyphenation component names fairly dumb means skirt rules defining component nested name lives namespace contains hyphen example component completely valid sure intended feature understanding component names meant hyphenated namespace case probably improved example jsbin cc nathanhammond", "num": "12466", "d": "10/2015"}, {"title": "devprod inconsistency emberobjectcreate hasownproperty super", "body": "hey today ran issue production builds broken ultimately caused minified builds behaving differently nonminified builds nonminified builds minified ones actually verified building environment nt making property assume minification issue nothing else might differ production development builds stumbled upon checking properties yes fishy nt think good idea yes changed code already inconsisteny somewhere remains show behavior prepared demo project completely empty project projects good run compare outputs br domme", "num": "12462", "d": "10/2015"}, {"title": "ca nt replace hasmany relationship", "body": "something like work", "num": "12461", "d": "10/2015"}, {"title": "emberstring underscore returns bad result", "body": "passing string current result expected result jsbin reproduce problem", "num": "12460", "d": "10/2015"}, {"title": "empty comment select tag causes problem nvda screenreader", "body": "see empty comment created inside select tag first child options like investigated bit found created first parent child null setnode function nvda screenreader read selected option gets confused comment comment removed way", "num": "12459", "d": "10/2015"}, {"title": "longer stubspy via sinon call ember", "body": "obviously relevant testing nt tested another stubbing library sinon example js class export default applicationserializerextend modelnamefrompayloadkey function key manipulate key code return thissuper key test test modelnamefrompayloadkey function assert var serializer thissubject var superspy sinonspy serializer super serializermodelnamefrompayloadkey user assertequal superspycalledwith user true given user passes user understand example little awkward run assertion returned couple instances il manipulate argument confirm manipulation correct actually happening call additional bonus mixin method call works expected used super method", "num": "12457", "d": "10/2015"}, {"title": "computedfilter longer works gt wrapped property", "body": "previous versions ember needed property recompute based second dependent key wrap filter like structure behavior previously new records added filter would run new record modified entire filter would rerun ember gt wrapping filter breaks behavior described additions occur filter run new record ui never updated show addition record versions ember could changed would recompute new additions made technique massive flaw addition made entire filter rerun happen list constantly added cause serious performance problems twindle showing issue replicate twindle play around start stop index see filter recomputing try add item see filter run", "num": "12453", "d": "10/2015"}, {"title": "new computed property gettersetter invalid embercli uglify", "body": "hey using object literal shorthands nt supported nt work leads build failed file assetsvendorjs unexpected token punc expected punc got change", "num": "12447", "d": "10/2015"}, {"title": "ember model property named type wrongly mapped", "body": "happens property value equal another model name example myappfoo dsmodelextend type dsattr string myappbar dsmodelextend type dsattr string given json ember data seems confused wo nt map correctly foo instance fields except id null renaming property something else fix problem apologies already loggeddocumented ps tested ember", "num": "12446", "d": "10/2015"}, {"title": "using rest arg version breaks hash version", "body": "specify string would set params array property location specify hash argument instead positional params assertion added triggered even nonhash params present javascript appfoobarcomponent embercomponentextend appfoobarcomponentreopenclass positionalparams allthethings demo", "num": "12444", "d": "10/2015"}, {"title": "api doc warn went away", "body": "emberwarn longer shows api doc website even though code comments still completely sure happened cause move documentation emberdebugwarnjs emberdebugmainjs shows could due order files processed doc process run pr moves doc main think ok doc would next place function registered via methods documented like main navigate back mean implementation reading imports", "num": "12442", "d": "10/2015"}, {"title": "initial load app work ember inspector open w ember", "body": "ember inspector open initial load ember app cause app fully load white screen death errorless hard refresh app ember inspector open also produce results closing ember inspector refreshing allow app load", "num": "12439", "d": "10/2015"}, {"title": "click event fire component button type button", "body": "hi creating component extends button using ember type attribute button click method called however comment type button works perfectly attribute import ember ember export default embercomponentextend tagname button attributebindings autofocus accesskey form formaction formenctype type formmethod formnovalidate formtarget name value contenteditable contextmenu dir draggable dropzone hidden id lang spellcheck style tabindex title translate disabled role targetform type button click alert click without attribute import ember ember export default embercomponentextend tagname button attributebindings autofocus accesskey form formaction formenctype type formmethod formnovalidate formtarget name value contenteditable contextmenu dir draggable dropzone hidden id lang spellcheck style tabindex title translate disabled role targetform click alert click", "num": "12438", "d": "10/2015"}, {"title": "uncaught typeerror read property reopen undefined", "body": "updated get typeerror downgrade back moment wanted let know cheers morgan", "num": "12437", "d": "10/2015"}, {"title": "doc beta deprecate warn handlers", "body": "x requires api documentation x requires api documentation x guides reviewed rwjblue seems reasonable add guide upgrade workflow ember proper however interested blocking beta blog post best resource along rfc implementation pr", "num": "12428", "d": "10/2015"}, {"title": "inconsistent behavior transitioning error substates", "body": "appear inconsistencies treatment error substates assume following route structure oddities arise attempting linkto transitionto error substate redirect one transition linkto transitionto behavior apptemplatesindexhbs linkto created target unuseddummyerrorpathrouteapplicationundefined linkto error error linkto route ca nt linkto without error thrown app loads though appears ember inspector linkto searcherror searcherror linkto linking directly error substates template probably useful feature likely nt supposed work however ember create nonfunctional link error substate ask attempt create link nontoplevel error route ember throw error links error substates nt allowed would good throw error indicates behavior exhibited attempting transition using case think makes sense allow manual transitions error substates instance redirecting transition strange behavior happens attempting manually redirect error substate transition example approutessearchnewjs beforemodel function transition ends going search error return thistransitionto error may wonder developer would want redirect error substates directly instead returning rejected promise described guides however use case ember provides indirect control error substate loaded promise rejected eg promise rejected beforemodelaftermodelmodel hook searchnew route searcherror template searcherror route always entered way load error route instead via promise rejection happens desired particular failure state reason allowing manual redirection transitions useful feature jsbin shows behavior described", "num": "12424", "d": "10/2015"}, {"title": "transitioning css class multiple links route", "body": "linking route different model links add class one sure right wrong seems definitely like bug transition ends none links one clicked remove small example click color switch subroute links go immediately red transition clicked color goes blue links stay red might related even duplicate", "num": "12419", "d": "10/2015"}, {"body": "believe duplicate sohara confirm close", "d": "10/2015"}, {"body": "rwjblue yeah correct missed somehow", "d": "10/2015"}, {"body": "sohara worries thanks testing feature get sorted shortly", "d": "10/2015"}, {"body": "cc machty", "d": "10/2015"}, {"body": "definitely seems like bug serabe happen time figure going", "d": "10/2015"}, {"body": "landed madrid plane still let take look weekend fri oct robert jackson notifications githubcom wrote definitely seems like bug serabe happen time figure going reply email directly view github", "d": "10/2015"}, {"body": "submit fix tomorrow", "d": "10/2015"}, {"body": "nt believe support stubbing super directly nt feature super language aware super wish test super chains mock ancestors method likely best way actually wire inheritance", "d": "10/2015"}, {"body": "please share versions using", "d": "10/2015"}, {"body": "version node npm os darwin", "d": "10/2015"}, {"body": "result", "d": "10/2015"}, {"body": "emberclibabel broccolibabeltranspiler broccolipersistentfilter embercliqunit broccolijshint broccolipersistentfilter emberfire emberclibabel broccolibabeltranspiler broccolipersistentfilter", "d": "10/2015"}, {"body": "broccolipersistentfilter likely fix issue please install latest versions", "d": "10/2015"}, {"body": "thank stefanpenner fixed", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "jakobud version embercli using", "d": "10/2015"}, {"body": "sudo npm install g embercli password usrlocalbinember gt usrlocallibnodemodulesemberclibinember embercli usrlocallibnodemodulesembercli processrelativerequire cleanbaseurl silenterror broccoliunwatchedtree pleasantprogress escapestringregexp isgiturl isbinaryfile emberclicopydereference broccoliwriter abbrev promisemapseries bowerendpointparser jsstringescape nodemodulespath walksync emberclipreprocessregistry exit semver temp rimraf rsvp stripansi ansiregex broccolisanewatcher broccolislowtrees symlinkorcopy copydereference broccolikitchensinkhelpers mkdirp broccolifilter mkdirp debug ms mergedefaults lodash requiresport github mime portfinder async mkdirp compression bytes vary onheaders compressible accepts findupsync glob rimraf glob cpr gracefulfs mkdirp rimraf markdownit linkifyit mdurl ucmicro entities argparse yam fsextra lodashmerge sane watch minimist execsh minimatch fbwatchman walker broccolimergetrees broccoliplugin broccolifunnel walksyncmatcher mkdirp broccoliplugin coreobject lodashnode emberroutergenerator recast mkdirp esperanto markdownitterminal ansistyles clitable cardinal lodashnode broccolicachingwriter broccolireadcompat coreobject lodashnode broccolisourcemapconcat mkdirp lodashuniq lodashnode broccolicachingwriter fastsourcemapconcat ember v future versions ember cli support please update node iojs version could find watchman falling back nodewatcher file system events visit info node npm os darwin installed via npm per instructions", "d": "10/2015"}, {"body": "warning wrong repository last version released warning works warning fixed master therefore gone new version released", "d": "10/2015"}, {"body": "oh sorry nt realize separate thing thanks", "d": "10/2015"}, {"body": "supposed return string returns instance given way invoking helper function directly comparing output definitely seems fine directly without calling likely unstable based platform chrome passes automatically calling guess tweak unit tests call result helper function make pass scenarios", "d": "10/2015"}, {"body": "thanks rwjblue solved object issue obvious pointed remaining issue regex line nt work phantom js chrome pretty sure unrelated ember close thanks", "d": "10/2015"}, {"body": "thanks reporting try jump evening someone else nt take crack first", "d": "10/2015"}, {"body": "think", "d": "10/2015"}, {"body": "believe setter return value cached strange yes maybe someday change", "d": "10/2015"}, {"body": "updated setter return value transformed boolean looks like problem related value refreshing page manually setting string setter invoked set set quite opposite first post", "d": "10/2015"}, {"body": "phcoliveira try create simple embertwiddlecom example shows bug", "d": "10/2015"}, {"body": "well really must something wrong would nt first complain nt create component service regular input helper type checkbox showing behaviour twiddle said previous post problem related value rather original value returned getter first invocation", "d": "10/2015"}, {"body": "got thought use since computed value nt depend property turns fine without still sure behaviour intentional nt computed property volatile nt depend anything else", "d": "10/2015"}, {"body": "quaertym think using hook instead use computed property like js import ember ember emberstrings hello bonjour export default embercomponentextend tagname input attributebindings prompt placeholder prompt embercomputed placeholder function let prompt thisget placeholder return emberstringloc prompt", "d": "10/2015"}, {"body": "pixelhandler fixes explain suddenly broke", "d": "10/2015"}, {"body": "pixelhandler points using cp correct several issues setting willinsert causes rerender occur render read set livecycle hook breaks bindings said appear indicate issue believe issue collision attribute passed placeholder property one changes attribute anything else maybe updated use everything works rwjblue thing come mind", "d": "10/2015"}, {"body": "yes believe bug op still change cp better sort thing bug basically seem use changes things wag grab attributebinding values calling setting run loop nt properly trigger dirtied updated", "d": "10/2015"}, {"body": "wag grab attributebinding values calling willinsertelement setting run loop nt properly trigger dirtied updated ya likely issue although would prefer users use functionality seem like bug cc tomdale wycats", "d": "10/2015"}, {"body": "stefanpenner take look one", "d": "10/2015"}, {"body": "think fixed cc tomdale wycats may another edgecase memory leaking lanbale confirm still leak master also storying state prototype extremely dubious please store state instances", "d": "10/2015"}, {"body": "cloned project confirm fine latest master went back tried beta builds looks like fine latest incremental build thanks pointers", "d": "10/2015"}, {"body": "rwjblue memory serves backported fixes", "d": "10/2015"}, {"body": "applied canary build project discovered memory leak whilst leak dramatically smaller still apply suggested improvements try isolate another simple test demonstrate remaining leak", "d": "10/2015"}, {"body": "tried latest also exhibits leak", "d": "10/2015"}, {"body": "ianbale demonstrate leak isolated latest releasemaster would great", "d": "10/2015"}, {"body": "best took fair isolate one working big project handles huge amount data fresh load browser using according chrome task manager isolating one issue like far easy seeing pretty much straight line memory use seeing saw tooth larger drops unfortunately still steady upward climb terms retained memory whereas discarding objects pretty much rate creates ought holding relatively steady around instead steadily climbs slows crawl dies want post back demo create new ticket either way likely days get another demo together since idea hand replicate outside application thanks help ian", "d": "10/2015"}, {"body": "tried latest also exhibits leak latest ember version series rwjblue memory serves backported fixes yes known memory leak fixes backported branch", "d": "10/2015"}, {"body": "tried sorry got far jumped", "d": "10/2015"}, {"body": "yes known memory leak fixes backported branch thanks tried sorry got far jumped suspect primary leak fixed try curious secondary one mentioned please confirm provide reproduction latest versions specific release line", "d": "10/2015"}, {"body": "hi trying find cause looked like another memory leak found problem code essentially old objects destroyed always time number unexpected objects growing consuming extra memory combination fixing latest code suggested results pretty static memory use expect many thanks help ian", "d": "10/2015"}, {"body": "fact nt work seems like regression think make docs correct", "d": "10/2015"}, {"body": "possible make helper auto generate verbose version", "d": "10/2015"}, {"body": "briefly looked internals see would done seems like straightforward add defaultqueryparams routenamehere something helper using existing primitives would basically return hash represents default values", "d": "10/2015"}, {"body": "rwjblue seem like something someone knowledge ember code base could tackle id happy try help", "d": "10/2015"}, {"body": "one way get knowledge try leave breadcrumbsnotes tomorrow morning", "d": "10/2015"}, {"body": "rwjblue perfect also emberatx thursday well think minutes would rather way", "d": "10/2015"}, {"body": "djhedgehog nt believe inclined suggest gitter official linking prominently however link slack irc community resources think would great place call gitter", "d": "10/2015"}, {"body": "oh nt know slack channel either could either one badge repo lot people never see communitypage homepage", "d": "10/2015"}, {"body": "seems good idea indicate prominently readme", "d": "10/2015"}, {"body": "djhedgehog mind submitting badge readme entry pr", "d": "10/2015"}, {"body": "problem badge height related slackin deployments heroku try find fix keep updated", "d": "10/2015"}, {"body": "example left slackin badge pointing left one socketio", "d": "10/2015"}, {"body": "ofbriggs best guess commit days ago addresses behavior around perhaps chancancode rwjblue answer question", "d": "10/2015"}, {"body": "doubt commit changed particular behavior personally agree seems better propagate rsvp although sure exactly changed might looking something related next week routes instrumentation one else figured might uncover part work", "d": "10/2015"}, {"body": "seems like internals handling rejection considered bug rejection handled turn propagate", "d": "10/2015"}, {"body": "right line supposed ie line nt actually set value element however order attributes reverted work results swapping order max value attributes", "d": "10/2015"}, {"body": "believe may ie bug reproduced outside ember jsbin guess nothing luckily nt mind swapping attributes around want close something think", "d": "10/2015"}, {"body": "great job tracking issue unsure actually ember bug point seems like ie one attribute ordering matters specific browser sure think best thing might try provide compile time assertion even seems like bit stretch", "d": "10/2015"}, {"body": "rwjblue agree definitely looks like ie bug see third comment going raise ms edge team affected well nt believe actually get fixed ie hopes edge hopefully discovered people see ever happens swapping order attributes really nt big deal see acceptable workaround", "d": "10/2015"}, {"body": "raised ms", "d": "10/2015"}, {"body": "things noticed experiment took heapsnapshot two consecutive runs looked difference two snapshots even though running test resource discovery mode template strings object allocation highest per instance rather application container atleast saw object allocations entire router per instance nt application level try run tests simpler scaled app", "d": "10/2015"}, {"body": "first thing seems odd possibly easy deal confirm using version beta also confirm objects leaking since using fastboot using contextify", "d": "10/2015"}, {"body": "confirm using version beta channel include optional features including api running channel either way value would helpful tracking exactly commitsha used", "d": "10/2015"}, {"body": "chancancode running canary tests last time checked using node vm module directly", "d": "10/2015"}, {"body": "hope trolling oop harmful", "d": "10/2015"}, {"body": "yes using node vm module contextify", "d": "10/2015"}, {"body": "kratiahuja comment think somehow bar templates registry set", "d": "10/2015"}, {"body": "believe using one duplicates large swaths things putting extra pressure gc memory serves using contextify aimed mitigate", "d": "10/2015"}, {"body": "replicate steps containers less expected full suite ran appears maybe someone else demonstrate", "d": "10/2015"}, {"body": "actually let retry swear got leak yesterday testing however perhaps made mistake let come back get right", "d": "10/2015"}, {"body": "julkiewicz also possible noticed issue older version several libs spent time last months trying squash leaks possible already fixed one encountered", "d": "10/2015"}, {"body": "going close gladly reopen reproduction provided", "d": "10/2015"}, {"body": "somewhat expected making properties nonenumerable extremely slow guess would expect still dev vs prod", "d": "10/2015"}, {"body": "curiosity behavior differ two environments", "d": "10/2015"}, {"body": "idea taking alook", "d": "10/2015"}, {"body": "alright guess closed thanks rapid response", "d": "10/2015"}, {"body": "similar issue", "d": "10/2015"}, {"body": "identified fixed", "d": "10/2015"}, {"body": "like release soonish using latest channel builds fix", "d": "10/2015"}, {"body": "oh excellent thank", "d": "10/2015"}, {"body": "rwjblue yup forgot one", "d": "10/2015"}, {"body": "likely something reproduction example app would really make actionable suspect related arrayproxy issues reported lately gt", "d": "10/2015"}, {"body": "thanks stefanpenner would posted straight away findall seemed returning data would expect wanted quick opinion first posted", "d": "10/2015"}, {"body": "ok try put example app together nearing end working day uk may monday finish post link", "d": "10/2015"}, {"body": "stefanpenner example app shows login username password work click members top right click b company click orders button see links orders click orders top right see orders checking network tab shows orders came back api came back findall load successfully shows orders let know see bug need information", "d": "10/2015"}, {"body": "bmac take look together", "d": "10/2015"}, {"body": "currently expected behavior objectdefineproperty used marks nonenumerable extremely slow compared property arrays ca nt subclassed extendprototypesfalse currently must apply custom methods every array shared prototype result prohibitively slow planned work improve situation quite bit work eventually finish although ideal nt considered bug im going close", "d": "10/2015"}, {"body": "thanks good luck fwiw future readers comment led good read methods respective caveats trying extend arrayprototype kangax tl dr hidden property etc fail using works nonstandard", "d": "10/2015"}, {"body": "thanks writing definitely seems like bug", "d": "10/2015"}, {"body": "working one", "d": "10/2015"}, {"body": "need sleep continue", "d": "10/2015"}, {"body": "want work backporting values gladly merge provide way match via", "d": "10/2015"}, {"body": "would still figure untils add matchmessages", "d": "10/2015"}, {"body": "rwjblue guess depends many think ton yeah maybe workflow faster otherwise fix pretty quick figure go away", "d": "10/2015"}, {"body": "got ambitious today fixed unoptioned deprecations seeing started using emberclideprecation workflow", "d": "10/2015"}, {"body": "would nt better write eslint rule instead", "d": "10/2015"}, {"body": "well think eslint rules reserved everything related language framework internals opinion long developper gets notified use property name nt really care done", "d": "10/2015"}, {"body": "ksol seems like reasonable proposal think preferece use use rfc issues propose rough idea would consider opening suggestion rfc issue", "d": "10/2015"}, {"body": "think request halfway feature bug case far rough idea rfc seems little overkill anyone core teamissue team tells gladly", "d": "10/2015"}, {"body": "ksol issue bug idea help creating bugs apps looks like enhancement think falls requesting feature rfc issues feature requests nt need rfc proposal simply issue", "d": "10/2015"}, {"body": "didinsertelement hook continues exist components able use please note qa better directed stackoverflow better venue discussions would like keep issue tracker focused bug reports", "d": "10/2015"}, {"body": "provide jsbin similar demonstrate issue isolation also little things hopefully prevent future confusion nt observers computed properties nt fire rather two marked dirty someone interested consume someone like active template chooses", "d": "10/2015"}, {"body": "wonder related", "d": "10/2015"}, {"body": "js bin added broken computed property kuzirashi js bin", "d": "10/2015"}, {"body": "may related cc krisselden", "d": "10/2015"}, {"body": "likely patch plan wait", "d": "10/2015"}, {"body": "also looking guidance whether get patched looking fix anything novice help move things along please let know", "d": "10/2015"}, {"body": "gcassie nt time really dig fix proposed definitely depending invasive could backport needed first step someone needs figure fix bug", "d": "10/2015"}, {"body": "know link docs shows meta property help public api", "d": "10/2015"}, {"body": "raised question embercommunityslackcom needhelp channel", "d": "10/2015"}, {"body": "understanding correctly information public may good demonstrate trying accomplish stackoverflow cross link maybe someone help", "d": "10/2015"}, {"body": "sorry wasting time thank", "d": "10/2015"}, {"body": "francisperp workaround using another route hook abort avoid infinite loop created combination queryparam change willtransition use see alternative implementation using hook locks may documentation concern case query param refresh willtransition used infinite loop created avoided using another hook abort transition eg", "d": "10/2015"}, {"body": "pixelhandler thanks guidance good know work however use case handling transitions hook application route bubbles active routes interact bubble many reasons implementing kind global transition block example actually hacked together solution use case involved overwriting part router prototype took hours spending much time router code seems need deep refactoring right way cause bug code overly stateful circular point functions return values may may registered recursive call abort set", "d": "10/2015"}, {"body": "wondering addressed bug nt think permission label one", "d": "10/2015"}, {"body": "samcic asked question emberdata andor needhelp channel also see jsbin examples catching error using", "d": "10/2015"}, {"body": "wanted add experiencing behaviour bug also appears reported point comment rwjblue", "d": "10/2015"}, {"body": "oh hey bandwidth afternoon let get", "d": "10/2015"}, {"body": "vatosteve would mind creating working example using", "d": "10/2015"}, {"body": "vvsalmin yes bug regression layout using another template working", "d": "10/2015"}, {"body": "vvsalmin guess chat last week slack rwjblue ideas determining behavior actually correct desired behavior", "d": "10/2015"}, {"body": "thanks answer found workaround slack extended component rather using dynamic template think issue still bug", "d": "10/2015"}, {"body": "yes dash last slash likely path take also original idea enabled corresponding check strengthened identified component name last likely considered purely namespace sorts unfortunately suspect would breaking change potentially worth warningdeprecating wycats rwjblue related component amp pods story input would appreciated", "d": "10/2015"}, {"body": "worth think would good tighten behavior deprecation period make changes needed also another side effect current check also valid components", "d": "10/2015"}, {"body": "confirmed running debug prod builds without minification running minified builds", "d": "10/2015"}, {"body": "ok tracked issue check see function contains attempting super wrap given method saves quite bit extra super wrapping functions need unfortunately number platforms support support calling attempt detect fall back always super wrap everything mode roughly code detect call get original source works perfectly development builds unfortunately minified take look minified source see note minifier stripped trailing semicolon function body attempting check sadly check still contains semicolon tldr super wrap every function uglified builds", "d": "10/2015"}, {"body": "suspect may related emberdata likely issue posted", "d": "10/2015"}, {"body": "new issue", "d": "10/2015"}, {"body": "seems working expected note example may write custom method", "d": "10/2015"}, {"body": "duggiefresh works examples described doc usecase work well", "d": "10/2015"}, {"body": "inclined think bug would expect following gt gt ensures funky acronyms work like becomes also activesupport underscore rails works question treat bugfix semver violation", "d": "10/2015"}, {"body": "stefanpenner seems ok means initialisms must greater chars get split via underscore common example might issue today returns suggestion would expect return", "d": "10/2015"}, {"body": "suggestion would expect return cc suggestion", "d": "10/2015"}, {"body": "rails problems personally prefer version ember underscore", "d": "10/2015"}, {"body": "underscore https gt strange dislike p", "d": "10/2015"}, {"body": "stefanpenner suggesting special case made", "d": "10/2015"}, {"body": "bcardarella think stefanpenner proposing underscores occur case changes changes https https underscore whereas https underscore would gt", "d": "10/2015"}, {"body": "unsure make change would make everyone happy break things also unsure specific proposed change though rlivsey said sounded pretty good think may warrant specific rfc walk various permutations", "d": "10/2015"}, {"body": "passing optional parser customize strategy sunday october robert jackson notifications githubcom wrote unsure make change would make everyone happy break things also unsure specific proposed change though rlivsey said sounded pretty good think may warrant specific rfc walk various permutations reply email directly view github brian cardarella ceo dockyard visit us call us dockyrd follow twitter follow us twitter", "d": "10/2015"}, {"body": "whoa sounds like bug nvda sure report even possible although work likely work around", "d": "10/2015"}, {"body": "wanted check significance comment actually removed nt serve purpose", "d": "10/2015"}, {"body": "sharadjay started using comments hold empty dynamic slots used use empty text nodes chrome bug", "d": "10/2015"}, {"body": "though maybe screen reader assuming firstchild option firstelementchild", "d": "10/2015"}, {"body": "krisselden yes issue way handle", "d": "10/2015"}, {"body": "please share reproduction seeplay without example would guess sort conditional listing options pretty common using prompts empty emit comment node thought without empty section nt render empty comment", "d": "10/2015"}, {"body": "rwjblue select components template causes need reproduce confirm sharadjay nt use select component use", "d": "10/2015"}, {"body": "krisselden last two stable releases ember include default select implementation would like confirm version ember select implementation actually used", "d": "10/2015"}, {"body": "rwjblue sounds good reason said confirm screenshot see emberselect class name know old select component block start options likely causing issue", "d": "10/2015"}, {"body": "gotcha yeah assumed related top prompt pretty common seems like issue easy work around using emberselect die horrible death", "d": "10/2015"}, {"body": "yes see good workaround thank krisselden", "d": "10/2015"}, {"body": "spying nt something support suspect wont fix", "d": "10/2015"}, {"body": "agreed davidcasagrande suggest simply using different parent class asserting samenamed method parent class called", "d": "10/2015"}, {"body": "behavior change introduced change causing issue spying prior versions value always function object called upstream function pr set upstream function directly means spy sinon adding replaced soon call function super wrapped pr fixed number issues much easier debug seems unlikely would revert behavior change", "d": "10/2015"}, {"body": "rwjblue pretty much assumed going looking changelog thx confirming mixonic solution makes sense def work use cases lingering concern behavior happening spyingstubbing class nt method defined guess user error haha would value added throwing warning user making unnecessary call", "d": "10/2015"}, {"body": "also worth noting also unobservable way basically accident implement userspace even observable", "d": "10/2015"}, {"body": "describe seems working expected large datasets maybe need use alternative data structure custom cp", "d": "10/2015"}, {"body": "ember twindle appears using ember feature worked properly sure get twindle use ember gt edit updated twindle fix error", "d": "10/2015"}, {"body": "looks like managed get use ember showing issue updated twindle sorry stupidity part", "d": "10/2015"}, {"body": "kilowhisky minor pedantic correction", "d": "10/2015"}, {"body": "correct", "d": "10/2015"}, {"body": "new records added model filter would run new record functionality longer part macros existing functionality riddled bugs primary goal feature maintain stable arrays view would nt entirely rerender glimmer provides much simpler model likely future utilizing microlibrary give people better tools work extremely large datasets", "d": "10/2015"}, {"body": "oh thought removed mean longer supported either ember wondering acceptable replacement actively filtering array", "d": "10/2015"}, {"body": "mean addarrayobserver longer supported either ember nope still oh thought storefilter removed computedfilter still around although performance characteristics different likely good large lists much better scenarios appear bug report longer would like recommend posting stackoverflow cross linking", "d": "10/2015"}, {"body": "prope embercomputed title get key return key nt valid syntax must either lt syntax lt syntax appears merged two", "d": "10/2015"}, {"body": "ohh shame ca nt note self nt try figure errors work haha thanks sorry", "d": "10/2015"}, {"body": "note self nt try figure errors work without beer", "d": "10/2015"}, {"body": "believe may better opened emberdata repo describe handle entirely data layer", "d": "10/2015"}, {"body": "oh bad", "d": "10/2015"}, {"body": "fabienbk problem project starts ends nt always obvious", "d": "10/2015"}, {"body": "rwjblue believe true input would welcome think discussed working agreed behavior intentional", "d": "10/2015"}, {"body": "entire point optional invoke long hand version work exactly used positional params using example one tests added invoking component three lines result exactly attrs example works properly today test added simply confirmation changes named version made using rest argument version exactly concept use positional params want use hash arguments", "d": "10/2015"}, {"body": "discussed working component agreed behavior intentional thinking discussion lead added assertions use hash argument named positional param assertion still desired behavior makes named rest versions api regard", "d": "10/2015"}, {"body": "sounds good", "d": "10/2015"}, {"body": "fix merged closing issue", "d": "10/2015"}, {"body": "thank reporting try dig tonight", "d": "10/2015"}, {"body": "likely issue", "d": "10/2015"}, {"body": "issue fixed issue caused id attributebindings", "d": "10/2015"}, {"body": "please share reproduction info reproduce", "d": "10/2015"}, {"body": "thank answering grabbed following file emberjs builds page embertemplatecompilerjs emberdebugjs emberdataminjs called exact order markup rest js indexhtml called markup three scripts use embercli starterkit way stripped code following minimum still get error lt gt welcome emberjs lt gt outlet app app emberapplicationcreate basic logging eg transitioned post logtransitions true append claimcheck app rootelement content router approuter emberrouterextend rooturl entschaedigungpruefenneu approutermap function routes appindexroute emberrouteextend model function return red yellow blue brown call rooturl get error hopefully enough help solve issue cheers morgan", "d": "10/2015"}, {"body": "morgaan bug ember may good idea start using ember cli soon created jsbin show setup content element well reopen approuter set rooturl see", "d": "10/2015"}, {"body": "hi thank feed back struggling bit newbie came across awesome resource rock roll emberjs book book using ember cli loving cheers morgan ps think close issue", "d": "10/2015"}, {"body": "bandwidth amidst north carolina rain weekend work", "d": "10/2015"}, {"body": "awesome thank please feel free ping slack questions", "d": "10/2015"}, {"body": "got progress hope pr end day tomorrow planning emberdebug class doc explanations new function something like", "d": "10/2015"}, {"body": "sounds great", "d": "10/2015"}, {"body": "api docs added new handlers deprecation guides added new properties required friends reviewed guides repo usage none ember inspector section talks deprecations linking back deprecation guide think still perfectly correct mixonic add issue guides repo fleshing process tackling deprecations", "d": "10/2015"}, {"body": "mixonic think issue resolved please confirmclose agree", "d": "10/2015"}, {"body": "toddjordan thanks much hand weekend really really appreciate back", "d": "10/2015"}, {"body": "happy help", "d": "10/2015"}, {"body": "aquamme seem documentation errors states indicates states intended support failed promises also indirectly suggests used explicitly transition error state either template code via transitionto attempting linkto transitionto error substate redirect one transition opinion necessarily happy path using error states route links error substates nt allowed would good throw error indicates may case alternative jsbin implementation error handling since specific documentation explicitly transition promise failure error states routes may want define routes error pages example router may define page error state another route could transition route code could transition route including linkto", "d": "10/2015"}, {"body": "also indirectly suggests used explicitly transition error state either template code via transitionto indirect suggestion nt notice smiley discovered error substates transitioned model provided eg also works linkto helper updated jsbin examples behavior manual transitions error substates intended feature descriptive error thrown model included attempting transitionlink error substate model optional manual transitions disallowed descriptive error thrown error substate manually transitionedlinked either way think good update guides document glad submit pr correct behavior determined alternative jsbin implementation error handling implement workaround drawback url updated reflect transition error route user refreshes shown error may longer relevant using built error substate instead would mean user could refresh brought back last known good position application flow point try", "d": "10/2015"}, {"body": "topaxi yeah seems like bug css class seems sticky html clicking links order red yellow blue class gone transition done right html red yellow blue", "d": "10/2015"}, {"body": "pixelhandler yes definitely gone transition", "d": "10/2015"}, {"body": "far tell based mdn article dom documentation valid value attribute guess kind coercion setter nt", "d": "10/2015"}, {"body": "submitted potential solution", "d": "10/2015"}, {"body": "think bug embercli special case application serializer", "d": "10/2015"}, {"body": "rbemis part emberqunit repo serializer associated model test serialization nt use embercli blueprint serializer test expects factory exist generated test case generated serializer test application default blueprint assumes related model serialize hence lookup model application nt exist appmodelsapplication module however tests application serialize wo nt need serialize application model change import quit instead emberquint best guess may want test application serializer assert type jsonapi bug ember embercli emberquint", "d": "10/2015"}, {"body": "deprecation guide still needed weekend", "d": "10/2015"}, {"body": "deprecation guide entries done calls updated show url following pr", "d": "10/2015"}, {"body": "closing believe items addressed mixonic please reopen see something missed", "d": "10/2015"}, {"body": "understand reason hooks attrs property docs intentional considered publicfinalized yet primarily usable without glimmercomponentangle bracket components using component life cycle hooks since post", "d": "10/2015"}, {"body": "solutions problem facing think real scenario still need share queryparams controllers", "d": "10/2015"}, {"body": "added list thanks", "d": "10/2015"}, {"body": "stefanpenner progress know got weakmap rfc pr unfortunately move issue resolved", "d": "10/2015"}, {"body": "vacation take look sunday feel free pester sunday p", "d": "10/2015"}, {"body": "hehe thank know million things plate happy help work want delegate seems weakmap may require low level emberjavascript knowledge nt possess", "d": "10/2015"}, {"body": "pr needs feature flagging public api cycles spare would push edge", "d": "10/2015"}, {"body": "shameless bump root cause issue customer reported us still would really love get fixed", "d": "10/2015"}, {"body": "take care backport nt time workmanw care submit pr backporting backburner", "d": "10/2015"}, {"body": "stefanpenner give little bit direction happy seems fixed backburner backburner seems pulled via bower pr simple updating bowerjson", "d": "10/2015"}, {"body": "pr simple updating bowerjson yup", "d": "10/2015"}, {"body": "fix back ported", "d": "10/2015"}, {"body": "noslouch could also try queue", "d": "10/2015"}, {"body": "exact issue issues inside initial load started getting error fine somehow query params persisted app behaves expected weird thing error phantom chrome", "d": "10/2015"}, {"body": "kmiyashiro exactly problem upgrading", "d": "10/2015"}, {"body": "btecu first two things seem like documentation things pr would welcome btecu last thing seems like legit bug nt know exactly work top head", "d": "10/2015"}, {"body": "understand hooks called bottom hooks called top making specific proof concept project way precisely reverse ie parent child child parent alternatively something like afterdestroy queue could get problem solved ideal", "d": "10/2015"}, {"body": "thanks indeed helps get working", "d": "10/2015"}, {"body": "came across issue need case css class applied change depending block", "d": "10/2015"}, {"body": "new ember spent last hour tracking one unsure recent convert angular used available right still sure actions feel mean nt even know search regardless adore framework coming angular everything feels well thought far consistent edit actions required post giving feedback", "d": "10/2015"}, {"body": "rwjblue morganick got bitten missunderstanding following correct though simplified guideline use form input component usecase vs observe values inputs checkboxes w actions keep clickevent updating checkbox checked property note observer checked fire checkbox checked property ca nt accessed also note binding way breaks typical checkbox toggling behaviour input types event supported embertextsupport otherwise also think change actions amp checkboxes section imo way register action handler access checkbox checked value reliably use form check action handler also noticed behave differently first one passes eventlistener second one nt intended", "d": "10/2015"}, {"body": "query params ember effectively broken confused ps canary subj title stable", "d": "10/2015"}, {"body": "issue", "d": "10/2015"}, {"body": "also problem browsers query params computed property getset specified", "d": "10/2015"}, {"body": "ran issue", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "came core team discussion initial default values query params always intended statics language nt give us ability express nt tests around using computed property nobody thought people would use way machty said honestly nt expect work might accident like understand using app basically using computed property way worked coincidentally cases change removed cases however using computed property way likely introducing insidious edgecasey bugs interactions query param controller value looked controller controller single instance see relevant code changes accept pr fixes also included enough tests demonstrating nt weird interactions query params controller query param property computed property could include next release people migrating would nt carry behavior definitely wo nt possible various upcoming router changes rlivsey solution allow people avoid", "d": "10/2015"}, {"body": "fair enough would good nice descriptive error message pointing people right direction amp making clear bug take stab shortly pointers advice detect cp used way would great", "d": "10/2015"}, {"body": "anyone interested tried basic example jsbin seems work fine", "d": "10/2015"}, {"body": "closing views deprecated yet look whether affects components well", "d": "10/2015"}, {"body": "added ability run performance tests multiple versions ember show graphs latest numbers complex list benchmark", "d": "10/2015"}, {"body": "gavinjoyce thank hard work emberperformance", "d": "10/2015"}, {"body": "minutes wasted issue silent error impossible find glad found issue end solution use dashes like stefanpenner stated", "d": "10/2015"}, {"body": "probably wise set failing tests order stimulate development solving issue", "d": "10/2015"}, {"body": "probably little late scenario works fine ember app", "d": "10/2015"}, {"body": "app grows becomes bigger bigger headache started manual binarysearch templates removing half time find source warning time consuming errorprone would also love update anyone way add context error", "d": "10/2015"}, {"body": "wkoffel stick breakpoint deprecate function called work back trace able find element causing", "d": "10/2015"}, {"body": "using backtrace worked splendidly none method names useful frames found function variable set information helped track problem thanks", "d": "10/2015"}, {"body": "one achieve result pre", "d": "10/2015"}, {"body": "support added embertesthelpers little back supports ember", "d": "10/2015"}, {"body": "rwjblue sadly writing acceptance tests thisregistry defined", "d": "10/2015"}, {"body": "rwjblue ran issue today component html page source painted elements within fo still svg change add components template amp fo rendered appears tag set component fo namespace never reset", "d": "10/2015"}, {"body": "also like weigh addition would great able pass simple use case would example filter bar multiple different options etc typically want clear currently way would would uhhhhh verbose could assign would help still redefine every query param ton duplication remember add new one rename one need go back clear link multiple clear links addchange would great could instead say know simply remove query params url", "d": "10/2015"}, {"body": "jfelchner agree verbose simply unsetting every query param null might unintended consequences especially reaching query params owned controller likely compromise find open new issue address close one fixed", "d": "10/2015"}, {"body": "literals added htmlbars working exactly sure version suspect fixed", "d": "10/2015"}, {"body": "resolved", "d": "10/2015"}, {"body": "way working around find performing asynchronous behavior outside transition ajax request use app code set promise properties application objects look tests like answer guides say async helpers aware wait asynchronous behavior within application making much easier write deterministic tests yet wait async behavior complete found reading source code would happy submit pr docs makes clear async helpers wait async behavior hope ideal solution ca nt write deterministic acceptance tests without solving", "d": "10/2015"}, {"body": "also curious published generic waiter nonajaxbased models fix acceptance testing emberfire emberpouch etc submitted pr wrap emberfire login process testaware seems like trying plug async holes onebyone may losing game nt really applicationlevel concern cases stefanpenner still think tracking promises returned action reasonably unlikely break anything sufficient cover manymost use cases may able take crack writing rfc next week", "d": "10/2015"}, {"body": "still think tracking promises returned action reasonably unlikely break anything sufficient cover manymost use cases yes possible potentially something support via addon start cut breaking may able take crack writing rfc next week", "d": "10/2015"}, {"body": "ran thanks ehntoo workaround", "d": "10/2015"}, {"body": "reemasaluja rwjblue fwiw think related case experienced issue updating backburnerjs seem resolve issue see emberjsemberjs", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "hello exact issue working sails backend using linkto data pages one come one linked data refresh page anyone find reason", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "rosshadden still stage many improvements made spec", "d": "10/2015"}, {"body": "rosshadden yes agree wycats push aspects spec benefit day day forward infact decorator spec largely championed wycats", "d": "10/2015"}, {"body": "kimroen move bit also parent route work expect", "d": "10/2015"}, {"body": "yes please", "d": "10/2015"}, {"body": "ran spent lot time get blank page error warning computed property used work lt breaks gt", "d": "10/2015"}, {"body": "stefanpenner like said inherits would nt make sense fulfill api highlighted original post imo violates inheritance guys happy discrepancy great otherwise please consider reopening issue confusing hell", "d": "10/2015"}, {"body": "discrepancy javascript accomplishes inheritance via two prototype chains class side instance side js function promisesubclass promisesubclassprototype objectcreate promiseprototype instance side thencatch promisesubclassproto promise class side resolverejectraceall objectsetprototypeof promisesubclass objectgetprototypeof promise class side resolverejectraceall sugars ultimately thing less syntax js class subclass extends promise unfortunately ember predates accomplishes exact js feature somewhat manually creating two first class prototype chains mixin class mixin instance semver allows platforms improve plan use platform provided machinery full example js emberobjectextend adetectinstance acreate true adetect acreate false adetect true b aextend bdetect false adetect b true adetectinstance bcreate true bdetectinstance bcreate", "d": "10/2015"}, {"body": "actually say believe demonstrates observable discrepancy given examples feel free point issues additional scenarios fit described model", "d": "10/2015"}, {"body": "stefanpenner really appreciate comprehensive answer however nt believe addresses inconsistency mentioned previously perfectly understand need two prototype chains consequence need two apis check inheritance class side instance side questions asked however like object least conceptually quote words class inherits mixin would make sense embraces api fullest extent would otherwise constitute violation contract set forth albeit conceptual seem case today provides following api provides following api notice signature changed accepting accepting inconsistency trying highlight would nt possible mixins classes implement following api", "d": "10/2015"}, {"body": "notice signature detect changed accepting instance accepting class inconsistency trying highlight signature changed example uses disambiguate two separate mixin hierarchies accepts object returns true object descendent given false would nt possible mixins classes implement following api mixins building block used implement classes specifically mixin concept construct implementation detail class note composition several mixin hierarchies analogy could edge vs polygon true related polygons composed edges edge concept multiple edges could composed create polygon relationship defines polygon look class coreobject today see many mixin describes relationship relationship essentially defines class although plausible consider mixins morphing something else unlikely pursue mixins ember exist largely due amp existing runtimes features landed continue land case need dual inheritance class side instance side userland super chains evaporate active aligning new features js ember someday hopefully sooner rather later remove parts ember changing works today ways continued alignment javascript likely great idea", "d": "10/2015"}, {"body": "stefanpenner understand concept still believe way internals laid preclude good public api remember ember users aware internals aware use mixins interfaces andor traits ember sets example etc let conclude rephrasing original request yet another form suppose achieve following without using private apis", "d": "10/2015"}, {"body": "seems case query params wo nt cached way expecting least prepared little quick demo show case checkout steps reproduce first need initialize query parameters route clicking set query params button take little bit time query param setup refresh route model delay hook simulate heavy http request make sure query changed try navigate child routes clicking child child links query param picked cache expected lets make transition route call used intentionally case change route query params clicking transition route different query button take time make sure route query params updated lets navigate child routes clicking child child links query param wo nt picked cache url wo nt contain query kind unexpected diving debug noticed query params change action called transition route step new query param cached old route sources tested verified canary version", "d": "10/2015"}, {"body": "ember piotrze solution almost worked use instead router code actions queryparamsdidchange function emberrunnext refresh", "d": "10/2015"}, {"body": "jamesarosen would great addition happy saw fix works boat", "d": "10/2015"}, {"body": "pretty old curious progress", "d": "10/2015"}, {"body": "stefanpenner weird problem workaround wo nt work app tried making twiddle must something specific debug call end code like function superfunction var func thisnextsuper var ret trouble ends undefined even workaround idea maybe fixed recent version hence works twiddle fwiw got work calling incredibly dirty edit might related change chance backporting nt realize choose dependency versions twiddle version works one nt", "d": "10/2015"}, {"body": "meirish nice one", "d": "10/2015"}, {"body": "wycats willing help bring hot reload embercli ecosystem would help revisit commit jan done today ember make happen", "d": "10/2015"}, {"title": "new feature attributes provide list classes given selector", "body": "first attempt contributing jquery apologies missed step read contribution guidelines like open discussion adding jqueryclasslist function attributes module assumed jquery function list classes given selector needed functionality morning stumbled upon stackoverflow post functionality would easy build believe would add value users whatever reason need loop classes held object questions would appropriate output given selector function return array classes attribute output array duplicates removed feeling would valuable duplicates user wants know classes fall selector doubt would using duplicate entries alternatively could use unique remove duplicate entries output sorted way functionality seem valuable", "num": "2681", "d": "10/2015"}, {"title": "target nt match elements initial page load chrome firefox", "body": "able reproduce issue basically selecting initial page load url contains document fragment fails select targeted element caused returning page load sometimes returns page load sizzle pipes selector produces incorrect results created codepen shows behavior please view debug mode document fragment", "num": "2679", "d": "10/2015"}, {"title": "accept http header", "body": "currently jqueryajax supports http status contain response contend http codes might might contain response body accept status body found responses codes jqueryajax expects content body throws exception trying parse undefined content data think additional http status codes included optionally response body depend header try parse data header set", "num": "2677", "d": "10/2015"}, {"title": "data feature detect use present", "body": "jsperf noticed much code often near top cpu time initialization hundreds thousands elements data initialized sometimes case using angular feature detecting presence using rather nonenumerable property function went like cpu time since overhead define property avoid trycatch codepath well", "num": "2676", "d": "10/2015"}, {"title": "load context", "body": "hello written ajax function learning ajax requests work obviously amazing features jqueryajax provides using one decent amount projects component enjoyed one wrote allowed load js particular context allowed write libraries loaded would attach scope ran making useful using third party libraries would possible add option provide another option eval js js used accomplish followed along lines know feasible jquery something jquery already api documentation says jquery evals global space", "num": "2674", "d": "10/2015"}, {"title": "compat ajax tests failing chrome", "body": "issue identified apparently resolved chrome passing invalid urls creates state exception thrown callback never invoked", "num": "2673", "d": "10/2015"}, {"title": "iframes refuse display still get load event", "body": "latest chrome firefox jquery see iframe loaded even though blocked see refused display frame set xframeoptions sameorigin yet see iframe element load way get notification error message iframe nt actually loading webapp may intelligently fallback opening new window setting toplevel window url", "num": "2672", "d": "10/2015"}, {"title": "elementoff mouseenter also removes mouseover events", "body": "hey guys asked question stackoverflow see found remove event function mouseenter event trasforms mouseover event element already mouseover event remove also code template found jquery eventremove function known issue event maybe bug", "num": "2670", "d": "10/2015"}, {"title": "jquery css api set times take effect", "body": "tried use css css set css styles found success settings know probably also set one property set parameter successful must set twice", "num": "2669", "d": "10/2015"}, {"title": "jquery html parser corrupts script content looks like html tags including strings", "body": "functions like even contains javascript content script looks like html tag modified undesirably eg used argument append suchlike produces alert produce example also see benign case replacement workaround possible route fix bug present jquery windows browsers tested ff chrome safari opera", "num": "2668", "d": "10/2015"}, {"title": "update eventwhich avoid deprecated properties", "body": "version master description eventwhich information deprecation please refer mdn js fiddle limited usefulness case", "num": "2667", "d": "10/2015"}, {"title": "please add releases repo", "body": "returns empty array use check github api retrieve information latest release buildenvironment checks wo nt make sence tags", "num": "2666", "d": "10/2015"}, {"title": "make jqueryisnumeric consistent", "body": "people understand math thing others asking actually number internal usage think choose one update documentation right inconsistent confusing confluence two", "num": "2662", "d": "10/2015"}, {"title": "change applicationxwwwformurlencoded", "body": "resurrects argument change currently always change encoded spaces plus sign correct behavior posted form data cases conversion moved done method post", "num": "2658", "d": "10/2015"}, {"title": "file size big", "body": "", "num": "2656", "d": "10/2015"}, {"title": "jquery stops", "body": "uri stop function b return h hndeferred complete reason object dont support property method jqueryminjs line symbol", "num": "2655", "d": "10/2015"}, {"title": "restore previous showhide behavior", "body": "", "num": "2654", "d": "10/2015"}, {"title": "provide slim custom build removing ajax effects cdn", "body": "", "num": "2653", "d": "10/2015"}, {"title": "map evil concat item translated array", "body": "take underscore map function comparison javascript map b c function item return item itemtouppercase res b b c c map b c function item return item itemtouppercase res b b c c see jquery extra operation concat function", "num": "2652", "d": "10/2015"}, {"title": "documentready waits images loaded async", "body": "load jquery dependent scripts async documentready event dependent scripts nt fire images finished loading demo setup ignore verbose head tag inline code yepnope loader later script tag loaded scripts async documentready callback fired seconds image body takes seconds load however load jquery sync script tag dependents documentready nt wait image download firing tested saw issue", "num": "2651", "d": "10/2015"}, {"title": "parsejson valueundefined", "body": "function parsejson check data undefined return undefined nothing", "num": "2650", "d": "10/2015"}, {"title": "nt work array stored object property", "body": "works", "num": "2649", "d": "10/2015"}, {"title": "prop tabindex returns wrong value jsbin example included", "body": "hello prop tabindex behaves differently jquery internet explorer used true least images dom nodes type nt attribute tabindex explicitly given please see also playground example changing url loaded jquery version see tabindex different vs changes attributesporpjs file prophook tabindex different current code line master stable show code prophooks tabindex follows looks like seen jquery compat alpha uses logic maybe would make sense move kind logic also jquery internet explorers still supprted least newer ones starting upwards best regards alexander", "num": "2647", "d": "10/2015"}, {"title": "building fails", "body": "trying build version understand old version trying make custom build build process fails following errors loading testjs tasks helpers error error module evals loading comparesizejs tasks helpers error typeerror read property undefined using node steps performed using grunt defined packagejson help appreciated btw running grunt verbose yields initializing commandline options verbose registering builtin tasks loading concatjs tasks helpers ok tasks concat helpers concat loading initjs tasks helpers ok tasks init helpers prompt promptforobj promptfor gitorigin githubweburl loading lintjs tasks helpers ok tasks lint helpers lint loading minjs tasks helpers ok tasks min helpers uglify gzip minmaxinfo loading miscjs tasks helpers ok helpers config json stripbanner filestripbanner filetemplate banner loading qunitjs tasks helpers ok tasks qunit helpers phantomjs loading serverjs tasks helpers ok tasks server loading testjs tasks helpers error error module evals error native object modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile loading watchjs tasks helpers ok tasks watch reading gruntjs config file ok reading distdestinationjson error reading jshintrc ok parsing jshintrc ok reading jshintrc ok reading srcjshintrc ok parsing srcjshintrc ok reading srcjshintrc ok reading testjshintrc ok parsing testjshintrc ok reading testjshintrc ok initializing config ok reading packagejson ok parsing packagejson ok registering gruntcomparesize local npm module tasks reading ok parsing ok loading comparesizejs tasks helpers error typeerror read property undefined objectmoduleexports loadtask arrayforeach native loadtasks tasktaskloadnpmtasks objectmoduleexports loadtask tasktaskinit objectgrunttasks registering gruntgitauthors local npm module tasks reading ok parsing ok loading gitauthorsjs tasks helpers ok tasks authors updateauthors loading gruntjs tasks helpers ok tasks default dev testswarm selector custom build submodules dist tasks specified running default tasks running tasks default running default task task comparesize found use force continue aborted due warnings", "num": "2646", "d": "10/2015"}, {"title": "add tests new symbol entity", "body": "least may may include tests shimmed see discussion", "num": "2645", "d": "10/2015"}, {"title": "consistent swarm failures", "body": "umbrella ticket x module chrome x module safari x module waiting sizzle update cc x module caused", "num": "2644", "d": "10/2015"}, {"title": "typeerror read property open undefined", "body": "recently updated node version also updated jsdom jquery nodemodules node program stopped working getting type error read property open undefined jquery nodemodule jsdom latest available versions sample code program look like ajax call failing working upgrade working anymore due error", "num": "2642", "d": "10/2015"}, {"title": "wrap element created", "body": "hi wondering code snippet work expected moment returns words wrap nt apply", "num": "2640", "d": "10/2015"}, {"title": "return value method", "body": "run argument return empty array run argument return first element problem caused different behavior javascript function happen nt know whether want maybe confused users issue sry bother ignore", "num": "2639", "d": "10/2015"}, {"title": "document ready wait event firing need advice", "body": "cross posting issue basically need handler attached document ready called custom event triggered", "num": "2638", "d": "10/2015"}, {"title": "parsexml work activex blocked via gpo", "body": "hi issue described shows important part jquery code problem since microsoftxmldom available fails parse possible avoid using activex maybe using something like", "num": "2637", "d": "10/2015"}, {"title": "add tests contextmenu event", "body": "alias since fix object", "num": "2636", "d": "10/2015"}, {"title": "etarget eventdelegation", "body": "using selectors like impression always element selected given selector case intended behaviour nested element also provided supposed use needs repeat selector cases get element initally wanted selected see fiddle", "num": "2635", "d": "10/2015"}, {"title": "param undefined throws read property jquery undefined", "body": "using jquery chrome sure bug nice feature try something throws error mainly happens let say passing parameters function sometimes nt wantneed pass function example parameterstopass param parameterstopass example lt error easiest fix simply", "num": "2633", "d": "10/2015"}, {"title": "xhrgetallresponseheaders get nonexistent header", "body": "", "num": "2632", "d": "10/2015"}, {"title": "wellformed error firefox", "body": "hello gents getting wellformed errors firefox web developer tools console using parsexml latest jquery error logged jquery firefox tested developer edition build also able isolate error occurs logged searching nodes find copied sample code demo found throwing exception replaced src code throwing error see console file throwing error file throwing error environment windows latest updates firefox jquery need information happy assist regards", "num": "2631", "d": "10/2015"}, {"title": "guard jqueryextend nonobject arguments especially strings", "body": "hi calling extend method passing string argument string split character positions added property keys corresponding characters values since docs present function way mix objects would never expect kind behaviour passing nonobject argument always happen added sort check calling extend would expect ignoredskipped eg adding integer reflected result extend operation course sell feature rather say cause hard spot felix", "num": "2629", "d": "10/2015"}, {"title": "hasclass working svg", "body": "also work works", "num": "2628", "d": "10/2015"}, {"title": "attribute selector add operand evaluating attribute values", "body": "message typecomment typelink typealert perfomsomething would look like message typecommentlinkalert dosomething message type comment link alert dosomething would also awesome working attribute filters well logs dataiderrwarnnotice dosomething item dataitemkeywordpromowinter dosomething", "num": "2626", "d": "10/2015"}, {"body": "wiki description process use decide whether add feature criteria mind nt think add feature like directly jquery core would easy implement via plugin way people want use people nt need pay increased file size", "d": "10/2015"}, {"body": "nt work domcontentloaded fired would nt surprise situations seem like browser bugs reported chrome firefox", "d": "10/2015"}, {"body": "looks like browser bug sizzle test bypass qsa", "d": "10/2015"}, {"body": "nt work domcontentloaded fired would nt surprise testing domcontentloaded early page load would work time inconsistent reported chrome firefox enough time post bug report running things nt yet chance sort post issue ff chrome looking jquery source recall seeing buggyqsa check could used skip nt yet time mock possible fix", "d": "10/2015"}, {"body": "seeing difference chrome firefox css former nt apply cascaded rules page load latter inconsistency makes nervous applying global changes sizzle", "d": "10/2015"}, {"body": "enshrine solution hard support future definitely worth kicking browser guys get agree standard behavior perhaps polyfill get page fixing sizzle seems risky", "d": "10/2015"}, {"body": "guess confused would ever match anything point page lifecycle get node may exist dom points node exists compelling reason would select element risk enforcing behavior", "d": "10/2015"}, {"body": "zzzzbov inconsistency browsers believe first reaction possibly causes disagreement spec interpreted happens lot confusion implementation selector neglected still revised outlying circumstances match sizzle enforce behavior may become invalid future", "d": "10/2015"}, {"body": "said safely say browsers wrong spec clear enough may able bypass qsa rely dom ready sizzle", "d": "10/2015"}, {"body": "seems like good soon domcontentloaded fires could buggyqsa test would good find browsers currently disagree wonder qsa implementation also problems hashchange events", "d": "10/2015"}, {"body": "spec found far searching bit awkward finding resources challenging see reason ca nt resolve element soon element exists within dom missing something", "d": "10/2015"}, {"body": "zzzzbov disagreeing fact expect fixed browser updates right chrome cascade styles page loaded nt want jump gun", "d": "10/2015"}, {"body": "opened bugs chromium firefox see goes", "d": "10/2015"}, {"body": "response headers say contenttype json way get error case response incorrect since response body contain json", "d": "10/2015"}, {"body": "thing happens content type header", "d": "10/2015"}, {"body": "tries interpret plain text json time think happening force incorrect content type provide test case", "d": "10/2015"}, {"body": "using backbone case request fetching data first call put server action queue process asynchronously processed straight awaya return status body send request interval eventually returns response body backbone method wraps method wrapper method", "d": "10/2015"}, {"body": "lkay see parameters passed later question stands params pass force get error backend returns header response nt body", "d": "10/2015"}, {"body": "lkay still extract test case want us anything ca nt debug whole backbone app put breakpoint rogue call see parameters passed see headers get reponse test case look", "d": "10/2015"}, {"body": "custom wrapper make promise compatible nt matter get result use jquery methods javascript class ajaxerror extends error constructor jqxhr textstatus errorthrown super thisname ajaxerror thismessage textstatus thisjqxhr jqxhr thiserrorthrown errorthrown function decorateasjquery promise promisedone fn gt return decorateasjquery promisethen fn promisefail fn gt return decorateasjquery promisethen null fn promisecomplete fn gt return decorateasjquery promisethen fn fn return promise let jqajax ajax ajax function ajax let jqpromise jqajaxapply arguments let promise new promise resolve reject gt jqpromisethen data gt resolve data jqxhr textstatus errorthrown gt reject new ajaxerror jqxhr textstatus errorthrown return decorateasjquery promise code basic looks like request headers response headers", "d": "10/2015"}, {"body": "code snippet still nt know passed need know", "d": "10/2015"}, {"body": "object sent method looks like backbone forcefully setting change seems work", "d": "10/2015"}, {"body": "great thanks letting us know", "d": "10/2015"}, {"body": "particular jsperf looks bogus likely symbol case completely elided would nt surprise betterfaster solution though know dog path taking though sounds like animations dom elements would idea replace plain assignment dom elements well use everything else whenever available wondering get rid cases based supported browsers whether add another one", "d": "10/2015"}, {"body": "current data code different jquery particular trycatch around defineproperties need check also dmethvin pointed test case bogus symbol assignment gets jitted away modern browsers need create patched jquery version amp compare method invocations see real difference said seems use case weakmap symbol rwaldron wrote whole code weakmaps mind jdalton experiments lodash might suggest could make data module faster need check", "d": "10/2015"}, {"body": "sweet checked master filing nt realize define property path eliminated dom nodes along trycatch essentially equivalent symbol path since point property access weakmaps optimized point usable yet recall someone perf tests back pretty slow hopefully fixed maybe jdalton knows", "d": "10/2015"}, {"body": "weak maps bit touchy repeated use like microbenchmark still cause prolonged gc pauses heuristic place short circuit use get hot use nt critical machinery performance optimization store metadata function wrappers avoid repeated wrappings anything symbols weak maps likely faster use worst switched weak maps less expensive", "d": "10/2015"}, {"body": "seems like nt really need weakmap okay data garbagecollected element goes scope attached via either plain property symbol would advantage", "d": "10/2015"}, {"body": "dmethvin ca nt use regular assignment nonnodes would observable much weakmaps fit main use case jquery data module nodes use regular assignment right maybe nt need anything currently need nonweakmap path objects anyway since primary use case might much", "d": "10/2015"}, {"body": "dmethvin yah speaking weak maps mentioned thread nt giving endorsement push used jquery advantage weak maps side effects element bolted property", "d": "10/2015"}, {"body": "okay wondering missed something could go completely one particular way would improve consistency seems like could possible solutions performance standpoint getting rid really common element case seems like biggest win got", "d": "10/2015"}, {"body": "yep everything looks sweet checked master filing bad want still use symbol since get closer truly hiding properties nodes would avoid defineproperty path normal objects would pretty much perf impact one way common case data elements", "d": "10/2015"}, {"body": "sorry interface already bloated trying restrain adding options besides pointed could easily done user land already", "d": "10/2015"}, {"body": "good point thought might ask thanks", "d": "10/2015"}, {"body": "sure harm ask", "d": "10/2015"}, {"body": "closed", "d": "10/2015"}, {"body": "console message says frame nt displayed nt say nt loaded case browser firing load event deliver nt seem problem jquery howto question might able get solution stackoverflow", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "use object parameter please look help jquery forums stack overflow though place report bugs", "d": "10/2015"}, {"body": "thanks report related nearduplicate possible address end jqueryhtmlprefilter implementation pr would good starting point still sure putting something like official build though", "d": "10/2015"}, {"body": "yes bug seems fix considered big ought possible exclude content within without much regex", "d": "10/2015"}, {"body": "read content within script", "d": "10/2015"}, {"body": "definitely unintended behavior screwing case nt necessarily bad putting executable scripts html something love remove least make much difficult security implications way easy inject attacker content scripts think need reinforce advice bad practice use example one place fails", "d": "10/2015"}, {"body": "ought possible exclude content within without much regex though would probably update first part per change maximum correctness", "d": "10/2015"}, {"body": "fwiw use case found issue obfuscation contact details using ajax javascript converts sequences apparently random characters back original human readable form nt see anything particularly bad practice injecting content dom come trusted source via ajax may design contain script generally however ca nt think good case encryption sequences string literals modified unexpectedly would anything benign eg ajaxreturned script also contains dom manipulation code equivalent plain javascript xml special characters used though nt know frameworks also aware case valid javascript outside string literal would concur adding something documentation additional notes begin design jquery constructor method accepts html string would resolve ticket perhaps also note html contains script string literals cryptographic functions unexpected results may occur eg become also design jquery intended lightweight expected issue genuine situations something like would saved several hours debugging already scanned docs scoured tinternet see might missing something way etc work nt know suggest workaround jsfiddle updated working fine case nt looked whether things like issues hackery types seeing additional note limitations may seek ways breaking probably good thing", "d": "10/2015"}, {"body": "nt see anything particularly bad practice injecting content dom come trusted source via ajax may design contain script generally content security policy standpoint common disable inline scripts policy common attack vector problem really hard web developers strongly assert content trusted source many ways mess nt looked whether things like issues characters inside attribute htmlencoded building title dynamically example many ways mess mentioned could result xss", "d": "10/2015"}, {"body": "first point rhetorically google search results page full inline script second bad example trying come possible related failures failed would like move documentation issue nt seem able", "d": "10/2015"}, {"body": "second bad example trying come possible related failures failed valid would like move documentation issue nt seem able thanks", "d": "10/2015"}, {"body": "put together example docs specifically issue see", "d": "10/2015"}, {"body": "thanks input issue closed like point js clientside security issue inline js must security breach somewhere else really looking", "d": "10/2015"}, {"body": "actually also deprecated documented need provide support used provide support already provided natively", "d": "10/2015"}, {"body": "suspect report due console messages firefox lazyeval solution would fix since would look properties tried look", "d": "10/2015"}, {"body": "nt due console messages firefox result khigakisugar realizing deprecated looking better solution dom method marked deprecated listed deprecated imho would helpful us potential future users would deprecation notice jquery web page text recommending something use instead nt really viable option us least without manually falling back something else chrome safari support finished", "d": "10/2015"}, {"body": "unfortunately made big mess mouse buttons key codes course decade lots deprecated properties different values order get consistent result across platforms jquery supported years starting firefox settled normalizing sure far along browsers supporting example keys standard always possible get raw event values turns finally implemented probably best path users take use need jquery normalization leave us timmywil mentioned lazy eval improved documentation covered created ticket api repo ideas wording could test support new standard properties would awesome", "d": "10/2015"}, {"body": "checks wo nt make sence tags exactly trying ca nt tags", "d": "10/2015"}, {"body": "check get list tags nt information provided one latest stable ok parse name hope alpha beta means stable even trust order given json may could change time would lot easier secure releases provide additional information releasedate especially releasedate one part use show buildenvironment long nt change since released hope valid reasonable usecase", "d": "10/2015"}, {"body": "check get list tags nt information provided one latest stable releases api nt actually tell either project maintainers mark release latest github make guess based purely date means patch release older version released recently current stable version marked latest rely version sorting instead ok parse name hope alpha beta means stable hope guarantee see hyphen know prerelease even trust order given json may could change time nope nt trust order apis need sort based version number semver defines clear specification would lot easier secure releases provide additional information releasedate especially releasedate one part use show buildenvironment long nt change since released information easily found today following link provided value tag hope valid reasonable usecase certainly reasonable usecase information want already available today releases jquery", "d": "10/2015"}, {"body": "thank scottgonzalez explanation", "d": "10/2015"}, {"body": "dmethvin propose allowing input returning true strings numbers whether primitive object numeric", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "added behavior change tag since one strange case custom longer handle mentioned release notes", "d": "10/2015"}, {"body": "conversion moved done method post body", "d": "10/2015"}, {"body": "note form submission converts spaces plus signs applicationxwwwformurlencoded encoding used http get post logic note also decoding algorithm explicitly replaces plus signs spaces immediately unescaping percentescapes means treats identically ca nt limit conversion specifically percentencoding would reasonable approximation", "d": "10/2015"}, {"body": "done hard work set straight details grab ticket thanks", "d": "10/2015"}, {"body": "welcome pull requests decrease size preserving functionality relevant performance", "d": "10/2015"}, {"body": "thanks opening issue please ask support forums jquery irc channel", "d": "10/2015"}, {"body": "\u0437\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435 timmy willison \u0432\u044b \u043f\u0438\u0441\u0430\u043b\u0438 \u043e\u043a\u0442\u044f\u0431\u0440\u044f \u0433 thanks opening issue please ask support forumsor jquery irc channel realy sorry spend time nt know jq hasnt support ie lt included demo module browser mark \u0441 \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u0435\u043c victor blood masm mailto dev masmelcomru", "d": "10/2015"}, {"body": "need remember reclose solved tickets wo nt fix means removing milestones", "d": "10/2015"}, {"body": "sounds like markelog wants take alright note restoring old behavior still want make couple changes cache inline display values cache display value set user ensure initially trying show elements removing display value means providing partial fix responsive issue", "d": "10/2015"}, {"body": "fine yielding make mistake monster like see following tables filled agreed upon fixed asserted pr expected inline nonanimated initially initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline cascade inline cascade inline initially non non initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline default inline default inline cascade inline cascade inline cascade inline cascade inline animated given following helpers js function toggle callback return jquery toggle callback function partial callback return togglecall delay simultaneous queue simultaneous function next callback callbackcall next dequeue simultaneous initially initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline cascade inline cascade inline initially non non initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline default inline default inline cascade inline cascade inline cascade inline cascade inline think find restoring old behavior nt really help still want markelog", "d": "10/2015"}, {"body": "sure lot surprises filling tables think comment might good start blog post sort documentation page think step step basis first revert fill tables apply new changes mentioned timmywil fill tables compare find possible improvements apply improvements create proposal participate existing one dom api improve current situation cc aurelioderosa could became documentation ticket mzgol dom api proposal", "d": "10/2015"}, {"body": "also think restoring previous behaviour essential final regardless possible mess", "d": "10/2015"}, {"body": "think comment might good start blog post sort documentation page yeah need put somewhere people see hairy smile", "d": "10/2015"}, {"body": "first revert fill tables apply new changes mentioned timmywil fill tables compare find possible improvements apply improvements exactly recommending need fill tables changing anything point implementing behavior ca nt define also tackling reverting old code tests closer mark lot messier", "d": "10/2015"}, {"body": "exactly recommending need fill tables changing anything well first step nt implement yet anything reverting behaviour already defined docs filling tables means defining sideeffects cases nt strictly necessary apis one example roughly equivalent calling css display block except display property restored whatever initially element display value inline hidden shown displayed inline users fine current behaviour two exceptions since received two complains logic slow performance cases inability change previously caches display environment adaptive styles besides exceptions recognize inconsistencies filling tables try fix otherwise instead reverting might end implementing something else bigger discussion whole different kind work think nt try tackle whole thing one effort gradually evaluating every step go along try different tactics", "d": "10/2015"}, {"body": "seems like filling table would good thing though let define want code see implement problem saying nt care supported cells either let make conscious choice accidental one", "d": "10/2015"}, {"body": "clarify think important fill document", "d": "10/2015"}, {"body": "filled table nonanimated elements rather start half scenarios tackling whole thing see", "d": "10/2015"}, {"body": "cool would propose though put somewhere test directive interactive pagetests", "d": "10/2015"}, {"body": "conclusion take btw something unexpectedincorrectinconsistent nt see anything ambiguous", "d": "10/2015"}, {"body": "sure asking table values expect line implementation existed jquery", "d": "10/2015"}, {"body": "nt think closer master recommending reverting commits commented gist one suggested revision", "d": "10/2015"}, {"body": "also agree scottgonzalez think implementation addresses nonanimated first see", "d": "10/2015"}, {"body": "bah stupid lack notification gists going put table comment figured page would get crazy long people started anyway replied comments", "d": "10/2015"}, {"body": "scottgonzalez oh thought posting results reverted previous behaviour", "d": "10/2015"}, {"body": "want google spreadsheet editing comment seems best collaborative population", "d": "10/2015"}, {"body": "editing comment also nt notify tho spreadsheet", "d": "10/2015"}, {"body": "nt edit table makes hard actually discuss changes see going spreadsheet actually comment individual fields would great", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "filled doc table", "d": "10/2015"}, {"body": "docs say returned array flattened resulting array", "d": "10/2015"}, {"body": "dup noticed nt ticket assigned milestone timmywil listed owner go", "d": "10/2015"}, {"body": "thank opening issue please ask support forums jquery irc channel flesh issue provide small test case", "d": "10/2015"}, {"body": "tsarma please try one simply get javascript support associative array hope help", "d": "10/2015"}, {"body": "right risan says second case array array elements two extra properties added jquery sees array property since elements added array length working way javascript array example", "d": "10/2015"}, {"body": "thank risan dmethvin explainations regarding javascript supporting associative array case added two extra properties existing empty array object according docs reads added properties empty object case array nt worked", "d": "10/2015"}, {"body": "object numeric properties enumerated plain enumerable properties including prototype ones enumerated ca nt please follow general programming forum stackoverflow questions thanks", "d": "10/2015"}, {"body": "thanks report jquery compat continuation jquery line nothing changed jquery continuation jquery line code seem code still needed main branch ie still broken fortunately seems fixed edge likely fix jquery many bug fixes people would like fixed ca nt backport good fix", "d": "10/2015"}, {"body": "aschmalzhaf would like take shot pr jquery compat alpha code lies branch jquery alpha code lies need backport code branch srcattributespropjs file", "d": "10/2015"}, {"body": "nt know specific causesolution things try try tag changes made fix build issues also might need older nodenpm running something around time gruntcomparesize task skipped essential", "d": "10/2015"}, {"body": "happy assist issue since nt pertain current jquery closing ticket interest triage please try dave suggestion let us know worked", "d": "10/2015"}, {"body": "dmethvin thanks suggestion confirm version builds using node keeps complaining important indeed", "d": "10/2015"}, {"body": "chrome one tracked", "d": "10/2015"}, {"body": "updated thanks", "d": "10/2015"}, {"body": "resolved dropped safari testing updated original post", "d": "10/2015"}, {"body": "changed list checkboxes easier set resolved", "d": "10/2015"}, {"body": "mzgol cool", "d": "10/2015"}, {"body": "closed since landed", "d": "10/2015"}, {"body": "code always used api create instance see promisesaplusadapterjs file example edit ok see docs could check problem reproducible jquery", "d": "10/2015"}, {"body": "ah ok jquery using global object present global case robust nodejsdom testing jquery currently alpha never assume browser globals available globals always take work better released confirmed script works fine jquery alpha add one line script requiring", "d": "10/2015"}, {"body": "yes look like working add var signalr require signalr javascript file getting undefined error says jquery defined sure ajax worked though ca nt load like way working", "d": "10/2015"}, {"body": "need report issues plugin author note plugins might look others might need set", "d": "10/2015"}, {"body": "jquerywrap return wrapped elements method returns original set elements chaining purposes", "d": "10/2015"}, {"body": "yup works expected see console element wrapped correctly", "d": "10/2015"}, {"body": "documents argument must integer behavior input unconstrained", "d": "10/2015"}, {"body": "need put code want invoked need wait particular event put code event handler", "d": "10/2015"}, {"body": "think dtracers looking way prevent ready happening entire page web components initialized would really bad idea since would hurt performance jquery code main page reaching state wcs page needs know wc state code rewritten however offer hope use please followup stackoverflow though since bug report already provide footgun want", "d": "10/2015"}, {"body": "dmethvin actually asking thanks library using animations set code ready custom elements set attaches handlers animations work work chrome polyfills mainly happens using html imports", "d": "10/2015"}, {"body": "untested work pretty much replace ready promise union old ready promise another promise resolved custom event triggered", "d": "10/2015"}, {"body": "thanks report polyfill included jquery pick assume write perspective user goes site relies activex disabled see fail included default mean every jquery user download kb minifying amp gzipping polyfill nt need seems lot especially nt think lot users disabling activex mostly enterprise guess leave open others comment nt think note loses upstream support jan migrate newer browser asap even means using enterprise mode", "d": "10/2015"}, {"body": "hi yea enterprise unfortunately cant tell customers upgrade eg embedded scenarios xp still used lot said something download get add deployment addition jquery work activex disabled thanks", "d": "10/2015"}, {"body": "looked project linked ie xmldom nt tested speccompliant able include jquery please let us know works problems approach", "d": "10/2015"}, {"body": "hi ive tried run xmldom jquery picks probably contains performance problems site becomes unresponsive right clicking right im looking alternative lib seems nt many choose", "d": "10/2015"}, {"body": "going close since much find working polyfill picked automatically write comment specific problems like polyfill picked etc reopen", "d": "10/2015"}, {"body": "probably intended behaviour useful cases know exact target element use get linkelement jsfiddle", "d": "10/2015"}, {"body": "yes actual target need know event handled use", "d": "10/2015"}, {"body": "thanks report expects object passing unsupported treat feature request leave open others voice opinions recently made amp accept input opposed treating lightly determine though many methods would get similar treatment", "d": "10/2015"}, {"body": "thanks yeah figured nice feature wanted get incase one ran", "d": "10/2015"}, {"body": "really easy fix caller side though know value may undefined use trick define empty string put bunch inside jquery good chance mask errors make api harder people use", "d": "10/2015"}, {"body": "dmethvin could say though yet accepted treat amp differently", "d": "10/2015"}, {"body": "agree nt regressions undocumented behavior nt think would changed least would nt favor smile", "d": "10/2015"}, {"body": "tend think consistency trumps history matter favor gracefully handling nulundefined case", "d": "10/2015"}, {"body": "suggestion handle creating bigger ticket review apis allow nullundefined possible update docs well apis around almost decade without someone needing concerned moving yakshaving territory much else", "d": "10/2015"}, {"body": "fine ticket handling param nullundefined wait bug reports thinking ones", "d": "10/2015"}, {"body": "treat breaking change new feature latter case could moved rather add new issues milestone point", "d": "10/2015"}, {"body": "definitely feature since talking expanding signature", "d": "10/2015"}, {"body": "ok milestone added", "d": "10/2015"}, {"body": "ok see cache", "d": "10/2015"}, {"body": "almost certain duplicate please reopen problem also manifests git build alpha", "d": "10/2015"}, {"body": "alpha working fine", "d": "10/2015"}, {"body": "thanks report however exactly handles strings try modern browser nt want deviate standard needs stay want changed need convince ecmascript standards committee", "d": "10/2015"}, {"body": "hi mzgol however exactly objectassign handles strings thanks reference want changed need convince ecmascript standards committee sure felix", "d": "10/2015"}, {"body": "settle target sources always boxed via toobject see amp nonnegotiable review toobject see following entry table argument type result string return new string object whose stringdata internal slot set value argument see description string objects code terms", "d": "10/2015"}, {"body": "thanks explanation rwaldron regard plain jsecmascript perspective makes lot sense guys certainly aqcuainted js saying working jquery reading api docs function requires objects arguments string naturally thought object js world expected ignored jquery often understood abstractionsimplification plain js thought would responsible mention function result potential surprise api users also understand mzgol argument conform standard regards felix", "d": "10/2015"}, {"body": "expected ignored sure mean expect invalid api calls essentially noop nt documented happens call jquery api arguments behavior definition undefined", "d": "10/2015"}, {"body": "dmethvin sure mean expect invalid api calls essentially noop nt documented happens call jquery api arguments behavior definition undefined know outcome defined passing invalid arguments simply stated slicing string adding character indeces properties probably least unadvanced api users expect would imo less problematic simply ignore argument case personal opinion understood contra arguments want offend anyone feel free ignore thread", "d": "10/2015"}, {"body": "duplicate fixed jquery please always check bug exists latest development version ie reporting note though jquery nt generally support svg added class support since many people asked", "d": "10/2015"}, {"body": "thank suggestion wo nt adding selector extensions jquery", "d": "10/2015"}, {"body": "code comment says ff meanwhile throws frame elements support mention ff possible bug fixed sometime ff might work data uri still throw content fetched remotely", "d": "10/2015"}, {"body": "nt getting proper window object like proposed better", "d": "10/2015"}, {"body": "still explanation works mentioned settimeout workaround", "d": "10/2015"}, {"body": "guess mostly likely two windows separate threads window action happens synchronously respect code otherwise", "d": "10/2015"}, {"body": "verified safari instance browserstack provided faulty includes newer webkit version might wait fix happen accepting broken support test result redisable safari testing", "d": "10/2015"}, {"body": "decided drop safari testing problem going away still test ios", "d": "10/2015"}, {"body": "removing milestone since really fixed anything", "d": "10/2015"}, {"body": "reference jsfiddle ie seems stall forloop append function called even exiting loop execute html function looked append culprit behind performance deficit seemed lie either dommanip function native appendchild javascript function fixing dommanip function seems unlikely might affect parts code also use fixing appendchild impossible perhaps rest would like chip workaround", "d": "10/2015"}, {"body": "seeing similar performance issue regarding appendchild adding lot ok slow takes minutes ie edge pathetically slow case compared chrome firefox", "d": "10/2015"}, {"body": "something jquery performance issue native nothing suggest building html first one call", "d": "10/2015"}, {"body": "native appendchild chiming report left possibility open appendchild ieedge appendchild slow need hacks work around kind deficiencies tue oct pm timmy willison notifications githubcom wrote something jquery performance issue native appendchild nothing suggest building html first one call innerhtml reply email directly view github", "d": "10/2015"}, {"body": "marcelammerlaan perf problem already reported ie dev team", "d": "10/2015"}, {"body": "closing issue nt seem anything jquery please report problem edge team jdalton", "d": "10/2015"}, {"body": "thanks ping yep aware performance issue patrickkettner", "d": "10/2015"}, {"body": "feedback left uservoice seem connect ms connect", "d": "10/2015"}, {"body": "mzgol going take one jqsummit project", "d": "10/2015"}, {"body": "mzgol timmywil could confirm", "d": "10/2015"}, {"body": "works windows", "d": "10/2015"}, {"body": "test case", "d": "10/2015"}, {"body": "okay gon na close honggook find consistent way reproducing please ping us", "d": "10/2015"}, {"body": "message printed console run test case", "d": "10/2015"}, {"body": "added needs review label discuss meeting sounds like bug imo fix", "d": "10/2015"}, {"body": "cc jaubourg", "d": "10/2015"}, {"body": "top hat say replacing trick", "d": "10/2015"}, {"body": "aam types well", "d": "10/2015"}, {"body": "aam types well would nt catch stuff like anyway need make sure nt catch xml part word ensures datatype detection regexps follow pattern", "d": "10/2015"}, {"body": "longer necessary one jquery time released", "d": "10/2015"}, {"body": "also worth noting issue window jquery collection called currently breaks jqueryui code fixed master branch", "d": "10/2015"}, {"body": "patrickording landed fix would mind testing", "d": "10/2015"}, {"body": "homakov believe mitigate would mind testing", "d": "10/2015"}, {"body": "nt work edge markelog fixed", "d": "10/2015"}, {"body": "timmywil since fixed nt plan compat anymore closing reopen disagree", "d": "10/2015"}, {"body": "fixed verify works zba latest version", "d": "10/2015"}, {"body": "pretty sure fixed please let us know find otherwise", "d": "10/2015"}, {"body": "hey could elaborate expect regarding ishidden less hiddenvisibleselectors know solution efficient like tackle issue", "d": "10/2015"}, {"body": "care performance compressed size functionality trumps propose moving logic updating hiddenvisibleselectors", "d": "10/2015"}, {"body": "alright wanted know understand care performance size nt sure use efficient combination contains offsetwidthoffsetheight getclientrects hopefully omits former matches meant figure reuse hiddenvisibleselectors", "d": "10/2015"}, {"body": "also would mind providing perf test", "d": "10/2015"}, {"body": "markelog sure could point somewhere figure jsperf", "d": "10/2015"}, {"body": "avgp yes good starting point", "d": "10/2015"}, {"body": "like take opportunity say thanks entire rest jquery community helpful friendly fast lt", "d": "10/2015"}, {"body": "still need ticket nothing else side eg milestone seems wrong", "d": "10/2015"}, {"body": "well still works correctly edge ca nt check might come different way solve leave remainder us bug edge ppl maybe jdalton could shade light like issue different solution overlooked whenever solved soon edge end", "d": "10/2015"}, {"body": "yes keeping milestone creates impression work really wer trying lower number currently like least remove milestone", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "looked nt come tiny snippet nt require inserting dom keep kicking around", "d": "10/2015"}, {"body": "ticket inactive quite closing", "d": "10/2015"}, {"body": "still see problem describe also newer edge nt something jquery work around easily though quickest workaround app level would compare actual text placeholder text remove match", "d": "10/2015"}, {"body": "nobody op able reproduce", "d": "10/2015"}, {"body": "think resolved nt jquery jqueryfixable issue close", "d": "10/2015"}, {"body": "nt heard back closing need test case use case", "d": "10/2015"}, {"body": "thank problem looking hour found solved finally", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "pull contributing trying avoid fair hold someone else may want implement time apologies", "d": "10/2015"}, {"body": "thanks letting us know happens still bunch questions pr anyway nt think add feature agree", "d": "10/2015"}, {"body": "mean jquery actually finally promisea implementation", "d": "10/2015"}, {"body": "yanickrochon yup already available test jquery amp jquery compat latter one need support issue testing real browsers far testing node jsdom", "d": "10/2015"}, {"body": "timmywil please remember remove milestone amp add wontfix label closing bug wo nt fix", "d": "10/2015"}, {"body": "dmethvin sum thinking could check interactive long use scroll hack determine interactive supported", "d": "10/2015"}, {"body": "even nicer exists assume allow fire versions ie nt work properly cases allow interactive", "d": "10/2015"}, {"body": "original author interactive check gotchas consider also case flushed partial content creating interactive state without full html loading whether oldie nt remember need check also case readystate interactive caused bottom page scripts accidentally relied sync operations combined ready firing synchronously consider following code var foo function alert foo foo hi always alerts current jquery implemented readystate interactive cases alerted may longer problem always fires async time jquery deferred synchronous food thought edge cases consider", "d": "10/2015"}, {"body": "thanks mikesherov fortunately know least one good unit test question whether edge still bug believe places caused problems", "d": "10/2015"}, {"body": "reference test iframe file whoa really time flies", "d": "10/2015"}, {"body": "mzgol specific reason wo nt fixed jquery", "d": "10/2015"}, {"body": "flatman lot fixes people would like jquery backporting would really constitute new release anyway also always possibility fix issue breaks something someone else critical piece logic nt currently plan new jquery releases test jquery compat need support", "d": "10/2015"}, {"body": "looks like already cherrypicked commit", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "leonardobraga pinging see going send pr love contribution", "d": "10/2015"}, {"body": "dmethvin sorry delay sending pr also apply changes branches send additional prs", "d": "10/2015"}, {"body": "need easy cherry pick", "d": "10/2015"}, {"body": "dmethvin jaubourg close notabug one objects tomorrow", "d": "10/2015"}, {"body": "markelog objection", "d": "10/2015"}, {"body": "closing nonvalid", "d": "10/2015"}, {"body": "since going release compat line closing wo nt fix", "d": "10/2015"}, {"body": "reverted workaround still needed edge able put back edge fixes bug see details", "d": "10/2015"}, {"body": "think fixed sizzle registering onunload handler nonpreferred windows fix come shortly", "d": "10/2015"}, {"body": "since removing label longer useful", "d": "10/2015"}, {"body": "dmethvin please remember remove milestone amp add wontfix label closing bug wo nt fix", "d": "10/2015"}, {"body": "since fixed yet releasing jquery compat closing wo nt fix", "d": "10/2015"}, {"body": "since going release compat line closing wo nt fix", "d": "10/2015"}, {"body": "since removing label longer useful", "d": "10/2015"}, {"body": "duplicate module list support commitplease perhaps could grab even though removes bit duplication still error prone", "d": "10/2015"}, {"body": "already includemargin parameter could another option add includescrollbar", "d": "10/2015"}, {"body": "ran bug bug expected behavior pointed setting width using works expected", "d": "10/2015"}, {"body": "accepted bug currently plan fix still lot though", "d": "10/2015"}, {"body": "point done well compat needs done rides sunset", "d": "10/2015"}, {"body": "dmethvin please remember remove milestone amp add wontfix label closing bug wo nt fix", "d": "10/2015"}]