[{"title": "target nt match elements initial page load chrome firefox", "body": "able reproduce issue basically selecting initial page load url contains document fragment fails select targeted element caused returning page load sometimes returns page load sizzle pipes selector produces incorrect results created codepen shows behavior please view debug mode document fragment", "num": "2679", "d": "10/2015"}, {"title": "accept http header", "body": "currently jqueryajax supports http status contain response contend http codes might might contain response body accept status body found responses codes jqueryajax expects content body throws exception trying parse undefined content data think additional http status codes included optionally response body depend header try parse data header set", "num": "2677", "d": "10/2015"}, {"title": "data feature detect use present", "body": "jsperf noticed much code often near top cpu time initialization hundreds thousands elements data initialized sometimes case using angular feature detecting presence using rather nonenumerable property function went like cpu time since overhead define property avoid trycatch codepath well", "num": "2676", "d": "10/2015"}, {"title": "load context", "body": "hello written ajax function learning ajax requests work obviously amazing features jqueryajax provides using one decent amount projects component enjoyed one wrote allowed load js particular context allowed write libraries loaded would attach scope ran making useful using third party libraries would possible add option provide another option eval js js used accomplish followed along lines know feasible jquery something jquery already api documentation says jquery evals global space", "num": "2674", "d": "10/2015"}, {"title": "compat ajax tests failing chrome", "body": "issue identified apparently resolved chrome passing invalid urls creates state exception thrown callback never invoked", "num": "2673", "d": "10/2015"}, {"title": "iframes refuse display still get load event", "body": "latest chrome firefox jquery see iframe loaded even though blocked see refused display frame set xframeoptions sameorigin yet see iframe element load way get notification error message iframe nt actually loading webapp may intelligently fallback opening new window setting toplevel window url", "num": "2672", "d": "10/2015"}, {"title": "elementoff mouseenter also removes mouseover events", "body": "hey guys asked question stackoverflow see found remove event function mouseenter event trasforms mouseover event element already mouseover event remove also code template found jquery eventremove function known issue event maybe bug", "num": "2670", "d": "10/2015"}, {"title": "jquery css api set times take effect", "body": "tried use css css set css styles found success settings know probably also set one property set parameter successful must set twice", "num": "2669", "d": "10/2015"}, {"title": "jquery html parser corrupts script content looks like html tags including strings", "body": "functions like even contains javascript content script looks like html tag modified undesirably eg used argument append suchlike produces alert produce example also see benign case replacement workaround possible route fix bug present jquery windows browsers tested ff chrome safari opera", "num": "2668", "d": "10/2015"}, {"title": "update eventwhich avoid deprecated properties", "body": "version master description eventwhich information deprecation please refer mdn js fiddle limited usefulness case", "num": "2667", "d": "10/2015"}, {"title": "please add releases repo", "body": "returns empty array use check github api retrieve information latest release buildenvironment checks wo nt make sence tags", "num": "2666", "d": "10/2015"}, {"title": "make jqueryisnumeric consistent", "body": "people understand math thing others asking actually number internal usage think choose one update documentation right inconsistent confusing confluence two", "num": "2662", "d": "10/2015"}, {"title": "change applicationxwwwformurlencoded", "body": "resurrects argument change currently always change encoded spaces plus sign correct behavior posted form data cases conversion moved done method post", "num": "2658", "d": "10/2015"}, {"title": "file size big", "body": "", "num": "2656", "d": "10/2015"}, {"title": "jquery stops", "body": "uri stop function b return h hndeferred complete reason object dont support property method jqueryminjs line symbol", "num": "2655", "d": "10/2015"}, {"title": "restore previous showhide behavior", "body": "", "num": "2654", "d": "10/2015"}, {"title": "provide slim custom build removing ajax effects cdn", "body": "", "num": "2653", "d": "10/2015"}, {"title": "map evil concat item translated array", "body": "take underscore map function comparison javascript map b c function item return item itemtouppercase res b b c c map b c function item return item itemtouppercase res b b c c see jquery extra operation concat function", "num": "2652", "d": "10/2015"}, {"title": "documentready waits images loaded async", "body": "load jquery dependent scripts async documentready event dependent scripts nt fire images finished loading demo setup ignore verbose head tag inline code yepnope loader later script tag loaded scripts async documentready callback fired seconds image body takes seconds load however load jquery sync script tag dependents documentready nt wait image download firing tested saw issue", "num": "2651", "d": "10/2015"}, {"title": "parsejson valueundefined", "body": "function parsejson check data undefined return undefined nothing", "num": "2650", "d": "10/2015"}, {"title": "nt work array stored object property", "body": "works", "num": "2649", "d": "10/2015"}, {"title": "prop tabindex returns wrong value jsbin example included", "body": "hello prop tabindex behaves differently jquery internet explorer used true least images dom nodes type nt attribute tabindex explicitly given please see also playground example changing url loaded jquery version see tabindex different vs changes attributesporpjs file prophook tabindex different current code line master stable show code prophooks tabindex follows looks like seen jquery compat alpha uses logic maybe would make sense move kind logic also jquery internet explorers still supprted least newer ones starting upwards best regards alexander", "num": "2647", "d": "10/2015"}, {"title": "building fails", "body": "trying build version understand old version trying make custom build build process fails following errors loading testjs tasks helpers error error module evals loading comparesizejs tasks helpers error typeerror read property undefined using node steps performed using grunt defined packagejson help appreciated btw running grunt verbose yields initializing commandline options verbose registering builtin tasks loading concatjs tasks helpers ok tasks concat helpers concat loading initjs tasks helpers ok tasks init helpers prompt promptforobj promptfor gitorigin githubweburl loading lintjs tasks helpers ok tasks lint helpers lint loading minjs tasks helpers ok tasks min helpers uglify gzip minmaxinfo loading miscjs tasks helpers ok helpers config json stripbanner filestripbanner filetemplate banner loading qunitjs tasks helpers ok tasks qunit helpers phantomjs loading serverjs tasks helpers ok tasks server loading testjs tasks helpers error error module evals error native object modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile loading watchjs tasks helpers ok tasks watch reading gruntjs config file ok reading distdestinationjson error reading jshintrc ok parsing jshintrc ok reading jshintrc ok reading srcjshintrc ok parsing srcjshintrc ok reading srcjshintrc ok reading testjshintrc ok parsing testjshintrc ok reading testjshintrc ok initializing config ok reading packagejson ok parsing packagejson ok registering gruntcomparesize local npm module tasks reading ok parsing ok loading comparesizejs tasks helpers error typeerror read property undefined objectmoduleexports loadtask arrayforeach native loadtasks tasktaskloadnpmtasks objectmoduleexports loadtask tasktaskinit objectgrunttasks registering gruntgitauthors local npm module tasks reading ok parsing ok loading gitauthorsjs tasks helpers ok tasks authors updateauthors loading gruntjs tasks helpers ok tasks default dev testswarm selector custom build submodules dist tasks specified running default tasks running tasks default running default task task comparesize found use force continue aborted due warnings", "num": "2646", "d": "10/2015"}, {"title": "add tests new symbol entity", "body": "least may may include tests shimmed see discussion", "num": "2645", "d": "10/2015"}, {"title": "consistent swarm failures", "body": "umbrella ticket x module chrome x module safari x module waiting sizzle update cc x module caused", "num": "2644", "d": "10/2015"}, {"title": "typeerror read property open undefined", "body": "recently updated node version also updated jsdom jquery nodemodules node program stopped working getting type error read property open undefined jquery nodemodule jsdom latest available versions sample code program look like ajax call failing working upgrade working anymore due error", "num": "2642", "d": "10/2015"}, {"title": "wrap element created", "body": "hi wondering code snippet work expected moment returns words wrap nt apply", "num": "2640", "d": "10/2015"}, {"title": "return value method", "body": "run argument return empty array run argument return first element problem caused different behavior javascript function happen nt know whether want maybe confused users issue sry bother ignore", "num": "2639", "d": "10/2015"}, {"title": "document ready wait event firing need advice", "body": "cross posting issue basically need handler attached document ready called custom event triggered", "num": "2638", "d": "10/2015"}, {"title": "parsexml work activex blocked via gpo", "body": "hi issue described shows important part jquery code problem since microsoftxmldom available fails parse possible avoid using activex maybe using something like", "num": "2637", "d": "10/2015"}, {"title": "add tests contextmenu event", "body": "alias since fix object", "num": "2636", "d": "10/2015"}, {"title": "etarget eventdelegation", "body": "using selectors like impression always element selected given selector case intended behaviour nested element also provided supposed use needs repeat selector cases get element initally wanted selected see fiddle", "num": "2635", "d": "10/2015"}, {"title": "param undefined throws read property jquery undefined", "body": "using jquery chrome sure bug nice feature try something throws error mainly happens let say passing parameters function sometimes nt wantneed pass function example parameterstopass param parameterstopass example lt error easiest fix simply", "num": "2633", "d": "10/2015"}, {"title": "xhrgetallresponseheaders get nonexistent header", "body": "", "num": "2632", "d": "10/2015"}, {"title": "wellformed error firefox", "body": "hello gents getting wellformed errors firefox web developer tools console using parsexml latest jquery error logged jquery firefox tested developer edition build also able isolate error occurs logged searching nodes find copied sample code demo found throwing exception replaced src code throwing error see console file throwing error file throwing error environment windows latest updates firefox jquery need information happy assist regards", "num": "2631", "d": "10/2015"}, {"title": "guard jqueryextend nonobject arguments especially strings", "body": "hi calling extend method passing string argument string split character positions added property keys corresponding characters values since docs present function way mix objects would never expect kind behaviour passing nonobject argument always happen added sort check calling extend would expect ignoredskipped eg adding integer reflected result extend operation course sell feature rather say cause hard spot felix", "num": "2629", "d": "10/2015"}, {"title": "hasclass working svg", "body": "also work works", "num": "2628", "d": "10/2015"}, {"title": "attribute selector add operand evaluating attribute values", "body": "message typecomment typelink typealert perfomsomething would look like message typecommentlinkalert dosomething message type comment link alert dosomething would also awesome working attribute filters well logs dataiderrwarnnotice dosomething item dataitemkeywordpromowinter dosomething", "num": "2626", "d": "10/2015"}, {"body": "wiki description process use decide whether add feature criteria mind nt think add feature like directly jquery core would easy implement via plugin way people want use people nt need pay increased file size", "d": "10/2015"}, {"body": "nt work domcontentloaded fired would nt surprise situations seem like browser bugs reported chrome firefox", "d": "10/2015"}, {"body": "looks like browser bug sizzle test bypass qsa", "d": "10/2015"}, {"body": "nt work domcontentloaded fired would nt surprise testing domcontentloaded early page load would work time inconsistent reported chrome firefox enough time post bug report running things nt yet chance sort post issue ff chrome looking jquery source recall seeing buggyqsa check could used skip nt yet time mock possible fix", "d": "10/2015"}, {"body": "seeing difference chrome firefox css former nt apply cascaded rules page load latter inconsistency makes nervous applying global changes sizzle", "d": "10/2015"}, {"body": "enshrine solution hard support future definitely worth kicking browser guys get agree standard behavior perhaps polyfill get page fixing sizzle seems risky", "d": "10/2015"}, {"body": "guess confused would ever match anything point page lifecycle get node may exist dom points node exists compelling reason would select element risk enforcing behavior", "d": "10/2015"}, {"body": "zzzzbov inconsistency browsers believe first reaction possibly causes disagreement spec interpreted happens lot confusion implementation selector neglected still revised outlying circumstances match sizzle enforce behavior may become invalid future", "d": "10/2015"}, {"body": "said safely say browsers wrong spec clear enough may able bypass qsa rely dom ready sizzle", "d": "10/2015"}, {"body": "seems like good soon domcontentloaded fires could buggyqsa test would good find browsers currently disagree wonder qsa implementation also problems hashchange events", "d": "10/2015"}, {"body": "spec found far searching bit awkward finding resources challenging see reason ca nt resolve element soon element exists within dom missing something", "d": "10/2015"}, {"body": "zzzzbov disagreeing fact expect fixed browser updates right chrome cascade styles page loaded nt want jump gun", "d": "10/2015"}, {"body": "opened bugs chromium firefox see goes", "d": "10/2015"}, {"body": "response headers say contenttype json way get error case response incorrect since response body contain json", "d": "10/2015"}, {"body": "thing happens content type header", "d": "10/2015"}, {"body": "tries interpret plain text json time think happening force incorrect content type provide test case", "d": "10/2015"}, {"body": "using backbone case request fetching data first call put server action queue process asynchronously processed straight awaya return status body send request interval eventually returns response body backbone method wraps method wrapper method", "d": "10/2015"}, {"body": "lkay see parameters passed later question stands params pass force get error backend returns header response nt body", "d": "10/2015"}, {"body": "lkay still extract test case want us anything ca nt debug whole backbone app put breakpoint rogue call see parameters passed see headers get reponse test case look", "d": "10/2015"}, {"body": "custom wrapper make promise compatible nt matter get result use jquery methods javascript class ajaxerror extends error constructor jqxhr textstatus errorthrown super thisname ajaxerror thismessage textstatus thisjqxhr jqxhr thiserrorthrown errorthrown function decorateasjquery promise promisedone fn gt return decorateasjquery promisethen fn promisefail fn gt return decorateasjquery promisethen null fn promisecomplete fn gt return decorateasjquery promisethen fn fn return promise let jqajax ajax ajax function ajax let jqpromise jqajaxapply arguments let promise new promise resolve reject gt jqpromisethen data gt resolve data jqxhr textstatus errorthrown gt reject new ajaxerror jqxhr textstatus errorthrown return decorateasjquery promise code basic looks like request headers response headers", "d": "10/2015"}, {"body": "code snippet still nt know passed need know", "d": "10/2015"}, {"body": "object sent method looks like backbone forcefully setting change seems work", "d": "10/2015"}, {"body": "great thanks letting us know", "d": "10/2015"}, {"body": "particular jsperf looks bogus likely symbol case completely elided would nt surprise betterfaster solution though know dog path taking though sounds like animations dom elements would idea replace plain assignment dom elements well use everything else whenever available wondering get rid cases based supported browsers whether add another one", "d": "10/2015"}, {"body": "current data code different jquery particular trycatch around defineproperties need check also dmethvin pointed test case bogus symbol assignment gets jitted away modern browsers need create patched jquery version amp compare method invocations see real difference said seems use case weakmap symbol rwaldron wrote whole code weakmaps mind jdalton experiments lodash might suggest could make data module faster need check", "d": "10/2015"}, {"body": "sweet checked master filing nt realize define property path eliminated dom nodes along trycatch essentially equivalent symbol path since point property access weakmaps optimized point usable yet recall someone perf tests back pretty slow hopefully fixed maybe jdalton knows", "d": "10/2015"}, {"body": "weak maps bit touchy repeated use like microbenchmark still cause prolonged gc pauses heuristic place short circuit use get hot use nt critical machinery performance optimization store metadata function wrappers avoid repeated wrappings anything symbols weak maps likely faster use worst switched weak maps less expensive", "d": "10/2015"}, {"body": "seems like nt really need weakmap okay data garbagecollected element goes scope attached via either plain property symbol would advantage", "d": "10/2015"}, {"body": "dmethvin ca nt use regular assignment nonnodes would observable much weakmaps fit main use case jquery data module nodes use regular assignment right maybe nt need anything currently need nonweakmap path objects anyway since primary use case might much", "d": "10/2015"}, {"body": "dmethvin yah speaking weak maps mentioned thread nt giving endorsement push used jquery advantage weak maps side effects element bolted property", "d": "10/2015"}, {"body": "okay wondering missed something could go completely one particular way would improve consistency seems like could possible solutions performance standpoint getting rid really common element case seems like biggest win got", "d": "10/2015"}, {"body": "yep everything looks sweet checked master filing bad want still use symbol since get closer truly hiding properties nodes would avoid defineproperty path normal objects would pretty much perf impact one way common case data elements", "d": "10/2015"}, {"body": "sorry interface already bloated trying restrain adding options besides pointed could easily done user land already", "d": "10/2015"}, {"body": "good point thought might ask thanks", "d": "10/2015"}, {"body": "sure harm ask", "d": "10/2015"}, {"body": "closed", "d": "10/2015"}, {"body": "console message says frame nt displayed nt say nt loaded case browser firing load event deliver nt seem problem jquery howto question might able get solution stackoverflow", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "use object parameter please look help jquery forums stack overflow though place report bugs", "d": "10/2015"}, {"body": "thanks report related nearduplicate possible address end jqueryhtmlprefilter implementation pr would good starting point still sure putting something like official build though", "d": "10/2015"}, {"body": "yes bug seems fix considered big ought possible exclude content within without much regex", "d": "10/2015"}, {"body": "read content within script", "d": "10/2015"}, {"body": "definitely unintended behavior screwing case nt necessarily bad putting executable scripts html something love remove least make much difficult security implications way easy inject attacker content scripts think need reinforce advice bad practice use example one place fails", "d": "10/2015"}, {"body": "ought possible exclude content within without much regex though would probably update first part per change maximum correctness", "d": "10/2015"}, {"body": "fwiw use case found issue obfuscation contact details using ajax javascript converts sequences apparently random characters back original human readable form nt see anything particularly bad practice injecting content dom come trusted source via ajax may design contain script generally however ca nt think good case encryption sequences string literals modified unexpectedly would anything benign eg ajaxreturned script also contains dom manipulation code equivalent plain javascript xml special characters used though nt know frameworks also aware case valid javascript outside string literal would concur adding something documentation additional notes begin design jquery constructor method accepts html string would resolve ticket perhaps also note html contains script string literals cryptographic functions unexpected results may occur eg become also design jquery intended lightweight expected issue genuine situations something like would saved several hours debugging already scanned docs scoured tinternet see might missing something way etc work nt know suggest workaround jsfiddle updated working fine case nt looked whether things like issues hackery types seeing additional note limitations may seek ways breaking probably good thing", "d": "10/2015"}, {"body": "nt see anything particularly bad practice injecting content dom come trusted source via ajax may design contain script generally content security policy standpoint common disable inline scripts policy common attack vector problem really hard web developers strongly assert content trusted source many ways mess nt looked whether things like issues characters inside attribute htmlencoded building title dynamically example many ways mess mentioned could result xss", "d": "10/2015"}, {"body": "first point rhetorically google search results page full inline script second bad example trying come possible related failures failed would like move documentation issue nt seem able", "d": "10/2015"}, {"body": "second bad example trying come possible related failures failed valid would like move documentation issue nt seem able thanks", "d": "10/2015"}, {"body": "put together example docs specifically issue see", "d": "10/2015"}, {"body": "thanks input issue closed like point js clientside security issue inline js must security breach somewhere else really looking", "d": "10/2015"}, {"body": "actually also deprecated documented need provide support used provide support already provided natively", "d": "10/2015"}, {"body": "suspect report due console messages firefox lazyeval solution would fix since would look properties tried look", "d": "10/2015"}, {"body": "nt due console messages firefox result khigakisugar realizing deprecated looking better solution dom method marked deprecated listed deprecated imho would helpful us potential future users would deprecation notice jquery web page text recommending something use instead nt really viable option us least without manually falling back something else chrome safari support finished", "d": "10/2015"}, {"body": "unfortunately made big mess mouse buttons key codes course decade lots deprecated properties different values order get consistent result across platforms jquery supported years starting firefox settled normalizing sure far along browsers supporting example keys standard always possible get raw event values turns finally implemented probably best path users take use need jquery normalization leave us timmywil mentioned lazy eval improved documentation covered created ticket api repo ideas wording could test support new standard properties would awesome", "d": "10/2015"}, {"body": "checks wo nt make sence tags exactly trying ca nt tags", "d": "10/2015"}, {"body": "check get list tags nt information provided one latest stable ok parse name hope alpha beta means stable even trust order given json may could change time would lot easier secure releases provide additional information releasedate especially releasedate one part use show buildenvironment long nt change since released hope valid reasonable usecase", "d": "10/2015"}, {"body": "check get list tags nt information provided one latest stable releases api nt actually tell either project maintainers mark release latest github make guess based purely date means patch release older version released recently current stable version marked latest rely version sorting instead ok parse name hope alpha beta means stable hope guarantee see hyphen know prerelease even trust order given json may could change time nope nt trust order apis need sort based version number semver defines clear specification would lot easier secure releases provide additional information releasedate especially releasedate one part use show buildenvironment long nt change since released information easily found today following link provided value tag hope valid reasonable usecase certainly reasonable usecase information want already available today releases jquery", "d": "10/2015"}, {"body": "thank scottgonzalez explanation", "d": "10/2015"}, {"body": "dmethvin propose allowing input returning true strings numbers whether primitive object numeric", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "added behavior change tag since one strange case custom longer handle mentioned release notes", "d": "10/2015"}, {"body": "conversion moved done method post body", "d": "10/2015"}, {"body": "note form submission converts spaces plus signs applicationxwwwformurlencoded encoding used http get post logic note also decoding algorithm explicitly replaces plus signs spaces immediately unescaping percentescapes means treats identically ca nt limit conversion specifically percentencoding would reasonable approximation", "d": "10/2015"}, {"body": "done hard work set straight details grab ticket thanks", "d": "10/2015"}, {"body": "welcome pull requests decrease size preserving functionality relevant performance", "d": "10/2015"}, {"body": "thanks opening issue please ask support forums jquery irc channel", "d": "10/2015"}, {"body": "\u0437\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435 timmy willison \u0432\u044b \u043f\u0438\u0441\u0430\u043b\u0438 \u043e\u043a\u0442\u044f\u0431\u0440\u044f \u0433 thanks opening issue please ask support forumsor jquery irc channel realy sorry spend time nt know jq hasnt support ie lt included demo module browser mark \u0441 \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u0435\u043c victor blood masm mailto dev masmelcomru", "d": "10/2015"}, {"body": "need remember reclose solved tickets wo nt fix means removing milestones", "d": "10/2015"}, {"body": "sounds like markelog wants take alright note restoring old behavior still want make couple changes cache inline display values cache display value set user ensure initially trying show elements removing display value means providing partial fix responsive issue", "d": "10/2015"}, {"body": "fine yielding make mistake monster like see following tables filled agreed upon fixed asserted pr expected inline nonanimated initially initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline cascade inline cascade inline initially non non initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline default inline default inline cascade inline cascade inline cascade inline cascade inline animated given following helpers js function toggle callback return jquery toggle callback function partial callback return togglecall delay simultaneous queue simultaneous function next callback callbackcall next dequeue simultaneous initially initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline cascade inline cascade inline initially non non initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline default inline default inline cascade inline cascade inline cascade inline cascade inline think find restoring old behavior nt really help still want markelog", "d": "10/2015"}, {"body": "sure lot surprises filling tables think comment might good start blog post sort documentation page think step step basis first revert fill tables apply new changes mentioned timmywil fill tables compare find possible improvements apply improvements create proposal participate existing one dom api improve current situation cc aurelioderosa could became documentation ticket mzgol dom api proposal", "d": "10/2015"}, {"body": "also think restoring previous behaviour essential final regardless possible mess", "d": "10/2015"}, {"body": "think comment might good start blog post sort documentation page yeah need put somewhere people see hairy smile", "d": "10/2015"}, {"body": "first revert fill tables apply new changes mentioned timmywil fill tables compare find possible improvements apply improvements exactly recommending need fill tables changing anything point implementing behavior ca nt define also tackling reverting old code tests closer mark lot messier", "d": "10/2015"}, {"body": "exactly recommending need fill tables changing anything well first step nt implement yet anything reverting behaviour already defined docs filling tables means defining sideeffects cases nt strictly necessary apis one example roughly equivalent calling css display block except display property restored whatever initially element display value inline hidden shown displayed inline users fine current behaviour two exceptions since received two complains logic slow performance cases inability change previously caches display environment adaptive styles besides exceptions recognize inconsistencies filling tables try fix otherwise instead reverting might end implementing something else bigger discussion whole different kind work think nt try tackle whole thing one effort gradually evaluating every step go along try different tactics", "d": "10/2015"}, {"body": "seems like filling table would good thing though let define want code see implement problem saying nt care supported cells either let make conscious choice accidental one", "d": "10/2015"}, {"body": "clarify think important fill document", "d": "10/2015"}, {"body": "filled table nonanimated elements rather start half scenarios tackling whole thing see", "d": "10/2015"}, {"body": "cool would propose though put somewhere test directive interactive pagetests", "d": "10/2015"}, {"body": "conclusion take btw something unexpectedincorrectinconsistent nt see anything ambiguous", "d": "10/2015"}, {"body": "sure asking table values expect line implementation existed jquery", "d": "10/2015"}, {"body": "nt think closer master recommending reverting commits commented gist one suggested revision", "d": "10/2015"}, {"body": "also agree scottgonzalez think implementation addresses nonanimated first see", "d": "10/2015"}, {"body": "bah stupid lack notification gists going put table comment figured page would get crazy long people started anyway replied comments", "d": "10/2015"}, {"body": "scottgonzalez oh thought posting results reverted previous behaviour", "d": "10/2015"}, {"body": "want google spreadsheet editing comment seems best collaborative population", "d": "10/2015"}, {"body": "editing comment also nt notify tho spreadsheet", "d": "10/2015"}, {"body": "nt edit table makes hard actually discuss changes see going spreadsheet actually comment individual fields would great", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "filled doc table", "d": "10/2015"}, {"body": "docs say returned array flattened resulting array", "d": "10/2015"}, {"body": "dup noticed nt ticket assigned milestone timmywil listed owner go", "d": "10/2015"}, {"body": "thank opening issue please ask support forums jquery irc channel flesh issue provide small test case", "d": "10/2015"}, {"body": "tsarma please try one simply get javascript support associative array hope help", "d": "10/2015"}, {"body": "right risan says second case array array elements two extra properties added jquery sees array property since elements added array length working way javascript array example", "d": "10/2015"}, {"body": "thank risan dmethvin explainations regarding javascript supporting associative array case added two extra properties existing empty array object according docs reads added properties empty object case array nt worked", "d": "10/2015"}, {"body": "object numeric properties enumerated plain enumerable properties including prototype ones enumerated ca nt please follow general programming forum stackoverflow questions thanks", "d": "10/2015"}, {"body": "thanks report jquery compat continuation jquery line nothing changed jquery continuation jquery line code seem code still needed main branch ie still broken fortunately seems fixed edge likely fix jquery many bug fixes people would like fixed ca nt backport good fix", "d": "10/2015"}, {"body": "aschmalzhaf would like take shot pr jquery compat alpha code lies branch jquery alpha code lies need backport code branch srcattributespropjs file", "d": "10/2015"}, {"body": "nt know specific causesolution things try try tag changes made fix build issues also might need older nodenpm running something around time gruntcomparesize task skipped essential", "d": "10/2015"}, {"body": "happy assist issue since nt pertain current jquery closing ticket interest triage please try dave suggestion let us know worked", "d": "10/2015"}, {"body": "dmethvin thanks suggestion confirm version builds using node keeps complaining important indeed", "d": "10/2015"}, {"body": "chrome one tracked", "d": "10/2015"}, {"body": "updated thanks", "d": "10/2015"}, {"body": "resolved dropped safari testing updated original post", "d": "10/2015"}, {"body": "changed list checkboxes easier set resolved", "d": "10/2015"}, {"body": "mzgol cool", "d": "10/2015"}, {"body": "closed since landed", "d": "10/2015"}, {"body": "code always used api create instance see promisesaplusadapterjs file example edit ok see docs could check problem reproducible jquery", "d": "10/2015"}, {"body": "ah ok jquery using global object present global case robust nodejsdom testing jquery currently alpha never assume browser globals available globals always take work better released confirmed script works fine jquery alpha add one line script requiring", "d": "10/2015"}, {"body": "yes look like working add var signalr require signalr javascript file getting undefined error says jquery defined sure ajax worked though ca nt load like way working", "d": "10/2015"}, {"body": "need report issues plugin author note plugins might look others might need set", "d": "10/2015"}, {"body": "jquerywrap return wrapped elements method returns original set elements chaining purposes", "d": "10/2015"}, {"body": "yup works expected see console element wrapped correctly", "d": "10/2015"}, {"body": "documents argument must integer behavior input unconstrained", "d": "10/2015"}, {"body": "need put code want invoked need wait particular event put code event handler", "d": "10/2015"}, {"body": "think dtracers looking way prevent ready happening entire page web components initialized would really bad idea since would hurt performance jquery code main page reaching state wcs page needs know wc state code rewritten however offer hope use please followup stackoverflow though since bug report already provide footgun want", "d": "10/2015"}, {"body": "dmethvin actually asking thanks library using animations set code ready custom elements set attaches handlers animations work work chrome polyfills mainly happens using html imports", "d": "10/2015"}, {"body": "untested work pretty much replace ready promise union old ready promise another promise resolved custom event triggered", "d": "10/2015"}, {"body": "thanks report polyfill included jquery pick assume write perspective user goes site relies activex disabled see fail included default mean every jquery user download kb minifying amp gzipping polyfill nt need seems lot especially nt think lot users disabling activex mostly enterprise guess leave open others comment nt think note loses upstream support jan migrate newer browser asap even means using enterprise mode", "d": "10/2015"}, {"body": "hi yea enterprise unfortunately cant tell customers upgrade eg embedded scenarios xp still used lot said something download get add deployment addition jquery work activex disabled thanks", "d": "10/2015"}, {"body": "looked project linked ie xmldom nt tested speccompliant able include jquery please let us know works problems approach", "d": "10/2015"}, {"body": "hi ive tried run xmldom jquery picks probably contains performance problems site becomes unresponsive right clicking right im looking alternative lib seems nt many choose", "d": "10/2015"}, {"body": "going close since much find working polyfill picked automatically write comment specific problems like polyfill picked etc reopen", "d": "10/2015"}, {"body": "probably intended behaviour useful cases know exact target element use get linkelement jsfiddle", "d": "10/2015"}, {"body": "yes actual target need know event handled use", "d": "10/2015"}, {"body": "thanks report expects object passing unsupported treat feature request leave open others voice opinions recently made amp accept input opposed treating lightly determine though many methods would get similar treatment", "d": "10/2015"}, {"body": "thanks yeah figured nice feature wanted get incase one ran", "d": "10/2015"}, {"body": "really easy fix caller side though know value may undefined use trick define empty string put bunch inside jquery good chance mask errors make api harder people use", "d": "10/2015"}, {"body": "dmethvin could say though yet accepted treat amp differently", "d": "10/2015"}, {"body": "agree nt regressions undocumented behavior nt think would changed least would nt favor smile", "d": "10/2015"}, {"body": "tend think consistency trumps history matter favor gracefully handling nulundefined case", "d": "10/2015"}, {"body": "suggestion handle creating bigger ticket review apis allow nullundefined possible update docs well apis around almost decade without someone needing concerned moving yakshaving territory much else", "d": "10/2015"}, {"body": "fine ticket handling param nullundefined wait bug reports thinking ones", "d": "10/2015"}, {"body": "treat breaking change new feature latter case could moved rather add new issues milestone point", "d": "10/2015"}, {"body": "definitely feature since talking expanding signature", "d": "10/2015"}, {"body": "ok milestone added", "d": "10/2015"}, {"body": "ok see cache", "d": "10/2015"}, {"body": "almost certain duplicate please reopen problem also manifests git build alpha", "d": "10/2015"}, {"body": "alpha working fine", "d": "10/2015"}, {"body": "thanks report however exactly handles strings try modern browser nt want deviate standard needs stay want changed need convince ecmascript standards committee", "d": "10/2015"}, {"body": "hi mzgol however exactly objectassign handles strings thanks reference want changed need convince ecmascript standards committee sure felix", "d": "10/2015"}, {"body": "settle target sources always boxed via toobject see amp nonnegotiable review toobject see following entry table argument type result string return new string object whose stringdata internal slot set value argument see description string objects code terms", "d": "10/2015"}, {"body": "thanks explanation rwaldron regard plain jsecmascript perspective makes lot sense guys certainly aqcuainted js saying working jquery reading api docs function requires objects arguments string naturally thought object js world expected ignored jquery often understood abstractionsimplification plain js thought would responsible mention function result potential surprise api users also understand mzgol argument conform standard regards felix", "d": "10/2015"}, {"body": "expected ignored sure mean expect invalid api calls essentially noop nt documented happens call jquery api arguments behavior definition undefined", "d": "10/2015"}, {"body": "dmethvin sure mean expect invalid api calls essentially noop nt documented happens call jquery api arguments behavior definition undefined know outcome defined passing invalid arguments simply stated slicing string adding character indeces properties probably least unadvanced api users expect would imo less problematic simply ignore argument case personal opinion understood contra arguments want offend anyone feel free ignore thread", "d": "10/2015"}, {"body": "duplicate fixed jquery please always check bug exists latest development version ie reporting note though jquery nt generally support svg added class support since many people asked", "d": "10/2015"}, {"body": "thank suggestion wo nt adding selector extensions jquery", "d": "10/2015"}, {"body": "code comment says ff meanwhile throws frame elements support mention ff possible bug fixed sometime ff might work data uri still throw content fetched remotely", "d": "10/2015"}, {"body": "nt getting proper window object like proposed better", "d": "10/2015"}, {"body": "still explanation works mentioned settimeout workaround", "d": "10/2015"}, {"body": "guess mostly likely two windows separate threads window action happens synchronously respect code otherwise", "d": "10/2015"}, {"body": "verified safari instance browserstack provided faulty includes newer webkit version might wait fix happen accepting broken support test result redisable safari testing", "d": "10/2015"}, {"body": "decided drop safari testing problem going away still test ios", "d": "10/2015"}, {"body": "removing milestone since really fixed anything", "d": "10/2015"}, {"body": "reference jsfiddle ie seems stall forloop append function called even exiting loop execute html function looked append culprit behind performance deficit seemed lie either dommanip function native appendchild javascript function fixing dommanip function seems unlikely might affect parts code also use fixing appendchild impossible perhaps rest would like chip workaround", "d": "10/2015"}, {"body": "seeing similar performance issue regarding appendchild adding lot ok slow takes minutes ie edge pathetically slow case compared chrome firefox", "d": "10/2015"}, {"body": "something jquery performance issue native nothing suggest building html first one call", "d": "10/2015"}, {"body": "native appendchild chiming report left possibility open appendchild ieedge appendchild slow need hacks work around kind deficiencies tue oct pm timmy willison notifications githubcom wrote something jquery performance issue native appendchild nothing suggest building html first one call innerhtml reply email directly view github", "d": "10/2015"}, {"body": "marcelammerlaan perf problem already reported ie dev team", "d": "10/2015"}, {"body": "closing issue nt seem anything jquery please report problem edge team jdalton", "d": "10/2015"}, {"body": "thanks ping yep aware performance issue patrickkettner", "d": "10/2015"}, {"body": "feedback left uservoice seem connect ms connect", "d": "10/2015"}, {"body": "mzgol going take one jqsummit project", "d": "10/2015"}, {"body": "mzgol timmywil could confirm", "d": "10/2015"}, {"body": "works windows", "d": "10/2015"}, {"body": "test case", "d": "10/2015"}, {"body": "okay gon na close honggook find consistent way reproducing please ping us", "d": "10/2015"}, {"body": "message printed console run test case", "d": "10/2015"}, {"body": "added needs review label discuss meeting sounds like bug imo fix", "d": "10/2015"}, {"body": "cc jaubourg", "d": "10/2015"}, {"body": "top hat say replacing trick", "d": "10/2015"}, {"body": "aam types well", "d": "10/2015"}, {"body": "aam types well would nt catch stuff like anyway need make sure nt catch xml part word ensures datatype detection regexps follow pattern", "d": "10/2015"}, {"body": "longer necessary one jquery time released", "d": "10/2015"}, {"body": "also worth noting issue window jquery collection called currently breaks jqueryui code fixed master branch", "d": "10/2015"}, {"body": "patrickording landed fix would mind testing", "d": "10/2015"}, {"body": "homakov believe mitigate would mind testing", "d": "10/2015"}, {"body": "nt work edge markelog fixed", "d": "10/2015"}, {"body": "timmywil since fixed nt plan compat anymore closing reopen disagree", "d": "10/2015"}, {"body": "fixed verify works zba latest version", "d": "10/2015"}, {"body": "pretty sure fixed please let us know find otherwise", "d": "10/2015"}, {"body": "hey could elaborate expect regarding ishidden less hiddenvisibleselectors know solution efficient like tackle issue", "d": "10/2015"}, {"body": "care performance compressed size functionality trumps propose moving logic updating hiddenvisibleselectors", "d": "10/2015"}, {"body": "alright wanted know understand care performance size nt sure use efficient combination contains offsetwidthoffsetheight getclientrects hopefully omits former matches meant figure reuse hiddenvisibleselectors", "d": "10/2015"}, {"body": "also would mind providing perf test", "d": "10/2015"}, {"body": "markelog sure could point somewhere figure jsperf", "d": "10/2015"}, {"body": "avgp yes good starting point", "d": "10/2015"}, {"body": "like take opportunity say thanks entire rest jquery community helpful friendly fast lt", "d": "10/2015"}, {"body": "still need ticket nothing else side eg milestone seems wrong", "d": "10/2015"}, {"body": "well still works correctly edge ca nt check might come different way solve leave remainder us bug edge ppl maybe jdalton could shade light like issue different solution overlooked whenever solved soon edge end", "d": "10/2015"}, {"body": "yes keeping milestone creates impression work really wer trying lower number currently like least remove milestone", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "looked nt come tiny snippet nt require inserting dom keep kicking around", "d": "10/2015"}, {"body": "ticket inactive quite closing", "d": "10/2015"}, {"body": "still see problem describe also newer edge nt something jquery work around easily though quickest workaround app level would compare actual text placeholder text remove match", "d": "10/2015"}, {"body": "nobody op able reproduce", "d": "10/2015"}, {"body": "think resolved nt jquery jqueryfixable issue close", "d": "10/2015"}, {"body": "nt heard back closing need test case use case", "d": "10/2015"}, {"body": "thank problem looking hour found solved finally", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "pull contributing trying avoid fair hold someone else may want implement time apologies", "d": "10/2015"}, {"body": "thanks letting us know happens still bunch questions pr anyway nt think add feature agree", "d": "10/2015"}, {"body": "mean jquery actually finally promisea implementation", "d": "10/2015"}, {"body": "yanickrochon yup already available test jquery amp jquery compat latter one need support issue testing real browsers far testing node jsdom", "d": "10/2015"}, {"body": "timmywil please remember remove milestone amp add wontfix label closing bug wo nt fix", "d": "10/2015"}, {"body": "dmethvin sum thinking could check interactive long use scroll hack determine interactive supported", "d": "10/2015"}, {"body": "even nicer exists assume allow fire versions ie nt work properly cases allow interactive", "d": "10/2015"}, {"body": "original author interactive check gotchas consider also case flushed partial content creating interactive state without full html loading whether oldie nt remember need check also case readystate interactive caused bottom page scripts accidentally relied sync operations combined ready firing synchronously consider following code var foo function alert foo foo hi always alerts current jquery implemented readystate interactive cases alerted may longer problem always fires async time jquery deferred synchronous food thought edge cases consider", "d": "10/2015"}, {"body": "thanks mikesherov fortunately know least one good unit test question whether edge still bug believe places caused problems", "d": "10/2015"}, {"body": "reference test iframe file whoa really time flies", "d": "10/2015"}, {"body": "mzgol specific reason wo nt fixed jquery", "d": "10/2015"}, {"body": "flatman lot fixes people would like jquery backporting would really constitute new release anyway also always possibility fix issue breaks something someone else critical piece logic nt currently plan new jquery releases test jquery compat need support", "d": "10/2015"}, {"body": "looks like already cherrypicked commit", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "leonardobraga pinging see going send pr love contribution", "d": "10/2015"}, {"body": "dmethvin sorry delay sending pr also apply changes branches send additional prs", "d": "10/2015"}, {"body": "need easy cherry pick", "d": "10/2015"}, {"body": "dmethvin jaubourg close notabug one objects tomorrow", "d": "10/2015"}, {"body": "markelog objection", "d": "10/2015"}, {"body": "closing nonvalid", "d": "10/2015"}, {"body": "since going release compat line closing wo nt fix", "d": "10/2015"}, {"body": "reverted workaround still needed edge able put back edge fixes bug see details", "d": "10/2015"}, {"body": "think fixed sizzle registering onunload handler nonpreferred windows fix come shortly", "d": "10/2015"}, {"body": "since removing label longer useful", "d": "10/2015"}, {"body": "dmethvin please remember remove milestone amp add wontfix label closing bug wo nt fix", "d": "10/2015"}, {"body": "since fixed yet releasing jquery compat closing wo nt fix", "d": "10/2015"}, {"body": "since going release compat line closing wo nt fix", "d": "10/2015"}, {"body": "since removing label longer useful", "d": "10/2015"}, {"body": "duplicate module list support commitplease perhaps could grab even though removes bit duplication still error prone", "d": "10/2015"}, {"body": "already includemargin parameter could another option add includescrollbar", "d": "10/2015"}, {"body": "ran bug bug expected behavior pointed setting width using works expected", "d": "10/2015"}, {"body": "accepted bug currently plan fix still lot though", "d": "10/2015"}, {"body": "point done well compat needs done rides sunset", "d": "10/2015"}, {"body": "dmethvin please remember remove milestone amp add wontfix label closing bug wo nt fix", "d": "10/2015"}]