[{"title": "firefox input focus problem", "body": "firefox problem ohter browser right case focus input box moved input box fire fox error code focus method thisrefsfocuselfocus debugger react code wrong setselection function input offsets var start offsetsstart var end offsetsend typeof end undefined end start input value inputselectionstart start break wrong start value inputselectionstart", "num": "6666", "d": "4/2016"}, {"title": "react rerender changes field first rerendering node", "body": "following code generates two field whose type changes respective type button clicked dependent component rendered field type value tap change field type new value react tries set value changing field type generates warning console show value definitely set changes however warning generated code html react rerender warning example react rerender warning example loading", "num": "6663", "d": "4/2016"}, {"title": "docs request detailed best practices form validation react", "body": "really awesome docs contain special section forms written pain points dealing hopefully highlighting places react ease", "num": "6658", "d": "4/2016"}, {"title": "modernize build process tooling", "body": "mostly prereq goals align build tooling right mixing grunt amp gulp commit probably gulp add watching fast rebuild test changes browser could something like webpack hot reloading move shared tooling back fbjs babel plugin custom lint rule nongoals things keep mind alternate build approaches particular flat bundling needs easy swap releasing master may want development happen feature flags used turn onoff features may want build result static flag set runtime checks would need possible target flag combination easily", "num": "6656", "d": "4/2016"}, {"title": "modernize release process", "body": "way much work react release right mostly muscle memory point easy anybody historically kept certain steps manual screwed things wanted able pause double check things contributing difficulty use reactbower repo first push target result fbme link generation cdnization needing happen internal fb infra manual steps across multiple repos manual version modification assets needing multiple places copied across branches ideas able differentiate pre final releases single command ship new alpha point lightweight final releases need little since get installed default people additional requirements eg changelogs assets multiple places things could interactive process start using github releases apis store build assets cutting steps set cdnreactjsorg host builds dropping fbme entirely risk run alternatives work existing cdns make sure versions deployed command pull based autoupdating result delays things like jsfiddle tutorial need assets available immediately investigate lerna could helpful multiple packages though ideally want disentangle releases", "num": "6655", "d": "4/2016"}, {"title": "reactcloneelement avoid warning failed proptype required prop", "body": "ok happens wrapper component wraps children clone children pass props new ones thing required warning shown even props expected using react", "num": "6653", "d": "4/2016"}, {"title": "stylesheet transform", "body": "", "num": "6652", "d": "4/2016"}, {"title": "render called componentdidmount", "body": "see", "num": "6651", "d": "4/2016"}, {"title": "sending events parents children easily", "body": "using react native half year really enjoying expert run seems like weakness framework like bring problem sending oneoff events chain parenttochild way works component lifecycle issue arises fact props semipersistent values differs nature onetime events example deeplink url received want say respond ready store url mechanism caching onetime event value breaks url sent valid event case children easy elegant way communicate back parents via callbacks nt seem way basic thing direction example cases deeplink received app wants tell child pages respond appropriately tab navigator wants tell child scroll top secondary tap list view wants trigger list items animate time page shown everything read two normal ways call method child directly using ref emit event children may listen ignore component lifecycle child nt ready receive direct call event yet also feel clunky compared elegance react architecture react oneway topdown model idea passing onetime events component chain seems like would fit nicely real improvement best workarounds found add trigger state variable parent number wire children children use lifecycle method sniff change trigger prop known action done bunch handle cases listed really tacky set clear prop immediately setting yuck react way solve common need one team knows one articles found web addressing component communication suggest dispatching events calling methods directly refs thanks open discussion", "num": "6646", "d": "4/2016"}, {"title": "react support node", "body": "accept node engine version nt think regressions caused node okay", "num": "6644", "d": "4/2016"}, {"title": "null reactjs component", "body": "using reactjs create org chart create chart see want add zoom drag behavior chart used see method zoomed called null tried attaching zoom behavior div svg g nothing helps zoomed behavior called event null aspnet project made sure nt reference systemjs configuration many stackoverflow answers mentioned issue related null code similar example like uses old version reactjs systemjs configuration javascript systemdefaultjsextensions true systemconfig map rx react reactdom systemimport appappjs javascript import react component react import rx rx import import person person class orgchart extends component renders org chart render export default orgchart", "num": "6641", "d": "4/2016"}, {"title": "blank space line feed jsx", "body": "know render function return htmlthe problem type space return connect html fragment problembut error type enter generate new line connect html fragmenti also checkout currently component render return one node say list divs return must wrap components within div span component dontforget jsx compiles regular js returning two functions nt really make syntactic sense likewise nt put one child ternary understand problem", "num": "6637", "d": "4/2016"}, {"title": "react breaks support type extension syntax webcomponents custom elements", "body": "attribute lost jsx attribute present needs passed documentcreateelement second parameter", "num": "6635", "d": "4/2016"}, {"title": "change reactperfprintwasted reactperfprintoperations work", "body": "rewrite reactperf aims provide existing features reactperf testable futureproof way however things scope important fix later shipped today prints informations dom native events supposedly happened later information used following way component rendered dom events children emitted batch render considered wasted problems discussed overemphasize overhead dom operations actually often negligible incremental reconciliation assumption dom operations happen batch rendering might become incorrect might want get rid relying batches know would good solution considering constraints people widely consider useful method helps finding sweet spots remove reliance dom offer equivalent eg deeply comparing react elements useful friendly incremental reconciliation", "num": "6632", "d": "4/2016"}, {"title": "reacttransitiongroup lifecycle hooks work", "body": "reacttransitiongroup lifecycle hooks fire examples appear appear logs log think bug react javascript class extends component constructor props super props componentwillappear callback callback consolelog appear componentdidappear consolelog appear componentwillenter callback callback consolelog enter componentdidenter consolelog appear componentwillleave callback callback consolelog leave componentdidleave consolelog appear render return hi class extends component render return", "num": "6631", "d": "4/2016"}, {"title": "refs components working", "body": "refs components using inline function working ref returns lifecycle method however using alternate method refs element returned expected ref domelement", "num": "6630", "d": "4/2016"}, {"title": "new dom renderer inserts parameters creation ie", "body": "new renderer causing flash objects instantiated nested param nodes added read parsed creation never touched edit assuming flash object loaded immediately upon insertion dom next tick happens ie afaik versions including edge related performancespecialcase renderer cc spicyj", "num": "6629", "d": "4/2016"}, {"title": "introduce profile build", "body": "discussed plan add new build configuration overhead comes new enabled means developer warnings etc need gated component tree events eg need gated curious could implemented right system simple current system variables development build except production build see omitted assume mode sensible assumption one want change projects today specify anything development want suddenly lose developer warnings therefore propose following new system proposed system variables development build except profile build production build would let us three separate build configurations use pattern projects well desired would say unlikely ever want add separate fourth configuration cover needs thoughts would bad idea implement cc facebookreactcore", "num": "6627", "d": "4/2016"}, {"title": "ssr warn onscroll", "body": "ref little surprising codepath even hit maybe bug clearly sort check area", "num": "6626", "d": "4/2016"}, {"title": "formal type definitions uptodate", "body": "hey noticed formal type definitions uptodate nt account stateless components probably something like", "num": "6624", "d": "4/2016"}, {"title": "react ignore specific dom element", "body": "per chat gaearon filing issue discuss would like avoid specific element rendered server beeing updated react reaches client one specific use case rendering ad server tags kind pain ars using things like etc render using sometimes react reconciliation client side get rerender stop executing managed track cases fixing render differences server client would trigger dom patching still seems happen advice", "num": "6622", "d": "4/2016"}, {"title": "ability hide component devtools", "body": "react devtools great get convoluted using community libraries times eg reactrouter redux coflux could blessed api allows components show dev tools something simple like using react devtools generally want see components business logic things like helpful see things times though nt imagine components become completely opaque probably checkbox devtools defaults show components assuming something guys busy like concept work implementation", "num": "6621", "d": "4/2016"}, {"title": "typeerror using reactcsstransitiongroup", "body": "react see browser tests never manually triggered bug seemingly timing sensitive cases returns null", "num": "6619", "d": "4/2016"}, {"title": "preserving state propsturtleshell", "body": "preserving state propsturtleshell experimenting bit migrating props state together watch changes could used preserve state multiple render passes addressed like see approach would turn props much better pass values state people use feature would exciting hopefully see first point flaws needs fix order fully function perspective special method keeps track state called upon entire tree loose state wrappers go indepth later explaining would look fetching state passing props used deepexpensive method stylussake used function wrapper make approachable like see picture lot sketchy things going attribute highly experimental really good solution nt nest states children proposals rather passes state updates prop based previous state honestly nt clue added code intended use case avoid state children parent state children methods code also highly reusable perfected notsohighly performancefriendly reuse mainly using expensive task also breaks used long term like state props lifecycle functions mentioned used could also used really feature feature good way keep track state like see following statetoprops lifecycle set existing state new prop returned would allow us take previous state ignore value passed previous states would allow us much faster transition update state new value prop rather rerendering entire state tree propstostate lifecycle need insurance state valid state maybe callback function takes current props allows set new state value like props arguments covered maybe one thing add nt need keep track entire state tree long get previous returned state valid brings issue sure react set right state wrappers think need fixes implementedconsidered tried making addon without breaking encapsulation nt work trying make lifecycle functionsmethods external modules yeah terrible programming citizen clarify need new lifecycle functions making sure people gets informed issue sebmarkbage gaearon zpao jimfb", "num": "6616", "d": "4/2016"}, {"title": "virtual dom", "body": "hi like reactjs much guys tell guys implemented logic code sure create patch using js code also uses facebook calls virtual dom increased performance writing full render virtually checking difference virtual render actually dom creating patch", "num": "6615", "d": "4/2016"}, {"title": "upgrading react breaks autofill behavior controlled inputs", "body": "sign form controlled inputs works fine using react upgrade react autofill behavior longer triggers onchange strangely change document mode edge default react still behaves expected reading changelog change sounds like could related input events handled reliably ie ie spurious events longer fire using placeholder jquense", "num": "6614", "d": "4/2016"}, {"title": "warning looks like using minified copy development build react", "body": "looks like using minified copy development build react deploying react apps production make sure use production build skips development warnings faster see details", "num": "6611", "d": "4/2016"}, {"title": "isnotrequired", "body": "happens every want something like js class mygenericcomponent static proptypes score reactproptypesnumberisrequired text reactproptypesstringisrequired class mymorespecializedcomponent static proptypes score mygenericcomponentproptypesscore text mygenericcomponentproptypestextisrequired however despite looking especially wrong code nt work expected two reasons prop retains flag declaration issue could solved adding flag would simply return nonrequired version validator prop nt flag already required issue could solved adding noop flag would return exact validator feel like two changes would help safely forward proptypes improving code readability process minimal cost term line code would look like js class mymorespecializedcomponent static proptypes score mygenericcomponentproptypesscoreisnotrequired text mygenericcomponentproptypestextisrequired", "num": "6610", "d": "4/2016"}, {"title": "parent component call methods child components", "body": "", "num": "6609", "d": "4/2016"}, {"title": "purerendermixin ignore function props", "body": "use purerendermixin mycomponent updates every time rootref maybe store function like seems redundant function ignored helpful", "num": "6601", "d": "4/2016"}, {"title": "context update using", "body": "use render portal javascript class modal extends reactcomponent componentdidmount thisnode documentcreateelement div documentbodyappendchild thisnode thisrenderportal thisprops componentwillreceiveprops nextprops thisrenderportal nextprops componentwillunmount reactdomunmountcomponentatnode thisnode documentbodyremovechild thisnode renderportal props gt rendersubtreeintocontainer thisnode render return null root component javascript class app extends reactcomponent static childcontexttypes highlightcolor reactproptypesobject context root component updated passed children changed right access correct context component first render context passed change context root component changed access correct context every render wrong code", "num": "6599", "d": "4/2016"}, {"title": "context undefined use constructor", "body": "issue code import react component proptypes react import reactdom reactdom import router route link browserhistory reactrouter export default class app extends component use constructor thiscontext undefined otherwise comment constructor statement thiscontext null uncaught typeerror read property router undefined router thiscontextrouter constructor props super props consolelog render return reactdemo static contexttypes router proptypesobjectisrequired reactdomrender documentgetelementbyid root react versioin remember previous version without problem bug usage problem demo git thanks", "num": "6598", "d": "4/2016"}, {"title": "removechild error renderersdom domchildrenoperations lib adds wrappers dom", "body": "get uncaught notfounderror failed execute removechild node node removed child node source problem lib uikitjs transform dom mounted parentnode greatparent childnode direct parent guess intermediate nodes removed parentnode possible fix edit probably could responsibility lib clean dom componentwillunmount", "num": "6593", "d": "4/2016"}, {"title": "update reactdomserverrendertostaticmarkup documentation", "body": "rendertostaticmarkup described similar except nt create extra dom attributes react uses internally react probably time change clarify still advantages", "num": "6589", "d": "4/2016"}, {"title": "lifecycle compatibilityrecommendation table", "body": "call setstate within ref callback answer yes though probably good idea really confusing permitted good bad illegal especially different things legal different times lifecycles even something legal might bad idea clarify", "num": "6586", "d": "4/2016"}, {"title": "additions props", "body": "working workaround props think props advantages merge props split props way could make thing react mentioned work tweak meaning like react components ultimately like see official react feature thoughts repo", "num": "6583", "d": "4/2016"}, {"title": "proposal replace nodeenv reactenv dev replacement", "body": "come couple times lately issue think perhaps added minification warning people ending seeing nt getting prod code expected also argument want react production still use nodeenv purposes would things figure make sure envify works deciding projects currently also use nodeenv pattern eg relay fbjs thirdparty code etc might good idea though definitely nt happening immediately wanted start discussion", "num": "6582", "d": "4/2016"}, {"title": "possible improvements nodeenv staging warning minification", "body": "hello using react projects found staging servers start generate warning looks like using minified copy development build react deploying react apps production make sure use production build skips development warnings faster still need possible warnings proptypes controlleduncontrolled components debug issues environment close possible production still production case staging environment builded minification check app delivering production proposal remove warning env possible thanks", "num": "6581", "d": "4/2016"}, {"title": "reactcreateelement accept functional component", "body": "relying test suite since accept functional component ca nt longer use functional component project", "num": "6579", "d": "4/2016"}, {"title": "bug title ie", "body": "div title attribute ie environment becomes caton", "num": "6578", "d": "4/2016"}, {"title": "rename form components", "body": "docs say defaultvalue defaultchecked props used initial render need update value subsequent render need use controlled component note docs say used rendering think would better name describes behaviour property better translating terms german means something static ca nt changed runtime input element might mutate runtime eg prefill form current time english native speaker might english language nt differentiate two terms german language", "num": "6577", "d": "4/2016"}, {"title": "dynamically setting background", "body": "consider code var css background url backgroundurl norepeat center center backgroundsize backgroundsize backgroundcolor backgroundcolor css rendered expected change backgroundurl also removes backgroundsize backgroundcolor result becomes", "num": "6575", "d": "4/2016"}, {"title": "componentwillunmount ever called", "body": "error boundries might help someone using using error boundaries nt ever attempt unmount single component instance reason infinite loop eventually run stack space p good tail recursion jsvm could become infinite loop anyway contrived example reactrouterredux combination creates situations type thing happens", "num": "6574", "d": "4/2016"}, {"title": "purerendermixin respect changes context", "body": "accidentally applied purerendermixin page rendered result given props state however broke page since context changed isuserloggedin", "num": "6571", "d": "4/2016"}, {"title": "validatedomnesting", "body": "warning validatedomnesting appear descendant see createapps gt form gt gt connect uploadbtn gt uploadbtn gt connect resourcemodal gt resourcemodal gt connect resource gt resource gt form warning", "num": "6567", "d": "4/2016"}, {"title": "add reactjs repository description appear github search results searching reactjs", "body": "performing global search query github query reactjs repository appear list think people expect appear suggest adding bit text repository description keyword proposal", "num": "6566", "d": "4/2016"}, {"title": "proposal component render required property missing", "body": "reactjs application often repeat following pattern component relying required property const mycomponent props gt propsuser return null return username mycomponentproptypes user proptypesobjectisrequired pattern present also redux pattern reactonlyif trying centralize would nt clear component would render without required property warning could still present development mode", "num": "6564", "d": "4/2016"}, {"title": "issue resulting loss cursor position controlled inputs nt fixed", "body": "release see fixed issue resulting loss cursor position controlled inputs spicyj actually bug nt fixed please consider example steps reproduce input set cursor position input something see cursor moved end", "num": "6563", "d": "4/2016"}, {"title": "trying read property undefined render log error", "body": "trying read property undefined render log error eg add render function even outside return block nothing happens would expected get error message console", "num": "6562", "d": "4/2016"}, {"title": "add commentsattribute indicating component rendered", "body": "per discussion today sometimes developing platform nt devtools safari etc problem looking whole pile markup ca nt tell components rendered without devtools output markup really hard navigate would cool comment nodes attribute helps users navigate output nodes would rendered dev mode flag turned something", "num": "6559", "d": "4/2016"}, {"title": "warn calling setstate ref callback", "body": "refs dom nodes thus suggest nt store state right always store somewhere instance assuming calling setstate ref callback sounds like antipattern", "num": "6557", "d": "4/2016"}, {"title": "controlled number input nt handle e properly", "body": "controlled number input without corresponding function still allows entered numbers inputted afterwards could incorrect nt believe desired behavior jsfiddle demonstrating issue", "num": "6556", "d": "4/2016"}, {"title": "keydown event listener performance slower", "body": "use case rendering x grid components changing state parent component via event per docs like componentdidmount windowaddeventlistener keydown thishandlekeypress componentwillunmount windowremoveeventlistener keydown thishandlekeypress chrome example react taking rerender takes view console examples see mean example example", "num": "6554", "d": "4/2016"}, {"title": "react select value working optgroups", "body": "since upgrading react rendering optgroups value set dom correctly first option always get picked examples react fiddle broken react fiddle works react without optgroup fiddle works environment os x safari version chrome version firefox edit also noticed behavior occurs using", "num": "6552", "d": "4/2016"}, {"title": "warning fieldset element without form parent element", "body": "element present without wrapping element somewhere tree ios chrome throws kills execution much like suggestions would nice react threw warnings scenario development", "num": "6551", "d": "4/2016"}, {"title": "upgrade addons", "body": "upgrading react get following error running think due two addons include would intuitively upgrade since breaking change version like check changelog addon ensure code break however find changelog gitrepo belonging theese addons right approach simply follow react version number every time thanks advance bit lost", "num": "6548", "d": "4/2016"}, {"title": "react regression controlled select elements optgroup displaying value initial render", "body": "using react controlled select elements optgroup elements displaying selecting value provided initial render see following jsfiddle simple test case another fiddle working using react", "num": "6547", "d": "4/2016"}, {"title": "react browserjs nt work csp", "body": "would like react work csp content security policy without adding unsafeeval policy browserjs line contains call function violates csp policy code transformrun function code var opts argumentslength lt arguments undefined arguments optssourcemaps inline return new function transform code opts code possible rewrite browserjs nt violate csp", "num": "6546", "d": "4/2016"}, {"title": "react props value changed string", "body": "", "num": "6545", "d": "4/2016"}, {"title": "video tag support muted parameter", "body": "unable use muted parameter parameters video seems fine", "num": "6544", "d": "4/2016"}, {"title": "maintaining state render passes", "body": "someone interested trying fix meaning would still reference key ish state render pass destructed would reference left destruction rerender state rebuilds previous one kinda like hot reloading watches previous state rendered tries rerender builds changes made new render dunno inaction though something worth chasing", "num": "6543", "d": "4/2016"}, {"title": "iframe load event firing chrome safari src blank", "body": "see trigger alert chrome safari work firefox even react issue webkit issue webkit issue fix react given want consistent events across browsers ps jsfiddle based isuse", "num": "6541", "d": "4/2016"}, {"title": "allow mutating component state using proxies", "body": "instead could used utilizing proxies see", "num": "6540", "d": "4/2016"}, {"title": "react update uncaught typeerror read property addeventlistener null", "body": "hello updating react getting following error", "num": "6538", "d": "4/2016"}, {"title": "reactdomrender documentgetelementbyid target throws error registercomponent", "body": "use reactdomrender documentgetelementbyid renderapp meteor start set render target like error thrown using firefox browser", "num": "6537", "d": "4/2016"}, {"title": "modal aftermodalopen", "body": "", "num": "6533", "d": "4/2016"}, {"title": "got react update error", "body": "run command npm install save react reactdom", "num": "6530", "d": "4/2016"}, {"title": "reactdomserver swaps element props", "body": "example rendered client props pushed beggining attr list making dom different server client", "num": "6526", "d": "4/2016"}, {"title": "react contexttypes proptypes using already static typed language like typescript", "body": "set validation fine concept already using language like typescript takes care typing extremely redundant painful keep updating particular however alteast optional nt please provide option make optional using languages provide static typing top js pointless redundancy eliminated", "num": "6525", "d": "4/2016"}, {"title": "react inline styling producing concatenated style properties separate unique object keys", "body": "assume following styles object provided component prior would result browser computed styles react results chrome chrome results means chrome red background chrome background entirely sure whowhat fault would able shed light change bug intended feature", "num": "6524", "d": "4/2016"}, {"title": "errors using hoc helpful", "body": "put object component decorated say hoc called styledcomponent get error like problem many components decorated like effect error nothing help figure error came would like see things first step think would show full path second would integration react devtools could actually click see highlighted pathcomponent final would possible show tagname contained object well brainstorming better react", "num": "6522", "d": "4/2016"}, {"title": "defaultvalue ignored contains optgroups", "body": "proof", "num": "6521", "d": "4/2016"}, {"title": "stop linking reactpython docs", "body": "reactpython completely deprecated probably cease function soon new versions react docs probably longer link use react jsx python applications page", "num": "6518", "d": "4/2016"}, {"title": "children nt rerender parent component optimised", "body": "seeing something looks like bug written simple test case please refer webpackbin contains test scenario", "num": "6515", "d": "4/2016"}, {"title": "update test utilities docs compatible gt", "body": "since merged docs needs update", "num": "6514", "d": "4/2016"}, {"title": "language translation react", "body": "transpiling language react partly relative react targets mainly babel could done react well think gist", "num": "6513", "d": "4/2016"}, {"title": "fail exist standalone js", "body": "using webpack project works perfectly fine however try upgrade pops error classic issue works fails could one answer", "num": "6512", "d": "4/2016"}, {"title": "minification warning production environment", "body": "minification warning react", "num": "6511", "d": "4/2016"}, {"title": "expose name options proptypes", "body": "looking way iterate component defined proptypes determine type options example like able iterate able determine actual type validator different things passed options working styleguide hoping list possible options pass component props please let know way already thanks", "num": "6507", "d": "4/2016"}, {"title": "number input goes infinite loop chrome debugger", "body": "possibly related mac chrome pretty standard number input like gt click arrow input field change number works properly however open chrome inspector throw breakpoint somewhere rendering flow get infinite loop value input field keeps incrementing possible may chrome bug well stack trace showing looping", "num": "6506", "d": "4/2016"}, {"title": "error using nashorn java", "body": "lately upgraded code java java getting following error anyone help exception thread main javalangreflectinvocationtargetexception native method sunreflectnativemethodaccessorimplinvoke sunreflectdelegatingmethodaccessorimplinvoke javalangreflectmethodinvoke orgeclipsejdtinternaljarinjarloaderjarrsrcloadermain caused javalangarraystoreexception jdknashorninternalruntimeundefined jdknashorninternalruntimearraysobjectarraydatasetempty jdknashorninternalruntimearraysobjectarraydatadelete jdknashorninternalruntimescriptobjectdelete jdknashorninternalobjectsnativearrayshift jdknashorninternalscriptsscript eval program jdknashorninternalruntimescriptfunctiondatainvoke jdknashorninternalruntimescriptfunctioninvoke jdknashorninternalruntimescriptruntimeapply jdknashornapiscriptingnashornscriptengineevalimpl jdknashornapiscriptingnashornscriptengineevalimpl jdknashornapiscriptingnashornscriptengineevalimpl jdknashornapiscriptingnashornscriptengineeval javaxscriptabstractscriptengineeval uglifyuglifyjsrun uglifyuglifyjsexec uglifyuglifyjsmain", "num": "6505", "d": "4/2016"}, {"title": "ca nt reuse server markup required vs required rendering difference", "body": "trying upgrade universal js application without warnings getting warnings however think might issue reactdom reuse markup warning looked specific issue server input field attribute rendered whereas client quick example issue node command line reactdomrendertostring reactcreateelement input required true simple input field rendered client via reactdomrender var el reactcreateelement input required true reactdomrender el documentgetelementbyid app", "num": "6503", "d": "4/2016"}, {"title": "react defined simple react component", "body": "hi using using react create universal app getting following component import component react export default class herosearchview extends component following class call import react react import connect reactredux import coupon commoncomponentscoupon import actions miscactions reduxmodulesmisc import herosearchview componentsherosearchview const mapstatetoprops state gt misc statemisc export class homeview extends reactcomponent render export default connect mapstatetoprops objectassign miscactions homeview kind scratching head following message means note remove page works fine", "num": "6501", "d": "4/2016"}, {"title": "react css manual", "body": "hi manual detailed react style found offical doc explicate well example directly use component html css supposed flex attribute parent react doc seems explain", "num": "6499", "d": "4/2016"}, {"title": "installing reactaddons best practices", "body": "various react addons express peer dependency matching react version write react component library runs multiple versions react depends specific addons implementation detail consume library host environment uses react npm still helpfully install latest version reactaddonsupdate course peerdepends react causing rather confusing unmet peer dependency warnings since consumer looking around block version issues question best practices library situation declare reactaddonsupdate peer dependency meaning consumer personally install react also every reactaddons dependents use seems annoying consumer also sort abstraction break sake version matching perhaps reactaddons independently versioned accept multiple versions maybe declare peer dependency react nt actually need like reactaddonsupdate uses couple small nonreactcore utilities", "num": "6498", "d": "4/2016"}, {"title": "breaking devtools", "body": "using react meteor open chrome console get effect like gone devtools inspector huge loss word", "num": "6497", "d": "4/2016"}, {"title": "reactcsstransitiongroup animation start issue low framerates", "body": "issue run animation issue active class added fast child added reactcsstransitiongroup happens framerate drops fps chrome version reason reason following timeout reactcsstransitiongroupchildjs line framerate low animated object appears directly animation active state browser enough time process previously added enter class fix fixed internally queing function two chained calls instead anybody else encountered issue anybody interested pull request regards mirko", "num": "6495", "d": "4/2016"}, {"title": "warning constructor changing uncontrolled input type search controlled since", "body": "noticed react complains something like changing initial state stops complaining soon put string instead undefined intended nt see big problem difference value undefined", "num": "6494", "d": "4/2016"}, {"title": "testutils better errors methods passing arguments wrong type", "body": "rather minor issue fix simple enough thought file anyway using sometimes write simple errors testutilsscryrendereddomcomponentswithclass foo expected testutilsscryrendereddomcomponentswithclass reactcomponentinstance foo throws stack trace lines type error fixing trivial first line stack trace points offending line expected error nt really obvious others nt throw reached throws bit helpful error would make sense check arguments passed valid throw immediately nt user would end errors along lines", "num": "6493", "d": "4/2016"}, {"title": "rendertostaticmarkup", "body": "said rendertostaticmarkup still docs describing use internal build still apply link docs blog post made suspicious blog post", "num": "6492", "d": "4/2016"}, {"title": "attribute supported", "body": "scene wanted put flash page attribute missing tried another way changed state though element attributes changed flash nt really change", "num": "6491", "d": "4/2016"}, {"title": "decouple old addons react internals", "body": "eg clonewithprops depends reactproptransferer thing depends ca nt delete move things around clonewithprops still uses ones might possible without reaching internals ca nt flat builds also fb still uses clonewithprops shhhh", "num": "6490", "d": "4/2016"}, {"title": "testutilsfindallinrenderedtree iterating components since react", "body": "tests rely went debugger stepped callback function components captured subcomponent coming callback", "num": "6489", "d": "4/2016"}, {"title": "react breaks server rendering checksum", "body": "developing universal app react updating started getting error warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client ut class mdinput name txtcadmus pat server ut class mdinput pattern nam seems bug reordering something like completely sure tried change bunch stuff eg force server client use polyfill using babel transform objectassign plugin nothing solved problem uninstalled react installed problem gone btw pretty simple simulate issue code javascript reactdomrender documentqueryselector main consolelog documentqueryselector main innerhtml consolelog reactdomserverrendertostring react working react working expected", "num": "6487", "d": "4/2016"}, {"title": "css transition group peer dependencies error", "body": "hi try installing react addons transition group get peer dependeincies error think transition group still depends reactaddonsclonewithprops react reactcreateelement error npm reactaddonscsstransitiongroup npm warn packagejson description npm warn packagejson repository field npm warn packagejson readme data npm warn packagejson license field npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodej nodemodulesnpmbinnpmclijs install reactaddonscsstransitiongr save npm err node npm err npm npm err code epeerinvalid npm err peerinvalid package react satisfy siblings peerdepen encies requirements npm err peerinvalid peer reactdom wants react npm err peerinvalid peer reactaddonsclonewithprops wants react npm err peerinvalid peer reactaddonscsstransitiongroup wants react", "num": "6485", "d": "4/2016"}, {"title": "unable type korean input", "body": "hi might know guess issue typing korean recent version problem try type korean letters split korean letters make group letters element example group letters like \ub9ac\uc561\ud2b8 means react composed \u3139\u3163\u3147\u3150\u3131\u314c\u3161 sort r e c first \u3139\u3163 put together make first group letter \ub9ac update type order automatically put together possible rule make type nt put together shows tried uncontrolled input nt set value worked right guess problem onchange amp setstate korean one biggest language world issue make new version react useless every korean user fixed asap found fixed thx", "num": "6484", "d": "4/2016"}, {"title": "setting selection range text input works asynchronously", "body": "hello trying implement text field fine control behavior state text field includes value selection range pass properties selection range nt exposed html attribute text input set using underlying dom element object get value using ref attribute set like note using elemental ui forminput component wrapper around regular input javascript import react react import forminput elemental export default class finecontroltextfield extends reactcomponent static proptypes value reactproptypesstringisrequired onkeypress reactproptypesfuncisrequired selection reactproptypesobjectisrequired start end onkeypressstoppropagationpreventdefault thought might help nt notice put nt call nothing however nt complete solution cursor gets moved end input regardless press keys cursor moves end input selection gets called cursor quickly moves back beginning since works asynchronously deduce react likely sets selection range called way control behavior nt common use case understand nt exposed api setting selection range workaround something aware need get work", "num": "6483", "d": "4/2016"}, {"title": "support asynchronous values like promises observables", "body": "moment quite cumbersome work promises react either write lot code update state inside callbacks use library like reactpromise works children properties based components another option traverse whole virtual dom replace promises passed react read blog post find longer obviously ideal rendering performance since promises standard think simpler way use directly view one option would introduce asyncvalue type promise implementation asyncvalue type would supported children well properties promises could simply used like javascript promise thisstatemypromise opposed supporting promises everywhere directly without promise function unexpected side effects moreover types asynchronous values example observables could added later easily creating another asynctype implementation angular takes similar route async pipe simply write attributes well normal content feature would also convinient libraries like flux allows fetch properties directly inside view avoids reptition relay javascript promise thisstatemodelget property think proposal discussed could nt find thread covers particular topic", "num": "6481", "d": "4/2016"}, {"title": "add component instance onsetstate reactdebugtool", "body": "unless cleanway sniff state without monkeypatching would great get actual component instance raised onsetstate reactdebugtool", "num": "6480", "d": "4/2016"}, {"title": "disable warning minified copy development build", "body": "hello since upgrading get place unit tests warning makes sense prod case toolchain little different use react scala build special containing external js required unit tests minimising means loads faster end valid case minimisation react dev way remove warning appears heap times tests concurrent", "num": "6479", "d": "4/2016"}, {"title": "input tags values invisible sizzlejquery since", "body": "prior input tag like would found sizzlejquery query like since query returns results reduce query check sure enough output wondering use sizzle directly unit tests assert react output indirectly domzipper library also testing", "num": "6478", "d": "4/2016"}, {"title": "immediately setting disabled attribute form submit button using caused form submission take place", "body": "form submit button user clicks submit function calls rerender sets disabled attribute submit button chrome safari network tabs shows post request even starts firefox post occurs note behaviour use codepen example issue occurs latest version react apologies browser quirk vs react issue colleague pretty confused", "num": "6477", "d": "4/2016"}, {"title": "nt warn unitless", "body": "react getting warning generally makes sense allowed unitless like css spec", "num": "6476", "d": "4/2016"}, {"title": "multiple children key warning message prepends actual key value", "body": "multiple children key example jsfiddle react prints following warning console key referenced warning prepends internallooking key specified user bit misleading ideally would mention exact key value set user", "num": "6475", "d": "4/2016"}, {"title": "use template literals", "body": "code conventionreason using template literals consistently using template literals using string concatenation couple occurrences like return prefix keycharat touppercase keysubstring", "num": "6474", "d": "4/2016"}, {"title": "react updates causing issues dom", "body": "hey fairly new developer working app version updated today update remove errorswarnings struggling great relief brought issue specifically app renders fine pages looking fine components text etc right places frozen completely nonfunctional allowing click anything etc error message see follows chrome firefox backtracked could found part node coming null absolutely clue going seems hint exactly causing issue try ripping app apart thorough debugging would nt expect much due unfamiliarity development yet really really appreciate help advance hope problem contribute somewhat improving react ecosystem", "num": "6472", "d": "4/2016"}, {"title": "unable use transpiled classes components react", "body": "following code snippet use strict import react react import render reactdom import jsdom jsdom class kendoscheduler componentdidmount consolelog thisrefscontainer render return jsdomenv function err window const el windowdocumentgetelementbyid container set globals react uses globalwindow window globaldocument windowdocument render el run emit following error code run work perfectly postcompiled code looks like use strict var createclass function function defineproperties target props var lt propslength var descriptor props descriptorenumerable descriptorenumerable false descriptorconfigurable true value descriptor descriptorwritable true objectdefineproperty target descriptorkey descriptor return function constructor protoprops staticprops protoprops defineproperties constructorprototype protoprops staticprops defineproperties constructor staticprops return constructor var react require react var interoprequiredefault react var reactdom require reactdom var jsdom require jsdom var interoprequiredefault jsdom function interoprequiredefault obj return obj amp amp objesmodule obj default obj function classcallcheck instance constructor instance instanceof constructor throw new typeerror call class function var kendoscheduler function function kendoscheduler classcallcheck kendoscheduler createclass kendoscheduler key componentdidmount value function componentdidmount consolelog thisrefscontainer key render value function render return div ref container classname kendocontainer return kendoscheduler function err window var el windowdocumentgetelementbyid container set globals react uses globalwindow window globaldocument windowdocument reactdomrender null test el version info let know information required", "num": "6468", "d": "4/2016"}, {"title": "allow specifying multiple fallback values inline styles eg vendor prefixing ssr", "body": "using string hack override css values react components example want different values npm module polyfilling styles react components worked perfectly warnings nothing updated today everything breaking normally deprecation warnings nt notice warnings change b changelog see anything related understand changed missing something", "num": "6467", "d": "4/2016"}, {"title": "multiple checkboxtoggle affecting state", "body": "hi guys experiencing strange behaviour couple checkboxes behaves checkbox change state selecting snippet reference hand might overlooked something see advise would great javascript import default react proptypes react import mui materialui import getmuitheme materialuilibstylesgetmuitheme import checkbox materialuilibcheckbox let injecttapeventplugin require reacttapeventplugin const styles block maxwidth checkbox marginbottom toggle marginbottom class iotable extends reactcomponent constructor props super props getchildcontext return muitheme getmuitheme componentwillmount injecttapeventplugin handlechange thissetstate camera thisrefscamerainputstateswitched router thisrefsrouterinputstateswitched wifi thisrefswifiinputstateswitched render iotableproptypes camera proptypesbool cameratext proptypesstring iotabledefaultprops camera true cameratext iotablechildcontexttypes muitheme reactproptypesobject export default iotable", "num": "6466", "d": "4/2016"}, {"title": "try autoprefix something css attributes like", "body": "according test need manually add prefix inline attribute case implementing nontrivial graph animationinteraction ui programmatically calculating value manually add prefix every time possible delegate tedious task react anyone point related code try make pr", "num": "6464", "d": "4/2016"}, {"title": "rename reactlib reactprivate", "body": "suggested twitter let get broken components", "num": "6460", "d": "4/2016"}, {"title": "removal reactspread broken compatibility typescript older babel transpilers", "body": "use typescript older version babel react yields errors reactspread function see issue applications monkey patch backwards compatible reactspread function would preferable react come compatibility shim function", "num": "6457", "d": "4/2016"}, {"title": "rendering component shadow root react", "body": "quite easy render component shadow root due nodetype check reactdomcomponent however notice check completely removed always bind events element rather events cross shadow boundary retargeted appear though shadow host instead internals react event delegating fails invoke event function case event delegation correctly handled event able inspect listenerbank retargeting performed propagation event would unnecessary realise react nt support shadow dom natively however seems though taken little step back especially angular shadow dom support horizon merely wondering rationale behind removal check whether happy add back people dislike css module approach", "num": "6456", "d": "4/2016"}, {"title": "setstate obj callback callback called state mutated", "body": "fighting used called race condition sure guys call react world calling snippet component reportargs e gt consolelog later stateargs sendprintrequest e gt w stateurl arg stateargs arg komplex string manipulations goes setstate wurl w args arg consolelog sooner stateargs settimeout reportargs proves point trust either noob observation go instead documentation glitch docs says callback called state mutated eventually bug obviously rooting would way jiffy providing someone lot knowledge react would stick speak cheers walther", "num": "6455", "d": "4/2016"}, {"title": "isomorphic rendering inserted html broken", "body": "react inserted dom nodes inserted plugins adblock browser sync otherwise ignored react new nodes cause say regression since breaks full page isomorphic rendering anyone using plugins scripts insert dom loaded say react ignore anything without datareactid mounting server rendered code edit top react throws case would gracefully continue", "num": "6452", "d": "4/2016"}, {"title": "isomorphic rendering sporadically renders attributes different order", "body": "warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client status update name status value server status update value name statu using react", "num": "6451", "d": "4/2016"}, {"title": "throws warning key refs passing props", "body": "seems newest update passing props child component spread operator console throws warnings associated pull request seems throw issue component class stateless component hence passing props thisprops accessing refs keys child component", "num": "6450", "d": "4/2016"}, {"title": "render check input type", "body": "updated code using react one errors made passing class constructors error gave gave clue wrong problem course needed passed instead think might easy error catch warn help noobs like", "num": "6447", "d": "4/2016"}, {"title": "typing middle controlled text field jumps end", "body": "repro go scroll todo example type anything input field click middle text type another character notice cursor jumps end text field", "num": "6446", "d": "4/2016"}, {"title": "cursor jumping end controlled input browsers", "body": "appears working firefox least chrome amp safari broken really recent regression possible changes blame easiest repo todo list homepage", "num": "6445", "d": "4/2016"}, {"title": "warning changing type value input field", "body": "render method something like first render input number eg change input string get warning new value valid number expected behavior", "num": "6441", "d": "4/2016"}, {"title": "fails set value using", "body": "react correct sets defaultvalue using however defaults first familiar react codebase suspect something change made specifically line", "num": "6440", "d": "4/2016"}, {"title": "secretdomdonotuseoryouwillbefired", "body": "great variable name found reactsrcumdreactumdentryjs", "num": "6438", "d": "4/2016"}, {"title": "curly brackets first line return causes unexpected token error", "body": "curly brackets first line return causes unexpected token error example", "num": "6437", "d": "4/2016"}, {"title": "support passive event listeners", "body": "would good everything passive default optin active needed eg could listen text input events preventdefault used controlled behavior active listeners similarly could unify react native threading model eg one thing could synchronously block ui thread active listeners handling keystrokes cc vjeux ide", "num": "6436", "d": "4/2016"}, {"title": "debugging structure amp automatic cleanup unstablerendersubtreeintocontainer", "body": "implementing unstablerendersubtreeintocontainer use custom components things discussed initial pr would pretty fantastic specifically things debugging structure eg tooltips nt show top level react devtools rather respective subtrees automatic clean parent tree unmounted event bubbling back log nt see issues looks like unstablerendersubtreeintocontainer moment passing proper context", "num": "6435", "d": "4/2016"}, {"title": "setting select value fails using optgroup", "body": "per fiddle output select field edited brevity passing select field value midlothian still showing fife selected value however seem possibly works defaultvalue passed however work passed", "num": "6434", "d": "4/2016"}, {"title": "updates grunt", "body": "specifically released first update bumps lodash dependency", "num": "6433", "d": "4/2016"}, {"title": "componentdidunmount functionality addition componentwillunmount", "body": "would great possible run code component actually unmounted useful consider following component parent service service child child component child componentwillmount starts listening service throw exception child componentwillunmount since parent gets unmounted first service already destroyed existed componentdidunmount service destroyed children unmounted ie component parent service service child child component child componentwillmount starts listening service", "num": "6424", "d": "4/2016"}, {"title": "setstate componentwillmount causes typeerror rendering rendertostring preceded component renders rendertostring", "body": "calling component causes error rendering serverside preceded component renders content using causes typeerror works", "num": "6423", "d": "4/2016"}, {"title": "callback setstate second parameter get mouseclick event handler", "body": "hi use setstate click function pass callback function second parameter please look callback function get event handler reasonable try pass event handler callback like state wrong get event handler right state setstate callback function correctly thank help advance", "num": "6422", "d": "4/2016"}, {"title": "npm install save reactdom throws error", "body": "npm install save reactdom npm http get npm http npm err registry error parsing json npm err syntaxerror unexpected token npm err gt l lt gt lt lt npm err amp amp amp ph amp amp l amp c j amp kt amp gt amp amp x amp amp npm err z b npm err \u02carr amp gt n lt l lt amp amp npm err objectparse native npm err regclient npm err requestselfcallback npm err requesteventemitteremit npm err request npm err requesteventemitteremit npm err incomingmessage npm err incomingmessageeventemitteremit npm err npm err processtickcallback npm err need help may report log npm err npm err email npm err npm googlegroupscom npm err system linux npm err command usrbinnodejs usrbinnpm install save reactdom npm err cwd homekarircodelatihanreactjs npm err node v npm err npm v npm err type unexpectedtoken npm err npm err additional logging details found npm err homekarircodelatihanreactjsnpmdebuglog npm err ok code problem json funny characters id reactdom rev name reactdom description react package working dom disttags latest next versions name reactdom version description dom wrapper subjectively sanity awesome helpers author funny characters located beside word subjectively npm version nodejs version", "num": "6421", "d": "4/2016"}, {"title": "proposal reactdomserver render stream", "body": "tl dr like know much enthusiasm core react team accepting pr ability render markup stream nt need guarantee course like get sense something react team might spending ton time working background currently server rendering accomplished synchronous functions return string server render methods somewhat slow large web pages easily take render depending server also since node single threaded singlecore performance improving rapidly problem moore law eventually solve slowness turn causes two problems production websites large somewhat large html pages first methods return string completely render entire component return even first byte browser meaning browser waiting idle render method called second methods synchronous node single threaded server unresponsive rendering means large page render easily starve renders smaller pages may take ms asynchronous render method would let large page renders yield cpu small pages improving average response time proposed solution proposal add two methods reactdomserver return node readable stream terms behavior methods would return readable stream outputs markup respectively methods could solve problems stream begin emitting content immediately send browser keeping ttfb constant components get larger streams also inherently asynchronous allows large pages starve smaller ones months back forked react library called reactdomstream exact thing fairly well received stars github though modest actual downloads npm also wishlist bug thread repo however maintaining fork less desirable position wonder get integrated core code base implementation ideal ended copying basically every implementation making copied versions asynchronous benefit approach nt affect performance obvious drawback code changes bug fixes would performed forks code ideal recently figured way share code better way result slowed relatively significantly plus minus trying figure tune carefully looking great yet questions think questions like ask team assuming perfectly implemented performance degradation current code even something willing accept pr feature accept important string stream versions code follow code path willing accept degradation performance string version server rendering order get stream rendering constant ttfb keep single code path thanks time thanks great work react tagging spicyj gaearon sebmarkbage instructed react irc channel", "num": "6420", "d": "4/2016"}, {"title": "release", "body": "one thing left blocker list get merged shortly code complete everything else considering nt regression got booted catch later real code changes x remaining regression simulating events x fix failing test fallout x upgrade deps docs x update properties amp attributes removed deprecated methods add new deprecation notes x add notes potentially confusing version mismatches eg returning null functional component actual release x create branch x shrinkwrap x update changelog sync blog post x publish x update travis build docs new branch part release everything published postrelease x update tutorial repo x update fiddles x ensure master release resource synced", "num": "6417", "d": "4/2016"}, {"title": "official method transforming components", "body": "goal eventually kill technology favor less hacky technologies baked react running problem want able transform components regardless babel ie components may may touched babel either already transpiled dependency within etc official way transform components would solve problem immediately could enable incredibly useful functionality realm reusability extensibility managing application state via context curious whether anyone put official thought towards willing accept pull request", "num": "6416", "d": "4/2016"}, {"title": "warning messages use consolewarn", "body": "currently use consoleerror overestimates severity causes devs react strongly message might imply example", "num": "6414", "d": "4/2016"}, {"title": "transitiongroup", "body": "var reacttransitiongroup reactaddonstransitiongroup var content reactcreateclass componentwillappear function consolelog componentwillappear componentdidappear function consolelog componentdidappear componentwillenter function consolelog myboxcomponentwillenter componentdidenter function consolelog myboxcomponentdidenter componentwillleave function consolelog myboxcomponentwillleave componentdidleave function consolelog myboxcomponentdidleave render function return content var todolist reactcreateclass getinitialstate function return show false show function thissetstate show true hide function thissetstate show false render function var items thisstateshow return items could tell problem", "num": "6412", "d": "4/2016"}, {"title": "add support css variables style attributes", "body": "css variables supported chromium use rendering enable us write cleaner flexible code sadly seem use react without resorting various tricks ideally would like able use like would make variable available inside scope div able add using following syntax nt updated try assigning new ruins much point using variable able add remove using reactdom gets sync dom updates addition pretty questions usefulness css variables happy explain", "num": "6411", "d": "4/2016"}, {"title": "onfocusinonfocusout events", "body": "like mouse enterleave almost always want events currently expose run semifrequently actually product work add", "num": "6410", "d": "4/2016"}, {"title": "documentation regarding refs", "body": "would saved alot time documentation refs made clear really work accessing one child one parent unless wrong understanding would good documentation dealt refs explained", "num": "6409", "d": "4/2016"}, {"title": "warning defining proptypes production", "body": "production warning proptypes defined nonempty object could spark change community proptypes conditional nodeenv could automated babel plugin similar build systems would result react apps significantly smaller production warning defined proptypes componentname component production build code consider using plugin babelplugin pluginname third party library open issue alternative saveallbytes text warning proptypes defined componentname", "num": "6402", "d": "4/2016"}, {"title": "deprecate return value", "body": "tracking issue ready deprecate return value yet likely longerterm objective immediate issue reference start get ball rolling reasoning working towards new incremental reconciler means render may complete prior returning anyone relying return value would race condition returned instance potentially fully mounted safelooking code might work time fail time sole discretion scheduler clear issue today become issue start utilizing incremental renderer iff people rely return value prepare new reconciliation algorithm start encouraging people start avoiding return value people instead attach callback ref root component rendering component thus allowing get reference instance mounting complete first step process update documentation state return value legacy people attach ref instead similar string refs", "num": "6397", "d": "4/2016"}, {"title": "proposal externalize inlinestyles", "body": "meeting notes tons different ways render js styles see radium css modules react native web etc see tremendous opportunity powerful thirdparty stylesheet packages without burying lead much react dom nt manage inline styles external inlinestyle library would responsible producing valid response send prop renderer maybe renderer expecting object form could also create expectation around returning primitive object could look something like javascript import react react import stylesheet mystylesheetlibrary var stylesheet stylesheetcreate color blue fontsize consolelog stylesheettostring gt color blue fontsize export default function reactdom call stylesheet produce valid style attribute invariants warnings errors associated stylesheet handled library return react could provide addon maintains existing functionality get things started similarly shifted community however puts react place inline stylesheet package maintainers greater control static inline styles compiled ahead time react spend dev effort maintaining inline style support heavily using inline styles use template strings benefit lighter weight react though nt really huge deal", "num": "6395", "d": "4/2016"}, {"title": "allow arrays css properties take multiple values", "body": "would nice people able write", "num": "6393", "d": "4/2016"}, {"body": "ok reproduced issue jsfiddle", "d": "4/2016"}, {"body": "ok found cause one might encounter issue included time include one react", "d": "4/2016"}, {"body": "found way repair settimeout function merefsfocuselfocus", "d": "4/2016"}, {"body": "zenjava provide jsfiddle demonstrates issue also wondering might issue unrelated react appears breaking react interacting element directly", "d": "4/2016"}, {"body": "duplicate", "d": "4/2016"}, {"body": "best practices form validation best practices react general oneway data flow create reusable components etc nt think opinions specific form validation", "d": "4/2016"}, {"body": "alternatives work existing cdns make sure versions deployed command pull based autoupdating result delays things like jsfiddle tutorial need assets available immediately redux directing people mjackson", "d": "4/2016"}, {"body": "thanks mention gaearon dropping hints zpao like give npmcdn shot served requests last month unique visitors may ready handle kind traffic react would throw way currently working getting sponsors place terms service people know expect delays currently instruct cdn cloudflare cache redirects minutes eg request redirect latest release minutes pushed npm", "d": "4/2016"}, {"body": "yes expected elements checked creation time write turns call props validated rely specify required props recommendation use component sensible fallbacks eg", "d": "4/2016"}, {"body": "sorry bad specificed", "d": "4/2016"}, {"body": "bep good chart trying cover lifecycle", "d": "4/2016"}, {"body": "react way store application state higher eg flux store react renders current state never need send events children events change application state eg scroll position pass current scroll position prop course react allow model application state lower level components get ref component call functions component always escape hatch rather recommended pattern general rule thumb parent component never telling child something never asking child anything obviously exceptions every rule refs first order approximation true find breaking rule often indication probably rethink data flow application specifically rethink state stored", "d": "4/2016"}, {"body": "jimfb thanks reply appreciate time looking post sort posed initial post question beginner like expand bit architecture discussion may moment time maybe consider reopening issue think bring valid point actually veteran framework user like decade dev team part use flux understand tenets managing state well keep child components simple reusable even keeping team insane release clip ai nt easy react nice piece thought amp engineering rule thumb mentioned parent components need tell children directly something solid covers maybe realworld dev cases outlier cases nt fit pattern mention use refs reality nt work pretty nonreactlike workaround see normal valid subset use cases noted examples original post worth thinking little receiving deep link child containers need receive piece timebased information necessarily unique duplicates allowed fact event occurring unique payload components need receive information navigated lifecycle ready process another example list items parent scroll container need animate specific times also needs play well lifecycles items addedremovedchanged need animate piece state timebased message nt need retained react diffing engine great thing often makes cases even painful solve timebased information retention state often undesirable component needs know happened reliable way falling back using refs dispatching events work well child nt ready basically let go around framework hacks include settingunsetting state incrementing dummy integer state storing timestamps manage state changes inelegant thought problem cases could solved way reinforces react core values offering kind topdown stateevent mechanism addition plain state oneway communication model could expanded include either statefulpersistent onetimeuse information two distinctly different types information could communicated similar way best practices could defined around use guys already proven case covered plain state awesome addition model offered official topdown event mechanism guaranteed work component lifecycle would basically obviate need event dispatchers refs think reopen discussion", "d": "4/2016"}, {"body": "covers maybe realworld dev cases outlier cases nt fit pattern mention use refs reality nt work pretty nonreactlike workaround see normal valid subset use cases ok breaking using one escape hatches constantly working reduce still getting fact nonreactlike symptom fact working directly underlying platform escaped react common use cases escape hatches today layout animations etc actively working topics ideas lot complexities nt necessary obvious first glance want make sure get right general however react pretty good job covering common use cases usually people complain something difficult breaking react often mental model wrong still thinking imperatively instead thinking declaratively always easy retrain brain easy fall imperative trap without even realizing another example list items parent scroll container need animate specific times also needs play well lifecycles items addedremovedchanged need animate piece state timebased message nt need retained imperative way looking models equally valid perhaps even better flexible instance suppose someone removes node fraction second later decides actually aborting operation put back want animation effectively slow reverse self imperative fireandforget model animations work well situation declarative spring model component position modeled spring position derived time works really well general case current thinking probably closest described general sense declarative way looking events set list timestamped objects new event occurs simply added list list constant value may reasonably passed props completely eliminated need fire event sense oneway communication model could expanded include either statefulpersistent onetimeuse information two distinctly different types information could communicated similar way best practices could defined around use two distinctly different types information nt distinct convert two onetimeuse information becomes declarative state save list saying would never go route jordan wild ideas year back making components pure function signals events ie nothing stateful everything event transform interesting properties especially makes history timetravel debugging super easy anyway big design space thinking react diffing engine great thing often makes cases even painful solve totally agree perfect solution try make react painless nt want reopen nothing actionable moment understand desireuse case regularly team discussions topics use github issues tracking actionable bugs discussions questions use issues track things plan forward least strong candidate proposal case thing know sure want avoid anything feels imperative like event firing rest assured thinking problem feel free continue discussion thread ca nt guarantee respond every post read pretty much everything passes github another place discussions take place", "d": "4/2016"}, {"body": "raitobezarius npm package", "d": "4/2016"}, {"body": "bad koistya meant without getting error node", "d": "4/2016"}, {"body": "code reference appears general javascript event pass react event system looks like question unrelated react reason going close issue another note use reference dom node selecting id using things like cause interoperability issues components happen choose id prevent component used multiple times page using solve issues", "d": "4/2016"}, {"body": "error uncaught typeerror read property getnativenode null type enter generate new line connect html fragment share code snippet causes error", "d": "4/2016"}, {"body": "one node part seems like duplicate", "d": "4/2016"}, {"body": "space afer return problem new line got error got error mentioned", "d": "4/2016"}, {"body": "yezhiqiusev get error breaking new line statement javascript return value required start line return value try instead js render function return nt unique react part javascript", "d": "4/2016"}, {"body": "aweary thank youit javascript rule got", "d": "4/2016"}, {"body": "think fixed released yet", "d": "4/2016"}, {"body": "log code sample might issue", "d": "4/2016"}, {"body": "gaearon jsfiddle correct lifecycle names logged also provides button add items list see handles child components updating", "d": "4/2016"}, {"body": "note amp called time components initially mounted transitiongroup components added existing transitiongroup reason logged put console statement", "d": "4/2016"}, {"body": "yup mistake sorry guys gaearon correct", "d": "4/2016"}, {"body": "object gets created tag appended document probably", "d": "4/2016"}, {"body": "checked causing", "d": "4/2016"}, {"body": "go system also probably want run tests like tests set set emulate profile build", "d": "4/2016"}, {"body": "makes sense issue internal facebook code react native system nt exist would probably need make push universal talk stakeholders instead going way least need way deploy www nt use precompiled version cc zpao", "d": "4/2016"}, {"body": "think profiling want libraries like redux prod mode default would therefore stick two values nodeenv instead add new profiling variable would default nodeenv production", "d": "4/2016"}, {"body": "jimfb guys check ssr react source check object", "d": "4/2016"}, {"body": "type gets used instead regular", "d": "4/2016"}, {"body": "would entail adding check invariant verifying argument srcrenderersdomsharedreactdomcomponentjs", "d": "4/2016"}, {"body": "could simple might issues checking types since pooling transactions instanceof might work nt recall wed apr brandon dail notifications githubcom wrote would adding check warning invariant checking transaction argument reactserverrenderingtransaction srcrenderersdomsharedreactdomcomponentjs receiving commented reply email directly view github", "d": "4/2016"}, {"body": "zpao could give try", "d": "4/2016"}, {"body": "sounds like aweary might giving try welcome raitobezarius", "d": "4/2016"}, {"body": "raitobezarius zpao branch setup fork hoping give shot insights approach raitobezarius happy hear", "d": "4/2016"}, {"body": "aweary zpao correct wrong think solution return earlier implemented commit okay want still submit pull request added also test branch make sure regression bug", "d": "4/2016"}, {"body": "raitobezarius think checking type would recommended way verifying ssr maybe zpao mentioned earlier sufficient zpao jimfb", "d": "4/2016"}, {"body": "aweary case would defined browser far understand reference global object requirement dom exist thus means ssring checking type would another solution creates dependency code believe could arguably bad means also using another strategy transaction default one ssr warning appear maybe could try ducktype transaction checking behaves like ssrone always anyway nt know idea could get wrong though might right understanding playing around debugger", "d": "4/2016"}, {"body": "think point would prefer make use canonical source information point environment details explicit vs implicit difference implicit could wrong code changes future need could potentially add details transactions checking attributes safe without adding dependency instanceof", "d": "4/2016"}, {"body": "zpao would adding property acceptable", "d": "4/2016"}, {"body": "might want change name might call something like approach need take doable nt looked code say definitely right approach let tell necessary", "d": "4/2016"}, {"body": "zpao seem work think depends whether want rely prototype chain maintained something feel nt going change probably safe use otherwise adding always easy enough", "d": "4/2016"}, {"body": "good catch would like work adding information functional components page", "d": "4/2016"}, {"body": "rather delegate task core contributor", "d": "4/2016"}, {"body": "everyone team busy different things team small help especially area docs appreciated decide submit pr definitely review anything rather see differently let know even end accepting might use parts later call time love get help", "d": "4/2016"}, {"body": "cc aickin experimenting changing server markup validated", "d": "4/2016"}, {"body": "nickdima would recommend figuring dom differs fixing errors anyway theoretically correct solution validation fails question todo react needs able update dom job arbitrarily wrong nodes render tree obvious updates occur situations react blows away entire render tree starts scratch thus ensuring everything matches side effect clearing dom state better worse think sebastian likes current behavior always blow away entire tree validation fails avoids interaction bugs suppose user clicks delete button third document list element rendered ssr document title old todo list rendered client side third item document entitled important financialtax documents react notices element title changes applies update fires click listener delete operation user deleted wrong document throwing away entire dom tree minimizes likelihood happening everything including pending operationsstate destroyed personally nt opinion cc sebmarkbage may opinion", "d": "4/2016"}, {"body": "always possible fix dom diffing eg internationalized date formats ca nt done way server client certain cases windows internationalization libraries differ closed source seems strange ad code would differ though", "d": "4/2016"}, {"body": "well ad code appends elements div inserted could client code boots div already manipulated react tries bring back render function generates", "d": "4/2016"}, {"body": "works right diffs checksum actual dom", "d": "4/2016"}, {"body": "ok something else btw react diff warnings way make sure differences", "d": "4/2016"}, {"body": "probably issue would better discussed since additional attribute component would completely transparent react core reason going close issue feel free open issue repository regards specifics idea objection however would suggest application sufficiently complicated context providers cluttering development experience application might complex would gently suggest maybe application overlyabstracted nt faithful oneway data flow parentowner child obviously nt seen code take grain salt food thought", "d": "4/2016"}, {"body": "try extract reproducible case", "d": "4/2016"}, {"body": "tomdcc also using react router", "d": "4/2016"}, {"body": "gaearon try find time mentioned trigger tests webdriver driven chrome never manually straight forward jimfb", "d": "4/2016"}, {"body": "put simplified copy webdriver test github somewhere run", "d": "4/2016"}, {"body": "thanks interest try extract minimal version today au sometime", "d": "4/2016"}, {"body": "sort wonder related", "d": "4/2016"}, {"body": "thanks writeup biggest problem parents maintain child state need way match component internal state key element generated done automatic way basically end back today managed react reason nt think want pursue within core resolved discussion recommend trying find workarounds userland continue experimenting separate repository really need inject things core probably follow injection strategy similar although technique technically supported could break without notice library becomes popular andor figure solution always reconsider going close since nt think would want figured optimal solution", "d": "4/2016"}, {"body": "nothing child states jimfb trying avoid swapping state props updates props current state opposite props state", "d": "4/2016"}, {"body": "conflating props state concepts still exist higherlevel otherwise would nt need lifecycle", "d": "4/2016"}, {"body": "yeah intended use thing needed new prop gets updated using hydrates", "d": "4/2016"}, {"body": "right biggest problem parents maintain child state need way match component internal state key element generated done automatic way basically end back today thisstate managed react reason nt think want pursue within core resolved discussion", "d": "4/2016"}, {"body": "nt get sorry addon ish solution would contain child states would rather update state based changes previous would similar could fill inn perhaps tell makes child rather parent", "d": "4/2016"}, {"body": "also perhaps got wrong thinking state mean say refer child state huge bumper way another nt understand internal keys child anything really updating state", "d": "4/2016"}, {"body": "dealing virtual dom large part react ie pretty much react implementing virtual dom rendering virtual dom nodes created component function return write jsx nodes used places like specifically look functions bug react core reason going close issue better place discussions like would discussreactjsorg stackoverflow quora irc", "d": "4/2016"}, {"body": "possible point links", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "gaearon sorry code link github", "d": "4/2016"}, {"body": "sure elements return render method composite component implementation manages lifecycle components write updates rendered child new element received dom component implementation updates actual dom new element received", "d": "4/2016"}, {"body": "gist repro bug steps download zip extract open goto enter username password submit form notice state gets updated typing click yes ie would like store password reload page ctrlr doubleclick username textbox select username entered notice state get updated expected currently blocking us upgrading react users expect autofill work", "d": "4/2016"}, {"body": "sure change would affect keeps changes value firing ie fire native onchange event value different work wondering still present master changes strategy bit", "d": "4/2016"}, {"body": "ie fire onchange autofill supposedly safari similar issues details", "d": "4/2016"}, {"body": "fire oninput know happens", "d": "4/2016"}, {"body": "sure works react something changed release broke ie based changelog seems likely culprit", "d": "4/2016"}, {"body": "seems like different fires onchange autofill whereas", "d": "4/2016"}, {"body": "hi entirely clear mean creating issue warning explains problem along link quoted hopefully helpful please describe problems following instructions detail think warning fired incorrectly good reason minify react without envifying please let us know closing issue vague actionable current form cheers", "d": "4/2016"}, {"body": "proptype general validation function limited ones provide means could define returns successfully function nullundefined otherwise forwards value previous proptype checker validation done entirely userland without changes react core find useful would encourage make open source people reuse code general proptypes mostly legacy point things move toward static analysis tools like flow nt really adding new features proptypes moment reason going close feel free continue discussion thread end implementing publishing source code please link repository issue", "d": "4/2016"}, {"body": "see mean think issue solution using custom validators would require either reimplement every native proptypes external library might bad idea actually bit scope use bad implementation would catch validation errors thrown native proptypes ignore match right regexp feel like would nt reliably work edge cases implementing core would much reliable clean simple opinion issue might bug feature request except would api bug rather usuals implementation bugs understand current position", "d": "4/2016"}, {"body": "general necessary try express relationships moving state parent letting child rerender based changes thinking react great guide explaining rare edge cases actually want call method child instance eg imperatively set focus field use refs please note use bug tracker react stackoverflow might better place ask questions cheers", "d": "4/2016"}, {"body": "yeah sebastianjordanmyself discussing months back problem mental model purerendermixin props change component rerender ignore functions someone could get situation changing function eg capturing variable within closure component update becomes hard debug difficult reason breaks mental model said ignoring function changes usually safe improve performance app worth noting purerendermixin literally couple lines code wanted write version nt cause rerender function references change would easy thing done entirely user land find useful would encourage make open source people take advantage functionality going close takes todo list probably something react core feel free continue discussion thread andor build userland", "d": "4/2016"}, {"body": "possible something implements eg react redux known issue alternatively may new issue provide jsfiddle reproducing", "d": "4/2016"}, {"body": "pass second param", "d": "4/2016"}, {"body": "linzerui works thanks lot", "d": "4/2016"}, {"body": "use fabricjs react meteor", "d": "4/2016"}, {"body": "source problem lib uikitjs transform dom mounted think something like supported react tell react explicitly never update children component manage manually third party library implementing component however expect change dom arbitrarily rerender react time", "d": "4/2016"}, {"body": "possible us predict possible mutations could applied dom general rule external libraries mutating react dom although allow add children leaf nodes long node always remain leaf node never receive children managed react", "d": "4/2016"}, {"body": "ok problem agree decision found way clean dom components still need updatable part larger tree page editor", "d": "4/2016"}, {"body": "description correct asis react data ids", "d": "4/2016"}, {"body": "also seen options immutability helpers nt think covers also spread want eyes addon approach", "d": "4/2016"}, {"body": "think correct solution least handle user land separate library becomes popular could consider addition react general recommendation anything possible handle userland prove viability trying pull react", "d": "4/2016"}, {"body": "yeah nearly finished thinking making react explicitly integrating library could case", "d": "4/2016"}, {"body": "something becomes sufficiently popular value merging react core always considered option", "d": "4/2016"}, {"body": "doubt good enough coding side integrate react idea great react adopt", "d": "4/2016"}, {"body": "seems like solid pattern libs use bundledfrontendgeneration apps makes sense redux use used contexts get must conflict maybe world follow suit", "d": "4/2016"}, {"body": "maybe override would optional", "d": "4/2016"}, {"body": "like idea people able set whatever else want call fall back default way like ryanflorence pointed special environment variable every library using default something tricky fancy trying could explicitly set environment variable override", "d": "4/2016"}, {"body": "definitely want avoid must conflict maybe world follow suit yea interesting could approach take also concern sometimes running node want fallback might necessary others proposed would make transformed code even uglier least confidence minifiers handle output thanks quick feedback", "d": "4/2016"}, {"body": "babel interesting case people use client production reads fallback people specify introducing could solution feel like would make babel situation confusing", "d": "4/2016"}, {"body": "historically run code qa staging nodeenvs minification work accurately reflect soon production builds run nodeenv production clientside code checks stage true environment loggers reporters call differently based actually environment point think exceedingly difficult solve vendor side nodeenv pattern prevalent point lookup always faked meet needs build wonder something user land resolve", "d": "4/2016"}, {"body": "nodeenv really well established standard across entire javascript ecosystem see nothing wrong people something like supporting people list dev qa staging prod etc need consistent way determine whether app runningbeing built optimised mode development mode nodeenv provides brilliantly may cases useful put one specific librarypart code development mode everything else prod mode visa versa think corner case asked three linked issues think wait someone actually wants feature build build stubailo optional variable override default nodeenv behaviour", "d": "4/2016"}, {"body": "think worth noting possible write browserify transformwebpack loader applies different environment variable specific library way useful without needing library implement separate environment variable", "d": "4/2016"}, {"body": "babelplugin matter would work server side really like suggestion", "d": "4/2016"}, {"body": "seems like variable often abused nodejs community react starter kit recommend use distinguish production optimized aka release development nonoptimized aka debug builds use variable differentiate multiple deployment types eg", "d": "4/2016"}, {"body": "general minifying code staging simulate production environment probably running production copy react case subtle differences code paths nt everything right never know type bug really bite anyway closing duplicate", "d": "4/2016"}, {"body": "mean accept far see accepts kind components react supports otherwise nobody would able use jsx example future please try provide reproducible example filing issue least provide context hard help without understanding precisely trying exactly broke thanks", "d": "4/2016"}, {"body": "response op", "d": "4/2016"}, {"body": "please provide example reproducing issue entirely clear broken opinion", "d": "4/2016"}, {"body": "error add canvas animation web background add body consumption performance thanks", "d": "4/2016"}, {"body": "mtsee sounds like saying react bug close believe found bug react please provide jsfiddle demonstrates issue reinvestigate", "d": "4/2016"}, {"body": "technically correct however based existing dom property called go route also rename ship sailed", "d": "4/2016"}, {"body": "naming decision based dom property behave exactly like element value mode flag either value default initially value mode flag must set default value mode flag mode default contents element represent value element default value defaultvalue idl attribute getting must return element default value setting attribute must set element default value element value mode flag mode default set element textcontent idl attribute well defaultvalue idl attribute getting must return element default value setting attribute must set element default value element value mode flag mode default set element textcontent idl attribute well means browsers also changed initial rendering input field changes set ca nt set anymore see quick dirty example value idl attribute must act like element textcontent idl attribute except setting addition child nodes changed element value mode flag must set value currently react sets default value initial render reason default value changes rerender react wo nt handle think either renamed change behaviour updated long set", "d": "4/2016"}, {"body": "maybe allow update first change causes value mode change apr pm thomas mayrhofer notifications githubcom wrote naming decision based dom property defaultvalue behave exactly like element value mode flag either value default initially value mode flag must set default value mode flag mode default contents element represent value element default value defaultvalue idl attribute getting must return element default value setting attribute must set element default value element value mode flag mode default set element textcontent idl attribute well defaultvalue idl attribute getting must return element default value setting attribute must set element default value element value mode flag mode default set element textcontent idl attribute well means browsers defaultvalue also changed initial rendering input field value mode default inputvalue changes value mode set value defaultvalue ca nt set anymore see quick dirty example value idl attribute must act like element textcontent idl attribute except setting addition child nodes changed element value mode flag must set value currently react sets default value initial render reason default value changes rerender react wo nt handle think defaultvalue either renamed initialvalue change behaviour defaultvalue updated long value mode set default receiving modified openclose state reply email directly view github", "d": "4/2016"}, {"body": "think would make sense create separate ticket", "d": "4/2016"}, {"body": "result fact combining short syntax setting extra specific properties fine initial render however since updated render set node overrides properties like plain css order operations important remember recommendation treat js styles like css dynamic unlike css either use shortcut syntax entirely ensure property want set explicitly declared action issue vs working due explicit setting since nt intend write css parser know varying ways specify shorthand properties think going close unfortunate expected behavior sorry caused problems", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "effectively duplicate", "d": "4/2016"}, {"body": "hi use site issue tracker believe bug react need provide details expected saw show code add context around trying dumping warning message helpful case believe warning says everything need know another one forms nested html browser replaces markup breaks react solution remove extra form", "d": "4/2016"}, {"body": "createapps children component form children upload click show detail form component want know design component warning disappear ignore problems", "d": "4/2016"}, {"body": "valid html solve remove either parent form child form pass prop child component telling render form also nt use form element need inputs may render directly ignore warning risk render incorrectly browsers potentially break react interaction page", "d": "4/2016"}, {"body": "thank much", "d": "4/2016"}, {"body": "name react disagree changing reactjs description however could added keywords list", "d": "4/2016"}, {"body": "keywords list github maybe adding packagejson would get indexed ranked high otherwise totally right called react wo nt adding reactjs documentationreadmeetc", "d": "4/2016"}, {"body": "perhaps keywords section bottom readmepage poorman solution dealing keywords wiki systems nt support keywords nt feel strongly one way make decision disposition bug", "d": "4/2016"}, {"body": "going close nt think really different project eg searching github emberjs nt get project either really worth hacky things try optimize", "d": "4/2016"}, {"body": "components suddenly disappearing refactoring would frustrating imo", "d": "4/2016"}, {"body": "actual behaviour production bundle required property missing undefined exception component nt render development still receive missing proptype warning component nt render component nt render anyway development mode still completely aware everything production would nt see exception", "d": "4/2016"}, {"body": "proptype checks measurable impact performance application proptypes nt checked production runtime behavior development mode must match behavior production mode behavior going change ie nt render component would forced proptype checks production nt want slow reason probably going close issue feel free continue discussion thread reopen thinking matter changes substantially", "d": "4/2016"}, {"body": "must defer updating value input selection information lost ie think rejected change updated point apparent place put cursor end", "d": "4/2016"}, {"body": "bug fixed could explain", "d": "4/2016"}, {"body": "bug fixed related synchronously updating input state always supported broke asynchronously updating without losing position never supported syranide noted", "d": "4/2016"}, {"body": "ok thanks", "d": "4/2016"}, {"body": "sorry one question must defer updating value input selection information lost know setstate defers rendering question setstate defers rendering cursor nt lost via settimeout cursor lost", "d": "4/2016"}, {"body": "loosely speaking deferring rendering batching updates executing immediately current react job finished rendering frame inbetween sense operation synchronous respect current rendering frame schedules another rendering frame know might execute later user started typing things input field inherent selection information thus setting text field means logical place put cursor end start whereas done synchronously input field sees value produced user current value updated next time renders ends actually updated", "d": "4/2016"}, {"body": "thanks great answer understand last thought event component rerenderd asynchronously focused see problem set value preserve cursor nt dug deep might work may answer sorry taking time", "d": "4/2016"}, {"body": "reproduce likely toplevel rendered triggered promise using promise implementation log unhandled rejections get swallowed think bug react please provide example reproduces close", "d": "4/2016"}, {"body": "right triggered promise rejection nt handled beginner mistake thanks help", "d": "4/2016"}, {"body": "problem suggest make sure use implementation logs unhandled rejections easy make mistakes like", "d": "4/2016"}, {"body": "would owners parents fb would look like otherwise best practice helpful also go dev mode since names get minimized removed expensive putting attribute everything would risky since someone start relying attribute selectors break prod", "d": "4/2016"}, {"body": "favor comments way would customizable display component key even info like nb updates would really expensive display full state props avoids problems people thinking attribute could used css comments probably node may personnal taste dont like tags huge parameters html really happy get rid reactid tags would like see another even bigger parameters disturb peace developement laughing", "d": "4/2016"}, {"body": "comments would require child reordering logic take account probably possible would nt want make complicated harder change already difficult enough come new algorithms flip side nt hard get real devtools working browser original devtools worked safari mobile debugging using remote protocol protocol even easier could open devtools ui stand alone iframe environment inspects main page could also remote debugging using rpc protocol already react native would get us features building perf tools etc", "d": "4/2016"}, {"body": "flip side nt hard get real devtools working browser lot browsers world including ones dumb phones ca nt reasonably cover target devicesenvironments sometimes bugs appear specific browsers especially olderdumber ones nt support devtools one primary motivations conversationissue", "d": "4/2016"}, {"body": "nt think would hard reconcile comment nodes especially since nt really walk dom anyway since retain references nodes directly though suppose might potentially change stateless functions regardless change stateless functions touching algorithm anyway could potentially add said attribute solution seems fine nodes multiple composite parents nt add dom nodes attribute could parentowner path element anyway nt really strong preference solve would good general solution nt depend us supporting particular render target since doubt want build devtool support various webviews various platformsenvironments", "d": "4/2016"}, {"body": "support browser websocket easily install hook web page websocket polyfills like socketio covers every browser simply present ui different browser one remote debugging safari debugger used work react devtools first launched", "d": "4/2016"}, {"body": "touching algorithm anyway could potentially add exactly makes refactoring hard ca nt reason special cases many think", "d": "4/2016"}, {"body": "hey folks love take take crack bug", "d": "4/2016"}, {"body": "let confirm assumption working could see argument allowing setstate ref callback also refs nt always dom nodes composite components refs amp could something besides storing node regardless get infinite loop call setstate componentdidupdate let rule potential use case yet cc sebmarkbage", "d": "4/2016"}, {"body": "yea plenty use cases beauty ref callback start acting child becomes available something either child parent effectively componentdidmount child", "d": "4/2016"}, {"body": "sebmarkbage specific use cases mind thing think child measurement probably wait children render measure componentdidmount instead avoid layout thrash measuring multiple children would involves set state", "d": "4/2016"}, {"body": "chatted sebastian conclusion discussion yeah probably supported discouraged sounds kinda like antipattern refs escape hatch anyway whatever want point action item issue update docs create compatibility table action within lifecycle indicateclarify current thoughts around pattern closing favor", "d": "4/2016"}, {"body": "sounds like bug probably good first one", "d": "4/2016"}, {"body": "probably good first bug surely involve least looking event system anything good first dive code people welcome try", "d": "4/2016"}, {"body": "yeah torn labeling one need good third bug label reason thought might reasonable first one code controlled text inputs probably copypasted nearly verbatim fact little surprised nt already follow code path", "d": "4/2016"}, {"body": "pretty sure typing nt fire events fires interactions nt even know anything happening otherwise mostly sure nt differentiate text number types already running code", "d": "4/2016"}, {"body": "pretty sure another case special inputs playing well controlled part valid numbers specific combinations actually translate valid numbers content translate valid number reported value acts nothing changed afaik way around", "d": "4/2016"}, {"body": "yep syranide correct sure anything moment short writing handlers based cursor position keystrokes maybe need request revisions longer term thing", "d": "4/2016"}, {"body": "measuring production build", "d": "4/2016"}, {"body": "try add instead know developer builds regressed nt case production ones", "d": "4/2016"}, {"body": "doh newb mistake nt think adding minjs brings sub repeating tests discernible difference thanks replying", "d": "4/2016"}, {"body": "spicyj remember saying ideas low hanging fruit make dev builds fast anything particular comes mind could nice first bug", "d": "4/2016"}, {"body": "wait dev slower dev nt sound right gaearon got ta start profiling see slow", "d": "4/2016"}, {"body": "react optgroups except around expected option works", "d": "4/2016"}, {"body": "hi thanks reporting duplicate two issues linked fixed master fix nt gotten release yet let keep open people nt file issues", "d": "4/2016"}, {"body": "great hear fix coming thanks gaearon", "d": "4/2016"}, {"body": "fixed gaearon generally close issues things merged master reason otherwise hard tell still active item needs fixed verses things already fixed remain open help people find could read comments takes time especially going bunch often nuanced regards remaining action items nt want read hour comments discover whole thing fixed longer relevant", "d": "4/2016"}, {"body": "sounds like ios bug best tell reading spec tag required associated form per form attribute question mark type presumably indicates attribute may null form owner readonly attribute htmlformelement form spec preview explicitly states form attribute used explicitly associate fieldset element form owner links formassociated element relationship form element called element form owner formassociated element associated form element form owner said null first example wiki nonauthorative without element seems consistent spec recommendation file bug ioschrome", "d": "4/2016"}, {"body": "jimfb makes sense thanks quick response", "d": "4/2016"}, {"body": "changelog master real change css addons see small patches interal module styling docs along performance cleanup regarding conditionals etc closest thing found pr pr merges days back time released nt think break things without documenting breaking changes yeah watch blog posts usually inform even", "d": "4/2016"}, {"body": "fwiw could update revert npm via github manually see something breaks", "d": "4/2016"}, {"body": "would intuitively upgrade reactaddonscsstransitiongroup would jumped major version however find changelog gitrepo belonging theese addons react blog post lists complete changelog including addons actively work addons expect many breaking changes looked blog post seems made changes either addons", "d": "4/2016"}, {"body": "thanks clarifying", "d": "4/2016"}, {"body": "could try setting render method questions replies give indication would", "d": "4/2016"}, {"body": "mavisd seeing behaviour react app moment falling back setting attribute selected option tag trigger react warning using select instead", "d": "4/2016"}, {"body": "necessary methods autobound also code identical behaves differently different versions indication might react fault mavisd think fixed fix get next patch release confirm working build master closing reason", "d": "4/2016"}, {"body": "ref", "d": "4/2016"}, {"body": "think issue content security policy communicating sequential processes yeah confusing hackvertor code looking part react unless want run babel browser need use react react builds available website include code use trouble getting transitive dependencies react build process approved code review something like closing reason problem react", "d": "4/2016"}, {"body": "fwiw would fixed see ifwhen gets merged", "d": "4/2016"}, {"body": "appears work fine", "d": "4/2016"}, {"body": "cometta browser using", "d": "4/2016"}, {"body": "right retested sorry proceed close", "d": "4/2016"}, {"body": "basically propose reaching elements garbage collector possible imagine plottwist mark amp sweep algorithm", "d": "4/2016"}, {"body": "edit try tweaking ref us", "d": "4/2016"}, {"body": "sure understand describe rephrase use case perspective trying accomplish", "d": "4/2016"}, {"body": "put use case would another component using ref gets left alone pass state means try destruct rebuild reference without full rerender perhaps somewhat weird caching solution garbage refs great way send message particular child instance way would inconvenient via streaming reactive props state however goto abstraction flowing data application default use reactive data flow save refs use cases inherently nonreactive means got correct component render ref component instance component way could force react track component sure healthy common friend memory though like stay open discussion people get point otherwise close", "d": "4/2016"}, {"body": "understand supposed refs give access component instance case want call methods imperatively string refs eg make instance available callback refs eg let thing generic composable understand trying though", "d": "4/2016"}, {"body": "functionality except keep track state would state component simplest form without functionality mounted way functionality imagine would somewhat similar callback refs state mind refs", "d": "4/2016"}, {"body": "example used refs mainly callbacks nature way ref", "d": "4/2016"}, {"body": "nt think certainly ca nt access objects gc general issue externalizing state tracked", "d": "4/2016"}, {"body": "reading discussion thanks heads actually somewhat similar looking jimfb", "d": "4/2016"}, {"body": "unlike appear fire chrome odd firing event react", "d": "4/2016"}, {"body": "proxies supported legacy browsers likely couple years use outside development mode ie production code path", "d": "4/2016"}, {"body": "curious browserversion using see error chance chrome reproduce firefox browser", "d": "4/2016"}, {"body": "also provide simple jsfiddle demonstrates issue", "d": "4/2016"}, {"body": "jimfb browser chrome version also reproduces firefox developer version big application try create small fiddle reproducing", "d": "4/2016"}, {"body": "also saw annoying message output every time adopting react found typeerror removed deleting onclick event div able reproduce every time jsx jsx happened chrome firefox threw typeerror target null safar", "d": "4/2016"}, {"body": "rickychien omerts someone could try produce minimal repro jsfiddle would helpful", "d": "4/2016"}, {"body": "rickychien omerts another question guys using reactrouter andor redux", "d": "4/2016"}, {"body": "seeing issue using reactrouter redux see even switch back react nt think specific react reproduce issue switching pages via using browser backforward buttons possible actually issue removing listener button fixes issue us well weirdly application tons buttons listeners get removed route change cause error trouble figuring repro", "d": "4/2016"}, {"body": "posted codepen", "d": "4/2016"}, {"body": "issue well nt think related newest release started issue added method stateful component removed function error longer occurs core dependencies", "d": "4/2016"}, {"body": "trimmed case involves react fiddle js var callbacks function emitchange callbacksforeach c gt c class app extends reactcomponent constructor props super props thisstate showchild true componentdidmount thissetstate showchild false render return thisstateshowchild amp amp class emitschangeonunmount extends reactcomponent componentwillunmount emitchange render return null class forceupdatesonchange extends reactcomponent componentdidmount thisonchange gt thisforceupdate thisonchange callbackspush thisonchange componentwillunmount callbacks callbacksfilter c gt c thisonchange render return reactdomrender documentgetelementbyid container", "d": "4/2016"}, {"body": "also observations happens listeners get queued mobile safari seems related batching initial reproduction cases still used noticed navigating inside instead repro problem wrapping small repro use events seems like stuff inside initial render batch effect calling", "d": "4/2016"}, {"body": "replacing reproduces", "d": "4/2016"}, {"body": "guess issue calls seem imply guaranteed happen callbacks happened may break one callbacks cause children component unmount think sequence composite parent enqueues dom component mounts dom component enqueues domrelated starts calling callbacks composite registered first queues update child causes dom component unmount dom component unmounts proceeds calls unmounted dom component callbacks", "d": "4/2016"}, {"body": "yet another manifestation issue time master gives", "d": "4/2016"}, {"body": "looking sure proceed think spicyj might context visualization happens note happens", "d": "4/2016"}, {"body": "reported earlier two errors caused underlying problem propose close one favor jimfb", "d": "4/2016"}, {"body": "error since upgraded", "d": "4/2016"}, {"body": "per gaearon yes duplicate close favor", "d": "4/2016"}, {"body": "upgraded get fix rendering got invariant violation findcomponentroot unable find element navigating react router upgrading instead get read property addeventlistener null error see create test case wanted note record since seems like bugs related", "d": "4/2016"}, {"body": "provide simple jsfiddle ideally without meteor demonstrates issue", "d": "4/2016"}, {"body": "upon close inspection dom turns react adds default", "d": "4/2016"}, {"body": "pricetula hi hope mind formatted messages code highlighted include small blocks backticks large blocks triple backticks helps everyone read issue little easier future cheers", "d": "4/2016"}, {"body": "gaearon lol might noticed new github thank", "d": "4/2016"}, {"body": "pricetula problem welcome", "d": "4/2016"}, {"body": "current version react use instead", "d": "4/2016"}, {"body": "yeah error related configuration rather bug react core reason going close bug since try keep github issues tracking bugs react core feel free continue discussion thread move question stackoverflow", "d": "4/2016"}, {"body": "issue due wanting react update new versions compatible also switch using enforce peer dependencies proceed risk", "d": "4/2016"}, {"body": "think duplicate", "d": "4/2016"}, {"body": "duplicate", "d": "4/2016"}, {"body": "thank feedback context api experimental feature api definitely work progress react phases proptypes favor static analysis facebook mostly uses flow expect context api also stop relying proptypes however think plan change near future least confident want change context", "d": "4/2016"}, {"body": "context types likely become optional nearforeseeable future although suppose anything could change several reasons would want keep contexttypes revolve around fact proptypes implicit thus much harder reason props easy see passed explicitly reasons readability documentation correctness context types implicit name conflicts making much error prone types ca nt verified compile time even language like typescript important reason opens door internal optimizations specifically helpful know context variables component listening allows us know components may need rerendered variable changes using typescript nt want jump hoops specifying types context variables specify match anything effectively specifying name contexttype minimum information react needs runtime", "d": "4/2016"}, {"body": "nathanmarks already faced similar issue materialui repository ended fixing chrome buggy implementation fixed commit follow thread details wondering nt issue quick fix would use overlapping styles like suggested", "d": "4/2016"}, {"body": "oliviertassinari tested react react simple component jsx const example extends reactcomponent render const styles background none backgroundcolor red chrome dev tools inspect element styles panel saw different computed values react react", "d": "4/2016"}, {"body": "hmm could objectassign play nt think would matter initial render least nt think use copy style object skimming code path would make sense order getting screwed red gets set none computed values going misleading due use createelement generated string markup initial render would look like create dom node set style like would updates chrome nt report sequence computed value see final value would interesting followed steps react versions chrome see happens", "d": "4/2016"}, {"body": "zpao strangely difficulty reproducing using simple example component example wonder clicked browserstack chance finish rendering completely oliviertassinari may well correct assertion going testing end swinging back around react reopen issue thanks explanation way definitely helps understand initial render output", "d": "4/2016"}, {"body": "objectassign issue pretty random inconsistent experience thanks checking", "d": "4/2016"}, {"body": "zpao figured object property iteration order ending different setvalueforstyles touched particular script even though iterate styles still original order preserved result gets iterated chrome react updated codebasedeps etc since object property iteration order ca nt guaranteed understand means definitely something need solve generate inline styles", "d": "4/2016"}, {"body": "mention cloning elements styledcomponent think realize error may tricky way catch errors styledcomponent decorator add information", "d": "4/2016"}, {"body": "using decoratorsinheritance hoc higher order components render children per nt problem nt hide component name may relevant might able achieve looking setting displayname regardless mostly usage question use github issues track bugs react core usage questions better addressed stackoverflow reason going close issue feel free continue discussion thread move stackoverflow extent feature request tracked places like", "d": "4/2016"}, {"body": "think fixed", "d": "4/2016"}, {"body": "following along assume spacerat referring old blog post date part living docs generally nt go back time update old posts things constantly changing time hard enough keep main documentation uptodate someone wants add red note box says update pyreact deprecated think would ok would likely accept pr cc zpao feels strongest updating historical posts anyway going close take radar nt generally trackupdate historical posts", "d": "4/2016"}, {"body": "meh somebody want add note like would fine nt think need change content post linking actual project probably good nice big deprecated notice readme", "d": "4/2016"}, {"body": "ah actually nt noticed blog post thing comes google react python anything similar formatted rest react documentation yeah seems like shame keep every old blog post date suppose jsxtransformer becomes completely nonfunctional might worth making pyreact deprecation notice bit stronger point really nitpicking", "d": "4/2016"}, {"body": "usage question rather bug react function explicitly telling react update obviously update expected behavior optimizing components take arbitrary children somewhat nontrivial general require walkingdiffing children way completely general children technically possible reasons guarantee props different also keep mind used somewhat sparingly critical parts application diffing values especially tree values like likely expensive ultimately going return true anyway react need diffing reconciliation wasting cpu cycles ie might actually cheaper whole skip implementing function anyway going close issue since bug react feel free continue discussion thread move discussion stackoverflow", "d": "4/2016"}, {"body": "might inconvenience even conceptual problem definitely bug note js shouldcomponentupdate nextprops na\u00efve demo purpose return nextpropscolor thispropscolor indeed bail changes enough usually people compare props shallowly included comparison begs question negating benefits children static hoisting constant elements production would help apply cases rely inside child element discussion taking might want look historical context", "d": "4/2016"}, {"body": "gaearon realise implementation na\u00efve make sense thinking fact even though children passed outside rendered within parent render function wherever going clear example obviously contrived nt really make sense probably would nt try optimise things case real scenario however deal trying optimise things hundreds components give bit insight building building low level performant grid component similar fixeddatatable handle thousands rows columns well handling lots realtime updates using immutablejs data easier efficient handle problem appeared changed top level api passing value getters cell value wanting let users render cells way want using getters top level component meant easy optimise component using would end receiving prop easy check changes api nt really flexible made hard implement anything else say user wants customisable helper text hover using example pass way another etc came idea able pass custom components fashion fixeddatatable ca nt seem able stop everything rerendering even needed especially example scrolling basically called scroll meaning lots updates lot cells comments regarding technically difficult would optimise arbitrary children wonder even possible still feels ugly parent component check changes children props feels like breaks encapsulation composition whole point able pass children outside even props easily compose things separate concerns responsibilities gaearon mention indeed nextpropscolor thispropscolor bail children changes enough usually people compare props shallowly children included comparison would practice understand parent props include children would nt basically check case feel like would different every render feel like negates benefits react also offers ability pass arbitrary components children even props", "d": "4/2016"}, {"body": "use case take approach believe fixeddatatable takes rather accept accept example make sure function references change every render bind fine sure closing bring updates case work around make necessary data props table pass back props whenever needs js render return renderrow data return way unless changes rerendering rerender every row would practice understand shallowcompare parent props include children would nt basically check nextpropschildren thispropschildren case feel like would different every render yes however components experience take custom comes limited cases usually works fine make work good using workaround suggest", "d": "4/2016"}, {"body": "mean passing render callback nt considered antipattern", "d": "4/2016"}, {"body": "antipattern loaded word tool like tool upsides downsides particular case think appropriate", "d": "4/2016"}, {"body": "well antipatterns bad always would nt classify passing render callback antipattern classify pattern pattern used pretty commonly parent needs pass necessary info unowned child think least good cloning elements using context", "d": "4/2016"}, {"body": "meant nt passing render component makes component inherently impure render callback access sorts outside variables function closed meaning shouldcomponentupdate would nt help", "d": "4/2016"}, {"body": "long callback pure everything remains pure component still function props even though prop happens pure function check equality function see function referentially equal old function", "d": "4/2016"}, {"body": "gaearon updated example suggested technique although works feel like basically broken encapsulation made couple children account data needs pass explicitly via understand render arbitrary children render callback somewhat practical considering current example string different making component accept prop anyway render mean component responsible", "d": "4/2016"}, {"body": "way see get render thousands rows keep perfect encapsulation smile something got ta give said see encapsulation breaking rename pretty abstract work different kinds children fact pass function rather children optimization maybe want support million rows future creating waste anyway build support lazy creation right api really see issue", "d": "4/2016"}, {"body": "overall good question ask elsewhere try keep github focuses bugs specific issues react using discussreactjsorg stack overflow generally better places going close since nothing directly actionable something going build react several reasonable approaches solving problem involve additional tooling said bit insight fb special component gets transformed knowledge target language translations would something like use example ends lookup option either statically transform new string babel whatever right set languages potentially build separate bundles language could complex lookup runtime real composite component high level similar understanding wrote huge fan exact proposal using quote types differentiate think better luck something like unique jsx component aka extra html tag something also unique since effectively templating taking cues handlebars using would nt bad either", "d": "4/2016"}, {"body": "agree nt know use jsx without going meteor approach though think method showed bad composed fit purpose example assume also examples using projects would love get insight issue bug tracker know stack overflow might best approach bug tracker eyes gives quality feedback answers usually address issue use cases might better said though", "d": "4/2016"}, {"body": "sure meteor approach means used simply unique signal double quote lots uses natural language might want remain eg want translate extra parse becomes complex error prone picking something like becomes bit easier nt anything using publicly could pretty straightforward step though custom babel transform looks jsxelement something replace node really basic example", "d": "4/2016"}, {"body": "meteor approach means helpers templates thanks example similar looking think doable create open source library fb nt open source possible explain please willing put brain action trying something relative fbt", "d": "4/2016"}, {"body": "probably wo nt open source much tied infrastructure way things think better trying something look ideas built around existing translation solutions maybe combination approaches", "d": "4/2016"}, {"body": "cool lastly would think language translation would fit loaders", "d": "4/2016"}, {"body": "idea", "d": "4/2016"}, {"body": "thanks session paul great even learned tricks conversation love work everyone fb open source means lot developers engage new ones", "d": "4/2016"}, {"body": "think using loaders webpack jargon transforms super great operate strings paul suggestion use babel instead sounds easier reliable", "d": "4/2016"}, {"body": "gaearon suggestion babel loader see gist paul suggested jsx one refer agree paul messy way love translations loaders sort would mean much better developer experience", "d": "4/2016"}, {"body": "confused would mean example since webpack configuration probably supposed webpack loader loaders operate strings ast see webpack config means string contents file gets parsed babel transforms defined babel loader options run ast like one explore easier write operating ast generally much safer strings think like parser suggest writing babel transform rather separate loader babel transform write plugin detects transforms special jsx expressions function calls matter whether use jsx special function call important part ast level rather processing strings implemented webpack loader hope helps", "d": "4/2016"}, {"body": "certainly see loader specification could strip things get concept going crazy details indeed use transforms lot sketchy writing description pointed however think downside using ast logic one worth mention using loaders would mean cleaner config file lot firsttimers wants cool feature copy paste would lot harder grasp content transformations issue dev x versus quality code opinion though", "d": "4/2016"}, {"body": "amasad think question meant well", "d": "4/2016"}, {"body": "nt much add agree like thing would good abstraction double quote generic imo maybe write promote separate babel plugin would provide validation something people would use", "d": "4/2016"}, {"body": "use webpack", "d": "4/2016"}, {"body": "almost certainly means including duplicate copy react one dangers using npm nt handle dependencies well leads cryptic errors like try things mentioned gist good discussion going close probably due duplicate dependency able come simplified repro eg jsfiddle demonstrates bug react happy reinvestigate", "d": "4/2016"}, {"body": "works perfectly fine", "d": "4/2016"}, {"body": "new warning would nt see dangreen set runtime point reactdom required think way would see", "d": "4/2016"}, {"body": "zapo use envify browserify also uglify written fbmereactminification", "d": "4/2016"}, {"body": "zapo envify used global transformer", "d": "4/2016"}, {"body": "without steps reproduce going bit tricky track could perhaps reproduce set minimally probably want running browserify nodeenv set trigger envify part simple set made use model transforms jsx anything else browserify uglify could even skip uglify step browerifying react would enough would leave bunch dead code warning seeing dead code", "d": "4/2016"}, {"body": "zpao find transform transformer replace transform result nt way set manually", "d": "4/2016"}, {"body": "using gulp build browserify almost exactly like actual code expose externalpackages eg react var b browserify require externalpackages set node environment variable btransform envify nodeenv isproduction production development return bbundle getting warning upon investigation found envify nt working instead found set environment variable right instead using transform like expose externalpackages eg react var b browserify require externalpackages set node environment variable processenvnodeenv isproduction production development return bbundle seems replace instances confused envify even using incorrectly", "d": "4/2016"}, {"body": "lambertvelir things case specifically use values look example readme actually see need may also need pass first argument applied dependencies think default browserify wo nt transform files dangreen without seeing running things ca nt really help yes react uses looseenvify think compile command line presumably control build system via api looks like working fine js var browserify require browserify var envify require envifycustom indexjs gist var b browserify indexjs btransform global true envify nodeenv production bbundle function err buf consolelog buftostring leave envify transform still react code", "d": "4/2016"}, {"body": "ahh made envify work nt really see documented anywhere browserify envify reason use envify vs setting", "d": "4/2016"}, {"body": "bottom section browserify docs super obvious also command line option upside avoid runtime process lookups pass code uglify minifiier get dead code removed", "d": "4/2016"}, {"body": "sorry clarified two blocks code seem result bundle eg transformed cases", "d": "4/2016"}, {"body": "zpao use sailsjs framework sails app configs env app starts gulp tasks lifting js set nodeenv processenvnodeenv docker build var browserify require browserify fs require fs browserify indexjs bundle function err buffer fswritefilesync bundlejs buffertostring think compile command line build script instead already sad transformer replace nodeenv envify transform result nt way set nodeenv manually", "d": "4/2016"}, {"body": "dangreen really helpful steps reproduce issue unfortunately nt think possible disable transform specify packagejson recursively anyway perhaps browserifying package directly eg instead specify could use option best suggestion right either set set browserify step adjusting browserify step use envify directly alternatively nt use values besides use environment variable indicate docker nt standard tell become common practice expect values make adjustments accordingly eg even sails couple places personally would nt know everything went decision constraints sails imposes would nt make possible going close nothing else benefit automatically transforming outweighs cost occasional difficult integration point sorry happen one cases nt easy", "d": "4/2016"}, {"body": "pretty much think supporting proptypesbased introspection plan add new features eventually plan phase favor tools like flow may add runtime checking point understand coming styleguides cool afraid going add proptypes api however implement custom proptypes matchers delegate reactproptypes validation also expose necessary metadata components use custom proptypes instead hope helps", "d": "4/2016"}, {"body": "thanks gaearon see", "d": "4/2016"}, {"body": "wanted end ended using tcombreact instead case helps anyone else", "d": "4/2016"}, {"body": "would mind reproducing jsfiddle thanks", "d": "4/2016"}, {"body": "ping eipark", "d": "4/2016"}, {"body": "sure reproduceable jsfiddle since need set breakpoint chrome debugger", "d": "4/2016"}, {"body": "modify post code one examples react starter pack create simplified repro instructions reproduce", "d": "4/2016"}, {"body": "sure example modified var exampleapplication reactcreateclass getinitialstate return value render function var elapsed mathround thispropselapsed var seconds elapsed elapsed var message react successfully running seconds seconds var start new date gettime setinterval function reactdomrender documentgetelementbyid container able repro bug setup", "d": "4/2016"}, {"body": "ok nice repro able reproduce spicyj immediately said chrome bug soon saw maybe right interestingly firefox debugger behaves even worse chrome commenting fakedomnodeeventlogic seems fix issue", "d": "4/2016"}, {"body": "actually take back perhaps related fakedomnodelogic overly excited commenting nt appear done anything", "d": "4/2016"}, {"body": "much info go looks like error occurring uglifyjs react rashmimadanshukla provide simplified example demonstrates issue investigate", "d": "4/2016"}, {"body": "looks like uglifyjs plugin nt well supported within nashorn engine might differences nashorn", "d": "4/2016"}, {"body": "ping rashmimadanshukla", "d": "4/2016"}, {"body": "closing due response op reinvestigate ifwhen get repro", "d": "4/2016"}, {"body": "saw exact issue today upgrade", "d": "4/2016"}, {"body": "fairly confident vs difference red herring unfortunately come several times attributes probably fine like good chance difference actually later markup empty string vs bare attribute typically difference dom api representation markup think use outerhtml seen similar issues upgrade discussion could show happening explicitly eg simplified example application reopen could nt make happen example going close encourage follow along issue", "d": "4/2016"}, {"body": "ok silly stuff fixed", "d": "4/2016"}, {"body": "sure mean say directly use component html css supposed flex attribute parent elaborate perhaps example", "d": "4/2016"}, {"body": "thanks reply saw nt know css attributes support react", "d": "4/2016"}, {"body": "csslayout different project used react directly though reactnative uses supporting css native apps said sounds like misunderstanding flexbox css standard works would recommend visiting link following resources", "d": "4/2016"}, {"body": "going close since appears misunderstanding issue regards react native specifically would ask repository", "d": "4/2016"}, {"body": "perfect world peer depend react relevant", "d": "4/2016"}, {"body": "meantime use instead dropin replacement", "d": "4/2016"}, {"body": "going close immutabilityhelper good solution specific case tracks wider issue feel free continue discussion thread", "d": "4/2016"}, {"body": "nt realize already tracking change think probably best way tackle problem long run happens think still open question meant ticket example broader question alternate implementations reactaddonsupdate handy still instances use reactaddonsshallowcompare others even dependents dependents control use addons thoughts topic assuming library supports multiple versions react would much like uses reactaddons would also like seems choices warn dependents potential peer dependency mismatches nonpeer dependency reactaddon force install reactaddon behalf listing peer dependency far best practices go leaning towards former generates potentially confusing warnings generally work without involvement apr jim notifications githubcom wrote going close immutability good solution specific case tracks wider issue feel free continue discussion thread receiving authored thread reply email directly view github", "d": "4/2016"}, {"body": "warn dependents potential peer dependency mismatches nonpeer dependency reactaddon work npm additionally even npm cause multiple copies react installed case version mismatch likely break addons need depend react anyway need like depend first place said force install reactaddon behalf listing peer dependency think sensible solution present circumstances ideal least npm users never get duplicate react", "d": "4/2016"}, {"body": "going close track something specific react needs comes investigation file something", "d": "4/2016"}, {"body": "could actually utility library could make great singleprojects tweaking overall experiences tend use low frames default functionality part consider caching actual object avoid also think everything needs fulldefined refresh fully function left react handle manage could good library opinion good issue way", "d": "4/2016"}, {"body": "honestly code nt real owner hard know cc issue think gaearon took look prs recently might feedback demonstrate bug pr fix think likely take", "d": "4/2016"}, {"body": "yes intentional makes input uncontrolled means example resetting state clear later catches people surprise want component controlled empty please pass empty string instead controlled uncontrolled inputs", "d": "4/2016"}, {"body": "thanks gaeron good know", "d": "4/2016"}, {"body": "everything seems correct removed replaced link docs bit confusing explained", "d": "4/2016"}, {"body": "forgot dom name confusing part read wrong thanks fix though helped figuring issue", "d": "4/2016"}, {"body": "lanfei ca nt update parameters already instantiated flash browsers careful need recreate ie give key equal src perhaps arguments", "d": "4/2016"}, {"body": "syranide thank reply aware recreate html element react", "d": "4/2016"}, {"body": "lanfei give different key recreate example want recreate change src attribute give src key", "d": "4/2016"}, {"body": "thanks syranide going close take radar since appears identified root cause react fault flash support updating parameters already instantiated flash feel free continue discussion thread", "d": "4/2016"}, {"body": "resolved problem giving different thank syranide jimfb", "d": "4/2016"}, {"body": "issue compared serverclient elements attributes different order react treats different strange case ordering changes first page reload first rendering ok", "d": "4/2016"}, {"body": "yes please track", "d": "4/2016"}, {"body": "require ensure direct dependents transitive dependency tell offending package requiring direct packagejson", "d": "4/2016"}, {"body": "yep mistake installed clone props trying install transition group add run", "d": "4/2016"}, {"body": "noticed closed changed title wanted confirm fact fixed issue", "d": "4/2016"}, {"body": "thx", "d": "4/2016"}, {"body": "think rely synchronous value update handle cursor position honest confused necessary would nt expected cc spicyj jquense", "d": "4/2016"}, {"body": "yes would nt expect settimeout necessary sometimes browsers finicky focus selection though may due", "d": "4/2016"}, {"body": "guess would firing something looks like changing input value event instead quick test works fine onchange", "d": "4/2016"}, {"body": "perhaps work selection range get set try onchange though thanks", "d": "4/2016"}, {"body": "jquense excellent observation events fire feel like everything behaving expected reference fiddle jchitel provide fiddle demonstrates something believe unexpected behavior let us know reinvestigate", "d": "4/2016"}, {"body": "using onchange worked thanks sake understanding onkeydown handler triggered change state set selection onchange event fired reset selection find information event ordering", "d": "4/2016"}, {"body": "event ordering defined browsers probably find docs events fired understand correctly anything selected time fires get replaced character typed text box seems supported fiddle always replaces first character selected key event far tell everything working correctly expected close run issues things looking sketchywrong let know reexamine", "d": "4/2016"}, {"body": "hey joelrich fairly certain proposal runs counter goals project direction headed specifically around scheduling direct answer glean thoughts surrounding following threads new core algorithm webworkers unable find source default react state natively serializeable synchronous right allows react reason tight control reconciliation rendering also allows react decide scheduling promises abstraction remove properties making current future optimizations difficult impossible", "d": "4/2016"}, {"body": "hi iamdustan see another way improve support promises especially use cases libraries like falcor values view promises think current solution good enough think scheduling big problem similar setstate would schedule update promise resolvedrejected exactly mean react state natively serializeable example put object class state state still serializable sure lose information class would able parse replace previous state without risking problems reason view state serializable", "d": "4/2016"}, {"body": "cc sebmarkbage additional thoughts links", "d": "4/2016"}, {"body": "nt know helps see specifically serialisable immutable representation state promise use stand promise way makes sense inside method cc ryanbrainard", "d": "4/2016"}, {"body": "discussed many times single easy link post probably make new summary best idea allow promises passed convenience would also allow clean automatically component gets unmounted gets resolved earlier allow promise observable render end intermediate state ui mean time goes example gets resolved value updates nt want encourage system could block ui accidentally putting long promise one benefits react came user never deal specialized data structures like change tracking sets promises observable values plain data gets closer still requires lot explicit optin languages solutions nt require still capabilities want promise observable chains execute whenever async dependencies get resolved push oriented something happens immediately compute artifacts scheduling work mentioned making sure operations nt steal cpu cycles work lowpriority cause responsiveness issues higher priority work mitigating factors things idea could forked behavior components could live two states rebase would allow component update remain responsive pending update still processed could potentially design api around generators asyncawait avoid exposing users firstclass promise values even better algebraic effects ecmascript zones proposal could allow overriding default scheduling promises allowing us defer work high priority would make whole idea push oriented values palatable", "d": "4/2016"}, {"body": "sebmarkbage thank summary take promise function would allow specify loading value example alternatively could also wrap multiple elements another helper function wait promises resolved since function would return another promise would part react long allowed return wrapped promise render regarding still sure understand problem promise resolved behaviour could similar nt looked setstate implemented example dom update happens next animation frame would still possible promise resolved schedule dom update virtual dom subtree perform together promise changes next animation frame", "d": "4/2016"}, {"body": "joecritch component render promise something like easy enough write component", "d": "4/2016"}, {"body": "unfortunately work properties", "d": "4/2016"}, {"body": "record plan provide official introspection api start information would like extract instance updated", "d": "4/2016"}, {"body": "gaearon thanks waiting update", "d": "4/2016"}, {"body": "way remove warning currently one things somewhere roadmap make easier optinout specific warnings nt lot motion maybe something specifically warning though", "d": "4/2016"}, {"body": "zpao warning", "d": "4/2016"}, {"body": "use webpack add code deploy", "d": "4/2016"}, {"body": "add code webpack plugins warning still exit", "d": "4/2016"}, {"body": "issue reported specifically minifying nonproduction react problems toolchain creating production build distinct issue discussed new issue stack overflow first intended support forum", "d": "4/2016"}, {"body": "general minifying code staging simulate production environment probably running production copy react case subtle differences code paths nt everything right never know type bug really bite yep agree using set environment app describe app endpointsdatabasescredentials use environment need think good use another environment variable app fix warning react", "d": "4/2016"}, {"body": "oh got warning", "d": "4/2016"}, {"body": "japgolly changed title disable minified copy development build disable warning minified copy development build", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "vimniky read article solved warning", "d": "4/2016"}, {"body": "vimniky found article confirm warning gone thank", "d": "4/2016"}, {"body": "also strange js wizz calling returns", "d": "4/2016"}, {"body": "example really quick easy sizzle going verbose little annoying otherwise", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "using sizzlejquery confirm value attribute seem produced rendering reactdom show rendering reactdomserver causing invalid checksum", "d": "4/2016"}, {"body": "sounds like browser quirk behavior without react", "d": "4/2016"}, {"body": "yeah think fixed get one closer releases", "d": "4/2016"}, {"body": "yes closing fixed", "d": "4/2016"}, {"body": "userspecified keys undergo escaping transformation prevent collisions automaticallygenerated keys instance element key key warning would happens traversal gets alreadyescaped keys nt access original keys yes autogenerated keys completely internal never user visible guaranteed never conflict generated user keys escaped nt see reason could nt report original key name warning messages probably best solution would unescape key reporting error message would want move key escapingunescaping utility provides function", "d": "4/2016"}, {"body": "one minds like give go", "d": "4/2016"}, {"body": "think someone team give much better answer gaearon explanation avoiding stylistic changes makes sense given babel transpiles template literals string concatenations guess matter stylelegacy", "d": "4/2016"}, {"body": "think generally prefer string concatenation simpler nt really make huge difference one way", "d": "4/2016"}, {"body": "react warns deprecations removedchanged react would suggest resolve errorswarning upgrade", "d": "4/2016"}, {"body": "please make sure two instances react page help determine please share minimal example reproducing issue github jsfiddle thanks", "d": "4/2016"}, {"body": "also seeing error particularly unit tests unmount components tests complete cases value rootnodeparentnode presumably node longer attached dom null value passed getclosestinstancefromnode error thrown due null current workaround return null node null seems work though admittedly nt know full consequences think least candidate invariant warningerror", "d": "4/2016"}, {"body": "add error surfaces testing reacttestutilsrenderintodocument way unmount test component attach test component document believe would explain parentnode would null also returns null node created yet attached tree", "d": "4/2016"}, {"body": "doctyper still unable reproduce fiddle one provide jsfiddle demonstrates issue", "d": "4/2016"}, {"body": "browser chrome os os x fiddle summary actually debugged issue yesterday morning trying upgrade solution came provide reactdom element already existed dom via one projects work old backbone codebase slowly migrated react element reactdom told render div backbone generated via documentcreateelement previously upgraded element never inserted dom stack trace revealed null node doctyper says debugging discovered one calling take look findparent see node gets defined case rootnode audio element react class producing audio element parentnode container became null debugging issue occasionally would disappear stop reporting would refresh dozen times see error steps reproduce open fiddle open console press run observe logs errors could nt get reproduce first started spamming run button eventually saw error sake everyones sanity added loop runs code times everyone easily see indeed reproduce issue edit one thing find interesting edit fiddle audio element source elements errors appear", "d": "4/2016"}, {"body": "relatively consistent repro chrome still unable reproduce firefox almost looks like might chrome race condition potentially related garbage collection hit rates go way spread calls temporally op suggests seen failure firefox also", "d": "4/2016"}, {"body": "jimfb op screenshot error appearing firefox attempted fiddle well safari firefox get errors could provide additional information version browsers tested", "d": "4/2016"}, {"body": "yeah upgrade chrome outofdate chrome latest stable error goes away consistent original observation appeared race condition potentially related garbage collection going close browser bug unless someone able reproduce chrome also curious see firefox repro", "d": "4/2016"}, {"body": "let careful assuming gc issue browser bug able confidently say specifically play could well bug react particularly around transactions mounting local events best guess especially since reports nodes add load error listeners directly timing play switch createelement actually kick fetching resources earlier instead waiting browser parse img element see src create img set src right means probably get load event earlier early possible event fire actually attach listener node question impact actually happen updates events actually play one thing find interesting edit fiddle audio element source elements errors appear would support theory wo nt get least media events", "d": "4/2016"}, {"body": "jimfb confirm upgraded chrome longer able reproduce issue hoping get reproductions op one report seeing elsewhere meantime think way support zpao theory edit zpao saw error using chrome train battery dying nt time take screenshot see reproduce although lends idea timing related using fiddles instead one closed source projects work occurred initial page load edit finally saw error startup yet debug proof", "d": "4/2016"}, {"body": "idiot nt expect dontdecaffinateandcode", "d": "4/2016"}, {"body": "think setting property value something like ever officially supported might worked coincidence mentioned prominently blog post used innerhtml populate initial tree component mounted happens hack using compatible way used glue html code initial mount however think way specifying multiple css values single property every supported find anywhere documentation example moreover pretty sure broken different way yes mounting component style like would work updating would fail reasons work react updates always using dom api setting styles rather innerhtml hack would work updates react normalizes behavior mounting updates always uses dom api create dom elements see point though good solution inside react discussed conclusion probably handle outside react feature testing example create dom element code initializes set different values see whether sticks gets reset sticks means browser supports given value way build dictionary mappings standard values ones supported browser likely libraries hope helps bug relying hack never officially supported explained", "d": "4/2016"}, {"body": "thanks response hack sense nt set css values directly set string variable valid value string js allow key object different values way yes maybe attribute checking would workaround impossible server side also lot work get right since react removing value depending content nt document warn users nt understand think ok hide documentation anyone uses inline styles important know normally react good throwing warningserrors stringify attribute value set also behaviour react going intercept nt user able set attribute value heshe wants ps worked fine updates check app uses", "d": "4/2016"}, {"body": "since react removing value depending content nt document warn users react removing value browser try assign string like without react style inspector see case documented react switching using blog entry several times reason anything relying concatenation break opinion clearly leaking implementation detail relying details always comes risk ps worked fine updates would mind providing specific example code jsfiddle demonstrates working see updates could possibly work correctly react always used dom api updates work way describe rely string concatenation happen case", "d": "4/2016"}, {"body": "see maybe nt understand exactly works work examples post solution find thanks", "d": "4/2016"}, {"body": "scenario world work initial render update set long string even existing support inconsistent confusing broken already happened lucky hit cases agree good good solution auto prefixing multiple values could potentially allow letting pass array value let reopen hear others think cc zpao", "d": "4/2016"}, {"body": "way build dictionary mappings standard values ones supported browser likely libraries yes indeed good prefixing library use use right prefixed property eg become however dealing serverside rendering things get tricky case solution enough prefix user agent server side browser agent client side pointed facebookreact think good tradeoff server side caching feel like two options prefix useragent server side drop inline style css based solution", "d": "4/2016"}, {"body": "gaearon like said fact react using made possible browser picked string applied value accepted nt see good way set style multiple values example work attribute checking fixing app serverside rendering impossible inline styles talking cases like need different values key prefixed keys different fine think important enough react treat style attribute special case provide solution since js object enough cover cases like mostly think flexbox common case users going need polyfill next couple years", "d": "4/2016"}, {"body": "fwiw updated module make simple checks runtime ie safari seems like platforms flex works fine least needs probably needs lot work get every single edge case polyfilled serverside rendering going issue though", "d": "4/2016"}, {"body": "never officially supported use case unlikely anything short term fact ever worked simply byproduct optimized initial render past clientsize generally recommended something picks right values based user agent noted great server rendering recommendation always use plain old style sheets several places dom apis nt support things stylesheets optimized way another example adding removing specific styles js response events pretty crappy even possible inline styles read js styles something investigating coming months sure shape think styles react future right nt planning changing anything issue related issues part considerations", "d": "4/2016"}, {"body": "think bug react code fundamental problem reads private ref never case react apps instead pass new value handler child stateful instead state live parent component merely reflect props passed way data flow easy think one source truth parent component react asynchronous reading right away work case reading component state always discouraged private design think might find guide helpful explains state ownership works react apps please skip absolutely essential going run issues keep using multiple sources truth reach private component state components refactor code use topdown data flow problem persists please let us know try provide fiddle reproduce right looks like incorrect usage closing cheers", "d": "4/2016"}, {"body": "thanks gaearon quick reply saved day pointers realising asynchronous double checking topdown data flow know post realised doubling props passing via thank heaps yes issue react", "d": "4/2016"}, {"body": "glad helped", "d": "4/2016"}, {"body": "nt intend making react knowledgeable vendor prefixing much possible belongs level react libraries add appropriate prefix style values nt know one top head exist could write one relatively easily js instead var mystyle translate return return", "d": "4/2016"}, {"body": "haohcraft one option radium supports automatic vendor prefixing", "d": "4/2016"}, {"body": "still like pattern might slightly obvious people require files nothing really stopping end telling people thing nt require things", "d": "4/2016"}, {"body": "telling people reality lot people included thought relatively safe time bunch components whose authors nt know needs changing renaming would serve good warning existing components would effectively force authors explicitly opt using private parts find workarounds", "d": "4/2016"}, {"body": "could go really obfuscate hash something gets added build pipeline changes every major release", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "nah nt every build thought would probably screw packages need reliability eg reactdom able use react", "d": "4/2016"}, {"body": "packages way accessing internals needed using private api like secretdom without indexing lib added bonus allowing addons put separate umd builds", "d": "4/2016"}, {"body": "defined documented api accessing internals create renderer change greatly hinder experimentation taking place custom react renderers community known experimental use case things break believe maintainers users renderers understand removing capability hiding system like hash names would detrimental view", "d": "4/2016"}, {"body": "feel like people experimenting check react repository anyway rather relying npm build maybe wrong curious gaearon thinks point", "d": "4/2016"}, {"body": "depending nt think would really hinder experimentation would forced knowingly using nonpublic apis went hash per major route update paths major version definitely keep use case mind though paying attention sure chime reach make drastic changes would unrecoverable", "d": "4/2016"}, {"body": "feel like people experimenting check react repository anyway rather relying npm build building something like pain considering want renderer peer dep run tests experiment project another directory symlinks get inconvenient definitely see appeal using npm package fiddling renderers depending nt think would really hinder experimentation would forced knowingly using nonpublic apis went hash per major route update paths major version something like chars would enough imo bad communicated clearly could ship explains hash changes every major version", "d": "4/2016"}, {"body": "thought bit weekend currently opposed reasoning feels like kneejerk reaction community problem valid solution precedent babel something similar suspect community pressure education enough prevent decrease impact behavior happening time progresses breaks conventions makes certain class valid use cases difficult mentioned even requires thought additional work oss products rn bit hack implement truly private modules even fully private maintainers could look docs hash generated still require private internals ideally want add truly concept module system built andor node", "d": "4/2016"}, {"body": "api could satisfy everyones needs would let use hashing method still allowing people get things want libs making awkward enough hopefully used actively sought documenting could help downsides nt work system ca nt interpolate variables import path ultimately agree iamdustan every point seems like user problem teams problem somebody wants depend internal item gets removed next version handle situation guys osswide issue react issue", "d": "4/2016"}, {"body": "agree completely iamdustan custom renderer author currently necessary project use react internals aware may break even patches minor updates react something handle build specific hashes would make bad experience almost everyone naming private instead lib make apparent things may break good enough opinion solve real problem least case find third parties trying use private parts react even specific seeing great progress towards separation dom react react three renderer every update fewer private react parts need used eventually react dom completely separated able look see works independent entity touch react private parts comfortable custom renderers appear stable guessing eventually may happen popular private parts guess may need exposed stable api modularized third parties could poked poke us nt punish us", "d": "4/2016"}, {"body": "bringing back react fix today", "d": "4/2016"}, {"body": "wildhoney yes probably add back without looked deeply guess breakage oversight would gladly accept pr fix", "d": "4/2016"}, {"body": "agreed take look thanks one quick question however otherwise investigate easiest way obtain container case inst", "d": "4/2016"}, {"body": "look nativecontainer toplevelwrapper info might need added nt already available think spicyj wrote nativecontainer code might know otherwise require bit investigation", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "wdiechmann could explain want report state try understand logging console state updated trigger callback expire seconds log nt see race condition", "d": "4/2016"}, {"body": "create setstatecall callback calls consolelog actually calls setstate calls consolelog returns result consolelog callback setstate obviously calback want equivalent nt know cs ca nt really help syntax problem", "d": "4/2016"}, {"body": "syranide problem state get updated eventually anyways get raitobezarius setting state depending instructions later code provided merely demo effect", "d": "4/2016"}, {"body": "wdiechmann yes state gets updated consolelog effectively called setstate even called transpiles equivalent", "d": "4/2016"}, {"body": "click div shows expected behavior expecting something else", "d": "4/2016"}, {"body": "hmmm see fiddle snippet show expected behaviour explain difference like replied big deal settimer wait enqueuedcallback finish thx sharing anyway cheers walther", "d": "4/2016"}, {"body": "somehow scope change enough whatever called try measure weird right", "d": "4/2016"}, {"body": "wdiechmann problem explained comments providing callback setstate calling function returning value used callback nt two wildly different things", "d": "4/2016"}, {"body": "waooo lambda like setstate wurl w args arg gt consolelog stateargs works sure quite see difference calling function asking settimer call asking eval inline lambda thing latter two works thx", "d": "4/2016"}, {"body": "rest warning say", "d": "4/2016"}, {"body": "zpao problems server side rendering also using everything working smooth update receiving message tried reinstall dependencies error persists tried install previous version started working smoothly", "d": "4/2016"}, {"body": "buzinas see", "d": "4/2016"}, {"body": "pretty sure going close let know incorrect assumption", "d": "4/2016"}, {"body": "zpao unrelated full stack trace issue due nodes case tag used adblocker inserted document react loads breaking checksum past react would ignore things like works ideally react would ignore anything without validating checksum possible sure worked", "d": "4/2016"}, {"body": "spicyj checksum check changed using createelement would work case looking checksum generated markup string would nt seen actual dom actually case warning uses outerhtml mismatch pointing wrong thing", "d": "4/2016"}, {"body": "application chunk code executed object exists builds new stylesheet appends experienced identical error dylanpiercey ended solving upgrade react building stylesheet object part state injecting component render error message looks correct interestingly race condition sometimes react initial render would happen additional stylesheet injected would fine", "d": "4/2016"}, {"body": "zpao nothing changed still generate html clientside reviving serverrendered markup", "d": "4/2016"}, {"body": "likely due using incorrect order objectassign recommend polyfill server code", "d": "4/2016"}, {"body": "mridgway luck ran added entry file module responsible rendering serverside react places confirm working using chrome version updating chrome see makes difference", "d": "4/2016"}, {"body": "environment already nt think work use exists really saying", "d": "4/2016"}, {"body": "zpao thank sir trick", "d": "4/2016"}, {"body": "zpao hmm nt one original reasons polyfill seem remember exact discussion", "d": "4/2016"}, {"body": "sound familiar nt think part original discussion recall going use objectassign directly issue spec would throw getting would really bad cloning props firefox already implemented old version spec short period facebook actually completely broken firefox nightly fwiw think problem exposed could encountered especially ever used spread jsx even regular object spread use babel get compiled using objectassign essentially difference though probably frequency instead hitting cases happening normal use props sure best way handle really want us able use native code end relying dated polyfill see discussion assumed perfectly safe particularly due fact effectively using native objectassign facebookcom least year module replacement internally nt much server rendering properly consider case honestly completely forgot still bug", "d": "4/2016"}, {"body": "seems like would problem babel spread typically kind issue polyfill test assuming compatibility native impl", "d": "4/2016"}, {"body": "wish checked validity walking dom rather calculating checksum markup us speccompatible rather bug", "d": "4/2016"}, {"body": "spec compliant enumeration order defined spec fixed newer apis like intl number formatting allow different output separate issue even walked dom would nt automatically solve issue", "d": "4/2016"}, {"body": "ah ok fixed spec depending previously undefined behavior behavior still undefined targeting anything one could argue solve within react anyway", "d": "4/2016"}, {"body": "pasting text issue developing universal app react updating started getting error warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client ut class mdinput name txtcadmus pat server ut class mdinput pattern nam seems bug reordering something like completely sure tried change bunch stuff eg force server client use polyfill using babel transform objectassign plugin nothing solved problem uninstalled react installed problem gone btw pretty simple simulate issue code javascript reactdomrender documentqueryselector main consolelog documentqueryselector main innerhtml consolelog reactdomserverrendertostring react working react working expected", "d": "4/2016"}, {"body": "yes bug objectassign implementation heard bug might fixed really unlikely end node", "d": "4/2016"}, {"body": "diving code seems nothing implementation open jsbin firefox paste code react work expected react mess attributes seems problem react created elements using order maintained uses browsers change attributes ordering causing diffs see two ways solving problem change ordering attributes exactly order browsers render sure good way since browsers may behave differently change checksum algorithm way nt matter attributes ordering checking exist probably cost high big apps better inject entirely new markup", "d": "4/2016"}, {"body": "cc spicyj", "d": "4/2016"}, {"body": "change checksum algorithm way nt matter attributes ordering checking exist probably cost high big apps better inject entirely new markup ideally would think definitely right would expensive server rendering already relatively expensive slow might lose advantages would otherwise get", "d": "4/2016"}, {"body": "reviving serverrendered markup generate markup client using exact codepath generate checksum based changes createelement mode wo nt affect checksums unrelated", "d": "4/2016"}, {"body": "sounds like two related bugs mess property enumeration order thanks mridgway digging sounds like best solution send pr tests cases nt use objectassign", "d": "4/2016"}, {"body": "spicyj thing ca nt understand react everything works smoothly upgrading react isomorphic rendering stops working nt seem something related", "d": "4/2016"}, {"body": "buzinas react internal polyfill react started using native ifwhen available instead polyfill thus problem native implementation buggy", "d": "4/2016"}, {"body": "buzinas polyfilled objectassign objectassign npm package things started working sure changed causes break default objectassign though edit spoke milliseconds soon jimfb know", "d": "4/2016"}, {"body": "fuzzysockets jimfb probably something wrong forcing objectassign polyfill app keep warning checksum", "d": "4/2016"}, {"body": "buzinas entry add", "d": "4/2016"}, {"body": "npm package polyfill react uses problem first tries native implementation buggy cases works deletes native implementation first polyfill use", "d": "4/2016"}, {"body": "everything makes sense p thanks everyone give try ps works dancer", "d": "4/2016"}, {"body": "saying official recommendation though ideally feature test broken native versions", "d": "4/2016"}, {"body": "objectassign package proper order check", "d": "4/2016"}, {"body": "gaearon right example ok workaround since much better giving server rendering", "d": "4/2016"}, {"body": "occur certain versions", "d": "4/2016"}, {"body": "mridgway thanks one", "d": "4/2016"}, {"body": "fuzzysockets supposedly fixed since december appears current version chrome nt issue unlikely make way node", "d": "4/2016"}, {"body": "similar issue cloning children add props", "d": "4/2016"}, {"body": "almost duplicate relevant discussion", "d": "4/2016"}, {"body": "upgrading incrementally ie version rather jumping upgrade experience designed done incrementally versions old yes upgrade experience might little rough think better nowadays recent versions new passed string function error message would say uncaught invariant violation reactdomrender invalid component element instead passing string like div pass reactcreateelement div anyway nothing actionable since fixed latest going backport far back sorry upgrade experience might little tough promise gets better especially keep application uptodate rather huge jumps long", "d": "4/2016"}, {"body": "zpao filed issue time closing favour", "d": "4/2016"}, {"body": "beat", "d": "4/2016"}, {"body": "looks like applying prop changes bad order logic get right solvable general known types could complex get perfect want minimize dom operations", "d": "4/2016"}, {"body": "surprised particular case problematic code ensure always set attributes sure nt working designed totally clear whether setting type first always solves cases like setting type first would simply cause warning switching way see also something may want happen may difficult implement cleanly current system easier full composite wrappers components longer creating new element whenever type changes could surprising would mean ref component changes lifetime component never elsewhere", "d": "4/2016"}, {"body": "easiest workaround set input changes type new input element created type changes", "d": "4/2016"}, {"body": "could caused objectassign order bug", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "thanks", "d": "4/2016"}, {"body": "yes jsx spec valid syntax since jsx nt part js ends putting parsers different mode would allow anything left alone want comment would need plain js move inside sorry obvious one downsides introducing new syntaxes", "d": "4/2016"}, {"body": "possible duplicate", "d": "4/2016"}, {"body": "things would great items function priority us internally nt focused moment jhicken gladly accept pull request features", "d": "4/2016"}, {"body": "cool see find time dig", "d": "4/2016"}, {"body": "typo fiddle passing midlothain value midlothian fiddle works typo fixed please let know missed something far appears work intended closing", "d": "4/2016"}, {"body": "gaearon looks like references issue jsfiddle work react confirm working", "d": "4/2016"}, {"body": "let discuss fun coincidence would nt say issue issue typo issue genuine regression caused bugfix never released rcs could nt cause issues final", "d": "4/2016"}, {"body": "looked day clean moment use plugins use nt released updates compatpeerdeps worked well years rush change probably end switching gulp align many projects use shared infra", "d": "4/2016"}, {"body": "interesting use case yet convinced justifies additional lifecycle method think equally viable alternative service deconstruction curious would agree service created parent receives information needed open required connectionresource nt actually open resource child component starts listening service closes connectionresource last child stops listening means parent never needs destroy service normal garbage collection rules apply would approach work", "d": "4/2016"}, {"body": "really service per se object use follows observer pattern would good componentdidunmount parent nt destroy service relying children stop listening properly may cause leaks", "d": "4/2016"}, {"body": "think previous comment still holds true implementations observer pattern children nt stop listening properly likely got bigger problems common data provided static parent children enterexit throughout lifetime application likely leaking anyway", "d": "4/2016"}, {"body": "afaik without symmetrical hook serverside rendering impossible release resources unsubscribe listeners used", "d": "4/2016"}, {"body": "afaik without symmetrical hook serverside rendering impossible release resources unsubscribe listeners used componentwillmount current recommendation never hold onto resources symmetric free", "d": "4/2016"}, {"body": "way interested method child subscribed flux store parent fires action clean store state child include special code existence slice state would fail retrieve potentially null reference child know unsubscribe parent cleaning way parent safely clean external state child may depend upon parent would given opportunity", "d": "4/2016"}, {"body": "yeah moment include bit ugly workarounds cases would help", "d": "4/2016"}, {"body": "gaearon child know unsubscribe parent cleaning way parent safely clean external state child may depend upon componentdidunmount parent would given opportunity gaearon yes original postrequest almost verbatim reason approach insufficient seems like parent always create object lazyinitializes required resource cleans users resources done little additional boilerplate particular resource mind would exemplify use case", "d": "4/2016"}, {"body": "particular resource mind would exemplify use case case referring piece data flux store parent cleans use pattern consumers react redux bindings recently introduced regression related use case wish could tell people use different lifecycle hook tearing data rather careful container implementation implement workarounds like asking pass something like also feels unnatural especially considering connected children deeply tree", "d": "4/2016"}, {"body": "cc sebmarkbage", "d": "4/2016"}, {"body": "way briefly chatted sebmarkbage today particular problem would solved delaying calls transactional callback use pattern somewhat inefficient inside large list separate issue", "d": "4/2016"}, {"body": "jimfb seems like parent always create object lazyinitializes required resource cleans users resources done unless object cleans ideal sometimes available option eg parent provides set listeners children listeners get unmounted parent provides another set listeners parent ca nt clean object parent gets unmounted children switching fluxredux etc everyone", "d": "4/2016"}, {"body": "unless object cleans ideal sometimes available option ideal option fairly certain always option use simple reference counting determine cleanup eg parent provides set listeners children listeners get unmounted parent provides another set listeners parent ca nt clean object parent gets unmounted children parent need cleanup nt datastore cleanup last child unmounts", "d": "4/2016"}, {"body": "even support nt good early error message", "d": "4/2016"}, {"body": "yes supported feature according docs componentwillmount invoked client server immediately initial rendering occurs call setstate within method render see updated state executed despite state change based feature ought work regardless rendering method", "d": "4/2016"}, {"body": "events pooled reused thus leaving event handler returned pool attributes nulled use event leaving event handler need persist see", "d": "4/2016"}, {"body": "thanks andreypopp exactly correct josephmg fyi usage questions better answered sites like stackoverflow try use github issues tracking bugs react core", "d": "4/2016"}, {"body": "andreypopp thanks answer help lot jimfb sorry use wrong type thank information keep mind", "d": "4/2016"}, {"body": "update node npm version everything fine version years old js eternity", "d": "4/2016"}, {"body": "understood case perhaps add note documentation located using default nodejs npm ubuntu lts cents thank information", "d": "4/2016"}, {"body": "nt think nodejs installed default ubuntu least install manually nt like default version installed server provider could wrong asking", "d": "4/2016"}, {"body": "nt tested surprised output chance behind sort firewall makes npm registry requests return gibberish", "d": "4/2016"}, {"body": "installed default installed via aptget sudo aptget install npm behind firewall", "d": "4/2016"}, {"body": "oh see ubuntu instructions follow many things broken old versions npm node really normal versions still installed running aptget install nodejs npm", "d": "4/2016"}, {"body": "related fixed soon", "d": "4/2016"}, {"body": "thanks tracking petetnt closing since npm registry issue please subscribe issue linked need know fully resolved", "d": "4/2016"}, {"body": "thanks following filing nt looked code detail generally positive sounds like serious users server rendering include none us core team would appreciate feature get feedback people settling api would prefer parallel codepaths rather degrade performance rendertostring nt require serious changes believe react server reconciletransaction reactdomcomponent really modules knowledge serverrendering difference nt much split particular none isomorphic modules know server rendering domspecific concept ex react native support server rendering", "d": "4/2016"}, {"body": "yahoo significant amount server rendering react extremely interested getting streaming support core willing help way possible done investigation render streaming also looked implementation agree assessment stands difficult support streaming without modifying lot code method recursion children implemented within method would checks current transaction methods returning string vs writing stream think best course action recommendation sebmarkbage move recursion individual methods method instead method would receive arrays metadata strings child components could written transaction recursed transaction would take care concatenating strings writing stream via common interface initial work hoisting recursion centrallizing recursion pr would make much easier support streaming asynchrony future difficult commit working without buy core team information involved", "d": "4/2016"}, {"body": "spicyj generally positive sounds like serious users server rendering include none us core team would appreciate feature great hear thanks get feedback people settling api agreed issue outreach users methods get feedback would suggest would prefer parallel codepaths rather degrade performance rendertostring good feedback thanks believe react server reconciletransaction reactdomcomponent really modules knowledge serverrendering difference nt much split think bit widespread code knowledge serverrendering issue signature everywhere shows domspecific nondomspecific code synchronous wo nt work streams current implementation wrote parallel set methods async function signature currently working newer version instead returns data structure processed either synchronously asynchronously depending caller preliminary pretty messy code interested ignore test code interesting stuff files mridgway also looked implementation reactdomstream eek implementation proudest achievement rewrite scratch times callbacks generators asyncawait perf often abysmal got working think best course action recommendation sebmarkbage move recursion individual reactcomponentmountcomponent methods reactreconcilermountcomponent method instead think something like recent experimental wip branch said interesting stuff files rather hoisting recursion though pulled structure called rest idea basically methods return stringlazytree basically array raw strings closures call recurse tree done synchronously asynchronously preserves code path experimental branch passes nearly tests nt checksums yet know previous work slower last byte tests working although making much progress difficult commit working without buy core team information involved thanks pointing nt know info algorithm rework looks like", "d": "4/2016"}, {"body": "tentative plan get rid checksum checking client checksum generation server benefit loosening guidelines markup decided valid client rerendering new approach would walk dom tree verify tree attributes values content get rid keep track dom internal tree walk dom client render split client rendering server rendering server renderers exist outside react independent sound right miss something notes need ensure multiple server renderers live outside react react aware existence runs tests like know breaking changes ahead time perhaps provide documented spec expected server renderer lifecycles call dom markup like etc jimfb aickin others like comment", "d": "4/2016"}, {"body": "new approach would walk dom tree verify tree attributes values content would probably slow would likely require bunch internal refactors even make possible get rid barely need kept intentionally distinguish reactrendered nodes nodes elsewhere browser extensions instance", "d": "4/2016"}, {"body": "barely need kept intentionally distinguish reactrendered nodes nodes elsewhere browser extensions instance nodes elsewhere going disturb react render anyway thus get blown away react mounted dom nt think much value knowing nodes came knowing nodes differ sufficient disadvantage forced maintain mandates specific render order", "d": "4/2016"}, {"body": "sound right miss something remember yes would probably slow would likely require bunch internal refactors even make possible talked nt entirely sure slow would agree biggest risk idea jimfb argued would least big done currently rendering top server markup question much worse reading dom tag names attributes constructing giant string worried might much worse see", "d": "4/2016"}, {"body": "likely require bunch internal refactors slow worries mostly pointers start looking also helpful would knowing logic checks reactcreateclass reactcomponent sfc", "d": "4/2016"}, {"body": "goatslacker also thanks writing fyi trying hack way rough cut step today middle right definitely beast got dozen new unit tests passing bunch", "d": "4/2016"}, {"body": "goatslacker also helpful would knowing logic checks reactcreateclass reactcomponent sfc srcrendererssharedreconcilerreactcompositecomponentjs eg", "d": "4/2016"}, {"body": "think important piece building rough spec test suite run external renderers also run react core ensure breakages properly communicated published cover lifecycles expected get called render react client properly bootstrap top nodes proper structure accentuating differences characterbycharacter html output possible obviously covering lot cornercase html oddities missing anything could done similarly ecma repo breakages additions could communicated inside github repo holds tests really exciting", "d": "4/2016"}, {"body": "quick update potential speed reconnecting dom walking dom rather checksum step branch although means complete needs work interactivity bunch unit tests existing unit tests fail code readable like complete enough really rough comparison performance two strategies though started morning preliminary rough observation dom walking slower checksum safariosx slower chromeosx obviously ideal faster better also order magnitude increase also giant amount absolute time rough test render difference amounted tested render could nt detect difference two result adhoc testing also worth noting nt done perf optimization branch still concerned potential bad perf regression particularly given different browsers wildly different perf characteristics think best path forward polish test make automatable via selenium run enough times get statistical significance variety platforms think good coverage would look something like multiple document sizes platforms chromewindows firefoxwindows os x latestsafari ios android browser make sense folks agree also much perf regression client reconnect server markup would accept", "d": "4/2016"}, {"body": "great work getting better numbers makes lot sense much perf regression client reconnect server markup would accept think answer might depend least partly much faster think make server rendering optimizations discussed", "d": "4/2016"}, {"body": "think answer might depend least partly much faster think make server rendering optimizations discussed agreed even connecting server markup client slower conceivable perf gains speeding server rendering reducing page weight removing could make practical use however hard know trade without empirical data servers networks used", "d": "4/2016"}, {"body": "aickin great work amazing obviously care performance browsers perf metrics couple browsers eg chromefirefox intuition sufficient understand likely ramifications changes obviously feel free collect data think desirableimpactful effort might better spent optimizing fixing bugs call always go collect perf metrics later metrics needed make decision personally think fine especially since many benefits approach give better error messages remove remove complicated dataid lookup logic remove dataids markup making markup smaller fasteroptimizeddedicated ssr renderer predict least improvements anyway annihilate additional remount cost etc however said ultimately teamcommunity decision still everything make even faster get better numbers think would also curious hear performance compares initial pass rendered without serverside markup ie createelement path", "d": "4/2016"}, {"body": "think difficult get ground try make better phase getting point code decoupled still maintainable way going hard enough first goal suggest get point featureimplementation parity day", "d": "4/2016"}, {"body": "first goal suggest get point featureimplementation parity day sage advice wanted know nt going like worse walk dom investing ton time strategy feel pretty confident case seleniumizing tests shows worse perf depending platform back working correctness", "d": "4/2016"}, {"body": "opened pr attempts tackle correctness side stage please feel free comment thanks", "d": "4/2016"}, {"body": "note going break react native init ship latest shipped may impact us always ship leave npm tag pointing ready go", "d": "4/2016"}, {"body": "zpao thanks nt want hold back react release much get new rn release shortly", "d": "4/2016"}, {"body": "hey guys release noticed missing", "d": "4/2016"}, {"body": "added one thanks", "d": "4/2016"}, {"body": "curious release", "d": "4/2016"}, {"body": "nope correct", "d": "4/2016"}, {"body": "gaearon author transform works react sense official clearly put thought towards topic said think project still exploratory nt know official proposals introduce react core time think would want let experiments bake little longer considered bringing core going close take radar since exploratorydiscussion topic point however curious hear use case building requires transforming components", "d": "4/2016"}, {"body": "think nt recommend approach anymore nt mean stop using project though good alternative mostly interested hot reloading error catching hot reloading tricky done without invasive transform wrap things proxies call sites read errors react support error boundaries soon also problem use cases like perf monitoring react adding blessed dev tool api much better way spy components wrapping opinion hope helps", "d": "4/2016"}, {"body": "way also explore wrapping component call sites patch createelement keep mapping unwrapped wrapped components", "d": "4/2016"}, {"body": "jimfb thanks try outline particular use case concisely actually already massive post prewritten subject save another time keep short folks aware react works great simple things want pass certain props level nt really clean way aware use fully manage application state consider ideal api maximally declaritive eg graphqlrelaylike without upstart graphqlrelay requires components declare want stores automatically assigned able representmanipulate said declared declarative components like js class userinfo extends component static proptypes classes proptypesobjectisrequired userid proptypesnumberisrequired username proptypesstring render const classes userid username thisprops classes user info would provided component via based fact declared would probably also make sense occurs via said nt explicitly passed component usual might come theme provider user specific properties could course come user provider libraries like redux perfect managing state well anything one thing seems missing reactflux developers arsenals replication specifically state machine replication pairs perfectly typical reactive application whose state changes result action implemented correctly allows data initialization storage retrieval completely decoupled application concern rendering state allows developers declaratively connect application state arbitrary data sources create efficient scalable reliable software relatively little effort return example mounting app specify wherehow want states provided components via replication following example currently specific particular implementation ideally method state management redux could used js import renderapp renderapp import providers providersindex import rethinkdb replicatorsrethinkdb import websockets replicatorswebsockets providersuserreplication key props gt store instantiated based key replicator rethinkdb instantly use db long replicator could easily include realtime functionality providersuserreplication key props gt replicator rethinkdb websockets renderapp providers replicator actually really simple usually containing methods get initial state translate state changes andor actions tofrom data source top number components initialized needed via replication based property maybe component dispatch action particular user js class updateuser extends component static proptypes classes proptypesobjectisrequired userid proptypesnumberisrequired setusername proptypesfuncisrequired setusername const newusername windowprompt enter user name render const classes setusername thisprops changes state would course replicated database andor users relevant component instances would efficiently rerendered reflect changes afaik nt clean way via plain easy automate functionality via autogenerated higherorder component see reactreduxprovide proof concept examples currently wip nt try latest version yet hoc seems required need wrap component comes furthermore since said hoc autogenerated applied across board preferable eliminate dependency simply make something developers optionally apply every component maybe even eliminate need hoc baking type functionality ie better management application state replication", "d": "4/2016"}, {"body": "gaearon thanks would patching work efficiently wrapping component instance autogenerated hoc", "d": "4/2016"}, {"body": "pretty much technique babel plugin executed call site long keep cache wrapped classes wrap lazily see much difference still would note rather unorthodox works well fine though smile", "d": "4/2016"}, {"body": "thanks feedback intentional provides good stack traces treatment warnings fixed committed shipped maybe exception think fixable one things working towards better way manage silence specific warnings types warnings without fork react track umbrella issue", "d": "4/2016"}, {"body": "usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue takes radar feel free continue conversation move stackoverflow", "d": "4/2016"}, {"body": "sure support putting text empty string inside transition group try instead", "d": "4/2016"}, {"body": "thoughts using javascript conceptually react experimentalandsubjecttochange context feature allows define variables local subtree components parent might look like js class bluebar extends component getchildcontext return color render return bluebarchildcontexttypes color proptypesstringisrequired child components could read like understand orthogonal whether want support css variables could good solution meantime", "d": "4/2016"}, {"body": "large codebase user interface vivaldi browser less looked javascriptways managing styles far decided make switch using context looks nice would solve issues using css variables would let us simplify existing less codebase without full rewrite", "d": "4/2016"}, {"body": "thanks sharing context pun totally intended let wait domsavvy colleagues reply chance look work would take fix", "d": "4/2016"}, {"body": "long spec stable enough nt looked recently seems like doable sure cost basically use need look every style property see key starts could get costly able add using following syntax nt updated try assigning new ruins much point using variable yea result us using innerhtml first render updating properties stop working even initial render heads", "d": "4/2016"}, {"body": "bit unique position perhaps since need relate chromium support css variables maturing according would mind setting variables differently rest inline style declaration would love way react", "d": "4/2016"}, {"body": "think shortterm plan probably leave status quo change styles continue explore js styles think likely end changing end styles another feature problem would work initial render using innerhtml would nt update nt work client rendered also possible set using dom api would expensive look every value might want alternative way express want use css variables want break declarative approach manage setting lifecycle hooks eg set refs componentdidmount componentdidupdate use ref call directly", "d": "4/2016"}, {"body": "using lifecycle hooks correctly got working seem cause trouble using react style attributes setting style js instead worked fine", "d": "4/2016"}, {"body": "fwiw agree people know focusinfocusout make work despite fact would map exact event handler use focusblur however last time discussed opted decided warn instead fine reversing decision get momentum within team", "d": "4/2016"}, {"body": "looks like decided incorrect claim indistinguishable onfocusonblur onfocusinonfocusout different moving focus two children element neither event fires container", "d": "4/2016"}, {"body": "properly means adapting logic enterleaveeventplugin nt simple adding simpleeventplugin", "d": "4/2016"}, {"body": "ah makes sense thanks explaining adding good first bug note spicyj comments need behave like want look", "d": "4/2016"}, {"body": "like work nobody minds enough tests time add real source code", "d": "4/2016"}, {"body": "hey gaearon spicyj apparently confusion let explain mouseover mouseout bubble mouseenter mouseleave nt bubble corresponding react event handlers work native events awesome native focus native blur events nt bubble corresponding react event handlers bubble dun dun dun native focusin native focusout events bubble react events implemented bubble jsfiddle made display checked chrome since mdn documentation states intended behavior believe browsers right please correct wrong following done warnings removed obviously currect react renamed currently work native work bubble event listeners implemented react bubble", "d": "4/2016"}, {"body": "hmm sounds plausible thanks correction kinda annoying end renaming people maybe best", "d": "4/2016"}, {"body": "parent access many children wants using multiple callback refs single child referenced many parents want wrappingchaining callback refs ref fires latest parent calls ref parent already listening restriction callback refs restriction exist string refs string refs documented legacy avoided", "d": "4/2016"}, {"body": "jimfb think get memory leak refs array special handling string refs documented legacy avoided really think good way handle input case ref callback", "d": "4/2016"}, {"body": "lijunle", "d": "4/2016"}, {"body": "zpao gaearon anything actionable want close actionable suggestionsbikeshedding wording", "d": "4/2016"}, {"body": "close sure exactly could improved specific suggestions sent pr", "d": "4/2016"}, {"body": "naive question trigger warning far know proptypes influence production negative consequence except takes lines code really nt see warning triggeredfor something possibly impact", "d": "4/2016"}, {"body": "warn people unneeded code production builds suggest impacts almost every react app existence maybe stupid idea wanted bring case people agree follows general rule warnings indicate something fixed imagine hard find someone arguing proptypes take space production builds", "d": "4/2016"}, {"body": "would put pretty heavy burden component authors would need distribute two versions components prod vs dev also super actionable using thirdparty component defines proptypes automated transform would nt necessarily able eliminate proptypes eg stateless function components without making bold assumption assigning proptypes function means function must react component anyway actually oppose idea think need transforms existence could enable warning guess worth headache someone writes transform people start using find byte savings justify complexity could consider enabling warning let reevaluate ifwhen transform becomes mainstream", "d": "4/2016"}, {"body": "thanks good feedback issues nt think", "d": "4/2016"}, {"body": "brigand pleased pull uglify delete proptypes production", "d": "4/2016"}, {"body": "mijamo yeah solves overhead brigand mentioned react components still proptype object defined bunch empty function references yes improvement", "d": "4/2016"}, {"body": "related", "d": "4/2016"}, {"body": "reacttestutils might exception convenience testing likely needs reconciler anyway", "d": "4/2016"}, {"body": "update react reactdom reactdom contain method render reactdomrender deprecated import react react import reactdom reactdom reactdomrender documentgetelementbyid appconfigrootelementid", "d": "4/2016"}, {"body": "ibhub nt understand questioncomment react contain render function deprecated usage return value discouraged behavior unchanged", "d": "4/2016"}, {"body": "ok thanks perhaps bug code nt understand reactdomrender undefined version find reason comment upd found problem incorrect alias reactdom webpack config sorry", "d": "4/2016"}, {"body": "tried make clear notes specific implementation works right exploration targeted looking either approaches combination work facebook scale without regressing performance important characteristics right possibility react builtin support managing inline styles purely hypothetical get api implications need learn actual challenges posed different approaches really one libs build react dom approaches work facebook scale share findings whenif tangible results moment early discuss specifically want handle inline styles delegated third party packages", "d": "4/2016"}, {"body": "works", "d": "4/2016"}, {"body": "feel free bring ever implement though", "d": "4/2016"}, {"body": "worth thought facebook working big inlinestyle library might impede efforts thirdparty library like radium never crossed mind much interested novelty simply creating convention called whatever passed style letting specific stylesheet implementation work looking forward seeing find", "d": "4/2016"}, {"body": "case little involved ie implementation might want return either bunch classes bunch styles currently allow string styles although jimfb expressed similar thoughts cc vjeux one looking stuff", "d": "4/2016"}, {"body": "thanks idea time ifwhen js styles approach support core going stick current approach styles add magic see convenience though chance end something similar cc vjeux think stuff", "d": "4/2016"}, {"body": "kevinbarabash could always handle userland create repo parse values passing react", "d": "4/2016"}, {"body": "cool try get aphrodite", "d": "4/2016"}, {"body": "worth noting cases long used mostly compiled provide polyfills objectassign module objectis inlined know idea reactpolyfill repo interesting though definitely something keep mind moving forward", "d": "4/2016"}, {"body": "warning well use redux case happens transitioning one page component another dispatching action nt dispatch error time fixed putting dispatch inside since saying nt even see error see extract failing code repository gist necessary dependencies reactrouter redux fine", "d": "4/2016"}, {"body": "dattaya would awesome nt time thanks", "d": "4/2016"}, {"body": "sure case worth investigating error happens present said could would provide example hold promise goes anyway steps reproduce error open chrome redux devtools extension installed press link input field type instead press square appeared bellow console see error", "d": "4/2016"}, {"body": "gaearon sounds like might redux related especially requires redux devtools extension installed move repository", "d": "4/2016"}, {"body": "receiving error somewhat similar context trying push route page component mounted inside trying check validate whether component even mounted nt mounted read unauthenticated user trying load account page component even mount user redirected login page try logic inside works expected example packagejson", "d": "4/2016"}, {"body": "jimfb impossible trigger error react react bug even repro cases use redux", "d": "4/2016"}, {"body": "spicyj ah yeah probably true idea redux devtools extension entirely conceivable reaching internals case would react bug issue nt repro without reduxdevtools dattaya comment seemed imply would seem imply might react bug yeah asked gaearon", "d": "4/2016"}, {"body": "redux devtools touch react internals userland code", "d": "4/2016"}, {"body": "vouch chrome extension though maybe zalmoxisus insight", "d": "4/2016"}, {"body": "yes sorry ambiguity referring chrome extension", "d": "4/2016"}, {"body": "gaearon strange extension injected script nt use react except fact imported checked example error appears also extension disabled dattaya could confirm nt seem related redux devtools chrome extension", "d": "4/2016"}, {"body": "zalmoxisus confirm error also appears extension disabled using react", "d": "4/2016"}, {"body": "zalmoxisus correct sorry confusion might looked wrong console trying replicate project without dev tools completely unrelated dev tools", "d": "4/2016"}, {"body": "problem bit debugging see callbacks queued using eg sometimes executed even instance unmounted normal actual error message bit different case occurs using stack weird part error occurs click nt use browsers backforward buttons also confirming completely unrelated dev tools adding another stack trace note case element related", "d": "4/2016"}, {"body": "seeing stack trace see error component unmounted route change contains listener navigating via rather browser backforward buttons unmount component prior route change error occur also see error amp", "d": "4/2016"}, {"body": "dattaya thanks posting repro case hopefully one us look", "d": "4/2016"}, {"body": "additional codepen showing error steps reproduce add number alerts switch pages although specific error different dattaya seems likely related cause also found happens include reactrouterredux project switching commenting line fixes issue", "d": "4/2016"}, {"body": "apparently second time called handling button click find sure means though", "d": "4/2016"}, {"body": "callbacks queued using transactiongetreactmountready enqueue eg trapbubbledeventslocal putlistener sometimes executed even instance unmounted gaearon spicyj know expected behaviour sounds like nt nt know sure ca nt use debug", "d": "4/2016"}, {"body": "minimal repro thusfar js var callbacks function emitchange callbacksforeach c gt c class app extends reactcomponent constructor props super props thisstate showchild true componentdidmount thissetstate showchild false render return thisstateshowchild amp amp class emitschangeonunmount extends reactcomponent componentwillunmount emitchange render return null class forceupdatesonchange extends reactcomponent componentdidmount thisonchange gt thisforceupdate thisonchange callbackspush thisonchange componentwillunmount callbacks callbacksfilter c gt c thisonchange render return reactdomrender documentgetelementbyid container thanks dan helping reduce", "d": "4/2016"}, {"body": "known problem might cause otherwise happen something throws exception maybe even", "d": "4/2016"}, {"body": "spicyj almost certainly caused variant", "d": "4/2016"}, {"body": "exact duplicate nt want close one duplicate case something effect redux setting state component afterwhile reactrouter unmounting parent similar phenomenon occurs due unmount higher tree within transaction", "d": "4/2016"}, {"body": "well problem tried removing dev tools works", "d": "4/2016"}, {"body": "note exactly message depends render underlying issue explained", "d": "4/2016"}, {"body": "type things something engineer likes push library edge business requirement decrease friction increase conversion fact things working exception spaces email input field let think gotcha library", "d": "4/2016"}, {"body": "browser dom node returns value accurately reflect user sees complaining gotcha spec propagates become gotcha browser propagates become gotcha library marcolanaro said engineers trying helpful referring engineers wrote spec users react commentary intended apply infrastructure code browsersreactetc application code sorry ambiguity", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "thanks idea get closer keep suggestion mind maybe make little personal", "d": "4/2016"}, {"body": "going close since nt think something would invest would probably take pr anyone cares implement", "d": "4/2016"}, {"body": "sounds like add warn tell ca nt put body tag inside foreignobject nt anything much svg right probably ideal solution would pass namespace info distinguish svg html tags name like title make sure contents svg tag appropriate html tags sure html tags nt allowed might detailed spec", "d": "4/2016"}, {"body": "take one toddgeist", "d": "4/2016"}, {"body": "keyanzhang please", "d": "4/2016"}, {"body": "see crash release ios issue fixed", "d": "4/2016"}, {"body": "fixed scroll ios bug fixes see detailed commits fix native events coalesced sending js specifically touch scroll events order respect ordering", "d": "4/2016"}, {"body": "confused easy workaround issue even something like get problem even worse get endless loop since functions bound access solution see get actual expected behavior something like kind mess makes callback rather annoyingunreliable use made jsbin issue", "d": "4/2016"}, {"body": "vitalybe guessing many react examples use classes use trailingleading underscores method names bind constructor without underscore also guessing nt problem strangely enough would make cleaner use knowledgeable people tell wrong", "d": "4/2016"}, {"body": "confused easy workaround issue class properties arrow functions js class mycomponent extends reactcomponent callback gt consolelog render return function added class property makes sure binding always current instance roughly", "d": "4/2016"}, {"body": "vitalybe use case refs set instance field make absolutely difference whether reattached every render", "d": "4/2016"}, {"body": "gotobusstop thanks snippet indeed looks better gaearon problem causing proxy called ref callback function causing neverending loop merely saving element true would nt matter much mentioned several solutions issue thread think main point however current behaviour rather unexpected", "d": "4/2016"}, {"body": "probably throw early setstate ref callback nt think meant supported pattern", "d": "4/2016"}, {"body": "also experience issue rendering serverside", "d": "4/2016"}, {"body": "also getting issue since updating react solution find using flux wrapping line block unsatisfactory though prevent statechanging code reached server put statechanging code function including setting cookie way server never touches", "d": "4/2016"}, {"body": "mbrio jacksongariety browser guys using chance using chrome seen similar bug unable reproduce chrome wondering might chrome bug mbrio jacksongariety either provide jsfiddle demonstrates issue fork use get access serversiderendering logic need repro", "d": "4/2016"}, {"body": "jimfb update files server react think see error fiddle made", "d": "4/2016"}, {"body": "using get event emitter defined", "d": "4/2016"}, {"body": "using eventemitter cdn nt seen errors", "d": "4/2016"}, {"body": "jimfb succeed reproduce problem serverside rendering since update uncaughtexception react dom tree root always node reference invariant violation react dom tree root always node reference invariant webfrontgithubsfrontendnodemodulesfbjslibinvariantj getnodefrominstance webfrontgithubsfrontendnodemodulesreactlib reactdomcomponentmixingetnativenode webfrontgithubsfrontendnode objectreactreconcilergetnativenode webfrontgithubsfrontendnodem reactdomcomponentreactmultichildmixinupdatechildren webfrontgith reactdomcomponentreactmultichildmixinupdatechildren webfrontgithu reactdomcomponentmixinupdatedomchildren webfrontgithubsfrontend reactdomcomponentmixinupdatecomponent webfrontgithubsfrontendnod reactdomcomponentmixinreceivecomponent webfrontgithubsfrontendno reactdomcomponentwrapper receivecomponent objectreactreconcilerreceivecomponent webfrontgithubsfrontendnod reactcompositecomponentmixinupdaterenderedcomponent webfrontgithub reactcompositecomponentmixinperformcomponentupdate webfrontgithubs reactcompositecomponentmixinupdatecomponent webfrontgithubsfronten wrapper updatecomponent reactcompositecomponentmixinreceivecomponent webfrontgithubsfronte objectreactreconcilerreceivecomponent webfrontgithubsfrontendnod reactcompositecomponentmixinupdaterenderedcomponent webfrontgithub reactcompositecomponentmixinperformcomponentupdate webfrontgithubs reactcompositecomponentmixinupdatecomponent webfrontgithubsfronten wrapper updatecomponent reactcompositecomponentmixinreceivecomponent webfrontgithubsfronte", "d": "4/2016"}, {"body": "also getting error ssr updating", "d": "4/2016"}, {"body": "damienleroux gbhrdt sure couple fairly complicated repros lines dependencies like reactrouter redux similar bug may may related nt yet repro super simpleactionable demonstrates bug react oppose reactrouterredux answer question provide simple repro would still super helpful otherwise look issues loop back one later", "d": "4/2016"}, {"body": "damienleroux gbhrdt ok repro issues related anything dealing ssr yes still need repro", "d": "4/2016"}, {"body": "got problem firefox errors chrome possibly could related nodeenv productiondevelopment minification still trying find", "d": "4/2016"}, {"body": "getting serverside using rendertostring repro case js import react react import rendertostring reactdomserver const el reactcreateclass getinitialstate return foo bar componentwillmount settimeout gt thissetstate foo baz render return thisstatefoo const html rendertostring consolelog html compile w babel run node buildtjs bar throw error invariant violation react dom tree root always node reference invariant objectgetnodefrominstance objectreactdomidoperationsdangerouslyprocesschildrenupdates objectwrapper processchildrenupdates processqueue reactdomcomponentreactmultichildmixinupdatetextcontent reactdomcomponentmixinupdatedomchildren reactdomcomponentmixinupdatecomponent reactdomcomponentmixinreceivecomponent reactdomcomponentwrapper receivecomponent note error thrown second call", "d": "4/2016"}, {"body": "tootallnate feel like setstate called registered since setstate likely occur render occurred consider calling directly within using use case needs happen mounting sounds like usage error perhaps could warn case nt think ever supported pattern assuming regression related setting state component rendered everyone seeing behavior result something like tootallnate example think could close error warn situation", "d": "4/2016"}, {"body": "sounds like correct pattern example indeed explain situation bit would like find good pattern allow serverside wait component resolve sotospeak calling wellestablished recommended patterns", "d": "4/2016"}, {"body": "tootallnate yeah bunch people want features like see short answer nt good solution", "d": "4/2016"}, {"body": "also noticing problem server side pattern similar tootallnate specific case trying use reactrouter server side async routes want wait components resolve due code splitting etc using async routes reactrouter aka getcomponent getindexroute getchildroutes etc component immediately render since route resolved shown later route resolves state set via event listener attached componentwillmount shown client problem component renders server render run error thrown realize possibly addressed within reactrouter thought chime since seems relevant conversation", "d": "4/2016"}, {"body": "code linked calls directly settimeout legal entirely different example tootallnate showed anyone simple repro jsfiddle use settimeout amp friends", "d": "4/2016"}, {"body": "maybe one try render code server know rendering server exactly setup nt make lot sense get error sure firebase thing minified", "d": "4/2016"}, {"body": "fahrradflucht think basically tootallnate posted since calling callback async action invoked", "d": "4/2016"}, {"body": "jimfb lines see setstate actually wrapped event listener thus async similar calling settimeout", "d": "4/2016"}, {"body": "cc ryanflorence taion mjackson timdorr comment", "d": "4/2016"}, {"body": "ssr provide match essence resolves asynchronous props state passing execution callback nt using server", "d": "4/2016"}, {"body": "explain situation bit would like find good pattern allow serverside wait component resolve sotospeak calling rendertostring wellestablished recommended patterns tootallnate side note react starter kit discourage developers making react components render asynchronously favor async logic routing level example typical app route compatible universalrouter js import fetch corefetch import layout componentslayout import post post export default path posts id async action params const resp await fetch const data await respjson return title datatitle component", "d": "4/2016"}, {"body": "tootallnate explain situation bit would like find good pattern allow serverside wait component resolve sotospeak calling rendertostring wellestablished recommended patterns best thing look component tree prior rendering data fetching used tricks like static properties applied via decorator components special props read form depends controlling data flow component container would better async property support nt seem horizon near term meantime static props seem best way similar relay works", "d": "4/2016"}, {"body": "timdorr says react router used rendering server lowerlevel component receives state externally conjunction helper potentially asynchronously run match invoke callback match completed nt think move call potentially run synchronously want run initial render cases maybe need add invariant used rendering server", "d": "4/2016"}, {"body": "ssr provide essence resolves asynchronous props state passing execution callback nt using server actually currently possible use server could bit simpler merged question use instead server much convenient use client server eg used cc timdorr taion mjackson", "d": "4/2016"}, {"body": "runs within context resolving many effects asynchronously runs outside react context resolve asynchronous activity passing reactland may use server side duplicate behavior result us creating duplicate subscribers internal objects wasteful server app correct right way middlewares believe plan clean keep mind back days required api much job maybe need bring back sure regardless issue react repo nt really place discussing things", "d": "4/2016"}, {"body": "going close probably react issue per latest comment someone demonstrate react issue using jsfiddles reinvestigate", "d": "4/2016"}, {"body": "regression look history tapeventplugin react codebase see affected one recent refactorings internal code make guarantees api stability specifically changed arguments passed since effectively fork needs incorporate upstream changes compatible next release sent pr mirrors changes testing makes compatible react would expect also compatible final code changed since find pr closing please let us know issues cheers", "d": "4/2016"}, {"body": "nt realize tapeventplugin still maintained internally plan unifying two react support touch events outofthebox reason outofscope facebook usemaintain npm package nt two parallel copies code", "d": "4/2016"}, {"body": "nt think maintained per se internal refactoring changed argument order soprano went matching call sites changing happened include tapeventplugin make guarantees broken think remove core source code yeah means maintainers need track changes internal apis nt better solution right eventually might expose event system officially well dom configs addons taught us anything anything expose creates huge maintenance burden road creates significant delays development react please excuse us nt good story around right happy discuss handling taps separate issue though feel free file thanks", "d": "4/2016"}, {"body": "gaearon correct add comment plan rip core repository handled user land per", "d": "4/2016"}, {"body": "thanks guys reason remembered touch events detected without tapeventplugin installed tested longer case since chrome safari removed tap delays mobile pages probably time stop using tapeventplugin us onclick event gestures considering building higherordercomponents detect certainly wo nt quite happens wink", "d": "4/2016"}, {"body": "since chrome safari removed tap delays mobile pages probably time stop using tapeventplugin use onclick event", "d": "4/2016"}, {"body": "appsforartists since chrome safari removed tap delays mobile pages long take changes hit ios safari latest ios nt fast tap response", "d": "4/2016"}, {"body": "chicoxyzzy value permitted handful elements according html spec use data custom attributes", "d": "4/2016"}, {"body": "leaving open fix merged", "d": "4/2016"}, {"body": "believe fixed reopen", "d": "4/2016"}, {"body": "something causes nonpersistent events satisfy generational hypothesis way seems like relevant gc pauses really young gen", "d": "4/2016"}, {"body": "js gcs work would optimize copying collector case would essentially free except might cause frequent young gcs fine js engine chose different strategy would nt case gc general whether gc optimized whether uses copying collector specifically", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "see lot transactions like update attribute set innerhtml update styles set textcontent really happen addition ca nt see detailed content set innerhtml", "d": "4/2016"}, {"body": "see lot transactions like update attribute set innerhtml update styles set textcontent really happen yes although afaik might avoidable note dom operation necessarily expensive worry much unless really seem unexpected addition ca nt see detailed content set innerhtml operation name misleading actually using real nodes reading prohibitively expensive", "d": "4/2016"}, {"body": "jimfb far understand description issue suggests extent matters", "d": "4/2016"}, {"body": "returning promise would bad could argue creates dependency promises react library", "d": "4/2016"}, {"body": "hm seeing behavior nt think sort async update running redux input like wrappingparent form onchange event like might elegant solution works fine react caret jumps end input every time type reducer something like logic special things certain fields look putting repro jsfiddle like", "d": "4/2016"}, {"body": "chrisdavies think running different issue try upgrading react", "d": "4/2016"}, {"body": "yup thanks", "d": "4/2016"}, {"body": "would interested creating proof concept react", "d": "4/2016"}, {"body": "gaearon unfortunately familiar internals react hoping someone good understanding react internals would draw inspiration lib linked", "d": "4/2016"}, {"body": "unfortunately server rendering currently priority facebook dedicate enough time optimizations related give try might able help along way see example ambitious pr made external contributor significantly changed react renders text nodes would imagine look might least touch similar files plan introduce internal documentation yet however enthusiastic seeing people contribute areas enough resources please let us know like give try feel free create workinprogress pr ask questions stumble problems need clarification", "d": "4/2016"}, {"body": "gaearon thanks links look like something work hopefully time point give shot", "d": "4/2016"}, {"body": "jimfb rest ya fb thoughts potential api sort thing might able pr something quite sure everyone thinks reach coordinating identifiers different sort thing coordinating sort serverclient cache suggests thinking date flux store usecase", "d": "4/2016"}, {"body": "got warning anyone point explanation bit detail ty", "d": "4/2016"}, {"body": "newswim put code stackoverflow question link", "d": "4/2016"}, {"body": "newswim read controlled components uncontrolled components choose one preferably controlled components nt ever use uncontrolled components using controlled components make sure never pass react yes brigand correct better addressed stackoverflow", "d": "4/2016"}, {"body": "jimfb could issue reopened base comment", "d": "4/2016"}, {"body": "biblesyme experiencing latest version", "d": "4/2016"}, {"body": "example demonstrate lag exist without react sure reactrelated show fiddle", "d": "4/2016"}, {"body": "reactexample planjavascript jquery seems safari problem anybody could explain slow trigger touchstart safari solve problem enriquetuya gaearon jimfb", "d": "4/2016"}, {"body": "hi guys seems safari trigger touchstart slow alert slow nt know may ask time react support tap event seems difficult achieve", "d": "4/2016"}, {"body": "biblesyme check solved problem using plugin though ended using issue relates", "d": "4/2016"}, {"body": "think actually best practice follow syranide pointed classes would vote approach believe reasoning throwing error assigned state constructor sure hard would catch would bring react conventions close instead people using upgrading renaming methods", "d": "4/2016"}, {"body": "nodkz use parent component event target child component", "d": "4/2016"}, {"body": "heineiuo thanks works perfectly", "d": "4/2016"}, {"body": "afaik took element adding would recalc styles anyway definition took longest time period including etc benefit different elements could different delays oneneedstofitall", "d": "4/2016"}, {"body": "fwiw plan make changes current plan hand somebody community enough internal users facebook meaningfully evolve api spend lot time", "d": "4/2016"}, {"body": "getting issue upgrading react react packages including perf printexclusive etc works printwasted gives exception shown", "d": "4/2016"}, {"body": "sverrejoh running using", "d": "4/2016"}, {"body": "yes rest perf api works example changed branch everything works like double checked reactperf react dig around bit nt anything known", "d": "4/2016"}, {"body": "let reopen hear", "d": "4/2016"}, {"body": "working minutes started failing without anything strange", "d": "4/2016"}, {"body": "danita thanks info also stack trace error message first post", "d": "4/2016"}, {"body": "yes exposing object tried exposing working puzzling using full ecosystem babel webpack webpack dev server testing chrome", "d": "4/2016"}, {"body": "chance public project less consistently reproduce", "d": "4/2016"}, {"body": "technically means write hierarchy record code super fragile hard pin without specific component hierarchy happens cause", "d": "4/2016"}, {"body": "someone wants spend effort tracking would recommend add line add line please share relevant logs correspond id see message", "d": "4/2016"}, {"body": "gaearon thanks dan try setting see help unfortunately share project right client terms", "d": "4/2016"}, {"body": "danita yeah thought might case thanks taking time investigate", "d": "4/2016"}, {"body": "gaearon ok added lines managed also reproduce error find console log fyi app spa captured route long list items filtered certain criteria filtering items removed filtering", "d": "4/2016"}, {"body": "thank helpful dig see repro given new info", "d": "4/2016"}, {"body": "updating node npm solved problem thanks", "d": "4/2016"}, {"body": "problem throwinthetowel nt things learned along way jsxtransfomer biggest thing going actually creating script tags right order vital sourcemaps new function fun issues forget exactly test suite jsxtransformer testing issues", "d": "4/2016"}, {"body": "nope handle come never felt need write tests", "d": "4/2016"}, {"body": "wrote intention building us ship docs okay pull something like seems reasonable extended version babelstandalone got differing license bsd script vs mit babel babelstandlone facebook copyright header quite sure works guess keep copyright header unless relicense script mit", "d": "4/2016"}, {"body": "made something avoid setup process getting started nt transpile inline scripts html though easy support allows use jsx without setup build process", "d": "4/2016"}, {"body": "looking something use testingdevelopment take look completely unofficialunsupported transpile inline scripts html works pretty well needs", "d": "4/2016"}, {"body": "code bsd unlikely change essentially old jsxtransformer wrote react able redistribute maintain license lawyer alternatively make new package inverse", "d": "4/2016"}, {"body": "trying implement semantic html dropped use html head body tags neither required useful time accidentally added body tag around list divs forgetting use thinking good semantic element main body app content containing headerfooter see anyway resulting html outputs list divs wrapping tag kind errors occurred initial render attempt mutate dom get invariant violation error definitely debug warnings html head body tags", "d": "4/2016"}, {"body": "graue jimfb required check already something like getting following error clearly states problem", "d": "4/2016"}, {"body": "eeh think agree bulk bug already handled dom nesting validation let close untilunless driving use caseneed", "d": "4/2016"}, {"body": "assuming still place picking react declarations currently looking flow types deployed npm packages point might make sense react definitions deployed react release anyway pick react declarations copying projects cc sebmarkbage", "d": "4/2016"}, {"body": "particular facebookflux examples using flow picking see facebookflux", "d": "4/2016"}, {"body": "wanted add onto stacks deep starting see looks like bug chrome profiler hard see exactly appears stack getting huge falling flame graph placed right pretty deep sometimes deep component tree would nt bother much appears also causing profiler crash errors making difficult get good performance metrics application anymore", "d": "4/2016"}, {"body": "might better directed chrome team though paulirish might interested stack traces get smaller start tackling", "d": "4/2016"}, {"body": "prefer applying monkey patch fixed react wrapping testutils module function render component const renderer testutilscreaterenderer rendererrender component return patch renderergetrenderoutput function fixowner obj return objowner objectassign obj owner null objectassign obj function patch obj arrayisarray obj return objmap comp gt return fixchildren comp else obj fixowner obj objprops amp amp typeof objpropschildren object objprops fixowner objprops objpropschildren fixchildren objpropschildren return obj", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "thanks great discussion name kind makes sense since everyone calls common usagetechnique although used client side far less common name completely generalized completely precise specificmeaningful going close nothing actionable moment continue bikeshedding reopen ifwhen name change seems imminent", "d": "4/2016"}, {"body": "plan use apply custom function would describe alternatively use basic api also lets define custom operations hope helps", "d": "4/2016"}, {"body": "issue change get correct event information select element dom still reflects initial value second update selection change select element reflect true current selection way able fix use selected property elements mapping function course gets react warnings saying use value prop since working living warnings please fix", "d": "4/2016"}, {"body": "please try might contain fix need please create example reproducing issue", "d": "4/2016"}, {"body": "quicksnap need something output render div basically anyway future reference usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation move stackoverflow", "d": "4/2016"}, {"body": "problem forget specifics lately using enzyme stellar also wanted say thanks work cleaning open issues noticed tackling stuff closing things thanks work", "d": "4/2016"}, {"body": "yes form based proptypes allows live edit component would superuseful would cool get structure proptypes component said right quite hard possible get values etc proptypes", "d": "4/2016"}, {"body": "proptypes mostly legacy maintenance mode replaced tools like flow guess nt going add let close reopen thinking matter changes substantially", "d": "4/2016"}, {"body": "example provided jimfb accurate stand current version inferno", "d": "4/2016"}, {"body": "update suppose switch string constants one instance symbols would better", "d": "4/2016"}, {"body": "ffxsam pr running nt know status looks complete side maybe merged soon", "d": "4/2016"}, {"body": "still ironing move cutting branches decided expect get", "d": "4/2016"}, {"body": "number high often", "d": "4/2016"}, {"body": "current implementation buggy reality reports number times called fixed since code rewritten completely fix existing version", "d": "4/2016"}, {"body": "chulkilee send mail fb legals answer think really important concert anyone may face", "d": "4/2016"}, {"body": "let legal team know another place facebook get feedback developers put vote could find", "d": "4/2016"}, {"body": "mridgway issue turned issue objectassign package switching using returns keys wrong order object key become large ah sounds like really good reason seeing warning warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client ut id textfield value type text server ut id textfield type text value isomorphic app ca nt see reason key ordering different except saying thanks", "d": "4/2016"}, {"body": "think closed slightly outdated", "d": "4/2016"}, {"body": "deleted node module performed npm install fixed multiple react modules loaded", "d": "4/2016"}, {"body": "may happen run across error future recently saw error caused calling component unmounted caused asynchronous event assumed component still mounted although ismounted considered antipattern one possible use case see convenient", "d": "4/2016"}, {"body": "percyhanna saying error despite wording change provide failing test thanks", "d": "4/2016"}, {"body": "merely documenting problem ran solution since seemed slightly different issues described app nt gotten around upgrading past yet", "d": "4/2016"}, {"body": "app nt gotten around upgrading past yet got thanks worried missed case adding warning", "d": "4/2016"}, {"body": "agree tcurdt vague errors killing productivity know issue closed piling prolly nt help much massive problems trying update website work react know react theory nt hard one error causing lot grief clear happening happening causing etc", "d": "4/2016"}, {"body": "rosspatton chrome activate track component path breaking almost always rendering code throwing error preventing render completing", "d": "4/2016"}, {"body": "danita discovered way circumvent error forcing refresh webpack bundle", "d": "4/2016"}, {"body": "error message usually mean component threw initial mount look error message ignore see real error message", "d": "4/2016"}, {"body": "problem two react transforms transform catcherrors preventing catcherrors working incorporated error catching first transform able see exact error hmr continued effectively sunday april dan abramov notifications githubcom wrote error message usually mean render component threw initial mount look error message ignore see real error message receiving commented reply email directly view github james j womack senior software engineerarchitect netflix", "d": "4/2016"}, {"body": "sebmarkbage showing jayphelps think mentioned shortform twitter providing functionality would enable people something like following typical autocomplete example js import component react import boundsubject boundsubjectdecorator import rx rxjs export default mycomponent extends component boundsubject binds subject handlers subject instance keypresses new subject observe return compose keypresses throttle stream async auto complete data autocompletedata thiskeypresses map e gt etargetvalue throttle switchmap query gt getsomeajaxobservable query render return thisdataautocompletedatamap x gt x sure recommend people use pattern certainly could pretty ergonomic nice prefer mixing redux rxjs think better architecturally", "d": "4/2016"}, {"body": "seems working elegant opinion javascript static defaultprops somedefaultprops constructor props defaultprops super props defaultprops", "d": "4/2016"}, {"body": "fxhereng second argument reserved avoid overriding custom meaning might break future releases", "d": "4/2016"}, {"body": "ok gaearon best way set default props thanks", "d": "4/2016"}, {"body": "recommended way", "d": "4/2016"}, {"body": "use experimental transform use need changes constructor otherwise need assign outside", "d": "4/2016"}, {"body": "also", "d": "4/2016"}, {"body": "efernandesng supported pattern behave like mutates", "d": "4/2016"}, {"body": "ping spargonaut", "d": "4/2016"}, {"body": "howdy sorry radio silence responding original questions sooner coworker mine actually posted question account pairing project together last year hoping would responded detailed answer questions apparently unfortunately neither us project point unable provide fiddles however remember seeing issue several different browsers several different phones android ios application building also remember checked bug production version instagram time observed behavior yet unable verify form submitted iirc form get submitted tested application since ca nt provide fiddle ca nt provide information help troubleshoot given circumstances totally understand decide close issue appreciate yall following several times help us get resolved cheers", "d": "4/2016"}, {"body": "browsing good first bug list looks like one resolved jimfb would mind closing agree", "d": "4/2016"}, {"body": "yes correct thanks", "d": "4/2016"}, {"body": "iansinnott thanks sharing started using realized going need full api needed access individual matching groups regexp within replace function realized change simple patch require api change created new repo", "d": "4/2016"}, {"body": "throws invariant violation react dom tree root always node reference note work unmount subtree apparently unmount whole root unmounting batched differently updates", "d": "4/2016"}, {"body": "got tripped today closed give shot", "d": "4/2016"}, {"body": "performance question preferable always include ok omit undefined eg maybe browsers better optimize code shape objects always", "d": "4/2016"}, {"body": "elsassph keeping properties allows jit compilers match hidden class objects generally speaking give better performance", "d": "4/2016"}, {"body": "trueadm benefit anyway hidden classes suspect nothing gained context performance difference small spread whole project unlikely even measurable overdo actually increasing cost result dealing larger objects processing involved creating probably immeasurably would say largely counterproductive rendering large lists may good idea keep signature hidden class kept fast cache even doubt really measurable", "d": "4/2016"}, {"body": "syranide performance definitely make impact point good large lists virtual nodes need aggressively diff one many reasons inferno gets good performance especially comes complex node tress rapidly update keeping object shapes monomorphic give significant benefits regards decides spent countless hours going asm output using checking cases", "d": "4/2016"}, {"body": "performance definitely make impact point good large lists virtual nodes generally single code path repeated unusual setup mixing keys keys refs refs list keeping object shapes monomorphic give significant benefits yes preemptively adding unlikely matters creating elements otherwise exact signature uncommon react elements experience use ref frowned upon rarely used use key largely related intent component print unique react element signatures quite confident difference would small actual impact immeasurable nothing wrong reducing hidden classes preemptively adding null keyref seems entirely counterproductive general rule", "d": "4/2016"}, {"body": "syranide looks great benchmarks done right grand scheme things unlikely make much difference app code user created likely bottleneck case worth get free compiler level", "d": "4/2016"}, {"body": "thanks kind considerations facing making objects smaller including null properties vs shadow classes potential benefits", "d": "4/2016"}, {"body": "react team operating assumption better include nulls going close since babel plugin exists", "d": "4/2016"}, {"body": "could try one", "d": "4/2016"}, {"body": "sure", "d": "4/2016"}, {"body": "news", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "change context walking children calling forceupdate contexttypes set context element works think would neat react helper function screen size changes translations global edit mode kinds seldomchanging things benefit context", "d": "4/2016"}, {"body": "wmertens returns elements components ca nt call forceupdate regardless op already linked relevant issue", "d": "4/2016"}, {"body": "fwiw maintain hot reloading purposes relies react internals", "d": "4/2016"}, {"body": "ok stick safe side continue using redux data would better stored context sometimes means store listeners page luckily nt seem impact performance use cases", "d": "4/2016"}, {"body": "looks like nodecache killed still issue", "d": "4/2016"}, {"body": "nope thank", "d": "4/2016"}, {"body": "wrapping children utility javascript import children react childrenfilter function children filterfn return children toarray children filter filterfn export default children using like bit shorter component code", "d": "4/2016"}, {"body": "suggest copying children object instead mutating clearer using util", "d": "4/2016"}, {"body": "thanks advice spicyj code updated javascript import children react export default objectassign children filter children filterfn return children toarray children filter filterfn", "d": "4/2016"}, {"body": "might helpful decide rewrite doc use spread operator", "d": "4/2016"}, {"body": "also kolodny interested direct people repo", "d": "4/2016"}, {"body": "handing community closing please see note", "d": "4/2016"}, {"body": "example componentdidmount windowaddeventlistener componentwillunmount windowremoveeventlistener handlewindowkeyboardpress event thispropsonkeypressed triggers datastore update emits change event ends invoking setstate call parent somewhere experiencing exact problem attaching handlers didmount removing willunmount still getting setstate warning updates regarding open issue even tried manually implementing ismounted verify still end warning crazy thing application still works fine generates ton warnings", "d": "4/2016"}, {"body": "even tried manually implementing ismounted verify still end warning yeah call something like unfortunately react emit warnings using deprecated flag", "d": "4/2016"}, {"body": "haha thank mean warnings setstate call something like bcomponentmounted avoid confusion", "d": "4/2016"}, {"body": "thheller agree order execution parent first old think quite relevant sebmarkbage common acceptable use case animations note absolutely want use reactstyle libraries since gets inefficient complex animations want squeeze maximum performance devices comes mobile devices consider case parent say strips dom inserts elements place artifical scroll bar could done way react needs knowledge nt affect render expect dom elements rendered point free mutate children long nt affect next render waking chain would expect thing children alas child see changes gets executed way nt make much sense method since example access mutated dom child say subscribe scroll events parent jump hoops set events make sane highly intuitive one would assume lifecycle hook exists interoperate dom since speaking purely academic manner would nt actually need hypothetically world everything done react way order makes unintuitive highly recommend considered bug design choices reevaluated ps talking order execution event like thheller mentioned render happens since logical way go child parent anyway", "d": "4/2016"}, {"body": "spicyj closed since removed right", "d": "4/2016"}, {"body": "yeah fixed thank", "d": "4/2016"}, {"body": "fwiw speak many sentry users also affecting including sentry team uses react let us know happy help make happen", "d": "4/2016"}, {"body": "summary try solve something also optimizing constraints react big downloadparse react ecosystem many optionsconfigurations learn react slow error messages short cryptic different tools nt work different combinations global configurationscompliers solving one issue time nt work constraint solving anyway came recently think react native issue solution suggested compile error codes put lookup somehow like syranide spicyj suggested stack traces minified compiled code often nt legible stack traces even stack frames debugging source maps reinsert well seems like much general problem though something ecosystem needs address like calls warnings nt think react repo hook solving general js problems maybe react spit stripping error message generating source map error code lookup file left minifiercompiler someone build solution babel adopt", "d": "4/2016"}, {"body": "like see javascript adopt standard exceptions actual concern generating consistent error messages nt think solutions like angular embedding urls trying add debug info needed rather need treat javascript like every programming language tools like sentry responsible parsing making sense errors higher level libraries frameworks nt obscure details nt know internals react concern ensuring errors least throw standard exceptions", "d": "4/2016"}, {"body": "note preserving error messages standard feature programming languages general many native application provide small coarse grained symbols systems like c java preserve nt deal problem download size memory usage error messages scale add lot bytes application stripping significant win could imagine compromise shorter messages need look means might well go way add error code right relative size pretty small plans focusing minimizing byte size react package concern people point messages represent significantly larger relative size start making impact expand problem relay react native becomes noticable course could put burden end user library eg nt compiler website nt get users suffer nt help cdn usage also good citizens community many sites nt advanced polyfill compiler solutions degree cater lower common denominator want provide decent solution existing tooling similarly include objectassign polyfill default even though could require polyfill nt really good standard solution global polyfills node example people get decent production set default happy transform spit unique error code message goes json file reference though way could restore error messages note thrown errors super helpful anyway less useful warnings curious see kind errors get much helpful", "d": "4/2016"}, {"body": "think bigger issue intentionally remove lot thrown errors together test adds execution time hot paths since errors left maybe nt matter anymore also nt solve issue really want ability add fine grained error tracking subset users include warnings new devtools plugin system hopefully let least profiling builds react", "d": "4/2016"}, {"body": "sebmarkbage note preserving error messages standard feature programming languages general many native application provide small coarse grained symbols typically affects symbols actual error messages thing gets removed production builds typically asserts go away error messages retained often show console elsewhere however rare case error get removed often function error raised named way becomes obvious stacktrace happened example ios core foundation execute code shows pretty clear stacktraces javascript theory sourcemaps however map locations symbol names would mean function name gets minimized really helping", "d": "4/2016"}, {"body": "generally dynamically linked right statically linked libraries like common ios optimize symbols unless debug symbols locally similar source map source maps include references source code ability expand stack trace frames eg function inlined reproduce stack trace react native error messages default example btw nt anything change execution flow modes lot production bugs due strategies past js native example network request mutation right assertion gets aborted development mode might look like small bug never know bad crash goes production network request mutation continues along pretty bad bugs due made intentional never change execution flow means nt strip assertions would crash throw development similarly want able strip expensive assertions turn logs instead throws", "d": "4/2016"}, {"body": "generally dynamically linked right statically linked libraries like common ios optimize symbols unless debug symbols locally similar source map think make distinction symbols error messages symbols solved problem native javascript debug symbolspdb files sourcemaps respectively hypothetically optimized exceptions would carry identifier used look useful information would already go ways hresult windows many ways like errno steroids resolved quite appropriate error messages without creating binary bloat", "d": "4/2016"}, {"body": "sebmarkbage completely understand agree unminified errors real live production app bad idea however would big help testingdebugging production build sandbox sometimes errors occur production nt occur development build think option unminified errors production build documentation explains drawbacks using anything testingdebugging would biggest win developers", "d": "4/2016"}, {"body": "example error noncontrived occurred production conceivable thing could happen extraordinary uncommon practice happen like know asap", "d": "4/2016"}, {"body": "jimfb definitely nt inconsistency development production builds react race condition code difference speed load time development production builds course affect race conditions unfortunately nt remember exact details know forgot wrap call using meteor somehow dev mode managed always run meteor ready anyway production ran soon tried access meteor feature nt yet loaded throwing exception nt remember exactly error got caught minified react though unless impossible userland race conditions throw errors would get caught minified react would think always possible instance component accidentally returns programmer mistakenly assumed certain asyncloaded data would present time renders possibility minified errors production exists", "d": "4/2016"}, {"body": "returning best example since programmers guarantee returns element way generate react error could think top head sure ways", "d": "4/2016"}, {"body": "tricky thing race conditions build better error messages potentially warnings still going performance impact main differences performance result us eliminating debugging information logic add info back production build performance characteristics likely resemble dev build throw errors would get caught minified react react wo nt catchminify userland codetraces userland code minified tool tool chain want unminified production build react build dev would get want unminified production build", "d": "4/2016"}, {"body": "think example mention requires middle ground build something expensive checks removed race condition gets hit time still nice debug messages problem different options create explosion different options could conceive configuration would catch scenario another configuration use explosion best practices depend whether someone hit particular scenario involved think configuration like needs high bar luckily talk profile configuration build set run near full speed retaining lot debug information profiling purposes designed used development machines perhaps scenario would satisfied option well", "d": "4/2016"}, {"body": "jimfb know think probably dealing error minified toolchain year ago really keep log tricky issues dealt marginal possibility userland code performing invalid react operations result race condition still exists seem way less likely userland code throwing another thing could help catch race conditions dev build babelplugintransformreactremoveproptypes assume checks biggest performance penalty devspecific feature sebmarkbage case profile configuration sounds good failed catch scenario like nt think would clamoring options point would hard predict would even effect race condition", "d": "4/2016"}, {"body": "issue easy fix add original error message reacts one done got stack trace miss original error description basically replaced nothing saying one react", "d": "4/2016"}, {"body": "error occurs stateless component defining like seems environments mine windows node node fine", "d": "4/2016"}, {"body": "jest remedy problem", "d": "4/2016"}, {"body": "wrong require contextjs files need access context variables methods encapsulation respected maybe well gaeron", "d": "4/2016"}, {"body": "cauburtin context useful change trigger rerendering unlike module exports overridden parent useful feature singleton useful server rendering want isolate data", "d": "4/2016"}, {"body": "agreed nt needed yet could pass react instance context often heard bad practice probably think even mentioned docs recall also pass entire react components props like props could singleton context instead case react view events listeners toproot remote control shared context would shared access remote control sub components update props change possibly access use global context fan singletons case particularly could reuse passing react instance props way useful passing less automatizedhidden common parent class composition well writing realize singleton context idea bad confusing react docs nt invite much use context like optional props actually get ask", "d": "4/2016"}, {"body": "implementing drawer android using react native trying create different file drawer menu code drawer content code created react component different able work file need drawer reference perform operations drawer component files code pass reference drawer component file use drawer methods like opendrawer use strict content component drawer need refer drawer reference drawerscreenjs use strict var react require reactnative var appregistry stylesheet text view dimensions image touchablehighlight textinput react var devicewidth dimensionsget window width var drawerscreen reactcreateclass render function return var styles stylesheetcreate container alignitems center justifycontent center flex flexdirection column inputfield backgroundcolor height", "d": "4/2016"}, {"body": "right using redux subscribe store mediaqueries components decide render differently eg phone means otherwise pure components need subscription store kind smells wrong mention subcriber model redux resulting whole lot subscriptions something rarely changes think case context much better place store issue prevents using", "d": "4/2016"}, {"body": "wmertens something need done componentdidmount right", "d": "4/2016"}, {"body": "cauburtin point user choose different language point user resize", "d": "4/2016"}, {"body": "resize could listen componentdidmount languages would rerender everything", "d": "4/2016"}, {"body": "prefer repeating resize logic something cool like redux actioncreator listens whole apo works server side stateresponsiveisphoneisprerenderscreenwidth etc server dispatch based user agent neat fri apr pm cyril auburtin notifications githubcom wrote resize could listen componentdidmount languages would rerender everything receiving mentioned reply email directly view github wout typed mobile excuse terseness", "d": "4/2016"}, {"body": "yeah simple key lang top tree suffice languages nice sites animations though fri apr pm wout mertens woutmertens gmailcom wrote prefer repeating resize logic something cool like redux actioncreator listens whole apo works server side stateresponsiveisphoneisprerenderscreenwidth etc server dispatch based user agent neat fri apr pm cyril auburtin notifications githubcom wrote resize could listen componentdidmount languages would rerender everything receiving mentioned reply email directly view github wout typed mobile excuse terseness wout typed mobile excuse terseness", "d": "4/2016"}, {"body": "like resize event listeners actually cheap nt think bad many type listeners", "d": "4/2016"}, {"body": "nono nt doubt cheap much easier write thiscontextisphone managing resize handlers fri apr pm cyril auburtin notifications githubcom wrote like resize event listeners actually cheap dont think bad many type listeners receiving mentioned reply email directly view github wout typed mobile excuse terseness", "d": "4/2016"}, {"body": "plan possibility approach could implemented work currently react errors", "d": "4/2016"}, {"body": "cased problems trying test view casper example tag caused test blow longer tag tag dom", "d": "4/2016"}, {"body": "dschinkel react removed attribute documentcreateelement datareactid", "d": "4/2016"}, {"body": "aweary clientside rendering ssr still", "d": "4/2016"}, {"body": "cool thanks aweary nt upgrade yet perfect jimfb ssr", "d": "4/2016"}, {"body": "plus lets say go existing react code lt say another application whatever need know resolve anyway via casper get working like continue pursue talking could", "d": "4/2016"}, {"body": "dschinkel ssr server side rendering", "d": "4/2016"}, {"body": "sure would impacting casper takes selector still select would assume anyway think commenting old issue nt appropriate place discuss though think specific issue react please open new issue test case run otherwise seems like potentially issue casper usage maybe querying dom component rendered would better discussed stack overflow potentially casper repository", "d": "4/2016"}, {"body": "cause problems looking seeing get casper play friendly fair enough", "d": "4/2016"}, {"body": "nt seen mentioned thread thusfar think solving also improves composability instance imagine grid want cells fade certain order ideally two components play one handle layout another handle animation api like would enable switch different layout different animation without one know implementation details would expect receive list children would intercept list inject appropriate styles andor event listeners return new list consume reason concerned laying grid except react elements ca nt return arrays render moreover simple way replace grid say masonry layout required act container children current limitations suppose could something like javascript springconfig springconfig gt cells fadeanimator render return reactcloneelement propswrapper null propschildren makes code less clear complex harder compose", "d": "4/2016"}, {"body": "get", "d": "4/2016"}, {"body": "ohai old issue ended fixing use keys tutorial", "d": "4/2016"}, {"body": "using react reactdom getting issue keys set options later console get select", "d": "4/2016"}, {"body": "taarimalta bug rcs fixed final comes week", "d": "4/2016"}, {"body": "handing community closing please see note", "d": "4/2016"}, {"body": "status", "d": "4/2016"}, {"body": "change invest js styles think end changes styles work mean time nt think make changes without fuller picture play", "d": "4/2016"}, {"body": "anyone stumbling around internet trying find fix volkanunsal right money similar situation focus call nt hitting element nt completely visible componentdidupdate ran suggested delaying focus requestanimationframe settimeout fixed issue although setting callback way gives error resolved dropping focus call function final resultl would look something like", "d": "4/2016"}, {"body": "pretty happy almost full svg support realising namespaced attributes like could nt apply render ok showing browser case want create image attributes necessary code wontn work probably related fact thanks using longer need maintain list svg tags svg tags previously unsupported work fine react", "d": "4/2016"}, {"body": "documentcreateelementns blog post little simplified used tag happen please file separate issue describing problem jsfiddle reproduces thanks", "d": "4/2016"}, {"body": "thank gaearon think happen render browser probably issue related pen shows rendered code generated missing least attrs case could file issue separately", "d": "4/2016"}, {"body": "yea missing progress work add", "d": "4/2016"}, {"body": "still see list supported tags reason chose support", "d": "4/2016"}, {"body": "shilpan tags supported list tells tags supported factory functions following svg elements supported reactdom emphasis mine use jsx need worry work jsx rely factories even use jsx use work fine create factory function", "d": "4/2016"}, {"body": "handing community closing please see note", "d": "4/2016"}, {"body": "think bug longer applicable suppose reopen secretly composite component anymore shallow rendering output single level", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "yamill method running bind onchange form like js onfieldchanged e thissetstate etargetname etargetvalue render work give advice thx", "d": "4/2016"}, {"body": "critical component even javascriptdependent application anything even utility provides eg need javascript use page even essential javascriptonly pages normal ones jpunt jimfb cc benkeen maybe uses rendering static markup client one react running clearly useless since javascript enabled browser hence contents may well exist reason tag even makes sense generate instead returning avoid invariant error react expects server side js var react require react var browser require libisbrowser var reactdom isbrowser reactdom require reactdomserver var noscript reactcreateclass moduleexports noscript want alias react server code resolve empty module since unlikely bundler figure rules place anyway use webpack add following configuration make sure load paths recommend since dependency clearer cleaner empty file project", "d": "4/2016"}, {"body": "react nulled many rootnodeid ideas generating ids nt good solution us since need unique id party components well wrapping party components something want avoid", "d": "4/2016"}, {"body": "could use weakmap store id instance never public api longer needed unique id composite components got rid depending use case perhaps refactor api thirdparty components wrapped wrapper generate id", "d": "4/2016"}, {"body": "spicyj trying make reduxdevtools time travelling feature actually replay inner component states use case able inject state object component id since instances get createddisposed time travel bottom line map consists comoponentid componentstate use id locate current component instance worked us react used internals though", "d": "4/2016"}, {"body": "also relying rootnodeid identifier cache component state componentwillunmount restore components user presses back button componentwillmount important use case us id perfect fit knew taking risk using internals still reliable alternative thought generating kind component xpath traversing hierarchy nt seem performant several components", "d": "4/2016"}, {"body": "ricardosoeiro approach describe fragile really supported looked using something like flux redux instead support exactly use case different explicit way", "d": "4/2016"}, {"body": "gaearon fluxredux support injecting inner component state thats need think ricardosoeiro solved problem travesing tree building id type elements tree code work ill post tomorrow", "d": "4/2016"}, {"body": "omerts meant external state containers reason convert components use external state rather try inject local state", "d": "4/2016"}, {"body": "gaearon mainly bcs party controls", "d": "4/2016"}, {"body": "omerts usually want depend thirdparty components offer controlled api like props definitely case components rely", "d": "4/2016"}, {"body": "gaearon would want convert external components maintain generic problem calls generic approach saying supported box seen use case pop several times deserves least fair discussion", "d": "4/2016"}, {"body": "omerts approach rely internals traverse component tree curious see code", "d": "4/2016"}, {"body": "saying supported box seen use case pop several times deserves least fair discussion agree discussed saying something like supported better rely proven solutions work well even require components controlled rather internals break every release likely break completely work incremental reconciler bundling react flat file", "d": "4/2016"}, {"body": "api obtain opaque identifier suggested would solve use case perfectly", "d": "4/2016"}, {"body": "gaearon many pary components like reacttoolbox inner states visual component state etc using reduxdevtools thanks way time travelling want see visual components inner states change well ricardosoeiro yes relay internals mainly traverse tree parent node creates id using namesdisplaynames constructors tree create quite long id necessarily unique exact component exact hierarchy parents return id works us maybe play get something better kind hashing shorten id javascript function buildkey component acckey component return acckey let currentkey acckey typeof componentcurrentelementtype function currentkey componentcurrentelementtypedisplayname componentcurrentelementtypename else currentkey componentcurrentelementtype return buildkey componentnativeparent currentkey using new reactinstrumenation api get internal instances mountunmount javascript import reactinstrumentation reactlibreactinstrumentation const eventhandlers onmountcomponent internalinstance onunmountcomponent internalinstance reactinstrumentationdebugtooladddevtool eventhandlers also agree unique persistent component id would make things much easier nt hard implement part core react nt mind working pull request nt objection facebook side unique component id", "d": "4/2016"}, {"body": "extremely annoying single onchange handler form using bubbling common pattern specially big forms console full warnings strange basically react throwing warning using something best practice book", "d": "4/2016"}, {"body": "react throwing warning using something best practice book opinion say opposite bad idea relies bubbling outside react hierarchy portable something find ui frameworks something could reimplement entirely opinoin even wish react would prevent possible source pain goes spirit react", "d": "4/2016"}, {"body": "syranide like dom events prop supported native components used listen bubbled change events bubbling appears inside react hierarchy since native introduced got right", "d": "4/2016"}, {"body": "wondering react mask component people recommend", "d": "4/2016"}, {"body": "sure lot still actionable best reraise relevant parts separate issues reference right consistent iterable thispropschildren cover clonewithprops reactcomponent good put addon npm module technically done separating main repo public injection apis rename lib internal react npm module use wzrdin package builds maybe come back priority right add new reactsvg npm package something considering decided delay well", "d": "4/2016"}, {"body": "also see error using ssr", "d": "4/2016"}, {"body": "check stackoverflow explains way address getting updates user dragging", "d": "4/2016"}, {"body": "update make use addon keep using fixed", "d": "4/2016"}, {"body": "nt supported solution general nt support defining custom event types reason nt global configuration makes interoperability difficult develop component requires tapeventplugin wo nt work someone nt load best recommendation need build component similar completely user space without depending react internals also possible fix reacttapeventplugin nt support ca nt guarantee still work future release", "d": "4/2016"}, {"body": "thanks spicyj quick update", "d": "4/2016"}, {"body": "seems recently got fixed react branch tried seems work well wo nt long reaches npm", "d": "4/2016"}, {"body": "rulatir gaearon free restrictions reason ca nt want oldstyle refs owned creator necessity obviously works react figure instance creator specific instances hence new refs api", "d": "4/2016"}, {"title": "feat altrouter support relative links components nt routesconfiguration", "body": "steps reproduce minimal demo problem currently relativelinks working placed component configuration trying add routerlink component sibling component eg list editview following exception thrown link seems created correctly generated href points opening link new tabs everything works fine clicking link causes error expecteddesired behavior relative links work without config component information", "num": "8358", "d": "4/2016"}, {"title": "altrouter support routerlink elements anchors", "body": "steps reproduce minimal demo problem new implementation currently supports tags using directive leads following exception html expecteddesired behavior routerlink also work elements information", "num": "8357", "d": "4/2016"}, {"title": "altrouter routerurlserializer parse query parameter", "body": "important repository issues reserved feature requests bug reports submit support requests see current behavior ts let url new defaultrouterurlserializer parse query parameter gt let tree urlparse one expect urlserialize tree toequal one routerurlserializer parse query params correctly expecteddesired behavior pass test information cc vsavkin", "num": "8356", "d": "4/2016"}, {"title": "create", "body": "zone specs asynctest fakeasynctest included downstream projects use wrappers tests", "num": "8353", "d": "4/2016"}, {"title": "fakeasync nt propagate errors async tasks", "body": "fakeasync zone spec code catch rethrow exceptions happen async task callbacks however nt seem propagate fakeasync wrapper angular need fix reenable test", "num": "8351", "d": "4/2016"}, {"title": "beta traceur issue", "body": "steps reproduce minimal demo problem use getting started sample steps try demo see problem run app exception thrown results failed attempt load traceur", "num": "8349", "d": "4/2016"}, {"title": "debugappviewrethrowwithcontext breaks exception comparison tests", "body": "critical part clobbers type existing exception thrown problem unit tests want check whether specific type exception thrown example ts app dosomething notenoughpizza throw new pizzapanicerror unit test throw right error gt return buildercreateasync notenoughpizzacontroller fixture gt expect gt fixturedetectchanges tothrow new pizzapanicerror cc tbosch juliemr", "num": "8348", "d": "4/2016"}, {"title": "move testcomponentbuilder dynamiccomponentloader", "body": "dynamiccomponentloader deprecated tcb nt use anymore", "num": "8347", "d": "4/2016"}, {"title": "ngfor component ngclass render content", "body": "current behavior component render content uses example first rendering content second one example expecteddesired behavior example ngfor rendering text css class correctly applied first set example", "num": "8344", "d": "4/2016"}, {"title": "error directive annotation found appcomponent multiple classes file", "body": "experiencing issue multiple classes included import todoitem separate file uncomment line comment todoitem class everything work fine comment line use class inside show message directive annotation found appcomponent also tried export classes worked either import component import todoitem todoitem component selector myapp template hello name class todoitem public name string export class appcomponent public name string missing", "num": "8340", "d": "4/2016"}, {"title": "angular error trying use single file import", "body": "steps reproduce minimal demo problem trying use appcore file sole location imports within application receive errors trying import certain times plunker problem look appcharacterscharacterlistcomponentts line amp plunk work uncomment line remove characterservice line work information information stackoverflow edit another example importexport issue time involves use opaquetoken plunker click vehicles vehicles header receive dependency injection error saying undefined variable replace ivehicleservicetoken opaquetoken variable string ivehicleservicetoken following places application run appappcomponentts line appvehiclesvehiclelistcomponentts line appvehiclesvehiclecomponentts line", "num": "8337", "d": "4/2016"}, {"title": "error unsupported number argument pure functions", "body": "snippets templates like upgrading beta actions assignment format throw following error would need refactored method calls plunker change angular version works break intentional nt impression seen mention changes like log nt miss changelog wonder means change unintended sideeffect recent refactoring", "num": "8336", "d": "4/2016"}, {"title": "access path params parent nonterminal route child route", "body": "looking repository component router included angular finally found component porting form angular included repo suppose right place issue although issues think issue apply angular angular ngcomponentrouter configures routing hierarchy using non terminal components routes get path parameters resolved parent nonterminal routes child routes see example code way non terminal route created parent non terminal routes already resolved path params sometimes terminal routes needs params works example call rest api nested identities way would get path location parse route work path params found workaround requiring parent component controller way parent component save resolved path params controller child component get params whole route elegant solution problems works routeronactivate access required parent controller canactivate static method controller component created access required component think needed solution get params whole route hierarchy components solution would use nonterminal components declare routes one component rootrouter lose good mechanisms declaring hierarchical components example javascript modulecomponent main template routeconfig path organization dataset component dataset name dataset modulecomponent dataset template routeconfig path operation component operation name operation modulecomponent operation template operation", "num": "8335", "d": "4/2016"}, {"title": "html issue tutorial", "body": "hello finished tutorial tour hero notice small error lead mistake paragraph chapter routing indexhtml add top section balise base opened never close means user nt close noticed keep going may trouble find mistake solution", "num": "8334", "d": "4/2016"}, {"title": "support abstract components", "body": "steps reproduce minimal demo problem could interesting support abstract components able modularize shared configuration components example set directives decorator could look decorator parent class applies could done like code could take place implementation decorator export function customcomponent annotation return function target function var parenttarget objectgetprototypeof targetprototype constructor var parentannotations reflectgetmetadata annotations parenttarget based question stackoverflow see plunkr proof concept", "num": "8333", "d": "4/2016"}, {"title": "testing ca nt access children directive componentinstance regression", "body": "updating unit tests stopped working directive like one typescript directive selector simpledirective export class simpledirective used template possible access children directive something like undefined think regression spot commit explicitly disallowing previous behavior cc juliemr", "num": "8332", "d": "4/2016"}, {"title": "beta error uncaught promise typeerror componentviewparentremovechild function", "body": "hello updated latest version everything working fine even though keep using beta angular error beta latest one issues could nt even launch mobile application code project edit noticed error use latest version nativescriptangular use combination nativescriptangular everything works fine", "num": "8329", "d": "4/2016"}, {"title": "ngfor let vs ngfor", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem use current hero tutorial use similar try template starting point steps try demo see problem current behavior nhandled promise rejection template parse errors ca nt bind ngfor since nt known native property heroes ngfor let hero heroes expecteddesired behavior information started tutorial yesterday ngfor hero heroes today early morning ish flips ngfor let hero heroes throws errors", "num": "8328", "d": "4/2016"}, {"title": "beta error property exist type typeof observable visual studio aspnet", "body": "upgrade worked well", "num": "8327", "d": "4/2016"}, {"title": "dynamiccomponentloader load component problem", "body": "dynamiccomponentloader load component template variable value setting encountered problem well previous version systemimport path gt child component thisloaderloadasroot comp thismodelid thiselementrefinjector child component test template test dynamic add child component template test variable setting value", "num": "8326", "d": "4/2016"}, {"title": "dart angular deprecation causes templatecompiler stack traces", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem upon upgrading dart angular following situation current behavior pub serve blows expecteddesired behavior implement let renaming information", "num": "8325", "d": "4/2016"}, {"title": "date pipe formatting incorrectly showing wrong date", "body": "date pipe formatting certain dates incorrectly showing wrong date formatted steps reproduce minimal demo problem create date april happens display date using mydate date pipe use plunker sample current behavior april shows formatted date mar expecteddesired behavior formatted date apr", "num": "8319", "d": "4/2016"}, {"title": "dynamiccomponentloaderloadnexttolocation throwing error", "body": "steps try demo see problem current behavior throwing error expecteddesired behavior child component seen parent information", "num": "8318", "d": "4/2016"}, {"title": "regression ngfor changedetectionstrategyonpush updating markforcheck", "body": "may related issue specifically event handlers causing change detector run saw got working adding call changedetectorref seeing change detection nt working even call component keeps count increments interval note marks change detector changing count javascript var ngcore component selector template count count class constructor ngcorechangedetectorref function cdr thiscount setinterval function thiscount cdrmarkforcheck bind another component uses component ngfor changedetectionstrategyonpush another component uses first component twice ngfor root app uses three components component update component stays update expected plnkr working thing", "num": "8315", "d": "4/2016"}, {"title": "add ngmodel support upgradeadapter", "body": "number reusable components would like gradually migrate angular components however use attribute directive nt seem support since ngmodel fundamental way providing output values angular would possible add support allow interaction", "num": "8314", "d": "4/2016"}, {"title": "beta angular nt work upgrade", "body": "hi guys bugs upgrade developer tool browser google chrome says get found scheduletask anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function error error xhr error found loading anonymous function get found scheduletask anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function assertion failed loading loaded anonymous function anonymous function config name version description dashboard main indexjs scripts start concurrently npm run tsc w npm run lite tsc tsc tsc w tsc w lite liteserver typings typings postinstall typings install test karma start author license isc devdependencies concurrently firebase liteserver typescript typings dependencies reflectmetadata rxjs systemjs zonejs file symbolobservablejs thank", "num": "8312", "d": "4/2016"}, {"title": "access specific validators given input form", "body": "want display specific messages specific types failed validation using validation markup html example html newcoursename ngform unfortunately know see wholly valid would like display specific messages telling user specific validator one failed thanks advance", "num": "8311", "d": "4/2016"}, {"title": "better error handling offline compilation", "body": "x symbol used decorator exported empty project fails come", "num": "8310", "d": "4/2016"}, {"title": "bug missing quotes packagejson break babelbrowserify build", "body": "steps reproduce minimal demo problem running ubuntu packagejson quotes around dynamic content statements current behavior receive error adding quotes around dynamic content statements json fixes build runs fine afterwards browserify babelify srcappappjs buildpublicappjs error syntaxerror unexpected token lt parsing json file fsreqwrapreadfileafterclose oncomplete expecteddesired behavior npm run build worked fine earlier versions nothing changed npm script command information manually putting quotes around json statements fixes build anyone else problem would fixing break things feeling bit weird since packagejson file", "num": "8309", "d": "4/2016"}, {"title": "routerlink function called permanently", "body": "got link looks like way parameters route determined dynamically however function determineparameters called time good performance reason approach use function intended used register click event dynamic route change handler thanks clarifying", "num": "8308", "d": "4/2016"}, {"title": "attrclass override ngclass instead merge", "body": "beta override demo class merged", "num": "8307", "d": "4/2016"}, {"title": "custom pipes found using testcomponentbuilderoverridetemplate", "body": "testing component uses custom pipe component test pipe makes use works fine using overridden template using overridetemplate even exact template markup following error thrown demo using since could get testing working plunk steps try demo see problem let demo run look output jasmine current behavior error output expecteddesired behavior errors test pass information using builtin pipe errors thrown seems problem userdefined pipes", "num": "8306", "d": "4/2016"}, {"title": "bug dart version application works dartium breaks chrome definitely erroneous confusing error messages", "body": "dart application currently working chrome works without errors dartium though application open sourced extracted minimal portion causes errors chrome project available consists three components works dartium successfully navigates home components chrome breaks errors exception symbol appcomponent implements interfaces declare symbol aftercontentchecked symbol aftercontentinit symbol afterviewchecked symbol afterviewinit symbol docheck symbol onchanges symbol ondestroy see info exception symbol appcomponent implements interfaces declare symbol aftercontentchecked symbol aftercontentinit symbol afterviewchecked symbol afterviewinit symbol docheck symbol onchanges symbol ondestroy see info stacktrace symbol appcomponent implements interfaces declare symbol aftercontentchecked symbol aftercontentinit symbol afterviewchecked symbol afterviewinit symbol docheck symbol onchanges symbol ondestroy see info dartwrapexception dartassertdeclareslifecyclehooks reflectioncapabilitiesdartreflectioncapabilitiesinterfaces reflectordartreflectorinterfaces runtimemetadataresolvergetdirectivemetadataclosuredartruntimemetadataresolvergetdirectivemetadataclosurecall whereiteratordartwhereiteratorf whereiteratordartwhereiteratormovenext dartliststaticlistlist fromhcomputesignatureefunc whereiterable definitely implement methods though windows use dart vm version tue apr though tried several combinations dart versions without change behavior", "num": "8305", "d": "4/2016"}, {"title": "blocker upgrade upgrade adapter call controller lifecycle methods", "body": "steps reproduce example directive per upgrade guidelines part component using upgraded component inside button clicked change basevalue call onchanges lifecycle method calculates derivedvalue derivedvalue never gets updated part confirms purely mode directive works fine clicking button increment basevalue onchanges method derivedvalue also gets updated current behavior onchanges getting called directive change initiated component value bound updated directive get know something changed way run change handlers expecteddesired behavior onchanges get called controller change initiated component code update derivedvalues based change onchanges lifecycle methods get called information checked code inside upgradedevjs calling onchanges sure already known really important components upgradable", "num": "8304", "d": "4/2016"}, {"title": "test regression error resolve parameters elementref", "body": "testing component injects directive found parent component since testing component isolation need add directive directive injecting injects nt add get error saying provider could add directive tests worked great get following error example components directive javascript var directive ngcore directive selector directive class constructor ngcoreelementref function directive elementref callfunction function consolelog function called var parentcomponent ngcore component selector parentcomponent directives directive template class constructor function parentcomponent var componenttotest ngcore component selector componenttotest template hello world directives ngcommoncommondirectives class constructor directive function componenttotest directive directivecallfunction test javascript ngtestingdescribe child component function ngtestingbeforeeachproviders function return ngcoreelementref directive ngplatformtestingbrowsertestbrowserplatformproviders ngplatformtestingbrowsertestbrowserapplicationproviders ngtestingit run able inject directive provided beforeeachproviders ngtestinginjectasync ngtestingtestcomponentbuilder function tcb return tcb overridetemplate componenttotest hello world createasync componenttotest function fixture expect true tobe true fixturedestroy plnkr plnkr", "num": "8303", "d": "4/2016"}, {"title": "test regression using typeerror asynctestzonespec constructor", "body": "writing async jasmine tests using get works deprecated also fails plnkr", "num": "8302", "d": "4/2016"}, {"title": "umd bundle missing ngplatformcommon export", "body": "looking line bundle file pulled using npm see platform export defined contains browser commondom contain common submodule unable run app ca nt access things moved", "num": "8299", "d": "4/2016"}, {"title": "unsent http requests return invalid status code", "body": "current behavior currently request fails send returned response code error handler might happen user goes offline expecteddesired behavior would expect status code plunker example", "num": "8297", "d": "4/2016"}, {"title": "angular refresh issues onpush", "body": "seeing components set change detection onpush updating ui upon mouse clicks anyone else seeing issue fyi using redux updates come store using immutablejs models great regards sean", "num": "8295", "d": "4/2016"}, {"title": "router useasdefault option nt work", "body": "two routes configured follows routeconfig path component homecomponent home path product component productdetailcomponent productdetail useasdefault true tried set productdetail route default still shows home route plank", "num": "8294", "d": "4/2016"}, {"title": "return rejected promise routeronactivate cancel navigation like canactivate", "body": "hi loads data via returns fulfilled promise want navigation happen loaded data within component controller returns rejected promise want cancel navigation current behavior currently routeronactivate delay navigation promise settles canceled like canactivate use canactivate hook would pass loaded data controller ngroute resolve could used inject loaded data controller similiar way ngcomponentrouter canactivate expecteddesired behavior would like cancel navigation within routeronactivate desired behaviour current limitation bug handled alternatively would like pass data canactivate hook controller instance steps reproduce minimal demo problem small demo tries demonstrate problem think petebacondarwin btford brandonroberts ccing davidreher", "num": "8293", "d": "4/2016"}, {"title": "query problematic behavior templateref", "body": "begin behavior happens previous releases working expected commit seems related query also finds template elements descendant elements see plunker please expect logged console logged template child also found replacing template element random component eg otherchild produces expected result printed container one otherchild something different template elements causing confusion", "num": "8292", "d": "4/2016"}, {"title": "static reflector unwrap directives array", "body": "fails static reflect symbols inside form directives unwrapped simplify method workaround use spread operator", "num": "8291", "d": "4/2016"}, {"title": "new pipe changes longer array wreak havoc", "body": "know beta yes beta alpha change like stage breaks ton code sample code changes pipe example would appreciated reverting changes would even appreciated tx sean", "num": "8289", "d": "4/2016"}, {"title": "inject self reflectiveinjector", "body": "possible get inject use instantiate dependencies even providers dependencies would injected dependencies needed using registered providers available working demo beta example instantiated already provided already provided component used case beta changed ca nt inject expect able get used instantiate context use created instances create providers used approach dynamically load sub apps components selfcontained dependencies also use appwide providers", "num": "8288", "d": "4/2016"}, {"title": "read property length undefined updating", "body": "hello got following error updating exception error uncaught promise exception error original exception typeerror read property length undefined original stacktrace typeerror read property length undefined flattenstyles new domrenderer domrootrendererdomrootrendererrendercomponent debugdomrootrendererrendercomponent new mddialog reflectiveinjectorinstantiate reflectiveinjectorinstantiateprovider reflectiveinjectornew reflectiveinjectordynamicstrategygetobjbykeyid error context object object occurs use directive directive separate component import component oninit elementref import http response httpproviders import routerlink import materialdirectives materialproviders mddialog mddialogconfig mddialogbasic mddialogref import appsettings commonappsettings component selector timebookings templateurl appareashrtimebookingshtml directives routerlink materialdirectives inputs employee export class timebookings implements oninit data object use webpack bundle files anyone problem thank advance jens", "num": "8286", "d": "4/2016"}, {"title": "locationstrategy provided routerproviders angular ignore locationstrategy definition", "body": "steps reproduce minimal demo problem create angular app routing bootstrap file provide following current behavior seems like angular ignores locationstrategy provide statement uses default one move line one everything works fine expecteddesired behavior believe work regardless custom providers order", "num": "8285", "d": "4/2016"}, {"title": "codemod angular", "body": "tool called jscodeshift asttoast transforms javascript wonder possible create codemod migrate angular code angular think huge amount projects using angular right codemod would provide easy path angular", "num": "8284", "d": "4/2016"}, {"title": "decimalpipe incorrect behaviour cases", "body": "currently using got incorrect behaviour case value negative smaller use decimalpipe format syntax simple rounding decimals got correct plunker reproduce bug agree expected behaviour working beta", "num": "8283", "d": "4/2016"}, {"title": "using exclamation ngif using null propagation operator", "body": "use exclamation work using null propagation operator worked see plunker demo change see difference short version could find anything changelog designed", "num": "8281", "d": "4/2016"}, {"title": "error make xhrs within fake async test", "body": "steps reproduce minimal demo problem steps try demo see problem typescript export function setupcomponentfakeasync type continuation function return fakeasync inject testcomponentbuilder tcb testcomponentbuilder gt let fixture componentfixture null tcbcreateasync type f componentfixture gt fixture f tick fixturedetectchanges continuation fixture shows empty origin station text field default component state setupcomponentfakeasync searchcomponent fixture componentfixture gt let input fixturenativeelementqueryselector fromstation current behavior exception error make xhrs within fake async test line onscheduletask scheduletask schedulemacrotask send expecteddesired behavior test working beta information", "num": "8280", "d": "4/2016"}, {"title": "upgradeadapter method something like", "body": "struggling different kind errors trying make hybrid angularjs amp angular app using could nt understand simple examples would work app well simply app splitted multiple files file creating new instance one singleton whole app upgradeddowngraded components stored inside instance documentation examples boilerplates show one single instance per app maybe method documentations examples use making constructor private could interesting avoid errors break current implementations prevent us multiple apps page see example using different instances causes error", "num": "8279", "d": "4/2016"}, {"title": "ngclass attrclass coexist", "body": "noticed overriding behavior different one version could exist nt notice information regarding change reporting issue plunker shows reported current behavior thanks", "num": "8278", "d": "4/2016"}, {"title": "access host component directive", "body": "according change log appviewmanager renamed viewutils mere private utility service however using obtain component reference elementref would need achieve following component selector say selector mycomponent directive placed upon components mydirective html looks following mydirective need reference mycomponent component instance another better way happy adapt code", "num": "8277", "d": "4/2016"}, {"title": "cant used html", "body": "struggling issues using paperdatatable written polymer information issue questetion one suggested solution surround table polymer binding helper element problem angular removes template tags dom dont use angular directive inside component html nt find way coop maybe way telling angular process template tags still process children need use data biniding inside template tag order pass data table element", "num": "8276", "d": "4/2016"}, {"title": "breaking change attrstyleclass override ngclass", "body": "breaking change attrstyleclass ngclass element steps reproduce minimal demo problem current behavior fieldset get style class expecteddesired behavior uifieldset default uifieldsettoggleable toggleable also styleclass property appended overall evaluation attrstyleclass overrides everything", "num": "8275", "d": "4/2016"}, {"title": "keyupenter nt trigger", "body": "current behavior bind element nt trigger information tried create plnkr issues one nt run", "num": "8273", "d": "4/2016"}, {"title": "inherit input annotations work extending component input annoation", "body": "try example code see property placeholder numberfieldcomponent inherited comment line appappcomponentts see also placeholder inherited think inherit always properties extended class", "num": "8272", "d": "4/2016"}, {"title": "appbasehref included", "body": "fresh install getting following error exported member appbasehref import statement import routerproviders appbasehref running node npm osx beta used exact import separate project days ago wondering latest update may changed happy provide additional details necessary thanks", "num": "8268", "d": "4/2016"}, {"title": "get parent injector amp routeparams", "body": "code used work interface changed removing parent property access parent route params thanks", "num": "8267", "d": "4/2016"}, {"title": "hook ngzone testcomponentbuilder", "body": "two use cases hooking ngzone testcomponentbuilder component initially loaded component changes response triggered event handler nt call fixturedetectchanges test code would happen automatically way change detection triggered component running part application would still call fixturedetectchanges component fields changed directly without triggering event handler currently way test component schedules micromacro task resolve promisessettimeout part change detection using fakeasync controlling event queue async test way know component full stabilized ngzone hooked ask zone component stabilized similar way protractor waits angular stabilize", "num": "8265", "d": "4/2016"}, {"title": "event handlers inside template nodes use template variables beta", "body": "steps reproduce minimal demo problem demo steps try demo see problem click buttons current behavior text next first button displays undefined expecteddesired behavior text next second button displays thing information narrowed problem code generated event handlers js click handler first button inside template node function event var self selfmarkpathtorootascheckonce selfdebug var selfcontextonclickfirst selfcontextthing false return true amp amp click handler second button outside template node function event var self selfmarkpathtorootascheckonce selfdebug var selfcontextonclicksecond false return true amp amp instance exist", "num": "8261", "d": "4/2016"}, {"title": "ngcontent plain html text nt evaluate projection", "body": "would great could project content component plain html text rather evaluating main use case course components render code examples right great deal black magic required implement components accept code content would like output raw unevaluated html", "num": "8260", "d": "4/2016"}, {"title": "dart dev guide pipes example throws constructor asyncpipe", "body": "angulario developer guide pipes example ts runs fine minor edits dart version pipes example subset ts functionality ran fine links dart pipes example source live demo making minor updates migrate dart example sources longer runs due exception error asset pipeexampleslibheroasyncmessagecomponentdart class heroasyncmessagecomponent inline template null null original exception constructor asyncpipe matching arguments declared class asyncpipe nosuchmethoderror incorrect number arguments passed method named asyncpipe receiver type class asyncpipe tried calling asyncpipe found asyncpipe changedetectorref original stacktrace nosuchmethoderrorthrownew dart package appviewcreate package package appviewcreate package trace line refers generated following component code dart import dart async import package component selector heromessage template message delayedmessage async class heroasyncmessagecomponent future delayedmessage new futuredelayed new duration milliseconds return hero indeed constructor expects ts dart see steps reproduce minimal demo problem live demo site currently runs could updated run faulty otherwise reproduce pub serve dart pipes example dartium", "num": "8258", "d": "4/2016"}, {"title": "causes js errors used conjunction new relic js snippet", "body": "running parallel along new relic monitoring js snippet namespace issue xhr issue causes xhr null running xhronload function source causes js errors application load route changes api calls", "num": "8255", "d": "4/2016"}, {"title": "regression ngcoreapplicationref ngcorecompiler longer exist", "body": "ngcoreapplicationref ngcorecompiler longer exist therefore ca nt injected code javascript var function component compiler avm thishascompiler compiler thishasavm avm ngcore component selector template ngcorecompiler hascompiler ngcoreappviewmanager hasavm class constructor ngcorecompiler ngcoreappviewmanager var appcomponent ngcore component selector testapp template directives class constructor function windowapp documentaddeventlistener domcontentloaded function ngplatformbrowserbootstrap appcomponent output successfully inject ngcore plnkr plnkr mention breaking changes changelog", "num": "8254", "d": "4/2016"}, {"title": "controlgroupvalue updated control added via addcontrol", "body": "added via current behavior value added accessible via however value accessible via expected behavior value also accessible via demo issue", "num": "8252", "d": "4/2016"}, {"title": "regressiontesting scheduler tick working code multiple asyncevents", "body": "important repository issues reserved feature requests bug reports submit support requests see pretty hard describe basically testing typical typeaheadexample everybody demonstrates controllercode test ts iit execute typeaheadsearch fakeasync gt fixturedetectchanges let tasklist fixturecomponentinstance element fixturenativeelement worked perfectly fine fails error message debugging think problematic line one every scheduled task membervariable increased passed delay example executed twice first time delay second time delay meantime also call endtime sums noch reached test changing mentioned line lets test work properly sure maybe leads problems current behavior multiple async functions valuechanges debouncetime break test buggy scheduler behaviour expecteddesired behavior multiple async functions break scheduler information", "num": "8251", "d": "4/2016"}, {"title": "microsoft edge renders frame around tag used load svg cases", "body": "hello microsoft edge renders frame around object tag used load svg set data attribute object tag using binding please see issue plunker object tag frame", "num": "8250", "d": "4/2016"}, {"title": "router url accessed directly parameter contains dot value", "body": "description soon try access url containing symbol page displayed steps reproduce minimal demo problem create router accepting parameter eg try accessing url browser current behavior error returned page displayed expecteddesired behavior corresponding component properly displayed information access url programmatically eg using works fine proper component shown soon remove url eg works fine well looks like problem cause symbol", "num": "8249", "d": "4/2016"}, {"title": "async inject error timeout async callback invoked within timeout specified jasminedefaulttimeoutinterval", "body": "steps reproduce minimal demo problem goto look console dev tools notice call two consolelog messages yet tests still fail never seem finish test leads timeout error thrown jasmine current behavior seem call done within async function whenever actions taking place within provided example yet work simple promise example expecteddesired behavior complete function like within whenever returned promise called within", "num": "8248", "d": "4/2016"}, {"title": "ts dart converted identical call breaking ngswitch maybe features", "body": "current behavior ngswitchts contains following code converted ngswitchdart meanings two lines code different ts js means type equal dart identical checks two references object ngswitch nt work intended dart seems issue", "num": "8246", "d": "4/2016"}, {"title": "rcx injecting missing import throws read property query null", "body": "hard explain title steps reproduce minimal demo problem see note correctly imported renderer forgot add elementref renderer undefined nt steps try demo see problem run plnkr see console current behavior inject something forgot import error thrown classes injected constructor undefined even correctly imported expecteddesired behavior work lt throwing error like see plnkr information", "num": "8245", "d": "4/2016"}, {"title": "regression classname property binding complex expressions", "body": "steps reproduce minimal demo problem current behavior class added evaluating following expression expecteddesired behavior see red rectangle border classes information regression used work without problems", "num": "8244", "d": "4/2016"}, {"title": "regression ngfor changedetectionstrategyonpush event handler working", "body": "steps reproduce minimal demo problem click page number observe highlighted page nt change expecteddesired behavior click page number change active page information used work observe clicking prev next changes active page difference page links prev next links page links generated using ngfor problem nt show remove switching dev prod mode nt make difference", "num": "8242", "d": "4/2016"}, {"title": "changelog missing location appbasehref breaking change", "body": "well documented breaking change part changelog", "num": "8240", "d": "4/2016"}, {"title": "locationcreatecomponent function defined using custom routeroutlet", "body": "updating beta come across issue custom router created validate user permission access route import directive elementref dynamiccomponentloader attribute import router routeroutlet componentinstruction import location import datastoreservice corecore directive selector routeroutlet export class loggedinrouteroutlet extends routeroutlet private publicroutes array code nt give exception however receive error developer tools route nt change exception error uncaught promise typeerror locationcreatecomponent function stacktrace error uncaught promise typeerror locationcreatecomponent function l einvoke objectngzoneimplinnerinnerforkoninvoke einvoke erun einvoketask working assume something changed looking changelog nt see obvious reason work", "num": "8238", "d": "4/2016"}, {"title": "uncaught token must defined", "body": "hello updating angular beta started getting error anyone idea cause", "num": "8237", "d": "4/2016"}, {"title": "glitch panning map leaflet", "body": "working leaflet based project ionic commit moves angular beta beta started experiencing glitches panning map would liked provide demo app ca nt make plunkr work older beta versions", "num": "8236", "d": "4/2016"}, {"title": "regression issue safenavigation operator", "body": "steps reproduce minimal demo problem priority conflict operators current behavior gt expecteddesired behavior gt information working", "num": "8235", "d": "4/2016"}, {"title": "nt work upgrade", "body": "hi guys upgraded mods app stops work developer tool browser says exception error exception error browserdomadapterprototypelogerror browserdomadapterprototypeloggroup exceptionhandlerprototypecall applicationrefprototyperun lt ngzoneprototyperun applicationrefprototyperun applicationrefprototypebootstrap zone original exception typeerror styles undefined original stacktrace flattenstyles domrenderer domrootrendererprototyperendercomponent debugdomrootrendererprototyperendercomponent mddialog reflectioncapabilitiesprototypefactory lt reflectiveinjectorprototypeinstantiate reflectiveinjectorprototypeinstantiateprovider reflectiveinjectorprototypenew reflectiveinjectordynamicstrategyprototypegetobjbykeyid reflectiveinjectorprototypegetbykeydefault reflectiveinjectorprototypegetbykey reflectiveinjectorprototypeget appviewprototypecreate componentfactoryprototypecreate applicationrefprototypebootstrap lt applicationrefprototyperun lt ngzoneimplthisinner lt oninvoke ngzoneimplprototyperuninner ngzoneprototyperun applicationrefprototyperun applicationrefprototypebootstrap ngzoneimplthisinner lt oninvoke scheduleresolveorreject lt ngzoneimplthisinner lt oninvoketask drainmicrotaskqueue zonetaskthisinvoke error context object view object nodeindex tplrow tplcol", "num": "8233", "d": "4/2016"}, {"title": "typeerror asynctestzonespec constructor", "body": "run test typeerror asynctestzonespec constructor runinasynctestzone objecteval", "num": "8232", "d": "4/2016"}, {"title": "resolve routeronactivate promise unblock navigation user go away routerlink", "body": "hey guys route waits ajax request completed promise returned routeronactivate hook blocks route navigation problem user go away routerlink another route app respond user interaction routing blocking app waiting blocked route resolved navigate routerlink steps reproduce minimal demo problem", "num": "8231", "d": "4/2016"}, {"title": "beta breaking change", "body": "beta suddenly get error module exported member locationstrategy error module exported member hashlocationstrategy error module exported member location mention changelog possible change naming path functioning using locationstrategy haslocationstrategy location", "num": "8229", "d": "4/2016"}, {"title": "metadatajson contains name current module", "body": "agreed today metadata produce single project contain relative paths need reference symbols originated different node package smell change package names string appear anymore however metadata ought remain unchanged dts files affected example two problems toplevel definition duplicates information available file path differs files declare module name proposal remove module schema references angular code relative absolute names starting proposal simply use pathrelative function nodejs relativize path module containing file whole metadata gathering cc tbosch chuckjaz", "num": "8225", "d": "4/2016"}, {"title": "metadata collection nt include provider", "body": "missing provider ngcontrol cc chuckjaz", "num": "8223", "d": "4/2016"}, {"title": "testability able get info pending tasks", "body": "waiting stability times useful able get information pending tasks protractor angular decorator timeout http services testability may able export info pending tasks could look like", "num": "8219", "d": "4/2016"}, {"title": "ngclass method working", "body": "steps reproduce minimal demo problem steps try demo see problem see right away current behavior using method along ngclass debugging shows classes get applied correctly unapplied user see expecteddesired behavior returning object ngclass via method passing object directly template", "num": "8218", "d": "4/2016"}, {"title": "twoway databinding work firefox", "body": "simple twoway databinding live demo using plnkr angular beta partname levelname productjson export class app product partcode aa levelcode parts code aa name aa code bb name bb levels code name level code name level select new option show changes works well chrome safari opera however use firefox developer edition firefox nightly wo nt change refer", "num": "8215", "d": "4/2016"}, {"title": "navigation issue safari", "body": "steps reproduce minimal demo problem used demo official page herodetailcomponent nt fully reload previous view steps reproduce minimal demo problem actions dashboard hero back heroes hero details back current behavior top heroes heroes header shown expecteddesired behavior list heroes rendered information reproducible safari chrome looks like platformdependent issue also tried location back nt work", "num": "8214", "d": "4/2016"}, {"title": "styleurls ca nt handle css file block comments include back tick characters", "body": "whenever css files include block comments back tick character compiler thrown generated component code ends invalid problematic comment css content referenced file embedded compiled component js file css split wherever back tick character appeared original file example component annotation looked like compiled component ended multiple items array note use twice skip irrelevant sections css brevity purposes caused app fail start error instead expected behavior comments stripped content embedded component back ticks included see array ended three items instead one created plunker reason ca nt reproed anyways run local environment converted see issue plunker component expanded nt get issue reproed beta env looks like", "num": "8213", "d": "4/2016"}, {"title": "issues communityhelp hotlist", "body": "hi mhevery chance tag issues hotlist communityhelp last tagged issue january alex ngcontrib", "num": "8212", "d": "4/2016"}, {"title": "error single routerlink breaks entire routing", "body": "hello baseexception child route breaking route configurations application steps reproduce minimal demo problem demo plunker steps clearly explained component section homecomponentts current behavior instance misspelling bar ba routerlink foo ba generates base exceptions handled custom handler errors breaking route configurations catching single route failure blocking entire application navigation independent routes solution reload entire app expecteddesired behavior failure single route supposed block respective route independent routes registered routeconfig", "num": "8211", "d": "4/2016"}, {"title": "remove current animation instruction early access animate", "body": "hi reading public document animation angular ca nt wait land seems way get feeling play alpha animate iv seen progress matsko fork look great split branch master way behind top animate implementation known obsolete spent around hours playing writing blog post nothing hint gonner way integrate alpha features experimental build people play features write blog posts provide feedback clear criticism offer thank", "num": "8210", "d": "4/2016"}, {"title": "angular doa", "body": "angular seems pretty much dead arrival development years beta months still thirdparty support virtually nonexistent angular ui angular material etc would allow build kind reasonable application sure long expect community look hold breath kind company investing angular frontend stack supposed continue consider dropping instead incrementally approach features branch without breaking backwardcompatiblity", "num": "8208", "d": "4/2016"}, {"title": "tour heroes tutorial back link refresh dashboard heroes safari", "body": "hi following tour heroes tutorial noticed back link return hero detail component dashboard list heroes work properly safari environment safari mac os x go click one hero dashboard gt details appears click back button button gt dashboard empty tested firefox works ok step dashboard correctly populated thanks brieuc", "num": "8207", "d": "4/2016"}, {"title": "import coredirectives mark coredirectives deprecated", "body": "apidocs indicate coredirectives seem identical commondirectives nt tell future proof export one markeddocumented deprecated make way nt look advisable", "num": "8206", "d": "4/2016"}, {"title": "template codegen noimplicitany", "body": "template compiler ts emit includes private variables type assigned users enable checks program", "num": "8204", "d": "4/2016"}, {"title": "input typedate ngmodel bind date js object", "body": "hi plunker current behavior input nt show date beginning changing year input value mydate variable get refresh expecteddesired behavior first would expect input show correct date mydate variable get refresh change input question way worked angular nt", "num": "8203", "d": "4/2016"}, {"title": "webworkers xhr requests sometimes resolve promise", "body": "multiple get requests load concurrently web worker complete close resolve promise see current behavior result sample loading expecteddesired behavior expected result sample information due concurrency nature problem sometimes sample yields expected result open debugger workerdevjs put breakpoint line xhr promise resolve usually hit less times add breakpoint line xhr request breakpoints hit times expected also see", "num": "8202", "d": "4/2016"}, {"title": "routeconfig issue commenting within export class line", "body": "lets say appcomponentts routeconfig path businessdemographics name locationform component locationformcomponent useasdefault true lets say locationformcomponent component decorator following code export class locationformcomponent implements oninit ngoninit etc get following log issue however works fine without defining routeconfig log file fix take comment implements oninit work routeconfig sorry known issue missing something got bit hoping ever came anyone else might help also using app", "num": "8200", "d": "4/2016"}, {"title": "mockbackend different behavior real backends", "body": "steps reproduce minimal demo problem observable returned mockbackend response call map transform response test case currently fails due map function never called would also argue design decisions made mockbackend invalid example able subscribe response response already sent match xhrbackend behavior would mean could easily create mocks work comes time real fails mocks emulate real behavior closely possible", "num": "8194", "d": "4/2016"}, {"title": "nicer syntax data binding", "body": "current behavior interpolation nice industry standard data binding nice similar would set object property js event handlers nice given functions use paranthesis think syntax expressed nicer specially nt really sum conventions function property desired behavior data binding pretty much like one data binding think easier remember information know probably late change syntax respect would virtually impossible change angular released rushed write", "num": "8192", "d": "4/2016"}, {"title": "iframe call parent trigger component update first time", "body": "demo source using", "num": "8190", "d": "4/2016"}, {"title": "dart beta directivemetadatalinker issue", "body": "issue appeared suddenly everything working fine currently unable get back running changes made unrelated classes happens use strong mode shows warnings errors itemservice following class library taurusmainapplicationinfrastructureitemservice import dart async import package import package taurussharedsrcdomainmodulesmoduleentitydart injectable class itemservice stream get activerouterlink gt activerouterlink ctrlstream sink get activerouterlink sink gt activerouterlink ctrlsink stream get itemid gt itemid ctrlstream sink get itemid sink gt itemid ctrlsink stream get entity gt entity ctrlstream sink get entity sink gt entity ctrlsink stream get mutation gt mutation ctrlstream final streamcontroller activerouterlink ctrl new streamcontrollerbroadcast final streamcontroller itemid ctrl new streamcontrollerbroadcast final streamcontroller entity ctrl new streamcontrollerbroadcast final streamcontroller mutation ctrl new streamcontrollerbroadcast static itemservice instance factory itemservice instance null return instance itemserviceinternal void notifymutation gt mutation ctrladd true provide itemservice class mentioned error library taurusmaincomponentsclausedelegateclauseitemmodule import package import package import package dormdormdart import package import package taurussharedtaurusshareddart import package taurusmaintaurusmaindart component selector clauseitemmodule template directives const modulecontainer state providers const loginservice itemservice clauseitemservice routeconfig const const route path setup name setup component clauseitemcontentmodule useasdefault true const route path checklist name checklist component clauseitemchecklistmodule class clauseitemmodule extends itemmodule implements onactivate ondestroy final moduletitlehandler titlehandler entity entity final clause clause entity clause final modulelanguagehandler languagehandler entity entity final clause clause entity clause final list menuitems gt name setup routelink setup commitroutelink setup name checklist routelink checklist commitroutelink checklist clauseitemmodule inject itemservice itemservice itemservice inject routeparams routeparams routeparams inject clauseitemservice clauseitemservice clauseservice inject changedetectorref changedetectorref changedetectorref inject loginservice loginservice loginservice inject router router router super itemservice routeparams clauseservice changedetectorref loginservice router", "num": "8189", "d": "4/2016"}, {"title": "bug number pipe working chrome older redefine property length", "body": "using number pipe like get following error chrome older intl polyfill place", "num": "8188", "d": "4/2016"}, {"title": "model driven architectures angularjs aspnet", "body": "concept like develop independently nuget package microsoft visual studio generates viewmodel specification angularjs propagating changes aspnet models angularjs scope models data validation angularjs aspnet core issues proverbial pain repeat models data validation aspnet core angularjs prone error request put touch someone interested concept please sponsor", "num": "8187", "d": "4/2016"}, {"title": "would rewrite resource", "body": "", "num": "8185", "d": "4/2016"}, {"title": "npm install error cb never called", "body": "helllo problem installation beta npm install npm info worked ends ok npm info using npm npm info using node npm info attempt registry request try npm http request get npm http npm err cb never called problem try install previous versions well node version npm version", "num": "8184", "d": "4/2016"}, {"title": "directly accessing route http get parameters preserved parameters", "body": "given following route angular remove get query string parameters proceed exactly question angular", "num": "8182", "d": "4/2016"}, {"title": "jquery xeditable working", "body": "important using jquery xeditable given xeditable popup opening anyone help code snippet given component class component code export class clientdetailscomponent ngoninit fneditabledefaultsmode popup fneditabledefaultsemptytext comments editable rows inputclass wordwrap newcomments onblur cancel public showpcommentbox comments editable show html file lt class comments verticaltop wordwrap id comments datatype textarea datapk dataurl click showpcommentbox datatitle enter comments gt lt class textprimary textleft title click enter comments gt lt gt", "num": "8181", "d": "4/2016"}, {"title": "changing const value angular give error", "body": "code simple jsfiddle browser console show following error great uncaught typeerror assignment constant variable however codes angular give error end equals see plunker", "num": "8180", "d": "4/2016"}, {"title": "docs private apis showing part public api docs", "body": "review clean", "num": "8176", "d": "4/2016"}, {"title": "feat forms ngcontrol add attributes element formbuilder validation", "body": "steps reproduce minimal demo problem steps try demo see problem put input longer characters first input try put input longer characters second input current behavior specifies number validation attributes form elements browsers able interpret various effects useful things like restricting input length maxlength dom queries eg find required input elements currently applies validation number attributes applied form template however forms built using formbuilder validation defined controlmeta object attributes form elements ngcontrol apply validations attributes host element formbuilder used either attributes get defined therefore browser validation behavior effect validation constraints must duplicated form templates controlmeta expecteddesired behavior think would useful ngcontrol directive manage validation attributes host form element based validators applied control object information", "num": "8175", "d": "4/2016"}, {"title": "uncaught promise provider", "body": "using angular min got issue loading app unminify version", "num": "8171", "d": "4/2016"}, {"title": "unexpected token u json position zone angular", "body": "hello updating angular beta beta getting error idea problem pic whole error thanks", "num": "8169", "d": "4/2016"}, {"title": "feature ngfor ngforeach", "body": "hello recently making small demo friend show rocks wanted make short list nothing hard thought could loop super fast proposal current behavior ngfor iterates arrays expecteddesired behavior ngforeach iterate arrays keep syntax similar js matter change name ngfor ngforeach ngforeach ngfor could something like done please forgive tell cheers", "num": "8168", "d": "4/2016"}, {"title": "missing flatmap rxjs rxjs", "body": "tried flatmap function shows error flatmap function error srcappservicesloginrefreshtokenservicests error property flatmap exist type subscription checked rxjsrx file data flatmap hence per knowledge rxjs flatmap operator missing use strict tslint disable nounusedvariable subject imported observable bypass circular dependency issue since subject extends observable observable references subject definition var require subject exportssubject tslint enable nounusedvariable var require observable exportsobservable statics tslint disable nousebeforedeclare require addobservablecombinelatest require addobservableconcat require addobservablemerge require addobservablerace require addobservablebindcallback require addobservablebindnodecallback require addobservabledefer require addobservableempty require addobservableforkjoin require addobservablefrom require addobservablefromarray require addobservablefromevent require addobservablefromeventpattern require addobservablefrompromise require addobservableinterval require addobservablenever require addobservablerange require addobservablethrow require addobservabletimer require addobservablezip operators require addoperatorbuffer require addoperatorbuffercount require addoperatorbuffertime require addoperatorbuffertoggle require addoperatorbufferwhen require addoperatorcache require addoperatorcatch require addoperatorcombineall require addoperatorcombinelatest require addoperatorconcat require addoperatorconcatall require addoperatorconcatmap require addoperatorconcatmapto require addoperatorcount require addoperatordematerialize require addoperatordebounce require addoperatordebouncetime require addoperatordefaultifempty require addoperatordelay require addoperatordelaywhen require addoperatordistinctuntilchanged require addoperatordo require addoperatorexpand require addoperatorfilter require addoperatorfinally require addoperatorfirst require addoperatorgroupby require addoperatorignoreelements require addoperatorinspect require addoperatorinspecttime require addoperatorevery require addoperatorlast require addoperatorlet require addoperatormap require addoperatormapto require addoperatormaterialize require addoperatormerge require addoperatormergeall require addoperatormergemap require addoperatormergemapto require addoperatormulticast require addoperatorobserveon require addoperatorpartition require addoperatorpluck require addoperatorpublish require addoperatorpublishbehavior require addoperatorpublishreplay require addoperatorpublishlast require addoperatorrace require addoperatorreduce require addoperatorrepeat require addoperatorretry require addoperatorretrywhen require addoperatorsample require addoperatorsampletime require addoperatorscan require addoperatorshare require addoperatorsingle require addoperatorskip require addoperatorskipuntil require addoperatorskipwhile require addoperatorstartwith require addoperatorsubscribeon require addoperatorswitch require addoperatorswitchmap require addoperatorswitchmapto require addoperatortake require addoperatortakelast require addoperatortakeuntil require addoperatortakewhile require addoperatorthrottle require addoperatorthrottletime require addoperatortimeout require addoperatortimeoutwith require addoperatortoarray require addoperatortopromise require addoperatorwindow require addoperatorwindowcount require addoperatorwindowtime require addoperatorwindowtoggle require addoperatorwindowwhen require addoperatorwithlatestfrom require addoperatorzip require addoperatorzipall tslint disable nounusedvariable var require operator exportsoperator var require subscription exportssubscription exportsunsubscriptionerror var require subscriber exportssubscriber var require subjectasyncsubject exportsasyncsubject var require subjectreplaysubject exportsreplaysubject var require subjectbehaviorsubject exportsbehaviorsubject var require observableconnectableobservable exportsconnectableobservable var require notification exportsnotification var require utilemptyerror exportsemptyerror var require utilargumentoutofrangeerror exportsargumentoutofrangeerror var require utilobjectunsubscribederror exportsobjectunsubscribederror var require schedulerasap var require schedulerqueue var require symbolrxsubscriber tslint enable nounusedvariable tslint disable novarkeyword var scheduler asap queue exportsscheduler scheduler var symbol rxsubscriber exportssymbol symbol tslint enable novarkeyword sourcemappingurlrxjsmap", "num": "8167", "d": "4/2016"}, {"title": "router changing route nt load component first time", "body": "changing route application xyz xyz made component named xyzcomponent xyzcomponent implements hook router lifecycle named canactivate hook changing title page new route canactivate next prev gt documenttitle mysite xyz return true implement oninit component call method ngoninit method calling server give data data stored variable named xyzdata binded template template xyzdatamsg oninit changing route done calling routenavigate xyz click button named xyzbtn present header app header constant routes problem click xyzbtn first time calls whatever written canactivate decorator xyzcomponent next time click xyzbtn canactivate called time ngoninit called please help problem occurs deploy code server deployment server nginx server nginx server configured ignore frontend routes however code works perfectly well development server npm module named liteserver", "num": "8166", "d": "4/2016"}, {"title": "ngclass documentation inconsistent misuse", "body": "code example error uncaught promise provider controlcontainer ngcontrolname controlcontainer use simply add ngclass works expected docs word ngclass requirement", "num": "8165", "d": "4/2016"}, {"title": "interacting inputs outputs dynamically loaded components", "body": "today interacting input outputs dynamically loaded components requires access potentially private fields component illustrate concrete example let say want load using following component loading would like subscribe close event sounds like easy task unfortunately method requires use instance name instead event name could problem well nothing stops people implementing like case contract broken thing knowing event name instead need subscribe using private field name cc mhevery adamdbradley discussed yesterday", "num": "8164", "d": "4/2016"}, {"title": "remove templateurl components anywhere used", "body": "feature request think templateurls removed jspmsystemjs webpack loaders loading external templates think every template imported top file like inlined import hometemplate homecomponenthtml component template hometemplate class homecomponent think right perfect time set expectation since angular still beta angular forcing people adopt componentbased pattern make easier build apps use imports dependencies force people import template files even css files styles seems like templateurls carried angular based new patterns angular thing templatecache angular people using templateurl actually incurring performance penalty request templates would like hear input thanks", "num": "8163", "d": "4/2016"}, {"title": "thisrouternavigate nt work", "body": "steps reproduce minimal demo problem open plnkr homecomponentts nothing click button tack test route url show component steps try demo see problem using click button screen take test view notice nothing shows console routing nt happen page content nt change url nt update show new route chrome later versions ie successfully route new view expecteddesired behavior routing update url page contents information zero information console indication failure", "num": "8160", "d": "4/2016"}, {"title": "angular quick start problem indexhtml", "body": "minute quick start tutorial work problem indexhtml file includes following line tutorial mention create stylecss file hence line causes runtime error since file nt actually exist confusing beginners like nt sure going please update page future beginners wo nt problem thanks much tutorial needed get started angular thanks mona", "num": "8157", "d": "4/2016"}, {"title": "provide userfriendly way get jasmine done fn", "body": "current thought something similar internal userfriendly name cc wardbell vikerman", "num": "8156", "d": "4/2016"}, {"title": "missing documentation custom form controls", "body": "hi last days searched throgh internet clear simple example implement custom form control works ngformmodel apply custom validation control nothing tried worked expected could please add kind reference code documentation maybe something simple custom checkbox uses icon font instead input type checkbox think something like component would render icon toggled onoff clicking hero fly add hero flying heroes database thx max", "num": "8155", "d": "4/2016"}, {"title": "jsonp injected script invoke callback", "body": "created jsonp request angular ionic get json object run get error console code make reqeust current behavior gives error expecteddesired behavior return empty json object information run angular beta ionic", "num": "8153", "d": "4/2016"}, {"title": "datepipe format issue", "body": "trying show dates different formats datepipe displays mmddyyyy ddmmyyyy formats plunker showing issue", "num": "8152", "d": "4/2016"}, {"title": "optional route params", "body": "hi struggling use case foo would expand item view better way pass optional route params url routeconfig path name home component homecomponent path login name login component logincomponent path foo name foo component foocomponent path foo id name foowithid component foocomponent", "num": "8151", "d": "4/2016"}, {"title": "historyback custom query paramater", "body": "using come across two work refresh current page custom query paramater disappear english first language create example express demo source code", "num": "8150", "d": "4/2016"}, {"title": "dropdown option displaying selected value", "body": "important dynamically loading values drop angular following way however drop appear empty option first displaying values code example lt select ngcontrol country country ngform lt option selected true value widgetcountrycode widgetcountry lt option ngfor country listcountry value countrycode countrydescription lt select tried also lt option ngfor country listcountry value countrycode selected widgetcountrycode countrycode countrydescription lt select code snippet variable widget list fetched dynamically api trying achive selected widgetcountry displayed default selected please help", "num": "8149", "d": "4/2016"}, {"title": "dynamiccomponentloaderloadasroot binding inputs", "body": "trying use method load dynamically component using selector promise setting values child component working plunker current behavior second child component getting binded expecteddesired behavior children behaviour", "num": "8146", "d": "4/2016"}, {"title": "systemjs bundle barrels seems incomplete", "body": "steps reproduce minimal demo problem using systemjs bundle configuration based angular bundles overview load angular basic quickstart works trying add router configuration results errors seem indicate barrels need added configuration current behavior configuration bundles overview sufficient load bundles expecteddesired behavior systemjs configured using bundles overview information realize might bad systemjs reading documentation configuration seemed correct", "num": "8145", "d": "4/2016"}, {"title": "metadata paths within angular incorrectly rooted src", "body": "see module absolute either cc chuckjaz", "num": "8144", "d": "4/2016"}, {"title": "bug forms subform component form controls cause exception", "body": "steps reproduce minimal demo problem steps try demo see problem run plunk view browser console output see exception open appheroformcomponenthtml comment line clear console output rerun exception expected reverse step instead comment line clear console output rerun exception visible current behavior subform component designed modify controlgroup parent form throws exception subform component added form component template following elements ngcontrol attributes expecteddesired behavior subform components able invoke methods input controlgroups addcontrol without breaking interpolation parent component information exception appears thrown interpolation controlgroup", "num": "8139", "d": "4/2016"}, {"title": "error calling renderersetelementstyle typeerror undefined", "body": "steps reproduce minimal demo problem rendererbugexamplezip steps try demo see problem launch liveserver similar navigate index window focused press key current behavior exception error evaluation document keyup original exception typeerror undefined lengthy additional exception would probably mostly spam paste expecteddesired behavior cursor moved absolute left information following demo found order construct simple demo moving square cursor around screen may well better ways ears regardless resolving issue behavior seemed like needed reporting bug", "num": "8137", "d": "4/2016"}, {"title": "error message form ngformmodel undefined poor", "body": "steps reproduce minimal demo problem form provided ngformmodel console error message describe root cause see plunk steps try demo see problem issue demonstrated load uncomment lines appts failure goes away indicating cause missing form current behavior expecteddesired behavior message indicating form passed perhaps ngformmodel missing form", "num": "8136", "d": "4/2016"}, {"title": "components table inserted outside table", "body": "steps reproduce minimal demo problem current behavior component instances inserted inside table looks attach somewhere outside table show expecteddesired behavior information", "num": "8135", "d": "4/2016"}, {"title": "aggrid implemention issue", "body": "implementing aggrid visual aggridcomponent import component import import gridoptions aggridmain component selector aggrid templateurl partialaggrid directives export class aggridcomponent constructor consolelog aggrid component start indexcshtml viewdata title systemconfig packages app format register defaultextension js defaultextension js aggrid defaultextension js aggridenterprise defaultextension js map aggridenterprise nodemodulesaggridenterprise aggrid nodemodulesaggrid systemimport appboot null consoleerrorbind console renderbody getting error unable load failed load resource server responded status found inside nodemodule giving correct path still show unable load resoure attaching snap error thanking aggrid team saying issue please check comment please help resolve thisthanking", "num": "8133", "d": "4/2016"}, {"title": "pipe life cycle destroy throwing exception pipe nt initialized", "body": "changedetectionutilcallpipeondestroy method nt check pipe uninitialized state causing exception thrown componentref dispose called first change detection steps reproduce minimal demo problem steps try demo see problem run planker demo text dynamic view displayed uncomment line file srcappts run plunker exception thrown logged console current behavior throwing exception typeerror read property constructor undefined expecteddesired behavior exception thrown information pipes lazy initialized first change detection view rendering dispose component called life cycle fails due non existing check pipe valid object", "num": "8132", "d": "4/2016"}, {"title": "reference error system defined", "body": "using current version quickstart angular systemjs zonejs angular produces running angular inside nwjs app note running inside browser works fine using previous version quickstart angular systemjs zonejs app works fine inside browser nwjs app", "num": "8131", "d": "4/2016"}, {"title": "hiding json string url", "body": "anyone please help hiding json string url steps reproduce minimal demo problem use similar try template starting point steps try demo see problem current behavior expecteddesired behavior information", "num": "8130", "d": "4/2016"}, {"title": "router subscription happens navigation", "body": "current behavior using router login page pages redirect login page user nt loged redirect page using routersubscriber function find method happen page navigation example navigating abcpage nt logedin page redirect login page actually route first load abcpage whole abcpage fully loaded abcpage displayed go function navigate login page bring lot trouble initilaize happened abcpage want login another thing login get userinfo inner fields displayed abcpage actual behaviour userinfo null login abcpage error wo nt display navigation abcpage completed function called never navigate loginpage expecteddesired behavior thisrouterservicesubscribe happen page navigation add methed observe behaviour navigation information", "num": "8129", "d": "4/2016"}, {"title": "exception expression changed checked", "body": "angular program worked fine upgrade template view component pagination page move page comes error message following page nt work", "num": "8128", "d": "4/2016"}, {"title": "angular currency filter crashes safari", "body": "using builtin currency filter angular browsing safari browser crash also logged", "num": "8127", "d": "4/2016"}, {"title": "trackby nt work", "body": "hello code angular try angular nt work maybe made mistake", "num": "8123", "d": "4/2016"}, {"title": "app extremely slow routerlinks", "body": "try little test app app nearly nothing click link browser hang couple seconds even fast hardware tested firefox chrome linux firefox windows added similar long list links hero demo plnkr slow", "num": "8122", "d": "4/2016"}, {"title": "angular grid ca nt make sample car grid react row click", "body": "angular aggrid new angular amp js need row click captured function row object passed goal create form editing row working cars grid example provided inside gridoption put onrowclicked function event consolelog row clicked execution go click grid row please advise wrong please see modified example code changed txt ts attacheble thank advance sampleappcomponenttxt", "num": "8121", "d": "4/2016"}, {"title": "npm package exist", "body": "important npm package exists", "num": "8120", "d": "4/2016"}, {"title": "routeparams onreuse incorrect view updating", "body": "view refreshing even model data updated steps reproduce minimal demo problem use similar try template starting point steps try demo see problem current behavior calling selectresponse method tab click update view textviewcomponent ts call navigating javascript import component injectable inject import ngform import log serviceloggerservice import routeparams router onreuse lt ul gt lt li gt generic text response view component selector textresponseview templateurl contextpath componentgenerictextresponseviewhtml export class textresponsecomponent implements onreuse model constructor params routeparams thismodel paramsget responsedata routeronreuse next componentinstruction prev componentinstruction thismodel nextparams responsedata loginfo thismodel expecteddesired behavior view refresh navigating child component information", "num": "8119", "d": "4/2016"}, {"title": "bug forms asyncvalidators triggered controlgroup long syncerrors persist", "body": "steps reproduce minimal demo problem dependent validation form state backlog assignee required using asyncvalidators triggering long validationserrors eg required another field persist see following plnkr first action choose state asncvalidator executed making title field valid typing something titlefield asyncvalidation works current behavior asyncvalidations get triggered invalid syncvalidations present expecteddesired behavior asyncvalidations triggered independent validation errors information", "num": "8118", "d": "4/2016"}, {"title": "override http template request templaterequest ng", "body": "override http factory template request see use xhr implementation override use logic loading templates", "num": "8117", "d": "4/2016"}, {"title": "date pipe ios exception", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem run plunkr desktop safari chrome observe full date printed run plunkr mobile safari cordova app observe exception thrown steps try demo see problem open plunkr browser see problem go edit mode plunkr open srcappts note assigning new date constructor template binding date pushing date pipe root app component import component component selector myapp providers template directives export class app constructor thisname thisviewmodel thisviewmodeldate new date current behavior expecteddesired behavior exception occur information", "num": "8116", "d": "4/2016"}, {"title": "routercanreuse prevent component destroyed navigated away", "body": "currently routercanreuse lifecycle hook takes effect navigating one location location contains component see useful form field something similar stay constant location location doesnt keep component alive nt next navigation think would make lot sense also allowed components stay alive hidden navigating location nt contain component example component contains many webgl images whenever renavigate page recreate webgl images take lot processing rather slow hand could stay running background pages nt contain would nt require much loading would also useful components require lot network activity could stay running keeping network retrieved data even nt part current navigation one major situation would like see implemented want edit different navigation route component current component like options page something similar", "num": "8115", "d": "4/2016"}, {"title": "lifecycle events called dynamically loaded component", "body": "components loaded dynamic component loader lifecycle events called attempted workaround events called using route situations involve angular running inside electron application need lifecycle hooks especially ngoninit plunker reproduces dcl behaviour", "num": "8113", "d": "4/2016"}, {"title": "ngfor performance issues ie microsoft edge", "body": "performance ngfor slow ie compared chrome firefox opera plunker loops items using ngfor takes less second browsers whereas takes several seconds ie microsoft edge code constantly calling isnan function problem seems due reason set get functions polyfill extremely slow compared native counterparts take time please look accepted answer performance issue also noticeable forms dynamically populated drop lists drop downs", "num": "8112", "d": "4/2016"}, {"title": "routersubrouters inconsistent behavior routerlink routernavigate routeparamsget", "body": "puzzling subrouters angular stumbled upon issues assumption confident due state beta lack firm stance documentation seems root router defined paths use query optional parameters subrouters seems use matrix urls optional parameters couple issues routerlink generates query parameters instead matrix ones links subroutes expected behaviour case nt work probably design expects matrix params routernavigate nt convert query parameters martix one subroutes also expected behavior case also nt work probably design expects matrix params page reload direct hit try becomes case work gets matrix parameter value side issue page reload router assume correctly converts query params matrix one leaves query ones duplicated becomes case work gets matrix parameter value leaves duplicates sum current state almost imposible get subrouters work steps reproduce minimal demo problem click link two provided respectively refresh page windows cmdr mac usually current behavior inconsistent behavior obvious lack documentation matrix url strategy subrouters expecteddesired behavior going direction matrix urls support hack fall back query parameters scenarios personally fall scenarios multiple subroutes optional parameters information", "num": "8111", "d": "4/2016"}, {"title": "ngchange working ngchange ngrepeat", "body": "trying use ngchange ngrepeat jsfiddle item one trigger ngchange event check ca nt trigger ngchange event thanks advice", "num": "8110", "d": "4/2016"}, {"title": "lifecycle methods called asynchronous navigating", "body": "navigate asynchronous function component lifecycle methode called let explain issue following example routing component works called remove asynchronous part everything works use simulate asynchronous execution real world applicaton problem asynchronous functions like http requests bug way navigating asynchronous functions", "num": "8109", "d": "4/2016"}, {"title": "radiobuttons working modeldrivenforms", "body": "steps reproduce minimal demo problem trying use radio buttons following way submitting form value priority always plnkr steps try demo see problem click one radiobutton check console log current behavior form using value selected radiobutton expecteddesired behavior form use value selected radiobutton", "num": "8107", "d": "4/2016"}, {"title": "ngfor trackby error array empty", "body": "items get error read property foo undefined cc kara", "num": "8106", "d": "4/2016"}, {"title": "hash fragment modified angular running pathlocationstrategy", "body": "location strategy hash fragment still cleared upon navigation happens rootroutercommit method calls ends calling think reasonable actually expected tangle hash fragment strategy using url paths think short piece code added could help achieving think without change hard embed apps using different location strategies", "num": "8105", "d": "4/2016"}, {"title": "canactivate strange behavior", "body": "sorry nt managed get plunker working noticed parent route uses canactivate child route also canactivate child canactivate function gets called wondering whether desired behavior bug", "num": "8104", "d": "4/2016"}, {"title": "docs add stable tag stable apis style output", "body": "reminder issue igorminar note get dump public api surface also mhevery fyi", "num": "8103", "d": "4/2016"}, {"title": "dgeni deprecated tag visible output api docs", "body": "see example live page deprecated warning per", "num": "8101", "d": "4/2016"}, {"title": "bug attempt use dehydrated detector", "body": "steps reproduce minimal demo problem using component destroyed page scope nt properly cleaned change detection keeps running leads error similar fix properly dispose cloned scope preparing pr", "num": "8100", "d": "4/2016"}, {"title": "ngonchanges executed ngoninit", "body": "steps reproduce minimal demo problem using use component inside context binding inputs component makes component handler called ever called could lead obscure bugs current behavior called expecteddesired behavior called first", "num": "8099", "d": "4/2016"}, {"title": "tbody element generated wrong place", "body": "run application see html generated current behavior lt tbody element generated nametitle urltitle expecteddesired behavior nametitle urltitle information", "num": "8096", "d": "4/2016"}, {"title": "memory leak http rxjs publishrefcount", "body": "rxjs version version code reproduce see expected behavior memory leak actual behavior leak shown high volume http requests called eg using repeat operator using publishrefcount others operators used run causes continuous memory leak hot observable longer subscribers additional information able find code causing problem know things nt occur refrain using publishrefcount others eg share operators seems happening use angular http observables ie tried using observableof leak mhevery anything stack traces zonejs see", "num": "8095", "d": "4/2016"}, {"title": "placeholder", "body": "steps reproduce minimal demo problem use \u00e4\u00f6\u00e5 germain swedishfinnish characters placeholder current behavior captured screen expecteddesired behavior input control placeholder yhdyshenkil\u00f6", "num": "8094", "d": "4/2016"}, {"title": "dart angular transformer hangs", "body": "happens upgrading prior versions run fine closed source project projects run fine fire pub serve loads angular transformers hang without output whatsoever best describe future never completes transformer waiting forever windows sdk angular", "num": "8093", "d": "4/2016"}, {"title": "packagejson still referencing jspm calling", "body": "dependencies reflectmetadata rxjs zonejs updated", "num": "8092", "d": "4/2016"}, {"title": "bug testability scheduling task setinterval causes angular seen unstable indefinitely", "body": "use zonejs count pending task decrease pending task count event canceled result use think unstable interval cleared reasonable design choice problem wait zonejs stable testability api app uses without intention ever clearing interval app forever seen unstable testability api clearly wrong leading protractor tests hang propose testability api wait nonperiodic tasks", "num": "8089", "d": "4/2016"}, {"title": "ngif working properly components", "body": "created components templates statewidgetcomponent parent component stateonecomponent child component statetwocomponent child component statethreecomponent childcomponent statewidgettemplate default state issue stateonecomponent rendered properly changed state statetwocomponent rendered template ngif working components regards vasuneet arya", "num": "8088", "d": "4/2016"}, {"title": "ngif double curly bracket interpolation playing well together", "body": "hello came across following behavior sure bug thought run guys plunker see inputs one local variable assigned beneath basic interpolation string show class fields inputs reason moment add ngif input interpolation stops working could someone please clarify whether bug could guys pls point relevant documentation really wan na understand play thanks advance", "num": "8087", "d": "4/2016"}, {"title": "ngmodel within ngfor results exception reassign variable binding", "body": "list user fillupdate predefined items use ngfor create htmlselect binds current loop iteration value via ngmodel define possible optionvalues steps reproduce minimal demo problem plunker let run exception reassign variable binding occurs remove selecttag ngmodel twowaybinding appts line sample runs list named buylist change current behavior exception reassign variable binding occurs expecteddesired behavior exception happen bound list entries gets updated user selection information made possible bind objects switchoption tags created expectation work", "num": "8086", "d": "4/2016"}, {"title": "validatorspattern question", "body": "current behavior validatorspattern w parse new regexp w removed fixed", "num": "8085", "d": "4/2016"}, {"title": "testing xhr error writing unit tests components", "body": "following component typescript import component oninit import routerdirectives import employee modelsemployee import employeelistservicecomponent servicesemployeelistservicecomponent component selector employeelist templateurl srcpagesemployeelistcomponenthtml directives routerdirectives providers employeelistservicecomponent export class employeelistcomponent implements oninit public employees employee public errormessage string constructor private listingservice employeelistservicecomponent ngoninit thislistingservicegetemployees subscribe employees gt thisemployees employees error gt thiserrormessage error want test following typescript import describe expect testcomponentbuilder injectasync setbasetestproviders beforeeachproviders import provide import testbrowserplatformproviders testbrowserapplicationproviders import httpproviders xhrbackend responseoptions response import mockbackend mockconnection import routerproviders import rxjsrx import employeelistcomponent listcomponent import employeelistservicecomponent servicesemployeelistservicecomponent describe mylist tests gt setbasetestproviders testbrowserplatformproviders testbrowserapplicationproviders however keep getting routing error messed", "num": "8084", "d": "4/2016"}, {"title": "need testing story components use router dirs", "body": "currently testcomponentbuilder falls component needs figure going fix note complete router mock scope issue need solution components render testing route config also scope cc marcysutton", "num": "8083", "d": "4/2016"}, {"title": "metadata collection path handling nt allow new pathmapping semantics", "body": "one example app means statement like results sourcefile reference filename run metadata collector sourcefile containing reference get metadata path still present nt work staticreflector hardcoded look paths starting one possible fix fix path look like common case metadata collector already handles leading compilerhost calling side could provide resolution works backwards strip leading reverse path mapping hate maintain thing unless find utility typescript compilerhost canonicalizes way another possible fix staticreflector accept paths known decorators start seems wrong really want get canonical name know symbol really moment blocks compiler cli could shuffle around test fixture nt use pathmapping even users still create working typescript app looks way support cc chuckjaz tbosch", "num": "8082", "d": "4/2016"}, {"title": "router changes query parameters refresh", "body": "using router router params maintained correctly refresh steps reproduce minimal demo problem steps try demo see problem current behavior click valueno parens see value displayed parens refresh see value displayed space decoded click valueparens see value displayed parens refresh see value displayed parens parens stripped expecteddesired behavior refresh route params navigate params decoded automatically parens stripped information", "num": "8080", "d": "4/2016"}, {"title": "chrome version exception error instantiation appcomponent", "body": "upgrading chrome version expected existing application load like chrome seeing following error exception error instantiation appcomponent exception error instantiation appcomponent browserdomadapterlogerror anonymous function anonymous function anonymous function original exception object object browserdomadapterlogerror anonymous function anonymous function anonymous function error context browserdomadapterlogerror anonymous function anonymous function anonymous function context element readingassistant componentelement null injector injector componentelement nullelement readingassistantinjector injectorproto objectbrowserdomadapterlogerror anonymous function anonymous function anonymous function", "num": "8079", "d": "4/2016"}, {"title": "error uncaught promise provider e", "body": "hello upgraded since however started encountering error error uncaught promise provider e l einvoke objectinnerinnerforkoninvoke einvoke erun einvoketask objectinnerinnerforkoninvoketask einvoketask order troubleshoot error switched using file get error using file however surprise switch using file error goes away idea issue may thank", "num": "8078", "d": "4/2016"}, {"title": "angular quick start npm start error", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem created angular quick start project following quick start guide angulario site whenever issue npm start throws following error use similar try template starting point steps try demo see problem setup quick start project setup using npm install npm start current behavior last login fri apr robinsmbp robinkedia cd clear robinsmbp quickstart robinkedia npm start start tsc amp amp concurrently npm run tsc w npm run lite error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name map error find name map error find name map error find name map error find name map error find name map error find name map error find name map error find name map error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name map error find name map error find name promise error find name promise error find name mapconstructor error find name setconstructor error find name map error find name map error find name map error find name map error find name map error find name map error find name map error find name map error find name set error find name set error find name set error find name map error find name set error find name map error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name map error find name map nodemodulesrxjscoreoperatorsdts error find name promise nodemodulesrxjscoreoperatorsdts error find name promise nodemodulesrxjscoreoperatorsdts error find name promise nodemodulesrxjscoreoperatorsdts error find name promise nodemodulesrxjscoreoperatorsdts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name iterator nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservableforkjoinobservabledts error find name promise nodemodulesrxjsobservableforkjoinobservabledts error find name promise nodemodulesrxjsobservablefromobservabledts error find name promise nodemodulesrxjsobservablefromobservabledts error find name iterator nodemodulesrxjsobservablepromiseobservabledts error find name promise nodemodulesrxjsobservablepromiseobservabledts error find name promise npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm start npm err node npm err npm npm err code elifecycle npm err start npm err exit status npm err npm err failed start script tsc amp amp concurrently npm run tsc w npm run lite npm err make sure latest version nodejs npm installed npm err likely problem package npm err npm npm err tell author fails system npm err tsc amp amp concurrently npm run tsc w npm run lite npm err get information open issue project npm err npm bugs npm err nt available get info via npm err npm owner ls npm err likely additional logging output npm err please include following file support request npm err robinsmbp quickstart robinkedia expecteddesired behavior information", "num": "8077", "d": "4/2016"}, {"title": "arrow function code", "body": "arrow function code prevents js run ie unless transpiled", "num": "8074", "d": "4/2016"}, {"title": "issue browsersync", "body": "fresh npm install start project npm start get error browser console get previous version fine someone else", "num": "8073", "d": "4/2016"}, {"title": "error uncaught promise objectunsubscribederror", "body": "could reason error see attached screenshots think reproducible plunkr try describe child component emitting event parent component parent component event handler event calling show modal dialog show details showquestiondetails question thisselectedquestion question thismaterializeshowdialog questiondetailsdialog closequestiondetailsdialog thisselectedquestion undefined thismaterializeclosedialog questiondetailsdialog happening inside showdialog function following code closedialog function calls closemodal everything closed dialog getting error messages event remove component shows details show empty dialog nothing todo angular getting error could reason component use showing dialog materializecss dialog shown via jquery hope problem jquery nt please tell us environment angular version beta browser chrome canary latest language transpiled babel", "num": "8072", "d": "4/2016"}, {"title": "changing directory structure angular beta breaks app", "body": "completed official tutorial beta final code almost one proposed tutorial several comments enhancements working different directory structure break app created sample repository show basically instead putting everything app created subdirectories services models views one subdirectory view file ts css html running npm start reason nt look longer js files correctly compiled tsjs files nt change anything tsconfig sample errors app stuck loading", "num": "8068", "d": "4/2016"}, {"title": "template parsing lexer nt allow nonascii characters expressions", "body": "steps reproduce minimal demo problem steps try demo see problem load something line appear console current behavior nonascii characters allowed template lexer fail error expecteddesired behavior able use nonasc characters interpolated code instance access nonascii members json data", "num": "8067", "d": "4/2016"}, {"title": "broken web link platformbrowserlocation angulariocom documentation", "body": "go click browserplatformlocation hyperlink get found error browserplatformlocation link top paragraphs", "num": "8066", "d": "4/2016"}, {"title": "router skipping location change navigating still emits updated url", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem use similar try template starting point steps try demo see problem current behavior example route component navigates route initialization open plunker link click link note router url location path expecteddesired behavior router url remains along location path information sure intended behavior want keep route manual navigation nt emit url update navigation prevent location change using something like keep url sync store creates action url nt intend public", "num": "8065", "d": "4/2016"}, {"title": "phantomjs exiting test fixed", "body": "using babel typescript testing app karma phantomjs exiting tests starting error message fixed changeing", "num": "8064", "d": "4/2016"}, {"title": "httpparamserializerjqlikeprovider", "body": "httpparamserializerjqlikeprovider prediction make", "num": "8063", "d": "4/2016"}, {"title": "trying load everything cdn getting various errors", "body": "tried load everything cdn getting errors various kinds indexhtml looks like angular boilerplate loading systemconfig packages app format register defaultextension js systemimport appboot null consoleerrorbind console getting various kinds errors written red one written black exception error uncaught promise exception error instantiation original exception primary outlet already registered original stacktrace error primary outlet already registered new etregisterprimaryoutlet new einstantiate einstantiateprovider enew einstantiateprovider einit new e error context object object would best approach use cdn developing app", "num": "8062", "d": "4/2016"}, {"title": "hammergestureconfig", "body": "refer override umd builds due exports umd builds due browserts export browsercommonts", "num": "8061", "d": "4/2016"}, {"title": "componentmetadata constructor parameter interface", "body": "would nice constructor parameter interface could used variable declaration eg currently typescript let componentconfig componentmetadata new componentmetadata selector nxgrid changedetection changedetectionstrategyonpush directives coredirectives nxgridrowcontroller nxgridrowcontrolcontroller nxinputcontroller templateurl appsharedgridhtml host class nxgrid componentconfig changedetection changedetectionstrategydettached component componentconfig export class foo handled constructor interface typescript let componentconfig icomponentmetadata selector nxgrid changedetection changedetectionstrategyonpush directives coredirectives nxgridrowcontroller nxgridrowcontrolcontroller nxinputcontroller templateurl appsharedgridhtml host class nxgrid componentconfig changedetection changedetectionstrategydettached component componentconfig export class foo", "num": "8060", "d": "4/2016"}, {"title": "http return old data insteady updated data windows edge", "body": "updated form revisit form data loaded still old one steady new updated one using windows edge chrome und firefox works correctly following code service code component revisit form page data retrieved old data instead new one database revisit form page notice program goes stops service return old data mvc api controller nt take action normally process go mvc api controller returned data database according understanding http always get data api steady cached data situation windows edge really strange", "num": "8059", "d": "4/2016"}, {"title": "anchor tags opening new tag cmdctrl mouse left click", "body": "normal situation user press hold cmd mac ctrl windows left click links browser open link new window however angular application links attribute resolve route transit corresponding component think least let developers decide whether resolve transit safe open new tap harming user experience building cms angular expect lots user love open angular internal links separated tabs cmdctrl left click although right click click works thank", "num": "8058", "d": "4/2016"}, {"title": "exports need supply related types", "body": "internal src folder contains interfaces symbols work intimately together publicly exported makes annoying use eg ca nt implement interface would require repeat signature one methods uses symbol nt publicly exposed cheat import relevant library anyway nt forced subvert intended privacy rules generally feel like time library l publicly exposes symbol related types need publicly exposed related means type method types signature class recursively related types fields methods probably nt need pedantic insist l exports related types eg dart library l import dart async future willbeanint probably silly insist l export anyway related types somehow publicly accessible rare needed need l yeah maybe l export convenience bug please least resolve problem", "num": "8054", "d": "4/2016"}, {"title": "error installing", "body": "running returning following error windows helps", "num": "8053", "d": "4/2016"}, {"title": "empty terminating starpathsegment appended url", "body": "given wildcard route navigation browser url ends something like specified caused piece code paramroutepathts nt know current behavior feature personally seems weird framework insists anything wildcard value piece code changed would appended think", "num": "8052", "d": "4/2016"}, {"title": "feature redirect torender route without modifying browser history", "body": "sorry issue raised looked everywhere could way redirect torender different route without modifying browser history say route like child routes like follow link check server product longer exists want render page route however use end page urls added history press back button browser go back immediately redirected meaning essentially stuck page addition tried injecting router calling modifying componentinstructions extending routeroutlet expressjs handle calling route param invalid another handler take care clientside equivalent angular similar example open example new window make sure logged navigate using browser address bar get redirected login component back button nt work anymore since brings back immediately redirect back login page", "num": "8051", "d": "4/2016"}, {"title": "routerlink breaks routes replacing slash", "body": "since latest version possible query parameters contain multiple slashes like foobar works great however whenever use parameter multiple slashes within routerlink link escapes causing routes work anymore reload link looks like inside slug pipe even string log correct would log something like inspect actual tag page says pretty clueless even print value within html template returns url slashes seems linkrouter component escaping url", "num": "8049", "d": "4/2016"}, {"title": "forms required empty typenumber still valid", "body": "plunk edited forms example plunk add new number property strength removing strength value changes spyclassname formcontrol ngvalid ngdirty ngtouched strengthvalid true strengthpristine false thought would change nginvalid html line change input type text instead remove strength get expected behavior nginvalid spyclassname formcontrol ngdirty nginvalid ngtouched strengthvalid false strengthpristine false using chrome", "num": "8048", "d": "4/2016"}, {"title": "routing stops working clicks", "body": "copying details stackoverflow question experiencing issue using dart routing stops showing corresponding views clicks test case vm downloaded steps reproduce minimal demo problem use similar try template starting point steps try demo see problem current behavior expecteddesired behavior information", "num": "8046", "d": "4/2016"}, {"title": "clean unused imports", "body": "since dart dev compiler warning imports names used although whole import still used eg import x test use x result error clean production sources probably ignore warning tests ignore warning everywhere get blocked", "num": "8044", "d": "4/2016"}, {"title": "ngclass cause template parse error css rule contains dashes", "body": "steps reproduce minimal demo problem try set css rule name containing one dash element ngclass example modified version min quickstart shows problem added two css rules stylescss file added problematic ngclass snippet template steps try demo see problem open snippet see app loading open console see template errors change see app loads rule applied current behavior template error raised css name dash present directive expecteddesired behavior directive able apply rule dashes names information issue could block migrating process project developers use want use bem conventions write css", "num": "8043", "d": "4/2016"}, {"title": "unit testing integration karma", "body": "enterprise application written angular unit tests written using jasmine utilize karma test runner karmacoverage display code coverage report works great complete solution trying move towards angular framework utilizing typescript find mention integrate unit tests karma able execute unit tests capture coverage kind reports key thing us examples shown angular guide talk creating unittesthtml page manually loading systemsjs test files fine show achieve code coverage need feature plugin enable work karma test runner code coverage achieved karmacoverage plugin need development teams create manual test html pages execute unit tests important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem use similar try template starting point steps try demo see problem current behavior expecteddesired behavior information", "num": "8042", "d": "4/2016"}, {"title": "change property javascript event effect dom", "body": "try change height div reigstred js event locomotive apiready changing height change property component effect dom var locomote require assetsjslocomoteminjs component selector mycomponent template export class mycomponentcmp implements oninit private locomote private height", "num": "8040", "d": "4/2016"}, {"title": "dataattribute templating error inside ngfor loop", "body": "steps try demo see problem check console current behavior creating simple loop put attribute result template erroring stating expecteddesired behavior ability able bind dataattribute without desired behavior seems unnatural state want create attribute fly", "num": "8039", "d": "4/2016"}, {"title": "easy way accessing control instance form template", "body": "let say like know could use point dedicated template would look like nothing special bind form model directive use associate form controls model controls however gets interesting want add css classes inputs based controls validity state gives obviously change detection error fact use anyways instance might change change detection performed could probably use something like expressions get hold control instance seems cumbersome using templatedriven forms problem also nt help directive different use case forms single input current workaround make property component assign instances directive nt change value change detection component class foocomponent ngoninit thisusername new control", "num": "8037", "d": "4/2016"}, {"title": "xhr error loading jspmpackagesnpmrxjs", "body": "upgraded looks like error may introduced prior rxjs sure rxjs issue error loading jspmpackagesnpmrxjs rxjssubjectreplaysubject", "num": "8036", "d": "4/2016"}, {"title": "child component dom removal kills touchevents parent", "body": "steps reproduce see plnkr demo touchscreen required parent component array child components rendered using ngfor within mychildcmp event listener detect child dragged parent component enables child component dragged screen hostlistener mousemove event hostlistener touchmove event ondragmove event hostlistener mouseup event hostlistener touchend event hostlistener touchcancel event ondragend event however event causes children array updated drag causes touchevents ie touchmove touchend touchcancel stop firing child component removed dom using mouse instead touchscreen issues whatsoever use case appointment bookings system child component booking drag booking next day button updates children array next day bookings angular removes previous days bookings dom even touchstart stiil bound removed element see plnkr demo update children array seconds dragging plnkr demo expecteddesired behavior mouse behaviour works expect touch equivalent work give user programmatic ability keep single component removed dom ie component dragged first check active touchstart event component remove dom great nt removed touchend touchcancel fired maybe setting display none information tested chrome touchscreen ios safari", "num": "8035", "d": "4/2016"}, {"title": "forms demo select update", "body": "forms page live example link open live example link change power nothing updates page chrome diagnostic json hero form updates well form power select using found following along demo step running locally using everything went well data binding section replaced divs went askew read ran app right changed every hero model property form might display like since select would nt update", "num": "8034", "d": "4/2016"}, {"title": "whitespace end templateurl declaration blank page", "body": "found bug actual whitespace end filename apphtml mac created file sublime text resulted strange filename driving insane two hours found bug tested adding whitespace declaration produced error displays nothing page load perhaps strip whitespaces declaration give warning kind", "num": "8033", "d": "4/2016"}, {"title": "undefined although api says boolean", "body": "steps reproduce minimal demo problem examine response object returned current behavior undefined expecteddesired behavior per api doc true response status within let implement information", "num": "8031", "d": "4/2016"}, {"title": "firefox select tags update controls object ngcontrols", "body": "user selects select tag firefox controls object update value element properties like pristine touched properties correctly updated controls object form input tags select tags console error occurs problem properties controls object example country selected select address entered input controls object country object pristine true touched true value address object pristine false touched true value main street html situation country countryname controls object properly updates chrome tested update controls object radio buttons check boxes tested edge browser important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem use similar try template starting point steps try demo see problem current behavior expecteddesired behavior information", "num": "8030", "d": "4/2016"}, {"title": "remove internal compiling dart", "body": "", "num": "8029", "d": "4/2016"}, {"title": "maximum call stack exceeded uglifying", "body": "compile project everything works fine nt uglify everything works fine use uglify get error everything compiles fine webpack nt throw error however running browser get error", "num": "8025", "d": "4/2016"}, {"title": "controllers instantiated iframe accepted", "body": "controller instantiated another iframe using gwt super dev mode given directive another controller gets rejected non valid following message directive checked srccompilerruntimemetadatats implementation function uses operator kind cross iframe prototypes one solution would use instead comparing prototypes implemented patch works perfectly want make pull request", "num": "8024", "d": "4/2016"}, {"title": "fix validators ngcontrolname nt expose error object async validator anymore", "body": "async validator like validator directive like could use error information exposed display error messages like error message worked however latest beta tbh sure changed error object async validators exposed anymore information observable state unfortunately structure exposed seems like bug breaking change currently way receive information error object async validator also overrides errors exposed synchronous validators cc vsavkin", "num": "8022", "d": "4/2016"}, {"title": "routerlink inside component generate content", "body": "hello trying lot hours generate html content component component generated appcompoment want generate content component routerlink show example know solution got pluralsightcom tutorial deborahk source code final ok lets explain code main indexhtml loading indexhtml loads maincomponent content maincomponent import bootstrap import appcomponent appcomponent bootstrap appcomponent success gt consolelog bootstrap loaded successfully catch error gt consolelog error ok code loads appcomponentts import component oninit import httpproviders import rxjsrx load features import routerproviders routeconfig routerdirectives import navbarcomponent navbarcomponent import welcomecomponent welcomecomponent import ticketcomponent ticketcomponent import paymentcomponent paymentcomponent import receiptcomponent receiptcomponent import testcomponent test component selector zds templateurl apphtmlapphtml directives routerdirectives providers httpproviders routerproviders routeconfig path name welcome component welcomecomponent useasdefault true path ticket name ticket component ticketcomponent path payment name payment component paymentcomponent path receipt name receipt component receiptcomponent path test name test component testcomponent export class appcomponent ok apphtml ticket payment receipt welcome page displayed problem routes submenu working problem routerlink inside component welcome page button see welcomehtml welcometitle welcomedescription welcomebuytext welcomebuyticket welcomecomponentts welcomehtml page simple import component oninit import routerproviders routerdirectives import router component selector welcome templateurl apphtmlwelcomehtml providers routerproviders directives routerdirectives export class welcomecomponent implements oninit welcomebuyticket buy ticket string contants html want example button welcomehtml routes test component html page routerlink test testcomponentts already exists component template import component oninit import routerdirectives component template directives routerdirectives export class testcomponent implements oninit click button welcomehtml url changed content page still welcomehtml lorem ipsum page url ok content regenerated console showing errors code similar deborahk github code working spent lot time problem route inside component got idea wrong thank", "num": "8020", "d": "4/2016"}, {"title": "dart directiveprocessor warning error", "body": "using tuple library pub pub serve following stack trace generated source code tuple class found angular beta dart error invalid argument illegal character path stack trace uricheckwindowspathreservedcharacters dart urimakewindowsfileurl dart uriurifile dart stringsourcestringsource package parsedirectives package getalldeclarations package rootrununary dart customzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart rootrun dart customzonerun dart customzonebindcallback dart microtaskloop dart startmicrotaskloop dart runpendingimmediatecallback dart rawreceiveportimplhandlemessage dart part package tuplesrctupledart error line column packagestupletupledart parts expected method getter setter operator declaration null error line column packagestupletupledart parts unexpected token null null build error transform directiveprocessor taurusmainpackagestupletupledart threw error error packagestupletupledart parts expected method getter setter operator declaration error packagestupletupledart parts unexpected token null package analyzeranalyzerdart parsesource package analyzeranalyzerdart parsecompilationunit package createngmeta dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecomplete dart asyncfutureimpldart synccompletercomplete package logelapsedasync dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecompletewithvalue dart asyncfuturedart futurewait dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecompletewithvalue dart asyncfutureimpldart futureasynccomplete dart asynczonedart rootrun dart asynczonedart customzonerun dart asynczonedart customzonebindcallback dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart startmicrotaskloop dart isolatepatchisolatepatchdart runpendingimmediatecallback dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage package analyzeranalyzerdart parsesource package analyzeranalyzerdart parsecompilationunit package createngmeta dart async synccompletercomplete package logelapsedasync", "num": "8019", "d": "4/2016"}, {"title": "use jade angular", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem use similar try template starting point steps try demo see problem current behavior expecteddesired behavior information hi new learner recently trying something mean mongodb express angular node template used jade found problem angularexpressjade ca nt send jade browser write like angular routejs well templateurl angular routejs matched express router write ajax method errorpage wan na try ajax communication angular express write like express routejs found jump error page ajax request send automaticlly although nt call ajax method nt know problems think maybe something wrong angular routejs nt think angular routejs good design nt found another solution using jade better solution routejs solve problems jade", "num": "8018", "d": "4/2016"}, {"title": "issue value binding ngfor", "body": "current behavior generatend html value option coming ngmodel select working fine like generated html actually nt need ngmodel value becomes datavalue working fine also tried bind also working expecteddesired behavior code like html value binding fine information", "num": "8017", "d": "4/2016"}, {"title": "ngif directive audio", "body": "dom repeat inserted audio object", "num": "8016", "d": "4/2016"}, {"title": "stealjs support", "body": "anybody consideredtried supporting stealjs additional module loader option apps stealjs promises superior performance compared systemjs uses plain npm modules instead introducing package manager opinion makes quite desirable use done experiments recently nt able make work however api kind similar systemjs nt much effort support opinion supporting stealjs alternative systemjs ideassuggestions", "num": "8015", "d": "4/2016"}, {"title": "broken links website documentation", "body": "broken links website documentation reproduce go scroll data binding links see broken links", "num": "8014", "d": "4/2016"}, {"title": "lifecycle calls called router navigation", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem using beta babel compile navigate one path second path component lifecycle called anything happens compoent ngoninit called code pased steps try demo see problem current behavior click task links routeronactivate called ngoninit called click back button ngoninit called expecteddesired behavior ngoninit called navigate component information mainjs appcomponentjs app dashboard tasks directives routerdirectives routeconfig path component dashboard name dashboard path component name path tasks component tasks name tasks export class routetestcomponent componentsdashboard javascript import component component selector dashboard template dashboard app directives inputs outputs pipes export class dashboard componentsabout go back directives inputs outputs pipes export class constructor route router thisrouter route routeronactivate thisfrom consolelog goback consolelog thisfrom thisrouternavigatebyinstruction thisfrom compoentstaskstaskcomponentjs tasks directives routerdirectives inputs outputs pipes routeconfig path list component taskslist name list useasdefault true export class tasks routeronactivate consolelog tasks thisrender render consolelog render fired taskstaskslistcomponentjs tasklist go back directives routerdirectives inputs outputs pipes export class taskslist task id constructor router router thisrouter router consolelog constructor tasklist routeronactivate consolelog tasklist ngonchanges consolelog list changes ngoninit consolelog goback consolelog thisfrom thisrouternavigatebyinstruction thisfrom indexhtml html loading", "num": "8012", "d": "4/2016"}, {"title": "using trackby ngfor causes elements element addedremoved redrawn", "body": "using track additionremoval element array iterated appears elements actually redrawn rather reordered using issue seen using networkdocs tab chrome console open network tab remove one heroes near top list every hero item one redrawn seen iframe reloaded behavior repoduced without iframe present makes easier see behavior possible misunderstood functionality understanding would leave elements place retained reference property custom trackby function edit previously thought iframes triggered reflow somehow caused content refresh apparently always case plunker recreates functionality adding node iframe child iframes nt reload content appears ngtrackby may fully working", "num": "8011", "d": "4/2016"}, {"title": "work safari", "body": "angular version use expression template html text works firefox chrome nt work safari ios safari ios plunkr color alternate green black operation allowed chrome firefox safari read chrome safari", "num": "8009", "d": "4/2016"}, {"title": "ngclass removes classes set second digest cycle dev mode", "body": "set something like component red css class component selector red template export class redcomponent getclasses return red true working first digest second dev mode removing class something like working export class redcomponent classes red true think bug dev mode nt impact resulting output", "num": "8008", "d": "4/2016"}, {"title": "bootstrap vs providers", "body": "hey understending inject service bootstrap application providers section component question best practices inject service another question inject component providers section use different component without loading injectionservice", "num": "8007", "d": "4/2016"}, {"title": "passing data transcluded content", "body": "hi trying pass data directive transcluded content slightly contrived use case plunkr component called showminmax allows show lowest highest number array integers like consumer component able transclude whatever template require next min max displayed numbers access min max data whatever want within certain area component steps reproduce minimal demo problem current behavior nt seem way pass data along transcluded content expecteddesired behavior plunkr gave possible solution attach certain properties ngcontent tag expect see attaching variable transcluded tag information let know need info", "num": "8006", "d": "4/2016"}, {"title": "problem style routerlinkactive class", "body": "steps reproduce minimal demo problem steps try demo see problem click navbar tag color nt change blue click outside color changed blue current behavior style getting applied even see class dom clicked outside getting applied expecteddesired behavior style get applied click navbar", "num": "8005", "d": "4/2016"}, {"title": "ngupgrade digest already progress", "body": "ngupgrade application error thrown specific case steps reproduce minimal demo problem within downgraded component inject services fetch data using chain updates url using steps try demo see problem click button component current behavior http data fetched logged console url updates foo error appears console expecteddesired behavior http data fetched logged console url updates foo errors appear console information steps reproduce distilled uirouter hybrid sample app happens angular beta fetch http without location update location without chaining http error occur chain instead error occur initiate promise chain within context instead inside component error occur ericmartinezr helped replace corejs zone issue still occurs plunk possibly related", "num": "8004", "d": "4/2016"}, {"title": "attributes break templateurl", "body": "solution work btw versions working code directives routerlink mdbutton mdinput providers loginservice formbuilder styleurls csslogincss export class logincomponent error code using templateurl served via golang backend console output angular running development mode call enableprodmode enable production mode exception error uncaught promise template parse errors ca nt bind ngformmodel since nt known native property ngformmodel myform ngsubmit onsubmit myformvalue method post gt ngformmodel myform ngsubmit onsubmit myformvalue method post gt ngformmodel myform ngsubmit onsubmit myformvalue method post gt ngformmodel myform ngsubmit onsubmit myformvalue method post gt ngformmodel myform ngsubmit onsubmit myformvalue method post gt ngformmodel myform ngsubmit onsubmit myformvalue method post gt templateparserparse zonedelegateinvoke objectngzoneimplinnerinnerforkoninvoke zonedelegateinvoke zonerun zonedelegateinvoketask objectngzoneimplinnerinnerforkoninvoketask errorconsoleerror error uncaught promise template parse errors consoleerror", "num": "8001", "d": "4/2016"}, {"title": "wiiu browser invalidstateerr dom exception", "body": "steps reproduce minimal demo problem enable developer tools browser connect another computer open live example min quickstart wait seconds check console output current behavior loading text stays screen app never loads error console invalidstateerr dom exception attempt made use object longer usable expecteddesired behavior app display first angular app errors console information error reported line browser fork older version webkit", "num": "8000", "d": "4/2016"}, {"title": "change detection working hybrid app", "body": "steps reproduce minimal demo problem plunker click show child button click click button current behavior result upgraded component calling following callback function parent component settest thistest settest called variable bound view view ends showing expecteddesired behavior view show test variable set settimeout finished information issue happens child component remove dom calls callback parent component clicking show child button experiencing issue trigger change detection show expected value view manually trigging change detection service function also show expected output view", "num": "7998", "d": "4/2016"}, {"title": "input starter component assined", "body": "steps reproduce minimal demo problem create component input field start hin ur indexhtml current behavior input value empty expecteddesired behavior input value set component appcomponentts import component input component selector myapp template current value val export class appcomponent input initvalue val string indexhtml", "num": "7997", "d": "4/2016"}, {"title": "invalid html rendering angular", "body": "expecteddesired behavior template file rendered inside routeroutlet tags steps reproduce minimal demo problem component templateurl appinvoicingcomponenthtml directives routerdirectives providers routerproviders customersservice template file appinvoicingcomponenthtm start routerlink desktop desktop routerlink customers customers routeroutlet routeroutlet end deskptop component component templateurl appdesktopdesktopcomponenthtml export class desktopcomponent template desktop current behavior rendered following way cached chrome invoicingapp start href desktop class routerlinkactive desktop href customers customers routeroutlet routeroutlet undefined desktop undefined end invoicingapp", "num": "7995", "d": "4/2016"}, {"title": "proposal typesafe formbuilder", "body": "motivation purpose gain benefits static type checking currently api takes control configurations array first element configuration array second third useful writing code nt typesafe array typed design think two approaches making typesafe class controlconfig one using class controlconfig example ts thisloginform buildergroup login new controlconfig validatorsrequired passwordretry buildergroup password new controlconfig validatorsrequired passwordconfirmation new controlconfig validatorsrequired asyncvalidator interface controlconfig another way using interface like route example ts thisloginform buildergroup login value validator validatorsrequired passwordretry buildergroup password value validator validatorsrequired passwordconfirmation value validator validatorsrequired asyncvalidator use instead config array thanks dzmitryshylovich pros gain benefits static types types good documentation cons big breaking change increase amount code please tell impressions thoughts thanks", "num": "7994", "d": "4/2016"}, {"title": "feature request router asynchronous auxiliary routes", "body": "problem moment easily possible load auxcomponents asynchronously problem auxcomponents yet present compile time lazy loading general required think valid feature large sized apps current workarround possibility use virtual proxy component see breaks router tree generally cumbersome expected behaviour generally want able configure auxroutes loader function something like let know okay feature think implement", "num": "7993", "d": "4/2016"}, {"title": "elementfind unnormal atfer refresh browser", "body": "please see demo plunker run normallyi want express use demo project using angularrouter requirejs find demo normally first load press refresh browser alert showi test many times finally find element obj find children elementso know bug something wrongthanks", "num": "7992", "d": "4/2016"}, {"title": "value input text invalid value model undefind", "body": "html \u7528\u6237\u540d typing input text soon value valid console output undefined number username might undefined get exact value matter value valid thank", "num": "7991", "d": "4/2016"}, {"title": "incremental rebuild broken", "body": "steps reproduce minimal demo problem modify source file current behavior complains find modified file expecteddesired behavior compiles modified file reexecutes test", "num": "7987", "d": "4/2016"}, {"title": "possible bug integration aspnet", "body": "hello platform possible bug aspnet description issue receive template parse error eof whenever reference component within subfolder attempts display databound nondatabound html table matter simple bug simple list ul li outputting data via databound ngforhardcoded list simple table makes think bug also code placed multilined template works fine steers thinking bug steps reproduce found solution works plunkr template errors occur aspnet aspnet nodemodules content nodemodules copied wwwrootnodelibs nodelibs referenced script references errors take place steps reproduce minimal demo problem details error expand comments answer chat discussion details working plunkr attempting achieve current behavior exception template parse errors unexpected character eof hello cell applicationstestcomponent exception template parse errors unexpected character eof hello cell applicationstestcomponent exception error uncaught promise template parse errors unexpected character eof hello cell applicationstestcomponent exception error uncaught promise template parse errors unexpected character eof hello cell applicationstestcomponent stacktrace browserdomadapterlogerror error uncaught promise template parse errors unexpected character eof hello cell applicationstestcomponent resolvepromise zonedelegateinvoketask objectngzoneimplinnerinnerforkoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue xmlhttprequestzonetaskinvoke browserdomadapterlogerror unhandled promise rejection template parse errors unexpected character eof hello cell applicationstestcomponent zone angular task promisethen value baseexceptionconsoleerror error uncaught promise template parse errors consoleerror unhandled promise rejection template parse errors unexpected character eof hello cell applicationstestcomponent zone task promisethen value baseexceptionconsoleerror error uncaught promise template parse errors expecteddesired behavior template error perfectly valid html information behaviour present beta long working lol host page viewdata title home page layout null spa appcomponentts import component eventemitter oninit input output onchanges inject import httpproviders import routeconfig routeroutlet import rxjsrx import menuservice containermenuservicesmenuservice import applicationstestcomponent applicationsapplicationtestcomponent import summarycomponent dashboardcomponentssummarycomponent component selector app templateurl appapphtml providers routeroutlet directives summarycomponent applicationstestcomponent routeconfig path name summary component summarycomponent useasdefault true path test name test component applicationstestcomponent export class appcomponent implements oninit breaks moment applicationstestcomponent referenced must find html page able retrieve html content html page failing parse following hello cell really need better error messages nt know done wrong first page loads fine attempt traverse page template exception triggered many thanks gladly providetry anything like best wishes dan", "num": "7983", "d": "4/2016"}, {"title": "chore use typings instead tsd internally", "body": "current behavior use install typings deprecated favor use long dependencies need available", "num": "7982", "d": "4/2016"}, {"title": "child components read route params parents", "body": "suppose appcomponentts route config users userid component usercomponent usercomponentcomponentts route config contactinfo component contactinfo contactinfo component unable read route params userid could input rather able read directly route noticed could use route registry get userid feels hacky would expect route params carry route params present route ones specified trickle manner ps currently running potentially already patched since release", "num": "7976", "d": "4/2016"}, {"title": "select box option value set ngfor without using ngmodel", "body": "select box using ngfor loop options longer use value using ngmodel sets value attribute option element using ngmodel bug likely introduced steps reproduce minimal demo problem steps try demo see problem look console notice select box ngmodel set fake object exist component outputs value option change event select box without ngmodel attribute however nt value attribute set outputs display value option expecteddesired behavior value work regardless presence ngmodel", "num": "7975", "d": "4/2016"}, {"title": "allow tag added dom", "body": "important repository issues reserved feature requests bug reports submit support requests see x feature request steps reproduce minimal demo problem use similar try template starting point steps try demo see problem current behavior polymer elements like expect element passed child element angular processes elements internally nt add dom expecteddesired behavior way tell angular element treated dom element like example tag passed asis information", "num": "7974", "d": "4/2016"}, {"title": "native submit behavior impossible ngform always preventdefault", "body": "demo html component template html click submit nothing happens angular skips preventdefault code attribute exists angular ngform always listens submit returns false thus preventing submit ever coming intended course decorate override ngform angular way seems logical", "num": "7973", "d": "4/2016"}, {"title": "ca nt set accesstoken property request headers", "body": "hi guys create networkservice get list resources get resources need authorized jwt accesstoken must inserted headers get request code snippet call ca nt set accesstoken property request headers expected requestheaders property accesstoken accesstoken property comes set way accesscontrolrequestheaders accesstoken ideas work thanks lot", "num": "7972", "d": "4/2016"}, {"title": "select change event occurs ngmodel updates", "body": "trying get updated select box value case object changes trying use ngvalue object syntax added like objname eventtargetvalue string equal object index array assume however method print selectedobj always old value seems though change event fires model updated edit ngfor redraws array option values index keeps incrementing ca nt use pull correct object array searchresults case steps reproduce minimal demo problem steps try demo see problem look consolelog notice selected obj always equal old value select new value expecteddesired behavior would like either model object updated change event fires way access new value event obj passed change function", "num": "7971", "d": "4/2016"}, {"title": "formbuilder input ngif false still considered validation", "body": "demo expected behavior form validation dynamic things like disabled ngif changes input ngcontrol actual behavior changes form validation ngif false", "num": "7970", "d": "4/2016"}, {"title": "feature using routeparams without hassle routes", "body": "app single page need routing need query string parameters inject routeparams need following bring another component routeconfig create dedicated component router config router base template really need inject routeparams component want use query string parameter finally able query string parameter request possibility use routeparams another component without hassle currently could course bring party library component write component would nice possible angular", "num": "7969", "d": "4/2016"}, {"title": "extendinherit components annotations", "body": "would like create extensions components already deployed angular without rewrite almost completely base component could undergo changes wish changes also reflected derived components example created simple example try explain better problem following base component typescript import component input component selector basepanel template content styles export class basepanelcomponent input content string color string red onclick event consolelog click color thiscolor would like create another derivative component alter example basic component behavior case example color typescript import component import basepanelcomponent basepanelcomponent component selector mypanel template content styles export class mypanelcomponent extends basepanelcomponent constructor thiscolor blue example plunker problemlimitation see implementation derivative component much implementation repeated single part really inherited annotation basically completely repeated changed portions feature request days research around possible limitation question stackoverflow stackoverflowpt native language concludes even current version mechanism annotations inheritance wonder possible implemented possibilityfeature functionality future versions angular library", "num": "7968", "d": "4/2016"}, {"title": "able bind select list int property dart", "body": "trying bind int property select option int property get following error using dart code following component selector myapp templateurl apphtml directives const ngfor coredirectives formdirectives class appcomponent int selectedvalue class myobj string val int id", "num": "7967", "d": "4/2016"}, {"title": "router child router component error", "body": "appcomponent articlecomponent articlecategorycomponent articlelistcomponent throws error like works normal remove component articlelistcomponent template also works normal use child router use seed click link see error complete code", "num": "7966", "d": "4/2016"}, {"title": "angular components history getting created newly every time going back", "body": "angular tour heroes example moving top heroes heroes detail page heroes detail page pressing back navigates back top heroes page noticed top heroes page constructor getting called seems expensive every time land page make numerous http calls", "num": "7965", "d": "4/2016"}, {"title": "event bindings nt support unary", "body": "current behavior unary expression nt appear generated javascript called method receives string value expecteddesired behavior unary applied string calling function", "num": "7964", "d": "4/2016"}, {"title": "work", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem use similar try template starting point plunker steps try demo see problem current behavior angular nt complain working fine expecteddesired behavior nt found issues selfclosing tags reintroduced information see also", "num": "7961", "d": "4/2016"}, {"title": "component router working downgraded angular component hybrid app", "body": "steps reproduce minimal demo problem trying create hybrid angular app demonstrating migrate angular figured easiest way migrate would use component router angular trouble getting working hybrid app created simple app demonstrates problem running instance angular component trying downgrade use route angular component router current behavior page loads logs following error looks like source code angular component router trying get controller active component running something like returns take look downgraded component element scope field eg inspect element chrome run get back", "num": "7960", "d": "4/2016"}, {"title": "router including alternate default route path redirect causes default route load", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem use similar try template starting point steps try demo see problem open plunker link note content displayed links comment redirect route plunker refreshes note default route displayed current behavior default route loaded expecteddesired behavior default route path displayed regardless whether redirect route exists information exists", "num": "7959", "d": "4/2016"}, {"title": "routerlinkactive added child link parent route", "body": "demo plunkr issue reproduce select heroes notice link child component marked active parent route active current behavior child route alwayshas routerlinkactive class parent currently active expecteddesired behavior link parentchild active parent parentotherchild", "num": "7953", "d": "4/2016"}, {"title": "router provide better error message linkparams array", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem use similar try template starting point steps try demo see problem open developer console log note error thrown invalid redirect route current behavior redirect router link setup incorrectly array provided error thrown nonspecific message expecteddesired behavior error thrown state linkparams provided array information aid troubleshooting errors invalid router dsl", "num": "7952", "d": "4/2016"}, {"title": "request common tools return change detection metrics", "body": "common tools library contains method timechangedetection prints long took angular run change detection outputs number cycles ran numticks long cycle took mspertick addition printing information consolelog would great method returned numticks mspertick values rather returning nothing would allow clients programmatic access values", "num": "7950", "d": "4/2016"}, {"title": "router allow parent route assigned path child route default", "body": "hi create simple plunk explain issue thoughts creating route tells angular route children sorry nt get technical want explain way see example creating route really find illogical need create route path case ca nt router assign path default actually code would become javascript component selector app template directives routerdirectives providers routeconfig path bar name appbarcomponent component appbarcomponent path foo name appfoocomponent component appfoocomponent", "num": "7946", "d": "4/2016"}, {"title": "html number fields bounds strings", "body": "bound value one type html number input fields bound strings expectation bound type input field case change type input field based value fields form becomes problem downstream rest service expecting numbers gets strings obviously lot downstream work arounds involving parsing numbers changing types angular app rest service none less feels like bug contrived example demonstrate problem current behavior typescript snippet export class demo value number string inputtype string constructor thisinputtype text makenumber thisinputtype number log consolelog jsonstringify thisvalue html make number log expecteddesired behavior user clicks make number button enters number input field clicks log console log information user clicks make number button enters number input field clicks log console actually logs", "num": "7945", "d": "4/2016"}, {"title": "css supports atrule encapsulated", "body": "steps reproduce minimal demo problem current behavior css supports atrule inner styles encapsulated expecteddesired behavior css supports atrule inner styles encapsulated", "num": "7944", "d": "4/2016"}, {"title": "add event like onhastask ngzone", "body": "please add event notifies tasks either macro micro completed something like zonejs event would great event", "num": "7942", "d": "4/2016"}, {"title": "build instructions developer guide angular repo", "body": "currently developer guide repo wiki instructions build angular repo many experiencing build errors repo github issues would help know taking right steps try build run test repo creating new issue request guide readme wiki build project run run tests thanks", "num": "7938", "d": "4/2016"}, {"title": "bug app crashes component defines ts", "body": "try tweak quickstart throws change variable name etc well repro plunker seems related typescript first detected apps running recent betas work fine typescript fearing typescript error tried simple repro ts playground worked fine alert box pops right ts playground ts", "num": "7937", "d": "4/2016"}, {"title": "angular router unloading child component", "body": "steps reproduce minimal demo problem steps try demo see problem click contact show contact details hit back button notice details view stays loaded even though url says current behaviour child component unloaded going previous route child expecteddesired behaviour child component fire deactivate event ngoutlet removed", "num": "7934", "d": "4/2016"}, {"title": "contentchildren work bootstrapping upgradeadapter", "body": "need query list child elements element parent children angular components downgraded used within angular app contentchildren query always returns empty list plunker reproducing issue current behavior contentchildren query returns empty list expecteddesired behavior contentchildren return list three elements", "num": "7933", "d": "4/2016"}, {"title": "rangeerror maximum call stack size exceeded", "body": "seems incredibly easy cause infinite loop production angular app following example code simplified reproduction case could come dev mode displays would expect logs following text production mode gets recreated stack overflows secondlevelcomponentconstructor message prints loop removing either unused public methods causes problem go away oversimplification essentially trying demo app app works fine running locally devmode static production build visible fails steps reproduce minimal demo problem plnkr source code html javascript js import component input oninit import bootstrap component selector secondlevelcomponent template secondlevelcomponent class secondlevelcomponent constructor consolelog secondlevelcomponentconstructor note without method one error happen neither method actually called somemethod component directives secondlevelcomponent selector toplevelcomponent template class toplevelcomponent constructor consolelog toplevelcomponentconstructor note without method one error happen neither method actually called somemethod component directives toplevelcomponent selector demo template class demo constructor consolelog democonstructor bootstrap demo runtime error", "num": "7930", "d": "4/2016"}, {"title": "blahngform bind expected loop", "body": "steps reproduce minimal demo problem steps try demo see problem enter something top field bottom field truefalse updates second field validity changes current behavior ngform bound last control ngfor expecteddesired behavior ngform binds control current element like unparameterized binding", "num": "7928", "d": "4/2016"}, {"title": "partial view implementation", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem use similar try template starting point steps try demo see problem current behavior expecteddesired behavior information", "num": "7927", "d": "4/2016"}, {"title": "angular filenamepath character limit templates", "body": "windows running local xampp server host application run issue sure bug angular perhaps systemjs something environment template named contactdetailtemplatehtml html text within template render page unless shorten filename even one character templates worked fine filenames shorter full path length file name characters nt believe long enough cause problem anyone else seen issue come workaround something environment causing get errors difficult troubleshoot already pulled hair figuring length issue cause html showing thanks", "num": "7926", "d": "4/2016"}, {"title": "onchanges parent executed emit child component", "body": "minimal example problem app component uses contenteditablemodel component allows edit bonded property emit changes parent component via twoway data binding contenteditablemodel able change apptext property apponchanges executed problem onchanges hook executed app component although value text changing properly app setup reflectmetadata rxjs systemjs zonejs", "num": "7925", "d": "4/2016"}, {"title": "update tools library systemjs support modulerelative loading", "body": "please update recent version systemjs supports setting global node commonjs loader enables relative loading styles templates metadata write declare var modulename string component moduleid modulename selector questsummary templateurl questsummarycomponenthtml module relative styleurls questsummarycomponentcss module relative docs samples use works run locally plunkers stuck old version steps reproduce minimal demo problem see plunker indexhtml loads systemjs tools commented cdn cdn version works version tool library april fails see console", "num": "7923", "d": "4/2016"}, {"title": "question repos communityhotlist updated", "body": "last bug community hotlist jan anyway could update add new ones know contribute sure try fix put pr trying help", "num": "7922", "d": "4/2016"}, {"title": "ca nt bind data non native properties", "body": "hello use project uiframework uses custom data attributes display example tooltip tried show dynamic data tooltip binding data model attribut unfortunately nt worked since got following error code used fill attribute angular dynamic data", "num": "7920", "d": "4/2016"}, {"title": "http options http request method support", "body": "hello could great add support options http verb http class current behavior currently able execute directly options request http class expecteddesired behavior possibility use method order perform options http request options url string options requestoptionsargs observable information operation could useful using selfdescribing restful apis", "num": "7918", "d": "4/2016"}, {"title": "bug currencypipe accept input currencycode", "body": "accept valid input argument case behave like ie display number currency currency code part model situations currency yet set user would cause possible work around using would make template unnecessarily complex reduces readability behaviour would also consistent fact number pipe accept value nt throw error steps reproduce minimal demo problem use like example current behavior following error thrown template rendered crashes expecteddesired behavior number formatted would used", "num": "7917", "d": "4/2016"}, {"title": "styles removed evaluated null ie", "body": "steps reproduce minimal demo problem see plnkr steps try demo see problem press change bg color button much want toggle div background none red viceversa see working real ie change work correctly chrome ie ff got solutionworkaround alexhub gitter chatroom current behavior chrome works perfectly ie background color added removed expecteddesired behavior work browsers changed work information emulated emulated behavior line changed use empty string instead", "num": "7916", "d": "4/2016"}, {"title": "url missing guide attribute", "body": "go link glossary links template syntax working showing url template syntax right missing one guide word latest word put guide word latest word working please replace asap", "num": "7915", "d": "4/2016"}, {"title": "referenceerror internet explorer symbol undefined", "body": "followed quickstart works fine ie edge google chrome version using beta ie gives following error functions proto description undefined message name error number nan originalerr functions proto description symbol undefined message symbol undefined name referenceerror number stack referenceerror symbol undefined getsymboliterator anonymous function anonymous function u anonymous function anonymous function u anonymous function stack null ie nt support symbol code seems function ispresent never called error thrown immediately line var symboliterator null function getsymboliterator isblank symboliterator ispresent symbol amp amp ispresent symboliterator symboliterator symboliterator else var keys objectgetownpropertynames mapprototype var lt keyslength var key keys key entries amp amp key size amp amp mapprototype key mapprototype entries symboliterator key return symboliterator exportsgetsymboliterator getsymboliterator nt created plunker encounter bug follow quickstart reproducible run app", "num": "7914", "d": "4/2016"}, {"title": "angular router arrow function", "body": "line remains arrow function file generated breaks several nonchrome browsers typescript nt compiling js file ts file replaced", "num": "7913", "d": "4/2016"}, {"title": "query string duplicated entering wildcard route", "body": "steps reproduce minimal demo problem add path try reach query string eg current behavior wildcard route query params appears twice expecteddesired behavior query string duplicated information angular could nt find line causes behaviour got lost somewhere zone", "num": "7911", "d": "4/2016"}, {"title": "doc form exmaples code incorrectly written", "body": "hi guys following form building basic found error used hidden property set pristine valid produce result value wrong code instead used ngif addresstouched amp amp addressvalid control touched valid error message gets attached previously using hidden property binding nothing thanks", "num": "7910", "d": "4/2016"}, {"title": "fakeasync fail edge", "body": "cc vikerman kara found case fakeasync set null early tests fall log looks like ensure nt happen moving zonespec", "num": "7909", "d": "4/2016"}, {"title": "router hashlocationstrategy listen popstate hashchange events", "body": "steps reproduce minimal demo problem view hashlocationstrategy internal clients rely manually dispatching events order libraries rely listening hashchange manually know route unfortunately seems cause duplicate routing workaround override replace prefer keep like longterm current behavior listens type events expecteddesired behavior imagine listen one", "num": "7908", "d": "4/2016"}, {"title": "form changing dirty updating group using form builder", "body": "demo expected behavior form validation work properly even resetting form current behavior form changing dirty click update button basically instantiating form", "num": "7907", "d": "4/2016"}, {"title": "use viewchild", "body": "use viewchild seems take effect js code import component elementref viewchild component selector hamburgericon template require hamburgericonhtml styles require hamburgericonscss providers directives pipes export class hamburgericon viewchild patha patha tempalte", "num": "7906", "d": "4/2016"}, {"title": "remove unused import", "body": "important repository issues reserved feature requests bug reports submit support requests see unused import element protractorelement import requires dependency angular protractor typings conflicts angular typings different type defs", "num": "7905", "d": "4/2016"}, {"title": "start dragging touchstart", "body": "need add handle drag amp drop mobile devices touchstart event firing expected naturally visible effect drag amp drop possibilty start native drag drop touchstart handl drag drop touch systems thishtmlelementontouchstart touchevent touchevent gt check user intend starting drag amp drop touch behaviours", "num": "7903", "d": "4/2016"}, {"title": "", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem use similar try template starting point steps try demo see problem current behavior expecteddesired behavior information", "num": "7902", "d": "4/2016"}, {"title": "angular java", "body": "run angular application apache tomcat using jsp", "num": "7901", "d": "4/2016"}, {"title": "angular spring mvc", "body": "possible use angular spring mvc enterprise application", "num": "7900", "d": "4/2016"}, {"title": "angular integration spring mvc", "body": "use angular spring mvc application deploy application ibm websphere thanx", "num": "7899", "d": "4/2016"}, {"title": "router bug duplicate states windowhistory stack", "body": "steps reproduce launch plunker sample new tab press browser back button page", "num": "7898", "d": "4/2016"}, {"title": "equivalent", "body": "ran bug today including would result code failing using would run fine example plunkr current state ngmodel bind fails text box gets data switch page load instead text box load fine", "num": "7896", "d": "4/2016"}, {"title": "contentchild null must value", "body": "creating dialog component needed content projected created gist contentchild props set looks like bug", "num": "7895", "d": "4/2016"}, {"title": "typeerror require function electron", "body": "electron app uses working anymore since upgrade requiring node module created skeleton project shows problem issue show devtools open see working version use config", "num": "7894", "d": "4/2016"}, {"title": "error unexpected directive value samplecomponent view component main", "body": "basic sample fails run native code gwt steps reproduce minimal demo problem gwt code html steps try demo see problem attached gwt project right click run web application gwt super dev mode current behavior results error exception unexpected directive value samplecomponent view component mainbrowserdomadapterlogerror anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function anonymous function promise asap flush stacktrace browserdomadapterlogerror anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function anonymous function promise asap flush sample project idea generate code gwt generator", "num": "7893", "d": "4/2016"}, {"title": "angular spring mvc", "body": "hi java spring mvc developer using angular previous project would like use angular coming projects please suggest walk thanks", "num": "7892", "d": "4/2016"}, {"title": "hi", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem use similar try template starting point steps try demo see problem current behavior expecteddesired behavior information", "num": "7891", "d": "4/2016"}, {"title": "sibling components next viewencapsulationnative mode component getting styles put shadow dom", "body": "steps reproduce minimal demo problem create sibling components component tree parent component multiple components within template give one least one css class component metadata property set one sibling components component metadata property make sure sibling components set mode run code chrome since shadow dom support inspect dom browser expand shadowroot component set mode notice styles sibling components ending inside shadow dom component set also notice styles sibling components still ending tag expected example plunker current behavior looks like css shim getting created tag getting inserted sibling components component tree mode also looks like put order custom elements found within parent component template markup two nonnative mode sibling components processed dom tree native mode one tags come native one native one markup shadow dom expecteddesired behavior believe desired behavior sibling component styles ending shadow dom native mode component", "num": "7887", "d": "4/2016"}, {"title": "npm install fails", "body": "try install via npm get daslicht angularmeteor daslicht npm install angularmeteor usersdaslichtdevangularmeteor unmet peer dependency extraneous unmet peer dependency unmet peer dependency reflectmetadata unmet peer dependency rxjs unmet peer dependency zonejs npm warn requires peer none installed npm warn requires peer none installed npm warn requires peer reflectmetadata none installed npm warn requires peer rxjs none installed npm warn requires peer zonejs none installed npm warn angularmeteor description npm warn angularmeteor repository field npm err code daslicht angularmeteor daslicht", "num": "7884", "d": "4/2016"}, {"title": "validatorpattern could optional flag parameter", "body": "hi think important allow use flags pattern validator optional string parameter thanks", "num": "7882", "d": "4/2016"}, {"title": "bug router query parameters stripped reload", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem note hard demo plunk due way plnkr encapsulates app plunk least provides code copied local environment though ran using liveserver described quickstart issue readily visible create parent route uses path create child route parent apply query parameter url perform browser page refresh current behavior child route query parameters stripped url page refresh expecteddesired behavior query parameters remain intact information seems happen parent route definition uses root path issue nt occur parent path anything else eg parent", "num": "7881", "d": "4/2016"}, {"title": "bind ngcomponentrouter events", "body": "version multiple components using routeonactive component controllers trying bind event routeonactive however ca nt seem pick rootscope tried specifying routeronactivate routeronactivate name event neither worked", "num": "7880", "d": "4/2016"}, {"title": "min quickstart pointing incorrect module", "body": "minute quickstart currently states moved recently put quick pr someone point direction files located repo another repo thanks", "num": "7879", "d": "4/2016"}, {"title": "staticreflector annotation returns undefined types annotations", "body": "steps reproduce minimal demo problem call type annotations current behavior returns expecteddesired behavior return consistent expected", "num": "7877", "d": "4/2016"}, {"title": "runtimemetadataresolver throws staticreflector returns directives annotations", "body": "important repository issues reserved feature requests bug reports submit support requests see steps reproduce minimal demo problem request type decorator contains references directive current behavior throws reporting directive unexpected type expecteddesired behavior return directives", "num": "7876", "d": "4/2016"}, {"title": "cross platform debugger work platforms", "body": "important repository issues reserved feature requests bug reports submit support requests see used angular batarang angular great tool angular batarangle good tools still chrome tools need tool reproduces issues firefox ie mobile browsers build tool typescript javascript functionality batarangle engineers use platforms development mode bar bottom page app contain information needed debug production mode send crashes dashboard engineers use data reproduce issues thanks", "num": "7875", "d": "4/2016"}, {"title": "routing broken back button os x safari version", "body": "demo uses simple quiz application routing part steps reproduce start quiz navigate forward click back button notice component render properly see plunker current behavior usage browser back button cause component rerender properly expecteddesired behavior usage browser back button cause component rerender properly see google chrome behavior expected behavior information also posted question stack overflow additional context", "num": "7873", "d": "4/2016"}, {"title": "ngfor creating elements chrome", "body": "real strange problem project chrome canary normal chrome mac maybe someone tip problem nt occur safari firefox also chrome linux windows latest version macos problem reproduced wwwhowcanieu project written angular finished page shown safari chrome looks screenshot also see content created ngfor directive safari code works second problem see following screenshot fields value comes object component bound two way binding safari fields prefilled chrome click fields see values idea problem also removed cssframework materialcss use project problem wondering problem chrome mac two different macs since think combination also used developers google also installed fresh version chrome without extensions result app transpiled webpack babel problem also non minified code would interesting mac user problem yes problem could thanks", "num": "7871", "d": "4/2016"}, {"title": "seems way abort http requests", "body": "hi tried unsubscribe dobouncetime xhr requests completed want abort http request user example change id video previous request must aborted get requests get status ok said must cancelled exept last one", "num": "7866", "d": "4/2016"}, {"title": "http observable completed function firing", "body": "hi encountered problem using http thought third function supposed called whatever happens success error http request finished like method promises never called angular beta tried using function returned promise anyone encounter problem", "num": "7865", "d": "4/2016"}, {"title": "directives applied according condition", "body": "steps reproduce minimal demo problem current behavior insertsuses directive matter condition true false expecteddesired behavior respect condition", "num": "7862", "d": "4/2016"}, {"body": "afaik altrouter nt support navigation parent yet", "d": "4/2016"}, {"body": "maybe commit adds relative navigation merged yesterday next release", "d": "4/2016"}, {"body": "built release master commit already version also think support yet marked feature", "d": "4/2016"}, {"body": "use onclick handler element nt think routerlink allow nonanchor elements", "d": "4/2016"}, {"body": "hmm nt know would nice cleaner way react click events using used activate auxroute currently components dependency router makes pretty easy unittest calling would need inject component make available membervariable makes way harder test", "d": "4/2016"}, {"body": "think correct wrap element anchor element retains proper anchor behavior eg opening new tab etc", "d": "4/2016"}, {"body": "case wrapping anchor elements leads quite lot problems element want use trigger activating auxroute quite stuff like button delete element etc clicking element auxroute open jiralike making whole element anchor eg activates buttonhover effect hovering element etc agree cases cleaner use real link instead div also see usecases divs activate another route hmm talking maybe really edgecase works workaround", "d": "4/2016"}, {"body": "seeing related content projection bug component render content directive matches component selector directive declared component", "d": "4/2016"}, {"body": "cc tbosch", "d": "4/2016"}, {"body": "seeing issue instead ngclass", "d": "4/2016"}, {"body": "regression looking", "d": "4/2016"}, {"body": "stack trace put test error error rejection baseexception message unsupported number argument pure functions stack error unsupported number argument pure functions new baseexception objectcreatepureproxy compileviewcreateliteralarray asttoirvisitorvisitliteralarray literalarrayvisit asttoirvisitorvisitpropertywrite propertywritevisit astwithsourcevisit objectconvertcdstatementtoir compileeventlisteneraddaction arrayforeach native objectcollecteventlisteners viewbindervisitorvisitelement elementastvisit arrayforeach native objecttemplatevisitall objectbindview viewcompilercompilecomponent runtimecompilercompilecomponent", "d": "4/2016"}, {"body": "problem empty array array non empty problem fix still", "d": "4/2016"}, {"body": "fyi current new router deprecated new alt router implemented instead nt know impact angular version router based angular new router code unlikely developed things may change", "d": "4/2016"}, {"body": "aurrelhebert would mind report repo website smile", "d": "4/2016"}, {"body": "nt needs close tags xhtml thing", "d": "4/2016"}, {"body": "captaincodeman void element selfclosing tag optional void elements", "d": "4/2016"}, {"body": "thanks", "d": "4/2016"}, {"body": "pkozlowskiopensource optional using selfclosing tags required xhtml void means element ca nt contain content ie xhtml vs obviously selfclosing would likely apply", "d": "4/2016"}, {"body": "working index file tutorial selfclosing work html code solution provided tag base closed delete like written tutorial nt work neither mozilla chrome", "d": "4/2016"}, {"body": "optional using tutorial using nt", "d": "4/2016"}, {"body": "opened new issue right place", "d": "4/2016"}, {"body": "tutorial using nt misses doctype", "d": "4/2016"}, {"body": "intended consequence recent refactoring enable codegen find exact commit link think actually bug fix directives never components never returned instances directives proper way", "d": "4/2016"}, {"body": "commit", "d": "4/2016"}, {"body": "cexbrayat ok closing working intended", "d": "4/2016"}, {"body": "sure checking normal thank taking time verify", "d": "4/2016"}, {"body": "reproduce plunker", "d": "4/2016"}, {"body": "zoechi sure see code put post understand plunker web development code mobile application using nativescript angular maybe issue nt come angular", "d": "4/2016"}, {"body": "guess updated tutorial yesterday new beta see says", "d": "4/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "yup change part changelog", "d": "4/2016"}, {"body": "packagejson else missing", "d": "4/2016"}, {"body": "might related", "d": "4/2016"}, {"body": "zoechi sorry think related method fromarray disappeared observabledts downgraded back depends rxjs version still working", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "tried", "d": "4/2016"}, {"body": "fjozsef yes tried sadly makes difference starting think somehow related visual studio created sample project outside magically works", "d": "4/2016"}, {"body": "maybe use built typescript version old think read somewhere one reason angular stayed beta long needed upgrade typescript version first guess need typescript higher", "d": "4/2016"}, {"body": "ristaaf good point however compiling ts files using gulp packages", "d": "4/2016"}, {"body": "change", "d": "4/2016"}, {"body": "problem method import nt work", "d": "4/2016"}, {"body": "chrisprolls must imported", "d": "4/2016"}, {"body": "import tried suggested method error", "d": "4/2016"}, {"body": "thanks suggestions tried options found ended least little success gave visual studio opened project another ide changed good start managed get compiling got back visual studio compilation using gulp still fine intellisense still messed method found observable definitelly problem", "d": "4/2016"}, {"body": "hmm turns ca nt use need replacement anybody knows solution", "d": "4/2016"}, {"body": "need new rxjs anybody help please", "d": "4/2016"}, {"body": "virtualvoid works import observable rxjsobservable import rxjsaddobservablefrom import rxjsaddoperatormap import rxjsaddoperatorzipall observable thisresourcestaffs map resourcestaff resourcestaff index number gt zipall subscribe note removed see use tried imports functionality issues config case curious packagejson tsconfigjson", "d": "4/2016"}, {"body": "please create plunker reproduce", "d": "4/2016"}, {"body": "test url nodemodule local url run", "d": "4/2016"}, {"body": "seems related nt tried older versions plunker link linked comment similar binding example workign", "d": "4/2016"}, {"body": "like problem solving thank u constructor public loader dynamiccomponentloader public elementref viewcontainerref systemimport testchildcomp gt thisloaderloadasroot childcomp child thiselementrefinjector compref gt cmprefinstancetest somedata comprefinstancetest asdfasdfasdfasdfa comprefchangedetectorrefdetectchanges return compref", "d": "4/2016"}, {"body": "racktime think close issue", "d": "4/2016"}, {"body": "probably localtime utc issue somewhere works fine north america strangely two dates show different timezones run", "d": "4/2016"}, {"body": "im us est im seeing following preview pane plunker sample formatted mar actual thu apr eastern daylight time formatted apr actual fri apr eastern daylight time leap years although well hence included two dates", "d": "4/2016"}, {"body": "adding hour time returns following hope helps", "d": "4/2016"}, {"body": "see chrome guess pc nt sure hedging bets", "d": "4/2016"}, {"body": "europechrome see plunkr formatted apr actual thu apr cest formatted apr actual fri apr cest alternate extra hour formatted apr actual thu apr cest", "d": "4/2016"}, {"body": "using get reference element view therefore wo nt fully initialized work", "d": "4/2016"}, {"body": "thanks lot", "d": "4/2016"}, {"body": "see maybe related dup happens nt read issues sorry", "d": "4/2016"}, {"body": "also seeing issue app also heavily dependent onpush markforcheck completely broken", "d": "4/2016"}, {"body": "going test hopes team fixed guess luck", "d": "4/2016"}, {"body": "almost components uses push detection think much predictable without issue fixed stuck", "d": "4/2016"}, {"body": "new dependency rxjs beta angular yet upgraded need install add systemjs config want use later version rx docs", "d": "4/2016"}, {"body": "ok work rxjs thanks", "d": "4/2016"}, {"body": "clamarque think close issue", "d": "4/2016"}, {"body": "provide information github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "thnx zoechi", "d": "4/2016"}, {"body": "docs could nt find", "d": "4/2016"}, {"body": "tchoulihan nt look like documented document issues maintained", "d": "4/2016"}, {"body": "thanks open issue", "d": "4/2016"}, {"body": "sounds like using version github npm distribution correct", "d": "4/2016"}, {"body": "thanks getting back robwormald using npm distribution however currently using production flag npm install matters also removed symbol npm version wanted stay version explicitly could change things regards", "d": "4/2016"}, {"body": "design every time angular gets notified event async call completed runs change detection devmode twice every time calls bound functions check returns value different one either bind click handler use assign values property class bind class instead", "d": "4/2016"}, {"body": "thanks info", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "tested locally still issue", "d": "4/2016"}, {"body": "found source problem error pubspec file pubspec last version project looks last comma left time additional entry point cause troubles fault mine probably never make mistake opinion something wrong situation project totally work dartium without warnings totally breaks chrome bizarre error messages", "d": "4/2016"}, {"body": "think making mistake think plnkr working beta pure coincidence elementref supposed provided manually let angular directive nt provided either directivecomponent goes property another thing want call child parent query eg viewchild finally moved changed plnkr working hopefully made clear", "d": "4/2016"}, {"body": "nt actually use directive markup directive used parent component child component injects using component always beneath component using directive injecting works great however testing component test isolation need set dependency injector know directive problem finding longer added dependency case created directive call popupanchor put root element injects child component injects popupanchor calls functions popupanchor add components tooltips callouts dialogs", "d": "4/2016"}, {"body": "experienced similar issue solved providing mock elementref implementation class mockelementref implements elementref nativeelement describe componenttotest gt beforeeachproviders gt provide elementref usevalue new mockelementref componenttotest could something elementref nativeelement constructor due following commit", "d": "4/2016"}, {"body": "see edit sorry answered automatically issue related files nt bundles seems distributed use npmcdn though plnkr working see indexhtml distribute files though think", "d": "4/2016"}, {"body": "helpful thanks ericmartinezr issue stay open files distributed angular added bundles", "d": "4/2016"}, {"body": "stringham sure hit users using bundles specially umd ones", "d": "4/2016"}, {"body": "cc juliemr best build testing bundle", "d": "4/2016"}, {"body": "base zonejs included yeah apr rob wormald notifications githubcom wrote cc juliemr best build testing bundle receiving mentioned reply email directly view github", "d": "4/2016"}, {"body": "zonejs part angularpolyfills nt think part umd systemjs bundles probably nt would break format testing boundles could instead create something like angulartestingpolyfills", "d": "4/2016"}, {"body": "updated export new common module platform files need updated bundles regenerated", "d": "4/2016"}, {"body": "workaround devs meantime manually edit bundle files line insert line common webpackrequire bundle files line number might little different got us past error getting module app still broken promising anything", "d": "4/2016"}, {"body": "pr take care", "d": "4/2016"}, {"body": "hi issue already mentioned", "d": "4/2016"}, {"body": "issue nt details would help us reproduce problem sounds similar going close one duplicate reproduce scenario believe one different please open new issue minimal reprodice scenario plunker", "d": "4/2016"}, {"body": "yes seems duplicate tx", "d": "4/2016"}, {"body": "intent provide default case nt route defined path whether top level route child route also used making linking child routes easier without define default route router link array change home path works designed", "d": "4/2016"}, {"body": "thank brandon", "d": "4/2016"}, {"body": "also problem beta everything works perfectly fine upgrading app beta working anymore", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "nt depreciated favor contentchildrencontentchild", "d": "4/2016"}, {"body": "nt know deprecation however also happens contentchildren plunker replicates assume bug caused change contentchilren viewchildren container logs template elements although descendants set false", "d": "4/2016"}, {"body": "seems effect selector parameter works normal component types though", "d": "4/2016"}, {"body": "sort maybe related", "d": "4/2016"}, {"body": "turns workaround nt work static reflector either masked real issue tobias almost static reflector fixed included", "d": "4/2016"}, {"body": "changelog updated contains related info seen work updating examples guess merged soon need change arguments transform method parameter nt array anymore value passed individual parameter please close issue github issues bug reports support requests use channels", "d": "4/2016"}, {"body": "transform query string args query querylength return query ask another time key return last value thisequals query thislastkey amp amp thisequals args thislastparams return thisvalue", "d": "4/2016"}, {"body": "tried inject might key di still super class concrete implementation reflectiveinjector", "d": "4/2016"}, {"body": "tried inject cast work instantiating component dcl error thrown expanded plunker example dcl component loading nt work app looks like injected", "d": "4/2016"}, {"body": "running execution able identify error referencing param indeed undefined due mistake issue injector solved casting thanks", "d": "4/2016"}, {"body": "nt closer look yet assume cast necessary access static members cteate new instance necessary use name concrete implementation", "d": "4/2016"}, {"body": "indeed cast necessary run function using using intellisense completion", "d": "4/2016"}, {"body": "anyone problem right error", "d": "4/2016"}, {"body": "line directive timebookings employee employee located file bookinglistts want use code timebookings locate problem timebookingsts", "d": "4/2016"}, {"body": "tried little bit code found error occurs directives input element component section perhaps something something must changed vom go back everything works fine", "d": "4/2016"}, {"body": "guehmann impossible say share repo project take look", "d": "4/2016"}, {"body": "ericmartinezr share please help", "d": "4/2016"}, {"body": "guehmann create repository project github able clone would guess problem version material probably yet upgraded", "d": "4/2016"}, {"body": "thank create let done know material build beta perhaps error thanks", "d": "4/2016"}, {"body": "ericmartinezr hi repo comes visual studio thank", "d": "4/2016"}, {"body": "guehmann impossible project big ca nt make run run get thousands errors nt version vs probably somebody owns copy help recommendation go back wait new release released compatible beta see two issues error points nt seem part core part core problem still really sorry ca nt provide help", "d": "4/2016"}, {"body": "thank much help als decribed traf issue mentioned thanks jens estoy en camino um schrieb eric martinez notifications githubcom guehmann impossible project big ca nt make run run get thousands errors nt version vs probably somebody owns copy help recommendation go back wait new release released compatible beta see two issues error points flattenstyles nt seem part core problem must really sorry ca nt provide help receiving mentioned reply email directly view github", "d": "4/2016"}, {"body": "thank much help like mentioned go back first read issues posted many thanks best jens", "d": "4/2016"}, {"body": "design included want override custom come afterwards order significant want override please close issue", "d": "4/2016"}, {"body": "alright thanks", "d": "4/2016"}, {"body": "zoechi even would possible perhaps add sort sensible warning console log letting know custom location strategy overridden default one would saved couple hours day", "d": "4/2016"}, {"body": "ronifrantchi everything almost possible worth different question call anyway angular know want override types variables referring types meaning di would need specialcasing every type likely overridden someone quite angular team member", "d": "4/2016"}, {"body": "zoechi true thought one would provide library strategies intended used defaults perhaps assert override custom providers information spet log one keep track strategy finally set thought", "d": "4/2016"}, {"body": "really want implemented probably create new issue one closed nobody monitor might worth documented prominently understood di works behavior surprising way want see effectively provided inject type see get like", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "bug already reported closing duplicate thnx ericmartinezr", "d": "4/2016"}, {"body": "error example ca nt find upgraded component component upgraded another instance", "d": "4/2016"}, {"body": "yjaaidi chance going ngconf using upgrade adapter joeeames really good ideas topic pascalprecht going run workshop think may part workshop livestreamed going ngconf probably publish lot materials", "d": "4/2016"}, {"body": "hi jeffwhelpley thanks quick response would love join ngconf french riviera makes bit difficult join great well wait materials joeeames pascalprecht also interested discussions concerning ways upgrading think clue success", "d": "4/2016"}, {"body": "yjaaidi would support making singleton instance use case multiple instances far easy create multiple instances wrong time optimized majority use case majority fyi yjaaidi publishing course upgrading pluralsightcom coming weeks", "d": "4/2016"}, {"body": "right ca nt imagine multiple instances scenario talking upgrading angularjs apps meant make multiple apps coexist page singleton documentation examples update reader written upgrade examples thanks joe", "d": "4/2016"}, {"body": "working teropa update official documentation well items make sure singleton issue clearly communicated", "d": "4/2016"}, {"body": "yeay angularjs teacher coach get touch guys interested issues encounter beginners example naively calling bootstrap upgradeadapterbootstrap produces notthathumanreadableerror like one provider scope scope maybe implement something triggers explicit error calling something like bootstrap upgradeadapterbootstrap ca nt called make choice p open another issue make pull request", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "could inject component directive wed apr frank pepermans notifications githubcom wrote according change log appviewmanager renamed viewutils mere private utility service however using appviewmanagergetcomponent obtain component reference elementref would need achieve following component selector say selector mycomponent directive placed upon components mydirective html looks following mydirective need reference mycomponent component instance another better way happy adapt code receiving subscribed thread reply email directly view github", "d": "4/2016"}, {"body": "would work component could anything really case component resolve provider instance value directive inject dynamically", "d": "4/2016"}, {"body": "tbosch think would work type statically known directive directive added different components would one inject", "d": "4/2016"}, {"body": "tbosch comment alternative getting component elementref dropped let know start reworking solution", "d": "4/2016"}, {"body": "workaround yet directive assumes host component specific interface without feature workaround develop directive component implements interface option", "d": "4/2016"}, {"body": "component static nt kind defeat whole point directives would nt move whatever directive right known component", "d": "4/2016"}, {"body": "captaincodeman idea instead repeating implementation functionality every component follows specific interface would directive add functionality simplified example say component simple panel display information selected data three components components following properties previous version could write simple directive receive instance input take care binding needed properties even supply additional services debugging new version course still possible less elegant way eyes course relatively simplified scenario hope able show rational behind receiving component directive without actually knowing exact class interface", "d": "4/2016"}, {"body": "yes directive supposed add behavior whatever component attached longer done makes kind pointless behavior could moved class pulled component instead things statically defined", "d": "4/2016"}, {"body": "captaincodeman right hope angular team provide alternative directive approach much elegant", "d": "4/2016"}, {"body": "exactly using directives way elegantly allow composition enhance components case state management component must implement certain interface directive asserts component indeed implements thing hope still possible", "d": "4/2016"}, {"body": "duplicate", "d": "4/2016"}, {"body": "plunker repo", "d": "4/2016"}, {"body": "cagataycivici nt think binding angular property bindings binding property also aliased works expected got test prove understand worked would say chance sure want support long run case got proper solution works", "d": "4/2016"}, {"body": "buy thank also suggest style eg style userstyle instead attrstyle userstyle", "d": "4/2016"}, {"body": "also suggest style would argue one bind properties exist styles nt think browsers let set property probably use binding", "d": "4/2016"}, {"body": "thank", "d": "4/2016"}, {"body": "looks like dup", "d": "4/2016"}, {"body": "sure nt instead appbasehref moved would explain error", "d": "4/2016"}, {"body": "captain said see changelog well fixed", "d": "4/2016"}, {"body": "fyi npm ref would get note caret prefix may give higher version", "d": "4/2016"}, {"body": "exactly captaincodeman suspicion api changed caught fact using npm caret declaration earlier everything running smoothly thanks ericmartinezr captaincodeman quick response", "d": "4/2016"}, {"body": "try import appbasehref", "d": "4/2016"}, {"body": "work", "d": "4/2016"}, {"body": "captaincodeman tried inject exception provider thrown", "d": "4/2016"}, {"body": "sorry renamed injector thought might work recommend using service stash access parent information often want resolve data url id provides perfect place accessing routeparams constructor generally bad practice imo wo nt always reflect changes routed component uses canreuse components bit brittle think better handle routeronactivate routeronchanges methods instead instructions get params may help parent params though ca nt remember instruction ancestors allows reuse pattern approach though", "d": "4/2016"}, {"body": "captaincodeman first really understand keeping hard track path variables parent variables however could deliberate bit routeronchanges track route params url like document yet thanks", "d": "4/2016"}, {"body": "btw could extract param router instruction recursively tricky could break time soon keep last option", "d": "4/2016"}, {"body": "yeah gaps api comes ease use especially comes parent child communication knows new new alt router may improve things got method names bit mixed onchanges regular component inputs onreuse routed component inputs nothing like consistent nothing like method need also need handle onactivate well course firsttime settings", "d": "4/2016"}, {"body": "captaincodeman thanks catching parameters saved app state seems getting complicated since need track changes use onreuse true", "d": "4/2016"}, {"body": "normally canreuse true otherwise screen flickers params change pass instruction routeronactivate routeronreuse function process typically want happen load something based url parameter whether first time loaded time", "d": "4/2016"}, {"body": "captaincodeman yes used capture parameters routeronxxx interface actually feels much natural already indeed constructor shall used purpose found quite popular answers stackoverflow amp github issues got original solution", "d": "4/2016"}, {"body": "tue apr pm babeaver notifications githubcom wrote captaincodeman yes used capture parameters routeronxxx interface actually feels much natural already indeed constructor shall used purpose found quite popular answers stackoverflow amp github issues got original solution receiving subscribed thread reply email directly view github", "d": "4/2016"}, {"body": "could please post code looks instead original thanks", "d": "4/2016"}, {"body": "even useful case component event handler nt update component directly using async task xhr promise settimeout etc cases way synchronous detectchange wait async task complete case fixtureisstable would provide good way wait component get updated current way component expose promise tests use good solution", "d": "4/2016"}, {"body": "yes bug simplified following works work ie ca nt reference variable declared", "d": "4/2016"}, {"body": "looks like", "d": "4/2016"}, {"body": "zoechi may related however change version gist work sure related", "d": "4/2016"}, {"body": "use directive stop expression evaluated name", "d": "4/2016"}, {"body": "based docs could find appears limited interpolation need something content projection level something applies entire component content also prevent processing including things like etc complete example would like output raw unevaluated html", "d": "4/2016"}, {"body": "doubt really need html well html sounds like want html appear screen case using html encoded", "d": "4/2016"}, {"body": "doubt want html probably want html appear screen case using exactly", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "cc thso", "d": "4/2016"}, {"body": "renamed renamed mere private utility service seems still exist", "d": "4/2016"}, {"body": "ohh works asynchronous way supposed", "d": "4/2016"}, {"body": "able reproduce error way easier problem asyncevent triggers another asyncevent case typeahead async valuechanges execution triggers debouncetime following test also fails calculated endtime", "d": "4/2016"}, {"body": "experienced many errors like well beta hacky workaround add statements", "d": "4/2016"}, {"body": "looks like browser issue add workaround seems caused setting initially", "d": "4/2016"}, {"body": "also reported issue microsoft tried workaround success", "d": "4/2016"}, {"body": "tried edge worked check maybe something wrong", "d": "4/2016"}, {"body": "managed figure problem due fact another timeout run within constructor socket class setinterval thats besides point think zonejs async clearly specify running tasks still running upon moment task timesout managed figure adding consolelog line within asynctestjs zonejs think already covers juliemr mistaken", "d": "4/2016"}, {"body": "schippie component provides function function sends shows message completion message gets hidden seconds settimeout get error settimeout catched tried load inject done function test get done exported solved problem think nested async code unusual", "d": "4/2016"}, {"body": "killercodemonkey way fixed removing second settimeout would also advice right places code trigger multiple timeouts either remove timeouts mock scope unit test currently moved setinterval timeout call socket backend socket backend always gets mocked tests never communicate directly web socket running tests make duration timeouts configurable like socketspects well tests instance throw error reply pushed observable timeout throws error x amount mss case adjust timeout every tests like", "d": "4/2016"}, {"body": "also found issues beta related changedetectionstrategyonpush using strategy app seems buggy", "d": "4/2016"}, {"body": "additional examples using observables async pipes ngfor onpush works ngfor onpush broken ngfor onpush works ngfor onpush parent components works", "d": "4/2016"}, {"body": "noticed well wondering indeed regression fix incorrect previous behavior idea onpush strategy manually control update ui right case nt responsible requesting update like nt sure think indeed fix previously incorrect behavior", "d": "4/2016"}, {"body": "noticed well wondering indeed regression fix incorrect previous behavior well desired behavior behave consistently regardless ngfor usage idea onpush strategy manually control update ui right nope understanding onpush used component dirty checked input changes event fired", "d": "4/2016"}, {"body": "good points forecast distant future", "d": "4/2016"}, {"body": "think right radoslavpetranov fix correct point view onpush strategy work beta facing situation calling changedetectorrefmarkforcheck update view plain example works stopped working app components would great know changed change detection mechanism desired behavior bug", "d": "4/2016"}, {"body": "worth entire application broken use heavily onpush detection nothing updating even underline redux store changes hope team aware think enough people moved yet soon enough going make serious noise major show stopper renders framework unusable", "d": "4/2016"}, {"body": "also experiencing problems related changedetection onpush comes updates triggering within async pipes though seems really inconsistent easily reproduce using plunkr situation multiple async pipes work one fails horribly update value changed debugged async pipe updated correct one never reflected digest cycle happens code observable work html join login instead value userresourceisloggedin async always null figured update discovered even affects click actions refuse work add changedetectionstrategyonpush figure problem solution fixes isloggedin call happening within component instead something like properties component change digest cycle fixes problem uncover next one click actions work within component changedetectionstrategyonpush componentts componenthtml html", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "changelog commits indicate issue worked beta release guessing went back actually looking commits beta really clear could changed changedetection system", "d": "4/2016"}, {"body": "already pr", "d": "4/2016"}, {"body": "throws error added nothing changed", "d": "4/2016"}, {"body": "delagen nt need provide appbasehref using hashlocationstrategy issue must imports router works perfectly", "d": "4/2016"}, {"body": "changelog landedyay", "d": "4/2016"}, {"body": "see moved", "d": "4/2016"}, {"body": "read changed error forgot put code update changed code reflect fact location changed fact location injected actually used", "d": "4/2016"}, {"body": "got error calling loadnexttolocation dynamiccomponentloader elementref parameter changed type viewcontainerref injected used instead fixed issue see routeroutlet constructor also takes viewcontainerref passing elementref perhaps try changing", "d": "4/2016"}, {"body": "thank pietie solved issue docs nt updating vscode idea changed", "d": "4/2016"}, {"body": "also looking example trying get location element ref change viewcontainerref exactly sure translates particular ref vs whole view container constructor private loader dynamiccomponentloader private elementref elementref open inputeventname click dblclick inputeventname thiseventbinding return false constructor private loader dynamiccomponentloader private viewcontainerref viewcontainerref open inputeventname click dblclick inputeventname thiseventbinding return false gives undefined evaluating", "d": "4/2016"}, {"body": "brunoamsilva give example ended fixing routeroutlet problem thanks", "d": "4/2016"}, {"body": "first argument router outlet viewcontainerref ref extension routeroutlet pass viewcontainerref first argument instead elementref using brunoamsilva code snippet typescript export class loggedinrouteroutlet extends routeroutlet private publicroutes array", "d": "4/2016"}, {"body": "thanks ericmartinezr", "d": "4/2016"}, {"body": "using modules importing locationstrategy yes take look basically locationstrategy moved", "d": "4/2016"}, {"body": "nt use ts importing anything like", "d": "4/2016"}, {"body": "error raised calling bootstrap main app component passing along applicationwide providers one providers undefined import issue caused would suggest looking defining providers see valid", "d": "4/2016"}, {"body": "reproduction required eg plnkr repro fiddle etc", "d": "4/2016"}, {"body": "reproduce plnkr somewhere else apphtml appjs directives learninput learninputjs localization engjson geojson pages auth authhtml authjs authscss forgothtml forgotjs learn learnhtml learnjs learnscss tasks dictation dictationhtml dictationjs translate translatehtml translatejs wizard steps secondhtml secondjs thirdhtml thirdjs wizardhtml wizardjs wizardscss providers appsettingsjs auth authjs configjs learn learnproviderjs learnservicejs pipesjs storage storagejs validator messagesjs validatorjs theme appcorescss appiosscss appmdscss appvariablesscss appwpscss", "d": "4/2016"}, {"body": "error also raised use routerproviders bootstrap", "d": "4/2016"}, {"body": "think export locationstrategy hashlocationstrategy issue ericmartinezr import classes webpack builds", "d": "4/2016"}, {"body": "giegling copy amp pasting project code plnkr anyway error passing something undefined bootstrap everyone suggested check paths little cough breaking changes landed", "d": "4/2016"}, {"body": "breaking changes landed one defined changelogmd", "d": "4/2016"}, {"body": "delagen actually yes understand say important changes nt appear changelog nt mean nt land see new issuesprs people already reported sending prs update changelog", "d": "4/2016"}, {"body": "webpack builds broken due export locationstrategy others variable", "d": "4/2016"}, {"body": "try changing also see ps added breaking changes", "d": "4/2016"}, {"body": "nt import anything connection router", "d": "4/2016"}, {"body": "use ready webpack build added umd builds", "d": "4/2016"}, {"body": "giegling nobody knows going everyone guessing reproduce plnkr paste code gist pastebin whatever never solve issue nt help anyone help", "d": "4/2016"}, {"body": "try use plnkr build simply access platformcommon namespace ngplatformcommon global variable correct file rebuild", "d": "4/2016"}, {"body": "throws error added nothing changed", "d": "4/2016"}, {"body": "unannounced breaking change also token must defined error upgrading using typescript delete nodemodules directory npm install error gone importing location strategies like import locationstrategy hashlocationstrategy without deleting nodemodules line would nt compile", "d": "4/2016"}, {"body": "importing main appjs", "d": "4/2016"}, {"body": "facing problem upgrade none tips worked change import path locationstrategy hashlocationstrategy event deleting nodemodules directory code works perfect", "d": "4/2016"}, {"body": "seems override locationstrategy", "d": "4/2016"}, {"body": "changing solved compilation issue thanks mattcarp", "d": "4/2016"}, {"body": "noticed something else use something like hello modelfirstname class myinput classname inputs constantly sync text interpolation also updated moment switch model changes require markforcheck order ui get updated looks like really bug fix regression someone confirm indeed desired behavior reproduce behavior", "d": "4/2016"}, {"body": "radoslavpetranov sounds like", "d": "4/2016"}, {"body": "zoechi thanks yeah looks like post issue hijack one", "d": "4/2016"}, {"body": "ericmartinezr thanks support cause tsconfigjson issue fine npm packages contains incompleted umd builds rebuild inaccessible namespace", "d": "4/2016"}, {"body": "umd builds fixed using ionic independent angular install may need wait untilionic supports due import changes issues mentioned changing import help", "d": "4/2016"}, {"body": "error uncaught token must defined using beta working project downgraded meantime till issue resolved", "d": "4/2016"}, {"body": "nathanwalker thanks", "d": "4/2016"}, {"body": "mattcarp thank resolved token must defined upgrade", "d": "4/2016"}, {"body": "nathanwalker explains upgrade using ionic app waiting new ionic release", "d": "4/2016"}, {"body": "might want post issue ionic repo encourage update", "d": "4/2016"}, {"body": "root cause fixed", "d": "4/2016"}, {"body": "please provide details version upgrade version browsers tried project configuration look like", "d": "4/2016"}, {"body": "packagejson name version scripts postinstall npm run typings install lite liteserver gulp gulp start concurrent npm run gulp npm run lite typings typings license isc dependencies reflectmetadata rxjs systemjs zonejs devdependencies autoprefixer cssnano concurrently gulp gulpextreplace gulpimagemin gulppostcss gulpsourcemaps gulptypescript gulpuglify liteserver postcss postcssscss precss typings tsd", "d": "4/2016"}, {"body": "firefox esr", "d": "4/2016"}, {"body": "html mybizzo systemconfig map app app packages app format register defaultextension js defaultextension js defaultextension js systemimport appboot null consoleerrorbind console cdata documentwrite lt script replace host locationhostname gt loading", "d": "4/2016"}, {"body": "bootstrap import bootstrap import provide import appcomponent appcomponent import backend backendservice import comuteservice comutesevice import materialproviders sidenavservice import routerproviders bootstrap appcomponent backend routerproviders materialproviders sidenavservice comuteservice", "d": "4/2016"}, {"body": "rolled back works", "d": "4/2016"}, {"body": "problem follow issue", "d": "4/2016"}, {"body": "take look changelog injectasync method beta use instead use testwrapper need testzone", "d": "4/2016"}, {"body": "know updated test still test import hello hellojs import describe expect async inject testcomponentbuilder describe hello component gt render hello async inject testcomponentbuilder tcb gt tcbcreateasync hello fixture gt fixturedetectchanges const footer fixturenativeelement expect helloqueryselector textcontenttrim tobe hello", "d": "4/2016"}, {"body": "tcbcreateasync creates already async context need wrap test async works", "d": "4/2016"}, {"body": "right thanks", "d": "4/2016"}, {"body": "hmm sure got something wrong end see tests passing failing example one green javascript fail inject testcomponentbuilder tcb testcomponentbuilder gt const html gives", "d": "4/2016"}, {"body": "yeah already tried trillions combinations either get tests green even nt", "d": "4/2016"}, {"body": "think longer needed", "d": "4/2016"}, {"body": "yep tested deeper tcbcreateasync seems wrap stuff async call simple inject wants run synchronously waiting", "d": "4/2016"}, {"body": "right ca nt make simplest test fail still digging see timing issue waiting sth else", "d": "4/2016"}, {"body": "right", "d": "4/2016"}, {"body": "think stay changelog says maybe problem inital one use instead edit", "d": "4/2016"}, {"body": "get calls replaced", "d": "4/2016"}, {"body": "ok see going seems like created part need include part karma setup well shortly push complete example open pr breaking changes update", "d": "4/2016"}, {"body": "pkozlowskiopensource nt part nt include files zone directly well see currently part thought zonestuff", "d": "4/2016"}, {"body": "well added karma files still error adding test made work fails", "d": "4/2016"}, {"body": "micaelmbagira got edit updating latest zonejs karma config files paths loaded karma pattern nodemodulessystemjsdistsystemjs included true watched true pattern nodemodulesrxjsbundlesrxjs included true watched true pattern included true watched true pattern included true watched true pattern included true watched true pattern nodemoduleszonejsdistzonejs included true watched true pattern nodemoduleszonejsdistasynctestjs included true watched true pattern karmatestshimjs included true watched true", "d": "4/2016"}, {"body": "ericmdantas twice zone zonejs would remove let zone everything", "d": "4/2016"}, {"body": "ericmartinezr luck remove let get stack belongs karma way", "d": "4/2016"}, {"body": "got finally working side right karmaconfjs test correctly fails", "d": "4/2016"}, {"body": "choeller good setup worked well see full diff setup info karma setup needs definitively added changelog open pr", "d": "4/2016"}, {"body": "pkozlowskiopensource real async tests also add fakeasynctest otherwise got", "d": "4/2016"}, {"body": "choeller indeed also put ran well managed figure really part changelog", "d": "4/2016"}, {"body": "even making suggested changes still see test errors among others error make xhrs within fake async test although xhrs tests", "d": "4/2016"}, {"body": "andrashatvani session karma file", "d": "4/2016"}, {"body": "ericmdantas use browserify therefore pretty short", "d": "4/2016"}, {"body": "also seems broken within new zones already added another issue", "d": "4/2016"}, {"body": "andrashatvani suggest nt nt know", "d": "4/2016"}, {"body": "ok changelog updated proper instructions karma setup via closing one", "d": "4/2016"}, {"body": "jsts nt actually main language guess something like work ts routeronactivate new promise resolve reject gt thissubscription servicegetdata observablesubscribe val gt resolve error gt reject resolve anyway cancelrequest thissubscription thissubscriptionunsubscribe github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "think handle click good practice plunk please note link outside component click link click index page link click link navigation happens route waiting resolve seems wrong", "d": "4/2016"}, {"body": "hi also stumbled breaking change explained already added pull request missing changes", "d": "4/2016"}, {"body": "location stuff", "d": "4/2016"}, {"body": "part changelog", "d": "4/2016"}, {"body": "expression used initialize constant constructor call nt represent ast variable value referenced would work believe const exported", "d": "4/2016"}, {"body": "tried adding declaration still entry reference decorator", "d": "4/2016"}, {"body": "mhevery talking changing providers object literals like probably easier maybe related see last comment sickle issue produce annotations requires desugar decorators similar object literals", "d": "4/2016"}, {"body": "see also need change reflectors read data way correct suppose need make decision trying fix issue", "d": "4/2016"}, {"body": "function call lambda would still problem would treat forward similar currently treat constexpr would need know really translates reference propose following encode constructor calls ast reference constructor much like decorators already special case calls functions name passed zero parameter lambda expression simplifying body lambda add code staticreflector call constructor would allow original declaration work well supporting proposed change change could remove collecting constructor invocations constructing", "d": "4/2016"}, {"body": "duplicate", "d": "4/2016"}, {"body": "see fixed master afaik beta see issue workarounds", "d": "4/2016"}, {"body": "ericmartinezr thanks letting know", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "ericmartinezr agree issue", "d": "4/2016"}, {"body": "interesting opinion discussion type nt belong github issues really see", "d": "4/2016"}, {"body": "lol guy opened account today", "d": "4/2016"}, {"body": "maybe would time look around happening take issue seriously", "d": "4/2016"}, {"body": "well friend renting good want speed process start contributing negative wo nt help reach people", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "thanks sorry duplicate", "d": "4/2016"}, {"body": "applequist good", "d": "4/2016"}, {"body": "workaround implemented guess eventually provide custom controlvalueaccessor", "d": "4/2016"}, {"body": "thanks look g\u00fcnter z\u00f6chbauer notifications githubcom workaround implemented guess eventually provide custom controlvalueaccessor receiving authored thread reply email directly view github", "d": "4/2016"}, {"body": "think information required debug issue create plunker", "d": "4/2016"}, {"body": "kidding map call something incorrectly calling nt activate someone else calls subscribe would still argue design mockbackend looked though", "d": "4/2016"}, {"body": "actually since technically twoway data binding really boils property binding event binding makes totes sense fri apr pm alex ewerl\u00f6f notifications githubcom wrote current behavior value interpolation nice industry standard property value data binding nice similar would set object property js event handler event handlers nice given functions use paranthesis ngmodel property think syntax expressed nicer specially nt really sum conventions function property desired behavior ngmodel property data binding pretty much like one data binding property property think easier remember information know probably late change syntax respect would virtually impossible change angular released rushed write receiving subscribed thread reply email directly view github", "d": "4/2016"}, {"body": "literally sums debated endlessly wo nt changed point sorry", "d": "4/2016"}, {"body": "mhevery could please take look", "d": "4/2016"}, {"body": "fyi able resolve issue classes threw exception importing main library export file main file specify itemservice exports replaced import directly point itemservice class instead everything worked probably bad practice anyway setup project foo bar baz declared library files part foodart main export file gt library foo export package foosrcbardart export package foosrcbazdart bazdart wants use bardart instead using latter encountered issue note project divided separate projects project would import project b sometimes due refactoring classes get moved projects caused issue import yet updated everything worked point transformer decided start throwing perhaps warning place importing project root something consider", "d": "4/2016"}, {"body": "issue occurs running servercommunication sample beta error throwed make run beta need next main remove next lines nt get next error", "d": "4/2016"}, {"body": "faced issue bug first appears", "d": "4/2016"}, {"body": "one solution previously added comment would create class annotated dart import package import package injectable class browserclient extends use new created class providers list", "d": "4/2016"}, {"body": "solves problem servercommunication example short mentioned elsewhere resolve missing identifier issue update include", "d": "4/2016"}, {"body": "hey frank original issue resolved might consider closing issue", "d": "4/2016"}, {"body": "yes resolved soon removed circular dependency kathywalrath made separate issue warning whenever pub detects circular dependencies", "d": "4/2016"}, {"body": "perhaps particular plans share atm", "d": "4/2016"}, {"body": "duplicate tl dr buggy node version", "d": "4/2016"}, {"body": "see also kept url matches route query parameters supported root routes otherwise maintained matrix parameters instead please provide full example plunker ca nt fix information", "d": "4/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "thanks response raise another forum", "d": "4/2016"}, {"body": "think might plunker issue also typescript compiler handles types issues angular", "d": "4/2016"}, {"body": "value constant change reassignment ca nt redeclared problem fiddle replicate error opening console writing const throw error nt see error typescript plnkr gets transpiled related general javascript question see", "d": "4/2016"}, {"body": "ericmartinezr way let angular app show error change value thanks", "d": "4/2016"}, {"body": "hongbomiao nt know really know transpile requires babel stuff never tried aware transpile full nowadays try typescript gitter chatroom since transpilation thing", "d": "4/2016"}, {"body": "nt seem related angular looks like pure typescript issue think close issue continue", "d": "4/2016"}, {"body": "plunker nt actual typechecking typescript code transpiles nt related angular find proper typescript environment indeed error", "d": "4/2016"}, {"body": "plunker nt actual typechecking typescript code transpiles robwormald nt configure online ts transpiler fail hard transpilation errors must say clearly seeing ts compilation errors results headscratching time time", "d": "4/2016"}, {"body": "pkozlowskiopensource nt believe current system loader allows since purely using nontypechecked tstranspile string api upcoming version switches using new plugints loader run whole new set fun typings look", "d": "4/2016"}, {"body": "using vscode see robwormald seems best ts compiler moment love editor far ways debug webpack ts lol", "d": "4/2016"}, {"body": "thanks help everyone", "d": "4/2016"}, {"body": "also odd constructor injector documented private using internal likewise keyts", "d": "4/2016"}, {"body": "minification broken since fixed latest master though see", "d": "4/2016"}, {"body": "heres stack got exception error uncaught promise provider stacktrace error uncaught promise provider l einvoke objectinnerinnerforkoninvoke einvoke erun einvoketask objectinnerinnerforkoninvoketask einvoketask", "d": "4/2016"}, {"body": "ericmartinezr well fan using master thirdparty", "d": "4/2016"}, {"body": "vaudy nt get last comment point next release minification issues go away meanwhile nt use minified bundles see issue referenced find useful workarounds", "d": "4/2016"}, {"body": "ericmartinezr mean beta contain fixed minified bundles", "d": "4/2016"}, {"body": "vaudy hopefully", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "isnt bit ugly", "d": "4/2016"}, {"body": "often need realworld applications addition workaround shown answer also easy create directive need lot imagine pullrequest extension new distinct directive would accepted", "d": "4/2016"}, {"body": "ok thats great think manage spare time thanks feedback", "d": "4/2016"}, {"body": "feature request reasonable want show good angular browse stack overflow solving simple trivial task pretty common realworld applications way seems something wrong direction", "d": "4/2016"}, {"body": "hacknaked indeed exactly thinking done done", "d": "4/2016"}, {"body": "andreujuanc understand request explain usecase displaying numbers certain range frontend hardly imagine would really make sense", "d": "4/2016"}, {"body": "choeller tool someone needs hacknaked said browse simple task something missing dont need application moment wanted demo angular colleage like uhm need x divs need elements simplifying simple tasks", "d": "4/2016"}, {"body": "way know without jumping component creating directive ie purely template hardcoding dummy array template ie obviously practical small array sizes luckily require", "d": "4/2016"}, {"body": "useless ugly feature save line component body", "d": "4/2016"}, {"body": "alias import one see", "d": "4/2016"}, {"body": "okay thanks", "d": "4/2016"}, {"body": "call method ngoninit sounds weird think requires least plunker allows reproduce github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "think bug might crashing deciding lifecycle hook address first router component documentation canactivate lifecycle hook router also clear interacts lifecycle component", "d": "4/2016"}, {"body": "would probably easy know would provide plunker demonstrates", "d": "4/2016"}, {"body": "think ngoninit called components", "d": "4/2016"}, {"body": "plunker", "d": "4/2016"}, {"body": "plunker nt work", "d": "4/2016"}, {"body": "one thing making bundle file systemjs builder deploying could raise issue", "d": "4/2016"}, {"body": "nt usually lifecycle hooks nt called manually trigger action polyfills nt setup correctly including polyfills script tag indexhtml deployment", "d": "4/2016"}, {"body": "see also updated plunker make work", "d": "4/2016"}, {"body": "hi also done debugging areas find incompatible minification use dev version need fixed doc nt explain routing lifecycle affect component lifecycle vice versa problems system js also although place post systemjs issues kind problem system js bundles angular files module think time problems get resolved definitely waiting stable", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "seeing error", "d": "4/2016"}, {"body": "kind convention would even better think convention like template property look html file folder name similar conventions new router use", "d": "4/2016"}, {"body": "good point disagree find new implementation templateurl convenient efficient", "d": "4/2016"}, {"body": "getting error console plnkr removed scripts let ones commented official order regarding error may want see issue", "d": "4/2016"}, {"body": "getting pushstate error error test machine maybe different minor version ie using shims order works nt know official ones giving issue", "d": "4/2016"}, {"body": "getting error translation object nt support property method pushstate note using emulated tried plnkr saw removed official order still get error order issue far tell tried plnkr another machine", "d": "4/2016"}, {"body": "issue using actual ie get errors", "d": "4/2016"}, {"body": "downloaded win link official link nt panic using real get error plnkr see screenshot ie version screenshot point nt know else could", "d": "4/2016"}, {"body": "says nt support pushstate current solution shaming pushstate missing typescript const history history windowhistory const location location windowlocation pushstate fallback historypushstate historypushstate historyreplacestate function state title string url string url locationpathname locationpathname url", "d": "4/2016"}, {"body": "proposed fix dup mentioned", "d": "4/2016"}, {"body": "sod shim worked confused getting anything console pushstate oh well working expected add iejs function var history windowhistory var location windowlocation pushstate fallback historypushstate historypushstate historyreplacestate function state title url url locationpathname locationpathname url converted js wrapped self executing maybe save somebody else headaches", "d": "4/2016"}, {"body": "sigh never mind nt cause problem another syntax error mainjs bad sorry noise", "d": "4/2016"}, {"body": "one problem inject done pattern makes inject expected synchronous asynchronous test function make done concept associated async instead inject", "d": "4/2016"}, {"body": "resolved", "d": "4/2016"}, {"body": "closing since merged see example use", "d": "4/2016"}, {"body": "something like checkbox input radio search typescript source files", "d": "4/2016"}, {"body": "yes like maybe docs could extended walkthrough based simplified version mdcheckbox", "d": "4/2016"}, {"body": "nt provide callback request following sample query parameter provide callback actually depends service always need provide value parameter", "d": "4/2016"}, {"body": "templth nope still error appjs nodejs server javascript appget calendar year month function request response", "d": "4/2016"}, {"body": "looks like dup", "d": "4/2016"}, {"body": "exactly", "d": "4/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "issue probably nt know", "d": "4/2016"}, {"body": "think would need complete example actual values using github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "component component selector samplewidget moduleid moduleid templateurl editdetailshtml providers editservice export class editdetailsdatacomponent input widget widget string code html lt select ngcontrol country country ngform lt option selected true value widgetcountrycode widgetcountry lt option ngfor country listcountry value countrycode countrydescription lt select", "d": "4/2016"}, {"body": "still nt see actual data using still looks like support request nt belong", "d": "4/2016"}, {"body": "due organizational rule wo nt able provide actual code related similar following link however link context angular hope make sense", "d": "4/2016"}, {"body": "perhaps set value directly like itemname buildtype thisbuildtypelist name", "d": "4/2016"}, {"body": "thanks works", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "use manually trigger change detection component see see plunker", "d": "4/2016"}, {"body": "ok would like use loadintolocation ca nt load components inside see plunker facing problem loadintolocation", "d": "4/2016"}, {"body": "diegoparraleal", "d": "4/2016"}, {"body": "thanks suggestion tried little problem approach need component inside need create wrappers using jquery plugin named gridstack want add components inside grid cells order create different child components posting problem new plunker", "d": "4/2016"}, {"body": "perhaps wrapper like demonstrated works", "d": "4/2016"}, {"body": "yeah thanks works updated plunker question angular team right way dynamic component binding sometimes feels like workaround thanks", "d": "4/2016"}, {"body": "actually due incompetence cdn url router bundle misspecified breaking everything please ignore", "d": "4/2016"}, {"body": "still unable repro metadata correct", "d": "4/2016"}, {"body": "exact problem tried find workaround various ways using controlgroup control model within subcomponent without success changed checked error thrown every time", "d": "4/2016"}, {"body": "plunker would great demonstrates issue", "d": "4/2016"}, {"body": "think figured", "d": "4/2016"}, {"body": "error seeing passing renderer using renderer expects nativeelement since making mistakes passing nativeelement renderer using really old beta asking help supposed get help faster follow contributing guides", "d": "4/2016"}, {"body": "thank clarifying first two points find third rather missing additional info read contribution guidelines thought following first time submitting issue thought found bug find hard turned bothering contribute given warm reception mistaken attempt received would reconsider tone apply sorts messages future feel honor insulted let say solved issue took five minutes find understood actually useful commentary provided let nerves subside needless abruptness solution bind styletop styleleft rather using convoluted method since using element directive attribute directive find solution would done sooner simply apologized misreport closed decided rub face", "d": "4/2016"}, {"body": "angular repo", "d": "4/2016"}, {"body": "ooops", "d": "4/2016"}, {"body": "looks like issue configuration github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "zoechi completely right general support request nt belong thnx zoechi", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "thanks", "d": "4/2016"}, {"body": "dup see also", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "halflegend yes subscription happens route activated currently couple ways redirect route loaded use decorator going change soon see also redirect using custom outlet route activated captaincodeman good article", "d": "4/2016"}, {"body": "try make reproducible see also", "d": "4/2016"}, {"body": "using pagination time also upgraded version change cdn back version program works seems conflict angular beta", "d": "4/2016"}, {"body": "guess report usually indicates bug application", "d": "4/2016"}, {"body": "thanks report", "d": "4/2016"}, {"body": "found solution issue angular issue pagination change detection", "d": "4/2016"}, {"body": "angular related issues think may want go", "d": "4/2016"}, {"body": "oh wow sorry mistake closing", "d": "4/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "think bug trackby", "d": "4/2016"}, {"body": "nt even explain desired behavior angular plunker nothing might want", "d": "4/2016"}, {"body": "corrected link angular see error console", "d": "4/2016"}, {"body": "list list try track property throw error like angular duplicate angular nt throw error", "d": "4/2016"}, {"body": "go along krasevych saying though seems trackby nt anything although code getting loop goes like normal", "d": "4/2016"}, {"body": "krasevych markpieszak angular allows duplicates ngfor error thrown totally legal ts numbers afaik trackby function used domnode reuse box ngfor uses objectidentity domnode creation trackby angular reuses nodes already list see following plnkr press refresh first list trackby second one without", "d": "4/2016"}, {"body": "choeller trackby tested trackby set different return value behavior", "d": "4/2016"}, {"body": "related appears limited use avoiding expensive object identity otherwise nt prevent items rerendered far tell reordered using index default would effect cases", "d": "4/2016"}, {"body": "thank got", "d": "4/2016"}, {"body": "import enableprodmode enableprodmode", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "enable prodmode indexhtml bootts tsfile", "d": "4/2016"}, {"body": "calling bootstrap", "d": "4/2016"}, {"body": "changed little get feedback click link still extremely slow browsers even production mode enabled click links see long takes till first line updated firefox edge slow chrome better chrome performs maybe support found following console mutating prototype object cause code run slowly instead create object correct initial prototype value using objectcreate", "d": "4/2016"}, {"body": "chrome safari perform nice", "d": "4/2016"}, {"body": "painfully slow ff edge ie", "d": "4/2016"}, {"body": "captaincodeman enable production mode", "d": "4/2016"}, {"body": "see link description production mode enabled", "d": "4/2016"}, {"body": "captaincodeman sawry", "d": "4/2016"}, {"body": "something change running chrome mac os x ram runs smooth butter took load initially worked like charm", "d": "4/2016"}, {"body": "chrome ok using initial load ok clicking first item ca nt click second one page needs handle second item click browsers windows tells process hung well using windows relativly new ram testing something odd hung thing changed chrome worked little gone back everything behaved like reload first click superfast second super slow responding", "d": "4/2016"}, {"body": "please use stackoverflow questions amp coding issues section actual bugsissues angular framework bibermar", "d": "4/2016"}, {"body": "thnx markpieszak completely right using issue tracker support forum", "d": "4/2016"}, {"body": "command using install", "d": "4/2016"}, {"body": "npm install quentin notifications githubcom command using install receiving authored thread reply email directly view github", "d": "4/2016"}, {"body": "npm install angular works great ashley marques marquesashley gmailcom npm install quentin notifications githubcom command using install receiving authored thread reply email directly view github", "d": "4/2016"}, {"body": "shows meaning beta published make sure dot check", "d": "4/2016"}, {"body": "also npm install angular", "d": "4/2016"}, {"body": "angularcore published days ago latest releases", "d": "4/2016"}, {"body": "closing package well published sounds like usage npm setup issue nothing framework", "d": "4/2016"}, {"body": "ok pawel kozlowski notifications githubcom closing package well published sounds like usage npm setup issue nothing framework receiving authored thread reply email directly view github", "d": "4/2016"}, {"body": "check", "d": "4/2016"}, {"body": "sounds like check node npm version", "d": "4/2016"}, {"body": "thank pkozlowskiopensource updating node solved problem", "d": "4/2016"}, {"body": "reproduce plunker", "d": "4/2016"}, {"body": "sorry found compiler", "d": "4/2016"}, {"body": "duplicated check comment possible workaround", "d": "4/2016"}, {"body": "thanks feel free close angular team dupe sufficient", "d": "4/2016"}, {"body": "dup similar", "d": "4/2016"}, {"body": "long time thought loadasroot broken told nt behavior design see really using loadnexttolocation loadintolocation still want use wire everything see reinventing wheel manually loadnextto loadinto changing use one two mentioned make work correctly wiring everything manually", "d": "4/2016"}, {"body": "eric thank pointing towards loadnextto loadinto worked expected tackle next hurdle cheers", "d": "4/2016"}, {"body": "performance tests switch see also", "d": "4/2016"}, {"body": "issue persists even prodmode enabled", "d": "4/2016"}, {"body": "experience profiler suggests appviewprototypenotifyonbinding gt textcontent takes millisecond table sums addition huge callstack zone different event emitters chrome lightning fast", "d": "4/2016"}, {"body": "closing issue debugging solution specify full instruction root component level like", "d": "4/2016"}, {"body": "angularjs repo support questions please use one channels listed", "d": "4/2016"}, {"body": "angular hope help", "d": "4/2016"}, {"body": "closing original question angular related thnx zoechi", "d": "4/2016"}, {"body": "sounds similar could provide plunker reproduce", "d": "4/2016"}, {"body": "found issues nothing asynchronous navigating application register class use lifecycle method ngoninit called create simple repository describe problem could reproduced please let know could reproduce thanks", "d": "4/2016"}, {"body": "try using promise without importing include module provides promise nt patched trigger change detection would explain lifecycle hooks nt called", "d": "4/2016"}, {"body": "thanks looks good test tomorrow real project", "d": "4/2016"}, {"body": "please elaborate fixed issue occurs async task takes time finish api calls domain work fine nt use promises pass function callback thirdparty lib methods", "d": "4/2016"}, {"body": "wrapped code callback zonerun routing works intended", "d": "4/2016"}, {"body": "another plunker beta behaviour different still incorrect multiple radio groups control group topic radio button value reason decided emit opposed returning value would make easier work opinion", "d": "4/2016"}, {"body": "try added", "d": "4/2016"}, {"body": "zoechi fixes issue thank however nt understand planned bug thought trackby method called array empty", "d": "4/2016"}, {"body": "good question sounds reasonable leave angular team response least work around", "d": "4/2016"}, {"body": "support empty arrays nt error however code sample looks like might constructing incorrectly actually expects function property name rewrite code pass function returns work whether array empty closing looks like usage issue please feel free reopen still issues plunker help us replicate definitely think throwing error argument function prevent confusion thanks reporting see implement soon", "d": "4/2016"}, {"body": "looks like", "d": "4/2016"}, {"body": "also see internal issue", "d": "4/2016"}, {"body": "nt know still case canactivate apparently called children parent still canactivate protect parent therefore group children also use may handle fact ordering means nt done parent checks first loaded parent data see", "d": "4/2016"}, {"body": "case parents canactivate nt get called gets called children nt canactivate therefore way use protection logic parent child canactivate repeat logic parents canactivate childs sorry ca nt get plunker working simply ca nt get routing work plunker", "d": "4/2016"}, {"body": "child canactivate returning false might explain parent nt called depends result children returning false could make testing rest pointless", "d": "4/2016"}, {"body": "yes right case child canactivates would resolve false parent would never get called right behavior", "d": "4/2016"}, {"body": "petebacondarwin igorminar going ask ericjim work style making visible", "d": "4/2016"}, {"body": "probably issue angulario", "d": "4/2016"}, {"body": "oh yes filed", "d": "4/2016"}, {"body": "seems happening watchers registered keep running little bit component destroyed resulting error tried making simple repro able reason watches stop firing simple plunkr nt actual app upgrading reason could related angularuirouter seeing error mostly route changes either way solution proposed safe without side effects resolve potential memory leak well", "d": "4/2016"}, {"body": "repro", "d": "4/2016"}, {"body": "agree seems counterintuitive well design", "d": "4/2016"}, {"body": "inputs resolved called mandatory nt see purpose would fulfill otherwise inputs updated called seems quite straightforward", "d": "4/2016"}, {"body": "alright nt realize design understand works way think angular could defer first ngonchanges occurs immediately ngoninit", "d": "4/2016"}, {"body": "add info go remove view see disappears add back appears automatically", "d": "4/2016"}, {"body": "issue one discussed find temporary fix involves writing angular code", "d": "4/2016"}, {"body": "looks like problem angular implementation zonejs file zonejs board", "d": "4/2016"}, {"body": "screen capture taken looks like editor angular would involved", "d": "4/2016"}, {"body": "copy paste text ie screen modify \u00f6 screen contains inputcontrol placeholder yhdyshenkilo", "d": "4/2016"}, {"body": "closed properly tag example", "d": "4/2016"}, {"body": "guess proper plunker would case proves things work expected closing happy reopen able modify plunk expose issue", "d": "4/2016"}, {"body": "thnx michalstepien", "d": "4/2016"}, {"body": "could please help general testing angular apps dartium problematic lately see also asked frank slack test whether works confirmed importing update version eg test every app lately often clear cache andor hard reload repeatedly toy apps opening app nondartium browser works", "d": "4/2016"}, {"body": "confirm pub build also fails situation hangs midway without anything thrown dart process sits memory fluctuation", "d": "4/2016"}, {"body": "kwalrath real world examples happening", "d": "4/2016"}, {"body": "none frankpepermans would possible create small least nonproprietary reproduceable case", "d": "4/2016"}, {"body": "try give pointers best would way debug transformers course something change way iterate compile list files transform reason asking project fails split separate projects dependency pubspec files", "d": "4/2016"}, {"body": "highly likely result cyclic dependency two packages bit investigation vsavkin might know changed recent version would trigger issue nt one likely something changed respect files read order generate templatedart files", "d": "4/2016"}, {"body": "confirmed cyclic dependencies packages cause pub buildserve hang", "d": "4/2016"}, {"body": "new always known issue added print statements inside angular transformers specifically inside template transformer trying detect would hang seems template transformer traverse file anything else need check would run transformer", "d": "4/2016"}, {"body": "looks like repro well actually still possible though app would nt show changed files read phases transformer", "d": "4/2016"}, {"body": "simple repro case remove import package longer blocks", "d": "4/2016"}, {"body": "found commentout line within deferredrewritertransformer seems stop hanging pub serve lines would hang transformprimaryinputs never receives event", "d": "4/2016"}, {"body": "transformprimaryinputs indeed empty sometimes causing loop hang tested transformprimaryinputsisempty try investigate tomorrow give leads would empty much appreciated", "d": "4/2016"}, {"body": "loop nt hang unless waiting files sure happening fact returning null right away thus work", "d": "4/2016"}, {"body": "wait assets ever added seems like close method never reached", "d": "4/2016"}, {"body": "test added timeout transformerprimaryinputstimeout seconds inside loop duration throws exception events", "d": "4/2016"}, {"body": "helps code transformer nt change compared something else causes primaryinputs never complete", "d": "4/2016"}, {"body": "refactored code base get rid circular dependency moved shared code new third library depend changes works indeed issue circular dependencies sure worked fine prior digging transformers seems problem aggregatetransformer see anyway close assume circular reference known issue already open confusing", "d": "4/2016"}, {"body": "dependencies updated new version properly tested", "d": "4/2016"}, {"body": "minimal ish reproduction protractor spec testapp tried instead clicking element nt work presumably nt executed within angular component", "d": "4/2016"}, {"body": "working intended run outside angular zone make sure good documentation", "d": "4/2016"}, {"body": "see instead", "d": "4/2016"}, {"body": "please provider information example plunker allows reproduce problem", "d": "4/2016"}, {"body": "explained removes element dom expression points nonexisting elements hope understood question correctly sure", "d": "4/2016"}, {"body": "right would understand model getting populated service null rendering nt understand current behavior taking place ngif model return true otherwise input would visible right", "d": "4/2016"}, {"body": "see yes would also expect work", "d": "4/2016"}, {"body": "question answered stack overflow get closing issue", "d": "4/2016"}, {"body": "future readers stackoverflow answer", "d": "4/2016"}, {"body": "hi ralf opinion common try reassign item list within directive build plunkr demo get around problem please notice hacked demo workaround smirk may want introduce component structure handling updates data model kinds greg", "d": "4/2016"}, {"body": "tried double", "d": "4/2016"}, {"body": "zoechi works unreasonable think one asked double", "d": "4/2016"}, {"body": "strings backslashes strings work programming languages think close issue", "d": "4/2016"}, {"body": "also try sure supposed work though", "d": "4/2016"}, {"body": "try inline template instead issue nt know fixed already", "d": "4/2016"}, {"body": "zoechi still getting error reading error kind routing error dont expect result template issue", "d": "4/2016"}, {"body": "include html", "d": "4/2016"}, {"body": "using karma test runner app running fine anyway looks like html angular testing", "d": "4/2016"}, {"body": "complete router mock scope issue think true would recommend tests anything involves confirming working components call methods instances injected think pretty easy us fake far need", "d": "4/2016"}, {"body": "yes thank sounds appropriate really unit testing ui components seemed unnecessarily difficult also cc ran project", "d": "4/2016"}, {"body": "recently much work somewhat tamed beast thanks collection router mocks work machine see experience brings least stopped cold presence setup nt horrendous excerpt imports import hero heroservice mockheroservice mockheroservice import router mockrouter routerlink mockrouterlink routeroutlet mockrouteroutlet mockrouter describe appcomponent gt let fixture componentfixture let comp appcomponent beforeeach injectasync testcomponentbuilder tcb testcomponentbuilder gt return tcb overridedirective appcomponent routerlink mockrouterlink overridedirective appcomponent routeroutlet mockrouteroutlet overrideproviders appcomponent provide heroservice useclass mockheroservice provide router useclass mockrouter createasync appcomponent fix gt fixture fix comp fixturedebugelementcomponentinstance tests go component fixture ready", "d": "4/2016"}, {"body": "forgot mention ca nt use test framework nt know unroll yet see julie instead", "d": "4/2016"}, {"body": "ward method good temporary one current idea use real directives provide router fake literally empty functions overrides necessary via testcomponentbuilder try click links nothing happen js import routerfakeproviders beforeeachproviders gt routerfakeproviders", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "workaround configure compilerhost custom function memoizes reverse map modules resolved pass constructed map bypass filesystem logic maybe something less hacky grab module name used reference another file use place sourcefilefilename symbol referenced", "d": "4/2016"}, {"body": "workaround also bug relative import locations within also get expression used resolve module end metadata like", "d": "4/2016"}, {"body": "sorry nt plunkr yet working found strange chrome update broke existing app", "d": "4/2016"}, {"body": "turned result failed call prior error guess chrome stricter continuing error", "d": "4/2016"}, {"body": "dupe minified bundles broken fixed soon use dev bundles", "d": "4/2016"}, {"body": "brandonroberts thank", "d": "4/2016"}, {"body": "info worked ends ok verbose cli usrlocalbinnode usrlocalbinnpm start info using npm info using node verbose runscript prestart start poststart info lifecycle silly lifecycle script prestart continuing info lifecycle verbose lifecycle unsafeperm lifecycle true verbose lifecycle path usrlocallibnodemodulesnpmbinnodegypbin usrlocalbin usrlocalbin usrbin bin usrsbin sbin verbose lifecycle cwd silly lifecycle args c tsc amp amp concurrently npm run tsc w npm run lite silly lifecycle returned code signal null info lifecycle failed exec start script verbose stack error start verbose stack exit status verbose stack eventemitter verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid verbose cwd error darwin error argv usrlocalbinnode usrlocalbinnpm start error node error npm error code elifecycle error start error exit status error failed start script tsc amp amp concurrently npm run tsc w npm run lite error make sure latest version nodejs npm installed error likely problem package error npm error tell author fails system error tsc amp amp concurrently npm run tsc w npm run lite error get information open issue project error npm bugs error nt available get info via error npm owner ls error likely additional logging output verbose exit true", "d": "4/2016"}, {"body": "ericmartinezr many thanks issued typings install command finally running", "d": "4/2016"}, {"body": "need add line maints", "d": "4/2016"}, {"body": "dupe", "d": "4/2016"}, {"body": "closing dupe", "d": "4/2016"}, {"body": "sorry guys problem liteserver", "d": "4/2016"}, {"body": "honest time frustrated small bugs issues know beta think far productive ready version started project since wanted learn also made good progress strange things taken lot precious time hope someone help problem otherwise cancel experiments", "d": "4/2016"}, {"body": "maybe problem dom manipulations inside angular context dom manipulations done external component", "d": "4/2016"}, {"body": "reproduced error fiddle lines googled error found question pretty sure google also right also found spec rxjs repo helped reproduce think reproducible plunkr least tried reproduce right providing information considering reproduced error without involved say bug something weird code knows repro really need read contributing guide also recommend watch talk want help need help others help look right place github right place comes users errors get help faster look", "d": "4/2016"}, {"body": "ericmartinezr thank advice could raise error lines code nt mean thing wrong way easy reproduce would obvious wrong would nt ask know nt use rxjs functionality code context know angular whenever use event output maybe error occurred yes searched search engine case duckduckgo also found link even error another situation solution nt help course know also ask stackoverflow try get help problem thought best place problems using beta issues happen using beta collected since lot helpful people away course right try make reproducible effort much post link repo error easy reproduced repo need clone npm gulp steps reproduce click headline one cards see right side click ok close modal dialog see console log errors posted aware plunkr fasted way help try find problem cases much effort make reproducible plunkr lot faster try original source code way problem also reproducible live page wwwhowcanieu runs safari another problem code without source map files", "d": "4/2016"}, {"body": "janbaer think got problem defined hashlocationstrategy locationstrategy router clicked link actually trying navigate sadly ca nt precise router detected hash nonroute path everything blew fix use way prevent de default behavior example cc brandonroberts sorry pinging clue router trying hash known issue nt know look", "d": "4/2016"}, {"body": "ericmartinezr thank much help found mean nt obvious detect call stack came router course fault even nt intention sorry fixed error", "d": "4/2016"}, {"body": "janbaer trial error mostly lol saw href went see router set bootstrap saw hashlocationstrategy problems hashes hls gave try worked glad worked", "d": "4/2016"}, {"body": "ericmartinezr janbaer router handling hash links tries convert navigation instruction since nt valid route throwing error", "d": "4/2016"}, {"body": "brandonroberts thanks clarification would helpful source error would bit obvious", "d": "4/2016"}, {"body": "agreed", "d": "4/2016"}, {"body": "hi got philosophical problem routing system behavior developer using bad url anchor fact router throwing error really astonishing user final one one visiting commercial website etc edit url without reloading page browser mean website stop working without visible piece information hard afford professional application think way get descent degradation like catch specific behavior redirect route think error handling native part rooting system personal opinion work", "d": "4/2016"}, {"body": "guess want route comment nt seem related original issue github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "zoechi thanks answer actually issue answer given nt really fix despite original author satisfied maybe could consider point view feature request still think rather bug aware nested routing matter happens user use url filled routerconfig experience using hashlocationstrategy application crash promise error issue asking parameter route used handle urls explicitly created router idea beside point view natively provide feature route system think bug since logically fill purpose original author called wrong url framework brutally crashed would much better get redirected default route instead would understood bad path call seconds even relevant final user got way understood site crashed hope question bit understandable time", "d": "4/2016"}, {"body": "need update systemjs config accordingly case general support question nt belong see", "d": "4/2016"}, {"body": "hmm duplicate", "d": "4/2016"}, {"body": "filed", "d": "4/2016"}, {"body": "thanks thought angulario documentation comes package closing", "d": "4/2016"}, {"body": "broke browser better fix", "d": "4/2016"}, {"body": "need polyfills see", "d": "4/2016"}, {"body": "use corejs shim instead", "d": "4/2016"}, {"body": "basically import fix error", "d": "4/2016"}, {"body": "select nt know exactly environment using karma systemjs repo see", "d": "4/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "sorry question httpparamserializerjqlikeprovider exist angular prediction make", "d": "4/2016"}, {"body": "see minified bundles currently broken fixed soon use dev bundles instead minified bundles", "d": "4/2016"}, {"body": "thanks", "d": "4/2016"}, {"body": "cc kara", "d": "4/2016"}, {"body": "solved problem provide custom eventmanagerplugin event set placed hammer work think cases would nice tune hammer", "d": "4/2016"}, {"body": "call code component constructor angular lifecycle method", "d": "4/2016"}, {"body": "called ngoninit reload page fetches still cached data", "d": "4/2016"}, {"body": "check actually executed navigate form time edge", "d": "4/2016"}, {"body": "executed itemservice called seems api called reaction problem exists also internet explorer", "d": "4/2016"}, {"body": "check network tab browser long request issue angular data nt updated could either http caching caching within mvc app data layer", "d": "4/2016"}, {"body": "checked network tab called firefox data received api however edge data received cache different force http get data api instead cache notice edge data received api first access form page data received cache revisit page reload page", "d": "4/2016"}, {"body": "browser feature search caching see also", "d": "4/2016"}, {"body": "thanks trick second link works", "d": "4/2016"}, {"body": "see also", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "issue latest osx nt look like windows specific issues", "d": "4/2016"}, {"body": "coworker npm also issue npm version problem", "d": "4/2016"}, {"body": "issue fixed upgrading nodejs", "d": "4/2016"}, {"body": "facing issue osx never try windows also restricting version works", "d": "4/2016"}, {"body": "updating node solved problem anyone still problem", "d": "4/2016"}, {"body": "yeah updating node solved problem", "d": "4/2016"}, {"body": "sames goes", "d": "4/2016"}, {"body": "running node npm problem looks like combo anything gt lt", "d": "4/2016"}, {"body": "seems happen", "d": "4/2016"}, {"body": "well since nt seem related close", "d": "4/2016"}, {"body": "also see internal issues", "d": "4/2016"}, {"body": "simonxca second argument whether skip url update js routernavigatebyurl true", "d": "4/2016"}, {"body": "works easy thanks", "d": "4/2016"}, {"body": "correct behavior escaping special characters need use wildcard matching instead parameter nt want see path separators separate route segments", "d": "4/2016"}, {"body": "life saver thank much take look documentation nt find anything wildcard situations like thanks", "d": "4/2016"}, {"body": "dup", "d": "4/2016"}, {"body": "ah thanks ericmartinezr sorry", "d": "4/2016"}, {"body": "experimented quite bit repo confirm works well chrome edge brings pretty hard sometimes even restart vm use test otherwise nt even able reload page browser stopped responding repo quite small basic routing example", "d": "4/2016"}, {"body": "find spa performs awfully dev mode seems work fine production mode could try calling enableprodmode see makes difference", "d": "4/2016"}, {"body": "see deprecated use function js alternative void enableprodmode", "d": "4/2016"}, {"body": "looks similar extreme", "d": "4/2016"}, {"body": "yoxel call", "d": "4/2016"}, {"body": "zoechi commented deprecated use function js alternative void enableprodmode would make difference used missing something", "d": "4/2016"}, {"body": "yoxel saw comment wonder get message nt use", "d": "4/2016"}, {"body": "zoechi wait message getting nay message pcroc asked turn simply looked source code saw annotation", "d": "4/2016"}, {"body": "yoxel got dart", "d": "4/2016"}, {"body": "probably also needs fixed ddc", "d": "4/2016"}, {"body": "passing directive js object literal js ca nt unquoted object keys try favourite console want use dashes need quote closing invalid", "d": "4/2016"}, {"body": "see helps", "d": "4/2016"}, {"body": "see also julie ralph repo talk angularconnect", "d": "4/2016"}, {"body": "thnx chiming ericmdantas ericmartinezr please nt post general support question github issue tracker see", "d": "4/2016"}, {"body": "library seems running inside zone fix constructor private elementref elementref private zone ngzone see also contributing guide", "d": "4/2016"}, {"body": "thnx ericmartinezr", "d": "4/2016"}, {"body": "thx ericmartinezr resolves problem relative new sometimes difficult know issue really issue something nt understand well thx", "d": "4/2016"}, {"body": "error messages quite easy search common one github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "zoechi posting bug request although might common syntax preferred seems sort unnecessary", "d": "4/2016"}, {"body": "although might common syntax preferred seems sort unnecessary attr means propagate value evaluation property want influence attribute value need use closing invalid", "d": "4/2016"}, {"body": "pkozlowskiopensource ok understand might put information docs explain better assumed nt understand done way right away thanks guys", "d": "4/2016"}, {"body": "markpieszak think well documented feel free send pr believe things missing referenced doc", "d": "4/2016"}, {"body": "oh wow doc way remembered nevermind nt know got big updates sorry bother definitely bug", "d": "4/2016"}, {"body": "issue resolved updating mockbackend import replaysubject rxjssubjectreplaysubject import replaysubject rxjsreplaysubject", "d": "4/2016"}, {"body": "note seems browser implementation detail spec touchevents ie nt strictly issue reproduce behaviour without see jsfiddle however could normally code around shortcomings keeping element reference memory touchend touchcancel angular handling dom manipulations nt luxury issue still stands touchstart child element even nt subscribed event removed dom subsequent touch events never fire lift finger start surprised nt seen touch event issues devs unless testing touch screens something fundamentally wrong", "d": "4/2016"}, {"body": "feature request gets implemented could simply flag dragged component drag reset back touchendtouchcancel angular could destroy component usual like approach", "d": "4/2016"}, {"body": "sorry older issue recent", "d": "4/2016"}, {"body": "okay closing duplicate able look soon", "d": "4/2016"}, {"body": "jahala check console plnkr fails", "d": "4/2016"}, {"body": "served meteor guessing concealed error thanks ericmartinezr", "d": "4/2016"}, {"body": "dup", "d": "4/2016"}, {"body": "yup looks like duplicate", "d": "4/2016"}, {"body": "html erased altered posted without tag symbols hope helpful", "d": "4/2016"}, {"body": "related", "d": "4/2016"}, {"body": "additionally page load found chrome populate selection array selections select tag firefox populates last item selection array edge populates first item array selections", "d": "4/2016"}, {"body": "see uglifying currently broken mangling enabled try disabling mangle option see helps", "d": "4/2016"}, {"body": "thanks exactly worked", "d": "4/2016"}, {"body": "anyone else comes upon mangling disabled default actually type", "d": "4/2016"}, {"body": "nt think changes run async validations last releases might bug cc kara", "d": "4/2016"}, {"body": "could nt find either confirm error objects asynchronous validators resolved exposed observable", "d": "4/2016"}, {"body": "pascalprecht try use property instead errorcode async validations work perfectly well code running ts directive selector asyncemailvalidator providers provide ngasyncvalidators useexisting forwardref gt asyncemailvalidator multi true export class asyncemailvalidator validate control consolelog going validate email let promise new promise resolve reject gt settimeout gt let result null var w w w w w az az controlvalue retest controlvalue result invalidemail true else resolve result return promise html", "d": "4/2016"}, {"body": "choeller custom error object", "d": "4/2016"}, {"body": "pascalprecht hmm interesting working expected mixing sync async validations maybe issue somehow connected problems experience", "d": "4/2016"}, {"body": "choeller related actually think works expected sync email validator checks value email address async validator kicks checks email address available async validator error overrides sync error object", "d": "4/2016"}, {"body": "lem try come plunk", "d": "4/2016"}, {"body": "alright case works kick sync validation first starting async validations nt work see plnkr connected issue", "d": "4/2016"}, {"body": "pascalprecht working", "d": "4/2016"}, {"body": "pascalprecht vsavkin could also reproduce problem really weird behaviour occurse returning observables using mapmethod code works code logically returns method seems ignored ts directive selector asyncemailvalidator providers provide ngasyncvalidators useexisting forwardref gt asyncemailvalidator multi true export class asyncemailvalidator validate control let result true var w w w w w az az controlvalue amp amp retest controlvalue result false return observableof result map result gt result false invalidemail true null see plnkr live demo", "d": "4/2016"}, {"body": "hi found bug code created pr could look first pr sure considered everything", "d": "4/2016"}, {"body": "think answer fix might issues code though github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "oh sorry thank try know bug version angular write", "d": "4/2016"}, {"body": "nt know bug please try support channels first", "d": "4/2016"}, {"body": "ok next time clever answer stack solved problem thank options delete close issue say issue", "d": "4/2016"}, {"body": "found close button delete closing issue", "d": "4/2016"}, {"body": "found seems related sure interpret discussion though got impression transformer chokes libraries files directory", "d": "4/2016"}, {"body": "first line issue template ignored says please take question stackoverflow similar also repo", "d": "4/2016"}, {"body": "think want otherwise bind property seems reflected dom", "d": "4/2016"}, {"body": "thank much wrong problem perfectly solved", "d": "4/2016"}, {"body": "thnx zoechi", "d": "4/2016"}, {"body": "unlangchan repo please open", "d": "4/2016"}, {"body": "sorry", "d": "4/2016"}, {"body": "problem thanks", "d": "4/2016"}, {"body": "stealjs supports commonjs angular work via npm", "d": "4/2016"}, {"body": "nt anything need end make steal work nt think bandwidth support official way eg writing docs use wrldtrvllr going close really actionable moment noninvasive change need make angular end please ping reopen", "d": "4/2016"}, {"body": "sure thanks comments deeper look come back necessary", "d": "4/2016"}, {"body": "thanks stevenfernandez could open issue repo", "d": "4/2016"}, {"body": "done", "d": "4/2016"}, {"body": "experiencing behaviour parent component calls correct lifecycle hooks child components using navigate constructor called ngoninit called subsequent action child component", "d": "4/2016"}, {"body": "working fine plunker think babel issue browsers could reproduce create plunker reproduces", "d": "4/2016"}, {"body": "plunker good reproduction happing tried ts version also results compile code one source file ie firefox chrome", "d": "4/2016"}, {"body": "using minified bundles need provide exact steps reproduce otherwise hard find cause", "d": "4/2016"}, {"body": "nt importing build either include separate script tag indexhtml nt import import separately working plunker using babel transpiler", "d": "4/2016"}, {"body": "example branch reproducing issue bootstrapts import instead separate imports ngoninit nt called import separate dependencies works designed", "d": "4/2016"}, {"body": "brandonroberts removing polyfills adding others imports work us think documented site little better many examples get stuck state good explanation polyfills import really thank quick response", "d": "4/2016"}, {"body": "sorry friend plan releasing webpack cookbook angulario polyfills correctly loaded", "d": "4/2016"}, {"body": "using navigateroute navigate splash component child parent component constructor called use try duplicate plunker", "d": "4/2016"}, {"body": "foxandxss thanks trying help find problem brandonroberts thanks hint using different bundler seems bundler brings owns problems solutions even transpiler also tried add babel polyfill without change maybe would helpful get info developers team work polyfills functions really required also interesting second call route working first call means required functions polyfilled maybe right order creating plunkr think easier clone github repository try real project instead wasting time trying make reproducible plunkr completely different environment case project immediately running without external dependencies except npm modules thanks help advance", "d": "4/2016"}, {"body": "janbaer agree different bundlers bringing different problems solutions overall issue still loading via script tag need import separate scripts make three imports required order one could etc depends preferred polyfill choice provides support native browser well features available older browsers angular uses storeread metadata components annotated decorators metadata added typescript zonejs patches async browser events mentioned one needs last set allows angular determine change detection needs run instead using digest cycle angular includes three reflectmetadata zonejs need loaded polyfill anything else application loaded recommended loaded via script tag included application bundle far plunker goes two way street plunker similar sites already templates set angular make easier drop code provide minimal reproduction without replicating environment also easier someone else run code without pulling repo installing npm modules whether provide github repo gist plunker information share including snippets code always better", "d": "4/2016"}, {"body": "another resource bundling polyfills", "d": "4/2016"}, {"body": "putting polyfills entry file directly webpack making sure first thing loaded also works fine", "d": "4/2016"}, {"body": "today found following combinations exactly result alone via script tag import webpack babelpolyfill zonejsdistzone corejs zonejsdistzone reflectmetadata zonejsdistzone also tried seems chrome canary nt need combinations running result means angular environment running still router weird upper polyfills get lot exactly error messages missing added required polyfills still running without error message please give advice tackle problem thanks", "d": "4/2016"}, {"body": "idea problem occurring modern browser like safari related chrome maybe polyfill active chrome since native implementation used something different polyfill working idea maybe wrong", "d": "4/2016"}, {"body": "janbaer share code repo indexhtml bootstrap file look like polyfills included used needed bootstrap look something simliar babel js import reflectmetadata import babelpolyfill import zonejs import bootstrap import app componentsappapp import routerproviders bootstrap app routerproviders", "d": "4/2016"}, {"body": "foxandxss import add file webpackconfig directly file thanks", "d": "4/2016"}, {"body": "tried solution proper polyfill management nt working guess problem elsewhere", "d": "4/2016"}, {"body": "brandonroberts course clone npm install gulp reproduce problem would great could help thanks", "d": "4/2016"}, {"body": "janbaer figured issue polyfill setup fine issue using github api uses returning data since importing github api imports promise patched therefore running outside zone picked trigger change detection import github api zonejs imports works expected file ts import import import reflectmetadata import zonejsdistzone import zonejsdistlongstacktracezone import githubapi zonejs import jquery import moment ts import import import reflectmetadata import githubapi zonejs import zonejsdistzone import zonejsdistlongstacktracezone import jquery import moment", "d": "4/2016"}, {"body": "right works thank much nt believe reason since library always working callbacks never returns promise right inside using promise calling polyfill simple problem taken lot time last days thankful help", "d": "4/2016"}, {"body": "apkostka dupe specific trackby usage", "d": "4/2016"}, {"body": "ah thank pointing robwormald never would connected two appears related seeing behavior seen guess imagined trackby would prevent items reordered removedadded dom looks like might nonideal implementation ngfor feel free mark duplicate", "d": "4/2016"}, {"body": "aware able write behavior feels like trap works browser developers use chrome nt work browser many customers use ios", "d": "4/2016"}, {"body": "nt think specialcase angular work crossbrowser use ngstyle", "d": "4/2016"}, {"body": "agree pkozlowskiopensource possible use stylewhatever ngclass syntax escapes actual property prevents weird wacky behavior", "d": "4/2016"}, {"body": "going close one nt think masking browsers handling dom properties", "d": "4/2016"}, {"body": "duplicate", "d": "4/2016"}, {"body": "oups right sorry", "d": "4/2016"}, {"body": "depends want service used bootstrap available whole program behaves little differently parent available children components think behavior bootstrapping singleton however notice one important difference two approaches registering provider app level creates injected dependency singleton entire application providers component level result new instances component level objects created new every injection per component ca nt use store state application level hierarchy within component still share instance guess view local component level singleton different angular pure singleton dependencies torgeir helgevold hope helps cheers", "d": "4/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "see thnx zoechi", "d": "4/2016"}, {"body": "something like plunker github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "zoechi interesting still pretty limiting nt allow slightly complex use cases like ngcontent ngfor original use case currently working nested directives giving right piece data right ngcontent hide another ngcontent thanks solution though definitely step right direction", "d": "4/2016"}, {"body": "see repeating template might help", "d": "4/2016"}, {"body": "nice thanks make new plunkr later today use case minmax tag would nt work ngcontent would nested ngfortemplate", "d": "4/2016"}, {"body": "working fine remove obviously conflict bootstrap css higher selectivity changing also makes work github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "issue aswel nt notice side effects though", "d": "4/2016"}, {"body": "issue well using unfortunately thing could find fix upgrade controller component", "d": "4/2016"}, {"body": "seems template loading via templateurl typo ngformmodel ngformmodel", "d": "4/2016"}, {"body": "lots tools lowercase attributes considered caseinsensitive angular needs case preserved attribute matching general approach think servergenerated templates may making things complicated need attribute case looks like issue", "d": "4/2016"}, {"body": "thanks frederikschubert gulp somewhy lowercasing works without minification maybe gulphtmlmin issue missing options gulptask html compile function return gulpsrc html cwd confpathshtml pipe htmlmin collapsewhitespace true pipe gulpdest confpathshtmloutputpath", "d": "4/2016"}, {"body": "cescoferraro gulphtmlmin points table options one called could try setting one true", "d": "4/2016"}, {"body": "great ericmartinezr works", "d": "4/2016"}, {"body": "plunker contain anything", "d": "4/2016"}, {"body": "problems recently even mainstream browsers could try using corejs uptodate version zonejs instead maybe try loading built using see works", "d": "4/2016"}, {"body": "put correct plunker url tried cpataincodeman url get similar error vendorjs library", "d": "4/2016"}, {"body": "may faced task figuring browser features missing need polyfilled possible ca nt imagine going many people targeting wiiu browser also using angular provide much help though", "d": "4/2016"}, {"body": "got working hack error happens patchclass tries read type xmlhttprequests responseblob property patchclass method iterating properties xmlhttprequest instance appropriate way avoid reading property added check property name responseblob return", "d": "4/2016"}, {"body": "unfortunately also issue android captaincodeman example issue problem zonejs", "d": "4/2016"}, {"body": "doest happen nwf app case need extra polyfills requestanimationframe remove tag since serving file url dom error occurs using web browser directly specific property proposed part behavior object nt state read since removed would acceptable throw trycatch around check", "d": "4/2016"}, {"body": "confirm skipping fixes things thanks switched reference temporary fork", "d": "4/2016"}, {"body": "fixes way", "d": "4/2016"}, {"body": "known issue", "d": "4/2016"}, {"body": "closing dupe", "d": "4/2016"}, {"body": "intended behavior route rendered next router outlet", "d": "4/2016"}, {"body": "also wondering route nt rendered inside router outlet specific reasons", "d": "4/2016"}, {"body": "rendered within element animation reasons", "d": "4/2016"}, {"body": "cc mhevery igorminar", "d": "4/2016"}, {"body": "already class following constructor signature use instead array", "d": "4/2016"}, {"body": "dzmitryshylovich oops forgot thank proposal focus use instead array", "d": "4/2016"}, {"body": "think falls realm opinion support imagine people type language backgrounds prefer style js developers prefer shorter untyped syntax think thing would create pr updates api docs make modes explicit would like take", "d": "4/2016"}, {"body": "see april router update simplifying aux routes makeing routes behave way default route blank name canactivate api hard ca nt injected moving parent prevent lazy loading code get full access injector routes async routes aid lazy loading", "d": "4/2016"}, {"body": "well looks pretty promising thanks pointing weekly notes", "d": "4/2016"}, {"body": "looks like angularjs angularjs issues managed github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem contributing got question problem", "d": "4/2016"}, {"body": "looks like angularjs angularjs issues managed github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem contributing got question problem", "d": "4/2016"}, {"body": "fixed pr", "d": "4/2016"}, {"body": "getting error different html fragment enable browser link enabled runningdebugging", "d": "4/2016"}, {"body": "hi liquidboy think probably right recall installing extension webessentials clicking live update button overlay appears base page ca nt confirm end rebuilt pc thus late reply due upgrade anyway though let said nt rebuild solve issues perhaps browser link working fine without actively disabled browser link settings reinstall buzzed get reply getting stuck weeks fun thanks lot dan guess issue closed weird interaction hope helps someone", "d": "4/2016"}, {"body": "works imo ita mistake use dependency injection constructor effectively perinstance value types config would better routeparams service could kept around observed changes used reference parent params well eg fact behave differently classes di confusing one options want use shared service pass parent params loaded objects child component using make sure nt add service components providers getting new instance time instead shared one", "d": "4/2016"}, {"body": "sure fully understand issue found attribute created dom used imho expected behavior seems work fine though syntax bind attributes instead properties", "d": "4/2016"}, {"body": "brtnshrdr take look thanks reporting", "d": "4/2016"}, {"body": "would item come angular polymer would even possible mix template systems maybe would easier tell angular completely ignore everything specific element", "d": "4/2016"}, {"body": "entire content passed asis supposed processed polymer example already exists similar purpose nt run situations except tag would necessary general mechanism would work well", "d": "4/2016"}, {"body": "yet used two systems time idea polymer angular would interact instance string interpolation identifier name guess general mechanism would needed", "d": "4/2016"}, {"body": "works fine polymer element treated like dom element angular binding syntax used pass values listen events conflicts except template tag", "d": "4/2016"}, {"body": "thinking situation polymer angular binding name template although think would probably issue template scope would overlap", "d": "4/2016"}, {"body": "also need solution need use angular binding one template childrens data parameters comes component property making angular ignore template tag treat div could probably make use case work pascalprecht fixed typos comment", "d": "4/2016"}, {"body": "specifically would use case let say could project template element like would stick around emulated shadow dom component processing right think handled unless actual reason keep template element", "d": "4/2016"}, {"body": "pascalprecht use case using polymer element sits template tag want declare template tags without angular interfering inside html component im writing still able use angular template features inside template tag data binding table data component property hope clarifies use case tell try explain familiar ngtemplateoutlet directive able find little information online find sure answer use case maybe example help understand reading source code nt see exactly relevant might wrong deeper explanation overall problem facing check question stack flow", "d": "4/2016"}, {"body": "elements like want get element passed used render list items currently possible", "d": "4/2016"}, {"body": "think handled ngtemplateoutlet unless actual reason keep template element polymer mandates template tags certain elements way getting around", "d": "4/2016"}, {"body": "way around adding template dom imperatively", "d": "4/2016"}, {"body": "looking code seems give form ngnoform attribute get decorated angular would enough still want directive decorates form element", "d": "4/2016"}, {"body": "oh right yes works usecase thank someone wants use part ngform eg validation", "d": "4/2016"}, {"body": "nt know possible would good feature request", "d": "4/2016"}, {"body": "sod validation performed form controls either directives regardless", "d": "4/2016"}, {"body": "looks like cors kicking server needs configured accept certain headers also maybe worth thinking using standard authorization header bearer token rather inventing", "d": "4/2016"}, {"body": "hi captain configured server accept certain header property nt arrive thanks", "d": "4/2016"}, {"body": "real thing check whether sent look request network tab browser sent problem angular end server intermediary", "d": "4/2016"}, {"body": "issue wanted use new value select option changed workaround used component class private selectedobj get selectedobj return thisselectedobj set selectedobj newobj thisselectedobj newobj thisobjchanged newobj ngoninit void thisselectedobj thisgetdefaultvalue template", "d": "4/2016"}, {"body": "think caused", "d": "4/2016"}, {"body": "use ngmodelchange instead change objname", "d": "4/2016"}, {"body": "solution messier large forms", "d": "4/2016"}, {"body": "found solution seems little elegant plunkr typescript directive selector ngcontrol export class mycontrol implements oninit ondestroy input ngcontrol string constructor host skipself private parent controlcontainer ngoninit void see settimeout gt thisformdirectiveforminclude thisngcontrol ngondestroy void thisformdirectiveformexclude thisngcontrol get formdirective return thisparentformdirective workaround works pretty well till still feels like something addressed framework", "d": "4/2016"}, {"body": "czosel like solution yes like said want supported framework since angular smile", "d": "4/2016"}, {"body": "mohammedzamakhan totally little followup actually switched implementation using like able also clear model element goes displayed hidden handy use case basic idea", "d": "4/2016"}, {"body": "routeparams provided route component done router need right either continue parse browser api effort move service core provide location service object query params would handle use case also", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "nice new github feature add reaction instead posts please use instead", "d": "4/2016"}, {"body": "decorators functions inheritance nt really make sense compose relatively easily wrap function decorator advise possible interfere build tooling looks component decorators understand arguments dry general errs favor explicitness", "d": "4/2016"}, {"body": "robwormald know understand well arguments behavior makes difficult build components similar behaviors languages use annotation keeps accessible reflection objects inherit would expected behavior angular typescript construction components component keeps much angular component behavior inherited something seem best way configure etc without using annotation inherited overwritten", "d": "4/2016"}, {"body": "guess added release allows", "d": "4/2016"}, {"body": "zoechi oh true bad nt checked release latest release", "d": "4/2016"}, {"body": "plunker reproduce issue would great github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "think use replace fix", "d": "4/2016"}, {"body": "creating plunker mentioned linked issue component implement canreuse", "d": "4/2016"}, {"body": "sure link launch preview select top hero go back", "d": "4/2016"}, {"body": "see also lots discussion works nt", "d": "4/2016"}, {"body": "canreuse going help imo ca nt prevent reloading component unless angular another router introduces stickystate component cache mechanism meantime could use service cache data prevent rerequested although people expectation going page show latest values may tested need mechanism push poll changes", "d": "4/2016"}, {"body": "think standard says void elements selfclosing angular implements standard luckily quiet closely see", "d": "4/2016"}, {"body": "frederikschubert reading several times seems like valid void elements thanks hint", "d": "4/2016"}, {"body": "seeing similar behavior app trying set new component router app looks similar robianmcds nevermind mine unrelated", "d": "4/2016"}, {"body": "dupe", "d": "4/2016"}, {"body": "true search dammit smile", "d": "4/2016"}, {"body": "would hope reported compile time instead runtime user reported error stackoverflow well rose", "d": "4/2016"}, {"body": "basarat problem users nt write typescript validated compile runtime", "d": "4/2016"}, {"body": "ericmartinezr indeed nevertheless typescript users like one linked compile time error passing string", "d": "4/2016"}, {"body": "basarat weird get error compile see vscode compiling user env must different", "d": "4/2016"}, {"body": "may parent like folder paths urls things root absolute relative ca nt assume parent always going root well case happen moved component links would wrong", "d": "4/2016"}, {"body": "captaincodeman could put kind example maybe would like understand point better think default behavior change course know router act default change needed eg nt want router use use default child root would need add routeconfig path name apphomecomponent component apphomecomponent useasdefault true way modify way like nt still default opinion logical way", "d": "4/2016"}, {"body": "come captaincodeman said default child path could something else component router treats nested routes like abstract routes uirouter ca nt navigate without terminating route tree choose put dummy component set child route default currently terminate somewhere", "d": "4/2016"}, {"body": "brandonroberts mean something like plunk", "d": "4/2016"}, {"body": "webtrix yea say dummy component cases seen people want navigate app without drilling one children component nt anything besides terminate route tree nested route", "d": "4/2016"}, {"body": "dup", "d": "4/2016"}, {"body": "hi quentinfchx agree expecteddesired behavior opened pr including changes best alex ngcontrib", "d": "4/2016"}, {"body": "please open", "d": "4/2016"}, {"body": "open issue zonejs repository zonejs already exposes event ca nt subscribe event nt expose part angular", "d": "4/2016"}, {"body": "gigitsu could used tell tasks multiple xhr requests let say completed fire event amazing would great addition", "d": "4/2016"}, {"body": "go", "d": "4/2016"}, {"body": "well damned good eye missed one thanks brandonroberts", "d": "4/2016"}, {"body": "instructions seem bit outdated created dockerfile days ago might helpful dockerfile googledebian jessie maintainer g\u00fcnter z\u00f6chbauer gunter gzoechbauercom run echo deb jessie main nonfree contrib gt gt etcaptsourceslist run aptget q update amp amp debianfrontendnoninteractive amp amp aptget install noinstallrecommends q curl git gitcore npm requires gt lt nodejs requires gt lt apttransport cacertificates make buildessential g amp amp aptget upgrade run curl sl bash amp amp aptget install nodejs run sh c curl aptkey add amp amp set location stable repository sh c curl gt etcaptsourceslistddartstablelist amp amp aptget update amp amp debianfrontendnoninteractive amp amp aptget install noinstallrecommends q dartstable env dartsdk usrlibdart env path dartsdkbin path run git clone recursive workdir angular run npm install bower g amp amp npm install tsd g run npm install amp amp bower allowroot install amp amp cd tools amp amp npm install amp amp tsd install amp amp cd amp amp npm install amp amp tsd install run node npm bin gulp build benchpress bundledeps docker run ti v pwd dist angulardist zoechiangularbuild sh node npm bin gulp build creates build output pwd dist", "d": "4/2016"}, {"body": "think ts problem rather feature see example", "d": "4/2016"}, {"body": "love writeup wish errors would written well thank making life easy known issue minification short minification broken angular right fix come part week issue minfier munges code classes get renamed collide gets added recursively causes stack overflow", "d": "4/2016"}, {"body": "current workaround bundle build need turn mangle props could invoked allow function names directivescomponentspipes work template", "d": "4/2016"}, {"body": "thanks details mhevery workaround glad hear known issue fix way best outcome hope", "d": "4/2016"}, {"body": "fwiw able get working static build made removing param webpack disabling mangling like posting case helps others nt think webpack angular common pair moment", "d": "4/2016"}, {"body": "problem jit template refactor uglify webpack reproduce error systemjs anything using uglify", "d": "4/2016"}, {"body": "yup understood sorry trying leave steps fix behind case anyone else also using webpack angular encountered issue", "d": "4/2016"}, {"body": "bvaughn brian thank wanted confirm fellow angular user trying fix days solution definitely helped thanks", "d": "4/2016"}, {"body": "looks like empty plunker without explanation closing nonactionable", "d": "4/2016"}, {"body": "must sth else going since limits frameworks code hard say without minimal live reproduction scenario closing till got one", "d": "4/2016"}, {"body": "stab dark even ask nt figure limitation existed updated nodejs latest angular beta working hard say issue thanks", "d": "4/2016"}, {"body": "windows issue solution mount extended drive use vm", "d": "4/2016"}, {"body": "first thing thought windows path length issue hitting characters nowhere near character maxpath limit rate working windows limitation would nt gone away updating node angular", "d": "4/2016"}, {"body": "called changed parent child might change gettersettertext changed", "d": "4/2016"}, {"body": "called input changed parent child zoechi ya totally comprehensible experiencing scenario gets fired value reference changed meaning u mutate inner structure event wo nt fired binding works properly default changedetectionstrategy though example sure whether missing something whether intended behavior", "d": "4/2016"}, {"body": "zoechi nevermind found", "d": "4/2016"}, {"body": "wardbell would nice able make pr repo first make sure new loader compatible", "d": "4/2016"}, {"body": "using latest jspm still getting error referenceerror modulename defined working per via jspm regards", "d": "4/2016"}, {"body": "perhaps clear technique works cooperating module loaders variable defined systems loaders may similar variable different name nt know jspm perhaps research tell us support jspm offers concept clarifying text would also welcome", "d": "4/2016"}, {"body": "research tx feedback", "d": "4/2016"}, {"body": "wardbell working typescriptsystemjs right angulario looks like rely trick maybe missing something tried angularcli one projects recently still working whereas using commonjs working", "d": "4/2016"}, {"body": "yes must load systemjs later", "d": "4/2016"}, {"body": "fyi use jspm uses still issue", "d": "4/2016"}, {"body": "strange using systemjs without jspm nt work think nt work newly generated project angularcli either maybe another tiny option switch somewhere missed angulario config", "d": "4/2016"}, {"body": "mistake work angularcli", "d": "4/2016"}, {"body": "fill attribute angular dynamic data try", "d": "4/2016"}, {"body": "thanks code worked", "d": "4/2016"}, {"body": "stumbled upon issue well strangely enough nullifying css property worked angular beta application beta documentation directives makes use setting css property null probably updated well", "d": "4/2016"}, {"body": "comfreek would mind provide example case working mine plnkr nt work", "d": "4/2016"}, {"body": "ericmartinezr yesterday could nt reproduce behavior fresh plunkr beta however could exactly reproduce old code base today bizarrely behavior old copy changed clearing ie cache ie nullifying elemstylebackgroundcolor case effect anymore maybe behavior due following specifics application time user clicked svg rectangle loaded inside tag code recomputed values however events triggered svg dom within tag somehow recognized angular workaround using following code snippet run inside component method thiszonerunoutsideangular gt component function recompute changes variables component referenced template template generate list using ngfor variables element highlight directive mouseenter mouseout events latter sets backgroundcolor null thisrecompute thiszonerun gt update complete nothing note specify callback function though could imagine triggered internal refresh ui elements regenerated previous styles therefore lost", "d": "4/2016"}, {"body": "filed", "d": "4/2016"}, {"body": "try using corejs instead lots different combinations shim poiyfill loading possible work browsers right loading shims polyfill service intl pieces corejs cdn alsoworks adding specific pieces bundle zonejs bundle leaving reflect metadataand works browsers chrome ff safari ie edge android", "d": "4/2016"}, {"body": "thanks corejs works indeed well", "d": "4/2016"}, {"body": "could list exact js files using ie sure need corejs new thank", "d": "4/2016"}, {"body": "polyfills use check srcindexhtml polyfills amp corejs srciefixjs special angular ie fix webpack config zonejs also option removing corejs indexhtml loading selected parts bundle check webpackconfig pieces needed last time checked would nice everything could loaded single polyfills service people starting nt know green lights homepage browsers nt actually work follow official instructions disconnect time polyfills fixed instructions updated preferably", "d": "4/2016"}, {"body": "thanks lot got rid systempolyfillsjs shimsforiejs added zoneminjs coreminjs far seems working nt use iefixjs", "d": "4/2016"}, {"body": "depends features use hard say using anything depends may fine nt use date number pipes instance intl polyfill nt needed safari otherwise corejs possibly enough ideally would definitive list features used required would allow focused polyfills used list corejs bit trial error working things ie", "d": "4/2016"}, {"body": "quick summary document describing poly shim things work nt need go deep right would good understand", "d": "4/2016"}, {"body": "basic idea implement new browser language features older browsers nt yet support things natively apps take advantage nt detail know exactly pieces needed projects like corejs probably describe things detail ideally shimming polyfills mostly transparent imo single file referenced figures needs patched need indepth intimate knowledge exactly shims required specific orders loading something wrong missing really nt difficult though whatever solution need support browsers claimed supported", "d": "4/2016"}, {"body": "well problem reverting back original shimsfills fixes still ie nt work omg", "d": "4/2016"}, {"body": "super annoying keep fixing polyfill every new version angular polyfill working heavily stuck hours", "d": "4/2016"}, {"body": "attn petebacondarwin", "d": "4/2016"}, {"body": "documentation issues maintained", "d": "4/2016"}, {"body": "obsolete", "d": "4/2016"}, {"body": "nt tried yet new code close reopen crops", "d": "4/2016"}, {"body": "works fine ts suspected issue svg elements", "d": "4/2016"}, {"body": "using pure decorators class properties nt exist", "d": "4/2016"}, {"body": "zoechi fine bstrauss use webpack compile babelloader config like want use typescript npm module like segmentjs always ca nt find", "d": "4/2016"}, {"body": "zoechi demo seems work fine", "d": "4/2016"}, {"body": "kone babel plugin annotations nt use babel try luck also found babel example", "d": "4/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "carlcui thx zoechi close issue", "d": "4/2016"}, {"body": "please direct support questions appropriate channel", "d": "4/2016"}, {"body": "please close", "d": "4/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "see also", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "see also github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "see also", "d": "4/2016"}, {"body": "issues minified files reported times already see also", "d": "4/2016"}, {"body": "closing duplicate", "d": "4/2016"}, {"body": "ok help guys gitter narrows working selectors works types", "d": "4/2016"}, {"body": "supports component directive types parameter name template variable plunker example also supports commaseparated list template variables like css selectors supposed work", "d": "4/2016"}, {"body": "thanks good know someone please update docs", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "sounds like general support question around build packaging would better asked using one support channels", "d": "4/2016"}, {"body": "support questions asked stackoverflow gitter", "d": "4/2016"}, {"body": "cebor right support question asked using one provided support channels", "d": "4/2016"}, {"body": "cc mhevery tbosch", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "seems related", "d": "4/2016"}, {"body": "angular please report", "d": "4/2016"}, {"body": "nope right import statement correct quickstart", "d": "4/2016"}, {"body": "ahhhh nevermind complete oversight part angularbootstrap ends ing closing nice catch felix thank", "d": "4/2016"}, {"body": "problem fact also happens example given official website using safari", "d": "4/2016"}, {"body": "think problem called using back button issue might duplicate", "d": "4/2016"}, {"body": "got problem safari using backforward button manipulate url ngaftercontentinit ngafterviewinit nt get called analysis looks like ngaftercontentinit ngafterviewinit get called tick get callen onmicrotaskempty event safari never happens using backforward button really dirty workaround sure impacts following typescript import component applicationref import routeconfig routerdirectives router import acomponent acomponent import bcomponent bcomponent component selector myapp template first angular app directives routerdirectives routeconfig path name component acomponent useasdefault true path b name b component bcomponent export class appcomponent constructor private applicationref applicationref private router router routersubscribe gt thisapplicationreftick settimeout gt thisapplicationreftick", "d": "4/2016"}, {"body": "also found nginit event called whenever destroy component thats really strange mention nt use typescript use babel plugins would understand would nt run browser runs every browser except google chrome macosx also log output could give hint going wrong thanks help advance case someone would take look bootstrapping project source", "d": "4/2016"}, {"body": "massive ngfor problems since chrome updated days ago particular get following effs angular app works safari", "d": "4/2016"}, {"body": "janbaer mwawrusch hard progress one without minimal reproduction scenario plunker", "d": "4/2016"}, {"body": "think problem case ngfor first thought environment described events like ngoninit fired expected moment reproducable deployed version wwwhowcanieu code github rebuild whole environment plunkr bit much effort reproduce clone project npm gulp serve reproduce minute", "d": "4/2016"}, {"body": "closed issue since meantime found problem nothing todo ngfor problem router since occurs components shown within routeroutlet element create separate issue", "d": "4/2016"}, {"body": "code demonstrates tried plunker", "d": "4/2016"}, {"body": "give make plunker", "d": "4/2016"}, {"body": "resolved sorry", "d": "4/2016"}, {"body": "third callback nt called error occures promises nt method observable object method try", "d": "4/2016"}, {"body": "question trying search web onin service nt recognized released new version another way mapping something lift isscala", "d": "4/2016"}, {"body": "need rxjs beeterry make sure importing rxjsmap top", "d": "4/2016"}, {"body": "bromzh thanks think third callback never called even error observable works though call calling would helpful mentioned docs people would confuse using third callback observer finally", "d": "4/2016"}, {"body": "seems rxjs issue issue", "d": "4/2016"}, {"body": "zoechi rxjs fine observable works angular http module firing third callback function", "d": "4/2016"}, {"body": "use aka complete use looking function excecutes http request ends wheter success fails seen lot docs say things gt first time found something finally anyway try report back", "d": "4/2016"}, {"body": "ca nt replicate observable specification says either error complete called never finally useful case want something either case", "d": "4/2016"}, {"body": "mautematico think using right way want something whatever happens robwormald confirmed fixed closing thanks", "d": "4/2016"}, {"body": "nt look like", "d": "4/2016"}, {"body": "class class classcomponent component selector attribute template class attributecomponent component selector liitem template class elemclasscomponent component selector app directives classcomponent attributecomponent elemclasscomponent template export class app items output think attribute variant best solution", "d": "4/2016"}, {"body": "thanks tip try option removed angular", "d": "4/2016"}, {"body": "already deprecated would add", "d": "4/2016"}, {"body": "ah ok thanks clarification", "d": "4/2016"}, {"body": "nice catch would definitely upgraded core reflect maybe check existence either createshadowroot attachshadow needed", "d": "4/2016"}, {"body": "strange chrome stable nt support attachshadow quite yet fact nt know besides stp feels like polyfill like check see either method exists element use one would desirable approach opinion also", "d": "4/2016"}, {"body": "camel case includes two formats lowercamelcase uppercamelcase later also called pascalcase think false may misleading", "d": "4/2016"}, {"body": "havin template child node message little bit clear unacurrate throws makes sense correctly closed unexpected closing tag li error gt app makes sense error message unexpected closing tag div error gt app", "d": "4/2016"}, {"body": "uncaught error happens undefined function replacing created better clearer error message like mentioned beta", "d": "4/2016"}, {"body": "btford", "d": "4/2016"}, {"body": "nt think possible breaks kinds static analyzation guarantees pass object array", "d": "4/2016"}, {"body": "thanks robwormald mean something like never tried", "d": "4/2016"}, {"body": "fyi possible extend syntax part compiler noted robwormald introducing dynamic syntax would break ability statically reason templates", "d": "4/2016"}, {"body": "updated via", "d": "4/2016"}, {"body": "clearly edge case app grows little bit really usual see", "d": "4/2016"}, {"body": "issue app effect amplified use ioninput component effect always simple input ngmodel plunker", "d": "4/2016"}, {"body": "try upgrade zonejs working example", "d": "4/2016"}, {"body": "thnx zoechi", "d": "4/2016"}, {"body": "strange behaviour modeldrivenform ngformmodel simple form ngsubmit submitfunction calls async function returns observable subscribefunction change instance values problem testcase trigger click submitbutton submitfunction gets called code coverage shows everything executed also subscription expects failing test waiting async stuff finishes recognize async changed values solution changed ngsubmit submit working", "d": "4/2016"}, {"body": "killercodemonkey nt think problem related issue could related events run async handler likely called async good post behaviour components also affects builtin directives angular team changing behaviour async sync soon nt happened yet tracked sure explains one works though maybe works differently reason well could related issue", "d": "4/2016"}, {"body": "xsilen looks like closing issue intended", "d": "4/2016"}, {"body": "zoechi need find better solution nt want trouble angular", "d": "4/2016"}, {"body": "hey alexeagle took pass let know pr sufficient", "d": "4/2016"}, {"body": "need add lint check prevent happening", "d": "4/2016"}, {"body": "zone always zone speak relevant question zone check angular shows problem look source reqwest uses sdk using xhr hood appears work fine isolation", "d": "4/2016"}, {"body": "upgrading beta beta seeing something similar route changes initial load initial load http calls using lokka graphql queries run zone changedetection still runs could things http call triggering round change detection call resolved route change http calls also running zone ui nt update call resolves worked around temporarily running api returns ngzonerun pretty sure regression beta", "d": "4/2016"}, {"body": "robwormald upgraded beta currently using zone still reproduce issue scenario call stack trace value breakpoint hit beginning callback see console bottom screenshot set workaround also running callback inside far noticed different behaviour depending routing scenario", "d": "4/2016"}, {"body": "sounds like general support question without reproduce scenario closing", "d": "4/2016"}, {"body": "wardbell imho following logic cited neglects side coin ca nt use router independently component let make easy router configuration component definition place true use component without router think better way look components fundamental building block", "d": "4/2016"}, {"body": "captaincodeman make persuasive argument evaluating activate logic within target component side argument prefer block activation earlier especially route may involve async loading feel heavy price pay failed route even failed routes rare fwiw issue decided well move nt follow reflecting argument favor writing router configuration within component rather place writing component without router moot right nothing configure nothing put keep component escardin attractive using inputs sounds nt hold many common use cases clear route query string parameters align input properties url material nt match input properties become available component fear complexity whatever might proposed matching input properties parameters buried url may neglected critical role query string url nt ignored parsed input properties believe essence choeller critique proposal meanwhile triedandtrue routers experience keep routing constructs separate componentcontroller know separation works think misunderstand role participates router decision whether component instance recycled must discarded recreated equivalent among component lifecycle hooks component lifecycle hooks substitute provide valuable information navigation target component simply available way neither component hooks input params perfectly honest worthy ideas may nebulous incomplete far addressing concretely routing scenarios know need handle may disagree cool nt wish cruel hardhearted ideas arrive late point game design router moved think say definitively wo nt templatedriven petebacondarwin cat dead apologies schr\u00f6dinger become something like instance method routing component routing hooks live routing parameters live although nt injected available instruction parameters router lifecycle hooks input properties remain independent routing structure components need know information derived navigation become aware routing subsystem time move may also worth remembering component router optional subsystem part angular core sucks angular survive someone build better one move personal bet component router feel soon overcome current urgent defects", "d": "4/2016"}, {"body": "thnx ericmartinezr", "d": "4/2016"}, {"body": "actually nt get relevant answer read docs know behavior design issue fact design probably optimal sorry clear original message", "d": "4/2016"}, {"body": "calling bindings yet resolved would make obsolete set flag check called whether called first time act accordingly nt need", "d": "4/2016"}, {"body": "zoechi call resolving bindings hand following line reasoning even current position life cycle really need exist said set flags check first call however think logic mostly deals bindings lb put initialization logic nt use bindings much go li separation would look clear logical question likely lb use results li vice versa answer question determine order hooks invoked", "d": "4/2016"}, {"body": "ngoninit ngonchanges sequence seem based case component inputs change actually ngonchanges implemented case ok heavy initialization docs suggest turn ngoninit two main reasons perform complex initializations shortly construction set component angular sets input properties ngoninit often fetches data component shown tutorial http chapters nt fetch data component constructor experienced developers agree components cheap safe construct nt worry new component try contact remote server created test decide display constructors set initial local variables simple values component must start working soon creation count angular call ngoninit method jumpstart heavy initialization logic belongs remember also directive databound input properties set construction problem need initialize directive based properties set ngoninit runs want component react changes inputs surely components nt contract behind start adding flags handling lessuseful call sequence first call telling input values component nt yet initialized need move initialization code call ngonchanges part anyway makes ngoninit little irrelevant potential landmine catch unwary think people would expect sequence constructor gt init gt changes repeated happen current ordering feels unintuitive surprise nt help people fall pit success want respond changes use ngonchanges want ignore input changes use ngoninit think argue ngoninit ngonchanges using nt make much sense add anything could simplified combined ngonchanges know probably late changes things shipped probably stuck", "d": "4/2016"}, {"body": "captaincodeman actually things nt shipped pkozlowskiopensource please consider reopening issue believe closed mistake", "d": "4/2016"}, {"body": "actually things nt shipped sorry thought component router mentioned docs must version ahead think issue closed means discussion design", "d": "4/2016"}, {"body": "component lifecycle hooks still development particular latest released version nt called initialization going included release cancelled reason believe still late change invocation order least nobody relying current order okay design design considerations behind current hook sequence bad idea change probably bad great get substantive answer questions going asked due counterintuitiveness current design", "d": "4/2016"}, {"body": "least nobody relying current order stand corrected thought router component stuff already released agree time change needs changing okay design design considerations behind current hook sequence bad idea change probably bad great get substantive answer questions going asked due counterintuitiveness current design pointing discussed shut design nt suggesting thought would bad idea change agree seems counter intuitive unhelpful nt know pieces seem open major redesign even rewrites whereas parts maybe differences people view beta means eg api meant stable implications making various changes", "d": "4/2016"}, {"body": "duplicate", "d": "4/2016"}, {"body": "solved properly updating", "d": "4/2016"}, {"body": "problem ie", "d": "4/2016"}, {"body": "also affects safari mobile tested ios", "d": "4/2016"}, {"body": "still happening beta ios also os x safari", "d": "4/2016"}, {"body": "solved angular working either", "d": "4/2016"}, {"body": "oninit still fired safari el capitan safari also iphone", "d": "4/2016"}, {"body": "vcorr issue still open nt list fixed therefore kinda expected", "d": "4/2016"}, {"body": "oninit fired angular js general see something similar solutions listed longer work something backforward cache safari cache whole page memory navigate back page instantly shown without rerendering scripts continue running dirty hack found yet start time navigating next page come back timer trigger function", "d": "4/2016"}, {"body": "remove add zone reflectmetadata", "d": "4/2016"}, {"body": "ourway captaincodeman thanks info along changing zonejs fixed issue", "d": "4/2016"}, {"body": "managed get working ionic copy reflectjs zonejs www folder reference indexhtml hopefully fix soon", "d": "4/2016"}, {"body": "issue still fixed beta", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "nice new github feature add reaction instead posts please use instead", "d": "4/2016"}, {"body": "similar issue", "d": "4/2016"}, {"body": "someone tries fix send pr zone repository", "d": "4/2016"}, {"body": "hey awesome fixed upgrading angular zone packagejson run npm install", "d": "4/2016"}, {"body": "nt understand builds decided seems odd things fixed included release sometimes weeks meantime confusion fixed lots people still issue unless nt follow instructions use files tells", "d": "4/2016"}, {"body": "error gone away makes app buggy views go black crash ever manually importing reflect zone instead polyfills makes go away", "d": "4/2016"}, {"body": "looks good", "d": "4/2016"}, {"body": "getting error beta bing maps pan zoom map reproduce issue", "d": "4/2016"}, {"body": "fix beta works upgrade zonejs remove add zone reflectmetadata indexhtml", "d": "4/2016"}, {"body": "looks like fixed beta", "d": "4/2016"}, {"body": "solved updated whole stack systemjs reflectmetadata rxjs zonejs", "d": "4/2016"}, {"body": "hi robwormald wondering status updating rx dependency assigned github issue follow thanks time really appreciate work guys", "d": "4/2016"}, {"body": "also fixed", "d": "4/2016"}, {"body": "simply look repo import", "d": "4/2016"}, {"body": "remnantarcher use zonejs problems zonejs polyfills looks like js import corejs import zonejsdistzone production processenvenv production else development errorstacktracelimit infinity require zonejsdistlongstacktracezone also always try fresh working project", "d": "4/2016"}, {"body": "thank simply updating trick", "d": "4/2016"}, {"body": "change zonejsdistzone instead zonemicrotask webpackconfigjs update thanks", "d": "4/2016"}, {"body": "working sure fixed", "d": "4/2016"}, {"body": "solution one", "d": "4/2016"}, {"body": "micaelmbagira use beta example see working project", "d": "4/2016"}, {"body": "looking forward improvement", "d": "4/2016"}, {"body": "hello anyone", "d": "4/2016"}, {"body": "hello issue beta trying use forerunnerdb working fine first time second time come page full stack trace thanks lot", "d": "4/2016"}, {"body": "worth also happened across beta trying use seems fixed beta thanks", "d": "4/2016"}, {"body": "yes still reproduce also hybrid application", "d": "4/2016"}, {"body": "please file separate issue plunker reproduction", "d": "4/2016"}, {"body": "fine indeed broken", "d": "4/2016"}, {"body": "stevenfernandez indeed tobias answering question impact work flight working getting fixed", "d": "4/2016"}, {"body": "mhevery nt closed commit wink", "d": "4/2016"}, {"body": "use works uglify webpack get error", "d": "4/2016"}, {"body": "yeah comprehensive minification currently possible uglification settings usable nt shrink things much possible things fixed work", "d": "4/2016"}, {"body": "still happens running compiled app simple node server using works fine getting ngzoneimpljs source map", "d": "4/2016"}, {"body": "clarify need use injection create tcb could helper function", "d": "4/2016"}, {"body": "greg comment still seems valid concern experience angular would make sense checked state value updates handled providing ngmodel work around valid seems little awkward clean framework", "d": "4/2016"}, {"body": "provides valid alternative well otherwise incorporating something like custom vsavkin commit provided following example tests syntax appears assume using separate underlying controls model variables may made sense case checkbox groups obvious usecase radio controls would instead radio control group linked single underlying model variable example given", "d": "4/2016"}, {"body": "choeller would need redefine logic constructing title link knowledge construct title maybe belong component explain would like see linksyntax actually asking link params array option agree componentknowledge figured would put use logic within component constructed method link params array argument might also able bind point need router take care setting title figure pretty sure governs shows browser tab label think push state title appears popup pressandhold browser forwardback buttons wrong", "d": "4/2016"}, {"body": "title argument seems univerally ignored year old empty string passed seems used", "d": "4/2016"}, {"body": "oh crap title second parameter string time writing every browser simply ignores agree router facility set title part navigation fond trouble choeller went set make easy course navigation process nt think", "d": "4/2016"}, {"body": "empty string passed documentstring seems used nt mean also think parameter completely ignored means always used", "d": "4/2016"}, {"body": "expect support static string value route config alternatively lifecycle callback allows dynamically generate string executed", "d": "4/2016"}, {"body": "wardbell totally agree easier option set browser title point imo belong navigation part ngrouterlink navigateto rather config route putting navigation part imo somehow implies wrong responsibilities component calling target would decided title target sure get point saying something like would still let someothercomponent decide title overviewcomponent getting idea thinking adding title another property routeconfig like", "d": "4/2016"}, {"body": "another question occuring titles parent child routes concatenated one component able set title", "d": "4/2016"}, {"body": "titleservice perfectly sets history pushstate checked chrome firefox contain correct title set via titleservice proof excuse german", "d": "4/2016"}, {"body": "zoechi imo magic like concatenating titles parent child lead confusion benefit someone wants seperator like someone else wants say title personal opinion introduce less magic possible", "d": "4/2016"}, {"body": "choeller looking thanks confirmation remains done make easy set title navigation leave issue open done although given viable workaround perhaps deprioritize relative things must ca nt presently zoechi question answer nt think automate believe developer job determine title navigation see choeller said bit elegantly", "d": "4/2016"}, {"body": "wardbell yeah usecases working need totally agree subscribe router quite wordy calculations still kind pita nevertheless also see topics especially di lifecycle stuff way essential rc", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "show plunk shows also shows", "d": "4/2016"}, {"body": "need add line maints", "d": "4/2016"}, {"body": "although rhbecker correct think longer issue since updated able close issue", "d": "4/2016"}, {"body": "unfortunately fixed fixes destruction way around ngondestroy called downgraded components issue scope never destroyed upgraded components see updated beta problem persists would expect destroyed printed console button clicked", "d": "4/2016"}, {"body": "checked problem gone thanks", "d": "4/2016"}, {"body": "like document nt think understand scenarios well enough many ways skin cat variations imo big deal write component per variation use ngswitch life used nginclude small variation sets nt miss volume requirements tolemac beg different kind approach entity metadata driven ideas dynamic forms cookbook see docs may general sense tolemac would like write custom screens entities need imply files small html inline templates fine least time think inheritancemixin issues addressed adequately take thought help group noodling", "d": "4/2016"}, {"body": "discussion veering howdoidothis territory think want move angular mailing list github issues really discussing bugs feature requests", "d": "4/2016"}, {"body": "u get chance resolve", "d": "4/2016"}, {"body": "posted temporary fix issue might related problem", "d": "4/2016"}, {"body": "nobody helping", "d": "4/2016"}, {"body": "problem accepts unnamed route outlets sure reason behind function defined sets router member null able work around problem replacing function router component defines aux routes hack temporary fixing problem mine side effects far", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "fixed chrome give error object nt support property method keys ie remove", "d": "4/2016"}, {"body": "contains shims zones reflex metadata quite contains zones reflectmetadata shims still need loaded separately otherwise get error davidrensh describes use corejs corejs also includes reflectmetadata well many shims polyfills possibly combinations load", "d": "4/2016"}, {"body": "fyi currently using things concerns", "d": "4/2016"}, {"body": "christopherthielen global objects mentioned available", "d": "4/2016"}, {"body": "recommend using separately hits next couple weeks see also reducing need run", "d": "4/2016"}, {"body": "hi similar issue npm install typings global typingsjson dependencies devdependencies angularprotractor github definitelytypeddefinitelytypedangularprotractorangularprotractordts jasmine github definitelytypeddefinitelytypedjasminejasminedts seleniumwebdriver github definitelytypeddefinitelytypedseleniumwebdriverseleniumwebdriverdts ambientdependencies github", "d": "4/2016"}, {"body": "petebacondarwin thanks fix looks like would fix problem plan merge master soon", "d": "4/2016"}, {"body": "ran problem updated last version angular beta error message changed found workaround", "d": "4/2016"}, {"body": "person issue solved twice call little hack controller think correct fast solution see solution", "d": "4/2016"}, {"body": "seems issue gone upgraded angular", "d": "4/2016"}, {"body": "still occurring exactly error exactly places full error log pastebin offending template categoryname categorydescription categoryname categorydescription mutable array frozen objects empty array", "d": "4/2016"}, {"body": "getting error ios", "d": "4/2016"}, {"body": "typeerror set property endsourcespan null missing closing tag", "d": "4/2016"}, {"body": "exception error instantiation router routerlink router routes path", "d": "4/2016"}, {"body": "still docs support", "d": "4/2016"}, {"body": "week meeting notes said template string extraction pluralization directives complete several minor steps required make usable real projects requires completion change core work change much core compiler template expressions dependency injection change detection moving codegeneration build step improves performance yet lets developers drop much framework size deploying", "d": "4/2016"}, {"body": "eg right need immediate instantiation check necessary events", "d": "4/2016"}, {"body": "resolved", "d": "4/2016"}, {"body": "finished", "d": "4/2016"}, {"body": "samething happening angular", "d": "4/2016"}, {"body": "problem anyone know workaround", "d": "4/2016"}, {"body": "possible workarounds issue", "d": "4/2016"}, {"body": "closing dupe", "d": "4/2016"}, {"body": "also trouble building windows need run twice first time fails error message like npm err windowsnt npm err argv c program files nodejsnodeexe c userszackhallappdataroamingnpmnodemodulesnpmbinnpmclijs npm err node npm err npm npm err code zbuferror npm err errno npm err unexpected end file run fails immediately message node nodemodulesbingulp buildjs e basedir dirname echo sed e g syntaxerror missing argument list exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload functionmodulerunmain startup simply run get output gets stuck last stage never changes gulp buildjs dart sdk available dart tasks skipped using gulpfile e starting buildcleanjs starting buildcleantools starting buildcleandart dart sdk available skipping task buildcleandart finished buildcleandart \u03bcs starting buildcleandocs starting buildcleanbundles starting buildcleanbundlesbenchpress finished buildcleandocs ms finished buildcleanbundles ms finished buildcleanbundlesbenchpress ms finished buildcleanjs ms starting buildjsdev finished buildcleantools ms starting buildtools starting buildtools starting clean finished clean \u03bcs starting bundlengpolyfills starting bundlesjsdocs finished bundlesjsdocs ms finished bundlengpolyfills finished buildtools finished buildtools starting broccolijsdev starting broccolijsdev starting buildjsprod starting broccolijsprod starting buildjscjs starting buildjscjs", "d": "4/2016"}, {"body": "still beta", "d": "4/2016"}, {"body": "works great beta working beta", "d": "4/2016"}, {"body": "going start implementing basic easy global location title title actually abstract class since implementation already exists browser platform chatted igorminar implementation location tokens going start pr add tokens focus integrating platform later", "d": "4/2016"}, {"body": "pr title location global", "d": "4/2016"}, {"body": "closing obsolete new asynctest", "d": "4/2016"}, {"body": "issue override happens expansion parts nt general issue", "d": "4/2016"}, {"body": "think similarrelated confirmed valid bug", "d": "4/2016"}, {"body": "rbriank problem found solution", "d": "4/2016"}, {"body": "well nt also part public api certainly using manual change detection components using", "d": "4/2016"}, {"body": "issue seems accurately describe root problem minification etc simple terms angular framework makes misguided assumption constructor function names unique", "d": "4/2016"}, {"body": "per two lines look suspicious seem referencing functionprototypename ca nt rely fn names get stripped renamed minifiers", "d": "4/2016"}, {"body": "hi juliemr found issue crossreferenced would please kind clarify would fixing issue resolve ie fix xhr testability behaviour typescript dart", "d": "4/2016"}, {"body": "paullessing hope still useful resolved typescript wait xhrs treat macrotasks", "d": "4/2016"}, {"body": "point logic exists zonespecs testinjector probably still cleanup could nt blocking rc anymore removing milestone", "d": "4/2016"}, {"body": "pretty much done would simple someone make adapter framework jasmine", "d": "4/2016"}, {"body": "solution managed put together quite bit buggy apparently angular nt remove inserted destroying component whose needed make styles global see demo codepen basically created component creates dynamic component input style whenever input style changes nt change input style often though get tags page still searching fix nt directly access dom component selector globalstyle template changedetection changedetectionstrategyonpush class globalstylecomponent implements onchanges private style string input set style value string thisstyle value thisconstructstyles get style string return thisstyle private currentstylecomponent componentref null constructor private dynamiccomponentloader dynamiccomponentloader private viewcontainerref viewcontainerref constructstyles void thiscurrentstylecomponent thiscurrentstylecomponentdestroy use like edit sorry resurrecting saw dates posts", "d": "4/2016"}, {"body": "follow changing querying native make difference nt make difference try locally issue general testing form due use observables sometimes changes done asynchronous microtasks required places difficult use synchronous test help allowing unit tests wait microtasks complete meantime working incantation js display form register async gt first detectchanges necessary forms set fixturedetectchanges", "d": "4/2016"}, {"body": "see experimentation various ways testing forms note whether form asynchronous depends whether use", "d": "4/2016"}, {"body": "problem indeed disappear thanks juliemr taking time check examples look forward new api componentfixture", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "many commenters also report issues minification probably related", "d": "4/2016"}, {"body": "really issue belongs repo fwiw made much easier switch language tracks documentation without getting lost recommend closing issue reopening someone substantive suggestion improvement", "d": "4/2016"}, {"body": "switching language worked fine last tried days ago", "d": "4/2016"}, {"body": "works typescript see issue dart", "d": "4/2016"}, {"body": "thanks work around seeing behind corp proxy", "d": "4/2016"}, {"body": "news", "d": "4/2016"}, {"body": "still exactly like nereujunior describes issue reopened", "d": "4/2016"}, {"body": "looks like duplicate", "d": "4/2016"}, {"body": "vactorlao location nt method nt know got posted comment curious could work", "d": "4/2016"}, {"body": "zoechi location windowlocation ng location may use windowlocationreload locationreload", "d": "4/2016"}, {"body": "anyone pass walk around order avoid checks", "d": "4/2016"}, {"body": "banged issue well first instinct exactly op elaborate decided necessary hit dom instead relying name property original comment", "d": "4/2016"}, {"body": "rapropos ca nt remember right think related creating checkboxes dynamic names inside loop", "d": "4/2016"}, {"body": "hmm maybe ok relying name property would also like suggest issue transcends control groups way see using discriminator affect radio buttons form first attempt working around create separate subgroup desired radio group ie instead tried changing corresponding bindings add additional level indirection nt help selecting radio button either group deselected buttons even ones groups", "d": "4/2016"}, {"body": "igorminar vikerman status nice could move forward blocks adopting", "d": "4/2016"}, {"body": "igor chuck prs pending think land today getting ts like get ts need lower output dts files ts putting readonly modifiers fri apr martin probst notifications githubcom wrote igorminar vikerman status nice could move forward blocks adopting receiving authored thread reply email directly view github", "d": "4/2016"}, {"body": "mprobst depend fri apr alex eagle notifications githubcom wrote igor chuck prs pending think land today getting ts like get ts need lower output dts files ts putting readonly modifiers fri apr martin probst notifications githubcom wrote igorminar vikerman status nice could move forward blocks adopting receiving authored thread reply email directly view github receiving mentioned reply email directly view github", "d": "4/2016"}, {"body": "mprobst depend iirc alexeagle know exactly", "d": "4/2016"}, {"body": "correct stable move one soon sat apr martin probst notifications githubcom wrote mprobst depend iirc alexeagle know exactly receiving mentioned reply email directly view github", "d": "4/2016"}, {"body": "chuckjaz done work fixing broccoli work ts almost done", "d": "4/2016"}, {"body": "also include like way exclude reference path application bootstrap file works typescript sure older versions edit never mind nt work nt", "d": "4/2016"}, {"body": "never understood exclude nodemodules tsconfig nt add ref anywhere everything works fine must using witchcraft instead", "d": "4/2016"}, {"body": "filesglob typescript feature something atom editor integration files never works conjunction exclude use files exclude ignored highly numerous broken tsconfig examples web advice nt use exclude use files point right starting points follow references form", "d": "4/2016"}, {"body": "kylecordes thank insight know filesglob atom feature actually nt even know atom property reference editor thought something completely different trying build starter project ground looks like lot existing starter projects borrow really want understand everything fits together even close finished starting actually changing original snippet", "d": "4/2016"}, {"body": "getting back topic started thread right track addition listing dts file would also need add starting point files importantly topmost file application anything brought via typings tool would point something like typingsbrowserdts", "d": "4/2016"}, {"body": "risk would like throw plunkr bug well pretty simple example using beta looking forward fix", "d": "4/2016"}, {"body": "juliemr vsmenon talk", "d": "4/2016"}, {"body": "wealima change ddmmyyyy yyyymmdd working showing date ddmmyyyy", "d": "4/2016"}, {"body": "definetely bug inside extractcomponents function srcfacadeintl say look code updated assume dart version work good troubles becouse freaking dart", "d": "4/2016"}, {"body": "research found code never suppose fit scenario reimplemented scratch may clone implementation currently formatter looking locale pass pattern string mm dd yyyy dd mm yyyy really pattern affect formatting inside pattern fact strongly coupled global object according spec knowledge object suppose cover scenario also suppose work safari legacy browsers pretty major issue good news someone work need adjust every line code dart compiler couse dart implementation datetime object implementation datetime formatter well", "d": "4/2016"}, {"body": "guess ticket concisely written provideexpose api turn allows property injection annotations one wishes", "d": "4/2016"}, {"body": "staeke clarify inject injector get components injector request instances missing expected api details", "d": "4/2016"}, {"body": "zoechi right problem always driver seat component use cases first expected api expect work equivalently typescript example service amp api const registry new weakmap lt injector gt function getforcomponent compinstance return registryget compinstance arbitrary component class mycomponent needed constructor injector injector registryadd injector would need may want write generalized property annotation using kind service example something autopopulates charge annotating constructor constructor instance method could write generalized annotation run inject eg base components using injected objects project currently uses component general stuff constructor parameter break concerns little spilling requirement sub component unnecessary code prone errors omit constructor generalized functionality knows get hold component eg since may annotated dependency useful building eg tracking change detection patterns debugging somewhere would handy given instance get different things component could injected much like except nt always html element", "d": "4/2016"}, {"body": "seconding looking thing searched hoping existing solutions duplicate code silly able call function case expensive without first store result component admittedly also adds bunch convenience consider feature request pretty valuable improvement template language", "d": "4/2016"}, {"body": "dup", "d": "4/2016"}, {"body": "looks like yeah guess templth agrees close copy", "d": "4/2016"}, {"body": "sure agree thanks guys pointing", "d": "4/2016"}, {"body": "dup", "d": "4/2016"}, {"body": "understand returning null correct solution little dirty yes consider lot systems give possibility showing field containing zero empty commonly accepted many programs understand cases differenciate resuming null forget", "d": "4/2016"}, {"body": "nupplaphil found solution exactly yhe problem", "d": "4/2016"}, {"body": "beta got typeerror read property query null", "d": "4/2016"}, {"body": "coming across issue trying create custom domeventsplugin domeventsplugin imports dom way perform methods", "d": "4/2016"}, {"body": "investigated bit problem following stckoverflow question achieve implementing custom value accessor leverages sample const debounceinputvalueaccessor new provider ngvalueaccessor useexisting forwardref gt debounceinputcontrolvalueaccessor multi true directive selector debouncetime host change doonchange eventtarget blur ontouched providers debounceinputvalueaccessor export class debounceinputcontrolvalueaccessor implements controlvalueaccessor onchange gt ontouched gt input debouncetime number constructor private elementref elementref private renderer renderer ngafterviewinit observablefromevent thiselementrefnativeelement keyup debouncetime thisdebouncetime subscribe event gt thisonchange eventtargetvalue writevalue value void var normalizedvalue isblank value value thisrenderersetelementproperty thiselementrefnativeelement value normalizedvalue registeronchange fn gt void thisonchange fn registerontouched fn gt void thisontouched fn use way function validator ctrl consolelog validator called consolelog ctrl component selector app template directives debounceinputcontrolvalueaccessor export class app constructor private fb formbuilder thisctrl new control validator see plunkr wonder something could added framework", "d": "4/2016"}, {"body": "really need feature migrating code company angular looking forward updates", "d": "4/2016"}, {"body": "understanding wo nt supported dynamic content replaceable templates wo nt supported gather clarified", "d": "4/2016"}, {"body": "waiting update rxjs", "d": "4/2016"}, {"body": "quodroc different modules export objects module exports module accessible use since used angular actually need", "d": "4/2016"}, {"body": "problem also present component router angular nt know equivalent dblvs workaround unfortunately", "d": "4/2016"}, {"body": "namek said router outlet point component created sibling container inherit styles classes defined maybe copy nt think part dom tree components general router nt anything act placeholder unless create custom version wo nt pass parameters anything else required probably easier ways achieve", "d": "4/2016"}, {"body": "well looking dom component actually child ngoutlet element ngoutlet retains attributes see way add attributes element router creates", "d": "4/2016"}, {"body": "sorry talking behaves differently unfortunately going cause confusion people upgrade path", "d": "4/2016"}, {"body": "people running issue angular also see", "d": "4/2016"}, {"body": "done custom router outlet angular look file plunker", "d": "4/2016"}, {"body": "zoechi mentioned seems like dupe root cause please follow issue thanks", "d": "4/2016"}, {"body": "zoechi even confused u get answer", "d": "4/2016"}, {"body": "qnimate thanks reminder though look maybe gained additional understanding angulars change detection since created issue", "d": "4/2016"}, {"body": "zoechi feel even nt triggered registered handle attribute changes also able handle content changes nt", "d": "4/2016"}, {"body": "exactly issue anyone shed light", "d": "4/2016"}, {"body": "dug bit notification seems done differ nt find differ notifies angular", "d": "4/2016"}, {"body": "case clicking submit button worked submitting form pressing enter produced error maybe validators triggered blur produced error removing focus active inputs actually navigating away helped", "d": "4/2016"}, {"body": "issue project currently working use google closure compiler minify jsfiles results components getting name therefore components share viewfactory viewfactorycomponent case viewfactorya viewfactoryacomponent files case results x function error x function one component solved setting compilation level whitespaceonly touch function names ofc temporary fix", "d": "4/2016"}, {"body": "bug still exists loadasroot nt fire ngoninit etc", "d": "4/2016"}, {"body": "komw thought issues nt behavior design using loadnexttolocation instead", "d": "4/2016"}, {"body": "hm know using loadnexttolocation impossible create dynamic template load dynamic component impossible use next", "d": "4/2016"}, {"body": "use wrapper component create components discussion use futures please use one channelse mentioned", "d": "4/2016"}, {"body": "state issue news", "d": "4/2016"}, {"body": "gilasier would mind providing link stackoverflow question", "d": "4/2016"}, {"body": "yeah looks like dupe closing feel free track issue", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "clean way triggering function different events keyup change really digging idea create custom event manually trigger basic events seems bit clutterish purely easy way clean efficient", "d": "4/2016"}, {"body": "appears little involved making work right way people want workaround either implement use plugin wrote implementing discussed robwormald turns bit complexity involved canonical event names etc code parserlexerast deep dive typescript import eventmanagerplugin import injectable injectable export class multieventplugin extends eventmanagerplugin getmultieventarray eventname string string return eventnamesplit filter item index boolean gt return item amp amp item supports eventname string boolean return thisgetmultieventarray eventname length gt addeventlistener element htmlelement eventname string handler function function var zone thismanagergetzone var eventsarray thisgetmultieventarray eventname addglobaleventlistener target string eventname string handler function function var zone thismanagergetzone var eventsarray thisgetmultieventarray eventname var outsidehandler event gt zonerun gt handler event", "d": "4/2016"}, {"body": "would like voice support issue though problem even worse error thrown manually enabledisable html figure course mitigated fact good idea webstorm etc warn things though unaware would cause problems like invalid html caused nothing rendered error thrown ol within p", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "hopefully fixed", "d": "4/2016"}, {"body": "zoechi dupe asking expose looking code applicationrefts type root component returns instance wrapped promise reason expose appcomponentrefpromise", "d": "4/2016"}, {"body": "byavv example dateform sits within outer form right nt nesting form tags forbidden", "d": "4/2016"}, {"body": "nested forms really forbidden works angular forms really ngform attached add formdirectives component update examples thank noticed avoid try change form tag div work well", "d": "4/2016"}, {"body": "clarify solution referencing imagesfontswhatever inside css using relative declaration right also came inlining solution nt seem like good fix sort big deal reusable components", "d": "4/2016"}, {"body": "spoken brevity", "d": "4/2016"}, {"body": "news issue request", "d": "4/2016"}, {"body": "tbosch available example", "d": "4/2016"}, {"body": "mhevery see issue critical release", "d": "4/2016"}, {"body": "please fix mandatory mdtab routing well", "d": "4/2016"}, {"body": "plans thinking scenarios angular prod app designing solution makes sense values route routeconfig well user uses routernavigate user allowed navigate position hash default top may look something like may look like believe need changes classes better solutions implement jump position scroll smooth specified position idk", "d": "4/2016"}, {"body": "please fix issue", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "look typeerror null probably help still problem", "d": "4/2016"}, {"body": "got problem solved workaround", "d": "4/2016"}, {"body": "regarding deniskolodin workaround also add handler keyup ie keyup dosomethingwith event catch keypress changes likely arrows selecting options keyup instead keydown case validation dependent selected option", "d": "4/2016"}, {"body": "keyup workaround changed without keypresses", "d": "4/2016"}, {"body": "issue firefox anyone know workaround", "d": "4/2016"}, {"body": "tchoulihan use one", "d": "4/2016"}, {"body": "eoz thank much course function needs written set correct value least workaround", "d": "4/2016"}, {"body": "issue android webview ngmodelchange handler never executes", "d": "4/2016"}, {"body": "thank much", "d": "4/2016"}, {"body": "closing fixed", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "workaround could provider custom example extend override behavior want changed provide like nt modify", "d": "4/2016"}, {"body": "zoechi facing issue seems issue line seems line triggered every time route change creating custom prevent running code yes achieve working routes without errors possible show us code implementing custom", "d": "4/2016"}, {"body": "need override code offeneds sorry nt plan spend time member angular team", "d": "4/2016"}, {"body": "zoechi thanks", "d": "4/2016"}, {"body": "sasidhar pr merged override suspected problem making browserplatformlocationts make clone change class name mybrowserplatformlocation lastly dependency injection like bootstrap appcomponent routerproviders provide platformlocation useclass mybrowserplatformlocation temporary solution worked", "d": "4/2016"}, {"body": "documented angular sites", "d": "4/2016"}, {"body": "mhevery closed since dynamiccomponentloaderloadintolocation removed", "d": "4/2016"}, {"body": "fixed think closed", "d": "4/2016"}, {"body": "error solution", "d": "4/2016"}, {"body": "npm install save zonejs rxjs successfully builds runs without error nt run full regression anything seems working", "d": "4/2016"}, {"body": "working latest development build", "d": "4/2016"}, {"body": "issue typescript angular et rxjs solved sicaner solution", "d": "4/2016"}, {"body": "typescript changelog", "d": "4/2016"}, {"body": "issue redesigned longer need however info using works find better original solution", "d": "4/2016"}, {"body": "blyndcide removed pipes template error", "d": "4/2016"}, {"body": "even something simple explanation suggested fix would wonderful", "d": "4/2016"}, {"body": "also encountering issue upgrading angular happens attempt login redirect using routernavigatebyurl custom routeroutlet following errors thrown destruction previous component importantly pipes async otherwise components question update adding completely unused unneeded async pipe template component destroyed resolve issue makes sense rather annoying assume angular bug", "d": "4/2016"}, {"body": "jonmiles seeing issue using routernavigatebyurl quick example could post workaround mentioned including unused async pipe like try see unblocks error app", "d": "4/2016"}, {"body": "chrispearce simply added template data type observable however although fixed original issue several new errors later back error thrown along seems like issue recent router changes ideas", "d": "4/2016"}, {"body": "got similar error message triggered empty templateurl component decorating", "d": "4/2016"}, {"body": "sounds right understand error thrown attempting clean component pipes exist really need fix move forward", "d": "4/2016"}, {"body": "using pipes error occurred several arrays go pipe consistent sometimes error appear one two clicks click make newold array goes pipe sure whether related bug trace using angular beta typeerror read property constructor undefined objectimplementsondestroy functionchangedetectionutilcallpipeondestroy abstractchangedetectordehydrate abstractchangedetectordestroyrecursive appviewdestroy appviewmanagerdestroyviewincontainer viewcontainerrefremove ngforbulkremove ngforapplychanges bug blocker migrating angular", "d": "4/2016"}, {"body": "issue imperatively navigating away default route ie directly visit app detects already logged redirects default logged view", "d": "4/2016"}, {"body": "jeffbcross noticed issue whenever route view contains pipe data gets passed pipe navigate away ie async pipe observable nt get instantiated user navigates away probably thing running", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "issue workaround works ngoninit thisinitializedtrue tobetranslated translate", "d": "4/2016"}, {"body": "seeing error beta component using routing check onactivate user prop service undefined yes redirect login else show results table refactored property working added async pipe ngfor template got mentioned exception error uncaught promise typeerror read property constructor undefined go back original implementation calling subscribe within component using nonobservable array time", "d": "4/2016"}, {"body": "encountering issue angular beta occur kind route occurs one page sure use currency date pipes", "d": "4/2016"}, {"body": "issue remains actual angular beta found workaround use pipes instead instant method", "d": "4/2016"}, {"body": "issue tests mockbackend http service mockbackend nt returning fully functional observable reason instead returning subject least looks like console solution awful hack love see resolved call object returned real observables nt method called looks like mockbackend returning observables subjects", "d": "4/2016"}, {"body": "okay think issue vs one slightly different try importing observable operators inside spec file example post spec file", "d": "4/2016"}, {"body": "issue rxjs better use", "d": "4/2016"}, {"body": "whoa lost minutes one case simply assigning loop right collection instead assigned component class would error accurate least prefixed unable execute loop object object differ stuff stay fundamental error goose chase", "d": "4/2016"}, {"body": "might take little land pr wed mar pm \u5de6\u6c38\u8f89 notifications githubcom wrote pxwise thanks hongbomiao pxwise given much better solution receiving mentioned reply email directly view github", "d": "4/2016"}, {"body": "tbosch thanks taking look meantime workaround see works perfectly minification copy amp pasting", "d": "4/2016"}, {"body": "following issue already fixed latest master plnkr updated minified bundle latest master ca nt wait land smile clap", "d": "4/2016"}, {"body": "ok people everyone following time test plnkr using works perfectly pr disable mangle bundles test local envs see minification actually works current config uglifyjs plugin webpack guys try works minification without mangle works", "d": "4/2016"}, {"body": "works well", "d": "4/2016"}, {"body": "works like charm", "d": "4/2016"}, {"body": "finally works", "d": "4/2016"}, {"body": "tested locally every thing works like charm options turned uglifyjs turned well angular source application source compressionsafe great works tbosch wonder turn mangle keepfname", "d": "4/2016"}, {"body": "chrkorn mean ngfor true ngif true", "d": "4/2016"}, {"body": "meant ngif sorry confusion", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "received error ngcontrol surrounded form tag", "d": "4/2016"}, {"body": "make work replace much readable workaround", "d": "4/2016"}, {"body": "portah temp fix work work css class name contains dash tried like works properly using beta webpack", "d": "4/2016"}, {"body": "works fine use ngclass classhaserror still good using beta", "d": "4/2016"}, {"body": "issue", "d": "4/2016"}, {"body": "bea ok", "d": "4/2016"}, {"body": "actually beta", "d": "4/2016"}, {"body": "issue would closed listed changelog fixed", "d": "4/2016"}, {"body": "nt issue anymore angular rxjs zonejs checked chrome ff", "d": "4/2016"}, {"body": "rendererdetachview throws exception attempting remove svg elements reason", "d": "4/2016"}, {"body": "plans fix issue", "d": "4/2016"}, {"body": "ran across trying something similar op list blocks need render view using component based blocktype using dynamiccomponentloader blocks work need bind input block data", "d": "4/2016"}, {"body": "tdterry github issues bug reports support questions please use one channels mentioned", "d": "4/2016"}, {"body": "please close", "d": "4/2016"}, {"body": "outdated previously way remove", "d": "4/2016"}, {"body": "version seems problem tests pass without warnings closing issue", "d": "4/2016"}, {"body": "looks like dupe closing favor issue make easier track", "d": "4/2016"}, {"body": "per comments seems private private perhaps new api needed private case indefinite dynamic loading data binding possible easy", "d": "4/2016"}, {"body": "following seems work mentioned data binding enabled dynamic component called changes made bootstrap app changes export class mycomponent input mymodel export class myclass constructor private dcl dynamiccomponentloader private injector injector private appref applicationref", "d": "4/2016"}, {"body": "problems mapping output using loadasroot appears target event handler nt variable mapped component undefined run locally window run plunker could wrong import bootstrap import component componentref applicationref dynamiccomponentloader injector eventemitter output component selector myapp template message export class app private message string constructor public appref applicationref public loader dynamiccomponentloader public injector injector ngoninit thisloaderloadasroot somecomponent somecomponent thisinjector cmpref componentref gt hookups outputs cmprefinstance loadedsubscribe thisonloaded onloaded event handle loaded event notice nt mapped components instance let message apponloaded expected mapped app component consolelog message windowalert message component selector somecomponent template export class somecomponent output loaded eventemitter new eventemitter ngafterviewinit emit event components view initialized thisloadedemit loaded true bootstrap app catch err gt consoleerror err", "d": "4/2016"}, {"body": "pwpatton need change line use arrow function otherwise retained github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "4/2016"}, {"body": "thanks zoechi take care post correct spot", "d": "4/2016"}, {"body": "oliverjanik solution works believe injector instance ancestor injector knows instance however requesting instance class instance produces last descendant injector type information knows appcomponent instnace", "d": "4/2016"}, {"body": "work massively thanx", "d": "4/2016"}, {"body": "current state aux routes trying implement sure issues seeing misunderstanding fully ready", "d": "4/2016"}, {"body": "work started rewrite router current new router likely deprecated nt know new one exact features weekly meeting notes hint different ways", "d": "4/2016"}, {"body": "hey applied solution liteserver problem debian works excellent thanks", "d": "4/2016"}, {"body": "worked elementary os", "d": "4/2016"}, {"body": "thanks solved error", "d": "4/2016"}, {"body": "change worked", "d": "4/2016"}, {"body": "maharajsanthir thanks reinstalled liteserver described works", "d": "4/2016"}, {"body": "thanks shahuwang guess command returns error status type checking errors therefore following commands nt run due", "d": "4/2016"}, {"body": "please close fixed", "d": "4/2016"}, {"body": "current implementation incorrectly instruction check depth router isrouteactive instruction instruction boolean var router router var currentinstruction thiscurrentinstruction", "d": "4/2016"}, {"body": "schippie experiencing issues well", "d": "4/2016"}, {"body": "dkulyk seems good fix submit pull request", "d": "4/2016"}, {"body": "use module system like may fix moduleid absolute component path use relative path templateurl styleurl", "d": "4/2016"}, {"body": "seems work fine systemjs modules typescript declare var modulename string component selector mycomponent moduleid modulename templateurl mycomponenthtml export class mycomponent", "d": "4/2016"}, {"body": "downside unexpected sideeffects specifying", "d": "4/2016"}, {"body": "beta working example", "d": "4/2016"}, {"body": "yep closed fix got merged months ago", "d": "4/2016"}, {"body": "thnx michalstepien wesleycho closing", "d": "4/2016"}, {"body": "eivindr also issue starting blank form setting value form controls programatically find work around", "d": "4/2016"}, {"body": "markperrybv still getting changed checked using required using pattern validator minlength etc works remove ngformcontrol required validation input", "d": "4/2016"}, {"body": "markperrybv found workaround works enableprodmode using ngif inputs also changedetectorrefdetectchanges input rendered input invalid despite content", "d": "4/2016"}, {"body": "using nt really fix anything masks symptom stopping doublecheck informing something probably wrong", "d": "4/2016"}, {"body": "fix seems better using really case intended behavior manually trigger change detection calling validator", "d": "4/2016"}, {"body": "problem calling addcontrol think addcontrol call changedetectionrefdetectchanges", "d": "4/2016"}, {"body": "captaincodeman know temporary workaround longer fail dev mode using rxjs zonejs still call changedetectionrefdetectchanges", "d": "4/2016"}, {"body": "gustavst tried get error simply changing tsconfigjson changing module system commonjs make sense tried changing wouldnt build changed back magic thin air worked thanks lads", "d": "4/2016"}, {"body": "stumpled across issue using issue acutally seems template starts element", "d": "4/2016"}, {"body": "problem", "d": "4/2016"}, {"body": "issue right rangeerror maximum call stack size exceeded minifying using webpacks using gulp copy js lib folder router implemented click page navigation link throwing error console help appreciated", "d": "4/2016"}, {"body": "able resolve issue steps added first script call indexhtml removed zonejs reflectmetadata entries webpackconfigjs added enableprodmode imported calling bootstrap resolve issue lmfinney thank helpful using systemjs experiencing issue started configuring dynamic transpilation project based current angularquickstart project step thanks", "d": "4/2016"}, {"body": "ran issue resolved adding top appmaints import zonejs", "d": "4/2016"}, {"body": "right thinking nt dart specific getting typescript", "d": "4/2016"}, {"body": "yep tbosch said use eval version angular compatible chrome app csp requirement", "d": "4/2016"}, {"body": "actually easy fix fixed used places following file changed add following js file html", "d": "4/2016"}, {"body": "tbosch get issue promoted rc milestone nt think angular finished cspcompliant", "d": "4/2016"}, {"body": "started receiving error form validation happens check validity field defining field happens formbuilderstyle validation move div error message input field exception goes away using beta template required component constructor", "d": "4/2016"}, {"body": "also ran issue using angularrouter noticing component run twice per navigation called activate component good far end activation lifecycle process commit method causing called next watcher fires indicating url changed updated router kicks new activation lifecycle use workaround feel less ideal feels like bug ngcomponentrouter", "d": "4/2016"}, {"body": "bug per say nt meant navigating case configure routes dynamically runtime updated called navigatebyurl called initial load unless use manually wo nt get called navigation functions nt update either", "d": "4/2016"}, {"body": "ah sorry issue deviated slightly original one thread case using using found call update url turn cause watch fire compare nt updated makes fresh call fresh call resulting perceived double navigation final component activate deactivate reuse perhaps using incorrectly create plunker help", "d": "4/2016"}, {"body": "craigsnyders yea nt seem right reproduce plunker would great", "d": "4/2016"}, {"body": "jeffbcross right", "d": "4/2016"}, {"body": "fixed new separation", "d": "4/2016"}, {"body": "issue still alive another error message nt know exactly line added throws following message see plnkr press failing link try plnkr changing error big difference objectunsubscribederror stack trace caused issue difficult track overlapping previous error message making almost impossible debug cc petebacondarwin", "d": "4/2016"}, {"body": "ericmartinezr subscription error perhaps see anything looks like error far issue navigating anchor investigating least issue base href pointed documentation believe incorrect see", "d": "4/2016"}, {"body": "sounds similar one mentioned related zone one related router specifically recently added plus using routes defined links fails point activation route failed creatingdisposing output fails", "d": "4/2016"}, {"body": "little investigation error line nt landed yet previous versions error line", "d": "4/2016"}, {"body": "better alternative slow combination instead rule global css", "d": "4/2016"}, {"body": "think closed workaround eoz showed common workaround missing support", "d": "4/2016"}, {"body": "eoz sorry nt fully formulate sentence updated", "d": "4/2016"}, {"body": "really since consistent browser fixed either force use attrhidden everywhere fix found website could nt display", "d": "4/2016"}, {"body": "ocombe better use want use custom attributes data prefix", "d": "4/2016"}, {"body": "ie", "d": "4/2016"}, {"body": "yes ie ie small group ugly browsers mon apr olivier combe notifications githubcom wrote ie receiving mentioned reply email directly view github", "d": "4/2016"}, {"body": "current state", "d": "4/2016"}, {"body": "believe current state ignore warning npm peerdependency missing instead use corejs provide dependency try report back", "d": "4/2016"}, {"body": "alexeagle says actually using corejs like use also install import", "d": "4/2016"}, {"body": "drop peer dependency shims developers responsibility provide right polyfills targeted environment wed apr pm suguru inatomi notifications githubcom wrote alexeagle says actually using corejs like use npm shrinkwrap also install shrinkwrap nt allow warning receiving commented reply email directly view github", "d": "4/2016"}, {"body": "get npm warn requires peer reflectmetadata none installed npm warn requires peer rxjs none installed using npm trying install latest rxjs reflectmetadata mean install older versions", "d": "4/2016"}, {"body": "using node npm get able serve app local server despite message", "d": "4/2016"}, {"body": "unmet peer dependency reflectmetadata", "d": "4/2016"}, {"body": "little grind left peer dependencies absolutely needed angular regular dependencies well documented expect angular well documented problem missing something fighting version thing sometimes well especially npmcheckupdate updates dependencies angular depends older versions needs explicit versions", "d": "4/2016"}, {"body": "still many breaking changes refactor commit eg good users community updates jeffbcross cc mhevery igorminar", "d": "4/2016"}, {"body": "already fixed conventionalchangelog versions back unfortunately one looking yet", "d": "4/2016"}, {"body": "still experiencing workaround still type return", "d": "4/2016"}, {"body": "fixed thanks", "d": "4/2016"}, {"body": "jimbasilio easiest thing find", "d": "4/2016"}, {"body": "close providing solution idea would use karma plugin build template cache loaded tests without xhr similar test provide full example karma plugin part please follow details closing one duplicate", "d": "4/2016"}, {"body": "done", "d": "4/2016"}, {"body": "angular beta works example please close", "d": "4/2016"}, {"body": "thnx michalstepien closing", "d": "4/2016"}, {"body": "nice thanks", "d": "4/2016"}, {"body": "problem defined conditional required attribute input setting makes attribute present css class still added", "d": "4/2016"}, {"body": "plunker demo using", "d": "4/2016"}, {"body": "news issuecompiler rewriting thanks", "d": "4/2016"}, {"body": "hey issue really important success organization would really appreciate attention spent addressing thank much really appreciate work community", "d": "4/2016"}, {"body": "done", "d": "4/2016"}, {"body": "issue testing component using component find way inject scopes sub components get following error", "d": "4/2016"}, {"body": "log equivalent", "d": "4/2016"}, {"body": "nt look diaryjs yet given reactions people maybe revive robwormald", "d": "4/2016"}, {"body": "angular got error new matcher defined typings file temporary workaround added definition jasminedts able get custom matcher work file tests trying work create single file hold custom matchers reuse across tests get loaded browser etc trying copy way matchers defined testingdevjs wrapped systemregister true function require exports module used lose either matcher ngmatchers depending first karmaconfjs understand going systemregister expect issue first one listed karmaconf usable obviously given name make different name file matchers nt found nt know create different systemregister would used programmer tester also tried loading karmajasminematchers library npm also need add matcher typings work nt yet tried working matchers getting browser used tests may pattern follow custom matchers using either pattern sure able use typescript would nice someone cleverer would figure nice way use custom matchers", "d": "4/2016"}, {"body": "turned straightforward get custom matcher another file use test go back typescript notes file contains custom matchers function valuestobeuniqueforproperty return compare function actual array property string let mymessage string let nodups boolean true let propertyvalues array export valuestobeuniqueforproperty spec file import valuestobeuniqueforproperty beforeeach gt jasmineaddmatchers valuestobeuniqueforproperty getheroes returns values injectasync heroservice heroserv gt return heroservgetheroes servheroes gt expect servheroeslength toequal expect servheroes valuestobeuniqueforproperty id need figure custom typings file nt need reference custom matchers jasmine one", "d": "4/2016"}, {"body": "pending pr provides async zone implementation dart remove asynctestcompleter", "d": "4/2016"}, {"body": "yeah closing duplicate thanks reporting though follow issue thread", "d": "4/2016"}, {"body": "alxhub marked nice indicates bug nt critical suggested work around meantime", "d": "4/2016"}, {"body": "see use component annotation declare inputs outputs alternative using simply redeclare members inheriting component adding annotations properties", "d": "4/2016"}, {"body": "far issue still little puzzled switching polyfill corejs could strange side effect understand problem correctly correct behavior typescript classes classes nt prototype metadata methods return metadata constructor package strange fallback typescript classes ca nt called polyfill work api implemented natively", "d": "4/2016"}, {"body": "alternative using simply redeclare members inheriting component adding annotations properties sure alternative pretty much moots point inheritance give component annotation shot thanks", "d": "4/2016"}, {"body": "end needing work around similar solution tedsander proposed input output annotations like viewchild", "d": "4/2016"}, {"body": "typescript classes classes extends b b nt prototype sure arrive given classes syntactic sugar well possible write equivalent code looking typescript compiler generates look like prototype set properly", "d": "4/2016"}, {"body": "sure arrive given classes syntactic sugar well possible write equivalent code wrong classes syntax sugar prototype model nt mean transpiled completely wrote prototype requires part example missed babel uses typescript many parts classes nt equals try code typescript babel modern browsers", "d": "4/2016"}, {"body": "difference found class implementations typescript reason current behaviour typescript discussed however due possible override typescript match behavior perproject choice actually", "d": "4/2016"}, {"body": "digging code little found workaround viewchildviewchildren others like contentchild use use old queries component queries viewchildren new viewchildren mycomponent export class myclass private viewchildren querylist sure supported future since query deprecated little ago perhaps code nt cleaned yet works sure use end one uncertain deprecated well wanted share nonetheless side note perhaps adjust title since affect seemingly annotation input output", "d": "4/2016"}, {"body": "juliemr plans enable use mocha testing frameworks happy module separate", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "pipes supported host attributes one use getter instead", "d": "4/2016"}, {"body": "might sound stupid pipes transform data would forbidden use pass data host component", "d": "4/2016"}, {"body": "still seems broken ericmartinezr found host works using instead", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "yea use breeze make breadcrumb comp", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "cajoy solve issue explain please thanks", "d": "4/2016"}, {"body": "plans fixing issue", "d": "4/2016"}, {"body": "right expected behavior act normal instead happens add class element also directive renders incorrectly item added collection items collection removed dom", "d": "4/2016"}, {"body": "nt know still valid issue meantime use", "d": "4/2016"}, {"body": "looks like issue closed reopen still issues", "d": "4/2016"}, {"body": "zoechi adding comment two things subscribe issue thread automatically informing author facing issue yes add reaction nice feature visible", "d": "4/2016"}, {"body": "dheran first lot noise makes hard find relevant information distraction spam others subscribed subscribing click subscribe button please use right features right purpose wrong feature every case", "d": "4/2016"}, {"body": "hopefully would also solve issue nt related router use would definitely benefit ability manually prevent component destruction case delay component destruction touchendcancel event fired touchstarttouchmove currently active component destroyed", "d": "4/2016"}, {"body": "workaround nt help inspection web developer tool says headers however response object nt get value even using jquery returns headers properly somewhere angular messing", "d": "4/2016"}, {"body": "tbragaf similar result symptom using postman rest client request headers show fine using angular one header entry shows contenttype applicationjson", "d": "4/2016"}, {"body": "garysui odd fact postman able correctly show headers http specifically added header api warning work security reasons assume", "d": "4/2016"}, {"body": "tbragaf works without using case using sails framework added corsjs file sails version", "d": "4/2016"}, {"body": "problem workaround add options initialisation fire strange edge change put options changed initialisation implement", "d": "4/2016"}, {"body": "default router", "d": "4/2016"}, {"body": "laurelnaiad tried work around could get work also tried bootstrapts format register systemconfigjs", "d": "4/2016"}, {"body": "laurelnaiad figured html", "d": "4/2016"}, {"body": "define component child component file please put child component parent component file otherwise querylist empty ngaftercontentinit learned today", "d": "4/2016"}, {"body": "robertbrower limited typescript classes hoisted reference type declared code unknown break code also constructor injection everything else type required work around use forwardref see also", "d": "4/2016"}, {"body": "templatejsx", "d": "4/2016"}, {"body": "better syntax separated", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "roccoscaramuzzi solution seems work kinda sucks", "d": "4/2016"}, {"body": "location core sounds great", "d": "4/2016"}, {"body": "nathanwalker pr would welcome", "d": "4/2016"}, {"body": "start branch refactor tomorrow thanks mhevery", "d": "4/2016"}, {"body": "mhevery refactor options exist", "d": "4/2016"}, {"body": "please stop anyone know reset form proper way mean please plunker share link helpful developers guys started learning", "d": "4/2016"}, {"body": "deepakgd afaik current workaround create function creates form drop previous instance create new one need reset", "d": "4/2016"}, {"body": "ok please share example tried working please check link componentts import component import formbuilder validators controlgroup function emailvalidator control var emailregexp w w w w w az az emailregexptest controlvalue return invalidemail true function mobilevalidator control var mobilregexp component selector crud templateurl appcomponentscrudonlyfecrudonlyfehtml export class crudonlyfe createemployeeform createemployeejson employees employeecreate content constructor public createform formbuilder thiscreateemployeeform createformgroup employeename validatorsrequired employeeemail validatorscompose emailvalidator employeemobile validatorscompose mobilevalidator thisemployees employeename asd employeeemail asd asdcom employeemobile iseditable false thisemployeecreate thiscontent fghjk createemployee consolelog thisemployeecreate thiscreateemployeejson thisemployeecreate thisemployeecreateiseditable false thisemployeespush thisemployeecreate consolelog thisemployeecreate thisemployeecreate thiscreateemployeeformcontrols employeename updatevalue thiscreateemployeeformcontrols employeeemail updatevalue thiscreateemployeeformcontrols employeemobile updatevalue consolelog thiscreateemployeeformcontrolsemployeenameerrors contentchange thiscontent sample makeeditable data index consolelog data thisemployees index iseditable true updateediteddata data index dataiseditable false html file create employee employee name using dirty invalid fields touched invalid employee name required employee email required employee mobile required create emp id employee name email mobile action employeeemployeename employeeemployeeemail employeeemployeemobile editupdate employees json content", "d": "4/2016"}, {"body": "also reproduce issue beta see issue occurs multiple templates load concurrently using templateurl web worker root cause related xhr request resolve promise concurrent requests complete close example three components loaded time appts breakpoint line workerworkerdevjs start function problem go away breakpoint xhr promise resolve problem persists hit less times", "d": "4/2016"}, {"body": "good know one", "d": "4/2016"}, {"body": "works files put put every single ts file create get build time compile errors upon making change save successively errors still works fine tired seeing errors every time make change ts file solution seems add reference every single file", "d": "4/2016"}, {"body": "issue moving working installed typings shim getting errors angular files code compiling gruntts nt get errors need code gruntts options edit ok nvm commented referencing browser returned line works fine", "d": "4/2016"}, {"body": "work long serving css correctly karma whatever test runner", "d": "4/2016"}, {"body": "scheglov bit change implement please look", "d": "4/2016"}, {"body": "works even easier static analysis", "d": "4/2016"}, {"body": "seeing issue staticdist version app live reload definitely cause", "d": "4/2016"}, {"body": "new issue created", "d": "4/2016"}, {"body": "thank kara look forward trying", "d": "4/2016"}, {"body": "update goes use select objects option values use still use way option values objects", "d": "4/2016"}, {"body": "tried ngvalue code approach including way objects set different suggestions using ngcontrol using get error line numbers nt match anything code error uncaught promise template parse errors ca nt bind ngvalue since nt known native property ntrol residenceformcontrols country ngvalue countryname countryname ca nt bind ngvalue since nt known native property gformcontrol residenceformcontrols state statename statename one objects set countries object name united states name canada name mexico wed apr pm kara notifications githubcom wrote update use select objects option values use ngvalue cityname class mycomp selectedcity object cities object name sf name nyc still use value way nonobjects receiving commented reply email directly view github mike laird arbor creek drive pittsford new york mlaird alummitedu remembering sides civility sign weakness sincerity always subject proof let us never negotiate fear let us never fear negotiate john f kennedy", "d": "4/2016"}, {"body": "mlaird change property bindings always camel case", "d": "4/2016"}, {"body": "thanks ngvalue page loads console errors validation works input tags update controls object ngcontrols however controls object ngcontrols still get updates user input select tags example country selected select address entered input controls object country object pristine true touched true value address object pristine false touched true value main street mon apr pm pascal precht notifications githubcom wrote mlaird change ngvalue ngvalue property bindings always camel case receiving mentioned reply email directly view github mike laird arbor creek drive pittsford new york mlaird alummitedu remembering sides civility sign weakness sincerity always subject proof let us never negotiate fear let us never fear negotiate john f kennedy", "d": "4/2016"}, {"body": "discovered everything works fine controls object updated chrome problem occurs firefox tested edge browser problem problem mon apr pm michael laird michaelwlaird gmailcom wrote thanks ngvalue page loads console errors validation works input tags update controls object ngcontrols however controls object ngcontrols still get updates user input select tags example country selected select address entered input controls object country object pristine true touched true value address object pristine false touched true value main street mon apr pm pascal precht notifications githubcom wrote mlaird change ngvalue ngvalue property bindings always camel case receiving mentioned reply email directly view github mike laird arbor creek drive pittsford new york mlaird alummitedu remembering sides civility sign weakness sincerity always subject proof let us never negotiate fear let us never fear negotiate john f kennedy mike laird arbor creek drive pittsford new york mlaird alummitedu remembering sides civility sign weakness sincerity always subject proof let us never negotiate fear let us never fear negotiate john f kennedy", "d": "4/2016"}, {"body": "mlaird please file separate issue ff", "d": "4/2016"}, {"body": "thanks new issue tue apr pm mi\u0161ko hevery notifications githubcom wrote mlaird please file separate issue ff receiving mentioned reply email directly view github mike laird arbor creek drive pittsford new york mlaird alummitedu remembering sides civility sign weakness sincerity always subject proof let us never negotiate fear let us never fear negotiate john f kennedy", "d": "4/2016"}, {"body": "still problem please please please fix sure suppose use router link without fixed components get id url ngoninit get appropriate data without stuck wait fix nt mind could please let us know idea work continue thanks", "d": "4/2016"}, {"body": "charlbest reproduce minimal plunker share information setup browser using bundling system indexhtml seen safari issue separate one", "d": "4/2016"}, {"body": "exactly problem environment setup also prepare plunkr since use webpack build process difficult seems problem occurring components living within routeroutlet element loaded router components loaded bootstrap problem also checked required polyfills imported angular modules would helpful find solution", "d": "4/2016"}, {"body": "janbaer depend loading polyfills environment importing webpack loading via script tag happening routes share route config information would helpful trying solve problem charlbest janbaer working plunker start nt need recreate app minimal reproduction bug", "d": "4/2016"}, {"body": "brandonroberts yes import angularpolyfills web pack using alias occurs routes thanks plunkr template try reproduce update tried import via script tag nt changed anything", "d": "4/2016"}, {"body": "janbaer could please hit email profile issue complicate issue reproduce seem need document webpack officially need test issue proposed solution thank edit tried project nt seem polyfills issue", "d": "4/2016"}, {"body": "still issue see", "d": "4/2016"}, {"body": "could please write correct order polyfills thanks", "d": "4/2016"}, {"body": "order loading combined file create load following order load appjs angular components current versions working bootstrap fontawesome reflectmetadata rxjs systemjs zonejs jquery lodash", "d": "4/2016"}, {"body": "way provide default router mean say route nothing matches kind route", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "problem makes unusable overcame adding another route home say tell better way", "d": "4/2016"}, {"body": "nt know another way create separate issue checking none exists yet", "d": "4/2016"}, {"body": "maybe code logic say path available treat useasdefault root url everything else", "d": "4/2016"}, {"body": "seeing similar issue angularjs edge times hundred tests find failing tests seems arbitrary", "d": "4/2016"}, {"body": "found failing test poor man bisect really wonder exactly tests", "d": "4/2016"}, {"body": "hi could someone tell checkonce checked nt find information used internally consider detachedonpushcheckalways thanks advance", "d": "4/2016"}, {"body": "rlegrand read comment", "d": "4/2016"}, {"body": "ericmartinezr ok thanks", "d": "4/2016"}, {"body": "thought would open new issue anchor since really related looked existing one issues found one however funny thing op mistake code provided solution worked well investigation mine nt finally found issue anchor working started instructions published angulario site never thought assuming equivalent however never thought course using push state default forward url indexhtml browser see base href anchor tag like go myid trigger navigation order obvious completely overlooked without thinking open issue angulario modify documentation plunker showing issue plnkr nt work base href modification download code run locally switching base href index provide see anchor point myid whatever path", "d": "4/2016"}, {"body": "please default hashlocationstrategy push navigate resource fine direcly resource bookmarkable address wrong bookmarkable please report thanks", "d": "4/2016"}, {"body": "must configuration issue since base href fix everything works intended bookmarking included sure would nice documentation could use sample config nginx apache", "d": "4/2016"}, {"body": "thanks think default routing configuration work box without need server configuration think", "d": "4/2016"}, {"body": "nt think possible since single page app push state implicitly also talking server backend way around least none know maybe one day come convention maybe html meta tag could tell nginx use default template redirect non existing file path indexhtml yet set", "d": "4/2016"}, {"body": "think hashlocationstrategy default configuration server ex apache needed", "d": "4/2016"}, {"body": "default remain push state hard move hash push state strategy later ultimately want whereas decision go way later comparatively trivial sorry ship sailed easily switch hash project", "d": "4/2016"}, {"body": "nt want spa want specific server side route example mostly traditional server side based net app examplecontrollercs want serve angular app one particular action page lets call angularexample action hit gt page base href set loads template paths correctly even hashlocationstrategy enabled angular kicking url dropped controlleraction routing page refreshbookmark site hits default route set server side routing angular dropped controlleraction part path setting appbasehref appends prefix hash communicate angular server side routing nt hashlocationstrategy append angular route current location instead cutting base href value", "d": "4/2016"}, {"body": "possibly going issues type dynamically created template hint relying nt going supported future hear read whole approach adding angular page augment existing content loading content page compiling add behavior directives longer valid compiler removed runtime moved build step unless option keep", "d": "4/2016"}, {"body": "captaincodeman hope case using angular embed content existing page extremely useful use case would nt use production without compilation step first due performance reasons would nt necessarily case fully supported", "d": "4/2016"}, {"body": "understanding choice keeping jit compilation client cost bigger payload server side compilation always optional never requirement understanding therefore think statement true whole approach adding angular page augment existing content loading content page compiling add behavior directives longer valid compiler removed runtime moved build step unless option keep", "d": "4/2016"}, {"body": "clarify two separate things play loading component templates runtime loading html content hinted using templateurl load template component remain option definitive statement find guarantees case framework seems going direction away different wanting load content runtime may contain html elements classes attributes want components andor directives hook process become part angular page examples would lazyloading images product description snippet adding card popup links afaik compile equivalent easy way innerhtml content added page become live part app without lot work part include longer option possible angular nt appear possible easy angular instead would case loading content component responsible query certain elements classes add manage required behavior basically going back jquerylike approach wrapping something else handle content pick elements dynamically added content eg polymer none relevant router default hash path likely great significance people case", "d": "4/2016"}, {"body": "captaincodeman wardbell right online compilation pay via larger payload size nt want router default hash location antipattern useful old days pushstate available days long gone yes pathlocationstrategy requires server configuration small cost possibilities unlocks end day matters build apps people like use wo nt able achieve need make lots requests server get started", "d": "4/2016"}, {"body": "igorminar feels like replying comment nt actually made time said think hash location default nt tradeoffs online vs offline compilation choices app author make wardbell said statement dynamically loading content incorrect hoping clarifying related distinct issues would enable answered easily unless hear otherwise assume compiling content wiring something possible angular wo nt actually possible angular therefore statement correct", "d": "4/2016"}, {"body": "vladimirivanov solution works", "d": "4/2016"}, {"body": "still reproducible beta", "d": "4/2016"}, {"body": "take one next week week ngconf", "d": "4/2016"}, {"body": "came across issue looking way pass data routed child component given workaround nt seem work dev mode get exception changing child property sure done anything wrong issue pretty important addressed soon seems also discussed would also like propose another syntax would allow bind input child component might like would would use component right template", "d": "4/2016"}, {"body": "solution get access navbar childs", "d": "4/2016"}, {"body": "egorkze", "d": "4/2016"}, {"body": "zoechi hate hijack thread similar approach angular ca nt create service instances specific component tree", "d": "4/2016"}, {"body": "michalfilip sorry knowledge", "d": "4/2016"}, {"body": "todoubaba similar issue app wide providers example would want put api service previously set data auth headers another component need provider instance app component end missing provider issue added app wide provider plunkr shared component example", "d": "4/2016"}, {"body": "ajspera typescript constructor elementref elementref loader dynamiccomponentloader private apiservice apiservice thiselementref elementref thisloader loader load let resolvedproviders injectorresolve provide apiservice usevalue thisapiservice thisloaderloadnexttolocation mycmp thiselementref resolvedproviders ref gt documentqueryselector body appendchild reflocationnativeelement", "d": "4/2016"}, {"body": "todoubaba yeah fine small case thinking larger scale including case providers potentially changing app level several layers nested components would preferable cases load child component way would template fully resolved providers parent component injection tree saw injector docs createchildfromresolved think looking clear someone would pull parent injector derive thats really even possible access", "d": "4/2016"}, {"body": "jspera current api way pass injector instance", "d": "4/2016"}, {"body": "got issue im satisfied solution maybe better solution ngif hero null parent contains heroname", "d": "4/2016"}, {"body": "try work also cleaner unit test", "d": "4/2016"}, {"body": "fact need injection every decorator api reworked imagine property set route definition obviously may want access model service whatever else decide component load otherwise developers would implement routing using dynamic component loader various static hacks shown", "d": "4/2016"}, {"body": "hi read article last days custom routeroutlet used control access routes component activate method things happen di works usual components think solution replace canactivate logic", "d": "4/2016"}, {"body": "role based routes canactivate rolecheck rolenames", "d": "4/2016"}, {"body": "mhevery chance reconsider think community could help design implementation super important going fully reactive could reducer boilerplate lot", "d": "4/2016"}, {"body": "fxck priority things get something consider important", "d": "4/2016"}, {"body": "agree mhevery still implement observable events extra work rather see something broke fixed wait", "d": "4/2016"}, {"body": "edit bit realized two proposals thread limited understanding things currently work forgive stupid question understand angular handles calling methods components template correctly proposal might necessary nt told angular basically converting hood would work fine", "d": "4/2016"}, {"body": "blesh yes lots people already much trickier elements nt exist template already stuff loaded view", "d": "4/2016"}, {"body": "edit confused thread depth two proposals talking original issue much trickier elements nt exist template already stuff loaded view wat", "d": "4/2016"}, {"body": "think robwormald two bullets associated idiomatic longhand syntax sum goodness proposal pretty well decorator establish coldlazy subscriptions unsbuscribed free framework ondestroy makes lot sense", "d": "4/2016"}, {"body": "edit yup still thinking original issueproposal idea talking different proposal half way thread look clearly rxjsing hell things unsure added syntax buys anyone longer need define property component provides hook point testing right niavely subject time want inspect outcome advanced world could replace completely hot observable rx run component paces virtual time marble diagrams", "d": "4/2016"}, {"body": "case easy mentioned simple button assign designtime issue something like generally verboten angular platform safe nt work web worker example mechanism platform safely querying view return angularfriendly refs typescript component selector tabs template class somecomponent query view children selector viewchildren somechild somechildren childelementtype query view specific child type viewchild somechildcomponent somechild childelementtype query elements projected component ngcontent element contentchildren tab tab tab imagine used like situation ca nt simply declaratively use click clicksnext event elements nt exist define template terms transcluded proposal effectively angularsafe equivalent compatible custom events defined components", "d": "4/2016"}, {"body": "assume want make compatible extensions eventmanagerplugin allow create custom events like clickoutsideofelement etc", "d": "4/2016"}, {"body": "removed lacked context", "d": "4/2016"}, {"body": "apologies nt realize two proposals catching", "d": "4/2016"}, {"body": "okay feedback seems like sure need one two things event delegation component lived filtering events matched particular css selector something compilation processing content allows identify elements set direct fashion sure latter probably possible nt know enough sounds vastly complicated first option may may efficient first option looking adding n handlers rather handler least could remove handlers nt used", "d": "4/2016"}, {"body": "done", "d": "4/2016"}, {"body": "quite old issue still failing although error different considering router rewritten nt know still open anyone charge", "d": "4/2016"}, {"body": "latest beta version still seeing issue input typenumber using ngmodel returning string model instead number progress", "d": "4/2016"}, {"body": "remnantarcher small plunk verify till true beta noticed tests nt cover ngmodel usecase though surface nt see reason fail", "d": "4/2016"}, {"body": "still issue following url structure using hashlocationstrategy use works fine however refresh page get following error please reopen address issue", "d": "4/2016"}, {"body": "work beta either", "d": "4/2016"}, {"body": "quick update problem facing different one mentioned issue problem urlparams nt available certain circumstances investigation found indeed piece bad code causing problem affected issue", "d": "4/2016"}, {"body": "btford also router implement reuse change one component component different parameters know keep components memory problem sometimes apps want assume risk maybe could startegy like locationstrategy maybe something like reuse components instantiated helpful maintain state app easily", "d": "4/2016"}, {"body": "facing similar problem need keep url sync state components page progress preferred way accomplish meanwhile work around changing route parameters using became really ugly dealing query strings matrix parameters", "d": "4/2016"}, {"body": "material solutions internally address utilities make event testing easier nt rc blocker moving later milestone", "d": "4/2016"}, {"body": "zoechi makes destroying think good change target instance etc", "d": "4/2016"}, {"body": "problem similar position", "d": "4/2016"}, {"body": "working pull request ready tomorrow finishing tests", "d": "4/2016"}, {"body": "implemented", "d": "4/2016"}, {"body": "forgot", "d": "4/2016"}, {"body": "pkozlowskiopensource also ran error find issue fix going echo pete say current error message incredibly confusing even someone familiar angular forgetting seems like fairly easy mistake make current error messages get helpful messaging", "d": "4/2016"}, {"body": "would suggest updating tutorials manuals main website followed tutorial one one ran issue well friendly towards new users adapting edit apparently browser acted felt like cache better source page nevermind message", "d": "4/2016"}, {"body": "decided pending codegen review hits", "d": "4/2016"}, {"body": "means components could ever used first statically imported file opposed dynamically loading component string path defeats whole point dynamic component loading nt think dynamiccomponentloader designed well removal dynamic template inclusion like nginclude allowed leaves something architectural handicap certain spa applications live breath need dynamic template loading", "d": "4/2016"}, {"body": "agree important promises limitations wo nt especially represent change angular", "d": "4/2016"}, {"body": "curious hacky way best way someone help us building app needs host legacy content driven jquery ui widgets first load legacy page widget loads correctly inserts needed dom elements switch another page route change go back want previously loaded dom return state persisted markup gone since intentionally preventing full reinit jquery widget definitely collision philosophies angular jquery still learning angular approach hoping way pull efficiently", "d": "4/2016"}, {"body": "tried canreuse sure helps case though", "d": "4/2016"}, {"body": "zoechi thank sleep better tonight doc looks like exactly looking looking forward giving shot tomorrow", "d": "4/2016"}, {"body": "issue contains lots details", "d": "4/2016"}, {"body": "zoechi turns routercanreuse invoked next route component current next route different component canreuse check nt take place hoping accomplish user navigates book booklistpanelcomponent initialized legacy panel requires invoking booklistpanel jquery ui widget done dom within booklistpanelcomponent built jquery works user navigates contacts contactlistpanelcomponent initialized story legacy component jquery ui widget takes care build dom works user navigates back book work previously loaded dom lost need reinit widget get back nt want want state persisted canreuse nt seem option switching two different routed components tried changing approach use common legacypanelcomponent takes route param indicate widget drive scenario actually nt wa nt reuse prevent support one legacy widget wondering need treat generated dom like data persisted via singleton service seems messy honestly support jquery widgets angular app messy requirement appreciate guidance weird thing ca nt explain yet worked described prototype built january wondering something changed reverting check", "d": "4/2016"}, {"body": "nice article ben come using typescript curious bennadel", "d": "4/2016"}, {"body": "markpieszak thank good sir happen really enjoy ca nt figure yet use typescript keep code one page demos could figure might start using typescript", "d": "4/2016"}, {"body": "hi guys request became thread many comments easy get lost sure followed everything looks like solution mentioned create custom http service use default one custom dependencies really bad feeling approach let omit fact complicated focus something else composition us created custom solution could share compose bennadel implemented apigateway service like nice shiny features one day finds something similar super features finds attractive since two implementations monolithic combine would bennadel create another smaller application would like borrow features apigateway years ago described implemented angular http auth interceptor found really useful applications mine extracted published github able keep separated maintain outside apps could use http interceptors developers could easily use combine interceptors supposed happen everyone create version custom apigatewaylike jeffbcross request common api us could tinker http simple exchangeable composable features nt know much angular yet looks like simple function composition http configured injection api would job fine", "d": "4/2016"}, {"body": "hi zoechi thanks clear sample code run selected change selection something changed meanwhile selected showing next select control always b regardless selected tried firefox chrome nice sample kelly", "d": "4/2016"}, {"body": "hi zoechi never mind realized code mean show selection selected seems show selected value appts event needs fired hello name selected mysel selectedvalue class app add handlemyevent arg consolelog parent handling myevent arg thisselected arg also add event selection change set value using next function tried plunk site approach works wonder possible use ngmodel parent get selected value someway kelly", "d": "4/2016"}, {"body": "could still access referenced example trouble getting work latest version error though admit confused wrt whether definedinvoked anyway looking forward feature part", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "still working breaks things like routerlink ngformcontrol inside html evanplaice solution works great though", "d": "4/2016"}, {"body": "cescoferraro thought think works include trailing base href", "d": "4/2016"}, {"body": "nevermind grabs literal page appends content cascade", "d": "4/2016"}, {"body": "cecotw turns mistake gulp html minification task solved golang backend loading html files sure user relative imports think concepts messed head time", "d": "4/2016"}, {"body": "checking maptoiterable pipe added issue item track get status updates", "d": "4/2016"}, {"body": "isaacborrero would like make pr", "d": "4/2016"}, {"body": "mhevery apologize mean please let know gladly", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "mhevery isaacborrero using", "d": "4/2016"}, {"body": "done", "d": "4/2016"}, {"body": "root component projection basically says think angular devs missing big opportunity making server side use cases priority end call", "d": "4/2016"}, {"body": "part fundamental shift angular works ca nt really use augment content way could angular adding something page directives pick compiler nt going stricter becomes limitation need use different approach particularly confusing issue components behave way top level component nt really running within angular like others top tree speak nothing set inputs way probably would need extra code behavior complex code confused users routed components also special behavior different reasons adds confusion around components behave components work components referenced template another component yet expected used outside causes confusion would probably save lot time frustration limitations documented highlighted make part examples might think approach still work wo nt anymore yes make call component nt really treat like one circumstances", "d": "4/2016"}, {"body": "disappointed restricting blatantly ought used seems like whole project targeting single use case spas extension mobile apps could much know form submissions hardcode disabled know could nt believe either massive mb framework bordering bloatware many constraints using since beta despite deal flavor du jour typescript nonsense without documentation javascript picked plain javascript design decisions longer go mental gymnastics convince somehow better react kb smaller frameworks like mithril kb way also apparent trying influence mainstream usage targeting big players like weathercom shunning grassroot developers like", "d": "4/2016"}, {"body": "think needed big fat bold message front page saying angular framework designed spa mobile application development wholly disagree philosophy making front", "d": "4/2016"}, {"body": "reservations quite swears first ran issue turns workaround fairly stupid simple simply wrote service passed main app service mean simple global javascript function razor view returns dynamic variable net view page", "d": "4/2016"}, {"body": "thought interest component logical component independent currently hugely restricted possibility forces full angular applications sets aside majority rendering done server side sorry english", "d": "4/2016"}, {"body": "disappointed restricting blatantly ought used seems like whole project targeting single use case spas extension mobile apps could much certainly opinionated nt bad thing long works well framework always going sweetspot use cases problematic people natural expectations called angular version therefore version reality completely new framework new approach many things ca nt everything old one way well promised things could nt framework supposed make life easier exchange size complexity adds provide features make developing app faster reliable fully feeling yet honest many inconsistencies end add additional code framework deficiencies lead frustration promised components really partly delivering issues like perhaps symptom", "d": "4/2016"}, {"body": "ideas certainly bootstrap multiple root components page absolutely supported use case possible lines code possible likely wo nt mixed case bootstrap angular around existing html multiple root apps share injector change detection place together nicely see example server side rendering huge part today angularuniversal soon number languages drupal net etc said vision write angular application separate client server application bootstrap server side boot spa take initial question really want grab data root possible via note input angular context outside input simple string attribute need parse ideally though robtown suggested actually pass data javascript rather passing dom string retrieving parsing never really supported case angular despite explicitwarnedagainst usage nginit accomplish see simple testable example", "d": "4/2016"}, {"body": "realdope know form submissions hardcode disabled check selector see case form element attribute applied", "d": "4/2016"}, {"body": "would like take time comment tone messages sorry angular everything want yet issue still open may able future get one disappointed framework x yet improving soon please form comments constructive way help situation making negative statements even hinting create feelings reader affects person mood makes reader think feelings rather focusing solving problem please courteous best", "d": "4/2016"}, {"body": "mhevery thank response great deal respect team suspect community large well despite downbeat tone hope comments least constructive personally directed team members understand entitled solution works perfectly still project beta stage room grow however frustration comes dissatisfaction stemming perceived sense slight beta stage certain design decisions untrained eyes seem strange examples think top head right form elements submit default without adding ngnoform allumdminjs files hosted cdns broken every beta version except inconsistencies template syntax inputvalue myvalue works input boxes extended custom subcomponents without lowlevel custom codes issue thread represents heart discussion sense frustration express spent weeks playing latest version angular community least cares spend sunday hours voice frustration hope see much care project", "d": "4/2016"}, {"body": "form elements submit default without adding ngnoform please file separate issue reproduction steps would like work nt think technical reasons works way happen may get immediately track allumdminjs files hosted cdns broken every beta versions except yes aware working fix unfortunately trivial fix happened big plans making minification work goals ambitious happen overnight inconsistencies template syntax inputvalue myvalue works input boxes extended without lowlevel custom codes tell worked hard make syntax consistent toolable btw short hand tells two way databinding issue thread represents yes aware working higher priority things get", "d": "4/2016"}, {"body": "simple barebone form ca nt submit unless add ngnoform form expected response form submission actually submit unless either return false eventpreventdefault current default action return false", "d": "4/2016"}, {"body": "realdope change selector form ngnoform ngformmodel ngform ngform selector ngform ngform form working designed like people angular team think designed mhevery vicb base mistake problems easy migration websites also transclusion root element needed get everything work easier shame angular piece shit compare angular looks like modern thing polyfills typescripts etc missed basic functionality forget singlepage sites exist know angular slow engine better unusable library p problem reported summer last year still solution long discussion throwing interests library usable websites want ofense saying sure alone recommend anybody based framework ajax calls integrate csrf tokens service default make web safety restrictions", "d": "4/2016"}, {"body": "last chance npm uninstall way bootstrap directive without component unusable way take ofence like work almost want cry see ca nt use obstinacy authors whatever prevents adding feature optional want force philosophy developers", "d": "4/2016"}, {"body": "hack used still trying plain javascript version ironically nt found anywhere documentation find typescript version somewhere sure", "d": "4/2016"}, {"body": "need transclude html content attribute trying wrap existing project root component already template documentgetelementbyid angularbox innerhtml component decorator body id angularbox selector body tag bind noangular events document shadowing dom like document event selector handler native js documentaddeventlistener click function e var targetetarget target amp amp target targettargetparentnode targetmatches handlercall target e break false almost impossible refactor entire events also slow impossible third party libraries functional ngcontent tag root component solve everything slow make optional better slow unusable framework bootstraping directive helpful", "d": "4/2016"}, {"body": "michaill first warning please conform code conduct participating github issue otherwise simply remove ability participate", "d": "4/2016"}, {"body": "anyone provide working example working csp mode igorminar vsavkin wardbell would care comment", "d": "4/2016"}, {"body": "experiencing issue multiple classes included import todoitem separate file uncomment line comment todoitem class everything work fine comment line use class inside show message directive annotation found appcomponent also tried export classes worked either import component import todoitem todoitem component selector myapp template hello name class todoitem public name string export class appcomponent public name string missing", "d": "4/2016"}, {"body": "global thing per file decorator adds extra behaviour class floating without target js import component component selector myapp template hello name export class appcomponent public name string", "d": "4/2016"}, {"body": "thank beginner mistake", "d": "4/2016"}, {"body": "use case want write ecucational app various content written html angularcustom tags placed lt appmaincontent gt component hundreds contentfiles placed lt appmaincontent gt component written various contentwriters background programming ideally know writing html new customtags one solution might write preprocessingroutine making component every htmlfile sound ideal yes would helpful somehow supported made easyuncomplicated preferred way dealing documented maybe angularteam others could offer preprocessingroutine well included eg addonoption angularcli", "d": "4/2016"}, {"body": "raminsiach work cuz trying something like", "d": "4/2016"}, {"body": "agree please rename properly different nullish operators confusing enough", "d": "4/2016"}, {"body": "wardbell could rename operator per docs", "d": "4/2016"}, {"body": "see also", "d": "4/2016"}, {"body": "list thanks", "d": "4/2016"}, {"title": "appendto circle benchmark fork jashkenas benchmark vue", "body": "urgent important tried make old jsfiddle work longer works evan jsfiddle account wanted compare various frameworks add ampersand list quickly fixed dependancies run issues api changes deprecated items vue fiddle hate jsfiddle jsbin peculiar vbind style vs vstyle right syntax lt div class box vbind style style gt content lt div gt become executes display nt want dig vue source code understand maybe evan consider benchmark longer relevant wanted put newly improved performance test record fixed reworked fiddle working thanks jsfiddle versions", "num": "2785", "d": "4/2016"}, {"title": "proposal give access component internal functions", "body": "vuejs version proposal dont know way following scenario today really think would great include next vuejs version let say modal component two internal methods named open close using vref could possible following code open close", "num": "2783", "d": "4/2016"}, {"title": "external svgs loading chrome inside block", "body": "vuejs version reproduction link left icon inside block right one steps reproduce put tag external svg file symbols inside block expected svg safari firefox opera chrome actually happening svg loaded even symbol already used site elsewhere entirely sure whether chrome bug vue bug", "num": "2782", "d": "4/2016"}, {"title": "official paid support", "body": "hi talk official paid support vuejs please remove acknowledge really hard find right channel contact l\u00e9on", "num": "2781", "d": "4/2016"}, {"title": "vbind multiple nt work properly", "body": "hi tried create component wrapper want multiple attribute rendered based condition setup example really strange behaviour example component exactly component difference uses dynamic multiple attribute uses static multiple attribute kind bug missing something thank", "num": "2779", "d": "4/2016"}, {"title": "vue template compile bug", "body": "html title import vue vue import icon components export default components icon props iconname type string required false code \u4f7f\u7528\u7684\u4f8b\u5b50 html chrome consolelog html import icon components let iconfont icon export default components iconfont \u8fd9\u91cc\u91cd\u547d\u540d template\u91cc \u6807\u7b7e\u6539\u6210 iconfont webpackhotreload vue warn unknown custom element mean html caseinsensitive remember use kebabcase templates", "num": "2778", "d": "4/2016"}, {"title": "discussion replace option deprecation", "body": "noticed replace deprecated definitely agree components one root element however reasons using replace behavior questions behavior moving forward currently default value true assumption baked interact restricted elements dom eg outlined template parsing specifically given component template html parent template html stuff happens element would nt replacing lead invalid html use replace false get around resulting html stuff usage preference standpoint like point comment wink definitely stylistic preference could live without also find easier grep dom vs important us replace necessary data table mixin easily insert sorting behavior column adding sort html link company employees terse solution breaks parent lost regardless specific usage extend restricted elements", "num": "2777", "d": "4/2016"}, {"title": "suggestion vue follow strict semantic versioning", "body": "posted forum months back think fell cracks would awesome vue project started adhering strict semantic versioning past versions vue included lot new functionality patch versions rather bumping minor version tricky trying figure new functionality used example added support using string multiple classes bindings since vue using versioning scheme looks like semver clear surface nt support feature semver issue highlighted bold message top release notes small patch release bug fixes new features make sure check semver bump already implies bug fixes included", "num": "2776", "d": "4/2016"}, {"title": "watch array fires updated value", "body": "problem updated example using fired also array case example expected would expect update actual value updated proposal perhaps extra option could useful objects arrays version", "num": "2775", "d": "4/2016"}, {"title": "sequence vuedata routedata html render", "body": "multilayer data vue component may look like update vuerouter hook may gap data update html render vue ensure data update firstly html render happen write info", "num": "2774", "d": "4/2016"}, {"title": "vue currency filter decimal place working", "body": "simply taking effect result always", "num": "2773", "d": "4/2016"}, {"title": "vuejs alpha error start windows", "body": "run local pc vuejs error instruction start vudejs alpha npm install npm run build mean cfg windows pro npm node", "num": "2771", "d": "4/2016"}, {"title": "eval debounce nt work", "body": "vuejs version reproduction link fiddle link", "num": "2770", "d": "4/2016"}, {"title": "suggestion vue vm appendto singleton components", "body": "current singleton pattern component call first return others removed need another way creating singleton components maybe something like vuecomps currently singleton components vuecompswaves hidden singleton svg store serves instances svg animations vuetoster instance shared components use vueoverlay single overlay black background keeps track zindex components use", "num": "2769", "d": "4/2016"}, {"title": "suggestion vue add server side render example", "body": "please add server side render example version express plain http server docscomments also would good docs compilercommonjs serverrendererjs vuecommonjs", "num": "2767", "d": "4/2016"}, {"title": "suggestion deprecate vueconfigdelimiters vueconfigunsafedelimiters", "body": "like suggest deprecating delimiter config settings could mistake understand motivation suggest one consider switching better one choice serverside templating engines may developer made choice vuejs given longterm support schedule security fixes may put developers invested vuejs turned like bit pinch time rewrite functional ui code often hard justify top making arguments different templating engine undue technical burden think support changing delimiters retained thanks", "num": "2766", "d": "4/2016"}, {"title": "suggestion inline templates", "body": "deeper technical reason inlinetemplate ca nt supported vue couple reasons interest first makes easy get people attracted vue demo component stuff quickly using simple syntax component single page without compilation anything like secondly makes user experience customer endusers better nt get weird flashes stuff loading behind scenes recently used extensively build laravel spark use inline templates allow export html files vendor directory purchasers scaffolding easily edit without worry js compilation etc basically act like typical html pages know might technically correct approach eyes elite js developers speaking common person fairly useful several situations curious deep technical reason syntax ca nt work new vue stuff removed reason considered bad practice among developers", "num": "2765", "d": "4/2016"}, {"title": "feature request vempty", "body": "stated currently wrap vfor catch array empty love tag like would work like put right maybe also could also reused block triggeres list empty like equivalent django template tag example index itemmessage sorry elements yet", "num": "2764", "d": "4/2016"}, {"title": "vmodel\u4e2dcheckbox\u65e0\u6cd5\u4e0e\u6574\u6570\u6570\u7ec4\u5339\u914d", "body": "\u4e3a\u4ec0\u4e48\u5728vue\u5b9e\u4f8b\u4e2d \u5b58\u5728starsquery \u800c\u6362\u6210starsquery", "num": "2763", "d": "4/2016"}, {"title": "", "body": "data item vmodel itemid", "num": "2762", "d": "4/2016"}, {"title": "", "body": "\u4f7f\u7528", "num": "2761", "d": "4/2016"}, {"title": "suggestion vue replacement broadcast dispatch", "body": "first thanks great work far vuejs great measure enjoyable frontend framework tried far changes scheduled like know replacement plugin possible one thing liked events scope listeners gathered suggestion global eventbus nt see replace following code nt miss actual hierarchy broadcast dispatch within component tree really love keep global event bus works together object possible plugin would fit needs maybe could possible make emit globally additional attribute", "num": "2760", "d": "4/2016"}, {"title": "display undefined", "body": "data like data item bind vmodel itemid display undefined think display empty string right", "num": "2759", "d": "4/2016"}, {"title": "vfor work fine jquerymerge method", "body": "woiking working fine", "num": "2758", "d": "4/2016"}, {"title": "suggestion vue bring back filters please", "body": "hi hot discussion gitter chat nice post forum people missing feature actually nogo upgrading nt positive direction community seems like put suggestion bring back filters loved would agree smart arguments filters gathered different discussions guarantee correctness easier read templates simply easy read words chaining filters helps make sense actually expected filters global great templating view system currency simple example great filter used everywhere calling without filters ton boilerplate filters allow noobs learn faster get quick nice winning experience vue using mixin every component include selfmade filter nt really feasible needless say probably strong arguments removing filter engineering perspective would suggest thread pros cons voting return filters scott", "num": "2756", "d": "4/2016"}, {"title": "transition vue js system", "body": "layer time add father son aymodleview vif isbuttonlist touchmoveprevent clickpreventstop switchbuttonlist false transition fadein aybigbuttonlist vif isbuttonlist transition fade sublayer wo nt trigger", "num": "2752", "d": "4/2016"}, {"title": "vue updated model teardown component", "body": "vuejs version reproduction link steps reproduce turn set background turn set background colour turn set background look browser devtools expected error displaying app keeps working actually happening got error vue warn error evaluating expression stylesbgcolour typeerror read property colour undefined error stops app keep working", "num": "2750", "d": "4/2016"}, {"title": "component considered fragment instance vue update", "body": "vuejs version reproduction link mi personal site steps reproduce clone repo install run bash npm install amp amp gulp npm install amp amp npm run build expected site runs actually happening throws every single component using gulp development pretty sure vue error maybe vueify error using vue plugin rest dependencies checked repo link information needed please let know", "num": "2747", "d": "4/2016"}, {"title": "keepalive reusable components", "body": "demo \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u521b\u5efa\u4e00\u4e2a vue \u7684 js const demo vueextend const new demo n \u611f\u8c22\u9605\u8bfb\u6211\u8fd9\u4e48\u957f\u7684\u5e9f\u8bdd", "num": "2746", "d": "4/2016"}, {"title": "vfor breaks dragndrop dom manipulation", "body": "attempt use dragula alongside vue vuejs version reproduction link steps reproduce loading fiddle drag third item somewhere drop dragula event fires see console log alternatively drag first item third position click add item button expected another item added list actually happening uncaught typeerror read property parentnode null adding new items works fine dragndrop operations also dragging cancelling items last one dragging cancelling last item seems throw cases appearantly dragula puts actual element back former position dom still object yet vue seems lose track somehow found workaround issue replacing array fresh array fiddle thus triggering vue rerender vfor elegant solution though watchers array fire altough array order nt change case event workaround", "num": "2745", "d": "4/2016"}, {"title": "vmodel make vue reactive stuck", "body": "vuejs version reproduction link code causing issue message title steps reproduce open link wechat input thing repeat actions input delete close keyborad open keyboard somethings input update occur reactive data stop work nothing render refresh page ps issue easier reproduce sogou input en describe issue chinese issue occur", "num": "2744", "d": "4/2016"}, {"title": "vif destroy code properly", "body": "vuejs version reproduction link steps reproduce toggle switch get error vue warn error evaluating expression stylesbgcolour typeerror read property colour undefined expected stylesbgcolour evaluated actually happening", "num": "2743", "d": "4/2016"}, {"title": "vue watch remove obj key obj sync", "body": "vuejs version reproduction link steps reproduce passed paraments component styles bg key styles expected toggle button object needs insert bg delete bg actually happening switch bg inserted switch bg deleted", "num": "2742", "d": "4/2016"}, {"title": "prevent event propagating children", "body": "hi would prevent event propagation children ie listen parent prevent propagating child forminputlabel formbuttonname tried cant use since listening drag events mycase", "num": "2738", "d": "4/2016"}, {"title": "submit event trigger press enter key make error", "body": "submit event trigger press key make error need check first change uses vuejs", "num": "2736", "d": "4/2016"}, {"title": "dynamically rearrange children component", "body": "vue component children id like rearrange children certain event occurs would achieve moduleexports components childone require childtwo require events rearrange function dynamically rearrange childone childtwo", "num": "2735", "d": "4/2016"}, {"title": "", "body": "\u6dfb\u52a0 number vueversion", "num": "2734", "d": "4/2016"}, {"title": "children components destroyed animation ends parent", "body": "vuejs version reproduction link steps reproduce parent component foo child components bar trigger transition foo look destroyed trigger parent child component expected children components destroyed transition ends parent actually happening children components trigger destroyed transition ends parent something normal would want children component continue updated transition thank", "num": "2733", "d": "4/2016"}, {"title": "reference dom elements vel directive declared vfor directive", "body": "rt", "num": "2732", "d": "4/2016"}, {"title": "using id leading digits comes error", "body": "vuejs version reproduction link steps reproduce expected element rendered actually happening passing leading digit id dont escaped documentqueryselector comes error", "num": "2729", "d": "4/2016"}, {"title": "updating model watch causing dom updated", "body": "vuejs version reproduction link steps reproduce start typing first input box eg enter boxes stay continue type boxes update seems always step behind expected input box content synchronised actually happening think dom update queued watch block", "num": "2728", "d": "4/2016"}, {"title": "bug render component component definition bound attribute", "body": "vuejs version reproduction link expected according release note components rendered dynamically bounding attribute component definition fiddle try make example work b component rendered miss something thanks", "num": "2727", "d": "4/2016"}, {"title": "bug vue recognizing svg elements inside component html", "body": "vuejs version reproduction link steps reproduce jsfiddle inspect console errors show expected g line treated svg elements dropped two svg tags via slot actually happening g line recognized svg elements treated custom components unless warpped another svg tag top already existing svg tag error unknown custom element g register component correctly recursive components make sure provide name option", "num": "2726", "d": "4/2016"}, {"title": "warn mixed bind mustache interpolation", "body": "reading vue warn user using mixed vbind mustache interpolation", "num": "2725", "d": "4/2016"}, {"title": "whitespace issue mixing slots", "body": "say component template provides multiple named slots together unnamed one default slot enclosed named slots like example problem arises overwrite named slots default one case every piece whitespace gets loaded default slot makes disappear dom jsfiddle example", "num": "2723", "d": "4/2016"}, {"title": "vshow vbind style override bug", "body": "demo works fine chrome firfox style override vshow style change order directives override issue appears chrome", "num": "2722", "d": "4/2016"}, {"title": "combining class myclass class myclass working", "body": "combining two methods first rendered html page bug would best practice fiddle", "num": "2721", "d": "4/2016"}, {"title": "\u5173\u4e8eslot\u7684\u4f7f\u7528\u95ee\u9898", "body": "html", "num": "2720", "d": "4/2016"}, {"title": "addchild function", "body": "trying create dynamic component defined component main component dynamically create component called components extforminput extforminput methods changetype function var self var thecomponent optionscomponents extforminput self addchild thecomponent get error", "num": "2719", "d": "4/2016"}, {"title": "custom class getters setters data vm", "body": "hi try use class data vm getters setters works correct behavior example thanks", "num": "2718", "d": "4/2016"}, {"title": "", "body": "", "num": "2717", "d": "4/2016"}, {"title": "\u53d1\u751fmaximum call stack size exceeded", "body": "\u9519\u8bef\u53d1\u751f\u5728mergeoptions options options mergeoptions thisconstructoroptions options", "num": "2716", "d": "4/2016"}, {"title": "component dynamicprops works incorrect ms edge", "body": "vuejs version reproduction link steps reproduce input element press backspace nt work nothing happened cursor ahead use backspace delete input value delete expected message passed child component sync input value case empty string actually happening last one character stay child component", "num": "2715", "d": "4/2016"}, {"title": "vue", "body": "message var mycomponent vueextend template lt div gt custom component lt div gt data function consolelog data return new vue el test data message hello vuejs components mycomponent mycomponent \u8fd9\u91cc\u9762consolelog data", "num": "2713", "d": "4/2016"}, {"title": "pass old value method handler", "body": "would like request feature could pass original value method handler using directive link issue example methods update function event originalvalue", "num": "2711", "d": "4/2016"}, {"title": "properties longer updating template latest versions", "body": "anyone else issues data properties updating template changing via method vue devtools see update fine never update template always remain default value set data", "num": "2710", "d": "4/2016"}, {"title": "template tag dose nt work well edge", "body": "dose nt work well browser code like empty arrary error evaluating expression storename error work well like", "num": "2709", "d": "4/2016"}, {"title": "raf mutation dom", "body": "vue dont use raf function appendchild insertbefore innerhtml help reduce frame update dom", "num": "2708", "d": "4/2016"}, {"title": "literal modifier custom directive causes vif ignored", "body": "vuejs version reproduction link", "num": "2707", "d": "4/2016"}, {"title": "\u6570\u7ec4\u8d4b\u503cbug", "body": "vuejs version \u6d4b\u8bd5\u673a\u578b\u548c\u7248\u672c ios version", "num": "2706", "d": "4/2016"}, {"title": "directive custom prefixes", "body": "taken prefixing components default would like keep naming convention directives however seems prefix mandatory possible allow multiple prefixes detect whether prefix present mandate", "num": "2705", "d": "4/2016"}, {"title": "slot access scope variables", "body": "suppose simplified example picker component called mypicker obviously contrived example oversimplifies component example suppose want override default slot something else example clickable image problem obviously nt access item currently selected loop goes things available scope currently workaround two additional directives vstore allows store something either argument named storage without default name vinject allows inject values stored either named unnamed example original component example next scope function scroll example simply example named storage replacement works pretty well edge cases feels bit heavy handed want able replace slots completely able specifically generally access items scope original template miss crucial feature already allows added", "num": "2704", "d": "4/2016"}, {"title": "\u5b98\u7f51\u6709\u4e00\u4e2a\u94fe\u63a5\u9519\u8bef", "body": "\u5b98\u7f51 \u4e2d\u6587 \u7248\u7684\u8df3\u8f6c\u94fe\u63a5\u9519\u8bef", "num": "2703", "d": "4/2016"}, {"title": "feature request vmodel add trim param attribute", "body": "remember angular trim value default tested using vue binding value leave trailing spaces adding param attribute tailing spaces trimmed automatically scenario register form deal tailing space issue either replace every make computed property trim", "num": "2702", "d": "4/2016"}, {"title": "bind unable access data called component element replace false", "body": "unable bind directly component element set eg class never applied even though true however apply class see", "num": "2700", "d": "4/2016"}, {"title": "", "body": "data json data return data price \u5b9e\u9645\u6253\u5370\u4e3a \u5374\u4e0d\u662f price", "num": "2699", "d": "4/2016"}, {"title": "\u5982\u4f55\u4e3a\u6570\u636e\u5bf9\u8c61\u4e2d\u7684\u6bcf\u9879\u5355\u72ec\u5217\u51fa\u8ba1\u7b97\u5c5e\u6027", "body": "", "num": "2698", "d": "4/2016"}, {"title": "data ca nt get data", "body": "ublpanel formed created methods ca nt get data correct", "num": "2697", "d": "4/2016"}, {"title": "build multiple spa inside one peoject", "body": "hi first thanks evan amazing work building large scale application want break multiple spa example user want login use auth spa auth route redirected main spa want access dashboard dashboard another spa anyway project much bigger trying solve problem serving heavy spa user cases use anyone try implement webpack", "num": "2692", "d": "4/2016"}, {"title": "feature request vunless", "body": "using rivetsjs enjoyed little nice alternative rvif rvunless even though achieved vuejs saying vif property believe vunless property could actually make nice addtion vif velse way vunless would actually refer velse block without vif bonus check negated values cases could make code bit harder read tl dr think vunless could make nice addition vuejs", "num": "2691", "d": "4/2016"}, {"title": "component slot vshow click working", "body": "hello probles main component wizard another component template work", "num": "2690", "d": "4/2016"}, {"title": "\u793a\u4f8b\u95ee\u9898", "body": "", "num": "2688", "d": "4/2016"}, {"title": "data function called twice", "body": "vuejs version reproduction link steps reproduce register vue component data function javascript vuecomponent myhello data function consolelog hello return new vue el body instantiate component see console devtool expected data function called twice since two instances vue component actually happening data function called four times quick fix set data hook hope helpful", "num": "2687", "d": "4/2016"}, {"title": "transitionanimate reordering vfor", "body": "currently seems transitions vfor one new items added removed list lists one common thing also elements array reordered understanding vue good tracking element reorder uses updating dom seems apply transition box element reorder think would great feature", "num": "2684", "d": "4/2016"}, {"title": "class binding ca nt pass string classes mixing array object definition", "body": "vuejs version reproduction link steps reproduce try bind multiple classes like expected able bind classes like described actually happening getting console error bug right wrong", "num": "2682", "d": "4/2016"}, {"title": "vel working cases script tags", "body": "vuejs version reproduction link steps reproduce append script tag configurations sometimes work expected defined actually happening undefined", "num": "2681", "d": "4/2016"}, {"title": "vfor transitionmode", "body": "vfor support transition mode", "num": "2677", "d": "4/2016"}, {"title": "doc gitbook edition official guide like plugins", "body": "think format docs consistent since docs written gitbook follow nt think one thing better provide page listing related docs important submodules instead hiding links inside guide got use google find sometimes sweatsmile", "num": "2675", "d": "4/2016"}, {"title": "array observation modified arrayprototypesplice", "body": "vuejs version reproduction link steps reproduce watch array putting property make template display array remove element using expected first element array removed view actually happening first element removed array view explanation read source code observing feature vue far understood vue intercept calls methods using make strategy fail would work dirty check example know easily fixable good practice use actually implemented found bug using lodash kind library widely used intent fix maybe could fix javascript const originalsplice arrayprototypesplice arrayprototypesplice function amp amp thislength thissplice arguments else originalspliceapply arguments", "num": "2673", "d": "4/2016"}, {"title": "pass props component instance", "body": "hi looking way pass properties component instance created operator would like pass properties ability use onewaytwoway data binding example assuming one way twoway template would use like case vue compiler would automatically bind props would updated reactively therefore looking solution achieve reactivity possible solution might set watchers like one way binding watch function newval newval twoway binding watch function newval newval return prevent loops newval mycomponentinstance watch function newval newval return prevent loops newval bind pretty verbose believe repeats functionality already implemented inside vuejs bind props component compiled inside template may missed another solution docs imagine could look like", "num": "2671", "d": "4/2016"}, {"title": "event expression handled correctly", "body": "vuejs version reproduction link steps reproduce click buttons observe console replace model clicking button repeat clicking buttons expected click message appears console click message appears console click model replaced click message appears console click message appears console actually happening click message appears console click message appears console click model replaced click message appears console click message appears console", "num": "2670", "d": "4/2016"}, {"title": "events hypenated", "body": "vuejs version reproduction link steps reproduce expected event called actually happening event nt called bit delicate working attributes totally clear expect behavior current behavior case emit code von attributes camelcase camelcase possible lowercase lowercase lowercase camelcase hypenated hypenated hypenated think makes sense case emit code von attributes camelcase camelcase hypenated lowercase lowercase lowercase camelcase warn use camelcase warn use camelcase hypenated", "num": "2669", "d": "4/2016"}, {"title": "vmodel working fields acting strange", "body": "hi nt found bug code think caused vuejs list events click becoming edit form shown something edit requests could become quite huge fetching list giving necessary columns event becoming retrieving details edit function event var self set given event edit var eventtoedit event get event details vue function details objectassign eventtoedit details consolelog eventtoedit selfeventinedit eventtoedit details fields visible form values inputs like enter value switch next field anywhere else field immediately gone back initial value loaded server case always go back dateto field empty going back empty strange also saving entered value model visible vue devtools idea going repair acting really strange found binding working put eventineditdatefrom field reactive changing idea time working ok isspecial issuspended well", "num": "2667", "d": "4/2016"}, {"title": "attribute still present dom compilation", "body": "vuejs version reproduction link able reproduce jsfiddle upload whole thing webpackbin needed component used multiples times steps reproduce create multiple elements attribute expected attribute removed markup compiled actually happening attribute visible dom except first one node behavior perfectly correct attribute displayed string thank", "num": "2666", "d": "4/2016"}, {"title": "test suite require old version phantomjs", "body": "vuejs version reproduction link jsfiddle simple code snippet steps reproduce clone vue install phantomjs site homebrew whatever run expected expect finish installation actually happening downloading another phantomjs version", "num": "2665", "d": "4/2016"}, {"title": "\u6761\u4ef6\u6e32\u67d3\u9047\u5230\u5d4c\u5957\u7684a\u5143\u7d20\u5de5\u4f5c\u4e0d\u6b63\u5e38", "body": "", "num": "2664", "d": "4/2016"}, {"title": "iteration set vfor", "body": "building something day set noticed could nt seem iterate vfor example use modern browser understand set behave little differently plain objects array see massive benefit adding vfor iteration open writing addition deemed useful", "num": "2662", "d": "4/2016"}, {"title": "using xlink href svg work", "body": "vuejs version reproduction link steps reproduce load indexhtml webserver expected svg icon display event actually happening svg seam rendered chrome work firefox safari bug vuejs chrome", "num": "2661", "d": "4/2016"}, {"title": "turn object reactive", "body": "good way turn object reactive vue instance inited call vueset recursively turn object reactive confortable way thx", "num": "2660", "d": "4/2016"}, {"title": "capture modifier work safari", "body": "repro safari ios mac vue added function event listener mistakenly nothing happen chrome", "num": "2658", "d": "4/2016"}, {"title": "templatetag vfor vif together expect", "body": "vuejs version reproduction link steps reproduce want condition vfor got nt want p p p p p p ok p p p expected use template vfor vif", "num": "2657", "d": "4/2016"}, {"title": "vue triggers componentchanged forever vue files", "body": "sorry sure open vue cli vue cli webpack template repository migrate necessary problem vue triggers event aframe component forever code export default methods onchange function consolelog changed demo see console happens files problem nt occur simple instance note also tested code fresh project problem seem occur files note event triggered even", "num": "2656", "d": "4/2016"}, {"title": "vue triggers componentchanged forever", "body": "sorry sure open vue cli vue cli webpack template repository move necessary problem vue triggers event aframe component forever code export default methods onchange function consolelog changed demo happens files problem nt occur simple instance", "num": "2655", "d": "4/2016"}, {"title": "wrong style interpolation", "body": "vuejs version steps reproduce html expected html actually happening html css documentation backgroundsize sets width height background image percent parent element first value sets width second value sets height one value given second set auto", "num": "2654", "d": "4/2016"}, {"title": "vuecli vuerouter play nicely together", "body": "vuejs version reproduction link steps reproduce create new vuecli application convert using commonjs install vuerouter attempt initialize router stack add router routed component expected foo component template served actually happening page blank", "num": "2653", "d": "4/2016"}, {"title": "\u80cc\u666f\u56fe\u7247\u95ee\u9898", "body": "\u8fd9\u91cc\u7684url", "num": "2652", "d": "4/2016"}, {"title": "feature recompiling inlinetemplate", "body": "trying integrate vuejs existing platform troubles implementation component reloading need feature complex update view state information backend easier redraw component new data tree components page use inlinetemplate feature want able recompile certain element html string domelement trigger tried two ways accomplishing nt work exactly need tried creating element replacing el mount flags reset renders cached template probably tried compile html node constructs another vue instance ca nt get reference clean way way achieve understand way dom manipulation preferred considered dangerous ca nt adapt whole platform new rendering system momentarily", "num": "2651", "d": "4/2016"}, {"title": "feature fallback content partials", "body": "partials support fallback content slot would greatly improve readability templates using specific way base component logic eg dialog components eg promptdialog need derived share logic outer template achieved using partials similar slots used component basis instances template would look like html title body without feature need put content partial nodes outside template becomes worse nested partials approaching problems using base component template derived ones thus nested instances practical would need redirect majority dataprops api outer pseudoderived inner base instance", "num": "2650", "d": "4/2016"}, {"title": "set watch deep true data changes val oldval true", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "2649", "d": "4/2016"}, {"title": "feature vemit vcall missing link", "body": "consider opposite coffee vemit components comp template something events toggle gt toggle methods toggle gt dothetoggleing template toggle methods dosomething gt togglecomp someargs code emitters togglecomp null still unsure specify default arguments alternative emitters togglecomp vcall components comp template something methods toggle gt dothetoggleing template toggle methods dosomething gt togglecomp someargs code callers togglecomp null still unsure specify default arguments alternative callers togglecomp would make state management way easier course shorthand like would great think", "num": "2648", "d": "4/2016"}, {"title": "set length array nt update view", "body": "vuejs version reproduction link steps reproduce click clear button expected list todos must empty actually happening list still popuplated even show empty array works fine empty array element element", "num": "2646", "d": "4/2016"}, {"title": "rootscope", "body": "\u5728vue\u4e2d\u6709\u6ca1\u6709\u50cfangularjs\u4e2d\u4e00\u6837\u7684 rootscope", "num": "2645", "d": "4/2016"}, {"title": "loop event nullity", "body": "click itembind nullity method", "num": "2644", "d": "4/2016"}, {"title": "deleting deep level property nt trigger digest cycle", "body": "trying delete deep level property object since vm delete nt perform task copy variable delete property set back vm however weird thing happens vue nt redigest data stated documentation every call vm set trigger digest cycle sample code", "num": "2643", "d": "4/2016"}, {"title": "web component attribute rendered view", "body": "hi first thanks work using vue everyday great encountered however problem tried use web component webcomponentjs polyfill attribute inside view however component works perfectly use custom tag problem custom tag approach ca nt extend default html elements anymore investigation noticed vue checks component declared vm component declared rendered way specify inside view component would like ignore evaluation template", "num": "2642", "d": "4/2016"}, {"title": "vpre register reference dom element", "body": "current register", "num": "2641", "d": "4/2016"}, {"title": "computed attributes based object working", "body": "hi discovered vuejs days ago trying use webapp data object view following problem computed attribute testobjectlength updated new elements added object javascript console whereas testadd attribute works perfectly wrong another way get number properties javascript object thanks lot v", "num": "2640", "d": "4/2016"}, {"title": "velse work together vshow custom component", "body": "vuejs version reproduction link steps reproduce click toggle button expected mycomponent showing msg hidden actually happening msg always shows", "num": "2639", "d": "4/2016"}, {"title": "checkbox shows checked vmodel false", "body": "started path click fired vmodel updated example nt know value thought try logic watch function found issue vuejs version reproduction link steps reproduce click checkbox choose cancel expected checkbox empty actually happening checkbox shows checked bound data false", "num": "2638", "d": "4/2016"}, {"title": "feature ability disable vue observation", "body": "update anyone ends needing functionality released vuenonreactive appropriate admonitions everything nonplain models need disable vue observation walking example resource model access cache lookup related resources causes objects cache become watched probably inefficient well additional interactions code currently get around setting dummy observer cache something similar js import get import resource resource new vue data instance ready thisfetch work relies vue internals requires already observed object since import class directly proposal add official method explicitly disabling vue observationwalking eg something like js const something nestedthing make entire object nonreactive vuenonreactive something make nested object nonreactive vuenonreactive somethingnestedthing vm set keypath something considerations happen user set reactive key path nonreactive object vue warn user eg js vm set vuenonreactive different vm set somekey vuenonreactive already reactive object warn user attempted made nonreactive eg js error vuenonreactive vm dataa valid vuenonreactive clone vm dataa", "num": "2637", "d": "4/2016"}, {"title": "add childparent communication components", "body": "hi trying create custom select tag components support parent child communication props way use something similar would inputs thanks", "num": "2636", "d": "4/2016"}, {"title": "vue\u73b0\u5728\u7684\u7248\u672c\u53ef\u4ee5\u5bf9 \u6a21\u578b\u7ed1\u5b9a\u4e48", "body": "", "num": "2635", "d": "4/2016"}, {"title": "suggestion allow force transition dynamic components", "body": "related sometimes need force apply transition switching dynamic components example click button transition apply component", "num": "2634", "d": "4/2016"}, {"title": "transitions trigger dynamic component component constructor passed", "body": "vuejs version reproduction link steps reproduce click button expected transition starts components actually happening components switches without transition note works correctly component name passed", "num": "2633", "d": "4/2016"}, {"title": "enhancement trackby allow using path instead key", "body": "vuejs version reproduction link steps reproduce run fiddle examine console expected entries tracked specified path like filters eg actually happening vuejs prints warning fails get unique value specified path required change three lines would need change functions make pr maybe small change nt require also possible add expression evaluation way combination fields yield unique identifier eg case reused companies different application make sense well", "num": "2632", "d": "4/2016"}, {"title": "style object vfor elements reactively updated", "body": "vuejs version reproduction link steps reproduce click move button wait transition ends expected update well ie message turn green actually happening gets reactively updated", "num": "2631", "d": "4/2016"}, {"title": "bug unmounting element mounted results removal mount element", "body": "vuejs version reproduction link steps reproduce check uncheck checkbox expected expectation mounting option set preserve mounting point removal happens allows reuse mounting point anything else needs mounted place old component example checkbox unchecked child removed blue box class remain actually happening mounting onto option unmounting results removal original mount point", "num": "2630", "d": "4/2016"}, {"title": "object using custom directives trigger events", "body": "tried use integration following official custom directive example scenario classic von change somemethod approach stop working remove custom directive select become simple standard select event handling work", "num": "2629", "d": "4/2016"}, {"title": "process defined", "body": "vuejs version steps reproduce use webpack run webapp browser expected work well works electron actually happening browser environment get error fails file line", "num": "2628", "d": "4/2016"}, {"title": "input value clears blur nested vfor", "body": "vuejs version chrome ie firefox steps reproduce image scenario attendee several options fill options store code problem value clears input lost focus however data binding works till next focus input also clear data vue custom filter used expected works fine actually happening may something", "num": "2626", "d": "4/2016"}, {"title": "stoppropagation double click nt work", "body": "vuejs version tested well reproduction link steps reproduce html dblclickstop error called double click nt stoppropagation called warning maybe expected behaviour probably another way catch double click simple click element", "num": "2625", "d": "4/2016"}, {"title": "vfor vif bug", "body": "vuejs version work firefox work chrome work chrome work firefox", "num": "2624", "d": "4/2016"}, {"title": "using set devices causes view update", "body": "using set devices causes view update vue template souce code setshowshopdata function var newshopdata thistotalshopdataslice set loading false set showshopdata newshopdata set shownodata newshopdatalength loadingforappend false curindex line set showshopdata newshopdata call function ajax request callback line nt work devices view nt update andriod ios devices work ok nt know ios set showshopdata newshopdata pc\u7aef \u8bbe\u5907 ios shoplistvue viewsbankshoplistvue uploading", "num": "2623", "d": "4/2016"}, {"title": "support extension methods like set javascript object", "body": "var vm new vue el demo data msgs vmmsgs set msgid msg content", "num": "2622", "d": "4/2016"}, {"title": "make children instance property reactive array", "body": "wanted computed property reevaluates every time children instance property updated case every time component addedremoved dom change wanted return list component names currently active dom however function expected children reactive see fiddle shows issue managed work around creating reactive array ready method based children see updated fiddle reason children reactive made reactive used computed properties per requirements thanks andres", "num": "2621", "d": "4/2016"}, {"title": "duplicate value found warning vfor", "body": "using twitterfetcher circumvent twitter latest api without much issues recently started getting following errors posting duplicate tweet would throw error duplicate value reproduced warning", "num": "2618", "d": "4/2016"}, {"title": "vfor arrays triggers alias warning", "body": "code triggering vue warn alias required vfor warning console might bug jsfiddle seems warning nt get triggered fiddle", "num": "2616", "d": "4/2016"}, {"title": "transitionleave leaving vfor iteration value changes", "body": "bug occurs shuffle original data used view vuejs version latest via vuecli reproduction link steps reproduce click next button least times expected current leave transition next enter transition actually happening see appear instead transitionleave leave expected even listend leavecancelled event never occured element still staying idea thanks", "num": "2614", "d": "4/2016"}, {"title": "set data watch", "body": "code like data disabled could set value watch export default props mytext data return disabled disabled watch mytext handler data thismytextlength gt thisdisabled disabled else thisdisabled", "num": "2613", "d": "4/2016"}, {"title": "ability set object paths outside vm", "body": "feature request long object paths set comes handy works setting path outside app statemanaged via vuex similar library kind tasks introduce verbosity stateahasownproperty b vueset statea b vueset statea b c val unfortunately accept keypath second argument accepts single key may think could initiate whole object structure nt always possible andor best choice sometimes add dynamic subobjects object setting path easy like following would useful think nt vue core maybe could go vuex core helper good workaround thanks", "num": "2612", "d": "4/2016"}, {"title": "directive \u4e0b\u7528vm\u7684 set\u65b9\u6cd5\u4f1a\u53d1\u51fa\u8b66\u544a", "body": "set vuedirective msform id msform priority bind function let vm thisvm let el thisel let formname elgetattribute name vm formname vm set formname formname zvm formname vm set formname valid true invalid false debugger vm watch formname function newvalue oldvalue let valid true let index newvalue newvalue index invalid undefined amp amp newvalue index invalid valid false break newvalue invalid valid newvalue valid valid deep true", "num": "2611", "d": "4/2016"}, {"title": "specify filter variable", "body": "feature request would nice able use variable specify filter example table component could column definition passed prop implementation column could use filter prop using filterloading filter workaround obviously far ideal", "num": "2609", "d": "4/2016"}, {"title": "browser freeze safari ios possibly webkit bug", "body": "vuejs version reproduction link x steps reproduce nt able pin exact conditions please look longer description expected infinite loop frozen browser actually happening production environment safari ios randomly freezes uses cpu componentmethod called clickhandler unfortunately hard debug could nt reproduce developmentenvironment simple consolelog output came belief infinite loop mentioned method called vue situations helped reload page twice also said nothing special going method changing variable main vueinstance works perfectly fine every browser afraid could caused webkitbug returns wrong value functionobject seems problem mistakenly return object typeof function jited code report probably violates guidelines lot want apologize advance vague try get information tough", "num": "2608", "d": "4/2016"}, {"title": "bug", "body": "vuejs version reproduction link steps reproduce vmodal \u7684\u6761\u4ef6 expected \u5f53\u7b26\u5408 vmodal \u4f1a\u663e\u793a\u51fa\u6765 actually happening vmodal", "num": "2607", "d": "4/2016"}, {"title": "component props coerce working default option", "body": "hi first would like say thanks vue truly awesome think may found slight regression vue seems like option component props passed function vue working upgraded see fiddles details thanks vuejs version reproduction link working fiddle vue working fiddle vue steps reproduce see fiddles expected prop default passed coerce function actually happening props specified template defaults passed coerce function", "num": "2606", "d": "4/2016"}, {"title": "automatically converting value number prop type number", "body": "use instead want set props written add coerce function think value automatically converted number type may numberprops add coerce option many times", "num": "2605", "d": "4/2016"}, {"title": "problem vshow", "body": "use vshow control modal modal input open modal ca nt get focus input delete vshow focus input happend", "num": "2604", "d": "4/2016"}, {"body": "nt try opening issue", "d": "4/2016"}, {"body": "quickly tried fiddle svg loaded within html seems work one solution could try changing use tag", "d": "4/2016"}, {"body": "nirazul yep works unfortunately approach right one current project", "d": "4/2016"}, {"body": "vuejs patreon campaign removed email address issue security", "d": "4/2016"}, {"body": "thank bridge evan able contact email would like able discuss l\u00e9on", "d": "4/2016"}, {"body": "hi otherwise answer besides live france", "d": "4/2016"}, {"body": "appears work cases vue currently support using components instead use prop signal parent change value demo approach", "d": "4/2016"}, {"body": "yes assumes behavior always true also longer relies actual dom template parsing long using direct dom elements template source longer subject parsing limitations example use component root node", "d": "4/2016"}, {"body": "example use component root node limits component one tag type though eg ca nt use nt issue limitation said ca nt really think practical case would necessary classes attributes though preserved", "d": "4/2016"}, {"body": "everything else works", "d": "4/2016"}, {"body": "ohhh messed around fiddle nt realize attributes merged works us poked api reference nt explain happens element attributes inner content maybe could better clarified", "d": "4/2016"}, {"body": "pr submitted docs repo", "d": "4/2016"}, {"body": "something wanted practical difficulty isolating new features patch fixes costs lot think process basically followed development model every commit goes releasing patch inevitably includes new features separating features bug fixes separate branches keeping sync minor release makes development model lot complex said convinced every little detail semver especially projects marketing concerns often easy people argue favor strict semver version numbers practically impact success project case vue important part majorbreaking bumps follow strictly really want go superstrict semver could hidden features later announce part take opportunity explore possibility semantic minor releases blank slate", "d": "4/2016"}, {"body": "isolating new features patches solved problem presumptuous think understand costs argument benefits outweigh costs though understand point may disagree however ca nt get board marketing claim marketing benefit derived calling version vs calling finally anecdotes lodash follows strict semver nt see jdalton marketing problem anything developers use lodash instead underscorejs simply lodash follows semver underscorejs level stewardship greatly appreciated users react follows semver goofiness switching year due marketing concerns interesting see embracing large major version number happy hear explore possibility semantic minor releases hope come conclusion better community", "d": "4/2016"}, {"body": "youngsteveo basically saying worth point reconsider ps probably know cost nt really know much working", "d": "4/2016"}, {"body": "gotcha thanks", "d": "4/2016"}, {"body": "array primitiv value two arrays value store reference single array use set function nothing happens would expected think boolean value proposed express possible forms comparison either would get overcomplicated really fast", "d": "4/2016"}, {"body": "watch array length prop", "d": "4/2016"}, {"body": "asking basically diff values expensive cases indicating approaching problem wrong angle trying perform imperative operations based diff ideally nt need care detailed difference values working ui use computed properties ensure everything updates automatically need diffing legit reasons implement indus pointed structural diffing trivial problem", "d": "4/2016"}, {"body": "vue router likely streamline rebuild use issues opened vuerouter discuss good implementation may already", "d": "4/2016"}, {"body": "njleonzhang probably want hook instead also necessary define fields inside object something like", "d": "4/2016"}, {"body": "links", "d": "4/2016"}, {"body": "nt think feature released yet vue ago feature added ago", "d": "4/2016"}, {"body": "sorry build script currently nt run windows due env variables intentional fix get closer official release really want try use crossenv", "d": "4/2016"}, {"body": "nt work way like returning function vs calling function also bad idea nt", "d": "4/2016"}, {"body": "thanks reply means return function delayed called means way simplify cause appears many places", "d": "4/2016"}, {"body": "nt quite understand need use native dom methods difference", "d": "4/2016"}, {"body": "maybe confused attached deprecated components longer possibility offdom work closed", "d": "4/2016"}, {"body": "need call without arguments creates appending otherwise yes work", "d": "4/2016"}, {"body": "done progress towards alpha version", "d": "4/2016"}, {"body": "agree switch template systems upgrade nt great could turn lot work especially template solution heavily used", "d": "4/2016"}, {"body": "also server side place conflict migrate angular vue different delimiters make lot difference", "d": "4/2016"}, {"body": "think reason behind eg party component template uses change delimiters would cause party component break maybe could reworked vue option instead global configuration eg js import vue vue const appvue vueextend delimiters export default appvue app would import extended vue configured presets could manually set delimiters per vue", "d": "4/2016"}, {"body": "rpkilby vuejscollaborators discussing currently thinking enabling locally instances rather global option still discussion discover possible side effects", "d": "4/2016"}, {"body": "rpkilby precisely one reasons deprecation rework componentlevel option makes sense compromise look", "d": "4/2016"}, {"body": "sounds great thanks", "d": "4/2016"}, {"body": "implemented branch note still deprecated vue longer supports injecting html arbitrary positions always need use containing element", "d": "4/2016"}, {"body": "add like point inline templates something sets vue apart frameworks lot js frameworks want write templates template files compile vue nt something makes vue feel magical existing template want reactivity clean js wrap custom tag like write js done use serverside rendering variables already want course start migrating apibased template furthermore also allows much comprehensible serverside routing think crucial vue something added afterwards nt make vue project start project pull vue always charm vue eg angular react", "d": "4/2016"}, {"body": "hmm maybe could plugin personally nt use think mostly useful template partially rendered server", "d": "4/2016"}, {"body": "azamatsharapov indeed exactly point always made vue great backend developer still easily declare routes functionality backend render views use javascript original intent interaction", "d": "4/2016"}, {"body": "azamatsharapov tons developers thing makes vue special adapt whatever style project working removed solely bad practice well meh awesome never bit even inlinetemplate filters return excited vue mostly stressed upgrade", "d": "4/2016"}, {"body": "especially surprising inline templates useful serverside rendering removed update promises improved serverside rendering support", "d": "4/2016"}, {"body": "nt surprising goal serverside rendering nonblocking streamed vue instance rather user wait render anything else happen regardless find travesty", "d": "4/2016"}, {"body": "promises improved serverside rendering support think completely different thing vuejs work server render templates jeffreyway phroggyy agreed active phplaravel user earlier know many people use technical reason remove least avoid increased size library maybe made plugin probably makes everybody happy", "d": "4/2016"}, {"body": "use inline templates everywhere statamic reasons taylorotwell spark provides great middleground php javascript building spas want understand follow best practices one literally one reasons love using vuejs ca nt even imagine approach able vue without thought kind making panic little", "d": "4/2016"}, {"body": "glad one feels like vue magical use cms project spas ca nt imagine glad could use vue within cms project first time worked quite sure removal make impossible use framework half projects leads sad sad circumstance maintainlearn two different systems frontend frameworks sublime piece api opinion really really good reason remove well possibility support plugin see like jeffreyway wow hi btw keep simple variant happy keep implement sort global event bus really looking forward next version", "d": "4/2016"}, {"body": "talking rizqidjamaluddin pointed currently use lt div gt place template lt div gt js file important question vue break behaviour well eg kind templating considered inlinetemplating would viable upgrade path docs reference", "d": "4/2016"}, {"body": "place work lot projects django cms custom delimiters matter made possible declare vue components within backend templates way serverrendering without possibility could nt frontendediting cms anymore thus would effectively break apart would probably switch approach closer spas would mean lot development work backend defining apis etc thus using vue might become budgetary liability well least adapted procedures", "d": "4/2016"}, {"body": "definitely inline template indication would ever removed", "d": "4/2016"}, {"body": "phroggyy quite convenience functionality pure inline templates", "d": "4/2016"}, {"body": "thanks clarifying josephsilber taylorotwell might quite similar meaning might viable upgrade path maybe", "d": "4/2016"}, {"body": "using inlinetemplate way able get one projects working ie nt support tag", "d": "4/2016"}, {"body": "use inline templates quite bit handful spring thymeleaf apps one reasons using think availability makes vue super flexible drop component legacy page add additional functionality without rebuild redo build process", "d": "4/2016"}, {"body": "phroggyy one thing different using inlinetemplate vs template script tag inline template already rendered dom loads flicker template script tag still needs parsed vue injected dom fact empty space gets populated fact sometimes looks bit janky even able use vcloak minimize stands component needs perform ajax request load want sort loading state displayed http request happens inlinetemplate loading state shown soon page renders wait http request finish approach get white flicker component compiles switches loading view waiting http request easy way share loading view vue compiles view needs displayed vue compiled ajax request still happening", "d": "4/2016"}, {"body": "boussou instead couldshould thumbs original post thanks github", "d": "4/2016"}, {"body": "nt notice new feature github almost becomes dev fb", "d": "4/2016"}, {"body": "nt use surprised many people nt want syntax removed library reading comments understood gives us benefits understood utilizing would like combine logics templates ways correct creating component constructors items like example instead writing templates anyone think reason treated bad practice javascript example var base vueextend data function return methods var app new vue components componenta baseextend template templatea componentb baseextend template", "d": "4/2016"}, {"body": "confused deprecation well first thing tried testing codepen uses latest vue build using still works think referring feature might wrong really like clear first", "d": "4/2016"}, {"body": "right property still work related using", "d": "4/2016"}, {"body": "think shipped separate plugin", "d": "4/2016"}, {"body": "curiosity standard vue hello world sort example considered fine inlinetemplate considered bad practice nt attaching new vue object existing markup conceptually inlinetemplate anyways additional limitations", "d": "4/2016"}, {"body": "clarify bit main reason labelled bad practice assuming spa context believe collocation component template logic important longer term maintainability however admit overlooked use case progressive enhancement largely server rendered apps tbh something personally use vue nt realize strong need feature technically complicated support bring back", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "fan little utilities like clientside javascipt library nt cover due size performance issues serverside frameworks like laravel django hand support", "d": "4/2016"}, {"body": "asmaps could also simply use vue index itemmessage sorry elements yet needed handle arrays objects basic method implementation could js isempty value value amp amp value instanceof array return valuelength lt", "d": "4/2016"}, {"body": "taylorzane sure use could also use instead convenience feature prevents code duplication phanan reason could also argue yes somewhere line drawn okay wanted ask used django find useful", "d": "4/2016"}, {"body": "phanan reason could also argue exactly internal discussions well", "d": "4/2016"}, {"body": "performance issues phanan mean overall size library mean rendering performance nt seem like would intensive vifvelse vifvfor also maybe could implemented plugin", "d": "4/2016"}, {"body": "mean overall size library mean rendering performance meant regarding small utilities", "d": "4/2016"}, {"body": "hello expected behaviour string want number write make number please tell nt problem nt speak chinese", "d": "4/2016"}, {"body": "thanks answer works problem posva", "d": "4/2016"}, {"body": "\u8bf7\u4e0d\u8981\u5f00\u91cd\u590d\u7684", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "see", "d": "4/2016"}, {"body": "yep seen concern implement global event bus events registered event object looking way automate know seems merely convenience vue convenience simplicity ease use", "d": "4/2016"}, {"body": "nirazul something like following one lifecycle hooks may work looked close enough new api may able use mixin js var autoevents created function var evtid thisoptionsevents bus evtid thisoptionsevents evtid destroyed function var evtid thisoptionsevents bus evtid new vue mixin autoevents events idselected function", "d": "4/2016"}, {"body": "indus sounds like plan try first alpha vue released", "d": "4/2016"}, {"body": "sounds application components control bus components use concern party components listen events emitted arbitrary component vue components instantiated user vue internally party components aware bus system may may using", "d": "4/2016"}, {"body": "recommends using vuex inject bus components need use events seems like overkill small projects liked vue nt require using vuex router even http unless needed also rpkilby states longer universal system party components hurt community whole thinking important jquery think vue needs equivalent", "d": "4/2016"}, {"body": "rpkilby party components still ability directly longer ability dispatch events propagates essentially ensures party component cause side effects direct parent believe good thing isolated component able dispatch event causes side effects unknown parent tree sounds like recipe trouble", "d": "4/2016"}, {"body": "isolated component able dispatch event causes side effects unknown parent tree sounds like recipe trouble totally agree concern direct parent party component able listen event would want fire events global bus would likely want parent get events events ted communicate parent component thought isolated component may cases want event propagate beyond direct parent either way application detail parent component would determine", "d": "4/2016"}, {"body": "rpkilby guess using component listening ted event relevant data sent along affected data parent could handle accordingly function would executing result parent scope", "d": "4/2016"}, {"body": "rpkilby", "d": "4/2016"}, {"body": "correct", "d": "4/2016"}, {"body": "von holy crap idea could entire time facepalm emoji", "d": "4/2016"}, {"body": "rpkilby subscribe vuejsvuejsorg repo commits wink", "d": "4/2016"}, {"body": "viewpoint standalone component developer would need something like working directly call function child also work fully replace communication two nested depending components dismissed mainly please reconsider usecases vuecard vuecollapsible vuecompsscrollspy", "d": "4/2016"}, {"body": "correct paulpflug communication slot components host implemented calling slot components listening event parent tight coupling since designing tightly coupled components meant used together think straightforward solution also complex slot distribution best handled using programmatic function simplify things lot closing think questions answered seems strong arguments deprecation", "d": "4/2016"}, {"body": "clearly undefined obviously string even empty", "d": "4/2016"}, {"body": "display undefined textbox undefined show empty display empty", "d": "4/2016"}, {"body": "show undefined textbox user understand", "d": "4/2016"}, {"body": "show empty like", "d": "4/2016"}, {"body": "nt define like docs suggested", "d": "4/2016"}, {"body": "lazy define show empty string better like template engine like smarty template engine show empty string variable define", "d": "4/2016"}, {"body": "problem found lazy define define get unexpected results much better declare data structures", "d": "4/2016"}, {"body": "much code write", "d": "4/2016"}, {"body": "show empty string like template engine", "d": "4/2016"}, {"body": "difference one line ca nt work nt declarative understandable", "d": "4/2016"}, {"body": "chenyouxiang vuejs try solve issues goal lightweight create small helper function convert empty string note recommended define properties better maintainability reactivity", "d": "4/2016"}, {"body": "really edit future participants bug empty", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "phanan please reopen thanks", "d": "4/2016"}, {"body": "duruitang trying achieve looks trying put data vue structure nt using data props attribute phanan unless know duruitang seems rude ridiculeclose issue without least attempt help seems beginner least point gitter channel forum", "d": "4/2016"}, {"body": "nirazul issue started bug title empty body closed thinking spamtroll duruitang edited filled details reopened yes trying reproduce bug talking", "d": "4/2016"}, {"body": "nirazul sorry fault pressed confirm key opened issue please nt blame phanan sorry bother", "d": "4/2016"}, {"body": "see last section merges two arrays uses copy original nt altered ps use simple", "d": "4/2016"}, {"body": "egoist use vuevuearr altered code vtitle vdestination vleavingtime function new vue el documentbody lt body id documentbody gt data camp shown false apiurl apiordercamps data page limit loadmore true ready function var thisinitmod camp \u521d\u59cb\u5316camp methods initmod function mod var \u91cd\u7f6e mod shown false mod data mod page mod loadmore true \u8bf7\u6c42\u6570\u636e globalweuishowloading ajax url mod apiurl type get timeout data page mod page limit mod limit datatype json complete function globalweuihideloading success function res resret mod data resdata resdatalength lt mod limit mod loadmore false else mod page mod shown true else globalweuishowalert resmsg error function globalweuishowalert \u8bf7\u6c42\u6570\u636e\u51fa\u9519 \u52a0\u8f7d\u66f4\u591a\u6570\u636e loadmore function mod var globalweuishowloading ajax url mod apiurl type get timeout data page mod page limit mod limit datatype json complete function globalweuihideloading success function res resret resdatalength lt mod limit mod loadmore false else mod page working resdata function v mod datapush v working mod data merge mod data resdata else globalweuishowalert resmsg error function globalweuishowalert \u8bf7\u6c42\u6570\u636e\u51fa\u9519 marked section please check", "d": "4/2016"}, {"body": "merge may returning different copy original array use concat instead", "d": "4/2016"}, {"body": "phanan sorry nt think possibility seen strange plausible question", "d": "4/2016"}, {"body": "clarifying point originally came gitter chat filter another changes people nt thrilled losing correction courtesy josephsilber filter param", "d": "4/2016"}, {"body": "thanks removed point scott", "d": "4/2016"}, {"body": "worst case come tiny plugins deal filters problem wo nt work without babel compilation", "d": "4/2016"}, {"body": "stoked changes either filters seems easy alternative registering global mixins however fond idea polluting components methods scopes ultrasimple tasks like pluralize forth never used twoway filters however filters convenient beautiful two things vue always right far", "d": "4/2016"}, {"body": "read post vue stoked new possibilities especially virtual dom server rendering also surprised little sad filters gone one favorite parts vue easily usable chainable mainly easily extensible beautiful syntax use template directly especially combination loops perfect match thinking use computed properties replace filtering every prop want worried writing lot boilerplate future mixins might mitigate part problem still feel like part elegance ease using vue going missing", "d": "4/2016"}, {"body": "everybody agrees please click thumbs description better spamming thousand people even better come meaningful use cases", "d": "4/2016"}, {"body": "never used twoway filters would really miss filters sometimes use computed properties simple cases convenience really speeds workflow consider simple example html item much easier write cases required complex filtering compare following html item javascript new vue el body saying second one hard write use many places start repeating takes extra time could perhaps use useful features either way stay happy vue user sharing opinion filters deprecated", "d": "4/2016"}, {"body": "filters reusable create function format data register filter use instances", "d": "4/2016"}, {"body": "mixin separate module method separate module computed prop function", "d": "4/2016"}, {"body": "left comment announcement thread instead duplicating simply link", "d": "4/2016"}, {"body": "totally understand feeling something super convenient taken away first please take moment read chrisvfritz comment forum thread make discussion easier copy pasting theotherzach thanks passion vue like explain deprecation bit better first introduce member vue core team use vue time freelance ui data visualization work also educator teaches people use vue rails among web technologies run code school help people learn use tools use together almost every day also one big proponents removing filters vue problem filters beginners vue big part reason favor deprecating filters actually beginners working students conversation come student filter basically function mentor yes student ok use normally function parentheses mentor well special kind function student use places like computed value mentor use templates special pipe syntax student one big things trips beginners exceptions filters functions except require special syntax ca nt used everywhere use pipe syntax different pipe syntax may integrated meaning wo nt long people two similar operators something similar quite one actually javascript util libraries useful vue nt one case transforms strings numbers specific filters yes useful applications come util libraries general useful dozens great util libraries choose vue nt utility library frankly none utilities offered bestinclass handling currencies dates even filtering arrays nt focus many apps nt require apps worked face problems require robust solution vue currently offers could offer without introducing significant bloat wheel reinvention apps accountingjs handled currency superbly momentjs mentioned handles dates times nt handle many pluralizations well custom computed value often desirable little advantages computed properties using computed properties place filters also offers advantage processed value easily reused dry way anywhere component find apps time computed property also moves implementation details template leaving clean description component advantage globally defined filters one need look function computer value see tweak exactly working arrays chaining javascript methods even provides linear list processing pipes even declarative easily manipulated way usefulness globally defined whatever need define function anything else want accessible components great way personally never wanted always preferred put helper method module import module need still important note registering globals kind nt made harder case directive say actually one recently looked vue projects every single one somewhere also used fact one past applications nt use debounce technically utility lodash many robust projects offer debounce solutions problem pretty universal ui development kind app writing debounce function also nontrivial enough probably want use lodash implementation nearly every project remains internal debate see goes yes personally seems also others removing debounce removes convenience offered thanks passion seriously love much love vue really glad voicing concerns especially kind respectful way hearing core team designers frontend developers data visualization specialists use vue work pretty diverse definitely dedicated pushing dogfood want eat", "d": "4/2016"}, {"body": "talk cheap let code see without filter apply filterby reverse write global pure filter functions seperate file code reuse js filtersjs function filterby list value return listfilter function item return itemindexof value gt function findby list value return listfilter function item return item value function reverse value return valuesplit reverse join export filterby reverse findby use filters appvue template js reverse demo reverse msg import reverse filterby findby filtersjs export default data return userinput msg hello vue words black block blue alpha methods reverse filterby findby see result filter used following vue code would js reverse demo msg reverse", "d": "4/2016"}, {"body": "boilerplate concerns several ways deal explicitly importexport like raywill demonstrated bit verbose benefits nt lookup vue filter documentation understand works super explicit functions coming implemented functions javascript altercompose fit special uses cases unlike builtin filters touch import programmatically reuse functions methods computed properties anywhere write javascript attach html word go functional advanced users helper functions look like js function returns predicate function arrayfilter function contains value return thing gt thingindexof value gt function getvalue return b gt return getvalue gt getvalue b important design consideration builtin filters useful lack flexibility pure javascript builtin function nt suit needs either end reimplementing something similar shipping final code builtin becomes useless dead code wait vue update release new version", "d": "4/2016"}, {"body": "like prototype approach cases need multiple filters pretty common use along html word cases would add html word approach make code less readable yes least opinion guess could combined filters like nt feel right either open changes want come almost easy way handle also benefit able use filters anywhere really good point", "d": "4/2016"}, {"body": "note vuejscollaborators discussing option provide utilities package current integrated filters plenty resources provide utility tools code base one good thing removing core filters customiseimplement gives lots flexibility", "d": "4/2016"}, {"body": "template expressions simple possible ideally like computed prop hold logic creating filtered data way readable better something like ect much reusable assign computed property even passed child components wanted use filtered data two places easier simpler reliable readable templates simple expressions compared chained filters expressions", "d": "4/2016"}, {"body": "anyone following along answered chrisvfritz", "d": "4/2016"}, {"body": "following solves use case globally available pure view helper functions withdraw filter removal concerns burn em congratulations chrisvfritz changing somebody mind mine internet html word", "d": "4/2016"}, {"body": "totally agree remove filters stick plain js functions", "d": "4/2016"}, {"body": "blakenewman good point mostly convinced point thinking readibility think something like achieved quick jsfiddle concept", "d": "4/2016"}, {"body": "one good thing removing core filters customiseimplement gives lots flexibility always able customizeimplement vue nt utility library frankly none utilities offered bestinclass concerned removing filter functionality templates removing builtin filters make lot sense easily recreated proxying underscoreother util libraries someone could even release single plugin recreates current builtin filters using computed properties place filters also offers advantage processed value easily reused dry way anywhere component course use computed properties reuse elsewhere nt filter still much convenient points posted link shared", "d": "4/2016"}, {"body": "support syntax filters operates like proposed syntax would allow people keep using beloved filters bring line future may hold eventually pipes switch internal implementation without changing api", "d": "4/2016"}, {"body": "pipes approved subject lot changes", "d": "4/2016"}, {"body": "theoretically subject change seems stable status mindeavorespipelineoperator", "d": "4/2016"}, {"body": "josephsilber youngsteveo thelinuxlich think page regarding value pipes general one advantage new compiler pipe generated render function code babel still needs explored inconceivable gains momentum babel plugin developed could happily chain methods pipes everywhere app huge fan livescript functional languages definitely recognize value", "d": "4/2016"}, {"body": "pipeline operator even stage", "d": "4/2016"}, {"body": "thelinuxlich yes believe still waiting champion", "d": "4/2016"}, {"body": "one alternatives wanted mention power javascript allows achieve expressiveness choice imo better putting filtering logic inside templates", "d": "4/2016"}, {"body": "vue perform following cases one user name updated html username gt capitalize seems like former would rerender one object latter would recompute entire list", "d": "4/2016"}, {"body": "rpkilby nt seem equivalent like html capitalize username", "d": "4/2016"}, {"body": "still nt like idea using methods filters gut feeling seems wrong ca nt really explain either way discussed methods making filters available", "d": "4/2016"}, {"body": "nothing suggested thread comes even close expressiveness succinctness filters nt makes real sad like said forum thread removes big chunk makes vue vue looking find corner sobbing audibly", "d": "4/2016"}, {"body": "way change encourages good javascript coding deal", "d": "4/2016"}, {"body": "long discussion user perspective suggested keep syntax support feel elegant natural imagination something like javascript itemname methods filterby items field return filtered orderby items field order return filtered impression would approach best worlds end though convinced removing filters whole actually better thing like thelinuxlich said encourages better javascript logic thinking nt introduce logic laravel blade framework view layer nt vue templates said josephsilber look corner find", "d": "4/2016"}, {"body": "filters feel beautiful syntax exactly filter syntax look like also one attractive thing vue comes batteries included would really sad lose either things opinion make vue stand", "d": "4/2016"}, {"body": "reading thread seems concern filters fact vue default filters really function still sure like filter plugin thinking blakenewman prebuilt examples people come filters plug play would great absolutely agree creating filters userland responsibility still wanted pipe chaining abilities globalness original filter feature concerns globalness covered chaining pipe helps ton reading templates understanding expected output pipe chaining discussed still done bad thing designer gold filter designer tool js programmer argument writing better js falls board book understand would wanted designer want write better code filters allows beautifully smile scott", "d": "4/2016"}, {"body": "thing regarding chaining filters primarily used two purposes formatting text processing array case formatting text time single utility method used chaining really much problem case arrays already pointed array processing fact logic better suited javascript multiple chained array filters may look okay simple get ugly use arguments also encouraging put much logic template really nt also inflexible easily retrive processed value comparison original example written javascript magic alternative syntax filterspecific api learn access processed value intelligently cached also free add sugar top shown previous comments plus template looks cleaner know like handy thing taken away honestly arguments filters right sounds like trying keep syntax syntax sake opinion takes elegant justify feature needs provide objective value case nt see filters", "d": "4/2016"}, {"body": "example exemplifies issue think best js programmer nt need js programmer know says nothing really bad practice smile fact filtering method global also means must go searching docs code decipher output find method really elegant right ok could method name like filterbyorderbyandlimit arguments would correct might feasible still nt look good want filterby orderby need separate method want add currency formatting another method filter chaining templates makes manipulating presentation flexible expressive concern yet properly addressed methods lack knowledge nt allowing understand methods better possible agree much logic template something avoid filter chaining ability simply pop filter anywhere app components templates fantastic concept reason added begin reason reasons name bet money outweigh promotes bad practices mile anything allows flexibility used improperly like vue main argument flexible allowed vue used different ways filters nt much different vue internal nt affect vue might used externally still nt devalue importance remember lot people also said would nogo upgrade important smile new way needs attributes old way chainable global add templates nicely express data templates manipulated forget anything sure everyone pretty much satisfied personally ca nt see happening methods yet scott", "d": "4/2016"}, {"body": "smolinari clearly stated put less logic templates opinion whether like obviously free disagree ca nt help want work recommended best practice given explained chaining issue complex logic done javascript also given examples add globally available methods see example custom chaining syntax similar want goal framework provide believe best way develop front end applications please everyone please nt use upgrade nt give feature back nt work", "d": "4/2016"}, {"body": "nt guys try new alpha release week come really valuable comments based practice maybe try refactor existing app let us know impossible improved got worse discuss better would useful everybody think", "d": "4/2016"}, {"body": "agreed agree smile nt agree proper reason taking something gained much love guess decided time pragmatic js better pragmatic html argument nogo upgrading others said trying communicate mitigate one last argument look user user eyes say system like laravel mvc mvvm system incorporates vue also allows user system build components filter simplifies learning curve allows users system get lot done without touching js fan vue allow nonjs programmers still get lot done reason nt like react jsx combination lot smaller user base vue time goes bet money also understand real flexibility lies js still please nt rely solely js flexibility vue keep mind everyone killer js programmer fact people nt filter nice way get lot done people nice stepping stone towards js manipulation filters ca nt get done go deeper js methods ok enough done thanks listening rate vue still awesome smile azamatsharapov good point scott", "d": "4/2016"}, {"body": "seeing people trying justify bad practices inside js makes sad really nt need pro basic homework nt basic anymore days", "d": "4/2016"}, {"body": "problem filtersinsidemethods semantics oops term filters like static functions methods nonstatic function filters convey extremely different semantics methods biggest difference filters use methods using work changing look like good practice would rather advocate creating separate global object contain filters", "d": "4/2016"}, {"body": "nt look like good practice globals good practice recommended approach explicitly importing helper methods attaching prototype workaround want explicitly import methods semantics filters coined concept anyway javascript would nt invent different semantics uppercase string call function javascript functions", "d": "4/2016"}, {"body": "going make one comment try make personal point clearer mainly trying justify bad practices inside js comment certainly trying realize vue templating system templating system afraid trying move away role feel nt templating enginesystem take twig templating engine successful example one could expect templating system template designers section developers section docs templating system twig powerful template designer chock full default behaviors including filters allows nondevelopers ton template system without directly knowing php learn twig offer use looking vue like see vue template designers section docs smile also important extensibility twig something nt available stock version added developer steps nice thing extensions shared means done nice thing two levels designer developer get much broader base users much much broader behavior defaults nt enough start learn willingly underlying language learn best practices rest saying vue ca nt template engine without learn js say lowering market value considerably say leave door open let others make tools templating engine plugins great everybody fighting templating system also counterproductive imho student talking filters example evan someone learning js someone learning template engine latter bet conversation would go differently rate still think vue winning system hope thoughts might make others think differently vue roles way smile scott", "d": "4/2016"}, {"body": "filters coined concept coined first place believe inside external variables like converted hence plain js functions defined outside component ca nt referenced filters introduced overcome limitation limitation still exists assuming right remove limitation would require devs explicitly code referencing access js functions would referenced js powerful feature prone abuse migrating old code pain current syntax looks way better agree filters basically js functions imported component nt like defined place methods", "d": "4/2016"}, {"body": "hi everyone read whole thread think one would miss built filters like everyone want still around pipe operator templates core team says logic keep javascript templates besides coming feature pipe operator quick summary think could good solution js implement native pipe operator would pipe operator plugin keeping version users wait new feature implementation could included warning coming deprecation something know anyone could implement plugin think would better provided keeped vue team could possible", "d": "4/2016"}, {"body": "could wrong nt think vue allows plugins mess compiler", "d": "4/2016"}, {"body": "azamatsharapov course nt think would mess vue compiler openmouth", "d": "4/2016"}, {"body": "yerkopalma absolutely love pipe operator use obsessively functional languages ca nt wait javascript imagine vue never filters would requesting frontend framework extend javascript syntax domain babel compiletojs language ui framework prefer use language like livescript often problem nt vue javascript fix additionally able pipe results render babel hope even able use tracked plugin want consistently everywhere javascript instead template want pipe likely able today warned pipe using templates likely different precedence behavior one babel smolinari others two phrases variations thereof keep hearing think developers user perspective think beginners imply assumption thinking groups mentioned guess needs reiteration everyone core team either designer frontend developer combination use tools every day work using vue believe thinking beginners made case guess go detail educator proponent eliminating filters thinking beginners personally taught hundreds people maybe even thousand practice web development usually scratch former coding experience done middle schoolers high schoolers university students professional adults senior citizens perspective tell filters seem like exciting magic first ultimately slow student learning introducing complexity limited convenience never angular vue conversation reversed trying introduce hard time explaining needed use talk deprecation eliminated filters curriculum code school gathered enough evidence harm good beginners rather gain experience versatile vue features like methods computed properties even discouraged use filters made easier pick bad practices hope puts two complaints bed see", "d": "4/2016"}, {"body": "imagine vue never filters would requesting frontend framework extend javascript syntax course filters natural templates twig mentioned feel pipe operator natural mustache syntax templates mean mustaches html javascript guys going remove whats different pipe operator", "d": "4/2016"}, {"body": "think children argument dumb far know vue designed teaching javascript frontend developers get shit done latter filters great never angular vue conversation reversed trying introduce hard time explaining needed use much disagree using python framework called django since templating language inspiration later born templating languages filters day one using frontend developers ten years come appreciate beauty usefulness would sad see syntax go away django filters", "d": "4/2016"}, {"body": "uninen please mind tone calling others arguments dumb constructive way participate discussion drawing analogies serverside templating languages one important aspect note serverside template languages amount flexibility vue templates computed properties limited expressions also built completely different purposes outputting static strings vue templates representations interactive dom twoway bindings event handlers component props filters fit limited use case vue context today believe bad idea allow filters everywhere eg filters vmodel vfor von introduces complexity good one possible alternative keeping filters text interpolations ie use inside directives", "d": "4/2016"}, {"body": "interesting reference angular still filters renamed pipes also intentionally removed list filtering ones", "d": "4/2016"}, {"body": "sorry language meaning insult anyone purpose framework hard stuff make look easy developers use tools still argue syntax ca nt beat would sad see go nt know understand much hood mechanisms users point view practicality beats purity related note interesting see much passion seems community vue fresh invigorating tool maybe take part painting particular shed", "d": "4/2016"}, {"body": "another datapoint ember nt filters allow component methods though computed properties use case pure functions performing intemplate transforms register handlebar helper ember helper handlebar helpers syntactically distinct things nt handlebar helpers bring got common piping filter syntax however handlebar templates logicless means require special syntax intemplate function call issue vue nt", "d": "4/2016"}, {"body": "filters simple beginners see magic using pretty output filterordersearch arrays ease define simple clear templates define filters external module templates get javascript import moment moment methods moment date format return moment str format format template suggestion leave old filters template move filters separate module use methods section need use specific filters utils package javascript import moment vueutilsdate import price vueutilsnumbers methods moment price use common filter result translated simple function call note filters use format data like dates numbers strings filtering arraysobjects think better use computed function common vue module javascript import vueutilsarray computed orderstable return thisorders filterby thisfilter sortby date limit benefits beginners ease use old filters computed use pretty function templates format data output programmers write functionsmodules ease use separate module think need core vue vue must utils developerstemplate designer need time require lodash moment else install utils npm ease use save old call syntax templates one important think must done filters must pure functions like getters vuex ease support ease usereuseextend good look templates", "d": "4/2016"}, {"body": "guys need clear upgrade path desire learn modularise javascript code", "d": "4/2016"}, {"body": "thelinuxlich speak filters syntax sugar completely exclude filters beginners vuejavascript bad laravel community like vue simple powerful completely remove filters need give alternative template designers need know sort array filter want enter code form example get result programers must know modularise javascript code rest use small stuff need know speak template designers put html inside code use javascript vueuse vueutils computed orderstable return thisutilsarray thisorders filterby thisfilter sortby date limit example proud need know js filter sort arrays lot people want things hard understand code like need make complicated things type people give simple solution good developers", "d": "4/2016"}, {"body": "one possible alternative keeping filters text interpolations ie use inside directives think could good compromise satisfy everyone ever used filters actually find weird currently would allow convenient text formatting want use filters reduce complexity effectively removing twoway filters", "d": "4/2016"}, {"body": "opinion momentjs filter example already passing much logic templates seriously direct pipe love spec repository reaches", "d": "4/2016"}, {"body": "like vitaliylavrenko suggested could good middle ground scott", "d": "4/2016"}, {"body": "like vitaliylavrenko proposal say something similar pipe operator plugin azamatsharapov said plugins nt mess compiler confuse even possible misunderstood comment", "d": "4/2016"}, {"body": "thelinuxlich better read think developer ask someone nt know javascript developers better something like javascript vueuse vueutils computed orderstable return thisutilsarray thisorders filterby thisfilter sortby date limit middle used like vueresource common lib pipe syntax sugar thing things filterby foo orderby bar limitby ease read need pass data diff templates store modifications one data like javascript padleft capitalize title padright upper title abstract situation use one two templates need store data objects increase memory usage yes use helper method use template template designers far away javascript better something like title capitalize padleft translated function call ease functional think diff people developers ease diff way people want simple", "d": "4/2016"}, {"body": "say much logic templates antipattern instead learn specific dsl filters learn javascript", "d": "4/2016"}, {"body": "thelinuxlich use jsx get react binding things vue get people nt know javascript google something dislike pipe nt use add something like turn onoff people ease say js developers use vue strongest side vue standart common filters need better separate lib ease add vue use want vue something like asm good devs use", "d": "4/2016"}, {"body": "guys think decision vue core team took explained well repeat thing comment something new valuable", "d": "4/2016"}, {"body": "part vue core principles easier nonjs developers even hurts language principles agree probably nt case", "d": "4/2016"}, {"body": "said mostly fine filters deprecated surely miss sake convenience sure similar filter system introduced plugin given proof concept example little earlier could used computed props well inline html itemfoo hand someone wants pipe sure done something like html itemfoo perhaps would hook would allow plugins parse expressions process however want could possible way solely depends complex implement effects would framework performance size would actually want go direction feel like given elegant alternatives easy use plugins something core get used fairly quickly", "d": "4/2016"}, {"body": "filtering arrays sort etc better use computed much clean think problem display data diff format field createdat need template render ddmmyyyy links filters used good alternative get use define date method make template dirty store additional fields cost memory objects became heavy", "d": "4/2016"}, {"body": "final decision filters supported inside text interpolations limits text formatting purposes enforcing logic javascript land vue ship builtin filters community create filter packs needed filter syntax change use function invocation syntax arguments instead spacedelimitered brings inline javascript popular templating languages swig twig", "d": "4/2016"}, {"body": "thanks listening evan makes vue great great leader smile scott", "d": "4/2016"}, {"body": "contained elements removed part parent element transitions triggered however use css selectors apply transition behavior parent element transition classes", "d": "4/2016"}, {"body": "fqzhang solve like nt think vue problem per se opinion using inside watcher always allow edge cases error appear", "d": "4/2016"}, {"body": "version using update", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "try extract problem jsfiddle quite hard find bug using entire site", "d": "4/2016"}, {"body": "hello chinese speaking users please make sure add couple chinese characters title issue whole description chinese smile way nonchinese unsubscribe issue right notification page better try describe issue english xiexie", "d": "4/2016"}, {"body": "\u76ee\u524d\u7684 keepalive \u5b9e\u73b0\u662f\u901a\u8fc7\u5224\u65ad constructor keepalive \u4f1a\u91cd\u65b0\u8bbe\u8ba1 keepalive", "d": "4/2016"}, {"body": "recommend listening native drag events component call method achieved mnaged create dynamic component system native drag drop acctully hard ie template methods dragnewcompont function e edatatransfersetdata text dataset call event set data drag transfer newcomponentdrop function e consolelog newcomponentdrop var data edatatransfergetdata text call event manaipulate data nb might need recreate destroy dynamic componets drag drop events hope helps", "d": "4/2016"}, {"body": "known issue wechat embedded browser fixed commit next release", "d": "4/2016"}, {"body": "found solution", "d": "4/2016"}, {"body": "need use", "d": "4/2016"}, {"body": "hi thank reply works wondering vif false div vif automatically removed dom got warning vue warn error evaluating expression stylesbgcolour", "d": "4/2016"}, {"body": "expected deleted use", "d": "4/2016"}, {"body": "nt work stylesbgcolour always false also understanding delete bg styles vif destroy code inside vue nt evaluate stylesbgcolour", "d": "4/2016"}, {"body": "seeing error warning nt working", "d": "4/2016"}, {"body": "object deletion works vif still work put stylesbg amp amp stylesbgcolour colour option show", "d": "4/2016"}, {"body": "please open separate issue problem preferably isolated codepen reproduction", "d": "4/2016"}, {"body": "could please look", "d": "4/2016"}, {"body": "solved prevent drag events", "d": "4/2016"}, {"body": "please follow issue reporting guidelines provide clear description reproduction steps", "d": "4/2016"}, {"body": "use array drive children js moduleexports data function return comps childone childtwo components childone require childtwo require", "d": "4/2016"}, {"body": "\u8bf7\u7528", "d": "4/2016"}, {"body": "type number \u4e0d\u662f \u7279\u6027", "d": "4/2016"}, {"body": "\u5e94\u8be5\u662f vue \u7684\u4e00\u4e2a pc \u7aef\u53ef\u4ee5\u7528", "d": "4/2016"}, {"body": "\u7279\u6027\u53ea\u662f\u5728\u503c\u4e3a string \u65f6\u81ea\u52a8\u8f6c\u6362\u4e3a", "d": "4/2016"}, {"body": "\u8fd9\u4e2a\u4e0d\u7b97 bug model breaking", "d": "4/2016"}, {"body": "\u5f3a\u70c8\u5efa\u8bae \u628a\u6587\u6863\u4e2d\u8bef\u5bfc\u6211\u7684 \u4fee\u6539\u4e3a", "d": "4/2016"}, {"body": "hello usage question encourage ask forum gitter try use issue tracker bug reports feature requests question reference elements", "d": "4/2016"}, {"body": "dom error use numbers ids nothing vue", "d": "4/2016"}, {"body": "hey seems like provided wrong fiddle link", "d": "4/2016"}, {"body": "sorry right one", "d": "4/2016"}, {"body": "hello limitation replace things work", "d": "4/2016"}, {"body": "thank simplesmiler solves problem", "d": "4/2016"}, {"body": "please check section documentation carefully working demo", "d": "4/2016"}, {"body": "ok got pass constructor via vueextend heres working fiddle", "d": "4/2016"}, {"body": "pespantelis thanks behaviour looking see nt think appears official doc yet", "d": "4/2016"}, {"body": "hi thanks filling issue think shared wrong jsfiddle take look fix please", "d": "4/2016"}, {"body": "updated sorry posva", "d": "4/2016"}, {"body": "worries smile", "d": "4/2016"}, {"body": "current parsing mechanism detect nested unwrapped svg elements want use slots wrap wontfix longer issue future versions", "d": "4/2016"}, {"body": "already using dev build", "d": "4/2016"}, {"body": "oh right could sworn nt issue confused lack warning nt notice using production build", "d": "4/2016"}, {"body": "api replaces inner content declared slot content distributed controll white space distributing structure slot structured distributed content see example see full example", "d": "4/2016"}, {"body": "nt believe understand actual issue explaining problem api works actually find great feature vue templates actual problem default slot becomes empty form whitespace present named slots removing whitespace making dom elements follow seamlessly way actually default slot show content provided original template simplified example works slots follow without whitespace nt work whitespace present newline jsfiddle example template definition ps sure trying show fiddle link exact copy one provided", "d": "4/2016"}, {"body": "michelpaus thank clarification miscommunication thought suggesting output formatted manner think trying say white space present defined distributable content default slot outputs default slot content", "d": "4/2016"}, {"body": "initial description fiddle bit confusing nt know fiddle better demonstrates issue two axes named slots used whitespace present enclosing tags named slots used whitespace effect named slots used whitespace overwrites default slot inconsistent first case whitespace effect", "d": "4/2016"}, {"body": "might related", "d": "4/2016"}, {"body": "use plain string styles use object", "d": "4/2016"}, {"body": "sure looking best guess scott", "d": "4/2016"}, {"body": "official guide states although use mustache interpolations class classname bind class recommended mix style vbind class use one please try avoid outcome guaranteed", "d": "4/2016"}, {"body": "ah overlooked sorry though would vote possible future", "d": "4/2016"}, {"body": "kvdmolen would nt solution offered work scott", "d": "4/2016"}, {"body": "smolinari right thanks link nt work solution html page", "d": "4/2016"}, {"body": "make sure use dev build already warns usage", "d": "4/2016"}, {"body": "detail example", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "jinjiang html \u6807\u9898\u5185\u5bb9 \u6807\u9898\u5185\u5bb9", "d": "4/2016"}, {"body": "removed vue", "d": "4/2016"}, {"body": "use option", "d": "4/2016"}, {"body": "code example would really helpful", "d": "4/2016"}, {"body": "obonyojimmy something along", "d": "4/2016"}, {"body": "data must plain object giving class explained docs recommended reading", "d": "4/2016"}, {"body": "prototype methods ignored using nonplain objects state rabbit hole complexity supported design", "d": "4/2016"}, {"body": "jonagoldman thanks read thanks asked question example works fine summary works works", "d": "4/2016"}, {"body": "see getter reactive", "d": "4/2016"}, {"body": "hmm exactly cry", "d": "4/2016"}, {"body": "\u7528", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "hello thanks reporting issue duplicate already fixed release next vue version patch case need", "d": "4/2016"}, {"body": "use watcher since already using", "d": "4/2016"}, {"body": "nt see work use watcher watch reset fails logic cause watcher fire twice reset value manually without vuejs watcher aware example changed", "d": "4/2016"}, {"body": "could run filter saves original value property grab later example vue nt concept original values deals current values", "d": "4/2016"}, {"body": "sirlancelot thanks trick", "d": "4/2016"}, {"body": "problem may also consider work filter handler instead dom event depends problem solving", "d": "4/2016"}, {"body": "hi thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described would help us lot", "d": "4/2016"}, {"body": "hello although standard tag may appear everywhere case browsers please read section explanation similar caveats particular case would use directly sufficient simple cases case want example two per array item would prepare data either computed property filter closing nt much right browser following standard", "d": "4/2016"}, {"body": "raf", "d": "4/2016"}, {"body": "benched raf nt make significant difference", "d": "4/2016"}, {"body": "thx answer \u043f\u0442 \u0430\u043f\u0440 \u0433 \u0432 evan notifications githubcom closed receiving authored thread reply email directly view github", "d": "4/2016"}, {"body": "posva look sounds like requestanimationframe", "d": "4/2016"}, {"body": "cool thanks rpkilby could nt find", "d": "4/2016"}, {"body": "quick fix placing literal vif resolves bug quick fix indeed bug assigning look", "d": "4/2016"}, {"body": "vuejscollaborators fyi due modifiers directives parsed previous directives fed previous directive even though applied directive", "d": "4/2016"}, {"body": "wowsie happen every directivemodifier though eg prevent click default", "d": "4/2016"}, {"body": "simplesmiler happens terminable directives found issue creating pr", "d": "4/2016"}, {"body": "hello thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "4/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "4/2016"}, {"body": "reason implementation make sure clear vue directive achieved clear simple prefix makes simple integrate tools even angular without clashes", "d": "4/2016"}, {"body": "nablex slightly tangent nt need prefix components except stylistic preference unless using global components chance components clash name names defined locally code uses", "d": "4/2016"}, {"body": "building tiny library reusable components taken naming prefix make clear belong central library reason clear wish could use clashes responsibility components", "d": "4/2016"}, {"body": "nablex unlike angular library developer decide name component used template library consumer js var goodlibrary require goodlibrary moduleexports components accordeon goodlibrarygoodaccordeon library consumer decides name", "d": "4/2016"}, {"body": "simplesmiler get possible feature using light development simply stating would nice able choose prefix options generally good thing", "d": "4/2016"}, {"body": "achieve similar behavior passing component prop instead using slots", "d": "4/2016"}, {"body": "simplesmiler solution best available current version vue think like javascript difference passing value already evaluated parent scope vs passing function takes arguments child scope return value addressed future version nt intend introduce suboptimal solutions", "d": "4/2016"}, {"body": "alternative method indeed clean solution situations problem naming component line wrapper component offering lead lot superfluous component generation worse reusing existing component may need wrap new one get naming correct look forward said future version", "d": "4/2016"}, {"body": "update removed corner cases directive implementations though probably optimized intimate knowledge core think cleaner solution component approach proposed directive case component simply exposes additional datamethods much like already exposes slotsprops anyone using component much part api component rest proactively shared component specific name access random state case built list component allows anything image slider button picker actual data lists optional lazy loading windowing multi select functionality requires outside access specify work cases example parts interactive eg clickable example want add swipe support example slider window set fixed size scroll size default selector windowed see example want scope part mouseclick interaction add swipe support trigger previous amp next browsing functionality", "d": "4/2016"}, {"body": "\u7f51\u7ad9\u7684 issue \u8bf7\u53d1\u5230\u7f51\u7ad9\u7684 repo", "d": "4/2016"}, {"body": "create custom filter angular ngmodel trim value default sucks want trailing spaces app", "d": "4/2016"}, {"body": "azamatsharapov leave tailing space intact opposite request many cases maybe tailing spaces necessary worth adding library", "d": "4/2016"}, {"body": "luwenjin implicit behaviour unintuitive using filter triming needed seems right way", "d": "4/2016"}, {"body": "posva actually proposing explicit way without trim vmodel trim", "d": "4/2016"}, {"body": "modifier future current vmodel params", "d": "4/2016"}, {"body": "hey issue nt seem reproducible fiddle provided since removing add class anyhow nt seem issue instead take look compilation scope section vuejs guide trying bind child property within parent scope instead might want try something like hope helps feel nt solve issue please feel free reopen", "d": "4/2016"}, {"body": "move parent scope try like", "d": "4/2016"}, {"body": "hi sure saying want number instead string shoud add number input please next time make sure sure ask question forums gitter chat get faster feedback try questions issues smile", "d": "4/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "4/2016"}, {"body": "hello thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described instance nt even know", "d": "4/2016"}, {"body": "code correct data bug jsbincom", "d": "4/2016"}, {"body": "commit answers question", "d": "4/2016"}, {"body": "yczz directly access value instead going problem trying access value props nt mirror props properties", "d": "4/2016"}, {"body": "props longer merged directly defined instance", "d": "4/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "4/2016"}, {"body": "sorry solution", "d": "4/2016"}, {"body": "describe old way things web page countain vuejs instance without router already know best could try use pjax style", "d": "4/2016"}, {"body": "check discussion", "d": "4/2016"}, {"body": "aha thanks close feature request", "d": "4/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "4/2016"}, {"body": "forget found problem lost vue binding de wizard plugin move content slot jquery html method solution thanks", "d": "4/2016"}, {"body": "still help nt provide repro anyway make sure sure ask question forums gitter chat get faster feedback keep questions issues smile closing feel free reopen issue find really bug", "d": "4/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "4/2016"}, {"body": "ok", "d": "4/2016"}, {"body": "edited sorry reread issue indeed seems logical called per instance however seem related amount instances dom used component data initialisation called twice", "d": "4/2016"}, {"body": "probably want part core css custom js hook moving animations complicated unlikely included core", "d": "4/2016"}, {"body": "made pull request tell guide", "d": "4/2016"}, {"body": "hello sqal would pass static class name binding add directly attribute pretty sure feature really easy add adding static class names class binding nt look right taken look guide section concerning class bindings may help", "d": "4/2016"}, {"body": "far aware already fixed dev", "d": "4/2016"}, {"body": "posva hi dropdown component want bind custom classes options prop also additional classes options true eg name dropdown props open type boolean twoway true default false options type object coerce options return objectassign dropdowndefaults options", "d": "4/2016"}, {"body": "see nt know already supported sweatsmile created array computed property since already fixed closing issue see problem appears new release feel free open issue", "d": "4/2016"}, {"body": "heads use nt actually dev sqal would work dev", "d": "4/2016"}, {"body": "wait sorry wrong close long day even wrote test", "d": "4/2016"}, {"body": "json ld better handled directive", "d": "4/2016"}, {"body": "maybe directive works better opinion semantically correct component case since component structure reflect dom structure apart debatable choice still bug", "d": "4/2016"}, {"body": "meaningful transitioning outin exactly one item want outin transition vfor items consider using delays css transitionanimations achieve", "d": "4/2016"}, {"body": "think documentation fine beautiful attract people gitbooks documentation nt understand second point confused related repository", "d": "4/2016"}, {"body": "core docs specific demands easily customized gitbook may eventually move docs projects place moment gitbook used quick takes little effort", "d": "4/2016"}, {"body": "cool posva mean new comers get bigger picture many official plugins easily better place showcase plugins", "d": "4/2016"}, {"body": "anything guide could incorporate page vue community efforts part despite links site navigation page could cover topics community forum gitter channel third party contributions awesome vue page show tell subforum contributing vue rules contribute rules issue reporting miss anything scott", "d": "4/2016"}, {"body": "smolinari like turn current community dropdown actual page would take pr", "d": "4/2016"}, {"body": "actually keep drop used often get different places would disadvantageous click page get places maybe linking page bottom pulldown anyone interested explanation glad page let see adding pr scott", "d": "4/2016"}, {"body": "ok pr think better text direct link navigation would join us smile scott", "d": "4/2016"}, {"body": "hello working intended find better explanation smile provide info lodash function using", "d": "4/2016"}, {"body": "using working use part documentation points ca nt watch assignments ca nt watch setting length removing elements fit two cases", "d": "4/2016"}, {"body": "guillaumeleclerc thanks take deeper look later keep updated", "d": "4/2016"}, {"body": "guillaumeleclerc like proposed fix small adjustments however also problems lodash caches reference included vue still would nt trigger changes", "d": "4/2016"}, {"body": "result nt think vue guarantee reactivity use blackbox party lib recommended approach using lodash always use immutable methods returns copy instead use replace original array", "d": "4/2016"}, {"body": "ended using normal think better performance recreating whole array thanks", "d": "4/2016"}, {"body": "recommended use manually construct child components imperative hard maintain probably want make child components datadriven using dynamically render child components instead constructing", "d": "4/2016"}, {"body": "yeah answer afraid hear still thank awesome framework", "d": "4/2016"}, {"body": "hmm strange even nt change binding", "d": "4/2016"}, {"body": "current suggestion simply avoid using camelcase event names particular reason", "d": "4/2016"}, {"body": "app followed syntax making something like vanilla js events mostly lowercase guess makes sense stick solution vue", "d": "4/2016"}, {"body": "three arguments camelcase allows omit quotes events property different behavior props confusing besides usage pattern similar html vs coffee props someprop vs events someevent currently wo nt work von", "d": "4/2016"}, {"body": "fwiw kind thoughts quoted amp dasherized handler name kind meh would definitely read nicer camelcase usage consistency w props also nice said camelcase handling props necessary since need call code case event handlers would expect event dispatching use dasherized form although dasherized camelcase could probably accepted without conflict general would expect prop event names normalize dasherized form camelcase used conveniencecompatibility javascript", "d": "4/2016"}, {"body": "quoted amp dasherized handler name kind meh readability helps distinguish events methods usually events human readable", "d": "4/2016"}, {"body": "azamatsharapov good point still looks little awkward definitely help distinguish event handlers regular methods", "d": "4/2016"}, {"body": "oppose usage pattern events methods totally different think way confuse wherever use names intentionally", "d": "4/2016"}, {"body": "usually try emphasize difference events methods event nt necessarily carry information needed react example cancel button form within overlay dispatches event call maybe like close overlay user nt intend fill form right mabye form mandatory needs fill aware hundreds ways works separating information actions events next step requested cancel requested resulting orders methods react request xy shifts intent react informational event sth happened method handles", "d": "4/2016"}, {"body": "conclude need keep hyphenated events working suggested camelcase remains unsupported directive another suggestion let bind hypenated form detected difficulty would actually mean different things likely taking risk better worse supporting camelcase", "d": "4/2016"}, {"body": "problem returns first object instead new one", "d": "4/2016"}, {"body": "hmm ca nt really tell much component alone would prefer actual repro", "d": "4/2016"}, {"body": "make proper repro", "d": "4/2016"}, {"body": "fixing bug actually way quicker making repro made pr fixes", "d": "4/2016"}, {"body": "intended breaking changes phantomjs requires nontrivial changes test suite anyone interested feel free try upgrading", "d": "4/2016"}, {"body": "try", "d": "4/2016"}, {"body": "nested nt supported html invalid see template parsing", "d": "4/2016"}, {"body": "closed favor", "d": "4/2016"}, {"body": "hmm actually chrome bug inside created proper namespace works intended firefox suggest open issue chromium meanwhile use instead", "d": "4/2016"}, {"body": "upon investigation nt seem namespace issue still looking", "d": "4/2016"}, {"body": "indeed chrome bug happens inside pointing external url works outside works defs document regardless bug would happen without vue simply append template content body nt render", "d": "4/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks object reactive", "d": "4/2016"}, {"body": "closed", "d": "4/2016"}, {"body": "vue adds event listener element sure vue issue aframe issue since nt happen vanilla vue maybe issue suggest making minimal repro open issue repo", "d": "4/2016"}, {"body": "glad time issue vue well seems far opened issue repo added steps reproduce bug live example", "d": "4/2016"}, {"body": "closed duplicate", "d": "4/2016"}, {"body": "webkit misfortunate feature webkitbased browsers originally implemented older draft backgroundsize omitted second value treated duplicating first value draft include contain cover keywords demo reference", "d": "4/2016"}, {"body": "vue set test prefixed version nonprefixed fix think test nonprefixed version first exception buggy properties like", "d": "4/2016"}, {"body": "using nonprefixed name fix duplicate value issue", "d": "4/2016"}, {"body": "yep works", "d": "4/2016"}, {"body": "simplesmiler ah ok get bitten browser vendors either way oh well yeah let check nonprefixed version first treat sepecial case", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "reproduce working fine sure looking please open tyoe issues webpack template instead core repo", "d": "4/2016"}, {"body": "displays properly would proper link compared", "d": "4/2016"}, {"body": "need use router history mode get rid hash", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "update managed get working modifying first variant like guess issue closed sure sane way update", "d": "4/2016"}, {"body": "nt understand get complex update view state sounds like design problem view state things properly matter shoving new objectarray fetched server", "d": "4/2016"}, {"body": "sorry nt understand using slot instead partial option sweatsmile reason", "d": "4/2016"}, {"body": "using slots pseudoderived promptdialog would following template every attribute foo original dialog component would need attribute outer promptdialog pass inner goes methods defined dialog need define proxies pass call inner bothersome defeats idea behind component extensionclass inheritance", "d": "4/2016"}, {"body": "say abusing partials bad idea partial snippets parent aware data context child tight decoupling dialog component hold state purely presentational pass state state displayed content belong parent component uses dialog", "d": "4/2016"}, {"body": "working intended object", "d": "4/2016"}, {"body": "deep object key changes method get changed key name value parent object nt need whole object thanks", "d": "4/2016"}, {"body": "murphymeng may want clone original object compare clone modified object callback also please direct questions gitter forum thanks", "d": "4/2016"}, {"body": "murphymeng would avoid using favor unidirectional data flow use immutable data useful library called objectpathimmutable whenever watch triggered run comparison figure changed nt", "d": "4/2016"}, {"body": "sure see benefit following achieve", "d": "4/2016"}, {"body": "think refs nt work expressions unsure one clear benefit would n handling", "d": "4/2016"}, {"body": "see working slightly different syntax exploration needed", "d": "4/2016"}, {"body": "think would solve would minimize need good currently think would great nt see benefit object syntax maybe shorthand", "d": "4/2016"}, {"body": "paulpflug problem directives take expression nt look much better", "d": "4/2016"}, {"body": "think better use dispatch broadcast", "d": "4/2016"}, {"body": "broadcast ca nt control comp receive signal say common signal like use multiple components user space sidebyside mess smile actual current intent make opening closing component easy possible example sidenav modal dropdown one page controlled one buttons aside logic controlling actual content much single page think would best get trivial openclosing things done little effort possible worked ways work signals verbose let component hook click element limited hidden user work twoway bind prop verbose nt like think need opposite sure solve many unknown problems well", "d": "4/2016"}, {"body": "say common signal like open close use multiple components user space sidebyside mess smile use signal never use twice knew modal dropdown sidenav rather specify minimize ambiguity powerful simple enough use cases missing something apart see could useful complicated situations could already built custom directive right", "d": "4/2016"}, {"body": "could already built custom directive right tradeoffs possible custom directive paulpflug problem directives take expression vemit toggleliteral togglecomp nt look much better vemit togglecomp toggle could simply made valid expression emit broadcast dispatch powerful simple enough use cases sure work jquery think good argument question would better status quo want simple clear syntax possible personally avoid even wherever rare edge cases fine liking verbose error prone components props one hand great great job smile", "d": "4/2016"}, {"body": "paulpflug nt think shortcuts happening least one goals keep surface api simple cohesive", "d": "4/2016"}, {"body": "read discussion say definitely nt belong core app gets complex recommended approach centralized state management eg vuex rather overloading custom event system", "d": "4/2016"}, {"body": "hi working intended replace new array work smile", "d": "4/2016"}, {"body": "solution better way", "d": "4/2016"}, {"body": "trying bind click handler string example string reference method one way around following html click", "d": "4/2016"}, {"body": "thedutchcoder thanks answer", "d": "4/2016"}, {"body": "hey actually limitation vue detect property deletion reactive object instead using mentioned vue api case would something like", "d": "4/2016"}, {"body": "yes exactly wanted tried vuedelete method earlier guess missed putting try everything works perfectly tqvm fadymak", "d": "4/2016"}, {"body": "hi please make sure sure ask question forums gitter chat get faster feedback try questions issues smile question sure understand point would ignore component maybe use vpre directive", "d": "4/2016"}, {"body": "adding element solve issue", "d": "4/2016"}, {"body": "thank much posva made day", "d": "4/2016"}, {"body": "wait forget mention something also need keep directives working since extended element would like use directives like vmodel disables everything", "d": "4/2016"}, {"body": "saidahemtnolaroads indeed problem fixed attribute nt resolve vue component preserved", "d": "4/2016"}, {"body": "think adding edge cases like really worth since already workarounds bad note", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "nt see one sorry thanks lot", "d": "4/2016"}, {"body": "taking look sure bug", "d": "4/2016"}, {"body": "ok confirmed happens though works thanks bug submission smile jsfiddle edit webpackbin", "d": "4/2016"}, {"body": "seems exact opposite templates", "d": "4/2016"}, {"body": "thattomperson nt work design working intended", "d": "4/2016"}, {"body": "ah ok replace div hope designer nt notice", "d": "4/2016"}, {"body": "nt connected nt natively translate traditional programmatical logic", "d": "4/2016"}, {"body": "blakenewman hides instead removing turns handy definitely reads better", "d": "4/2016"}, {"body": "btw nt forgot issue could nt allocate enough time past two weeks find time weekend sure", "d": "4/2016"}, {"body": "posva understand internals question mind vshow combined velse one issue velse currently terminable means logic behind velse works completely differ based prefixing directive believe opinion would confusing happents would velse applied weird case valid available single element", "d": "4/2016"}, {"body": "vshow would apply guess sure use case thought think replaced let vif work sure would solve real problem recall clearly deal directives priorities applied components component directive given priority", "d": "4/2016"}, {"body": "understand tempting get work think first felt bit counterintuitive would look also agree framework nt changed accommodate behaviour", "d": "4/2016"}, {"body": "posva targeting may also issues case nt want want velse applied vif lot complexity involved internally could done easily user land", "d": "4/2016"}, {"body": "would need use", "d": "4/2016"}, {"body": "scenario nt want code evaluate using terminable time want show hide without removing instance think confusing logical directive available two directives", "d": "4/2016"}, {"body": "case use bind meant content toggling trigger transitions", "d": "4/2016"}, {"body": "nt see could fix blakenewman described agree used content toggling one works one nt makes sense framework behaves like", "d": "4/2016"}, {"body": "ruiposse toggles element html", "d": "4/2016"}, {"body": "course use nt along", "d": "4/2016"}, {"body": "might understood blakenewman said nt understand trying say sorry add end change computed property something else trying show achieve affecting although nt even know bug atm", "d": "4/2016"}, {"body": "trying say noted trying mimic js logic templates nt generally good idea dropped trying add logic templates exist simple possible making work may cause unnecessary confusion especially scanning templates default try spot matching makes contextual sense achievable user land simple negate avoid adding vue necessary expression logic templates simple simple adding expression expression complex really handled js", "d": "4/2016"}, {"body": "mimicking js logic otherwise making vshow vhide work velse nt exist sure point already supposed work nt work components bug simple negate duplicates expression multiple places nt good drop support also nt understand happened ruiposse really think misunderstood talking talking supporting alongside blakenewman brought used subject explain shortly trying say anything deal original bug please", "d": "4/2016"}, {"body": "conditional statement styled directive programmatically bound languages hand relevance language expectations looking template could misleading seems like anti pattern extend work real need achieve easily negating expression view alot declarative implementing suggested complicate internals vue deal use case fully achievable user land mdn else spec", "d": "4/2016"}, {"body": "original bug looking webpackbin provided expecting work nt think something framework support blakenewman literally saying thing opinion nt work nt really know much clear", "d": "4/2016"}, {"body": "original bug looking webpackbin provided expecting velse work vshow nt think something framework support introduce breaking change", "d": "4/2016"}, {"body": "seems compatibility works quite well edge windows breaks chrome also breaks firefox open suse leap", "d": "4/2016"}, {"body": "setting value inside watcher always bad idea say easiest way deal simply using trying control value anyway", "d": "4/2016"}, {"body": "wo nt work case supported since", "d": "4/2016"}, {"body": "need skip observation objectarray use nt need put object order access simply attach hook nt get observed", "d": "4/2016"}, {"body": "nt work cache updated time main resource reactive mostly interested making nested cache object nonreactive", "d": "4/2016"}, {"body": "maybe time rethink model design nest things something observed", "d": "4/2016"}, {"body": "cache used dynamically lookup related resources eg could models author model defines tomany relationship called post model cache contains relationship data well related collection calling authorposts gets posts cache", "d": "4/2016"}, {"body": "design vue discourages putting complex objects statemutating mechanism vue instance putting pure state observed data vue instances may manipulate state anyway want objects responsible manipulations part vue instance state", "d": "4/2016"}, {"body": "first clarifying question exactly mean pure state two types state model state permanent data synchronized store eg todo vue state temporary data controls view behavior eg collapseshow todo list anyway fair model definitely complex request goes current best practices also initial example nt good worked disable observation representative current setup w possible usage js import post componentspost import author componentsauthor import comments componentscomments post template props post data gt collapsed false new vue el body data instance poststorefetch include author commentsauthor vuenonreactive instancecache basically parent vue responsible placing reusable components layout fetchingbinding data associated components child components nt fetch data data different different contexts eg list user comments vs list post comments model fairly dumb exception related objects nested instead looked cache eg may exact object instead multiple copies author object one looked cache nt mutation data made initial fetch also request relevant alternative might observe private object members could members leading single maybe double underscore downside approach would breaking change", "d": "4/2016"}, {"body": "anyone ends needing functionality released vuenonreactive appropriate admonitions everything", "d": "4/2016"}, {"body": "rpkilby thanks sharing", "d": "4/2016"}, {"body": "hello twoway style props binding types especially allows child change value propagate change parent oneway style custom events ed child picked parent please note issue tracker bugs feature requests questions support gitter chat forum find help quicker", "d": "4/2016"}, {"body": "bad though feature yet referenced components props would feature request", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "\u4e0d\u652f\u6301", "d": "4/2016"}, {"body": "think forcing transition case nt quite make sense component really change really trying achieve dynamically switching content transitions rather components probably come new mechanism specifically deal scenario meanwhile somewhat simulate single item", "d": "4/2016"}, {"body": "think bug create constructor extending also wrote instances created vue compilation every occurrence template based eyes makes sense select instance constructor n relation", "d": "4/2016"}, {"body": "paulpflug instance property pass components directly parameter components different transition apply think work pass component names parameters works intended see note updated reproduction clarify", "d": "4/2016"}, {"body": "understand problem passing component directly comp constructor vue block allowed use constructor multiple times components comp comp think could also components obj obj point way identify component name reason transition triggered component stays place whole time", "d": "4/2016"}, {"body": "problem actually calling object returns cached constructor actually object similar described add dedicated mechanism type transitions", "d": "4/2016"}, {"body": "ok thanks evan", "d": "4/2016"}, {"body": "feature cool err works like think would kind abuse according piece considered rather really need refer issue warning info idea appears ca nt figure duplication fiddle update got warning comes retrieve data children objects works like got two duplicated", "d": "4/2016"}, {"body": "think proposals would good enhancement", "d": "4/2016"}, {"body": "twiknight duplication happens identifier used key excerpt code see derived using results results propose following key path valid look nt heard", "d": "4/2016"}, {"body": "dragantl think mistook proposal thought trying make comparer got totally agree btw mentioned generic feature referring certain directive", "d": "4/2016"}, {"body": "makes sense welcome pr anyone wants take crack", "d": "4/2016"}, {"body": "make pr", "d": "4/2016"}, {"body": "dragantl oops working thanks offer tho", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "intended simply uses existing element component removed remove component", "d": "4/2016"}, {"body": "suggest alternative using approach mount dynamic components onto body modal know components ahead time include use dynamic switching preserve mounting point", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "nt dispatch native events use watcher watch bound value instead", "d": "4/2016"}, {"body": "case somebody facing issue workaround add plugins one", "d": "4/2016"}, {"body": "hi nt seem clear issue mentioning seems issue webpack configuration opposed vue issue", "d": "4/2016"}, {"body": "fadymak looked really strange vuejs nt work webpack right box even normal behaviour think mention webpackspecific thing somewhere readme doc think would way better make little check environment since vuecommonjs used browser well", "d": "4/2016"}, {"body": "think unintentionally chose wrong version vue use development version see thing needed get overview available versions differences", "d": "4/2016"}, {"body": "nirazul quite disappointing possible use wrong version lib without realizing seemed pretty obvious everything work like butter", "d": "4/2016"}, {"body": "webpack automatically shim unless explicitly tell browserify using webpack beta might cause different behavior", "d": "4/2016"}, {"body": "nope running thanks reply pointed real cause problem webpack indeed shims variable us automagically changed everything worked expected turned vue issue", "d": "4/2016"}, {"body": "please provide full reproduction template nt help also try upgrading", "d": "4/2016"}, {"body": "problem update vue test works fine", "d": "4/2016"}, {"body": "horans try adding proper elements default list items tracked identity identity changes corresponding element destroyed created thus losing focus", "d": "4/2016"}, {"body": "problem occurs works fined dalphyx mentioned update narrowed problem push object initialized push rather pushed empty object initialized", "d": "4/2016"}, {"body": "different events stopping nt affect propagating use inner button", "d": "4/2016"}, {"body": "dblclick click different events thanks precision use clickstop inner button wanted simple double click element simple click select double click open like google drive folder document use custom method", "d": "4/2016"}, {"body": "duplicate please see discussionsolution", "d": "4/2016"}, {"body": "give correct use example", "d": "4/2016"}, {"body": "well see", "d": "4/2016"}, {"body": "provide full runnable reproduction", "d": "4/2016"}, {"body": "ca nt upload zip file", "d": "4/2016"}, {"body": "reproduction actually means runnable code snippet jsfiddlecodepen etc bare minimum code makes bug happen excerpt production code", "d": "4/2016"}, {"body": "sorry problem resoved yet caused vue thank", "d": "4/2016"}, {"body": "use", "d": "4/2016"}, {"body": "thank remove set undefined effects keyword also effect", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "components generated reactive array easy make change way check item show item component list fiddle hope would help btw nt think necessary make reactive think data reactive", "d": "4/2016"}, {"body": "twiknight right components data thus nt reactive vue reactivity simply nt work way dom events case", "d": "4/2016"}, {"body": "standard behaviour please see explaination list rendering syntax similar angular resolve", "d": "4/2016"}, {"body": "thanks clarification link", "d": "4/2016"}, {"body": "reproduce fiddle likely syntax error template please make sure open issue sure bug reliably reproduce issue", "d": "4/2016"}, {"body": "hey believe issue occurring tracking id toggling visibility based index array gets shuffled suggest tracking another property changing way computed created another fiddle see mean jsfiddle demo also note opacity changed going go ahead close however feel nt actually solve issue please feel free reopen issue take deeper look", "d": "4/2016"}, {"body": "set null false", "d": "4/2016"}, {"body": "\u8b66\u544a\u7684\u610f\u601d\u662f\u5efa\u8bae\u4f60\u5728\u7ec4\u4ef6\u7684 data", "d": "4/2016"}, {"body": "think solution fine resolving filters using string ids expressions inconsistent confusing nt know look", "d": "4/2016"}, {"body": "also improve fetching filter instead global", "d": "4/2016"}, {"body": "method computed property calls seen freeze safari", "d": "4/2016"}, {"body": "hey thanks reply case basically structure like html var app new vue el app data step components template methods nextstep function consolelog gostep gostep template step var gostep function step appstep step issue element handler pressed random freeze occurs tried debug good possible however see output believe loop actually called", "d": "4/2016"}, {"body": "ok order give help need provide minimal reproduction jsfiddle smile", "d": "4/2016"}, {"body": "try currently iphone ios testing issue appear yet seen iphone plus ios probably wait till next week get hands testing", "d": "4/2016"}, {"body": "seems like able fix likely completely unrelated vue element click handler anchorelement like freeze happen changing element one two ways either make buttonelement add hrefattribute html next step next step listeners would probably like blame safari still ca nt say sure reproducible situations jsfiddle interestingly removed optional unrelated jslibrary freeze happened different step confused anyway hope may help someone experiences similar issues", "d": "4/2016"}, {"body": "perhaps needed modifier prevent default behaviour link", "d": "4/2016"}, {"body": "remember correctly try well without influence would also expect affect much devicesbrowsers sweatsmile", "d": "4/2016"}, {"body": "\u8fd9\u663e\u7136\u662f\u65e7 android \u6216\u8005\u662f\u6253\u5305\u73af\u5883\u7684\u95ee\u9898 vshow", "d": "4/2016"}, {"body": "vmodel val \u5728\u54ea\u4e2a\u5b89\u5353\u7248\u672c\u4e0b ajax\u67e5\u8be2\u5bf9\u7684\u5c5e\u6027\u8fdb\u884c\u8d4b\u503c\u65f6", "d": "4/2016"}, {"body": "\u6211\u611f\u89c9\u8fd9\u4e2a\u4e0d\u5c5e\u4e8e\u5728 vue", "d": "4/2016"}, {"body": "looks like unintentional breaking change nt think behavior ever documented workaround move default coerce function pinpointing commit change happened edit commit question", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "landed", "d": "4/2016"}, {"body": "problem want number prop passing static value always get string case casting value seems normal let hear people think smile", "d": "4/2016"}, {"body": "airyland hello guess hard time updating app latest version want code work may question habit opinion autoconverting props bit excessive least ways solving problem adding colon attribute using custom filter coerce function nt think adding extra layer magic good idea plus new edge cases plus affect performance", "d": "4/2016"}, {"body": "fullfs nt think feature adds magic layer user specifying prop type number actually expects component receive number nt binding variable prop value passed always string", "d": "4/2016"}, {"body": "posva static attributes always treated strings nice clear need number nt want bind property use colon treated expression converted number goes booleans nice explicit hard use colon need number", "d": "4/2016"}, {"body": "posva also would breaking change someone may intentionally pass number via static attribute want string concatenation", "d": "4/2016"}, {"body": "fullfs user already specifying prop vue even fires warning would also adde make type work", "d": "4/2016"}, {"body": "posva well type option supposed convert values validtion type words prop requirement see could compared variable types typed languages like javac even typescript another example jsdoccomments methods define param types function awaits receive function could work properly passed incorrect type purpose raises warning try pass incorrect prop type meaning something going wrong expecting", "d": "4/2016"}, {"body": "posva btw sorry rude nt mean offence bad habit mine heavily defend opinion", "d": "4/2016"}, {"body": "feature nt get implemented least explicit warning type defined nt match value passed static", "d": "4/2016"}, {"body": "fullfs np used comments know nice guy smile plus rude defending point normal way", "d": "4/2016"}, {"body": "posva ok thanks way got warning actually", "d": "4/2016"}, {"body": "fullfs yes thinking specific warning tell use btw static value optimise binding get binded like modifier", "d": "4/2016"}, {"body": "posva bound add warning specific case original issue working intended", "d": "4/2016"}, {"body": "nt see reference docs smile", "d": "4/2016"}, {"body": "let guess call focus like", "d": "4/2016"}, {"body": "weilao yeahlike u sayi solve itthx", "d": "4/2016"}, {"body": "forme struggled focus past written module helps common focus use cases particular use case would put input", "d": "4/2016"}, {"body": "fix distribution get project", "d": "4/2016"}, {"body": "jeffmarshall dev build", "d": "4/2016"}, {"body": "ok thanks", "d": "4/2016"}, {"body": "loops vfor mess order know iterate group things", "d": "4/2016"}, {"body": "true doh implemented plan keep functionality closing vuejscollaborators reopen change plan", "d": "4/2016"}, {"body": "nice multiple fields sorted latest version go mean multiple fields multiple sort order like maybe change thank love vuejs", "d": "4/2016"}, {"body": "new vuejs user came across limitation straight away trying build nested components concrete example accordion element accordion element usually made heading content area clicking heading toggle display content something fun easy program vue heading usually simple often containing text possibly icon indicate visually whether accordion opened closed content however contain large sections text subheadings images blocklevel elements plain html accordion might structured simply intended result like html look like end html accordion lorem ipsum dolor sit amet consectetuer adipiscing elit javascript usually added make heading work toggle showing hiding content area like able vue define accordions html like intended usage like code accordion html markup defining heading content elements vue components quite straightforward could like already implements fontawesome icon heading keeps track whether content openvisible js vuecomponent heading template props icon vuecomponent content template props open type boolean default false combine accordion component heading content components particular context accordion define inside accordion component use template accordion problem content parsed vue therefore declared components may nt get used vue simply plonk content html tag dom without looking using markup code intended usage component defined like get html accordion lorem ipsum dolor sit amet consectetuer aqipiscing elit end unrecognisable pseudohtml elements page imagine wo nt trigger functionality might defined subelements either problems html elements inside apart different order would plonked original markup could cause us kinds layout problems workaround try use named slots accordion suggested vue documentation like js vuecomponent accordion component definition heading content go means would longer able use elements directly html rather use normal elements place via slot attributes like note far departure intended usage also longer using heading content element directly move props parent accordion element syntax wanted less modular also produce html overly nested convoluted html accordion lorem ipsum dolor sit amet consectetuer aqipiscing elit end would simpler use subcomponents define whole thing single accordion component single template course means vue actually promoting embedded solutions rather modular ones heading element instance could useful also several contexts ie modals alert boxes view panels etc lastly problem gets compounded even think given page hardly ever using single accordion often several list instances might want coordinate open status accordion open given time vue already great eventmanagement system allows us bubble updown propagate messages well propbinding would allow us easily communicate changes parentchildrengrandchildren pointed paulpflug handling situations subcomponents involved together either convoluted impossible shown specially newbie like currently stands seems possible use vue components slots enable users use code appears intended usage produce html intended result also seems vue unable analyse parse content usefulness subelements limited usecases either subelement present parent subelement contents passed entirely props understand correctly proposed solutions far fall broadly categories fully parse analyse content elements looking possible embedded components implementing logic along way define new type would mark existence subelement innerhtml would look ie template accordion using slot could look something like would search element finds element would insert position would component could also named default slots along component slots like great solution elegant simple enough even newbies understand case heading content components found would placed component slots remainder content element attribute would placed named slot remaining elements would placed default slot note default slot would placed content component also present would indeed give us intended result intended usage code well making incredibly easier nest modular components ad infinitum newbie overview hope misquoting misunderstanding anyone hopefully might find plain english explanation useful last please keep good work vue awesome", "d": "4/2016"}, {"body": "luxlogica problem content parsed vue therefore declared components may nt get used actually vue acting intended problem attaching components using main scope instead scope js fiddle demo", "d": "4/2016"}, {"body": "prograjkamal thank headsup however still ideal solution nt discriminate filter put case wanted make sure thing gets put heading slot heading component content content slot instance accepted using simple named slots sometimes behaviour accepting anything functionality needed indeed usually composing complex nested components want opposite able specific typetag subcomponent goes slot usecases would better able refer component typetag name already identifying subcomponent tag need slot attribute markup making cleaner succinct coding", "d": "4/2016"}, {"body": "want restrict acceptable slot single component might well define code course allow set attributes effectively require right think way programmatic slot api lands vue would able access slots throw errorswarnings incorrect usage would like see suggestion implemented plugin vue core", "d": "4/2016"}, {"body": "thank suggestion look code proposed original comment one solutions came one reduces modularity produces convoluted html end imho kind functionality essential easily composing nested views even basic complexity shown definitely part core detailed programmatic api would extremely useful advanced programmers wanting push boundaries library functionality described basic achieving easy even newcomers", "d": "4/2016"}, {"body": "reason nt want functionality core general enough practically actually want validate html fragment passed slots suggestion however considers one specific case ie passed html fragment must root node specific type user wants allow types tags disallow certain set tags sure validation rules possible slots surely cases considered well talking vue core", "d": "4/2016"}, {"body": "ah see point indeed thinking much narrower usecase want cover usecases could perhaps implement selector directive takes css selector like selector slot html however filtering content done key analyse content placed slot looking possible components need resolved context parent suspect issue may may computationally expensive hence suggestion separate component slot type slot directive already tells vue looking element component analysed component slot html selector slots would simply plonked slot location like named slots component slots would actually inserted analysed run context parent would allow vue know computation needed rather analyse everything order cover every possible usecase need establish order operation slots order slot operations resolve component slots remove passed content resolve selector slots remove remaining content place leftover content default slot would enable essentially wide range selecting filtering slots using simple declarative syntax would cover vast majority use cases without need newbie learn api", "d": "4/2016"}, {"body": "luxlogica think hijacked issue would better create separate issue feature", "d": "4/2016"}, {"body": "think luxlogica proposal close thing reusable components selector pattern take children bad within component probably hidden user would prefer stick parameter html vs usage vs verbosity case worth must assumed user nt know thing hand selectors provide functionality honestly nt encountered case clever nesting components nt solve problem", "d": "4/2016"}, {"body": "paulpflug idea enduser exactly usage proposed total agreement enable developer author complex nested elements allowing simplest possible syntax enduser like proposal aims allow enduser html however prograjkamal pointed quite rightly lot usecases go beyond example nt thought initially idea use css selectors came solution cover wider range usecases probably futureproof suggestions differ humbly suggest use name component slots rather plugin slots seems semantically correct inserting plugins something else vue world inserting previously defined components use css selectors component slots rather merely component names creation selector slots would basically substitute current named slots would also use css selectors making unnecessary enduser need know component implemented type slots used enduser needs know compose element html code using custom tags created components exactly like example using accordion example usage implementation would like html accordion lorem ipsum dolor sit amet would make easier developer enduser", "d": "4/2016"}, {"body": "\u5e0c\u671b\u80fd\u591f\u5728\u6587\u6863\u91cc\u5f15\u7528\u4e00\u4e0b eveluty", "d": "4/2016"}, {"body": "classicoldsong \u5e94\u8be5\u662f\u5728\u4e0d\u652f\u6301 raf \u7684\u65e7\u6d4f\u89c8\u5668\u5427 \u8fd9\u4e2a\u771f\u6ca1\u529e\u6cd5", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "classicoldsong \u8fd9 \u90a3\u4fdd\u9669\u8d77\u89c1\u53ea\u80fd\u7528 \u5927\u6cd5\u4e86", "d": "4/2016"}, {"body": "duplicate wenliangcan could use something like html key val function", "d": "4/2016"}, {"body": "thank works support one placeholder works first exemple one", "d": "4/2016"}, {"body": "\u5927\u5927 \u4f60\u4e0a\u9762\u7684\u56de\u590d\u662f\u4ec0\u4e48\u610f\u601d", "d": "4/2016"}, {"body": "found another use case singleton component example overlay used behind dialogs modals singleton pattern allows way better handling zindex click events dealing multiple instances current implementation activate overlay calling component needs ref would prefer cleaner solution see easy way adding singleton components vue", "d": "4/2016"}, {"body": "another convincing usecase singleton component made mixin workaround getvue usage look something like would love get around stuff user", "d": "4/2016"}, {"body": "think reconsidered", "d": "4/2016"}, {"body": "check mentioned actually work need treat external bundling component", "d": "4/2016"}, {"body": "nonono stick mixin solution others unreliable error prone point api change others also need instance create issues future solutions unreliable error prone smile", "d": "4/2016"}, {"body": "suggested unreliable", "d": "4/2016"}, {"body": "imagine dependency tree myproject vue mycomponent vue give different versions myproject mycomponent could difficult debug especially maintainer idea tree happens regularly using also stumbled upon components list direct dependency avoided adding webpack config project clearly prefer mixin", "d": "4/2016"}, {"body": "paulpflug believe component specifies npm least never install vue component even version conflict", "d": "4/2016"}, {"body": "sure thing emphasis seen components vue direct dependency already easy fix yes difficult debug error warning accidentally use wrong vue instance wo nt work speak regarding often use repositories installed ignored always deliver different instances avoid completely issue severe like ca nt live without fixing might source annoying mistakes future see could close would smile", "d": "4/2016"}, {"body": "would happy continues tighten scope especially useful native drawer menues route vue maybe integrating native views top vue performance really needed performance vue mobile client already really good tried reactnative find little overkill", "d": "4/2016"}, {"body": "eljefedelrodeodeljefe weex coming", "d": "4/2016"}, {"body": "qusiba thx link", "d": "4/2016"}, {"body": "qusiba signed nothing happened long wait get access scott", "d": "4/2016"}, {"body": "smolinari thx signing member team invite private github permission soon", "d": "4/2016"}, {"body": "jinjiang define soon bit better talking days weeks months smile scott", "d": "4/2016"}, {"body": "jinjiang subscribed mailing list could access smile", "d": "4/2016"}, {"body": "jinjiang please", "d": "4/2016"}, {"body": "smolinari days", "d": "4/2016"}, {"body": "jinjiang could add private beta please thanks", "d": "4/2016"}, {"body": "jpokrzyk simply sign newsletter scott", "d": "4/2016"}, {"body": "done jpokrzyk smolinari", "d": "4/2016"}, {"body": "jinjiang gents alibaba helping evan vue really cool stuff smile edit looking docs cool weex also open source released please please please say yes smile scott", "d": "4/2016"}, {"body": "weex public maybe end june keep watching", "d": "4/2016"}, {"body": "jinjiang going assume public also means open sourced applaud clap smile scott", "d": "4/2016"}, {"body": "jinjiang dumb question nt put native headline copy framework building native mobile crossplatform ui thanks ferry", "d": "4/2016"}, {"body": "also could nt find word vue anywhere first thing searching word vue opened page thought maybe nt use vuejs source style evan post vuejs thinking weex give credit vue page", "d": "4/2016"}, {"body": "look code examples uses vue extensively smile scott", "d": "4/2016"}, {"body": "yes even branch vue think talking weex site reference vue think site really provisory dramatically changed weex get published hope includes vuejs references", "d": "4/2016"}, {"body": "agree dynamic vref could really useful example multiple instances component want track one call method unique id assigned component required prop used consumer easily fetch without hunt tree eg built pagination component accepts prop would nice consumer could something like", "d": "4/2016"}, {"body": "sorry nt see example related said", "d": "4/2016"}, {"body": "well probably misunderstood sorry", "d": "4/2016"}, {"body": "posva seems like date transform datedatetime input types would useful however interested able register transforms eg momentjs transform instead potentially built date transform json transform", "d": "4/2016"}, {"body": "rpkilby think two way filters work pretty well guide actually talk maybe explicit example showing docs help nt think modifier needed two way filters already address issue", "d": "4/2016"}, {"body": "posva yes currently guess problem vague want emphasize minor dissatisfactions api dealing various data types thoughts nt really formed anything cohesive boolean values array selection handled magically inputs fair kind necessary number values handled magically inputs require paramater data type requires twoway filter result leaves us given checkbox magical behavior understandable someone would expect number would magical behavior well forgetting add parameter easy source bugs get special treatment anyway replaced filter filters seem like used value transformations request type transformation also nt like idea polluting filter namespace type transformation filters form context nt make much sense least great vue global componentlocal registration nt really issue example edit regardless opinions think would good add section two way filters form docs way handling type conversion also really want reemphasize minor consistencyapi nitpicks vue huge boon existing form bindings work one downside proposal would overlap twoway filters vmodel type transforms apparently like bulleted lists", "d": "4/2016"}, {"body": "rpkilby nice analysis writeup agreed things inconsistent", "d": "4/2016"}, {"body": "rpkilby thanks thoughtful input definitely improve", "d": "4/2016"}, {"body": "issue records cost almost render would great way render without data binding make sense", "d": "4/2016"}, {"body": "kennedytedesco records nt sound right assume nested template look like", "d": "4/2016"}, {"body": "sorry mistake happiness problem nt vue", "d": "4/2016"}, {"body": "transition could play nicely state changes vuex", "d": "4/2016"}, {"body": "discussion vuejscollaborators decided feature implemented considered bad practise thus implementation considered bad practise reasons non implementation exploits bad practices vueassign become unpredictable browsers interpret order keys properties differently thus causing unpredictable results wanted property set prior another guaranteed object structure declared documentation says", "d": "4/2016"}, {"body": "believe semicolons makes code readable especially developers accustomed programming languages php java cc furtherless even semicolons needed engine use feature called semicolon insertion engine recognizes semicolon needed automatically adds still needed final code automatically inserted missing add place emca specs script module parsed left right token called offending token encountered allowed production grammar semicolon automatically inserted offending token one following conditions true sounds like missing semicolon corrected automatically inserted normal script semicolon needed written unneeded semicolons removed sure due personal developer experience nt see even use daily project nosemicolon style guideline still tend look next line see going course since engine allows anybody use whichever style prefer kind regards oh forgot", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "thanks already read course many similar posts people also like insult offering pov th matter examining word word emca specs reason tend use semicolons declaring variables beginning function engine automatically hoist declaration code clear putting end interpreted semicolon needed automatically inserted var declared declaration automatically hoisted final interpreted code missing place hoisted declarations called asi asr r emoval unnecessary valid final statement asi way around reason js developers tell put var declarations top reflect final code interpretation also tell avoid semicolons one case tell rely automation case tell since js allows forms something like psr javascript would good least eyesbrain adjust coding style switching form project another outside scope discussion fun believe asi leads uncertainty always hated statement behaviour js developer decide statement ends hey way one final note kidding kind regards thank much vuejs", "d": "4/2016"}, {"body": "whole point readability subjective neither approach technically superior correct simply point complaining whether people code uses", "d": "4/2016"}, {"body": "agree complaining maybe nt clear fun expressing point view reason prefer omitting semicolons move declarations top common style guideline among developers could useful php standard group useful te community write php code many ways opening different frameworks code seeing style helpful saves time", "d": "4/2016"}, {"body": "personal experience liked using semi come cc background trying semi style found faster code readable", "d": "4/2016"}, {"body": "posva still prefer using says matter personal preference wanted say emca specs states certain js statements must end semicolon add interpreter add evaluation valid js statements allowed write code way js asi transform valid statements specs says removed previous expressions needed automatically added missing quoting emca certain ecmascript statements must terminated semicolons semicolons may always appear explicitly source text convenience however semicolons may omitted source text certain situations situations described saying semicolons automatically inserted source code token stream situations may things way comfortable quoting circumstance assignment statement must begin left parenthesis good idea programmer provide explicit semicolon end preceding statement rather rely automatic semicolon insertion quoting specs end preciding statement must many projects adds beginning next statement fine always use technique combining many scripts one fine reading code relying asi many big projects using feels natural add code programming language use provide asi start omitting rule js sure sooner later forget phpc even multiple sql query kind regards", "d": "4/2016"}, {"body": "guess avoid using python nt support well philosophies conventions enforced language designers cjs developers would prefer semicolons pythonjs developers would prefer semicolons since specs allow styles matter preference", "d": "4/2016"}, {"body": "fnlctrl nope misunderstood saying whatever prefer stated simple things personal preference reasons behind quoting emca specs never said anyone find line correct intended thing complaining general topic nothing project community fact js developers tells put declaration top engine put clear time tell avoid even engine adds believe either advice use forbid allow people choose advice use one use reason behind writing code closer interpreted nobody feel sorry right others using semicolons way nobody feel sorry right using pls let stop nt want silly thing turn religious struggle spaghetti vs fettuccine explained like fettuccine well like spaghetti well telling eat fettuccine avoid spaghetti", "d": "4/2016"}, {"body": "interested conversation nt think belongs feel free discuss semicolons elsewhere", "d": "4/2016"}, {"body": "need additional attributes options like data selected etc smile", "d": "4/2016"}, {"body": "use guess could nt past acted funky ca nt remember yeah", "d": "4/2016"}, {"body": "detailed component scoping section basically iterated loop would undefined parent scope making error think", "d": "4/2016"}, {"body": "\u6211\u4e5f\u5728\u505a\u7c7b\u4f3c\u7684\u9700\u6c42 \u8bf7\u95eenexttick \u662f\u53ea\u5728\u8d4b\u503c\u540e\u8c03\u7528 \u90a3\u4e48\u6211\u73b0\u5728\u628a\u6570\u636e\u653e\u5728 vuex\u91cc\u9762\u4e86 \u518d\u5728\u9875\u9762\u5207\u6362\u4e4b\u540eiscroll\u7684\u7ed1\u5b9a\u5c31\u5931\u6548\u4e86 \u6682\u65f6\u7528\u7684 dafrok \u7684\u65b9\u5f0f settimeout \u8bf7\u95ee\u6700\u4f73\u5b9e\u8df5\u662f\u5982\u4f55\u554a", "d": "4/2016"}, {"body": "miaotaizi \u7406\u8bba\u4e0anexttick\u4f1a\u5e2e\u4f60\u5224\u65ad\u4f60\u7684\u573a\u666f\u662f\u5426\u9700\u8981settimeout", "d": "4/2016"}, {"body": "hello using came across issue something else related", "d": "4/2016"}, {"body": "make example want load jquery javascript libs require jquery work load javascript libs maybe compatible requirejs mean javasript lib use like import javascript lib pure lib frontend searched whole morning issue still find right answer think everyone need", "d": "4/2016"}, {"body": "vinhtq question unrelated vue read using jquery requirejs also always resort including accessing global make sure include files proper order according dependencies", "d": "4/2016"}, {"body": "also worth noting examples case sensitive search ea vs ea mean difference accounting treat eastern means searching ea might cause filteredgameslength return even though result like easteregg hunt edit solved issue changing gamename searchquery tolowercase regardless user types results accounted", "d": "4/2016"}, {"body": "router", "d": "4/2016"}, {"body": "anybody else stumbles across approach integrating datatables looks like create simple datatables component creates datatables instance component dom provide model via props object used initialize datatables instance configure model via props provide component prop used provide array datatables instance use watch property reload table needed via props provide writable object component status information written component rows selected one row selected multiple rows selected etc nt hard accomplish tends enough trick cases", "d": "4/2016"}, {"body": "davidkhess post example code help issue", "d": "4/2016"}, {"body": "dependencies lodash personal design decisions get idea vuecomponent datatables props options status data template ready function var self", "d": "4/2016"}, {"body": "closing", "d": "4/2016"}, {"body": "looks like made", "d": "4/2016"}, {"body": "von change onchange", "d": "4/2016"}, {"body": "would welcome feature attribute html specification starts data prefix valid ide also complain nt like warnings code simple demo latest intellij idea", "d": "4/2016"}, {"body": "anyone explain one loop used use srcxxxx without getting error case error occur nested loops error purl error nested loop purl data used", "d": "4/2016"}, {"body": "raywill explained use", "d": "4/2016"}, {"title": "routernavigate generated locationhash regression", "body": "change decodes fragment decoded value goes makes url effectively malformed quick test explain problem results", "num": "4025", "d": "4/2016"}, {"title": "access play download video dailymotion android", "body": "want show list video daily motion android app also show download button download specific video", "num": "4023", "d": "4/2016"}, {"title": "latest progress backbone", "body": "latest progress backbone", "num": "4022", "d": "4/2016"}, {"title": "reception spi using processing language raspberrypi", "body": "trying transmit receive data spi using processing language raspberrypi able transfer messages able find correct commands execute reception also able find documentation example code available site please help issue", "num": "4021", "d": "4/2016"}, {"title": "eslint stuck version", "body": "eslint still version would like upgrade also forgive selfpromotion written eslint plugin platinumazureeslintpluginqunit help detect potentially bad patterns qunit tests interested write pull request showing could work obviously minor things compared enduserfacing bugfixes enhancements features always useful able enforce code quality automatically less time needs invested quality per pull request happy write prs one needed let know", "num": "4017", "d": "4/2016"}, {"title": "collectionprototypechain nt proxy requests modelattributes", "body": "far tell looks like underscore methods attached collections proxied call act models object great lets us things like unfortunately seems like breaks call obviously example nt useful want one operation collection ca nt use shortcuts things like etc need use iterator functions much less clean", "num": "4016", "d": "4/2016"}, {"title": "colletcionget cid undefined", "body": "model class muppet item var muppetmodel backbonemodelextend defaults id null name null occupation null collection class muppets list endpoint var muppetcollection backbonecollectionextend model muppetmodel url muppets parse function data return datamuppets view class displaying muppet list item var muppetslistitemview backboneviewextend tagname li classname muppet template template muppetitemtmpl html initialize function thislistento thismodel destroy thisremove thislistento thismodel sync change thisrender render function var html thistemplate thismodeltojson elhtml html return events click remove onremove onremove function thismodeldestroy success function model response view class rendering list muppets var muppetslistview backboneviewextend el muppetsapp tempcid initialize function thislistento thiscollection sync thisrender render function var list ulmuppetslist empty thiscollectioneach function model var item new muppetslistitemview model model listappend itemrender el return events click create oncreate oncreate function var name muppetname var job muppetjob nameval var kermit new muppetmodel kermitset name nameval occupation jobval thistempcidkermitcid thiscollectioncreate kermit wait true consolelog get cid model thistempcid consolelog thiscollection thiscollectionmodels function consolelog ocid consolelog thiscollectionget thistempcid nameval jobval create new list collection list view fetch list data var muppetslist new muppetcollection var muppetsview new muppetslistview collection muppetslist muppetslistfetch chomre debbuger get cid model child models array byid object listenid events object modes array child id null cid proto backbonemodel child cid id null proto backbonemodel child cid id null proto backbonemodel code use print thiscollectionmodelsbut write nt print thiscollectionmodels function consolelog ocid beasuce probelm thiscollectionget undefinebut thiscollectionmodels alread find cid", "num": "4015", "d": "4/2016"}, {"title": "revert change issue regarding options nested change events", "body": "recently stumbled change introduced version caused issue version could nested changes options without regarding listeners change event could use options concrete change attribute callbacks nt get options callbacks change event causes issue since version options hash side effects options hash final change event depends last call set method done listenercallback model view never sure options hash change callback replaced one inner change notice problem sure cases problem really think second case causes much new problems solves really implemented side effect accidentally destroy options hash another listener may set different module application hurts principle encapsulation modularization example happens currently javascript file thislistento anymodel change function model options options options hash always empty optionsfooflag flag never exist dosomething file b thislistento anymodel change anattribute function model newval modelset anotherattribute passing options gt accidentally overwrites hash change event file c anymodelset anattribute fooflag true want file b setting another attribute regard listener file example break therefor must check listeners using options always pass around options hash inner changes even add overwrite flags final options hash change event use options change attribute event example may think kind disabling flag javascript file thislistento anymodel change function model options options options always contains disablesomething flag optionsdisablesomething never true expected true default options dosomething file b thislistento anymodel change anattribute function model newval modelset anotherattribute disablesomething true nt want call dosomething second time use silent flag file c anymodelset anattribute kind proposal opinion current behavior obvious default case firstold one version intentionally whatever reason want options hash inner change final change event two possibilities kind new flag set method force using inner hash options using reference nature options hash set additional flags options hash inside change callback simultaneously set original hash passed reference javascript file thislistento anymodel change function model options options options hash contains fooflag myownoption optionsfooflag dosomething file b thislistento anymodel change anattribute function model newval options options options hash contains fooflag optionsmyownoption modelset anotherattribute options file c anymodelset anattribute fooflag true side note finally really want stress explicitly mention changes changelog look changelog version point performance finetuning backbone events anything surely change causing different behavior backbone models team search hours find problem caused change till found backbone something different", "num": "4014", "d": "4/2016"}, {"title": "backbone old underscore dependency", "body": "installing backbone using npm installs underscore dependency instead latest reason getting error trying define view example function", "num": "4013", "d": "4/2016"}, {"title": "use new array model properties", "body": "want use new array model properties different model get single array like", "num": "4010", "d": "4/2016"}, {"title": "backbone security", "body": "hi offering write new module security module based backbone framework separated beginning enough provide realization security main features module easy configure overwrite based class include routers models collection witch use provider provider created manage token session expired time token succeed authorization provider adding authorization header values witch got authorization course provider provide logout function think idea", "num": "4005", "d": "4/2016"}, {"title": "hash change causes page refreshes special cases ie", "body": "bug caused bug ie versions since backbone router supports ie versions affected feel like bug covered backbone library see fix turns simple however nt time test effects across browsers", "num": "4003", "d": "4/2016"}, {"body": "check milestones", "d": "4/2016"}, {"body": "nt really use milestones part take look open issues see questions particular directed gitter channel mailing list stackoverflow", "d": "4/2016"}, {"body": "thank answer", "d": "4/2016"}, {"body": "sure posted right project", "d": "4/2016"}, {"body": "yes sure idea works", "d": "4/2016"}, {"body": "come conclusion right project post see link nt anything raspberry pi receive surprisingly large number open issues new users people looking projects please tell us", "d": "4/2016"}, {"body": "spam bot kind git profile joined apr maybe someone use aka github bots get answer asap randomly use github public api find projects huge amount stars co smile", "d": "4/2016"}, {"body": "huh really interesting like spammy google results world", "d": "4/2016"}, {"body": "yep people ca nt start spent time learn sometimes think write bots", "d": "4/2016"}, {"body": "nt think spam bot original poster ended posting question repository seems ontopic", "d": "4/2016"}, {"body": "go would great see pull separate pulls please thanks", "d": "4/2016"}, {"body": "want pulls attached issue slash issues since closed issue used writing commits fixclose issues backbone operates differently totally fine making sure", "d": "4/2016"}, {"body": "tend use open issues way saying issue resolution undecided welcome comment community otherwise even open issues stuck sort limbo state case next step known great open pull request concrete changes actually comment", "d": "4/2016"}, {"body": "ref issue write pr issue ref apr pm adam krebs notifications githubcom wrote tend use open issues way saying issue resolution undecided welcome comment community otherwise wed even open issues stuck sort limbo state case next step known great open pull request concrete changes actually comment receiving authored thread reply email directly view github", "d": "4/2016"}, {"body": "yup ref issue completeness sake", "d": "4/2016"}, {"body": "got prs next days thanks help", "d": "4/2016"}, {"body": "awesome thanks", "d": "4/2016"}, {"body": "thanks platinumazure", "d": "4/2016"}, {"body": "special cased unfortunate side effect way chaining works underscore backbone better solution", "d": "4/2016"}, {"body": "seems could specialcased chain object chained methods could detect next call longer returning backbone models basically become normal underscore chain context object point course could get ugly factoring methods take method refs eg invoke could honestly go either way one way could handled augment underscore chain object method something like basically goes back collectionaware chain mode method would regarded use risk example assume collection contains models address attribute another model honestly looking pretty ugly even wanted throw hopes inspire discussion ultimately workable solution", "d": "4/2016"}, {"body": "suspect viable way without duplicating logic handles whether provide model attributes chain default", "d": "4/2016"}, {"body": "nt able come clean solution really workaround far always follow either lets filtermanipulate objects like unfortunately lose instances process method benefit working backbonemutator properties method keeps references original objects maybe good bad thing since could modify perhaps one option would track methods called chain simply filtered collection eg etc case could cleanup operation happens output chain looking models whose attributes matched output swaping attribute objects model instances alternatively models id could match way would probably much faster since index would basically look like automatically calling gets trickier methods rearrange collection eg partition etc maybe methods cause cleanup happen immediately", "d": "4/2016"}, {"body": "accepts", "d": "4/2016"}, {"body": "bbrui provide jsfiddle think problem nt set model collection creation think help erosb accepts id cid model param thanks", "d": "4/2016"}, {"body": "test bbrui say run rightcode follow still problem issue send var listnew muppetcollection var entitynew muppetmodel id name test occupation listadd entity consolelog consolelog listget entitycid id", "d": "4/2016"}, {"body": "find thiscollectioncreate kermit wait false changethiscollectioncreate kermit wait false model add collection time nt wait server reponse server reponse add model collections", "d": "4/2016"}, {"body": "bbrui kind questions please use stackoverflow gitter channel thanks", "d": "4/2016"}, {"body": "nt possible likely problem local npm modules try full reinstall", "d": "4/2016"}, {"body": "per defaults hash function also nt forum try next time grin", "d": "4/2016"}, {"body": "thanks rafde", "d": "4/2016"}, {"body": "cool idea go ahead backbone plugins always welcome", "d": "4/2016"}, {"body": "yup sounds like great plugin looking forward see", "d": "4/2016"}, {"body": "circumstances would occur", "d": "4/2016"}, {"body": "someone define hehe maybe think", "d": "4/2016"}, {"body": "collectioncomparator sort link line still points dead link mdn docs", "d": "4/2016"}, {"body": "feel free open pull request merge thanks", "d": "4/2016"}, {"body": "fixed version thanks", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "updates", "d": "4/2016"}, {"body": "nt plans finish others want pick left go otherwise closed", "d": "4/2016"}, {"body": "love new backbone might give try though u leave", "d": "4/2016"}, {"body": "yup", "d": "4/2016"}, {"body": "well thing class properties still stage ecmascript proposal stage system idea since seems like gim terms user gets course idea sort things might break hood syntactically terms reference implementations", "d": "4/2016"}, {"body": "trying get solution well would like routes look like opposed cant figure", "d": "4/2016"}, {"body": "braddunbar working backbone using change url submitting search form case could something like max m\u00fcller encode maxm bcller within backbones navigate function searchquery beeing decoded back max m\u00fcller returned like end url gets changed myrootcom qmax m\u00fcller valid url instead like myrootcom qmaxm bcller missing something standard behavior way achieve beside modifying backbones core", "d": "4/2016"}, {"body": "problem think control sending data via patch method example server accepts data namespaced object need able use namespace sending data server time need original nonnamespaced data store local model", "d": "4/2016"}, {"body": "reset true option modelfetch", "d": "4/2016"}, {"title": "mouse event bubbles parent element one", "body": "create components amp b next c b template dimensions b rotate c degrees using partially overlaps click triangle c overlaps expected c receives mouse bubbles actual c receives mouse bubbles b means c partially transparent case c circle png user ca nt click button next rotated", "num": "13434", "d": "4/2016"}, {"title": "simple extension linkto component fails", "body": "ember one extend component follows mycomponentjs js import ember ember export default emberlinkcomponentextend mycomponenthbs copied framework template linkto slightly tweaked example switch framework version beta channel example fails error thrown seems indicate change ordering parameters", "num": "13432", "d": "4/2016"}, {"title": "eventrelatedtarget aways null focusout", "body": "focusout handle events components aways return null focusout event consolelog eventrelatedtarget awayas null jsbin jquery works", "num": "13428", "d": "4/2016"}, {"title": "left right nav arrows longer work pop instructions", "body": "lt gt arrows move pop instructions work though carousel buttons", "num": "13422", "d": "4/2016"}, {"title": "dasherize attributebindings arbitrary attributes match behavior classnamebindings", "body": "requesting additional conventionoverconfiguration inflection attribute bindings customized components using ember jquery customizing component element documentation show yields automatically dasherized rendering thus expectation appanchorcomponent embercomponentextend tagname href title download datatoggle tooltip dataplacement left attributebindings datatoggle dataplacement title didinsertelement tooltip would dasherized yield astonishment instead see actual behavior currently requires manually mapping compontent attribute name respective element attribute name appanchorcomponent embercomponentextend tagname href title download datatoggle tooltip dataplacement left attributebindings datatoggle datatoggle dataplacement dataplacement title didinsertelement tooltip gets desired", "num": "13421", "d": "4/2016"}, {"title": "onclick action myaction nt work svg elements", "body": "adding svg element work expected throws error action function seems inlined element still throws error reproduction twiddle open console click console prints click console prints", "num": "13420", "d": "4/2016"}, {"title": "update changelog script account gh squash merge", "body": "command listed needs updated match newer pr style merge commit", "num": "13412", "d": "4/2016"}, {"title": "foobar container lookup", "body": "attempt lookup componenthelper example embertwiddle treated unambiguously property lookup instead used want invoke helper", "num": "13404", "d": "4/2016"}, {"title": "linkto nt work touch devices", "body": "tested android ios devices ff chrome native browsers way get helper catch touch events like tap touchstart touchend etc using bootstrap nav", "num": "13400", "d": "4/2016"}, {"title": "click helper argument documented", "body": "looks like helper accepts second arg folks guides repo curious folks believe documented", "num": "13397", "d": "4/2016"}, {"title": "model query params target route errors", "body": "click link see console", "num": "13395", "d": "4/2016"}, {"title": "input autofocus works first render", "body": "steps replicate click autofocus input correctly autofocused click twice anymore unless app reloaded", "num": "13391", "d": "4/2016"}, {"title": "embercomputedmaxmin date object turns back timestamp", "body": "use javascript date object returned value timestamp instead date object demo javascript dates embercomputed function return new date apr new date apr earliestdate embercomputedmin dates thisget earliestdate return timestamp april", "num": "13387", "d": "4/2016"}, {"title": "computedandor shortcircuit behavior", "body": "example js embercomputed function consolelog return false b embercomputed function consolelog b return b c embercomputed function consolelog c return c foo embercomputedor b c use corresponding template correctly see value however see get printed console indicates current implementation helpers using shortcircuit behavior words since returns something trueish example nt evaluated performance example relevant computed properties become complex might pay evaluate properties really needed looks like current implementation calling object leads current behavior replaced loop calling property one fulfills andor predicate performance might improved complex properties cc rwjblue", "num": "13384", "d": "4/2016"}, {"title": "performing transition another transition may result page refresh", "body": "ember twidde able narrow circumstances following element performing transition clicked click handler placed inside action root component method nt work method nt get called one children element helper performing transition clicking outside element works expected clicking link throws following exception ember twiddle proper ember app results page refresh", "num": "13383", "d": "4/2016"}, {"title": "revert", "body": "issue caused regression fixed", "num": "13380", "d": "4/2016"}, {"title": "error application adapter", "body": "per added file following content remove pluralisation urls even though seems worked receive following errors console ember running adaptersapplicationjs line col ds defined adaptersapplicationjs line col ember defined", "num": "13379", "d": "4/2016"}, {"title": "documentation needs slight change", "body": "page genenrate model using file looks like import model emberdatamodel export default modelextend syntactically slightly different docs affects subsequent references page", "num": "13375", "d": "4/2016"}, {"title": "quickstart documentation command install", "body": "", "num": "13373", "d": "4/2016"}, {"title": "beta templatecompiler error updating", "body": "hi get following error update c devemberbasewebapp gt ember livereload server serving file webapppodsadmincategoriescategorytemplatehbs broccoli plugin templatecompiler failed typeerror read property start null objectcalculatelocationdisplay default c assertpath c c walkervisit c visitorselementnode c walkerchildren c walkervisit c visitorselementnode c walkerchildren c walkervisit c broccoli plugin instantiated templatecompilerplugin c templatecompilerfilter constructor c new templatecompiler c templatecompiler c objectregistryaddtotree c c arrayforeach native processplugins c moduleexportspreprocesstemplates c emberappprocessedtemplatestree c someone idea start looking cause ember cli os", "num": "13370", "d": "4/2016"}, {"title": "routing error", "body": "hey recently opened issue testemtestem basically created new ember app added logging testem server ran tests locally getting errors similar checked file system file present notice missing folder assets could reproduce browserstack please check testem issue page details reproduce browserstack followed gist figure whether issue testem app ember creates created similar issue help debug issue someone points right direction", "num": "13368", "d": "4/2016"}, {"title": "emberassign called arrayprototypereduce produces different result", "body": "sure explained best way ember believe embermerge emberassign supposed functionally since deprecation use emberassign following example change behavior embermerge emberassign using produces using produces ends creating nested object circular dependencies also note works correctly produces exact output nt looked happening yet take look later week filing issue know expected behavior emberassign", "num": "13362", "d": "4/2016"}, {"title": "unloadall mymodel nt anything", "body": "storeunloadall seems work store content get dumped using model still see content need call sort save", "num": "13361", "d": "4/2016"}, {"title": "minor feature request default get helper", "body": "hello please let know rfc necessary seems relatively minor write one needed requesting addition optional third parameter get helper would serve default response case returned value undefined null ignored otherwise would functionally identical python builtin example appcomponentsmycomponentjs testobject keyone valueone keytwo valuetwo apptemplatescomponentsmycomponenthbs test get testobject keyone test get testobject keytwo defaultvaluetwo test get testobject keythree test get testobject keyfour defaultvaluefour output valueone valuetwo defaultvaluefour understand accomplished using helpers subexpressions thought could useful shorthand though understand would low priority something would willing try hand find time please let know anything else needed", "num": "13357", "d": "4/2016"}, {"title": "using broken beta canary", "body": "app occasions handling string values capability broken recent deprecation way deprecation introduced see problem function longer publically accessible wrapper function around nt app either submitting pr discovered tests broken access function see sure best course action prevent breaking backwards compatibility keep deprecation warning", "num": "13354", "d": "4/2016"}, {"title": "issue emberlookup canary", "body": "testing addon came across following issue using current ember canary emberdata canary via bower emberdata addon version packagejson emberdata throws error trying set emberdefaultlookupds emberdataprivatecoredefault stacktrace uncaught typeerror set property ds undefined anonymous function moduleexports modulebuild findmodule requiremodule anonymous function anonymous function steps reproduce create new ember app add dependency emberdata canary", "num": "13352", "d": "4/2016"}, {"title": "set property extendprototypes undefined compiling templates", "body": "following error generated compiling templates ember cli app using canary steps reproduce embercli introduced working fix", "num": "13347", "d": "4/2016"}, {"title": "contextual components carry information source local lookup", "body": "reference contextual components rfc local lookup discussed part emberjsrfcs currently creating contextual component close path component either reading first param getting contextual component local lookup needs know source well reason treat exactly like component hook needs updated use source gets component cell", "num": "13346", "d": "4/2016"}, {"title": "ember computedsort memory leak ember version lt", "body": "example twiddle seems component causing component garbage collected app using originally discovered however testing issue fixed seen pr deals memory issues backported tell solve issue believe something corrected gt leak image navigate route sort back home see node count climbs come back leaving route view htmllielements created going leaky route removed detached dom tree elements leak", "num": "13342", "d": "4/2016"}, {"title": "doc need better example route loading", "body": "uses deprecated emberview api example would bet confusing new users coming ember seeing hook", "num": "13341", "d": "4/2016"}, {"title": "query params forced route link clicked", "body": "hi starting learn ember hopefully something stupid easy fix btw embercli rails apionly back end defined typical band hasmany albums album belongsto band associations front back ends routerjs file bands template click band want display list albums seems fine generated html specifically values links bands exactly expect great defined matching routes rails handle form url part figure click link urls actually getting sent server defined adapter fine see path defined routerjs file links getting transformed call uses query parameters back end ca nt handle even could seems wrong get thought specified ie thanks larry", "num": "13340", "d": "4/2016"}, {"title": "emberarray implements contains includes", "body": "contains implemented contains renamed includes deprecated favour method ember", "num": "13336", "d": "4/2016"}, {"title": "running tests ca nt find variable qunit", "body": "sure issue belongs testem seen issue emberjs repo local addons running testem command results error qunit found brand new clone npm test referenceerror ca nt find variable qunit exit phantomjs oncallback phantomjs connector call callphantom runloggingcallbacks done process begin indexhtml issues indexhtml test harness issues first qunit path wrong attempting load qunit file really second line exists indexhtml looks like template actually compiled npm version node version embercli global testem cc stefanpenner", "num": "13331", "d": "4/2016"}, {"title": "observers nt fire observing properties injected objects", "body": "injecting ember object onto class class observers properties injected object getting triggered observed property changes seems occur whether injected object injected via simply via importing object via regular statement followed loading imported object onto class simple twiddle demonstrates behavior click increment counter button observe computed alias fails update observed property updated edit using ember twiddle nice feature changing ember dependencies notice issue occurs ember twiddle current default ember dependency releasebetacanary versions seems simple fix upgrade ember", "num": "13330", "d": "4/2016"}, {"title": "proxyobject failed compared object proxying", "body": "proxyobject failed compared object proxying key relationship async async set true setting record create new proxyobject case async set false", "num": "13323", "d": "4/2016"}, {"title": "dynamically setting queryparams controller", "body": "trying use query parameters filtering loaded data problem dynamic models would like filters show dynamically depending attributes possible filter load info backend try set queryparameters controller like twiddle nt know rfc issue feel like supporting setting queryparameters dynamically like computed property returning promise would make ember much modular", "num": "13322", "d": "4/2016"}, {"title": "deprecation handlebarssafestring prevents clear checks something safestring", "body": "deprecation handlebarssafestring constructor chain safestring nt include handlebarssafestring making instanceof checks fail see twiddle context latest change chain fixing deprecation", "num": "13318", "d": "4/2016"}, {"title": "ensure location information propagated inline linkto transformation", "body": "use syntax builders htmlbarsglimmer provide builder functions see example bmustache builder function defaults update ensure information preserved much possible", "num": "13313", "d": "4/2016"}, {"title": "ember core object different prod debug results assertion", "body": "core object big difference debug prod version setting unknown properties nt desc second else mandatory setter stuff probably hidden featureflag implementation nt know results assertion used ds recordarray guessing emberdata issue code nt wrapped feature flag worked debug prod sure looking fix happens ever tries call back server data related maybe missing something obvious think would affecting people probably missed change somewhere debug prod amp min", "num": "13304", "d": "4/2016"}, {"title": "clarify test helpers registered unit tests", "body": "guides clarify test helpers eg pausetest registered unit tests integration acceptance tests spent lot time trying puzzle googling looks like number developers spent similar amounts time would also useful describe register helpers unit tests would needed", "num": "13301", "d": "4/2016"}, {"title": "behavior inconsistent", "body": "hhff essentially appears thissend route fires action active route rather also impression thissend prioritized actions hash believe controllers behave agree behavior inconsistent compare following routeprototypesend sends directly falls back router present unitintegration testing controllerprototypesend looks local action first uses", "num": "13300", "d": "4/2016"}, {"title": "beta amp release channels broken due changes", "body": "error message", "num": "13298", "d": "4/2016"}, {"title": "current release current emberbeta build", "body": "using newest release build get following error embertry rwjblue suggests may issue emberjsemberjs cherry picked emberjsemberjs", "num": "13297", "d": "4/2016"}, {"title": "keyword allow numeric keys used", "body": "due line using numeric key work properly demo", "num": "13296", "d": "4/2016"}, {"title": "helper documentation nt match cli helper generator", "body": "", "num": "13291", "d": "4/2016"}, {"title": "controller action target bottom router corresponding route", "body": "ember game one surprising nested route structure actions bubble controller bottom current router state like assumed would bubble like important addon ember infinity users want multiple infinite scroll containers nested route structures clean way achieve bubbling flow like without touching controller tried avail heart", "num": "13288", "d": "4/2016"}, {"title": "returns instead", "body": "pretty clear snippet explains issue javascript ember embera null returns ember beta embera null returns null happened looks like commit broke seems harmless code transpiled problem argument length greater value ultimately returned unfortunately break tests application specifically fixture adapter see believe part public api fixed happy add test take care edit side note feel like voice concern aforementioned commit several places replaced default arguments potentially leading issue", "num": "13284", "d": "4/2016"}, {"title": "embercomputedsort behaviour changed", "body": "ember worked nt anymore nt found deprecation warnings prior upgrading wanted let know happens see twiddle currently version works", "num": "13281", "d": "4/2016"}, {"title": "bug within rsvp callback nt reference correct method", "body": "could nt find anything whether behaviour intended certainly feels like bug basics twiddle workaround", "num": "13280", "d": "4/2016"}, {"title": "ember binding errors iphone", "body": "hello guys experiencing lot binding errors ember project viewing iphone ios seems something general multiple things fail likes aliases class bindings ignored anyone experienced something similar currently using ember updating nt solve issue easily reproduced go login form tap entrar enter get red alert asking email password nothing happens works fine iphone simulator iphone real device anyone experienced something similar thank advance", "num": "13275", "d": "4/2016"}, {"title": "flagged reserved property components", "body": "see twiddle reduced test case open console see error message set property component least maybe classes rendering borks used internally put together failing test possibly pr wanted note case anyone else wants pick imagining helpful error message run time states reserved property name", "num": "13271", "d": "4/2016"}, {"title": "enumberable reject behave expected", "body": "made twiddle demonstrate behaviour expected returns array items provided callback return truthy value happens returns array items provided callback returned falsey value inconsistent every implementation think eg ruby underscorejs reason change behaviour behaviour explicitly opposite says rather rejecting items pass test keeps ones fail", "num": "13269", "d": "4/2016"}, {"title": "qp get updated model refreshed", "body": "since query parameter get updated refreshing route see twiddle works think second click content subsequent changes qp increment", "num": "13263", "d": "4/2016"}, {"title": "observer trigger", "body": "controller object controllers template instantiate component component triggers changes nt see changing model id print confusingbehaviourproofobjectid inside component template like understand thanks advance", "num": "13260", "d": "4/2016"}, {"title": "assertion failed allowed one controller property map query param key", "body": "hi updated one apps saw error popping weird thing appears error referring queryparam revert commit code works intended ember twiddle reproducing error setup running", "num": "13258", "d": "4/2016"}, {"title": "active class missing transition child route since latest beta", "body": "since seems break something active class missing transition child route twiddle example", "num": "13256", "d": "4/2016"}, {"title": "input event range fire change event incorrect behavior", "body": "confirmed fresh install browsers gt input event fires component defined type range change event gt browsers fires mouse released however fired non stop event things need happen event needs fire non stop event fire mouse released chrome find test", "num": "13255", "d": "4/2016"}, {"title": "linkto deep linking route paths contain multiple dynamic segments creates invalid href url", "body": "deep linking route paths contain multiple dynamic segments creates invalid href url given creates expected", "num": "13254", "d": "4/2016"}, {"title": "lose", "body": "kind thing seems minor used show turns ember call thisstorefindall rental ember data make get request rentals since using mirage development environment mirage return data provided deploy app production server need provide backend ember data communicate need magic ca nt make avoid kind silliness comes across needless cognitive overhead like said minor kind thing get annoying done often", "num": "13253", "d": "4/2016"}, {"title": "using service get deprecation warning message", "body": "using ember recently migrated ember everything works expected however getting deprecation one services use object rather object isservicefactoryisservicefactory followed deprecation message example luck suspect due fact using example code import ember ember export default emberobjectproxyextend isservicefactory true way work around create service supports like functionality", "num": "13249", "d": "4/2016"}, {"title": "building docs fails", "body": "running part build getting master branch", "num": "13247", "d": "4/2016"}, {"title": "meta improve issue triaging workflow save core team bandwidth", "body": "per discussion slack channel looks like items need worked core team approval addition rwjblue finding building bot setting bot repo", "num": "13245", "d": "4/2016"}, {"title": "didreceiveattrs friends documented api", "body": "would willing write pr sure file documentation belongs may emberviewtargetactionsupport", "num": "13244", "d": "4/2016"}, {"title": "deprecate emberbinding", "body": "issue tracks deprecation emberbinding binding properties needed long time existing use cases covered computeds service injections add entry deprecation guides add deprecations core trigger deprecation binding connects provide better upgrade suggestions oneway suggest using readonly computed otherwise suggest alias binding global suggest using service", "num": "13243", "d": "4/2016"}, {"title": "changing cause rerender", "body": "given following template setting different value rerender twiddle", "num": "13240", "d": "4/2016"}, {"title": "unresolved sourcemappingurl bower release embertemplatecompilerjs", "body": "bower release emberjs two files contain unresolved sourcemappingurl example last couple lines line could cause problem build tools example fails sourcemap feature enabled installed emberjs package nt contain linked source maps false reference source map removed built version emberjs", "num": "13234", "d": "4/2016"}, {"title": "calling super cp wrong context retrieved action", "body": "emberobject call cp retrieve parent value property found fetch cp call action handler context parent action parent cp ember twiddle tested ember canary click save button following happen grab validations object also grabs inherited validations possible action called end calls defined crud mixin crud save action called actually happening grab validations object validations objects calls crud mixin save action instead inherited validations cp stuff mycomponent save action intended call defined crud mixin crud save action called", "num": "13230", "d": "4/2016"}, {"title": "computed property", "body": "hi struggling find clean solution usecase think computed property would provide solution following component computed class takes values left right property quite expensive compute ie requires network requests cases nt actually need class defined element cases would like skip calculation altogether ideally would able something like however throws error resort something like nt nice semantically also logic would repeated class might might required could also create containing template component creates extra html element conclude question like feature request feels kind like artificial limitation static array especially given previous workaround plans make computed property sure technical reasons yet case would hard overcome", "num": "13229", "d": "4/2016"}, {"title": "jscs tests fail built windows", "body": "rwjblue quick question unit test results follow steps readme build ember run unit tests browser get jscs test failures far verified see failures chrome edge master branches ember idea going emberci indicates tests passing cc jdalton", "num": "13227", "d": "4/2016"}, {"body": "thing working properly longer inline version since trick done plugin compiler seen introduced follow thread see opinion inline form component extends", "d": "4/2016"}, {"body": "going cause breaking change bunch addons way makes quite difficult write tests around ie existing behavior work ember lt potentially confusing consume developer would argue change violates semver since advise people customize linkto reopening extending like public api surface common usage patterns valid officially supported ember continue", "d": "4/2016"}, {"body": "going cause breaking change bunch addons list context would argue change violates semver since advise people customize linkto reopening extending like public api surface common usage patterns valid officially supported ember continue sure nonblock usage something extending something suggested though perhaps either way agree commonly use wild either need fix revert", "d": "4/2016"}, {"body": "list context emberclimaterialize something internal yahoo used add html attributes links purpose automated testing stefanpenner may confirm probably list github search results ember linkcomponentextend sure nonblock usage something extending emberlinkcomponent something suggested though perhaps sure developers understand distinction supported inline form block form apparently exact component hunch many developers see block vs inline two different ways consuming single api surface simply make choice whether need complex content simple text content string", "d": "4/2016"}, {"body": "petition inline evaporated mikenorth checked results using block form automated tool check would return useful statistics", "d": "4/2016"}, {"body": "something internal yahoo used add html attributes links purpose automated testing stefanpenner may confirm ya would say feels like something one able", "d": "4/2016"}, {"body": "mikenorth checked results using block form locks addons assured consuming apps use published components inline form petition inline linkto evaporated clear sort point trying make breaking change would constitute major version increment", "d": "4/2016"}, {"body": "reproduction nonworking emberjs code", "d": "4/2016"}, {"body": "villander example reproduction ember note relatedtarget null jquery docs mention using mouse events rather focus events see example need open console see logged event list ember events see close issue appear bug emberjs would like discuss perhaps ask group help channel typically community helpful get quicker feedback chatroom issue tracker", "d": "4/2016"}, {"body": "sorry wrong repository", "d": "4/2016"}, {"body": "tripped monday", "d": "4/2016"}, {"body": "automatically camel case attributesproperties could nt set", "d": "4/2016"}, {"body": "rwjblue thinking specifically ca nt come top head multiword attributes without dashes example however html element attributes case insensitive someone camelizing human convention web standard certainly language rule much fewer farther say attributes think would make sense set default inline majority use cases good point clarify actually requesting change default necessarily major rev decision breaking change suggesting ability override removed", "d": "4/2016"}, {"body": "cmtonkinson given feature request could move discussion rfc trying keep issue tracker focused bugs features gone rfc process thanks details", "d": "4/2016"}, {"body": "cmtonkinson often use attribute mapping convention seems explicit anyway sometimes conventions bit confusing example using explicit syntax mapping see component source output text area html source personally like defaults force explicit attribute bindings agree acorncom featureenhancement request see contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo close would like move forward proposing enhancement please move rfc repo ps please nt let satisfaction status quo discourage proposing new way", "d": "4/2016"}, {"body": "svg namespace always set attribute properties set attribute function set attribute string value function instead", "d": "4/2016"}, {"body": "andressrg sounds like need documentation svg use component especially regarding actions nt know using svg attribute become string value sounds like may need workaround using browser events instread see locks documenation available works regarding using svg elements ember components", "d": "4/2016"}, {"body": "moving forward ember allowing squash merging option merge prs original way still available", "d": "4/2016"}, {"body": "would need allow since button merger hits know way disable one style", "d": "4/2016"}, {"body": "according blog post either option enabled disabled", "d": "4/2016"}, {"body": "ha apparently nt pay attention still like allow options script though", "d": "4/2016"}, {"body": "yeah good idea changelog work materr setting use", "d": "4/2016"}, {"body": "quite likely blame change htmlbars would take place contextual components rendered using dot path think problem caused lines resolver", "d": "4/2016"}, {"body": "version ember bug present think would disingenuous call bugfix unless semantics accidentally changed sometime words might deprecate live ember", "d": "4/2016"}, {"body": "seems produce output change added later sure double mistake", "d": "4/2016"}, {"body": "reproduction tested used several ember sites mobile phone worked fine", "d": "4/2016"}, {"body": "jmanuelrd put together embertwiddle jsbin demonstrating issue steps reproduce", "d": "4/2016"}, {"body": "possible fix check route actually active afaict problem happens fires unncessarily route actually entered", "d": "4/2016"}, {"body": "seems issue trying trackdown issue best explain queryparams transitions special short circuit routerjs fires code get hit contexts route setup yet controller set query params must code path maybe gets fired normal transition short circuit queryparams transition spent hours digging night get far hoping figure weekend cc rwjblue crazy shit wanted pair w bit", "d": "4/2016"}, {"body": "clear issue appears queryparam transitions also happens transitioning new route query params", "d": "4/2016"}, {"body": "looks bug raytiley came conclusion controller setup yet chance wip branch extended cover bug branch failing tests", "d": "4/2016"}, {"body": "confirmed seeing behavior issue seems input generated nt properly refocus hidden shown", "d": "4/2016"}, {"body": "sure ember bug autofocus behaviour simple grasp thing happens following contexts firefox autofocus even first time simple jquery adding removing html shows problem jsbin example twiddle sure bug side", "d": "4/2016"}, {"body": "closing issues reasons feel free reopen still think ember issue thank", "d": "4/2016"}, {"body": "internally using determine lowest see per spec given zero arguments calls tonumber arguments returns smallest resulting values arguments given result value nan result nan comparison values determine smallest value done using abstract relational comparison algorithm except considered larger defers defined case calls instance roundabout way saying think current behavior correct though somewhat unexpected", "d": "4/2016"}, {"body": "hey rwjblue thanks details explanation yes somewhat unexpected changed datatype input values lodash min function returns date object", "d": "4/2016"}, {"body": "hmm change input values return value nt", "d": "4/2016"}, {"body": "changed datatype value js date object number timestamp", "d": "4/2016"}, {"body": "definitely changing value inside array twiddle see modified demo return values different input value real issue", "d": "4/2016"}, {"body": "yes page", "d": "4/2016"}, {"body": "looks like min max use simple gt lt comparison instead mathmin mathmax easy fix issue submitted pull request let know think", "d": "4/2016"}, {"body": "looks like min max use simple gt lt comparison instead mathmin mathmax easy fix issue would likely break existing apps expect current behavior likely needs considered new feature consideredrolled accordingly", "d": "4/2016"}, {"body": "seems like nice improvement want ensure change done wanted tackle", "d": "4/2016"}, {"body": "ya would reasonable expect think go full cycle bugfix believe possible rely behavior", "d": "4/2016"}, {"body": "makes sense agree", "d": "4/2016"}, {"body": "dremora nt think ember bug least example appears two thing two different ways may need additional logic one transition example shows adding condition prevent extra transition results page reload tried ember well issue behavior adding condition avoid reload works perhaps close one", "d": "4/2016"}, {"body": "workaround move click handler inside method component seems weird works handling event via action nt bug somewhere unless difference behaviour known documented", "d": "4/2016"}, {"body": "rwjblue krisselden open pr bump want take care next time make pass dependencies", "d": "4/2016"}, {"body": "thanks working jmeas", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "joetidee use generate command imports included guides exclusion tutorial elide imports conciseness waiting module shims finalized hoping shims get finalized soon able avoid confusion", "d": "4/2016"}, {"body": "ps invite join slack community help channel responsive help", "d": "4/2016"}, {"body": "delete file regenerate using command", "d": "4/2016"}, {"body": "add following top errors go away", "d": "4/2016"}, {"body": "got way contribute updating docs see improvements", "d": "4/2016"}, {"body": "indeed open issues send pull requests guides repository api documentation", "d": "4/2016"}, {"body": "thank bug report already addressed pr guides repository updated latest release", "d": "4/2016"}, {"body": "able provide guidance appmodelsrentaljs file look attributes added getting errors application procede past point tutorial", "d": "4/2016"}, {"body": "ok got nt know whether code generated incorect docs", "d": "4/2016"}, {"body": "generated code indeed correct glad got", "d": "4/2016"}, {"body": "hi macainian already filled guides repository see", "d": "4/2016"}, {"body": "fixed included branch released", "d": "4/2016"}, {"body": "update latest channel build via wait released sorry troubles", "d": "4/2016"}, {"body": "ah ok issue opened searched beta issues trouble thanks", "d": "4/2016"}, {"body": "vedharish note longer supported clarify tested browsers nt problem", "d": "4/2016"}, {"body": "locks yes works fine shows issue", "d": "4/2016"}, {"body": "error appears build time error seems unrelated browser browsers nt throw enoent nodebuild time error repo bugs ember embercli ember bug able recreate failure jsbin embertwiddlecom services support build time error unrelated browser reported embercli repo along precise steps recreate error", "d": "4/2016"}, {"body": "well enoent roughly means file directory found case log testem server think happening running testem server started ember testem creates tmp directory current working directory adds asset files temp file serve directory specific case browser requests file instead aforementioned one files present directory hence enoent thats tagged nt think issue testem server creates file location browsers also server could nt know browser tested starting tests think client javascript somehow creates wrong absolute request url asset files", "d": "4/2016"}, {"body": "well enoent roughly means file directory found yep aware mentioned browser throw error ember nt trigger asset requests suggested create steps reproduce submit issue embercli", "d": "4/2016"}, {"body": "okay think create issue thanks", "d": "4/2016"}, {"body": "provide demo jsbin embertwiddle showing need see actual invocations whatnot understand going", "d": "4/2016"}, {"body": "sorry including jsbin create today", "d": "4/2016"}, {"body": "guess taking fourth parameter reduce callback ie original array treating like object properties thereby merging target object since objectassign accepts multiple sources emberassign mimics functionality nt think way around issue accepted two arguments would worthwhile continue offering twoparameter wrapper around", "d": "4/2016"}, {"body": "nickiaconis yes removing deprecation already removed canary beta release branches released soon", "d": "4/2016"}, {"body": "closing thanks nickiaconis explanation", "d": "4/2016"}, {"body": "oops ember debugger data view closed error", "d": "4/2016"}, {"body": "seem like feature request features generally discussed repository create issue feature requests pull request propose new feature closing issue nt really bug framework please follow rfc issuepr interested taking also think would prefer avoid adding additional arg instead make mirror definitely look forward rfc thanks willing participate process", "d": "4/2016"}, {"body": "duplicate would mind moving description comment issue", "d": "4/2016"}, {"body": "oops sorry monday fail", "d": "4/2016"}, {"body": "worries definitely need understand address underlying issue", "d": "4/2016"}, {"body": "rwjblue ping discussed prior creating issue", "d": "4/2016"}, {"body": "likely related", "d": "4/2016"}, {"body": "done", "d": "4/2016"}, {"body": "bet reason nt see addon version blow addon nt used bower version evaluated whether used", "d": "4/2016"}, {"body": "addon time since addon would import things need real module paths", "d": "4/2016"}, {"body": "spoke krisselden going work getting reexposed deprecation", "d": "4/2016"}, {"body": "submitted ember data mitigate still need set back deprecation though", "d": "4/2016"}, {"body": "krisselden still radar", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "mutation emberclihtmlbars addressed", "d": "4/2016"}, {"body": "thanks reporting plan pick implementation", "d": "4/2016"}, {"body": "yes", "d": "4/2016"}, {"body": "yes bug fixed unable upgrade", "d": "4/2016"}, {"body": "unlikely backported implementation different", "d": "4/2016"}, {"body": "thanks quick response stuck still support since unlikely back ported approach recommend work around bug", "d": "4/2016"}, {"body": "keep computedsort controllers singletons components instead could try writing custom computed property depends possible fields dynamic computedsort every depend", "d": "4/2016"}, {"body": "mmun thanks advice implement", "d": "4/2016"}, {"body": "woah horrible example thank pointing", "d": "4/2016"}, {"body": "hi larryh welcome ember glad getting going things generally ask folks reserve issues specific bugs find ember help us focus improving code working instead love post questions like either stackoverflow ember forums ember slack channel maybe answer questions find details community page ember site close issue ifwhen find bug ember future look forward working fixing", "d": "4/2016"}, {"body": "ok appreciate taking time set straight help opposed letting hang thanks larry", "d": "4/2016"}, {"body": "sure also quick note seeing question fresher eyes using rails api backend jsonapi resources api able handle exactly ember sending back still questions get ember slack choose channel ping username happy help work", "d": "4/2016"}, {"body": "thanks offer really appreciate know busy must looking resources think handle problem least believe know direction proceed working rails years familiar jquery regular mobile ui realize take plunge spas biggest problem us newcomers imagine js framework choose seem dozens looking bunch since come rails background decided go ember far impressed fact busy expert offered help newbie added impression user community arguably important platform thanks larry", "d": "4/2016"}, {"body": "fact busy expert offered help newbie added impression user community arguably important platform busy yes expert yes community part reason well folks fun work", "d": "4/2016"}, {"body": "seem discussed november closed reason since proposal stage think worth revisiting", "d": "4/2016"}, {"body": "stefanpenner work", "d": "4/2016"}, {"body": "alexspeller curious think question rfc issue instead see contributingmd requestingafeature idea would nice create issue emberjsrfcs repo", "d": "4/2016"}, {"body": "moved rfc", "d": "4/2016"}, {"body": "asakusuma steps reproduce issue clone emberjsemberjs run tests eg following contributing guide repo", "d": "4/2016"}, {"body": "followed steps exactly ran npm run test guessing build issue caused something local machine interfering uncompiled placeholders wrong qunit path two biggest clues hoping someone would idea based clues running tests browser via ember serve works running npm run test work neither direct testem command reason blocking need manually kick saucelab job directly computer debug failing edge saucelab test run", "d": "4/2016"}, {"body": "pretty sure issue executed instead would explain path wrong uncompiled placeholders", "d": "4/2016"}, {"body": "generally run directly use sets dist paths slightly differently", "d": "4/2016"}, {"body": "rwjblue makes sense however trying kick saucelabs test run machine workaround issue locally changed line ie manually adding part path", "d": "4/2016"}, {"body": "running command line may need use instead use instead", "d": "4/2016"}, {"body": "able fix downgrading phantomjs version run travis", "d": "4/2016"}, {"body": "ugh issue left cruft property initial capital letter meant global working version twiddle also good news mmun fixed issue see original twiddle", "d": "4/2016"}, {"body": "thanks rwjblue nice know simple fix work older ember versions", "d": "4/2016"}, {"body": "olivierlesnicki trying understand issue exactly expect equal function work use case see context index comparison given asyc new async relation would expect function truthy comparing relation original reference right proxy object equal proxying think case equal original reference see twiddle", "d": "4/2016"}, {"body": "olivierlesnicki thanks putting together twiddle example helped see issue looking turns bug close curious chat rooms bet get quicker feedback help channel compared emberjs issue tracker github", "d": "4/2016"}, {"body": "mapohjola controller setup model hooks route resolved controller queryparams static assigned array strings may relate computed property somehow allow controller treat queryparams computed property would new feature may need define possible queryparams use computed properties set values think better way featureenhancement see contributingmd requestingafeature recommends creating rfc issue need pull request rfc issue repo idea would nice create issue emberjsrfcs repo", "d": "4/2016"}, {"body": "thanks response close rfc come better way", "d": "4/2016"}, {"body": "help understand need check given string safestring", "d": "4/2016"}, {"body": "using test verifying helper returned safestring", "d": "4/2016"}, {"body": "library code uses emit warning unsafe string passed", "d": "4/2016"}, {"body": "dustyjewett would nt better use helper ensure return value displayed html moduleforcomponent asdf integration true test renders html function assert thisrender hbs assertequal someselectorforhtmlvaluesfromhelper length found html helper", "d": "4/2016"}, {"body": "topaxi generally use function htmlbars internals determine thing safe string may change glimmer believe symbol used glimmer still tbd", "d": "4/2016"}, {"body": "rwjblue certainly test end result asexpected safestring explicit impact helpers rendered dom want check well get around issue verify return object string tostring asexpected testing known ways things might go wrong ca nt check actual expected behavior also many objects tohtml methods checking wo nt ensure nt accidentally return one classes", "d": "4/2016"}, {"body": "dustyjewett sounds like deprecation sideeffect expect check instance curious hard would app make suggested change also would using allow use looking workaround best guess deprecation may change use case", "d": "4/2016"}, {"body": "think may need expose utility function something like", "d": "4/2016"}, {"body": "pixelhandler believe already changed htmlsafe still nt give us way confirm object safestring fine ducktyping adding issafestring true object would fine way check also false", "d": "4/2016"}, {"body": "ya saying might need provide method adding prop objects adding property object nt prevent issues may ing untrusted object ala", "d": "4/2016"}, {"body": "used special property value reference known function nt able think needs addressed glimmer well since symbols may work time", "d": "4/2016"}, {"body": "usecase detecting safe strings expect would make good feature addition something", "d": "4/2016"}, {"body": "mixonic yes precisely", "d": "4/2016"}, {"body": "copy app occasions handling string values capability broken recent deprecation way deprecation introduced see problem function safestring longer publically accessible emberhandlebarssafestring wrapper function around htmlsafe nt app either submitting pr discovered tests broken access function see addtionally search find quite cases people really like mixonic suggestion think definitely risk breaking backwards compatibility least noted breaking change blog deprecation guide edit bandwidth moment happy submit pr green light", "d": "4/2016"}, {"body": "think utility function would need go rfc process public api addition suspect would fairly quick process need seems fairly clear would also possible polyfill older ember versions used addons avoid deprecation older newer versions bit torn really think deprecate trolling api seems ability detect given string feature system nt account initial deprecation believe correct course action would revert deprecation try push along new api detection", "d": "4/2016"}, {"body": "workmanw would mind working rfc", "d": "4/2016"}, {"body": "rwjblue responding get ball rolling rfc pr build polyfill", "d": "4/2016"}, {"body": "try give go week tests need love", "d": "4/2016"}, {"body": "script file generated production version always contains assertions includes embermetal things like mandatory setter assertion come automatically requires modules embermetal loads seeding modules listing loads redefines modules using production version however point registry cache already includes nonprod versions redefining module nt reset seen cache ca nt modules already local variable original values means include first second using development mode includes mandatorysetter assertion using production version using mandatorysetter", "d": "4/2016"}, {"body": "tldr load", "d": "4/2016"}, {"body": "ahhhhh thought might weird setting thing nt aware never seen issue cli upgrading global app right indeed loaded opposite order like jsbin thanks good sir", "d": "4/2016"}, {"body": "ya took quite track happening stuckouttongueclosedeyes", "d": "4/2016"}, {"body": "well appreciate hunting email listed github one use got ta buy beer", "d": "4/2016"}, {"body": "sorry actively working remove gap unitintegrationacceptance tests", "d": "4/2016"}, {"body": "thanks quick response worries", "d": "4/2016"}, {"body": "would mind opening issue guides repo need info make easier address thanks", "d": "4/2016"}, {"body": "twiddle", "d": "4/2016"}, {"body": "always understood work way actions go router hence active route think would quite breaking change", "d": "4/2016"}, {"body": "mmun disagree would breaking certainly confusing least document difference", "d": "4/2016"}, {"body": "agree nt think change surprising controller world long closure actions combination w helper dockyard definitely help mental model think process apps removing controllers codebase lot folks stumble still using named actions also relevant addons support back series ca nt rely closure actions feel like would nice sender optinto prioritizing actions hash unitintegration testing behavior ps mention think mean nt wan na confuse folks", "d": "4/2016"}, {"body": "good catch updated", "d": "4/2016"}, {"body": "rwjblue seems clarity docs order", "d": "4/2016"}, {"body": "whoops duplicate", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "pushed release beta branches fix things take minutes travis update bower repo", "d": "4/2016"}, {"body": "think possible target controllers specific instance router begins searching upwards leafmost active route way top generally absence example assuming want operate specific instance known template specific lower controller general want operate single thing available lexical scope template pass action invoking example hbs instead trying access templates context controllercomponentetc hbs", "d": "4/2016"}, {"body": "thanks rwjblue fact providing route action addon mixin component sends upward said route action named internally component sake controllers nested route structure route mixin lt component setup parent template component calls child route action action named parent child route resulting weird behavior got public api working around renaming parent template component sendaction amp receivingsending route wanted investigate neater way hide addon consumer also wanted flag confusion long time ember dev associated moving away controllers could course use closure actions amp dockyard routeaction helper would break backward compat add peer dep ty add note readme", "d": "4/2016"}, {"body": "hmmm ok inspection getting another unexpected behaviour nested route structure parentjs import ember ember export default emberroute actions bar thissend foo foo wo nt fire childjs import ember ember export default emberroute actions foo fired essentially appears route fires action active route rather also impression prioritized actions hash believe controllers behave issue route action bubbling behaves way would nt expect due deprecated controllers still original action target without knowing much routeable components hard know architect lib properly love thoughts heart", "d": "4/2016"}, {"body": "hhff definitely different issue originally opened created", "d": "4/2016"}, {"body": "got nt sure stemming", "d": "4/2016"}, {"body": "yep totally fixed tested added curiosity version embera null think makes sense thoov quick audit else might broken", "d": "4/2016"}, {"body": "curiosity version embera null think makes sense mmun asking read api docs see indicated one way another still kind ambiguous could probably make argument either way sometimes use safety guard functions expecting list argument eg javascript maplistvalues list return embera list map item gt could convinced nt purpose", "d": "4/2016"}, {"body": "issue fixed merged", "d": "4/2016"}, {"body": "thanks catching workmanw", "d": "4/2016"}, {"body": "rwjblue pleasure random fact started using embertry test app default stable beta canary setting nightly cron run tests scenarios email failures first night caught ever muster cycles write blog post", "d": "4/2016"}, {"body": "seems like example work either embercomputedsort always required sortproperty referring array properties see though think could nice shorthand simple property", "d": "4/2016"}, {"body": "see long conversation ultimately closed", "d": "4/2016"}, {"body": "ok thanks clarifying", "d": "4/2016"}, {"body": "rwjblue yeah forgot spruce seems like want use simpler syntax use", "d": "4/2016"}, {"body": "working expected synchronous construct wish preserve asynchronously must capture bind", "d": "4/2016"}, {"body": "info tried updating ios still get", "d": "4/2016"}, {"body": "fernandodrumond looks like error app code ember undefined js user feedback error function error error transition var defaultmessage errorsdefault var message null", "d": "4/2016"}, {"body": "sorry pixelhandler introduced bug unrelated issue fixed verify works desktop iphones iphone", "d": "4/2016"}, {"body": "fernandodrumond add element css check fixes", "d": "4/2016"}, {"body": "hi serabe thanks suggestion case matter css class supposed assigned element assigned believe binding error jus ignored said works properly desktop iphone version", "d": "4/2016"}, {"body": "similar problems safari mobile past rendering problems solved using css rule solve problem could recreate problem twiddle staging server password protected", "d": "4/2016"}, {"body": "sorry serabe project released protect staging last couple weeks available wwwmovistarmasquefanscom try recreate problem twiddle post thanks lot", "d": "4/2016"}, {"body": "hi fernandodrumond time reproduce bug", "d": "4/2016"}, {"body": "fernandodrumond able upgrade app current release ember unlikely patches made ember release especially since lts release close solve issue using ember would best find workaround repo example reproduces bug perhaps reach embercommunityslackcom help channel assistance thanks", "d": "4/2016"}, {"body": "hi guys able reproduce bug separately pixelhandler could nt update app recent ember version nearly going production short amount time agree next time start project using current release nt make sense keep supporting version thank anyway help", "d": "4/2016"}, {"body": "also experiencing issue workaround suggestion add transform button", "d": "4/2016"}, {"body": "reserving instead change branding symbol avoid interfering", "d": "4/2016"}, {"body": "supposed filter array values callback true give inverse result specified actual behavior made twiddle mirrors example given ruby docs demonstrate consistency frankly nt like confusing much way using ruby confusing nt get values rejected get values remain rejected values filtered always recommend included using simply inverting predicate much easier reason opinion", "d": "4/2016"}, {"body": "tyre docs explain returns items falsey value result callback function appears behavior docs describe well implementation test linked robbiepitts suggesting feature change reject expected reject returns array items provided callback return truthy value happens reject returns array items provided callback returned falsey value expected callback return truthy value actual callback returned falsey value thing", "d": "4/2016"}, {"body": "came recordarray problem reject returning totally unexpected results ca nt seem reproduce means probably predicate mistake end closed", "d": "4/2016"}, {"body": "cc raytiley", "d": "4/2016"}, {"body": "raytiley working twiddle using ember", "d": "4/2016"}, {"body": "pixelhandler thanks actually inprogress fix going tidy test etc weekend", "d": "4/2016"}, {"body": "per contributingmd yellow banner suggested click read post issue qa help better directed appropriate medium stackoverflow discourse talk mine may help", "d": "4/2016"}, {"body": "thank issue reproduction would mind submitting failing test way easier confirm squash properly", "d": "4/2016"}, {"body": "cc raytiley", "d": "4/2016"}, {"body": "remapping seems like form shows url query params finalized puts appear controller still need work bit see correct solution least get failing test written later tonight", "d": "4/2016"}, {"body": "fixes issue still need write tests make sure nt break anything else", "d": "4/2016"}, {"body": "past week started working new app ember also tried lts release bug persists error saw allowed one controller property map query param key map one controller app queryparams set controller using ember error config uses baseurl router indexroute action requires refresh queryparam value changes", "d": "4/2016"}, {"body": "thanks looking", "d": "4/2016"}, {"body": "til route model hook results error using reset router target state fix wo nt work going revert add test cover regression", "d": "4/2016"}, {"body": "jquery bug guess fix", "d": "4/2016"}, {"body": "seems like browser inconsistency bug review bug ember little ability modify browser event behaviors", "d": "4/2016"}, {"body": "close bug jquery think ember uses jquery eventing system normalize events think", "d": "4/2016"}, {"body": "seems like browser bug possible jquery could try normalize ideally addressed ie team possibly already fixed edge", "d": "4/2016"}, {"body": "dynamic segments name deepest one clobbers params stored single pojo names need unique generally would name postid commentid", "d": "4/2016"}, {"body": "aware fact names dynamic segments must unique find constraint intuitive obvious read nothing constraint documentation however changing uniqueness fixed problem thank much rwjblue", "d": "4/2016"}, {"body": "likely find good place document", "d": "4/2016"}, {"body": "rwjblue maybe could precise dynamic segment name must unique route hierarchy", "d": "4/2016"}, {"body": "fknoll created issue guides repo regarding constraint intuitive obvious nature using dynamic segments defining routes thanks bring", "d": "4/2016"}, {"body": "closing favor", "d": "4/2016"}, {"body": "thanks adamdonahue emberjs repo helpful place share feedback emberdata repo though may want try rephrase feedback specific actionable follow", "d": "4/2016"}, {"body": "using mirage development environment mirage return data provided curious written", "d": "4/2016"}, {"body": "believe text coming guides source guides link", "d": "4/2016"}, {"body": "cc locks best report issue", "d": "4/2016"}, {"body": "adamdonahue think issue posted guides would helpful could specific problems statement seems vague", "d": "4/2016"}, {"body": "understand missing clarity statement instead likely misunderstanding finder methods take model class key rather route path", "d": "4/2016"}, {"body": "stating link singular plural appears implied linked specifically would clearer keep things consistent throughout without automagically pluralizing uri path", "d": "4/2016"}, {"body": "food thought", "d": "4/2016"}, {"body": "originally method definition leaves much less room confusion however totally see move modules change using container keys left open misunderstanding", "d": "4/2016"}, {"body": "bradleypriest said finding records rental type adapter responsible translating endpoint transformation dependent adapter choose restadapter jsonapiadapter happens could something like websocket believe addressed detail section made small addendum comment clarify issue want keep tutorialquick start practical people pace delve deeper whys rest guides", "d": "4/2016"}, {"body": "able figure nonobvious solution explained attached link apparently needs set class level example code worked us", "d": "4/2016"}, {"body": "share os node version npm version etc help anyone debugs", "d": "4/2016"}, {"body": "os mac osx yosemite node npm", "d": "4/2016"}, {"body": "thanks", "d": "4/2016"}, {"body": "merge yuidoc postprocessing update recently featureflagged code trying reproduce make sure", "d": "4/2016"}, {"body": "removed yuidoc preprocessor featureflags recently added still get error", "d": "4/2016"}, {"body": "think would easier start couple trusted advisors would access close issues directly unless bot already exists feel writing one take much time giving commit people already trust", "d": "4/2016"}, {"body": "looks like bot may exist written wait php grinning sounds good trusted advisor route well prefer", "d": "4/2016"}, {"body": "discussed core team meeting today happy move forward giving access folks issue triage try get touch folks devissuetriage channel slack coming week", "d": "4/2016"}, {"body": "cool close issue", "d": "4/2016"}, {"body": "would add documentation directly lands would potentially tweak seems like good starting point one thing keep mind want document arguments hooks feel arguments somewhat wrongbad want document hooks run order", "d": "4/2016"}, {"body": "mmun sounds like good plan thanks working", "d": "4/2016"}, {"body": "mmun alternatives extend time bindings allowed create time nt think need alternative pointing guide", "d": "4/2016"}, {"body": "good point", "d": "4/2016"}, {"body": "someone wants give shot meantime please", "d": "4/2016"}, {"body": "take stab", "d": "4/2016"}, {"body": "robbiepitts thanks much hit devember channel community slack trouble", "d": "4/2016"}, {"body": "supported way mutate ember array cc rwjblue", "d": "4/2016"}, {"body": "would expect set first item today though suppose think call works somewhat surprising ca nt set", "d": "4/2016"}, {"body": "would expect call either sets raises assertion", "d": "4/2016"}, {"body": "serabe ya agree silently failing nt good would lean towards making error think open suggestions krisselden mmun though", "d": "4/2016"}, {"body": "setting raise error yes might possible introduces errors people apps nt previously eg twoway binding guess would pretty rare", "d": "4/2016"}, {"body": "ya seems rare also likely source bugs", "d": "4/2016"}, {"body": "perhaps clarity added api docs set doc mention helper method get something since listed property one would think ok case", "d": "4/2016"}, {"body": "resolved", "d": "4/2016"}, {"body": "rwjblue brilliant love thank", "d": "4/2016"}, {"body": "cc stefanpenner rwjblue", "d": "4/2016"}, {"body": "yup seems like bug offirgolan cycles failing test would sweet im going skim code see may going sideways", "d": "4/2016"}, {"body": "believe issue cp super nt bother super wrapping super wrap nt reset actions entering cp code insert noop super wrapper super descriptor found rather circuiting believe pretty quick fix unlikely able look closely sunday noone else forgot please ping p", "d": "4/2016"}, {"body": "sweet dont much free time unfortunately find spare moment ill whip test thanks taking", "d": "4/2016"}, {"body": "submitted couple tests fix needs review", "d": "4/2016"}, {"body": "thanks rob sunday april robert jackson notifications githubcom wrote submitted couple tests fix needs review receiving mentioned reply email directly view github thanks offir golan", "d": "4/2016"}, {"body": "see update going close track underlying issue instead thank reporting hopefully get something place help prevent sort trollage near future", "d": "4/2016"}, {"body": "nt nice semantically seems better semantically imo ideal example thing less clear going also logic would repeated class might might required sure could avoided even preferred syntax might able cram logic single function would nt want anyway", "d": "4/2016"}, {"body": "guess matter personal preference clearer mind choice whether include certain css class belongs definition clearest said still think way works limiting compared handlebars templates full power css classes add value value part understand high priority issue someone picks work cool case cool", "d": "4/2016"}, {"body": "yoranbrondsema seems like question rather emberjs issue docs clear regarding use also regarding question plans make computed property perhaps search rfc repo issues pull requests plans formulated features enhancements", "d": "4/2016"}, {"body": "yoranbrondsema sure handles exactly logic bleed containing template component set component class containing template see twiddle example moving calculations whether available level works case might way achieve", "d": "4/2016"}, {"body": "thank suggestion acorncom works indeed say logic belongs inside component must implemented containing template kind point well many ways solve case emberjs flexible use computed properties inside templates therefore feels strange limitation pixelhandler good idea sure belongs rfc nt think substantial enough maybe core team member advise issue", "d": "4/2016"}, {"body": "yoranbrondsema like propose core team consider featureenhancement best bet would rfc issue conclude question like feature request feels kind like artificial limitation classnamebindings static array especially given previous workaround plans make classnamebindings computed property sure technical reasons yet case would hard overcome sounds like like propose static array computed property since many ways accomplish conditional classnames component perhaps path forward use template perhaps see contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo history emberjs issue tracker repo feature issues moved rfc repo issues typically tracking bugs potential bugs", "d": "4/2016"}, {"body": "pixelhandler gotcha opened rfc issue", "d": "4/2016"}, {"body": "closing infavor referenced rfc", "d": "4/2016"}, {"body": "clear running tests using", "d": "4/2016"}, {"body": "typically questionshelp asked discourse stack overflow tracker specifically tracking bugs", "d": "4/2016"}, {"body": "doc bug", "d": "4/2016"}, {"body": "tests generally pass suspect sort environment issue causing failures based failure pasted complete guess would exception properly handling rn", "d": "4/2016"}, {"body": "hmm smells like windows line endings", "d": "4/2016"}, {"body": "edited title clarity thanks rwjblue stefanpenner tips went modified regex fork nt seem address issue curiously function nt appear running windows example added consolelog reran build commands console log nt ever fire expected code would run build process also noticed emberjs repo nt gitattributes file automatically normalize line endings collaborators issued pr add behavior repo feel free reject previous exclusion conscious decision", "d": "4/2016"}, {"body": "amazingjaze nice find adding gitattributes normalized line endings", "d": "4/2016"}, {"body": "amazingjaze still issue addition", "d": "4/2016"}, {"body": "rwjblue yea issue still persists addition give us less cause worry line endings culprit future mentioned last update function nt appear getting called building ember windows", "d": "4/2016"}, {"body": "found comment check nt auto crlf", "d": "4/2016"}, {"body": "serabe thanks link able investigate follow later week", "d": "4/2016"}, {"body": "still issue deprecation longer check string safestring seen emberhandlebarssafestring needs extend internal safestring class right constructor returns internal class prototypes nt lineup instanceof returns false", "d": "4/2016"}, {"body": "dustyjewett please open separate issue track though likely say nt think check right way check thing", "d": "4/2016"}, {"body": "kboucher nice work forming solution see discussion aria use rfc perhaps comment rfc well since ia featureenhancement request see contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo may good idea get discussion going address concerns raised regarding performance", "d": "4/2016"}, {"body": "performance concern suggested new api pr would great guys could take look give cents", "d": "4/2016"}, {"body": "features generally discussed repository create issue feature requests pull request propose new feature closing issue nt really bug framework please follow rfc issuepr interested taking mentioned pr rfc need wrestle adding additional api surface shortterm likely negative performance impact much better long term plan angle bracket components invocation site supply attributes wants things work going close pr please open rfc flesh discussion", "d": "4/2016"}, {"body": "cc stefanpenner rwjblue", "d": "4/2016"}, {"body": "ya sorta known cc machty trek", "d": "4/2016"}, {"body": "see discussion detailsexplanation sorry causing trouble think something nt support", "d": "4/2016"}, {"body": "worries thanks update", "d": "4/2016"}, {"body": "remove helpful know guides well merged pr put guides see detail link back original blog post introduced", "d": "4/2016"}, {"body": "nt going removed moving loops seem fine done design time quite unlikely pose much performance hit especially relative things like extend merge mixins etc someone demonstrate incorrect babel plugin could created said would believe overhead although would nt surprise small tlc required negligible especially relative mentioned points", "d": "4/2016"}, {"body": "stefanpenner original idea define lot classes design time starts issue cold boot last time code seemed like lot cleanup could done nickiaconis actually notice particular issue quite cases simple closures foreach inline", "d": "4/2016"}, {"body": "direct energy someone absolutely yield big win fix bugs hard time fixing without perf issues pre compiling mixins arguments extend prevent need mixing merging needing detect member would rad", "d": "4/2016"}, {"body": "acorncom fantastic anyone working getting api docs well stefanpenner would appear already migrated loops krisselden bug logic behind splits commas even part brace expansion working fix different ways take depending whether nested brace expansions supported", "d": "4/2016"}, {"body": "krisselden would love see cases foreach lines mean captured context dropped nt cost", "d": "4/2016"}, {"body": "nickiaconis nice initiative working feature curious using rfc process may help getting feature vetted well provide background documentation guidesapi docs see contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo", "d": "4/2016"}, {"body": "pixelhandler feature already exists well documented also bugs feature nt documented nobody sure implemented stefanpenner krisselden rwjblue somebody make executive decision full microsyntax brace expansion backwards compatible current broken implementation", "d": "4/2016"}, {"body": "nathanhammond understand comment nickiaconis submitted address issue believe page though still cleanup working", "d": "4/2016"}, {"body": "actually going close favor keep conversation together", "d": "4/2016"}, {"body": "rwjblue clarifying bug fix feature request", "d": "4/2016"}, {"body": "bdiz curious discussed testing channel embercommunityslackcom chatroom usually added emberrun solves testing error however bit hesitant relying private apis see would using arrayproxy objectproxy solve issue", "d": "4/2016"}, {"body": "hi pixelhandler nt know slack channel thanks letting know unfortunately arrayproxy objectproxy wo nt help need componentproxy nt seem explanation proxymixin made private originally public", "d": "4/2016"}, {"body": "nt seem explanation proxymixin made private originally public never public always public introduced idea exposing mixin feature never enabled feature subsequently removed error receiving telling tests must wrapped run loop described either following would work resolve issue emberrun gt thisget mycontent set myproperty false thisset mycontentmyproperty false unitintegration tests always run wrapped going close bug framework", "d": "4/2016"}, {"body": "tojofo great provided example repo try repo soon curious tried far resolve issue simplify feature ember addon replace jquery ui behavior depending", "d": "4/2016"}, {"body": "pixelhandler tried addon one point switch back time ago git logs nt tell switched back might issue around ember going repo simple make code repeat issue intend looking ember source resolve issue mean time raised issue", "d": "4/2016"}, {"body": "workmanw great prolly best track next steps pr keep open may helpful run behavior search emberjs issues always clear issue stems start looking least", "d": "4/2016"}, {"body": "submitted downgrade routerecognizer used ember get fixed upstream tracking", "d": "4/2016"}, {"body": "workmanw working fix curiosity remove explicit definition index route fix problem fix either way wonderin", "d": "4/2016"}, {"body": "jmeas mean line tried removing line issue still happens", "d": "4/2016"}, {"body": "issue fixed pr", "d": "4/2016"}, {"body": "jmeas running errands make time later verify fix demo repo app", "d": "4/2016"}, {"body": "ember issue resolved rolling back going close issue like least one reviewer mergerelease try updating effort tracked though", "d": "4/2016"}, {"body": "looks like issue closed", "d": "4/2016"}, {"body": "take stab", "d": "4/2016"}, {"body": "awesome thanks", "d": "4/2016"}, {"body": "fixing embercliembercli would fix even without changes chromefirefox", "d": "4/2016"}, {"body": "agreed think possible make assertion understandable going label leave open bit see takers", "d": "4/2016"}, {"body": "pixelhandler rfcs readme many changes including bug fixes documentation improvements implemented reviewed via normal github pull request workflow changes though substantial ask put bit design process produce consensus among ember core team seemed like documentation improvement substantial feature would need design process maybe wrong requesting feature seem imply feature requests require rfc", "d": "4/2016"}, {"body": "ya agree bad error message bug", "d": "4/2016"}, {"body": "take stab one", "d": "4/2016"}, {"body": "eddify cool nt know like unit test asserts example test confusing error currently get", "d": "4/2016"}, {"body": "closing see recommendation path forward", "d": "4/2016"}, {"body": "rwjblue perhaps could reopen issue due", "d": "4/2016"}, {"body": "good point reopened", "d": "4/2016"}, {"body": "serabe review", "d": "4/2016"}, {"body": "yes quick test shows rest pos params updates first one working parts positional parameters take look", "d": "4/2016"}, {"body": "fixes problem htmlbars glimmer support positional parameters way wo nt need fix", "d": "4/2016"}, {"body": "mmun anything else bug verification", "d": "4/2016"}, {"body": "dennislaumen needs bug verification label mostly reproducing error way seeunderstand usually embertwiddlecom emberjsbincom", "d": "4/2016"}, {"body": "hi mmun made improvements paging sorting example problem faced occur anymore believe still problem queryparams code nt problems closing issue withdraw pr thanx", "d": "4/2016"}, {"body": "dhaulagiri closed since", "d": "4/2016"}, {"body": "think would still problem ember since ember pointing older release nt much done glimmer work lands", "d": "4/2016"}, {"body": "confirm much get updated later sha requires intricate knowledge changes glimmer relate ember worked next days believe", "d": "4/2016"}, {"body": "take helper tests things touched", "d": "4/2016"}, {"body": "wanted jump thank everyone helping us apologies delay slowly digging backlog closer appears github progress bar lot lock ed items already prs waiting review", "d": "4/2016"}, {"body": "take test", "d": "4/2016"}, {"body": "take local lookup test", "d": "4/2016"}, {"body": "looks like file testing actual method appears covered nt seem unit testing actual lib maybe chadhietala asakusuma since touched helperlookuprelated tests confirm", "d": "4/2016"}, {"body": "joelkang ca nt recall anything related question exact files touched related look git commit touched might jog memory", "d": "4/2016"}, {"body": "asakusuma oh meant since working local lookup test see commonality", "d": "4/2016"}, {"body": "nt appear testing local lookup also local lookup working glimmer right working fixing", "d": "4/2016"}, {"body": "render env tests snipped looking bootstrap tests many need ported functionality using", "d": "4/2016"}, {"body": "ok rereviewing attached gist turns duplicate happening property properly reset method invocations calling within actually invoking function started working fix believe solution nt quite simple likely attempt introduce errorwarningetc attempt call parent class super function invoke mimics behavior within classes languages thank reporting issue sorry taken long fully understand going going close issue continue tracking problem", "d": "4/2016"}, {"body": "please confirm whether filed jquery tracker instead close one appreciated", "d": "4/2016"}, {"body": "problem project use jquery fix would great could filed jquery tracker jquery integration checked", "d": "4/2016"}, {"body": "sure jquery issue first using jquery directly works without problems second returning action handler ember spits nasty warning input box behaves looks expected", "d": "4/2016"}, {"body": "avdv error message tries clear feel nasty inside action handler tell bubble parent target since nt defined one get error", "d": "4/2016"}, {"body": "error message tries clear feel nasty nasty sense bad warning message nasty things get nasty warnings pun intended", "d": "4/2016"}, {"body": "addressed additional items still needed updated description include checklist toddjordan think might want try pick adding support additional cases yuidoc preprocessor", "d": "4/2016"}, {"body": "tue apr robert jackson notifications githubcom wrote addressed additional items still needed updated description include checklist toddjordan think might want try pick adding support additional cases yuidoc preprocessor receiving mentioned reply email directly view github", "d": "4/2016"}, {"body": "vkoves nt think bug ember curious used rsvp post code example demonstrate issue", "d": "4/2016"}, {"body": "vkoves perhaps reach community chatroom even stackoverflow see solutions others found know many developers working heavily promises expect ideas available slack help channel code example reproduces issue way others view sample code might get feedback close like discuss perhaps reach help channel chat regarding specific version app using potential solutions also worth investigating emberconcurrency addon", "d": "4/2016"}, {"body": "afraid skilled enough ember recreate issue easily take look ended using statements run promises consequently instead concurrently take look", "d": "4/2016"}, {"body": "addition solution put forward rwjblue another way solve edited js bin demonstrate", "d": "4/2016"}, {"body": "closing issue comment op seems indicate problem resolved feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "evasive working cleaning issue backlog emberjs close issue find still issue feel free comment open new issue", "d": "4/2016"}, {"body": "rwjblue getting error ci server despite installed suggestions", "d": "4/2016"}, {"body": "mfeckie likely due", "d": "4/2016"}, {"body": "rwjblue interesting htmlbars pinned", "d": "4/2016"}, {"body": "ok released emberclihtmlbars change reverted nt want leave folks bad state track issue", "d": "4/2016"}, {"body": "related originally reported issue going close keep current assertion around least help folks migrating emberlegacyviews addon identify locations using paths templates", "d": "4/2016"}, {"body": "rwjblue much appreciated thanks helpful responsive open source devs nt get enough love", "d": "4/2016"}, {"body": "fixed merged january backported easy though", "d": "4/2016"}, {"body": "serabe ya believe exactly", "d": "4/2016"}, {"body": "closing favor", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "closing issue understanding resolution reached feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "batjaa app using pods like sample twiddle part problem nt cover pods documentation closing issue seems behaving expected feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "fair enough anyone stops post use naming convention", "d": "4/2016"}, {"body": "get update cc stefanpenner krisselden", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "status change", "d": "4/2016"}, {"body": "resolved", "d": "4/2016"}, {"body": "closing issue issue resolved understand reading thread feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "several things going interacting poorly starts instruct router try coerce query param number whenever internally relies read current value number field problem value always string separate property used case internally check see new value different old value avoid cursor jumping around check failing value type keeps switching", "d": "4/2016"}, {"body": "ducarroz another clone embertwiddle example using lts release behaves like example shared since lts version behavior works since supported much longer expected case would best use workaround unlikely receive patch releases especially since lts release currently close like discuss perhaps reach embercommunityslackcom help channel chat regarding specific version app running potential alternative solutions", "d": "4/2016"}, {"body": "seeing error microsoft edge windows one users reproduce though", "d": "4/2016"}, {"body": "still problem great see something reproducible work tracking", "d": "4/2016"}, {"body": "still problem great see something reproducible work tracking gladly reopen addressed", "d": "4/2016"}, {"body": "justinhackin checkbox attribute see nt see attribute also nt see listed attribute input helper close reproduction issue steps reproduce issue please reopen thanks", "d": "4/2016"}, {"body": "believe global attribute", "d": "4/2016"}, {"body": "samtes able create demonstration issue repo find workaround", "d": "4/2016"}, {"body": "samtes perhaps reach community chatroom code example reproduces issue way others view sample code action might get feedback close like discuss perhaps reach help channel chat regarding specific version app using potential solutions know many developers working nontrivial apps would expect ideas available slack help channel perhaps see related maybe need full path route want transition maybe route needs dynamic segment added others ca nt really troubleshoot without code snippets", "d": "4/2016"}, {"body": "closing issue since thread resolved support role better avenues like pixelhandler mentioned feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "cc chancancode wycats current work related guys take look", "d": "4/2016"}, {"body": "mohlek able create repo code suspect buggy dependencies app perhaps someone help debug nt bug ember closing perhaps reopen issue reproduced example repo", "d": "4/2016"}, {"body": "michaelselberg create example steps reproduce issue try", "d": "4/2016"}, {"body": "michaelselberg perhaps reach community chatroom even stackoverflow see solutions others found code example reproduces issue way others view mobile safari might get feedback know many developers working apps using mobile safari would expect ideas available slack help channel close like discuss perhaps reach help channel chat regarding specific version app using potential alternative solutions", "d": "4/2016"}, {"body": "please reopen issue rfcs repo nt one already link back", "d": "4/2016"}, {"body": "fixed sure twiddle guess closed", "d": "4/2016"}, {"body": "thanks serabe", "d": "4/2016"}, {"body": "resolved weeks ago closing issue still missing something feel free comment open new issue want docs accurate", "d": "4/2016"}, {"body": "rwjblue update whether still needed qunit special comparison constructor null", "d": "4/2016"}, {"body": "believe finally got cleaned guides please open issue still trouble", "d": "4/2016"}, {"body": "shipped today including", "d": "4/2016"}, {"body": "private api thank much digging robbiespeed closing issue due reliance private api improved public api worked moment released soon feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "drewclauson understand example like thanks today clicked embertwiddle links clicked button alerts show emberman ember returns emberman ember returns emberman", "d": "4/2016"}, {"body": "closing feel free comment need reopen", "d": "4/2016"}, {"body": "serabe mixonic rwjblue resolution issue", "d": "4/2016"}, {"body": "locks afaik called component helper even components per se wrote solution blog discussion delayed new components done memory fail usually", "d": "4/2016"}, {"body": "workaround described works without problems solves issue", "d": "4/2016"}, {"body": "still present ember workaround still works properly", "d": "4/2016"}, {"body": "ruz ember action input component emits event open console see epreventdefault function due would need handle submit event like mentioned closing issue seems like small misunderstanding feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "closing issue op problem nt private filter turned behaviour also tweaked upcoming api viewer feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "closing issue removed api plain feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "closing issue seem like bug emberjs krisselden provided way forward comment bove feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "deploying guide tutorial moment improvement suggestions sunks please report issues repository stefan linked", "d": "4/2016"}, {"body": "emrvb still relevant", "d": "4/2016"}, {"body": "per comments looks like improvements close please comment reopen", "d": "4/2016"}, {"body": "yes object creation one expensive things initial render nt component js file skip creation step pass attributes template directly significantly faster particularly glimmer works controller case instantiate one controller per may hundreds thousands components screen object creation cost really adds said perhaps templateonly components rare enough performance wins nt worth confusion programming model performance improvements planned component creation although always cost associated grantovich love know use case maybe another way injecting something global scope", "d": "4/2016"}, {"body": "another good solution helper returns service example following helper js apphelpersservicejs import getowner embergetownerpolyfill export default emberhelperextend compute servicename let owner getowner return ownerlookup could template could also", "d": "4/2016"}, {"body": "tomdale thanks context specific use case multitenant app global injection exposes object represents current tenant various components make use tenant attributes name logo etc components otherwise static chunks content limitation would templateonly rwjblue seems like promising approach give shot one thing concerns whether would cause problems helper named injection instance defining service injection helper returns service possiblesupported good means upgrade templateonly component real component without changing access pattern", "d": "4/2016"}, {"body": "one thing concerns whether would cause problems helper named injection suppose depends cause problems means absolutely helper name property ember happily allow however helper always win good use case shipit", "d": "4/2016"}, {"body": "absolutely helper name property ember happily allow however helper always win great nt matter one wins return object concern whether would winner whether situation would cause errorinstability try helper approach sure smileycat zooming back would also figure deal things like type things also work today template components absolutely agree bug fix since good workaround particular case update issue title reflect wider scope problem new issue could started", "d": "4/2016"}, {"body": "since solution place many somewhat related things inflight going go ahead close", "d": "4/2016"}, {"body": "saladfork get pr", "d": "4/2016"}, {"body": "closing issue since working designed feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "closing issue angle bracket components currently revisited issue might relevant anymore feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "closing issue resolution seems reached feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "closed", "d": "4/2016"}, {"body": "mohamadatieh try recreate twiddle make sure bug help thank", "d": "4/2016"}, {"body": "mohamadatieh sounds like worked issue close like discuss perhaps reach help channel chat regarding specific version app using", "d": "4/2016"}, {"body": "closing issue message mentions particular issue fixed feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "locks previously confirmed fix back ported", "d": "4/2016"}, {"body": "oops still leaving closed lts released currently far back things likely backported", "d": "4/2016"}, {"body": "seems like bug please open pr bryanaka add tests make sure happen future thank bryanaka reporting", "d": "4/2016"}, {"body": "alright serabe pixelhandler opened pr", "d": "4/2016"}, {"body": "bryanaka thank much let wait core member review maybe rwjblue give quick glance", "d": "4/2016"}, {"body": "agree stefanpenner going close please let us know something missed", "d": "4/2016"}, {"body": "closing issue gone repository like mentioned feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "closing since original issue seems resolved vincz fixed last comment feel free reopen still issue thank", "d": "4/2016"}, {"body": "closing favor workaround seems work case well thank reporting", "d": "4/2016"}, {"body": "serabe yeah workaround would work normal component extended one eg component extended textarea component case unfortunately workaround wo nt work attributebindings rows moment directly update dom attribute even though bad way suggestions", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "new feature go rfc process andor implemented addon please feel free reopen issue link back issue", "d": "4/2016"}, {"body": "vatosteve provide steps reproduce issue code example demonstrate issue", "d": "4/2016"}, {"body": "pebcak error nt include thissuper arguments didtransition", "d": "4/2016"}, {"body": "wycats rwjblue poke trentmwillis fine nt see", "d": "4/2016"}, {"body": "close issue feel free reopen submit rfc want discuss thank", "d": "4/2016"}, {"body": "implement workaround drawback url updated reflect transition error route avoid drawback use instead route happy follow discussions emberjsguides better docs around substates going go ahead close", "d": "4/2016"}, {"body": "closing issue previous comment seems resolve issue feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "think good alternative pattern given xtian closing", "d": "4/2016"}, {"body": "seems documentation issue close need clarify docs please open issue guides repo reference issue thanks", "d": "4/2016"}, {"body": "closed fix krisselden ca nt find link atm makes terminal expand", "d": "4/2016"}, {"body": "danwang helper allow path forward", "d": "4/2016"}, {"body": "submitted fix", "d": "4/2016"}, {"body": "point declare failure highly doubt issue get fixed someone figure fix pr branch considered support legacy controller addon support things like itemcontrollers completely removed code base point sorry could nt get regression fixed", "d": "4/2016"}, {"body": "nt think terrible leave breaks semver think people following ember development know significant changes advice would upgrade past using refactor first continue upgrading", "d": "4/2016"}, {"body": "going go ahead close intended observable often nt work anyways deriving state viewcomponent hierarchy error prone completely removed framework sorry nt get time figure fix", "d": "4/2016"}, {"body": "landed thanks everyone", "d": "4/2016"}, {"body": "collectionview removed code base sorry getting fixed quickly originally reported", "d": "4/2016"}, {"body": "tested provided twiddle canary seems working properly sorry delay", "d": "4/2016"}, {"body": "closing issue bug please reopen rfcs repository like continue discussing feature proposal discussion routingquery params services lately", "d": "4/2016"}, {"body": "may bug mentioned months ago ca nt really tell going demo going close happy reopen demo explained along steps repro", "d": "4/2016"}, {"body": "closing favor", "d": "4/2016"}, {"body": "still relevant", "d": "4/2016"}, {"body": "utilityboy bug supported version ember something version fixed close please reopen find issue current ember release including lts version thanks", "d": "4/2016"}, {"body": "closing presently routes application route insert dom root element style application view current solution emberjs lts support lts", "d": "4/2016"}, {"body": "releases supported w bug fixes six releases weeks security fixes releases weeks depending level support require stick emberlegacyviews far longer details", "d": "4/2016"}, {"body": "funtusov address previous comment thanks", "d": "4/2016"}, {"body": "going close issue still issue great get twiddle jsbin showing issue", "d": "4/2016"}, {"body": "closing issue discussion seems reached sort resolution also matter angle bracket components heavy consideration original concern might valid anymore labelling issue merely classic components maintain mirroring semantics feasible change behaviour currently feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "since affects going go ahead close sorry could nt get quicker", "d": "4/2016"}, {"body": "fix included", "d": "4/2016"}, {"body": "hmm upgrading ember bowerjson removing taras abortandtransitionto workaround still error stacktrace comment", "d": "4/2016"}, {"body": "johnkurkowski try get simple embertwiddle jsbin reproduction together code fresh mind probably figure pretty quick reproduction", "d": "4/2016"}, {"body": "raytiley ya go", "d": "4/2016"}, {"body": "johnkurkowski think fix error hoping finish testing tomorrow pester rwjblue merge", "d": "4/2016"}, {"body": "still seems issue", "d": "4/2016"}, {"body": "fixed also fixed", "d": "4/2016"}, {"body": "coleythebest close one issue pops newer release please reopen thanks", "d": "4/2016"}, {"body": "thinking changed bit initial angle bracket component implementation removed reintroduced updated rfc details path forward type thing closing since feature nt exist codebase", "d": "4/2016"}, {"body": "could use force dom elements value back expect way afaik keep internal external state sync going close unlikely fix internal state representation issue mentioned would need drop lower level dom api handle sorts things", "d": "4/2016"}, {"body": "closing issue since wo nt get fixed even gets acknowledged feel free reopen issue think still justified thank sorry nt get addressed time", "d": "4/2016"}, {"body": "problem created twiddles dynamic segment loading template gt bug dynamic segment loading template gt works loading template dynamic segment gt works", "d": "4/2016"}, {"body": "thijsvdanker uncommented demonstrate issue", "d": "4/2016"}, {"body": "sunsetlincoln second transition done mainroute controller moment reflecting codebase refactor route better demonstrate issue", "d": "4/2016"}, {"body": "sunsetlincoln refactor done transitions take place", "d": "4/2016"}, {"body": "closing previous comment gives path forward feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "closing debug system revamped bit continue iterating", "d": "4/2016"}, {"body": "closing favor pr", "d": "4/2016"}, {"body": "general demo canary demo fail way consider regression definitely agree could better submitted correct issue regexp nt pass ensure always returns aka nt throw errors closing favor tracking pr", "d": "4/2016"}, {"body": "confirmed still issue current canary", "d": "4/2016"}, {"body": "closing issue since story around angle bracket components revisited feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "closing issue nt seem like ember bug discussion got stale feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "mmun branch suffer problem", "d": "4/2016"}, {"body": "issue still open close still something needs open please comment revisit", "d": "4/2016"}, {"body": "longer true closing", "d": "4/2016"}, {"body": "closing issue ember behaving expected even underdocumented slightly unexpected feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "open pr going close nt seem bug perse", "d": "4/2016"}, {"body": "issue fixed anyone wants submit pr considered otherwise need close thank report", "d": "4/2016"}, {"body": "also seeing error ember case even passing query params call blowing query params gathered query param works well elsewhere sure related tot fact call occuring aftermodel hook query param definition", "d": "4/2016"}, {"body": "believe raytiley fix address also", "d": "4/2016"}, {"body": "tehmaestro bugant since supported long time much longer anticipated since lts unlikely patches added said couple workarounds issue closing difficultly alternative implementations perhaps reach embercommunityslackcom help channel", "d": "4/2016"}, {"body": "topic relative discussed rfcs repository love discussion happen problem reported thread falls model situation emberjs thus stack overflow better choice even care issue anymore months later p", "d": "4/2016"}, {"body": "closing issue linked bug report closed feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "closing issue due lack information submitter feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "resolved time ago closing", "d": "4/2016"}, {"body": "closing issue seems emberjs bug feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "basically stopped working long stack stitching stuff realize way make chrome print default working chrome folks making custom printers things like ember inspector could provide higher fidelity output may avenue fix issue ifwhen lands motivated work addition chrome folks apparently going working ability user land libs annotateinform runtime source stacks theory would allow errors stack explorer work expected interested pursuing hope lands revisit either two become available different solution presented", "d": "4/2016"}, {"body": "hello problem ca nt write automated tests ember always generates new ids uses html id attribute instead custom one people react use attributes instead using could uses custom attribute custom job todos think something similar ember hard solve lot issues regarding automated tests selenium similar tools need target elements precision thank", "d": "4/2016"}, {"body": "found solution problems posting people get using selenium use custom data attributes ember app instead using attribute selenium tests target attributes checks", "d": "4/2016"}, {"body": "mixonic resolution issue reporting go", "d": "4/2016"}, {"body": "support even emberlegacyviews completely gone current beta branches think anything point someone else wanted fix would submitted pr select special kind horrible removed instead migrated component number addons provide much better select implementations fully compatible", "d": "4/2016"}, {"body": "someone verify whether bug still present latest", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "reproduce twiddle", "d": "4/2016"}, {"body": "issue reported version ember version supported much longer originally promised ember lts release unlikely patches applied release think workaround alternate implementation try avoid issue correct close", "d": "4/2016"}, {"body": "missed chance think point need rfc path forward try tackle rfc sometime week closing issue though since bug", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "reported jsbin exhibit issues canary closing happy reopen misinterpreted", "d": "4/2016"}, {"body": "updates package manager files updated published assets contain license information likely due chadhietala hard work closing", "d": "4/2016"}, {"body": "closing favor failing test case pr mentioned", "d": "4/2016"}, {"body": "closing issue new lifecycle hooks documented feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "someone verify whether bug still occurring latest ember", "d": "4/2016"}, {"body": "mostly documentation issue believe using param name nested routes going sorts issues might possible detect issue warningassertion unsure would take away legit cases would want behavior", "d": "4/2016"}, {"body": "rwjblue could linting rule turned default suggest close issue open one guides clarification nested routes section", "d": "4/2016"}, {"body": "sure seems good guides info may also want add info routermap api docs", "d": "4/2016"}, {"body": "locks close issue open issue emberjsguides repo", "d": "4/2016"}, {"body": "cc luisah", "d": "4/2016"}, {"body": "slack rwjblue suggesting writing qps service basically allows subscribe changes single qp service would love flesh maybe write addon rfc", "d": "4/2016"}, {"body": "experienced upgrading knownasilya help", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "knownasilya using similar qp setup service mixins company main app since would love use addon instead help rfc ton urlrelated features good ideas bad ideas tests hopefully nice collection edge cases run", "d": "4/2016"}, {"body": "would love board feel free submit issuesprs", "d": "4/2016"}, {"body": "main files moved indexjs files loader falls back indexjs believe issue resolved", "d": "4/2016"}, {"body": "created two failing tests went ahead created failing tests default code path code path run tests turning feature flag also fails model hook tried two hooks far anyone know whats featureflag featuresmd yet", "d": "4/2016"}, {"body": "bug pretty tricky caused interaction tildeorouterjs emberjsroute routerjs queryparamtransition generates empty transition noop transition emberjsroute needs know leaf node lookup query params controller magic emberjsroute finalizequeryparamchange finally gets called transition passed contains information current route empty array really seems like fix go tildeorouterjs probably around line something like think might fix sure would break anything else", "d": "4/2016"}, {"body": "actually nt fix even get still problems getting controller", "d": "4/2016"}, {"body": "definitely caused fact called yet called hook expects route already setup got love comments", "d": "4/2016"}, {"body": "hi issue still valid", "d": "4/2016"}, {"body": "going close happy reopen still issue", "d": "4/2016"}, {"body": "sorry lingered long unable solve issue time point removed makes issue obsolete apologize lingered long however going go ahead close", "d": "4/2016"}, {"body": "moved according stefanpenner last comment please continue discussion thank everyone", "d": "4/2016"}, {"body": "addresses", "d": "4/2016"}, {"body": "also seeing issue ever get resolved", "d": "4/2016"}, {"body": "zentmq use regular put action passing empty string never intentionally supported feature far know", "d": "4/2016"}, {"body": "primary purpose issue track performance regression initial rendering occurred ember absolutely still many things worked mentioned gavinjoyce last comment generally reached parity initial rendering speed definitely much faster rerendering going close larger meta issue absolutely keep eye things progress towards glimmer", "d": "4/2016"}, {"body": "closing favor failing test case pr", "d": "4/2016"}, {"body": "anything else need issue close", "d": "4/2016"}, {"body": "acorncom nt still need fixed error still pops inside didrender far know", "d": "4/2016"}, {"body": "danconnell know happening versions ember bug bug sure end getting fixed", "d": "4/2016"}, {"body": "deprecation message basically incorrect says time nt triggered deprecation submitted address poor messages", "d": "4/2016"}, {"body": "happening least nt checked fix gets master check", "d": "4/2016"}, {"body": "warning idea comes tried computed property observers warning still persist", "d": "4/2016"}, {"body": "closing issue teddy confirmed inspectorrelated feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "moved guides repository documentation", "d": "4/2016"}, {"body": "would really nice use", "d": "4/2016"}, {"body": "rwjblue still happening attribute passed static check previous twiddle works", "d": "4/2016"}, {"body": "also experiencing problem together slugs ported example showing problem ember twiddle latest canaray emberemberdata basically makes impossible use slugs application kind fixed overwriting linkcomponent think something normally work box", "d": "4/2016"}, {"body": "mydea twiddle erroring ca nt check reproduction", "d": "4/2016"}, {"body": "hmm error get works chrome amp ff", "d": "4/2016"}, {"body": "sudden seeing ember uses rsvp relevant code looks like relevant test run test isolation passes run full test suite get", "d": "4/2016"}, {"body": "jamesarosen nt seem correct catch handler attached sync provide quick reproduction", "d": "4/2016"}, {"body": "catch handler attached sync oh maybe coming earlier test like one attaching handler expect pass", "d": "4/2016"}, {"body": "ah one nuance actually", "d": "4/2016"}, {"body": "minimal test case ember fails expect fail", "d": "4/2016"}, {"body": "minimally js test anything function assert emberrun gt emberrsvpreject type error body bad foobar assertequal fails", "d": "4/2016"}, {"body": "tested recent ember version number issues resolved last year exist possible already resolved", "d": "4/2016"}, {"body": "log way able upgrade beyond test recent embers let know maybe help us find fixed back port", "d": "4/2016"}, {"body": "jamesarosen describe expected behavior look like bug", "d": "4/2016"}, {"body": "would test something requires runloop rejects without test failing example would test paths following method js export default embersessionextend failedattempts signedin false signin username password return ajax url signin type post data username password gt thisset signedin true catch gt thisincrementproperty failedattempts return emberrsvpreject type error body invalid username password", "d": "4/2016"}, {"body": "rule thumb follows rejection end current runloop handled assume may never handled fail test handler attached end runloop fine example whoever consumer must handle rejection end current runloop", "d": "4/2016"}, {"body": "ah work", "d": "4/2016"}, {"body": "jamesarosen ya understand seems wat way much consideration tricky balance must strike others better ideas listen warned tricky balancing act", "d": "4/2016"}, {"body": "ok test helper wrap everything way test authors nt reach inside tests get bitten rejected promises js import ember ember import test emberqunit const run ember export default function testinrunloop name callback test name function assert const test return run test callback assert", "d": "4/2016"}, {"body": "jamesarosen would consider test helper antipattern solution would simply handle result callback returning run considered handled turn completes", "d": "4/2016"}, {"body": "would consider test helper antipattern doubt would option wrap test since thing catches rejection test client app test asserting method returned rejection need run calls without get turned testing mode disabled autorun seem frustrated appreciate work help issue everything suggest gets dismissed core team wants absolutely open ideas though suggestion test integration unit level method returns rejected promise certain conditions behavior conditions ears", "d": "4/2016"}, {"body": "core team wants often correlates nt cause extra painfrustration suggestions arbitrary absolutely open ideas though suggestion test integration unit level method returns rejected promise certain conditions set behavior conditions ears provide jsbin demo app problem gladly", "d": "4/2016"}, {"body": "thanks stefanpenner keep digging see turn", "d": "4/2016"}, {"body": "stefanpenner pointed right direction automatically enqueue runloops without wo nt trigger autorun error test mode means works fine", "d": "4/2016"}, {"body": "jamesarosen slowly massaging continue remove trapspain points possible recall previous state handled transparently suspect continue see improvement domain", "d": "4/2016"}, {"body": "laureanoarcanio provide ember twiddle reproducing problem", "d": "4/2016"}, {"body": "jdhines still issue seems like could probably close point", "d": "4/2016"}, {"body": "going close happy reopen need", "d": "4/2016"}, {"body": "fixed via artsyca suggestion made public", "d": "4/2016"}, {"body": "chrishonniball please check bug still present thank", "d": "4/2016"}, {"body": "going close issue issue still happy reopen bug still getting twiddle showing issue would great", "d": "4/2016"}, {"body": "cdl bantic still applicable thanks", "d": "4/2016"}, {"body": "check today", "d": "4/2016"}, {"body": "locks confirmed versions greater seem problem cleaned jsbin better job explaining bug", "d": "4/2016"}, {"body": "working well since seem affect old versions closing feel free reopen feel needed thank", "d": "4/2016"}, {"body": "rwjblue review triaging confirm closing issue", "d": "4/2016"}, {"body": "closing issue reading discussion seems like chromepolymer issue ember issue feel free correct though feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "experiencing similar issue one apps ever determine cause case", "d": "4/2016"}, {"body": "rwjblue able create ember twiddle demonstrates issue steps reproduce click go parent route click go child route type something text field click go back parent click go child route observe text field still populated value previously entered reset interesting part reproduce issue property declared component initialized object even empty object remove comment line issue occur text field empty upon transition child route expected tried various interactions hierarchy route transitions always seems occur regardless transition pattern also nt appear matter component property example plain js object emberobject happens cases reopened file another bug", "d": "4/2016"}, {"body": "munsellj expected object made defining basicform component shared instances component input content changes name property original object changed fork twiddle helps demonstrate go child route see first two instances basicform component mirror third instance given model nt shared others get around using simple computed property setting property initializer embercomponentextend model null setdefaultmodel function thisset model name null init hope helps", "d": "4/2016"}, {"body": "wcpetersen makes sense thanks response saw email notification car without even reading realized probably case made connection feel like read repeatedly blog posts still nt make connection", "d": "4/2016"}, {"body": "seems grown stale still bug feel free comment reopen issue", "d": "4/2016"}, {"body": "stefanpenner", "d": "4/2016"}, {"body": "rwjblue recent rfc affect", "d": "4/2016"}, {"body": "seeing behavior using ember method called nt appear effect see several examples using github using ember", "d": "4/2016"}, {"body": "herom still issue close", "d": "4/2016"}, {"body": "sorry completely forgot issue solved issue ever since close right away", "d": "4/2016"}, {"body": "closing issue nt believe longer relevant current ember versions feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "given current state union namely could issue closed", "d": "4/2016"}, {"body": "yes closing definitely readdress reintroduce angle bracket components", "d": "4/2016"}, {"body": "alco adrianfletcher turbomack still relevant closed", "d": "4/2016"}, {"body": "believe context rodeo pretty legacy thing original issue resolved stack overflow irc better place discuss compatibility issues locks feel free close", "d": "4/2016"}, {"body": "thanks feedback", "d": "4/2016"}, {"body": "seem like complex convoluted solutions problem real simple manage framework fighting something like handlebars linkto index tagname li link index linkto linkto tagname li link route linkto linkto tagname li link linkto could attempt seems weird supported really intent make mystery left unsure nonexperienced newcomer ember developer", "d": "4/2016"}, {"body": "angle bracket component support removed work implementing glimmer engine reopen needed", "d": "4/2016"}, {"body": "mixonic still relevant", "d": "4/2016"}, {"body": "jsbin canary still fails without warning error master today", "d": "4/2016"}, {"body": "correct fix error silent failure", "d": "4/2016"}, {"body": "mixonic tbh sure correct either two way binding nt thing done rendering", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "going close favor discussion whether add support back", "d": "4/2016"}, {"body": "rwjblue gon na go ahead close discussion happen issue supercedes one", "d": "4/2016"}, {"body": "seen additional reports believe issue likely fixed either unrelated change ember browser vendor closing", "d": "4/2016"}, {"body": "given lack feedback last year folks go ahead close issue need reopen let know", "d": "4/2016"}, {"body": "probably reproduce issue latest canary see still problem possibly ember twiddle", "d": "4/2016"}, {"body": "get twiddle jsbin pointing canary channel still seems issue", "d": "4/2016"}, {"body": "see gist", "d": "4/2016"}, {"body": "going go ahead close seems gone stale", "d": "4/2016"}, {"body": "specifically use instead javascript import ember ember import foomixin myappmixinsfoo import modulefor test emberqunit modulefor mixin foo needs service bar test works function testitworks assert const fooobject emberobjectextend foomixin thisregistryregister test subject fooobject const subject thiscontainerlookup test subject assertok subject", "d": "4/2016"}, {"body": "really love lt way tried angular react meteor ember point programming enjoyablility perspective meteor react enjoyable followed ember using embercli untill released like version looks like everything changed upgrading everything used work nt missed ember time accidently found feature requesting ember team realized last time used ember everything perfect except really annoying use everywhere solved perfect quite enjoyable use sane stack cordova solve problems effectively personally thanks ember community feature yeah emotional excited p", "d": "4/2016"}, {"body": "mylen close one issue pops newer release please reopen thanks", "d": "4/2016"}, {"body": "point would say dynamically adding routes router initialization supported sorry keeping issue open long", "d": "4/2016"}, {"body": "seanpdoyle based seeing looks like documentation issue functionality problem guides undergone major revamp since sent guides still nt clear particular issue would mind opening new issue happy work handle close issue help reduce active issues got wrong let know reopen", "d": "4/2016"}, {"body": "fix included also fixed", "d": "4/2016"}, {"body": "fix included", "d": "4/2016"}, {"body": "mikenorth poke check fixed appreciated", "d": "4/2016"}, {"body": "alexdiliberto still happening", "d": "4/2016"}, {"body": "locks yes tried ember still use workaround mentioned nt work properly", "d": "4/2016"}, {"body": "tagging something rechecked latest canary", "d": "4/2016"}, {"body": "unsure still issue nt addition reports going close happy reopen still cropping", "d": "4/2016"}, {"body": "rwjblue stefanpenner method intended public private", "d": "4/2016"}, {"body": "unsure likely need ask machty", "d": "4/2016"}, {"body": "fwiw like public", "d": "4/2016"}, {"body": "suspect public machty may able shed light rope", "d": "4/2016"}, {"body": "nt think ever intended public needed part somewhat convoluted contract using routerjs microlib ended serving escape hatch folk unusual serializationdefault needs figured correct apis build ember vote keep private start collecting feedback people using queryparamsdidchange next iteration query params probably part routing service", "d": "4/2016"}, {"body": "qp support routing service currently basically using service keep track qps get set user action easily intercept update service time setting controller properties bound url however proving useful page load allows get service uptodate immediately tried instead qps still default value instead url suppose moot standard routing service held info", "d": "4/2016"}, {"body": "knownasilya service addon pretty nice good feel space using service learn best patterns try incorporate upstream", "d": "4/2016"}, {"body": "cool take look", "d": "4/2016"}, {"body": "start collecting feedback people using queryparamsdidchange next iteration query params probably part routing service machty currently using action exact purpose see link rwjblue posted", "d": "4/2016"}, {"body": "closed merged", "d": "4/2016"}, {"body": "kgish problem rwjblue solution", "d": "4/2016"}, {"body": "extend emberlinkcomponent therefore make custom tagname see", "d": "4/2016"}, {"body": "excellent", "d": "4/2016"}, {"body": "going close reopen nt fit needs", "d": "4/2016"}, {"body": "stefanpenner still work ember eta possible", "d": "4/2016"}, {"body": "jevanlingen", "d": "4/2016"}, {"body": "closing favor additional edge cases missed please comment reopen", "d": "4/2016"}, {"body": "based possible get behavior want parsing html tokens via either setting property setting attribute suspect reason works case tokens transformed attributes parsed earlier step doubt much least without impacting performance normal case today going close issue sorry leaving hanging long", "d": "4/2016"}, {"body": "nt seem common issue going close someone interested pursuing reopen", "d": "4/2016"}, {"body": "features generally discussed repository create issue feature requests pull request propose new feature closing issue nt really bug framework someone time please follow rfc issuepr", "d": "4/2016"}, {"body": "given lack input issue year going go ahead close still issue please comment reopen work address problems", "d": "4/2016"}, {"body": "suggestion post glimmer would use helper properly subscribes array change events recomputes class based helper aka subscribed first argument could always recompute return newly built array forcing intelligent rerender roughly reduced computed type things worked pretty well going close favor solution outlined", "d": "4/2016"}, {"body": "believe really bug updated docs think happy flesh even folks time also made demo embertwiddle showing various usages", "d": "4/2016"}, {"body": "got rfc discussed go ahead close issue", "d": "4/2016"}, {"body": "based decision mentioned issue linked looks like passing raw event information nt something core wants support close", "d": "4/2016"}, {"body": "rwjblue mixonic get ruling", "d": "4/2016"}, {"body": "needs investigation safari nt anything rule understand problem", "d": "4/2016"}, {"body": "reproduce bug safari version click dot shows gone jdmarshall rwjblue versions", "d": "4/2016"}, {"body": "closing issue since also confirm works properly safari feel free reopen issue think still justified thank", "d": "4/2016"}, {"body": "newly formed issues team starting run backlog issues really helpful get recent reproduction issue preferably twiddle work getting fixed", "d": "4/2016"}, {"body": "acorncom transcribed jsbin original report twiddle appears run without deprecation warnings release beta even canary", "d": "4/2016"}, {"body": "quite helpful yep see", "d": "4/2016"}, {"body": "per api docs guides page transition object available error events error substate templates close missing something feel free say something reopen issue", "d": "4/2016"}, {"body": "closing dupe thanks kmiyashiro ps looks like fixed recently", "d": "4/2016"}, {"body": "addressed please track progress", "d": "4/2016"}, {"body": "fixed", "d": "4/2016"}, {"body": "feature removed work could continue glimmer engine new angle bracket component rfc introduced please raise concern", "d": "4/2016"}, {"body": "helpful warning added", "d": "4/2016"}, {"body": "working properly", "d": "4/2016"}, {"body": "plan move cp descriptors back soon recall stefanpenner initial work progress area could nt find quick search definitely intend change behavior less issue consider current behavior bug point", "d": "4/2016"}, {"body": "rwjblue ya krisselden working", "d": "4/2016"}, {"body": "going foward feature issue tracked emberjsrfcs repo", "d": "4/2016"}, {"body": "agreed", "d": "4/2016"}, {"body": "please link us whatever spiritual successor issue ends created us interested may subscribe thanks", "d": "4/2016"}, {"body": "rosshadden watching repo best bet stay date happens highly doubt whoever takes next steps would remember update ticket directly even knew exists next person move might someone nt know today", "d": "4/2016"}, {"body": "closed rfc created normally action means rejection", "d": "4/2016"}, {"body": "issue tracker bugs features go rfcs repository details read", "d": "4/2016"}, {"body": "normally action means rejection", "d": "4/2016"}, {"body": "basically primary barrier ecmascript decorators stability working side things", "d": "4/2016"}, {"body": "closed rfc created normally action means rejection understand might felt way probably clearer moving standard javascript classes toppriority us requires careful design interoperability work stef said plausible transition require javascript decorators working decorators hope advance far enough next meeting munich start seriously starting plan transition", "d": "4/2016"}, {"body": "unlocked conversation would suggest discussion lay groundwork feature happen issue rfc repository probably either present wait strawman uses javascript decorators", "d": "4/2016"}, {"body": "reminder could well static analysis compiling decorators would compile babel typescript ergonomic things steak consumer point view performance benefits well", "d": "4/2016"}, {"body": "chadhietala ya done right avoid applymixins costs today", "d": "4/2016"}, {"body": "ton work done much still ongoing see one example ember performance par next version rendering engine glimmer currently underway continue cut initial render times scenarios going close issue little ongoing conversation clear path forward many folks rallying behind working", "d": "4/2016"}, {"body": "seems working", "d": "4/2016"}, {"body": "closing favor", "d": "4/2016"}, {"body": "ember triage team started asking folks either comment existing rfcs related issue open new issue desired feature rfc repo seems fit better go ahead close please comment disagree", "d": "4/2016"}, {"body": "still happening canary show saving gist returns commit invalid error", "d": "4/2016"}, {"body": "features generally discussed repository create issue feature requests pull request propose new feature closing issue nt really bug framework please follow rfc issuepr interested taking", "d": "4/2016"}, {"body": "someone verify bug still present latest jsbin original issue", "d": "4/2016"}, {"body": "last comments issue looks resolved", "d": "4/2016"}, {"body": "toddjordan poke check still relevant", "d": "4/2016"}, {"body": "issue transitioning child route parent routes transitions transition traverse called repeat think bug", "d": "4/2016"}, {"body": "demo", "d": "4/2016"}, {"body": "believe bunch work ed done like get feedback emberjsemberdatacontributors", "d": "4/2016"}, {"body": "remaining work removing fact subclasses returned lookup factory unfortunately others decided reason much breaking change transition", "d": "4/2016"}, {"body": "pinging related conversation add", "d": "4/2016"}, {"body": "bug still exists canary news stefanpenner krisselden", "d": "4/2016"}, {"body": "still exists abit tricky fix working related stuff may may overlap unsure eta looks like wycats chancancode started new reference system w maybe may fix", "d": "4/2016"}, {"body": "closing participants interested pursuing feature feel free reopen thank", "d": "4/2016"}, {"body": "updated jsbin use ember seems working properly errors thrown closing p", "d": "4/2016"}, {"body": "last comments issue looks resolved", "d": "4/2016"}, {"body": "jamesarosen anything happening cc rwjblue", "d": "4/2016"}, {"body": "pr lingered closed stopped working app problem year half ago", "d": "4/2016"}, {"body": "jamesarosen thanks work closing issue sorry pr nt get merged time", "d": "4/2016"}, {"body": "updated bcardarella jsbin still happening", "d": "4/2016"}, {"body": "updated jsfiddle use seeing behavior originally reported", "d": "4/2016"}, {"body": "thanks clearing god bless", "d": "4/2016"}, {"body": "searching type support attempting roll solution got point router scroll section sees hash stuck would route add hash url scroll within app pr still thing ember actually implement trouble following works never get merged", "d": "4/2016"}, {"body": "rwjblue hey looks like fixed october must regressed thoughts", "d": "4/2016"}, {"body": "chrisccerami issue please report new issue along steps reproduce pretty easy miss comments long closed issuespull requests", "d": "4/2016"}, {"body": "chrisccerami never resolved new feature needs go rfc process relatively uncontroversial though rather issues repository importantly need find someone implement", "d": "4/2016"}, {"body": "mmun ah gotcha saw pr merged issue closed assumed pr meant fix best next step take rfc necessarily come pr opened", "d": "4/2016"}, {"body": "chrisccerami multiple problems needed resolving set stage work every situation afaik biggest changes needed undisputed time route transition async way anchor linking would work expected issue routes async even minor next tick etc said since nt clue much router changed since time work required pretty minor punted nt feel like rfc cause although likely nobrainer feature bit dispute ideal experience api rfc usually takes place pr certainly rule something people prevent creating work might thrown away significantly modified", "d": "4/2016"}, {"body": "jayphelps thanks info noticing exact bug fixed reappeared stripped think also query params forget exact details moment try create minimal repro clear previously fixed yes", "d": "4/2016"}, {"body": "chrisccerami yep git diff seems believe code still exists lastest version even working expected possibly edge case nt account eg using query params said suggest new ticket code reproduce even better failing test", "d": "4/2016"}, {"body": "jayphelps interestingly test suite seems redirecting app outside test suite fun bug", "d": "4/2016"}, {"body": "tweet brought apologies overadvertising posterity muchbetter alternative implementing lifecycle hooks clean async avoid errors use emberconcurrency addon ec land way safe debounce make task timeout beginning la typeahead example", "d": "4/2016"}, {"body": "say advertise much like emberconcurrency solved really hard issues us snapping fingers agree good solution case", "d": "4/2016"}, {"title": "jqueryslimjs header comment", "body": "description jquery header comment following files steps reproduce browser information", "num": "3094", "d": "4/2016"}, {"title": "unexpected token illegal bracket server", "body": "hi pages got error run bracket ide server deploy real server works fine error might cause problem", "num": "3093", "d": "4/2016"}, {"title": "mouseeventpagexpagey fill nt needed jquery", "body": "related original comment also might influenced native nt calculated using element like example browser nt support correct jquery returns mouse positioned lefttopcorner browser returns correct jquery returns feel correct result nt know recent browser nt support since firefox returns element always might incorrect native object nt calculates using ie element nt know recent browser nt support represent simulates browser nt support chrome ie firefox incorrect result firefox bug think correct result subtract", "num": "3092", "d": "4/2016"}, {"title": "git commit hook dying", "body": "normal build fine commit getting error build hook anyone else running newer jshint dist newer task running jshint dist jshint task distjqueryjs typeof module object amp amp typeof moduleexports object missing use strict statement var arr missing use strict statement errors file warning task jshint dist failed use force continue", "num": "3091", "d": "4/2016"}, {"title": "submit event post form data loses data submit button disabled click ie", "body": "description submit event post form data loses data submit button disabled click ie wanted disable button soon user clicked prevent hitting twice served purpose found ie nt love ie post occur data included post created jsfiddle posts investigation actually used fiddler see going would return posted post empty whatever ends ie displaying blank link test case", "num": "3089", "d": "4/2016"}, {"title": "selecting anchor links using broken jquery", "body": "description trying select anchor links page using attribute starts selector target links href begin octothorp specifically selector parsed invalid jquery version error thrown consistent latest versions safari chrome firefox opera also seems issue problem using attribute value selector selecting something like works expected test cases set test code version jquery differs uses jquery test passes uses jquery test fails", "num": "3085", "d": "4/2016"}, {"title": "issues using map function autocomplete", "body": "using jquery autocomplete successfully past recently upgraded new versions jquery jquery ui getting errors code working versions jquery jquery ui failing versions jquery jquery ui fails get message indicating function found response map statement successful return server view comes back server firebug spend time trying resolve issue went back previous versions jquery jquery ui worked like always appreciate good work jquery using jquery provide rich user friendly forms public service clients state maine", "num": "3083", "d": "4/2016"}, {"title": "deferred tests fail android", "body": "commit introduced regression deferred tests android read right strict mode little buggy causing test failures need decide considering low usage browser android usage april according google play stats maybe skip tests android", "num": "3082", "d": "4/2016"}, {"title": "method returns incorrect value firefox", "body": "hi found case method returns incorrect value firefox method subtracts ie element firefox seems return element always example css html border solid red body border solid blue margin padding position relative position absolute left top width height backgroundcolor green js function var elem documentgetelementbyid clientleftclienttop var doc elemownerdocument docelem docdocumentelement consolelog docelemtagname gt clientleft docelemclientleft clienttop docelemclienttop documentbodyclientleftclienttop var body documentbody consolelog bodytagname gt clientleft bodyclientleft clienttop bodyclienttop getboundingclientrect var box elemgetboundingclientrect consolelog boundingbox gt left boxleft top boxtop jquery offset var offset elem offset consolelog offset gt left offsetleft top offsettop res google chrome res ie res firefox ca nt understand method subtracts getting position relative document calculate based ie outline includes border element code positioned based even border also usually border feel correct result useful", "num": "3080", "d": "4/2016"}, {"title": "crashing running selector unquoted attributevalue", "body": "description javascript crashes running jquery using selector like works enquoting attributevalue like switching back older minor release affected versions example failed works tried firefox google chrome also users irc confirmed link test case failing test passing test quoted attributevalue passing test jquery", "num": "3079", "d": "4/2016"}, {"title": "get rid excessive use strict pragmas built file", "body": "since amd modules strict stripping pragmas building lot harmless excessive statements built file get stripped minified big deal slightly confusing casual readers built file contents", "num": "3077", "d": "4/2016"}, {"title": "check minified code syntax errors eg trying construct ast", "body": "description enabling strict mode uncovered uglifyjs issue creating code syntaxerrors perhaps try generate ast generated minified code check nt contain syntax errors", "num": "3075", "d": "4/2016"}, {"title": "update src modules strict mode", "body": "suggested mgol", "num": "3073", "d": "4/2016"}, {"title": "classrelated methods fail meet standard whitespace handling", "body": "opened related discussion whitespace wicg may worth read changes necessarily made regarding methods consistently failed handle space characters correctly reported related bug years ago exactly characters used separate classes htmlcss characters ascending unicode order tab line feed form feed carriage return space characters matched regular expression pattern used classes jquery fails behave correctly according spec quick example failure produces assertion failure logged console fiddle problem classesjs uses rnotwhite appropriate regular expression use splitting strings classes", "num": "3072", "d": "4/2016"}, {"title": "event handlers invalid selectors caught attach time", "body": "otherwise become difficult debug see jsfiddle example attaching event handler invalid selector causes exception raised event time makes difficult debug trace error usually include jquery code suggest jquery throw exception attach time instead makes fairly easy detect faulty code", "num": "3071", "d": "4/2016"}, {"title": "srccoresupportjs triggers contentsecuritypolicy error firefox baseuri directive declared", "body": "using header running code triggers error firefox", "num": "3068", "d": "4/2016"}, {"title": "input type hidden working", "body": "query returns input elements type whereas documentation states two queries return results nt", "num": "3067", "d": "4/2016"}, {"title": "js error thrown browser console accessing ui jquery code", "body": "hi testing ui code functionality system noticed one unusual js error message console log high level testing selenium catching js errors firefox browser error caught following source error message using indicate sourcemappingurl pragmas deprecated use instead line number error thrown console usually crash chrome browser selenium testing firefox recording line console test passing best regards vullnet", "num": "3066", "d": "4/2016"}, {"title": "specific table css style breaks", "body": "hi guys recently stumbled upon strange issue wordpress related jquery version please read info problem onward comments info resolution issue resolved wordpress might related jquery project reposting regards oliver", "num": "3065", "d": "4/2016"}, {"title": "revert jqueryeasing signature changes", "body": "see", "num": "3064", "d": "4/2016"}, {"title": "syntax error unrecognized expression href href jqueryjs wordpress", "body": "get error wordpress js google inspect please check error jquery new update wordpress get error click js see js file inside code syntax error unrecognized expression href href", "num": "3063", "d": "4/2016"}, {"title": "improperly propagates progress lockedin deferred", "body": "locks deferred rebinding thenable resolved base progress context inappropriately propagated progress data progress data appropriately wrapped array probably easier explain code natural language happens used belongs deferredjs", "num": "3062", "d": "4/2016"}, {"title": "remove default deferred callback context", "body": "ran interesting obstacle working longstanding behavior using default context jquerydeferred callbacks specifically deferred base promise necessarily blocker make counterintuitive even sure code sanity increased similarity native like remove default making methods required provide meaningful context words preceding code would either global object context depending whether executed strict mode objections", "num": "3060", "d": "4/2016"}, {"title": "req modify fneq also accept array", "body": "", "num": "3058", "d": "4/2016"}, {"title": "add param", "body": "result soon properly ignoring said back intent make independent ajax settings good way specify flag since accepts args moment could add arg pass way ref edited nt need changing", "num": "3056", "d": "4/2016"}, {"title": "padded strings ajax headers cause dom exception", "body": "left padded right padded strings given xhr headers cause dom exception safari example header would cause error follows contenttype applicationjson contenttype applicationjson note headers would work chrome firefox ie fix simple remove extra padding using trim setheaders safari implement submit pull request need guidance fix jquery wants implement better trim platforms safari", "num": "3055", "d": "4/2016"}, {"title": "eq even", "body": "divs class name select option change background even divs etc tried luck tried changed background second div correct said want change background even divs code choice group b choice group b choice group b choice group b eq good idea selectors job open thanks advanced", "num": "3054", "d": "4/2016"}, {"title": "click function toggle stopped working jquery", "body": "works worked pre versions stopped working since example settings toggle jquery use", "num": "3053", "d": "4/2016"}, {"title": "reproduce results described", "body": "timmywil jquery team run tests described jquery beta released jquerydeferred promisesa compatible jquerydeferred objects updated compatibility promisesa promises verified promisesa compliance test suite reproduce see", "num": "3052", "d": "4/2016"}, {"title": "wrapinner method", "body": "like suggest new method situations like hello goodbye gt hello goodbye ca nt achieve method something like may called something like think", "num": "3051", "d": "4/2016"}, {"title": "fnappend throws error given type nested array", "body": "jquery version browser chrome mac first examples work expected create last example throws error like following think throwing appropriate thrown error nt seem deliberate one", "num": "3050", "d": "4/2016"}, {"title": "jquery error url", "body": "seemed jquery crashes url hash sign followed period sign ie uncaught error syntax error unrecognized expression anonymous function wpp ok execution time seconds using windows chrome version firefox developer edition jqueryjs", "num": "3048", "d": "4/2016"}, {"title": "exposing filter pseudo functions use elements directly", "body": "often wanting get access common pseudo methods etc single target element event callback currently two options either write code duplicating jquery failsafe methods seems redundant wrap element jquery use selector however wasteful resources given methods taking single element argument already code base legit case used directly exposed could exposed set functions well would allow simple efficient checks like without go creating new object runs regex exprs needlessly", "num": "3046", "d": "4/2016"}, {"title": "safari jquery isplainobject localstorage jquery isplainobject localstorage", "body": "hello jquery isplainobject localstorage example giving false jquery gives true safari jqueryisplainobject localstorage assume regression drop support safari jquery jquery correct jqueryisplainobject localstorage always return false could nt find quickly bugfix cheers rapha\u00ebl", "num": "3045", "d": "4/2016"}, {"title": "element page still visible", "body": "hi issue check giving wrong result element test nt page simplified testcase following snippet browsers result element nt page except actually investigated seems like issue final return function think must check resulting document fragment fragment element ca nt visible result must thus may possibly different node types could parent element nt actually page test also returns wrong result", "num": "3043", "d": "4/2016"}, {"title": "data data data get attribute", "body": "", "num": "3042", "d": "4/2016"}, {"title": "width fullscreen mode iframe large ie", "body": "width incorrect value fullscreen mode iframe got ie edge ok html iframehtml html html iframehtml javascript javascript jquery function test click function output text fs width run click function pageenterfullscreen fs function pageenterfullscreen element", "num": "3041", "d": "4/2016"}, {"title": "async ready event may let windowonload run", "body": "seems like cause trouble timmy spidey sense tingling one", "num": "3040", "d": "4/2016"}, {"title": "jquery unrecognized expression matching multiple attributes", "body": "working fine jquery sure point breaks stack trace jquery error see console uncaught error syntax error unrecognized expression datatogglecollapse datatarget sizzleerror sizzletokenize sizzle jqueryfnextendfind anonymous function see jqueryextendeach jqueryfnjqueryeach anonymous function fire selffirewith jqueryextendready completed code reverting jquery fixes issue", "num": "3038", "d": "4/2016"}, {"title": "ie v triggers wrong event", "body": "run demo ie get alert dialog problem browsers work expected ideas fix workaround", "num": "3036", "d": "4/2016"}, {"title": "load callback breaking vs", "body": "hi callback load function changed breaking way documentation says set dom element turn instead jquery instance dom element tracked commit regards fredrik blomqvist", "num": "3035", "d": "4/2016"}, {"title": "contents returns empty object inaccessible iframes firefox", "body": "example html local file html var target documentgetelementbyid iframesinaccessibletarget var iframe documentcreateelement iframe iframesrc targetappendchild iframe function div iframe load function consolelog contents actually throw error chrome uncaught securityerror failed read contentdocument property htmliframeelement blocked frame origin null accessing frame origin frame requesting access protocol file frame accessed protocol protocols must match expected nt access different origins however firefox phantomjs return empty jquery object know differences strictly browsers implemented sameoriginpolicy however user point view empty object fully indicate impossible read iframe expecting error firefox nt throw errors returns empty contents errors thrown jquery layer tested jquery firefox chrome", "num": "3033", "d": "4/2016"}, {"title": "event nt propagated nested droppable nt accept draggable certain scenario", "body": "steps applicable following jsfiddle steps click drag draggable onto inner droppable droppable continue hold draggable release note draggable inner droppable pointer fully area droppable outer droppable highlighted expected move draggable beyond bounds droppable release resting entirely whitespace click drag draggable drag random whitespace spot droppable release draggable grab draggable drag onto inner droppable draggable continue hold draggable release draggable inner droppable pointer fully area droppable take note state outer droppable container expected results outer droppable container highlighted draggable entirely inner droppable within bounds droppable actual results outer droppable container highlighted draggable entirely inner droppable within bounds droppable notes debug issue turns simply dragging draggable results state changes droppable event propagation longer works expected droppable inner droppable console logs added jsfiddle help highlight issue", "num": "3032", "d": "4/2016"}, {"title": "shape getjson deferred changes depending used", "body": "let say deferred call get data per call get array data first element per see last example nt think shape change depending used please see clear example shape changes", "num": "3031", "d": "4/2016"}, {"body": "yikes thanks report timmywil file nt even exist version seems like release done nonfresh clone repo files built seems weird jqueryrelease runs fresh repo clone happen marking blocker nt extra files different beta version", "d": "4/2016"}, {"body": "applies", "d": "4/2016"}, {"body": "oh know happened pushed dist ran publish dist repo slim files sitting previous commits", "d": "4/2016"}, {"body": "ah ok guess fix would kill similar issues future would adding new files", "d": "4/2016"}, {"body": "using local clone jquery build using publishing fresh clone based quick glance release script", "d": "4/2016"}, {"body": "scottgonzalez fresh clone nt overwrite slim files", "d": "4/2016"}, {"body": "another solution probably simpler would add files npmignorebowerjson ignore nonmaster branches", "d": "4/2016"}, {"body": "another solution probably simpler would add files npmignorebowerjson ignore nonmaster branches futureproof think ensure contains generated current build", "d": "4/2016"}, {"body": "ok perhaps whilelist instead blacklist files property", "d": "4/2016"}, {"body": "nt want remove whole dist copying would nt work windows rsync feature removes files nt copied", "d": "4/2016"}, {"body": "problem miss type somthing", "d": "4/2016"}, {"body": "possible nt need code maybe even depending pagexy provided correct seems covered even removing would better fixing", "d": "4/2016"}, {"body": "removing would better fixing agreed", "d": "4/2016"}, {"body": "think remove fill seems full browser support let discuss monday wo nt submit pr conflict jbedard pr might well create one top", "d": "4/2016"}, {"body": "fixed details commit message", "d": "4/2016"}, {"body": "awesome thanks", "d": "4/2016"}, {"body": "method nt take arguments disabling notice still click submit button second time browser", "d": "4/2016"}, {"body": "thank pointing dmethvin fixed code updated jsfiddle link original comment see real bug trying report please take second look", "d": "4/2016"}, {"body": "problem cert site may complicating things switched http pressed button result via fiddler looked correct although site nt open think would best debug elsewhere stackoverflow point really clear problem involves jquery either cause solution ok server nginx date thu apr gmt contenttype applicationjson contentlength connection keepalive accesscontrolalloworigin accesscontrolallowcredentials true args data files form q xxxx headers accept texthtml applicationxhtmlxml imagejxr acceptencoding gzip deflate acceptlanguage enus en contentlength contenttype applicationxwwwformurlencoded host pragma nocache referer useragent windows nt touch like gecko json null origin url", "d": "4/2016"}, {"body": "thanks taking look", "d": "4/2016"}, {"body": "nt seem related disabling button removed jquery code still displays blank page ie see problem ie nt see ie edge", "d": "4/2016"}, {"body": "thank mgol looks like poor choice test ran jsfiddle monitored fiddler found jsfiddle successfully posts data ie means jquery contributed data getting lost way find different http receiving system ask anyone testing use fiddler wireshark", "d": "4/2016"}, {"body": "mean time take dmethvin advice posted stackoverflow", "d": "4/2016"}, {"body": "special characters must quoted see others", "d": "4/2016"}, {"body": "versions jquery jquery ui several years old bug tracker latest released versions unable upgrade probably get help stackoverflow", "d": "4/2016"}, {"body": "thanks want make sure clear later versions jquery working code earlier versions working put stackoverflow", "d": "4/2016"}, {"body": "getting position relative document calculate based borderbox ie outline includes border jquery code predates existence several years may overlooked also html usually border suspect nt reported noticed actually bug feel left top correct result useful html element border would position inside border outside nt know quick search specs nt help need people actually understand got maybe mikesherov", "d": "4/2016"}, {"body": "odd anything add margins boxsizing context filed firefox bug clientleftclienttop issue", "d": "4/2016"}, {"body": "borderpadding marginborderpadding always made things tricky defining relative document means correct behavior values match fixed positioning ie original proposal issue", "d": "4/2016"}, {"body": "see one important points said positioning css uses borderbox therefore jquery methods use css positioning incompatible method method ie setter also incompatible example css html border solid red body border solid blue margin padding position absolute width height backgroundcolor rgba translucent green left top backgroundcolor rgba translucent red gave given method method expected positioned position chrome ie firefox result firefox seems correct setter method seems subtract returned passed passed already subtracted subtracted twice therefore element positioned shifted point", "d": "4/2016"}, {"body": "also might influenced native nt calculated using element like example browser nt support correct jquery returns mouse positioned lefttopcorner browser returns correct jquery returns feel correct result nt know recent browser nt support", "d": "4/2016"}, {"body": "let keep issue focused seems getter setter use origin top left corner document element outer edge border margin might applied document element fulfilling may require feature detect style computation work correctly firefox would like try pr anseki", "d": "4/2016"}, {"body": "ok make new issue subtracting mistake code fixed easily method subtract firefox accidentally bug therefore nt need consider bug remove code subtract yes write pr already removed code subtract testing issue send issue think clear subtracted found issue staabm said returns coordinates relative document outline document document jquery think think document least person wrote code think thinking much", "d": "4/2016"}, {"body": "exploration confirmed four engines respect document element margin well independently absolute positioning revise operate relative document using outermost absolute positioning origin necessarily inside border box document element therefore probably insufficient anyway pr add tests nonzero nonpixel margin border separately together break existing tests would nt surprise second point nt hold bad assumptions", "d": "4/2016"}, {"body": "method method use values returned understand sufficient tests required hope someone write pr nt know rules styles testing jquery well", "d": "4/2016"}, {"body": "new tests limited similar existing ones test suite runs inbrowser loading testindexhtml willing help care try", "d": "4/2016"}, {"body": "please search existing issues reporting new one duplicate amp", "d": "4/2016"}, {"body": "thanks links searched filing new bug true", "d": "4/2016"}, {"body": "wonder tools like", "d": "4/2016"}, {"body": "pr strips pragma nonhacky way", "d": "4/2016"}, {"body": "validate ast sounds awfully like linter think meant check build ast", "d": "4/2016"}, {"body": "markelog updated title amp description", "d": "4/2016"}, {"body": "also sounds like could proven viable implemented uglify side like self check sorts could run correct option passed since would reflect performance mishoo think", "d": "4/2016"}, {"body": "markelog sure understand question agree mgol reported valid issue uglifyjs already pr fixes nt time look yet though please test possible", "d": "4/2016"}, {"body": "sure understand question idea currently considering implement jquery build process uglify minifies source run parser try build ast ast builded could sure obvious syntax errors yes run minified version test suite various set browsers browserstack mentioned error noticed point almost reached cap service preferred proposed approach might caught errors early stage automated yes errors revealed stage seems like wondering second parser run could introduced uglify side self check overall think idea worth something option run linter minified version limited amount enabled rules running linter minified version sounds kinda", "d": "4/2016"}, {"body": "second uglify parse would caught issue use strict function window function uglify parses without error fullfledged linter different parsing code base testing phantomjs best bet", "d": "4/2016"}, {"body": "case using specific list negated regexp right problem updating per discussion understand standards define whitespace differently purpose fixing class methods nt matter", "d": "4/2016"}, {"body": "use purposes beyond parsing list classes removing multiple attributes removing multiple data properties parsing callbacks flags addingremoving multiple events specifying multiple animatable properties separating elements ajax datatypes processing chains fine adopting htmlcss whitespace definitions updating accordingly", "d": "4/2016"}, {"body": "whatever chosen sure add unit tests issues nt creep later fix change rnotwhite sufficient fix issues classes however possible may result unicode errors usages unicode space characters used separating characters", "d": "4/2016"}, {"body": "zzzzbov want create pull request sounded possible might need separate patterns different definitions whitespace different specs would something worth researching part pr", "d": "4/2016"}, {"body": "dmethvin want create pull request really actually rather htmlcss specs updated appropriate selector whitespace would make sense notice literally one else using jquery ran issues behavior reported reason ran went looking jquery could use would significant data savings given many times downloaded daily", "d": "4/2016"}, {"body": "okay issue closed leave open something need jquery", "d": "4/2016"}, {"body": "dmethvin nt know right answer ca nt decide jquery team whether appropriate diverge explicitly specified behavior whether important accurate leave open something need jquery either way change needs made either used used currently usage mixed someone needs pick one run", "d": "4/2016"}, {"body": "actually rather htmlcss specs updated appropriate selector whitespace approximately zero chance happening since incorporates reference unicode separator space zs general category nonstatic opposed permanently fixed set spacetabline feedform feedcarriage return used html css since crossspec agreement whitespace separates tokens think follow suit mentioned already use similar six regular expression patterns including rclass match specs updating wo nt change gzipped size byte two actually slightly likely reduce size increase expense removing two data properties contend bug anyway since documentation specifies spaceseparated", "d": "4/2016"}, {"body": "approximately zero chance happening since incorporates reference unicode separator space zs general category nonstatic pretty certain html css specs handle since crossspec agreement whitespace separates tokens think follow suit mentioned ca nt wo nt disagree approach still maintain would convenient normalize whitespace jquery nt project sorts issues fixing browsers use generally expected behavior would help make class errors go away paving cowpath", "d": "4/2016"}, {"body": "related", "d": "4/2016"}, {"body": "normally opposed explicitly introducing exceptions eliminating arbitrarily long delay mistake feedback seems really valuable recommend adding jqueryeventadd fsateler care submit pr", "d": "4/2016"}, {"body": "think already received similar issues dmethvin would tend agree assumption though", "d": "4/2016"}, {"body": "markelog indeed searched find see consensus seems check added claim made console erroneous selector case selector instead triggers null reference exception error jquery code selector probably separate bug needs fixing moreover event supposed catch special condition prevent navigation debugging becomes doubly hard prepare submit pr", "d": "4/2016"}, {"body": "think would easier see advantages drawbacks pr would nt mind seeing proposed solution unit tests one think offhand custom selector extensions might yet place probably rare", "d": "4/2016"}, {"body": "ok prepare pr", "d": "4/2016"}, {"body": "fsateler cool check", "d": "4/2016"}, {"body": "sorry newbie question run testsuite appear run unit tests", "d": "4/2016"}, {"body": "fsateler need working apachephp setup see one domain pointed jquery repository open browser want check", "d": "4/2016"}, {"body": "runs basic suite includes promisesa nodejs affected real proof functionality takes place loading qunit suite inbrowser since issue tightly scoped use speed things even access directly filesystem nt want set web server", "d": "4/2016"}, {"body": "forget bug firefox see", "d": "4/2016"}, {"body": "sure clear put together example jsbin jsfiddle thanks", "d": "4/2016"}, {"body": "works", "d": "4/2016"}, {"body": "hi old version jquery years old since stopped appending sourcemappingurl pragma completely future please upgrade jquery amp see problem still exists reporting bug thanks", "d": "4/2016"}, {"body": "thank much post team update following cheers", "d": "4/2016"}, {"body": "possibly related", "d": "4/2016"}, {"body": "thanks opening issue affects ie lt perhaps could create reduced test case help assess issue", "d": "4/2016"}, {"body": "honestly really short replicating issue js developer wordpress core developer could help especially someone coded knows code could help want experience issue provided instructions replicate sorry ca nt help", "d": "4/2016"}, {"body": "affects ie lt entirely true also issue browsers indeed due css triggering falsepositive check whether use ie lt default logic test specific css jquery also run ie lt logic modern browsers issue thus visible browsers ie lt edit reading back fix issue found related global remember correctly breaks test due test course also global styling thus wo nt expected size", "d": "4/2016"}, {"body": "set reduced test case js bin confirming bug", "d": "4/2016"}, {"body": "swissspidy thank creating really seems replicates issue simple way", "d": "4/2016"}, {"body": "also encountered related creating nodes one fails creating node tested chrome traced back happening fiddle", "d": "4/2016"}, {"body": "radugroza nt check broken apply form styling tables example feature detection test jquery fails turn means legacy code path normally run ie lt gets run tests broken described two issues first one specifying styling breaks test check browser returnscalculates corrects sizes ie lt return broken sizes css table means jquery acts browsers report broken size second issue check legacy code path broken means checks element types nt page return true must false", "d": "4/2016"}, {"body": "seems two issues yikes scheduling thanks report", "d": "4/2016"}, {"body": "modified radugroza jsbin compare instead compare line clear targets fine", "d": "4/2016"}, {"body": "potential duplicate", "d": "4/2016"}, {"body": "fixed problem code js file jquery see setting give error message chrome href href href href", "d": "4/2016"}, {"body": "noted invalid selectors identifiers allowed unquoted values need wrap quotes", "d": "4/2016"}, {"body": "reading issues filed agree explicit seems like reasonable requirement really want context", "d": "4/2016"}, {"body": "code ca nt imagine useful purpose promise available context one would always chain promise directly create new deferred involve code produces new promise one would nt call inside thencallback promise however one jqueryspecific use case applies inside callbacks nt expect advanced projects would nt surprised see simple projects js return jquerypromise function foo showspinner foo always function hidespinner thisstate resolve stuff seems awkward store promise variable", "d": "4/2016"}, {"body": "would current docs looking maybe", "d": "4/2016"}, {"body": "say collection elements based math code would like apply style specific elements collection currently call eq many times eq accept array easily currently use", "d": "4/2016"}, {"body": "stackoverflow question let take", "d": "4/2016"}, {"body": "request make powerful able reduce elements array tedious manually", "d": "4/2016"}, {"body": "quite sure asking talking people stackoverflow help formulate clear description looking make request keeping guidelines new features mind likely implemented helpful stackoverflow answer plugin", "d": "4/2016"}, {"body": "yeah guess write plugin worth trouble bickering", "d": "4/2016"}, {"body": "think use cases nt meet new features guidelines writing plugin easy passing array would cover use cases anyway say want filter every element etc actually easy even without plugin nt think feature would bring lot value point", "d": "4/2016"}, {"body": "mgol long supported browsers long time probably nonetheless wrote simple plugin since one think feature useful thank time", "d": "4/2016"}, {"body": "yay nt problem always passes array thought case would need passed nt", "d": "4/2016"}, {"body": "afaict defines type whitespace optional safe remove filed bug safariwebkit would good know added behavior assuming intentional input padded", "d": "4/2016"}, {"body": "input nt meant padded filed bug safari webkit misinterpreting spec afaik enforcing spec strictly needed perhaps instead give user warning input nt meant padded however thought would useful jquery team note browsers accept padded input however safari may domain product", "d": "4/2016"}, {"body": "filed bug safari webkit misinterpreting spec afaik enforcing spec strictly needed interpreting rfc says ows optional whitespace ows rule used zero linear whitespace octets might appear protocol elements optional whitespace preferred improve readability sender generate optional whitespace single sp otherwise sender generate optional whitespace except needed white invalid unwanted protocol elements inplace message filtering note explicitly say sender generate optional whitespace caller jquery method sender view jquery changing header caller provided note term specific meaning rfc must still think safari violating spec spec even give one case extra whitespace may validly need added", "d": "4/2016"}, {"body": "great question stackoverflow bug tracker", "d": "4/2016"}, {"body": "use setting element state see info works fine", "d": "4/2016"}, {"body": "run tests see", "d": "4/2016"}, {"body": "timmywil ok run tests using stepbystep procedure reproduce test using reason closing issue still clear reproduce tests using", "d": "4/2016"}, {"body": "run issue got closed bug", "d": "4/2016"}, {"body": "open issues jquery code issues need addressed nt think applies also mean discussion general support assistance found forums jquery irc channel familiar grunt grunt getting started guide might good place start", "d": "4/2016"}, {"body": "mgol directory commands run downloaded repo using git cd directory tried ran npm install first installed gruntcli bintestsjquerytest nodejs promisesaplusadapterjs jsdom onward works iojs githubcomtmpvar syntaxerror unexpected token illegal modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload bintestsjquery nodejs grunt test needs adjusted commands run within commands", "d": "4/2016"}, {"body": "timmywil tried irc yesterday robertmaxrees believe correct user name helpful referred jquerydev channel though users replied query try convey jquery code broken rather independently verify jquery passes promisesa compliance tests ability reproduce results described blog post still able run tests properly missing erroneous commands tried", "d": "4/2016"}, {"body": "using old version nodejs need least node lts run tests also run said adapter file directly nodejs shell runs execute accepts javascript input valid javascript code run bash basic nodegruntnpmrelated questions though please follow stack overflow irc channel github bug jquery fixed", "d": "4/2016"}, {"body": "mgol able reproduce tests", "d": "4/2016"}, {"body": "timmywil update able reproduce tests using", "d": "4/2016"}, {"body": "normal wrapinner wrapall think cases already covered write plugin", "d": "4/2016"}, {"body": "oh yes sorry nt saw methods", "d": "4/2016"}, {"body": "jquery generally guarantee specific behavior passed invalid input passing nested arrays expect", "d": "4/2016"}, {"body": "appending nested arrays html strings code like following expected every html string arrays would appended element misunderstood spec maybe already handles one level array htmlstringjquery seems like wrapping contents array nt make difference guessed wrapping arrays array ok well found comment source code seems trying flatten least one level nested array thinks natural consistent current bahaviour amp implementation flattens depth nested arrays", "d": "4/2016"}, {"body": "reason flattens one level get free via allow infinite number levels would traverse entire set nested arrays adds complexity rare case data structure like traverse flatten trying use", "d": "4/2016"}, {"body": "ok makes sense thanks", "d": "4/2016"}, {"body": "error message sounds like dup", "d": "4/2016"}, {"body": "pseudo selectors accessible add nt ever documented specifics selectors might default reality doubt kind performance bottleneck", "d": "4/2016"}, {"body": "dmethvin ah ok nt realize accessible sorry catching sure performance bottlenecks per se feels silly rewrite code already available vanilla js context use wrapper outside jquery scope unnecessary least feels context safe write pluginhelper function using exprfilters object", "d": "4/2016"}, {"body": "use probably let others think public plugin need think things like whether people using alternate selector engine whether pseudos might deprecated future", "d": "4/2016"}, {"body": "yeah use given extensible api manageable even removed getting simple short syntactic sugar base along lines gives eventcurrenttarget sure appeals others find elegant along associated perf benefits also filter objects essentially one best use futureproof compatibility", "d": "4/2016"}, {"body": "hexalys see recommended one", "d": "4/2016"}, {"body": "slightly aside topic exposed well nt recommended andor documented method simply read element attributes similar context", "d": "4/2016"}, {"body": "getting dom element jquery object one fastest paths code couple imo reason short circuit clutter docs provide microoptimizations since exposed guess close nt think anything code side least", "d": "4/2016"}, {"body": "agreed nt see us adding api however might good candidate plugin", "d": "4/2016"}, {"body": "fixed master reluctance backport think wait", "d": "4/2016"}, {"body": "behavior present jquery versions released years ago ie latest one versions diverged rather leave tell people upgrade comes fix critical issues issue hardly critical", "d": "4/2016"}, {"body": "btw safari safari suffers well property fixed safari technology preview", "d": "4/2016"}, {"body": "agree since fixed master close", "d": "4/2016"}, {"body": "add test though", "d": "4/2016"}, {"body": "markelog bad idea include builtins test", "d": "4/2016"}, {"body": "late already committed think mean host objects couple tests mind followup", "d": "4/2016"}, {"body": "meant host objects see tests already could add maybe", "d": "4/2016"}, {"body": "regression work previous version jquery docs say seem indicate result incorrect elements document considered hidden jquery way know visible appended document since depends applicable styles think need check ensure disconnected", "d": "4/2016"}, {"body": "yes forgot mention currently using version work expected", "d": "4/2016"}, {"body": "confirmed test case", "d": "4/2016"}, {"body": "working fine therefore recent regression", "d": "4/2016"}, {"body": "also experiencing issue bisected", "d": "4/2016"}, {"body": "could create test case jsfiddlenet jsbincom also assume mean works fine edge edge mode ie thing ie edge", "d": "4/2016"}, {"body": "could create iframe page allowfullscreen attribute jsfiddlenet made sample github pages instead ie windows outputs ie edge windows outputs", "d": "4/2016"}, {"body": "ref pr feature check would pretty much impossible think blindly multiplying see fullscreen mode maybe fixed", "d": "4/2016"}, {"body": "fired test case fails click second button see ie windows means bug fixed ie nt know fixed windows amp windows variants ie least browserstack still bug definitely fixed windows jacobrossi said going fix bug purely based comment landed workaround fixed contrary declaration", "d": "4/2016"}, {"body": "added milestone nt lose microsoft fix fix going stay revert fix let people deal still like someone ieedge team give light jacobrossi jdalton could help us", "d": "4/2016"}, {"body": "yep poke around poke around mean ping jacob p", "d": "4/2016"}, {"body": "seeing windows behave incorrectly microsoft edge windows behaving correctly looks like fixed edge screen display dpi right value", "d": "4/2016"}, {"body": "jacobrossi issue ie setting values times small started multiply fullscreen mode iframes code fact see values times large ie means ie got fixed workaround broken test case uses jquery includes workaround", "d": "4/2016"}, {"body": "test case repo viewed via rawgitcom click second link ie see red background means workaround breaks ie instead fixing", "d": "4/2016"}, {"body": "got ok confirm windows works differently", "d": "4/2016"}, {"body": "nt vm current windows amp ie browserstack version still bug might date", "d": "4/2016"}, {"body": "ok spin patched vm see", "d": "4/2016"}, {"body": "giving incorrect results due patch windows would indicate bug fixed point", "d": "4/2016"}, {"body": "ok thanks linked clones parallels could get ie windows machine running pretty quickly bug existed expected ie longer exists latest version windows jacobrossi could check fixed despite earlier claims fix going stay need revert workaround would also mean asking browserstack update ie copies test ies behaving consistently", "d": "4/2016"}, {"body": "jacobrossi since seems fixed windows amp windows versions ie going assume likely fixed windows well revert hacky workaround still love hear confirmation fixed happened could share great", "d": "4/2016"}, {"body": "fix landed master amp", "d": "4/2016"}, {"body": "might issue okay leaving", "d": "4/2016"}, {"body": "work around unit test see get complaints", "d": "4/2016"}, {"body": "see pr incoming fix rather hacky way still sure implications code field", "d": "4/2016"}, {"body": "closing unit tests longer race condition see code expects field", "d": "4/2016"}, {"body": "duplicate need quote selector", "d": "4/2016"}, {"body": "got thanks", "d": "4/2016"}, {"body": "thanks opening issue tested ie works expected need assistance please ask forums jquery irc channel", "d": "4/2016"}, {"body": "made screencast show problem please reopen bug", "d": "4/2016"}, {"body": "see behavior exactly without jquery jquery bug something work around", "d": "4/2016"}, {"body": "looks like callback invocation using instead would like open pull request", "d": "4/2016"}, {"body": "markelog fix making amp milestone reflect change", "d": "4/2016"}, {"body": "whereas master branch primary one change milestone clarifying", "d": "4/2016"}, {"body": "milestones used generate changelogs end users doesnt matter got fix separately fixed stays fixed older releases get milestone far also anyone one asking changed milestone without claryfing micha\u0142 go\u0142\u0119biowski", "d": "4/2016"}, {"body": "think correct course events important issue looks like fix needed whereas would incorrect assume fixed stays fixed would incorrect offensive commit done ported mentioned already released several versions prereleases releases nonetheless bug propose omit commit thereby deprive users information nt understand propose mislead users since assumed set milestone mistake purpose changed milestone commit changelogs milestone opinion set primary branch", "d": "4/2016"}, {"body": "disagree nt anything else add", "d": "4/2016"}, {"body": "thanks fix quick release app works", "d": "4/2016"}, {"body": "thanks opening issue works", "d": "4/2016"}, {"body": "timmywil please describe nt work browser using viewed jsbin shows issue empty object ff error chrome also missed point example html local file jsbin nt local try html file locally see firefox see chrome expect error thrown regardless browser file displayed", "d": "4/2016"}, {"body": "oh issue using file protocol would mean nt issue production code regardless qsa nt select anything nt think anything", "d": "4/2016"}, {"body": "timmywil oh issue using file protocol answering quote viewed jsbin shows issue empty object ff answer second statement regardless qsa nt select anything nt think anything well currently detecting never true everything worked correctly iframe always element therefore check could done jquery error could thrown true assume browser nt able read iframe", "d": "4/2016"}, {"body": "viewed jsbin shows issue empty object ff nt see", "d": "4/2016"}, {"body": "imo error thrown even though see error ff mac making insubstantial", "d": "4/2016"}, {"body": "see nt talking iframe selected talking contents empty looking something could feasibly fix understand suggestion nt think could reliably detect error thrown throw error whenever origins different method throws error browsers done using jquery methods like attr prop exceptions make answering questions complicated instance setting location crossdomain iframe valid think best leave error throwing browsers agree behavior difference odd would open bug ticket ff fix quickly enough time figured best way add error would nt needed", "d": "4/2016"}, {"body": "opened issue bugzilla let see happens", "d": "4/2016"}, {"body": "firefox following spec returning null crossorigin case webkit chrome violating spec", "d": "4/2016"}, {"body": "thanks bzbarsky chrome bug report", "d": "4/2016"}, {"body": "relevant part spec apparently obsolete", "d": "4/2016"}, {"body": "element obsolete everything element obsolete relevant part spec", "d": "4/2016"}, {"body": "woops thanks", "d": "4/2016"}, {"body": "thanks bug report place report jquery issues jquery ui ones go", "d": "4/2016"}, {"body": "thanks correction mgol raised following jqueryui issue", "d": "4/2016"}, {"body": "seems like side coin arguing regression fixed since changed behave way asking think already itoldyouso file smilecat think would best", "d": "4/2016"}, {"body": "updated emphasis added let stop mixing cast resolve operation operation nt even know primary function though ticket implicitly assumes latter suggestion another utility would used arrays explicitly implicitly assumes former maybe ca nt even stop could certainly pave way providing distinct functions eg short think split personality makes lost cause fixing plan make two signatures distinct source", "d": "4/2016"}, {"body": "yeah starting understand mess recommendation fix regression brings back behavior ctheiss nt like however refactor could get two newly named methods consistent semantics match could go following minorversion release ctheiss important note calling single known unnecessary wasteful unfortunately lot code led bad example", "d": "4/2016"}, {"body": "sure reading right thought might try wording original ask different way writes object console whatever parsed json writes array log first element object first example string jqxhr difference number arguments passed happens ajax deferreds far know instead write examples look", "d": "4/2016"}, {"body": "ctheiss returns extra properties methods jquery lt returns exact object passed returns exact object passed returns new tied two incoming ones lacking extra properties methods incoming jqxhr case needs figure get entire list results two args passes array back element array representing resolved results jsbin gave looks first arg one showing entire arg list may clearer", "d": "4/2016"}, {"body": "dmethvin thanks response think understand called directly arguments automatically unpacked whereas called arguments unpacked get mind args packed unpacked consistently cases since seems strange change code depending whether deferred wrapped understand dilemma either case different result", "d": "4/2016"}, {"body": "mind args packed unpacked consistently cases since seems strange change done code depending whether deferred wrapped agree referring actually serving two disjoint purposes one similar converts argument promise nt one already waits multiple promises resolve returns single promise representing results singlearg case trying starts get really silly either case different result long story tried clean resolve multiple values multiinput pass along sane way allows sort pass args resolved values last promise array element third arg matter many values first two resolved new standard resolve single value problem needing pass array never occurs", "d": "4/2016"}, {"body": "prefer add options let set attributes tag added dom something like would inject tag like suppose could well implementation would end mapping call anyway since additional information make way script transport", "d": "4/2016"}, {"body": "issue fixed chrome current stable", "d": "4/2016"}, {"body": "think removal context could go along removal know odd context promise think deprecation sufficient notice removal context changes", "d": "4/2016"}, {"body": "fair enough let make source changes deprecate right instance moving deprecatedjs like leave change", "d": "4/2016"}, {"body": "think done comment fixes needed", "d": "4/2016"}, {"body": "everyone agrees ready land land update upgrade guide submit docs ticket change version ugh guess also need migrate ticket", "d": "4/2016"}, {"body": "dmethvin", "d": "4/2016"}, {"body": "one thing realized tests covering case uses add test two asserts setting encode parameters properly sowcow would able use test template something similar pass one ajax parameters ensure encodes correctly swipe encoding cases existing tests", "d": "4/2016"}, {"body": "tomorrow", "d": "4/2016"}, {"body": "reference pr", "d": "4/2016"}, {"body": "sorry sowcow pinged since action item", "d": "4/2016"}, {"body": "sorry bit irrational tests ca nt snowman", "d": "4/2016"}, {"body": "sorry dropping ball insane hours work problem turned caused es scripts removed jquery started work es scripts termi instead using repo used official amp shims everything works", "d": "4/2016"}, {"body": "reloaded great assume builtins behave exception patching incorrect behavior builtin browser implementations ca nt cover various shims way many responsible implementing standard features close spec possible thanks update glad see worked end", "d": "4/2016"}, {"body": "gdsmith around like fix release", "d": "4/2016"}, {"body": "averted gdsmith still like get update jqueryeasing", "d": "4/2016"}, {"body": "breaking change either needs land asap wait", "d": "4/2016"}, {"body": "pr looks good land", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "nt think breaking change since return value function used instead function string still holds please make issue pr disagree", "d": "4/2016"}, {"body": "hmm ok maybe still best backport", "d": "4/2016"}, {"body": "fine", "d": "4/2016"}, {"body": "see point let call featurefix", "d": "4/2016"}, {"body": "came across issue written several weeks react code forget bug jquery check circular references serialize", "d": "4/2016"}, {"body": "guess worth moving reuse", "d": "4/2016"}, {"body": "nice find ticket would need move module", "d": "4/2016"}, {"body": "calculation following code", "d": "4/2016"}, {"body": "mean gzip size also change identical manner move moved", "d": "4/2016"}, {"body": "result file creation storing variable moving declaration", "d": "4/2016"}, {"body": "deprecation would mean move change internal uses ca nt module containing old code", "d": "4/2016"}, {"body": "right builtin methods etc could stored", "d": "4/2016"}, {"body": "propose put module understood differently", "d": "4/2016"}, {"body": "right sorry explaining", "d": "4/2016"}, {"body": "would nt want size influence file hierarchy would pretty confusing also deprecated modules stored module since would also confusing users want exclude use deprecated stuff", "d": "4/2016"}, {"body": "markelog agree extent farseeing proposes put arrayisarray varmodule soontobedeprecated jqueryisarray see last comments", "d": "4/2016"}, {"body": "oh see would nt nt really see point", "d": "4/2016"}, {"body": "guys possibility submitting pr", "d": "4/2016"}, {"body": "shashankanataraj sure know needs done", "d": "4/2016"}, {"body": "would wait would discussion seems team members feel deprecation process core methods might inappropriate", "d": "4/2016"}, {"body": "think strong position deprecating since people mean numeric seems pretty subjective useful without validation", "d": "4/2016"}, {"body": "used extensively call prototype functions context event bindings many jquery plugins notably bootstrap plugins nt think deprecated though easy enough roll", "d": "4/2016"}, {"body": "proposal deprecation removal would removed would happen major version said easy supplement jquerymigrate would anyway", "d": "4/2016"}, {"body": "small enough getting wide usage nt see need deprecation", "d": "4/2016"}, {"body": "one thing jqueryproxy function bind nt setting guid bound function instances proxied event handlers removed without storing instance proxied function", "d": "4/2016"}, {"body": "timmywil would recommend use", "d": "4/2016"}, {"body": "markelog still use proxy bind think cleaner pass function name rather function", "d": "4/2016"}, {"body": "still recommend use version indeed closed nt think refusal deprecation came used lot place reason discourage people using deprecation nt mean would need remove could next next next", "d": "4/2016"}, {"body": "carrying discussion breaking things yesterday meeting seems like lot benefit deprecating eventually removing nt lot code inside jquery removing make someone rewrite code works perfectly well today contrast something like deferred changes although potentially disruptive driven desire align promise standards started wiki page similar adding page try outline practices", "d": "4/2016"}, {"body": "deprecating favour intention remove seems like pretty good idea pushing users towards standards worth", "d": "4/2016"}, {"body": "pushing users towards standards worth precisely", "d": "4/2016"}, {"body": "put deprecation warning migrate people feel compelled get rid warning complain us schedule removal makes sense eternal deprecation nt know", "d": "4/2016"}, {"body": "put deprecation warning migrate people feel compelled get rid warning complain us yeah would consequences deprecation also adding note deprecation documentation frankly sure would nt want promote way nt think would need recommend", "d": "4/2016"}, {"body": "nt put warning migrate", "d": "4/2016"}, {"body": "want deprecate things slated eventual removal fine promoting think documentation deprecation right tool", "d": "4/2016"}, {"body": "one would used discourage would logical eventually remove besides definition deprecation deprecation discouragement use feature design practice term prefer", "d": "4/2016"}, {"body": "want deprecate things slated eventual removal also oleg said", "d": "4/2016"}, {"body": "going close issue opposed seems like probably something could addressed elsewhere prove viability utility adopt carry around potential future baggage example proxy could identify versions jquery acceptable licenses eg using sha hash inject appropriate license tag would advantage working past versions jquery thus allowing many existing web sites run solution involves build system would beneficial users popular sites upgrade would take years", "d": "4/2016"}, {"body": "hi missing bracket many others getting error compiling assets rails uglifier vendorassetscomponentsjquerysrcintrojs execjs programerror unexpected token eof undefined line col pos idea avoid thanks", "d": "4/2016"}, {"body": "alexdesi rails compiling file nt touch btw already fixed master amp collapsed one file srcwrapperjs jquery setup way", "d": "4/2016"}, {"body": "mgol got compiling manually file uglifier rails gem get information precompiling way using jquery probably required boostrap using bower said use required rails assets explicitly requiring probably way go exclute introjs way asset compiling", "d": "4/2016"}, {"body": "nt know asset compiler got file definitely nt referenced build script thing get think tries compile every js file inside directory incorrect first report see problem breaking rails app surely hear immediately sure nt put something would make try compile files config know nothing rails need research little", "d": "4/2016"}, {"body": "mgol think get point rails assets trying include every js file need figure include necessary ones thanks advice", "d": "4/2016"}, {"body": "glad helped", "d": "4/2016"}, {"body": "tempted say document hard say collapsed borders belong shared custody nt work used setter", "d": "4/2016"}, {"body": "rick released comparison video showing potential passive event listeners cnncom pretty compelling deep dives cnn similar websites eg bloomberg identify candidates passive event listeners early take suggests passive event listeners supported jquery would really help lot", "d": "4/2016"}, {"body": "fasttracked several major browsers add plumbing seems like would limited use unless enough browsers support links browser tickets tracking implementation would helpful", "d": "4/2016"}, {"body": "tracking bug safari told interested contributed design knows ifwhen make implementing priority gecko tracking bug priority nt clear hearing bunch demand web developers though mostly response video tweet bit chicken egg problem think engines waiting see extent developers adopt many developers talk nt easy way use jquery nt expose yet developers talking nt using jquery get benefit right away got metrics let us report perf improvements sites aggregate probably fuel interest", "d": "4/2016"}, {"body": "clear plugin mentioned already lets take advantage passive event listeners long always want events particular type particular element either passive nonpassive nt ever attaching cancellable events page remove class check completely force noncancellable need moment able use passive event listeners jquery lack implementation nt blocker describe use cases see get going", "d": "4/2016"}, {"body": "dmethvin think needs serious revisit late future really relevant make decisions wordpress included broke dozens themes hundreds really popular themes means bug wild large scale problem products unrelated issues reliant users theme throwing stupid errors entire support queue full due problems ca nt anything seems like simple solution would simply make still recognize older ones throw silent error still expected originally deprecate document revist later remove entirely progress name progress anything", "d": "4/2016"}, {"body": "wordpress updates jquery version may always break themes especially major upgrade jquery nt major upgrade previously nt following semver minor upgrades breaking changes time time eg many im sure broke lot code back well unavoidable otherwise could nt make changes library completely normal new jquery version released pluginsthemes nt work adjust changes time micha\u0142 go\u0142\u0119biowski", "d": "4/2016"}, {"body": "totally agree mgol think discuss today meeting anyway", "d": "4/2016"}, {"body": "put discussion one place agree danieliser late change point original change made master last year shipped early january reason resurrected week wordpress update wordpress themes impacted appears autoupdate themes come light last year even right release could done something different let revisit change better people update themes goingforward question wordpress ever update jquery right wp includes migrate order let themes sloppy upgrade jquery themes would need able run jquery without migrate combination would allow work given uproar changing invalid undocumented thing like unquoted attributes worry something substantial fare seems like main problem wordpress themes either updated users theme update available either makes jquery update risky sure deal never updating jquery", "d": "4/2016"}, {"body": "could stop autoupdating jquery let theme builders decide version jquery use", "d": "4/2016"}, {"body": "always revert release thing major saying saying option", "d": "4/2016"}, {"body": "seems main problem jquery throws error caught makes scripts page stop working jquery historically treating wrong inputs noop returning empty list instead throwing assumed consumers implicit behavior inherent jquery philosophy therefore many people bothered surrounding anything throwcatch clause minor update expected break everything reason fix changes behavior noop throw error higher impact fix breaks behavior nt stops scripts page suggestion future prevent kind problem treat behavior change noop error major breaking change worth changelog even undocumented way unintended breakage hope makes sense", "d": "4/2016"}, {"body": "hope makes sense makes lot sense cc", "d": "4/2016"}, {"body": "suggestion future prevent kind problem treat behavior change noop error major breaking change worth changelog even undocumented way unintended breakage although agree something changelog sure would changed anything case thing know time seems several popular wordpress themes used feature due way jquery gets updated manymost sites via wp update explicit decision update jquery site owner nt gotten much feedback scale problem last week wp update always revert release thing major saying saying option major great place breaking change considered one mentioned clear wp path jquery right anyway one smaller problems could stop autoupdating jquery let theme builders decide version jquery use trickier understand wordpress default always puts relatively recent jquerymigrate updates part autoupdate cycle themes plugins outside theme use one since others paranoid load via noconflict course gets wasteful since page loading multiple copies however experience many sites latter example loads migrate allows run thickbox sob", "d": "4/2016"}, {"body": "although agree something changelog sure would changed anything case think idea consider change starts throw breaking change major great place breaking change considered one consider breaking release another proposed revert wordpress users would deal issue jquery major update patch version", "d": "4/2016"}, {"body": "treat behavior change noop error major breaking change worth changelog even undocumented explicit contradiction api design guidelines undocumented inputs result unpredictable output api may throw error inside jquery nothing unpredictable behavior may change without warning across versions even minor patches see merits proposal reluctant switch", "d": "4/2016"}, {"body": "switch yeah proposed summoned", "d": "4/2016"}, {"body": "think idea consider change starts throw breaking change ah okay understood although means hands essentially tied avoid invalid input becoming thrown error pretty restrictive need check effects inputs null undefined window document consider breaking change release another proposed revert wordpress users would deal issue jquery major update patch version nt think switch back months good idea", "d": "4/2016"}, {"body": "pretty restrictive indeed seems action could taken could protect us things nt think switch back months good idea reiterate saying nt saying option quote nt gotten much feedback scale problem last week wp update nt case think something prevent things happen future", "d": "4/2016"}, {"body": "one solution specific case add logic migrate since wordpress includes example find pattern first try see valid throws try string replace add quotes break cases think pathological question whether rare pathological case outweigh benefit fixing common case", "d": "4/2016"}, {"body": "one solution nt try failed case wordpress breakage revealed consequences change jquerymigrate might help wordpress case rest", "d": "4/2016"}, {"body": "rest cases include migrate change code like migrate idea fix wordpress nt think revert", "d": "4/2016"}, {"body": "yeah meeting minutes continue think", "d": "4/2016"}, {"body": "right migrate warns naked hashes cases like regexp would incorrectly update part actually break validbutbizarre selector running qsa first would fix particular one although would still mangled regexp", "d": "4/2016"}, {"body": "dmethvin thanks revisiting issue pretty close spot last part themes loading extra jquery fagnermartinsbrack well said timmywil partially correct ways wp uses asset queing system see wpenqueuescript allows dynamic inclusion scripts themes plugins including dependency management ie plugin uses jquery tell wp load mine theme needs older version either replacing every script needed jquery alternative would enqueing custom version jquery separately using noconflct may bit presumptuous wp core philosophies bit different course internet runs software extendable way like hands bound well breaking changes quite regularly well documented get distributed directly developers via many channels well release etc markelog dmethvin would nt start backtracking nt point initial comment well documented wp core team would made sure distribute changes info automated themeplugin scanners wordpressorg repository would also able flag themes using release wp email goes every dev telling check plugins list issues themes automatically scanned hopefully plugins soon glad see conversation moving would suggest since wp uses jquery core dependency large percentage rely may behoove wp core team work direct communication channel discuss things detail sure would happy discuss path well push authors update themes ahead time", "d": "4/2016"}, {"body": "danielliser thank responses right need better communication wp team perhaps irc channel", "d": "4/2016"}, {"body": "timmywil wp slack group nearly core communication goes may option make new channel guys slack case tell dev wp community wordcamp organizer wp community open love collaboration think would win wp amp jquery", "d": "4/2016"}, {"body": "also slack jquery team maybe could squat wp team", "d": "4/2016"}, {"body": "timmywil nothing else able use get touch right people find another communication channel wp slack make wp describes different core groups slack channel info provided well scheduled meeting times etc make wp core likely channelgroup talk scheduled meeting info member info use get touch", "d": "4/2016"}, {"body": "okay discuss length meeting decide following gon na revert try mitigate jquerymigrate since wordpress includes help changed policy guideline prevent changes happening patchminor versions casebycase bases discuss wordpress team thank thoughts everyone", "d": "4/2016"}, {"body": "markelog thanks guys think go long way going discuss fellow wp devs possibility automated compatibility checks plugins themes well possibility versioned loading jquery future allowing plugins amp themes load select version required unique namespace think could path jquery years", "d": "4/2016"}, {"body": "wordpress jquery communication one wordpress core committers happy help encourage communication way idling jquery jquerydev rooms jorbin feel free contact ever need anything wordpress yall also welcome come hang slack", "d": "4/2016"}, {"body": "aaronjorbin thanks jumping think strategic partnership wp amp jquery", "d": "4/2016"}, {"body": "fwiw wordpress slack channel since first created multiple wordpress committers ping things come related jquery projects sure helps change like though unless timmywil going inform wordpress devs every change one part solution available easy aaronjorbin wp jquery side another part making presence known easy people involved thread know aaronjorbin available ping channels needed however others know time people thread forget bigger part active aaronjorbin said idling jquery jquerydev rooms jorbin idling paying attention everything going saying bad exactly jquery wp side years going back slack without active part sure issues like avoided increasing communication even certainly people side idling various channels people know ping right times interested hear plans type problem avoided future used take much active role across several projects years since switched passive role page date used track information jquery ui wiki though never published individual names people worked", "d": "4/2016"}, {"body": "scottgonzalez interested hear plans type problem avoided future improving communication projects would definitely help personally aware connection wordpress team wordpress nt exclusively affected problem received issues scale however revealed ticket reopen added back agenda weekly meeting monday extensive discussion letting kind issues rise patch minor versions resulted guideline changes careful kind changes even though still evaluated case case basis guideline says likelihood event low wordpress themes though users maybe dmethvin timmywil info", "d": "4/2016"}, {"body": "sounds great markelog also mean changes like even though feature undocumented listed change log major releases", "d": "4/2016"}, {"body": "yeah see definition undocumented inputs result unpredictable output", "d": "4/2016"}, {"body": "perfect thanks", "d": "4/2016"}, {"body": "markelog thanks special attention guys shown think even subtle guideline change like could make difference terms keeping scale issues next step would get wp make meta team involved update automated scanners look types things notify plugin amp theme authors automatically", "d": "4/2016"}, {"body": "hi everyone followed discussion wondering think good time improve documentation table created advocate best practices showinghiding elements far note added commit might enough", "d": "4/2016"}, {"body": "form table api docs seems like good idea", "d": "4/2016"}, {"body": "unfortunate great building gettersetter combo methods", "d": "4/2016"}, {"body": "sorry inconvenience willing consider exposing method documenting plugins nt like public methods nt documented", "d": "4/2016"}, {"body": "mgol needs done achieve see also", "d": "4/2016"}, {"body": "separate qunit module needs defined wrap promisesa test suite run automatically browsers en example run might straightforward achieve expect apply hackery get done properly wanted get release ask would like try achieve ask test purposes", "d": "4/2016"}, {"body": "mgol would like help achieve little experience qunit though able run version qunit yesterday newly released deferredjs tests passed deferredjs tests comparable promisesa test suite tests user help", "d": "4/2016"}, {"body": "mgol actually jquerygitjs ran qunit yesterday downloaded jquery zip github include within change source point local copy jquerygitjs ran tests assertions passed", "d": "4/2016"}, {"body": "deferred tests nt contain promisesa one new test would added gruntfilejs testdatatestinitjs new module created inside testunit file would need define qunit test would invoke promisesa test suite run browser require writing browser adapter test suite similar testpromisesaplusadapterjs information available readme promisesaplustests npm package mostly", "d": "4/2016"}, {"body": "mgol little experience using nodejs previously composed adapter reviewed readme found deferred exposed run", "d": "4/2016"}, {"body": "mgol probably incorrect though tried require promisesaplustests require jsdom env function errors window errors consoleerror errors return received error", "d": "4/2016"}, {"body": "nt replied want fix issue jquery run tests tonicdev runs code node browser nt seem like solves willingness run browser error got caused tonicdev default runs old version node", "d": "4/2016"}, {"body": "mgol nt replied want fix issue jquery run tests yes fix issue jquery attempted convey would like help achieve user help little experience nodejs unit tests though willing help able", "d": "4/2016"}, {"body": "ok need set locally tonicdev wo nt help need set test environment read run qunit test suite building jquery via grunt described readme navigating nt experience node amp qunit need warn though nt seem extremely easy would nt classify good first bug", "d": "4/2016"}, {"body": "mgol portion follow instructions entire page returned error run", "d": "4/2016"}, {"body": "think everything may useful maybe except section building whole jquery running amd mode particular need working apachephp setup recent nodejs", "d": "4/2016"}, {"body": "mgol run builtin web server locally procedure work builtin server reinstalled nodejs yesterday believe amd mode tests composed ordinary javascript without reliance nodejs php server", "d": "4/2016"}, {"body": "real web server needed eg ajax tests also run jshint build files amd one final file etc nodejs needed love use apachephp lots tests using php rewriting would long nontrivial task currently builtin php server fail ajax tests task nt require run ajax tests might fine", "d": "4/2016"}, {"body": "mgol found requirebin receiving error", "d": "4/2016"}, {"body": "mgol tried different browser received error", "d": "4/2016"}, {"body": "mgol could reproduce tests see jquery team ran tests", "d": "4/2016"}, {"body": "timmywil team run tests described jquery beta released jquerydeferred objects updated compatibility promisesa promises verified promisesa compliance test suite", "d": "4/2016"}, {"body": "included test suite tests run grunt task", "d": "4/2016"}, {"body": "mgol", "d": "4/2016"}, {"body": "mgol approach link return expected results", "d": "4/2016"}, {"body": "sure asking could elaborate", "d": "4/2016"}, {"body": "mgol referencing approach return expected results described op get test suite run real browsers note could probably improved ieg substitute elements single page elements ability reference file existing object full source run tests issue misunderstood", "d": "4/2016"}, {"body": "described needs done proof concept repository nt nt even use qunit", "d": "4/2016"}, {"body": "sorry interrupting wanted start using karma point maybe could first step think", "d": "4/2016"}, {"body": "perhaps tests stable enough make work least main browsers expect problems android ones though nt nice story recovering failed tests etc", "d": "4/2016"}, {"body": "yeah probably although nt lot tests promise support recall might pass", "d": "4/2016"}, {"body": "mgol experience running goal run promisesa compliance tests browser test jquery deferred however could achieved mean nt tests running correctly experience running saying run tests yes nt promisesa compliance test included files referenced composers files willing help clear guidance", "d": "4/2016"}, {"body": "news guys performance difference noticeable personal experience replacing closest tr thisclosest tr traversing table saved whole seconds test determine selector qsa sizzle compatible surely exists somewhere code ca nt find quick safe solution check improve speed use cases", "d": "4/2016"}, {"body": "test case jsperf real code hard imagine situations would save seconds code could clarify", "d": "4/2016"}, {"body": "different nt big simple examples something like calls element exist uncommon reallife difference seconds actual code complex public access anyway tried best mimic structure real code omitting anything irrelevant uncomment line see timing using jquery closest", "d": "4/2016"}, {"body": "open ticket api repo document", "d": "4/2016"}, {"body": "aurelioderosa yes think tickets label need docs changes", "d": "4/2016"}, {"body": "able take lot wording generate issues upgrade guide currently google doc", "d": "4/2016"}, {"body": "atleast builder jquery divided libraries example wanted use dom manipulation part jquery nt want ajax included increase file size using module like jquerylibscoredom would great reduce file size", "d": "4/2016"}, {"body": "srahulprdxn use amd modules purposes", "d": "4/2016"}, {"body": "mgol thanks lot addressing exactly needed", "d": "4/2016"}]