[{"title": "", "body": "description link test case", "num": "3705", "d": "6/2017"}, {"title": "fails maximum call stack size exceeded", "body": "open html file simple code fails documentqueryselectorall works expected", "num": "3704", "d": "6/2017"}, {"title": "jquery data cache may memory leak", "body": "description long run web app much event add removebut event remove use thiscache unlock end hundred thousand long cache array chrome profiler tool cache occupy lot memoryas time go situation worse link test case", "num": "3703", "d": "6/2017"}, {"title": "inconsistent behaviour using data elm elm data", "body": "description using data attributes see weird behaviour first time access element data via see dom dataattributes calling show correctly calling return object equal first object equal second tested jquery link test case", "num": "3701", "d": "6/2017"}, {"title": "incredible shrinking scrollboxes", "body": "worked everywhere except investigation traced root cause mishandling browser particularly combination specifically seems always report content box dimensions even borderbox elements lack accounting scrollbars means roundtrip set operations shrink elements", "num": "3699", "d": "6/2017"}, {"title": "outerheight differs chrome", "body": "description outerheight differs chrome test case height shows chrome link test case", "num": "3698", "d": "6/2017"}, {"title": "exception jqueryeventspecial handleobjorigtype mousescroll", "body": "eventjs jqueryeventspecial scroll event uncaught typeerror jqueryeventspecial handleobjorigtype intermediate value handle handleobjhandler apply function dispatch elemdatahandle", "num": "3697", "d": "6/2017"}, {"title": "exception jqueryeventspecial handleobjorigtype mousescroll", "body": "mouse scroll uncaught typeerror jqueryeventspecial handleobjorigtype intermediate value handle handleobjhandler apply function dispatch elemdatahandle insert jqueryeventspecial scroll", "num": "3696", "d": "6/2017"}, {"title": "jquery stop propagation native eventhandlers", "body": "description eventhandlers registered natively called even called used using native correctly stops propagation link test case following test case triggered page loaded cases event bubbling prevented still triggered eventhandler link stackoverflow discussion", "num": "3693", "d": "6/2017"}, {"title": "invalid pagex pagey properties returned nonmouse events firefox", "body": "description probably firefox issue jquery issue seems regesseion something jquery used handle longer latest version jquery finding invalid properties returned firefox events contain data issue manifests firefox chromium ie nt seem problem firefox include invalid data raw event causing bug one jquery plugins stevenbennerjquerypowertip link test case click input note output checks type value property event fired multiple versions jquery well raw dom event firefox windows addons firefox linux lots addons chromium internet explorer", "num": "3692", "d": "6/2017"}, {"title": "formprop action returns form gt input name action instead action attribute", "body": "description following consider form submit function consolelog prop action result string foobar returns object htmlinputelement link test case", "num": "3691", "d": "6/2017"}, {"title": "param key lt corrupts value", "body": "tested jquery version chrome firefox try console returns note instead", "num": "3690", "d": "6/2017"}, {"title": "chrome focusin triggert input field autocomplete", "body": "description user login credentials stored chrome browser autofills form focusin eventhandler triggered without jquery event triggert issue exists since last version chrome link test case open link fill form credentials save credentials chrome open showiframe chrome fills form iframe log see jquery triggerin focusin event native event listener event triggered", "num": "3689", "d": "6/2017"}, {"title": "function", "body": "", "num": "3687", "d": "6/2017"}, {"title": "synchronous xmlhttprequest", "body": "deprecation synchronous xmlhttprequest main thread deprecated detrimental effects end user experience help check line version hard warning", "num": "3686", "d": "6/2017"}, {"title": "feature request jquery group", "body": "hi folks feature already exists please close issue require access jquery internals jquery benefit feature yes avoid repetitive tasks like need already served plugin nt found plugin bad idea make plugin change existing api support best practice yes follows dry concept thinking codepen example regards", "num": "3685", "d": "6/2017"}, {"title": "done callback called order", "body": "description resolved deferred done callback immediatly invoked unlike callback wait scope end first argument done callback thought behavior would identical normal link test case", "num": "3684", "d": "6/2017"}, {"title": "different versions jquery different result element width", "body": "description element width use attr transform rotatey width ought change element width element width link test case", "num": "3683", "d": "6/2017"}, {"body": "timmywil im unable create new wiki page maybe stated pointers could go creating wiki page", "d": "6/2017"}, {"body": "created opened wiki editing might temporary depending whether get spam", "d": "6/2017"}, {"body": "documentqueryselectorall works expected however dies way chrome edge takes minutes seconds give answer return firefox runs almost instantaneously seems like issue independent jquery", "d": "6/2017"}, {"body": "jquery fail stack exceeded least function rewritten use recursion", "d": "6/2017"}, {"body": "look repro case gave fails chrome well jquery type console", "d": "6/2017"}, {"body": "however seems work let talk meeting", "d": "6/2017"}, {"body": "going try dropping use loop already sizzle ie lt fallback perf nt issue code end shorter", "d": "6/2017"}, {"body": "thanks opening issue however need issues test cases demonstrate reproduce problem work please provide test case reopen", "d": "6/2017"}, {"body": "working documented lowlevel method retrieve data attributes unless convenient data method already retrieved", "d": "6/2017"}, {"body": "look video looks different get confused step come back cant yet", "d": "6/2017"}, {"body": "thanks opening issue result correct border outer div inner div really", "d": "6/2017"}, {"body": "reopen issue test case bad issue slightly wrong bug provided better test case fixed title description bit", "d": "6/2017"}, {"body": "please work test case minimum removing css html elementsattributes nt affect result", "d": "6/2017"}, {"body": "done new test case needed reproduce issue", "d": "6/2017"}, {"body": "thanks updated test case confirm behavior ie changed jquery", "d": "6/2017"}, {"body": "see inspector notice assume coming default stylesheet add goes away guarantee browsers default stylesheet even possible measurements might different due things like font substitution", "d": "6/2017"}, {"body": "dmethvin biggest issue behavior ie changed jquery looks like unintended breaking change", "d": "6/2017"}, {"body": "please look programming help stack overflow", "d": "6/2017"}, {"body": "fix die", "d": "6/2017"}, {"body": "jquery never able guarantee full interoperability nativevsjquery event handlers best think jquery event subsystem layer top native events happening triggering fake jquery click associated native use track jquery whether propagation stopped default prevented although stopped end truncated bubbling call native dom event calls native handler", "d": "6/2017"}, {"body": "switched using native events triggering could handle scenario expense several serious breaking changes jquery event subsystem also simple lookup know events magically understood specially processed dom click versus custom mycustomevent constructor use etc since would breaking api anyway easiest thing would make caller construct event would nt need lookup", "d": "6/2017"}, {"body": "agree dmethvin bit surprising working designed see trigger documentation plain objects dom objects triggered event name matches name property object jquery attempt invoke property method event handler calls behavior desired use instead correctly prevents jquery running handlers ancestors prevent browser creating bubbling event invoke execute default action like would invoke submit form even propagation stopped since seems like nt want default action use instead invoke addition return listener calls behalf", "d": "6/2017"}, {"body": "yes says nt need stop propagation beyond event target want run jquery handlers without preventing default action use lot tracking systems google analytics facebook etc seem attach events document", "d": "6/2017"}, {"body": "dmethvin naive assumption tells something could done look following lines srceventtriggerjs could nt something like prevent retriggering event since already bubbled jqueryeventtriggered type eventispropagationstopped add native event handler stopspropagation elem type eventispropagationstopped remove event listener added jqueryeventtriggered undefined think makes sense could try work yes running tests find tests relating function", "d": "6/2017"}, {"body": "caillou something like might work determine stopspropagation would need remember element stopped", "d": "6/2017"}, {"body": "dmethvin loot ends line srceventtriggerjs need keep track last node executed upon something like use counter access last node iterated", "d": "6/2017"}, {"body": "dmethvin one problem nt seem find tests relating code additional test cases outside repository test code update figured run integration tests addition unit tests", "d": "6/2017"}, {"body": "tests try locally see work", "d": "6/2017"}, {"body": "dmethvin created branch test reproduce bug proposal bugfix would proceed create pr", "d": "6/2017"}, {"body": "stevenbenner pinged twitter webcompat account via see properly undefined focus event reason seeing jquery transparentlylazily return properties original event test case shows value firefox", "d": "6/2017"}, {"body": "thanks interested hear peoples thoughts based mdn docs suspect properties included firefox focusevent inherits uievent implementation includes uieventpagex note doc page warning nonstandard properties probably trustworthy coming mouseevent eg mouseeventpagex certainly looks like firefox spec one type thing jquery normalize fix fairly trivial implement hacky since value properties trusted workaround compare event type list events would expected include cursor position data ignore coordinate properties included events matched", "d": "6/2017"}, {"body": "browsers fast update cycle nowadays compat issue fixed firefox relatively quickly seems like obscure enough issue code sensitive able check since events occur high frequency jquery tries keep extra code path", "d": "6/2017"}, {"body": "denschub wisniewskit might idea stevenbenner start specific version firefox", "d": "6/2017"}, {"body": "recent change event remove pagexpagey fill event object ah also safari version safari tech preview release safari webkit return results firefox", "d": "6/2017"}, {"body": "nt want keep list appropriate event types even blacklist futureproof seems clear right thing even returning property value lazily meaning longer copy property ahead time step right direction possibly best course take since value nt reliable useful user high priority issue unlikely change anything", "d": "6/2017"}, {"body": "notice problem indicates something caused jquery see several years similar tickets years ago something jquery fix across browsers something easy document jquery level applies jquery apis see web developers need understand problem whether use jquery", "d": "6/2017"}, {"body": "nevermind javascript numbers bits floating point numbers means ca nt represent javascript java longs size mantissa bits means number ca nt exactly represented javascript number js crazyness", "d": "6/2017"}, {"body": "js crazyness", "d": "6/2017"}, {"body": "crazyness use floats default everything", "d": "6/2017"}, {"body": "ca nt reproduce running incognito ensure plugins interfering also added focus event", "d": "6/2017"}, {"body": "incognito mode browser nt autofill form screenshots chrome page see chrome jquery triggers focusin event reason focus event triggert without jquery cant reproduce issue", "d": "6/2017"}, {"body": "strange still ca nt reproduce extra event chrome windows anyone else", "d": "6/2017"}, {"body": "followed steps also reproduce chrome mac os closing worksforme", "d": "6/2017"}, {"body": "reopen bug timmywil dmethvin chrome autofill form step password nt stored correctly", "d": "6/2017"}, {"body": "tested bug completly new installation chrome reproduce issue external plugins installed", "d": "6/2017"}, {"body": "trust look like bug scripts rather jquery issue making noises b nobody able help unless provide enough context suggestion closing one switch portals eg stackoverflowcom", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "please look help stack overflow rhyw suggested also afaik none jquery maintainers speaks chinese reports incomprehensible us", "d": "6/2017"}, {"body": "\u8fd9\u91cc\u662f jquery issue \u90fd\u662f\u4e0e\u6539\u8fdb issue \u5c31\u662f\u672c\u9879\u76ee\u63d0\u4ea4 issue", "d": "6/2017"}, {"body": "btw thank rhyw techquery helping communicate chinese bug reporters appreciated", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "\u53ef\u4ee5\u52a0\u5165\u4ee5\u4e0b qq freecodecamp \u4e2d\u6587\u793e\u533a \u5b66\u5458 freecodecamp \u6210\u90fd\u793e\u533a", "d": "6/2017"}, {"body": "\u597d\u7684", "d": "6/2017"}, {"body": "\u8c22\u8c22", "d": "6/2017"}, {"body": "rhyw mgol lots jquery users web frontend coders china less confidence english fortunately many chinese programmers working improve capable international communication", "d": "6/2017"}, {"body": "warning generated browser jquery best avoid synchronous xhr", "d": "6/2017"}, {"body": "going find plugin literally reason still want support old browsers use nt want index first", "d": "6/2017"}, {"body": "ok main idea merge element variables one action example would class myclass", "d": "6/2017"}, {"body": "matter end result exactly also example existing method", "d": "6/2017"}, {"body": "scottgonzalez many thanks exactly meant", "d": "6/2017"}, {"body": "intended see", "d": "6/2017"}, {"body": "transforms taken account purpose see", "d": "6/2017"}, {"body": "docs height say dimensions may incorrect page zoomed user browsers expose api detect condition consistent experience", "d": "6/2017"}, {"body": "jquery never support browser inbuilt zoom think standard caveat one thing point use case showed working failing stop users switching zoom levels breakage appears specifically chrome assuming something changed height calculated respect break occur zoom supported jquery assume best approach move away jquery another library pure js requirement specific cases case issue fixed subtracting calculate padding top bottom calculated height based specific css", "d": "6/2017"}, {"body": "jquery never support browser inbuilt zoom think standard caveat standard caveat phrase quoted every dimensionrelated api page zoom supported jquery assume best approach move away jquery another library pure js requirement specific cases solve particular case writing code often possible narrow scope problem using things know invariants layout another library pure js solves general problem let us know", "d": "6/2017"}, {"body": "fact used work broke matter concerned may inadvertently affect aspects dimensions zoom involved get outlook ios dave methvin notifications githubcom sent wednesday may pm jqueryjquery cc cuzzins author subject jqueryjquery differing results height zoom set non value padding boxsizing set borderbox jquery never support browser inbuilt zoom think standard caveat standard caveat phrase quoted every dimensionrelated api page zoom supported jquery assume best approach move away jquery another library pure js requirement specific cases solve particular case writing code often possible narrow scope problem using things know invariants layout another library pure js solves general problem let us know receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "uncommon cases document unsupported change behavior across versions ca nt test yes may change browsers nt give consistent results zoomed dimensions mentioned tested chrome far imagine trying test browsers support programmatic way zoom page way user simple solution missing", "d": "6/2017"}, {"body": "maybe need delve code try work code changed breaking way change breaks code way need find solution way seems avoid jquery dimension related code fear much code may broken kinda happy jquery sure change happened way broke things users case use chrome start testing zoomin browsers sure matters unsupported get outlook ios dave methvin notifications githubcom sent wednesday may pm jqueryjquery cc cuzzins author subject jqueryjquery differing results height zoom set non value padding boxsizing set borderbox uncommon cases document unsupported change behavior across versions ca nt test yes may change browsers nt give consistent results zoomed dimensions mentioned tested chrome far imagine trying test browsers support programmatic way zoom page way user simple solution missing receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "doubt change math calculating dimensions possible change ifwhen fix land things like", "d": "6/2017"}, {"body": "raminfp responsible source content parse", "d": "6/2017"}, {"body": "infinite number script injection exploits use jquery jquery designed help inject scripts developer must aware filter input example js tell function tellme click function documentbody append name name val", "d": "6/2017"}, {"body": "thank opening issue likely make changes", "d": "6/2017"}, {"body": "thanks opening issue first releases repo anymore isolated separate repo see however releases nt returned github api repo either draft release notes github jquery blog regardless simply use instead", "d": "6/2017"}, {"body": "krinkle smack middle interface behavior odd crux promise actually resolved another promise counterintuitive interpretation dealing standard resolved distinct settled thenables never fulfillment values thus never provided onfulfilled callbacks resolution intercepts enqueues promiseresolvethenablejob instead fulfilling promise however jquery deferreds restriction ie allow fulfillment thenables therefore nt need concept fulfillment separate resolution backwards compatibility motivated us continue supporting even standards compliance requires brings us analogous unwraps values necessary short dangerous use andor thenablefulfilled deferreds either wrap thenables eg arrays nonthenable objects update callbacks handle nonthenable arguments eg instead team discussion also raised need improved documentation seems cover part thinking insufficient place text could appeared would clarified behavior", "d": "6/2017"}, {"body": "suppose nice andor clearly state result providing thenable resolve return value afaik returning passing thenable cases supported standardscompliant question tested using latest chrome js promiseresolve promise promisestatus resolved promisevalue b promiseresolve promise promisestatus resolved promisevalue c new promise function resolve resolve promise promisestatus resolved promisevalue promiseresolve gt return b promise promisestatus resolved promisevalue jquery behave b behaving differently kind makes sense backcompat also case knowingly promise one well use directly perhaps problem case happened c imho fair situation eg manually promisifying async process given back thenable value one internal async steps may even happen part upstream change eg something used sync becomes async via promise understand jquery internally b c say lot likely b happens wants backcompat nounwrapping situation c c feels likely happen calling code may return promise expected unwrapped js deferred resolve adone val gt consolelog val b deferred resolve bdone val gt consolelog val resolve \u0192 resolvewith \u0192 reject \u0192 rejectwith \u0192 notify \u0192 c deferred function df dfresolve cdone val gt consolelog val resolve \u0192 resolvewith \u0192 reject \u0192 rejectwith \u0192 notify \u0192 deferred resolve gt return ddone val gt consolelog val feel calling lot like returning inside chain callbacks provide next value may may also promise waited suppose could worked around using either way aside explicit documentation new comers jquery unwrapping would good also point jquery specifically nt unwrap promises perhaps deprecate fix breaking change jquery", "d": "6/2017"}, {"body": "thanks moved documentation needs guess keep issue open either always unwrap thenables decide make change", "d": "6/2017"}, {"body": "happy look pr actually see effects changes tests unlikely decide make changes frankly nt want spend much time general philosophy utility functions like obviously ca nt guard everything guard common cases case nt common anymore never common remove simplify best way convince code given inclined close issue reopen pr comes along probably worth noting many times utility function simplifications like get codebase fixing larger issue uses function", "d": "6/2017"}, {"body": "prs accepted like contribute", "d": "6/2017"}, {"body": "shashankanataraj absolutely", "d": "6/2017"}, {"body": "add support arrays multiple arguments multiple arguments one like classlist methods would vote", "d": "6/2017"}, {"body": "multiple arguments might conflict second boolean argument", "d": "6/2017"}, {"body": "seems like nt support multiple classes addremove support still vote nt support", "d": "6/2017"}, {"body": "jbedard discussed already present accepting positional parameters would require way code would align worse standard funkiness like discussion seen", "d": "6/2017"}, {"body": "long time ago info put ticket wanting pick", "d": "6/2017"}, {"body": "going revisited", "d": "6/2017"}, {"body": "issue similar usecase reenberg solve issue specific workaround", "d": "6/2017"}, {"body": "per blog post links change means longer option jquery going forward recommended way cancelling requests", "d": "6/2017"}, {"body": "jfbrennan ticket nt say anything", "d": "6/2017"}, {"body": "dmethvin per blog post links makes sound like removed along nonpromise methods sorry misunderstanding one upvotes says jquery ajax method returns promise without extra methods like abort", "d": "6/2017"}, {"body": "point url official jquery documentation says deprecated removed nt know nt assume stackoverflow answer correct", "d": "6/2017"}, {"body": "says removed specialcase deferred methods jqueryajax jqxhr object promise also extra methods like abort stop request made users increasingly embrace promise pattern asynchronous work like ajax idea special cases promise returned jqueryajax increasingly bad idea kind implies wasis chopping block votes says removed links blog post nt think one misunderstanding might good jquery team clarify although mentioned nt actually removed understand gospel truth seems somewhat widespread misunderstanding gone think blog post may cause", "d": "6/2017"}, {"body": "get original selector string used invoke plugin within plugin example would like return somediv called", "d": "6/2017"}, {"body": "closed ticket nt right place look support general string represents collection plugin receives eg", "d": "6/2017"}]