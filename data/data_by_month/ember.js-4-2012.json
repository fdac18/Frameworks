[{"title": "full text search docs", "body": "would good full text search docs", "num": "761", "d": "4/2012"}, {"title": "perform operations metamorph dom", "body": "decided use emberjs fairly large app two months development started seeing error pop randomly perform operations metamorph dom extremely frustrating since whole development process jeopardy normally works go backandforth different parts app ember suddenly drops error everything breaks load render templates dynamically load ajax compile create view need render template element id target template rendered previously tracked views name appendto target inserting template target element everything looks normal element remains empty call normally back forth various pages rerender many times want fine would go pages come back would trow error using latest version emberjs", "num": "752", "d": "4/2012"}, {"title": "investigate using ember event system dom events", "body": "instance could support nt think would work right", "num": "751", "d": "4/2012"}, {"title": "findnamespaces slow", "body": "fairly small app using emberjs head noticeable delay ember app gets rendered initial page load prompted investigate chrome profiler turns findnamespaces function biggest single hog cpu time page load called times spending total across calls loop inside fairly unsurprising would performance bottleneck nt see obvious way make function faster perhaps change needed fix bottleneck", "num": "749", "d": "4/2012"}, {"title": "real helper", "body": "could greatly benefit logic comparison helper using current build code definitely cleaned guru example iff apppersonname bob emberiff emberobjectcreate emberhandlebarshelpersiff function b c var apath embergetpath var rnum mathfloor mathrandom b var tempname asplit join equal rnum var anext emberiff tempname value else b lt var tempname asplit join less rnum var anext emberiff tempname value else b var tempname asplit join greater rnum var anext emberiff tempname value else b var tempname asplit join notequal rnum var anext emberiff tempname value return emberhandlebarshelpersboundifcall dcontexts anext", "num": "748", "d": "4/2012"}, {"title": "foo bar", "body": "", "num": "746", "d": "4/2012"}, {"title": "allow canceling state transitions", "body": "related previous issue would useful prevent state transitions perhaps another flag object coffeescript statemanagergotostate nestedstate nestedstate emberstatecreate enter statemanager transition gt transitioncancel x think use case async operations somewhere totally unrelated code calls prevent transition async operation complete", "num": "745", "d": "4/2012"}, {"title": "selectionbinding emberselect respect contentbinding emberselect subclassed", "body": "subclass emberselect selection binding successfully set controller try inline template binding connect problem seen demo template selected resadminselectedrestaurantpricecategoryname code resadmin emberapplicationcreate resadminadmincontroller emberarrayproxycreate selection null content id name id name id name id name getobjectbyid function id return thisget content filterproperty id id get firstobject resadminselectedrestaurant emberobjectcreate pricecategorybinding resadminadmincontrollerselection resadminfoo emberselectextend contentbinding resadminadmincontroller selectionbinding contentselection optionlabelpath contentname optionvaluepath contentid var defaultitem resadminadmincontrollergetobjectbyid consolelog defaultitem resadminadmincontrollerset selection defaultitem work inlined code uses bug", "num": "744", "d": "4/2012"}, {"title": "allow state transition", "body": "working emberstatemanager nodejs lot callbacks trouble getting callbacks play nice emberstatemanager seems could easily add ability pass contexts method thoughts agree create pull request something like javascript gotostate function name context enterstate function exitstates enterstates state context var log thisenablelogging make sense way could stuff like coffeescript statemanagergotostate nestedstate callback consolelog someting nestedstate emberstatecreate enter statemanager transition someasyncthing transitioncontextcallback also think making dynamic object way nt pass could", "num": "743", "d": "4/2012"}, {"title": "infinite loop undefined namespaces", "body": "running issue adding itemview collection view ember seems get stuck infinite loop nt get maximum call stack type errors cpu gets pegged chrome firefox following image result chrome javascript cpu profile duration seconds minutes action taken page doublechecked properties also upgraded master set sure things doublechecking guidance start troubleshooting thanks chris", "num": "742", "d": "4/2012"}, {"title": "eachview flatten virtual views", "body": "instance embereachview created via helper getting array flatten virtual views flattening logic exists computed property embercontainerview eachview subclass array made equivalent probably consider adding behavior cause eachview override flatten make changes directly", "num": "741", "d": "4/2012"}, {"title": "embertextarea emberselect override didinsertelement", "body": "ran added didinsertelement method textarea surprised see textarea longer populated value creation textareadidinsertelement already defined textareajs used populate textarea creation first thought might accepted behavior mentioned irc wagenet said using event instead users able overwrite didinsertelement without remember call thissuper also found selectjs overrides method presumedly using event instead reasons textarea see", "num": "740", "d": "4/2012"}, {"title": "using unbound property argument helper template", "body": "handlebars helper takes number returns class name want run helper exists might exist initial attempt nt work metamorph inserts script tag placeholders helper second attempt also nt work foobar exist string passed know render value without binding thus without script tag placeholders maybe could solved something like", "num": "739", "d": "4/2012"}, {"title": "extra comma breaking ie", "body": "need remove comma end line", "num": "738", "d": "4/2012"}, {"title": "capitalized properties working", "body": "asked following question stackoverflow yesterday turned able loop objects capitalized nested initially thought another bug loop also shown loop object use properties view output undefined text element list see following examples see example correctly working version provided pangratz tried come solution internals far head", "num": "737", "d": "4/2012"}, {"title": "documentation blur event named focusout", "body": "good source go standard view events could nt figure nt getting called realized due called cheers", "num": "736", "d": "4/2012"}, {"title": "ember crossdomain iframe gives security error opera calling classtostring", "body": "running qunit tests thru testswarm testswarm testing page one domain actual ember app opens iframe different domain run qunit tests directly well inside iframe opera get uncaught exception referenceerror security error attempted read protected variable specifically inside findnamespaces line looping thru properties testing window wrapped entire inside method trycatch turns offending properties top parent several browserspecific tests start loop sure add opera gives security exception blows try check window parent crossdomain iframe prop top prop parent continue extend trycatch include get obj isnamespace block block blowing either one fixes unit tests inside iframe opera leave hopefully one experts able decide best solution", "num": "734", "d": "4/2012"}, {"title": "problem minified version ember", "body": "ember jisongenerated parser contains function performaction function anonymous yytext yyleng yylineno yy yystate minifies performaction function b c e f g function name matches name fourth parameter seems work cases eg browsers try precompile ember templates server using rhino get errors variable name resolves function rather argument would seem minification incorrect collision function argument name probably undesired", "num": "733", "d": "4/2012"}, {"title": "add history state emberstates", "body": "need en emberdata order support resume error state reference statechart implementation saying juste putting give ideas", "num": "731", "d": "4/2012"}, {"title": "add specific behavior", "body": "talked deprecating however still features missing finish moving features deprecate one obvious cases vs former clear also renders extra view every item since get view item latter renders one per item definitely preferable possible solution allow take", "num": "729", "d": "4/2012"}, {"title": "double insert create append", "body": "see one nt happen without tag", "num": "728", "d": "4/2012"}, {"title": "jquery ui sortable", "body": "able get jquery ui sortable working ember thanks ghempton suggestion use custom sortable helper seems sortable incompatible though jsfiddle jsfiddle happy investigate sure start looking thanks chris", "num": "727", "d": "4/2012"}, {"title": "emberjs documentation clarification", "body": "section reopening classes instances think typo text says nt need define class reopen class define new properties using reopen method personreopen isperson true personcreate get isperson true using reopen also override existing methods call thissuper personreopen override add end say function thing thissuper thing think lower case like nt need define class reopen class define new properties using reopen method personreopen isperson true personcreate get isperson true using reopen also override existing methods call thissuper personreopen override add end say function thing thissuper thing think nt get", "num": "726", "d": "4/2012"}, {"title": "perform code size audit", "body": "", "num": "722", "d": "4/2012"}, {"title": "make render faster simple cases", "body": "hopefully negate need", "num": "721", "d": "4/2012"}, {"title": "make cps smarter nt fire events one watching", "body": "wycats tomdale kselden mainly release tracking", "num": "720", "d": "4/2012"}, {"title": "change default handlebars context", "body": "wycats tomdale know release tracking", "num": "719", "d": "4/2012"}, {"title": "jslint errors reported", "body": "given change like diff diff git apackagesembermetallibaccessorsjs bpackagesembermetallibaccessorsjs index apackagesembermetallibaccessorsjs bpackagesembermetallibaccessorsjs require embermetalcore require embermetalplatform require embermetalutils var nosemicolonhere var useaccessors emberplatformhaspropertyaccessors amp amp emberenvuseaccessors emberuseaccessors useaccessors test suite failure assume happens jslint complains error messages test failures like js runtime errors reported ok", "num": "714", "d": "4/2012"}, {"title": "subviews didinsertelement", "body": "writing ember view turns tree structure menu need recursion use view template view helper recursively calls build nested structure need hook call jquery plugin turn structure menu call plugin didinsertelement event subviews nt rendered yet run code subviews finished rendering", "num": "710", "d": "4/2012"}, {"title": "automate website update new releases", "body": "update references website repo update lib examples repo deploy website generate new docs deploy docs", "num": "705", "d": "4/2012"}, {"title": "automate upload new releases", "body": "upload development minified versions well starterkit", "num": "704", "d": "4/2012"}, {"title": "collectionview support multiple itemviewclassessubclasses", "body": "would nice collectionview could use criterion content representing decide class view create item content right choose single itemviewclass somewhat restricting instance wanted collectionview vehicles might specify vehicleview itemviewclass would nt able use subclasses make vehicleview class carview spaceshipview rather everything ends getting rendered vehicleview lukemelia suggested one way get around choose subclass containerview itemviewclass depending content create manage single instance desired vehicleview subclass something little cleaner solution would desirable", "num": "703", "d": "4/2012"}, {"title": "could nt find unit tests", "body": "hi could nt find unit tests emberjs tests folder nt seem contain test cases someone point correct place thank stanly", "num": "701", "d": "4/2012"}, {"title": "viewhelpers create view set properties extend view", "body": "given instantiated via template would expect run setter instead extends amp thus bypasses computed properties name options passed handlbars helper expected behavior would first create view amp set relevant properties extend view tomdale confirmed irc", "num": "700", "d": "4/2012"}, {"title": "bound attributes nt get escaped properly", "body": "hi guys think found fairly serious bug bind model attribute handlebar template create corresponding model attribute value nt get escaped properly means string contains speech mark end current attribute worse allow someone start new attribute bound allow xss attacks somewhere escapes fine call set attribute js fiddle ps know text field view reality meant hidden field bug still applies general", "num": "699", "d": "4/2012"}, {"title": "setting value shown helper nt work", "body": "created fiddle show works essentially seems update value helper update work example remove dummy helper update works", "num": "698", "d": "4/2012"}, {"title": "npm publish", "body": "please publish embermetal emberruntime version", "num": "697", "d": "4/2012"}, {"title": "emberselect selection visible", "body": "hi issue emberselect problem chrome select option dropdown selected value visible select value value visible select new one visible strangely last value always visible firefox selecting new value stays initial select value instead selected value fiddle code ca nt reproduce fiddle sure wrong using aspnet web form makes difference also new ember improvement suggestion code would appreciated thanks", "num": "694", "d": "4/2012"}, {"title": "binding examples misleading", "body": "binding examples readme kind misleading since stated bindings synced runloop finished also discussed emberjswebsite stackoverflow", "num": "690", "d": "4/2012"}, {"title": "bindings working twoway", "body": "bindings seem work one way docs say sample work uncommented line update binding update husband lost app embernamespacecreate appwife emberobjectcreate householdincome apphusband emberobjectcreate householdincomebinding appwifehouseholdincome apphusbandset householdincome appwifeset householdincome", "num": "687", "d": "4/2012"}, {"title": "enhancement multiple property setter", "body": "currently create class say firstname lastname properties call instanceset firstname ember lastname js set multiple properties instead call would add undefined property passed object identifier object object think would nice feature", "num": "686", "d": "4/2012"}, {"title": "add name includes emberassert getset", "body": "ive bitten many times really would like notified get set something subtle error would make much easier spot solution always getpath get introduce getsimple edgecases might want", "num": "685", "d": "4/2012"}, {"title": "allow usage zepto instead jquery", "body": "zepto recently added support ember issue since ember explicitly tests jquery patch ember order able use zepto would like see ember supporting zepto box people think useful make happen", "num": "684", "d": "4/2012"}, {"title": "nested emnamespace nt work", "body": "creating emnamespace within another emnamespace nt work eg within emapplication code illustrates problem ember namespace test windowmyns emnamespacecreate mynsmydeepns emnamespacecreate nt work windowmyapp emapplicationcreate myappmyviewclass emviewextend myappmyns emnamespacecreate nt work consolelog mynstostring consolelog mynsmydeepnstostring nt work consolelog myapptostring consolelog myappmyviewclasstostring consolelog myappmynstostring nt work digging around source code nt able figure appropriate fix yet maybe someone versed ember knows wrong", "num": "683", "d": "4/2012"}, {"title": "ember requires jquery assertion restrictive", "body": "hi using jquery failing assertion promote relaxed slightly opened pull request change may good reason choose restrictive", "num": "678", "d": "4/2012"}, {"title": "problem adding deleting preceeding item collectionview", "body": "code schedules deferred action add view another view preceeding view becomes destroyed thus dom representation deferred action crash", "num": "676", "d": "4/2012"}, {"title": "view blank clicking button api changed", "body": "welcome emberapplicationcreate welcomebookcontroller emberarraycontrollercreate content loadbooks function get databooksjson function data welcomebookcontrollerpushobjects data consolelog data view emberbutton target welcomebookcontroller action loadbooks load books view collection contentbinding welcomebookcontroller tagname ul lt b gt contenttitle lt b gt contentauthor lt gt contentgenre lt gt collection title ready player one author ernest cline genre science fiction title starship troopers author robert heinlein genre science fiction title delivering happiness author tony hsieh genre business", "num": "675", "d": "4/2012"}, {"title": "broken link indexhtml", "body": "link seems broken indexhtml inside started kit pack", "num": "674", "d": "4/2012"}, {"title": "sample binding given run sth wrong needs configurations", "body": "code indexhtml script src gt script src gt appjs code document ready function var app emberapplicationcreate apppresidentemberobjectcreate name obama appcountryemberobjectcreate presidentnamebinding apppresidentname alert appcountryget presidentname undefined values shown dialog", "num": "673", "d": "4/2012"}, {"title": "sub superclass transformations fire", "body": "expect bindingtransformation defined subclass override bindingtransformation defined superclass transformations sub superclass seem fire see pressing button expect get messages subclass transformation get one transformation two subclass transformation bug design decision", "num": "672", "d": "4/2012"}, {"title": "action helper fires action action called", "body": "adding action named fires page loaded behavior present ember", "num": "671", "d": "4/2012"}, {"title": "bad link jquery starter kit", "body": "link jquery starter kit points instead", "num": "670", "d": "4/2012"}, {"title": "broken version ember starter kit", "body": "appears starter kit version file", "num": "669", "d": "4/2012"}, {"title": "emberview append appended application rootelement", "body": "creating application defining root element later adding view via appends body element instead app events view handled see jsfiddle could nt find get app rootelement within view possible considered bug think submit solution soon know get rootelement also think could kind difficult emberapplication instances dom different areas right maybe traversing dom view element class would also addressed", "num": "668", "d": "4/2012"}, {"title": "state bubbling", "body": "following global state object expected behavior calling state changed parent would return event parent however technically already parent state nested inside child simple way exit state return parent fwiw worked around creating state set parent initial state level child moving events calling within child", "num": "667", "d": "4/2012"}, {"title": "controller view nt walk parent hierarchy", "body": "child view inside parent explicit controller set nt use parent view controller following code nt work myappcontrollersitemscontrollerjs appitemscontroller emberarraycontrollerextend myappviewsscreenindexviewjs var screenindexview appscreenindexviewcreate controller appitemscontroller templatename myappscreenindex myapptemplatesscreenindexhandlebars view appchildview myapptemplateschildhandlebars controller title myappbootstrapjs appitemscontroller appitemscontrollercreate content appitemfind however explicitly controller child view work eg", "num": "666", "d": "4/2012"}, {"title": "calling page load initialstate set causes states shown", "body": "try use use statemanager page load states shown jsfiddle issue jsfiddle workaround since behavior issue never looks like use case think workaround nt necessary", "num": "665", "d": "4/2012"}, {"title": "everyproperty returns true empty lists", "body": "would expected return false", "num": "664", "d": "4/2012"}, {"title": "debugmode warnings common typos eg insertnewline io insertnewline", "body": "starting emberjs coming backbonejs first silently failing bug following example todos app might useful something like pardon coffeescript automatically generate warning like back learning emberjs months submit pull request", "num": "663", "d": "4/2012"}, {"title": "controller strategy garbage collection destroy", "body": "trying figure ember best practices app regarding models emberdata controllersviews use user example feel like want get user database wrap usercontroller set model content property view want bind controller functionality controllercontentfield modellevel data say model property like youfollow true controller something like view use say get list users back database feel like want wrap user models usercontroller make list usercontrollers available view done working nicely everytime reload list rewrap new model objects new controllers time controllers memory seem get larger larger base controller class logging calls destroy dont see happening view side know views getting destroyed every page redraw also using emberlayout emberroutemanager use statemanager underneath move code view know get destroyed recreated everytime dont feel like functionality like togglefollow supposed view thinking things correctly offbase models wrapped controllers could lots smaller controllers screen make sure garbage collected thinking controller actually view sort garabage collection strategy aware make sure emobjects cleaned hopefully makes sense", "num": "658", "d": "4/2012"}, {"title": "views template raise exception overriding handlebars markup", "body": "expected exception raised following overriding view known template nothing currently renders nothing view javascript editviewjs apppeopleeditview emberviewextend templatename peopleedit indexhandlebars code view apppeopleeditview view", "num": "657", "d": "4/2012"}, {"title": "starter kit downloaded ember front page missing", "body": "need file", "num": "656", "d": "4/2012"}, {"title": "jqueryrails method delete link stops working", "body": "got link works include ember breaks misses confirm popup treated get http request use ember", "num": "655", "d": "4/2012"}, {"title": "bindingnot firing observers", "body": "issue setting binding using bindingnot setting couple observers binding none notified observers get notified though use something like bindingbool recreated issue jsfiddle sure something wrong misinterpreting bindingnot meant", "num": "653", "d": "4/2012"}, {"title": "allow event manager catch method", "body": "eventdispatcherjs dispatchevent ignoring events registered callbacks within view event manager useful allow catch event handler debugging enable generic pattern matching events catchall event handler pass call eventname addition event view", "num": "652", "d": "4/2012"}, {"title": "binding transforms directly handlebars", "body": "possible use binding transforms directly handlebars nt discovered yet like example docs possible right handlebars something like giving much power templates going ember best practices giving much flexibility templates forces code go javascript classesobjects", "num": "651", "d": "4/2012"}, {"title": "uncaught exception ewot", "body": "exception see emberviewstatesinbufferempty happening sometimes dont know make simplified jsfiddle show happening parts app multiple nested views maybe knew throw ewot meant could debug", "num": "647", "d": "4/2012"}, {"title": "emberselect multipletrue sometimes fails sync selected", "body": "ebryn previous pull request two errors would result underlying select objects selection property wrong sometimes jquery selector converted array resulted jquery map invoked reversed signature index value objectsat simply wrong", "num": "645", "d": "4/2012"}, {"title": "rake upload broken", "body": "tried upload latest build emberjs via got following error message building ember done uploading repository pangratzemberjs uploading emberlatestjs rake aborted failed post file info tasks top gt upload nt work somebody else maybe related recent blog post github", "num": "644", "d": "4/2012"}, {"title": "attach new property arraycontroller content", "body": "fiddle arraycontroller full numbers property sum start removing objects array sum nt update content nt property however property length summation function sum updates automatically length changed get update reality going calculating total price checkout want able change individual prices add remove items total price change", "num": "640", "d": "4/2012"}, {"title": "packaged", "body": "", "num": "638", "d": "4/2012"}, {"title": "prototype subclass emberobject unexpectedly modified upon first instantiation subclass", "body": "probably misunderstanding part instead bug definitely run bit nonintuitiveunexpected behavior example referencing define class like c emberobjectextend foo bar immediately afterward evaluate expression cprototypefoo expression evaluates undefined create instance c ccreate evaluate expression cprototypefoo expression evaluates bar seems prototype class c modified instantiating first time behavior intended got bitten behavior tonight", "num": "637", "d": "4/2012"}, {"body": "namespaces supposed uppercase bindings templates search globally path starts uppercase", "d": "4/2012"}, {"body": "relative paths template uses relative paths adds little naming conventions organization good blog entry naming conventions", "d": "4/2012"}, {"body": "wagenet documentation issue", "d": "4/2012"}, {"body": "cheers kselden", "d": "4/2012"}, {"body": "kselden possible nt making casing rules clear", "d": "4/2012"}, {"body": "also like navigation method name handy utility functions namespace might find unless know go looking", "d": "4/2012"}, {"body": "things way definitely standard setup", "d": "4/2012"}, {"body": "pretty sure actually bug issues stem unusual unsupported architecture app however might make sense us provide better documentation clear front nt", "d": "4/2012"}, {"body": "something look whether target element appending parent nodes already managed another ember view case view destroyed remove element view appended peter said code provided unusual approach recommended curious hear came approach solve particular problem", "d": "4/2012"}, {"body": "appending replacing existing views explicitly disallowed", "d": "4/2012"}, {"body": "load every single template compile would take forever loading templates ajax needed right approved way", "d": "4/2012"}, {"body": "emberfail set templatename newtemplatename view rerender new template nt different view classes could leave one attached update template use complex scenarios use embercontainerview let manage childviews property programmatically want switch pages load template via ajax register embertemplates update childviews add new view using new template api docs containerview helpful understanding manage childviews", "d": "4/2012"}, {"body": "ok programmatically load views andor templates add view using method make parent view aware child view typically containerview push remove child views also extend view use addchild render use append methods root view", "d": "4/2012"}, {"body": "also precompile templates js load script", "d": "4/2012"}, {"body": "closing since added basic documentation warning incorrect use emberfail questions continue thread though might better luck stack overflow", "d": "4/2012"}, {"body": "lukemelia tried suggested nt work", "d": "4/2012"}, {"body": "trying call set subclass would need called instance", "d": "4/2012"}, {"body": "wagenet really need way switch view different templates containerview sortof achieves though means shuffle views array instead setting template", "d": "4/2012"}, {"body": "emberfail able set property view call ideally nt even call need see", "d": "4/2012"}, {"body": "simple example", "d": "4/2012"}, {"body": "fork kselden showing proper use append method", "d": "4/2012"}, {"body": "lukemelia example thissimpleview also subclass yet call set nt get works example nt work example posted way thanks helping really stressed looks like able relatively simple rewrite", "d": "4/2012"}, {"body": "thissimpleview actually subclass totally forgiven thinking containerview things let assign view subclass property names matching supply childviews turn view instances containerview instantiated nt used trick example worries help hope project gets back track", "d": "4/2012"}, {"body": "update fiddle without containerview property shortcuts", "d": "4/2012"}, {"body": "lukemelia makes sense one last question hopefully example set new template listed childviews valid better push goodbye array", "d": "4/2012"}, {"body": "getting view instances templates confused reusing view instance setting template name calling rerender", "d": "4/2012"}, {"body": "wanted replace existing view", "d": "4/2012"}, {"body": "getting confused view classes view instances emberjs documentation uses emberviewextend emberviewcreate interchangeably sure one use since like call rerender switched emberviewextend calls emberviewcreate immediately get strange errors coming depths ember", "d": "4/2012"}, {"body": "emberfail definitely used interchangeably creates instance class called creates subclass inherited class called part think typical classical objectoriented system inheriting instantiating places ember framework allows convenience pass either view class view instance beyond places two treated interchangeably", "d": "4/2012"}, {"body": "made simple app reflecting want issues basically lets swap views beginning nt work click events use emberviewcreate root view otherwise ca nt append use emberviewextend classes instances views ca nt call rerender change emberviewextend emberviewcreate child views get strange error somewhere inside ember works rootview child views clear add rootviewrerender works rerenders whole app instead views want update javascript showlanding live click function appcontentset view appcontentget viewlanding approotviewrerender showproduct live click function appcontentset view appcontentget viewproduct approotviewrerender", "d": "4/2012"}, {"body": "lukemelia totally understand one class another one instance clear one ember wants example posted wants instance rootview classes nested views makes little sense", "d": "4/2012"}, {"body": "extend creates subclasses create creates instances rerender append instance methods need view instance containerview childviews little overloaded instantiation expects childviews contain classes instances init turns classes instances creation expects instances pushed inserted childviews", "d": "4/2012"}, {"body": "working example fiddle tries illustrate concepts hope helps", "d": "4/2012"}, {"body": "perhaps memoization would good start", "d": "4/2012"}, {"body": "joliss noticeable surprised expressing concerns startup slow probably something else scan general new namespaces created seem consistent number namespace application elements", "d": "4/2012"}, {"body": "joliss may actually wrong often get called anyway ca nt see would cause noticeable slowdown suspect issue elsewhere", "d": "4/2012"}, {"body": "closing ticket let know mistaken reopen", "d": "4/2012"}, {"body": "okay let back step elaborate think important ember kindof slow look travis feels sluggish especially load time much cpu utilization ajax even supersimple mini ember app get something like cpu time load still tolerable terms user experience keep mind running chrome fast developer laptop shudder think regularpeoplelaptop slower browser would feel like let alone mobile device really think try make ember faster unfortunately single glaring performance bottleneck ember cpu time spread many functions fix minor performance issues onebyone looking startup cpu profile biggest consumer time seemed like good place start opened issue since iterates also seems like fairly lowhanging fruit terms optimization noticeable machine ever slightly people machines much importantly along optimizations firmly believe start add much noticeable", "d": "4/2012"}, {"body": "wagenet say agree joliss one testing iphone startup time pretty although app reasonably performing", "d": "4/2012"}, {"body": "function question btw reference", "d": "4/2012"}, {"body": "honestly ca nt think way make faster anyone ideas please let know reopen issue otherwise nt see", "d": "4/2012"}, {"body": "joliss jamesotron also benchmarking emberprodjs emberminjs strip unnecessary dev code version may slowing app also look precompiling handlebars templates well compilation load delay startup", "d": "4/2012"}, {"body": "weird use emberprodjs rails production environment findnamespaces seems go maybe something seriously wrong profiler ember different codepath production mode nt know nt believe single call would account difference", "d": "4/2012"}, {"body": "consider problem solved", "d": "4/2012"}, {"body": "emberassert messages use tostring ember classes objects tostring uses findnamespaces emberasserts removed prod min dist memoized recomputed create namespaces", "d": "4/2012"}, {"body": "explains memoized recomputed create namespaces reopen actually problem practice think extra ms development mode nt hurt bad imo", "d": "4/2012"}, {"body": "meant already look namespaceprocessed flag", "d": "4/2012"}, {"body": "something explicitly chosen support want keep logic handlebars templates minimum course always welcome write handlebars extensions", "d": "4/2012"}, {"body": "thanks peter", "d": "4/2012"}, {"body": "blindsamson code riddled memory leaks bro", "d": "4/2012"}, {"body": "suggestions welcome know league guys", "d": "4/2012"}, {"body": "going way also foo bar foo bar else bar", "d": "4/2012"}, {"body": "tchak nt think follows purpose allow us provide block nt change context nothing adding extra logic", "d": "4/2012"}, {"body": "wagenet youp sorry read afterward campfire log know true see helper think cool stuff playing arity helper functions", "d": "4/2012"}, {"body": "hacky proof concept", "d": "4/2012"}, {"body": "context bindings parent view view creating defined parent view nt work", "d": "4/2012"}, {"body": "yeah state machine design pattern feels like breaking async conditions example code towermodelpersistencecoffee coffeescript towermodelcreate callback runcallbacks create block gt complete callback block callback ends calling potentially several async functions could async call database node validates uniqueness callbacks could async actual mongodb save callbacks right code state machine nest callbacks code relatively clean every method final parameter fine though since accepted best practice async nodejs environment trying switch use statemachine pattern getting ever complicated say state structure method building emberdata say got transition context working could pass callbacks state state becomes already thick spaghetti code longer using callbacks way node nested callbacks instead setting variable say call async mongodb method somewhere state pass callback mongodb method pretty clean code seems right way would statemachine call donewithmongodb whatever emberdata would get original callback statemachine context execute sudden change mongodb code deal statemanager seems like would quickly become code smell agree also start introducing statemanager parts code pretty good chance tell statemachine action another async state may cause transition nt want say set property async callback causes model go state sudden start either conditionally cancelling preventing state transitions queuing pseudo state nested state active async callback overrides possible actions take statemanager nothing async states seems like another code smell question missing something see potential problems state machine design pattern async environments feel like probably much easier cleaner avoid state manager case think", "d": "4/2012"}, {"body": "supposed call directly instead declare events look done model implementation emberdata", "d": "4/2012"}, {"body": "viatropos tchak pointed call directly moment convinced something need change recommend asking stack overflow best practices", "d": "4/2012"}, {"body": "binding global never defined", "d": "4/2012"}, {"body": "chrisconley sounds like master problem exhibit older releases", "d": "4/2012"}, {"body": "wagenet yeah also seen issue able nail issue stemmed app something like removing fixes issue breaking looks like continually two items screenshot console see get jsfiddle going replicates issue", "d": "4/2012"}, {"body": "looks like kselden spot notice code example references formbuilder lowercase b app name formbuilder capital b jsfiddle demonstrates issue making reference case would expect ember raise exception encounters undefined namespace", "d": "4/2012"}, {"body": "bet formbuilder supposed formbuilder asked binding undefined global though thought would requeue try next run looks like scheduling another run waiting something defined never going defined typo", "d": "4/2012"}, {"body": "typing phone saw comment agree going retry least back fail", "d": "4/2012"}, {"body": "right observer global chain undefined schedules retry nothing ever calls flushpending false always rescheduled question reschedule wait next run loop reschedule every sec instead nt peg cpu would pickup globals reasonable amount time reschedule give x number attempts leaning toward globals namespaces namespaces setup time runend called think remove rescheduling wycats tomdale thoughts", "d": "4/2012"}, {"body": "kselden fine nt reschedule namespaces set beginning rare event set namespace boot seems fine ca nt reference set", "d": "4/2012"}, {"body": "tomdale bug improvement also affect things", "d": "4/2012"}, {"body": "bug never expose virtual views end users cause widespread fear confusion", "d": "4/2012"}, {"body": "", "d": "4/2012"}, {"body": "nt want value class name want value class name handlebars helper generates class name", "d": "4/2012"}, {"body": "ok make myclass computed property content classofcontent emobjectextend foobar toto myclass function return thisget foobar yourvalue false content", "d": "4/2012"}, {"body": "tchak suggested still questions stack overflow probably get better answers", "d": "4/2012"}, {"body": "whoops looks like jshint set wrong missing fixed", "d": "4/2012"}, {"body": "problem using capitalization ca nt distinguish whether path global relative path use capitalization assume global path since global nt get data see information solution appears use feature mustache happens work nt explicitly support long story short exactly bug something easily fixable anything using lowercase property names using uppercase property names nt javascript like anyway one thing may help long term changes plan make around current context handlebars templates handled may make easier force uppercase path evaluate locally issue though nt much info moment", "d": "4/2012"}, {"body": "way noticed ticket said nt control json nothing stopping postprocessing pull server", "d": "4/2012"}, {"body": "true requesting processing json every second mind example small subset data actually receive making constant postprocessing obnoxious guess performance draining could elaborate solution edit read answer seems like postprocessing really option yikes would know way fast without much overhead undefined bug logical circumstances cases would want loop object show static text", "d": "4/2012"}, {"body": "doubt postprocessing would performance draining looping setting properties plain object pretty optimized path recommend making recursive script cases properly js alternatively could use something like ember data makes easier translate raw data server something manageable issue using mustache syntax handlebars supports backwards compatibility nt think something ever supported ember nt think something likely", "d": "4/2012"}, {"body": "wagenet would love use emberdata explicitly stated productionready yet also placed comment naming convention post record nt want clutter things unrelated information", "d": "4/2012"}, {"body": "ember data known bugs features gaps ok dealing things used production already people", "d": "4/2012"}, {"body": "already opened issue emberjswebsite", "d": "4/2012"}, {"body": "right list know source document somewhere", "d": "4/2012"}, {"body": "gotten request several times ember dom event names todo list thursday train ride", "d": "4/2012"}, {"body": "trek awesome", "d": "4/2012"}, {"body": "nickfranceschina nt extend wrap subsequent statement well take pr", "d": "4/2012"}, {"body": "maffoo either bug uglifyjs use minification rhino", "d": "4/2012"}, {"body": "wagenet tried piping uglifyjs offending parser function comes performaction function b c e f g h function name removed entirely would expect think still might issue way minified ember file produced may also case rhino bug handling functions whose argument names collide function name would still appear problem minification", "d": "4/2012"}, {"body": "specific line wagenet nt need nt understand syntax mean", "d": "4/2012"}, {"body": "eishay line generated jison something direct control", "d": "4/2012"}, {"body": "looks like uglifier bug fixed newer versions", "d": "4/2012"}, {"body": "great thanks quick fix", "d": "4/2012"}, {"body": "tass tag inline template creates anonymous view expected", "d": "4/2012"}, {"body": "curiosity tried", "d": "4/2012"}, {"body": "nah nt missed release p give shot", "d": "4/2012"}, {"body": "thanks", "d": "4/2012"}, {"body": "ok asked question stackoverflow answered typo clear documentation possible think would good explain three different uses personreopen adds code one instance personreopen adds code instances created reopen call personreopenclass adds code statically called instance", "d": "4/2012"}, {"body": "also see", "d": "4/2012"}, {"body": "done", "d": "4/2012"}, {"body": "confirm", "d": "4/2012"}, {"body": "bam", "d": "4/2012"}, {"body": "stack overflow usually better asking questions", "d": "4/2012"}, {"body": "allright close open one stack overflow although suspicion mr wagenet hands itching give aswer", "d": "4/2012"}, {"body": "suggested override createchildview function tests need think pretty clean make flexible possible", "d": "4/2012"}, {"body": "nt seem like particularly clean way things suggest clear either based discussions manko irc put together could called viewfactory collectionviews maybe might inspire ideas permanent solution", "d": "4/2012"}, {"body": "example overriding anyone else finds issue completely obvious flexible", "d": "4/2012"}, {"body": "tests package specific look", "d": "4/2012"}, {"body": "got thank sent iphone apr peter wagenetreply replygithubcom wrote tests package specific look reply email directly view github", "d": "4/2012"}, {"body": "hmm interesting point general works exception returns instance however see argument helper exception", "d": "4/2012"}, {"body": "tomdale straightforward instance set initialization", "d": "4/2012"}, {"body": "definitely straight forward got working simple cases broke crap load tests collectionviews seeing end rabbit hole right initial approach return class amp hash set instantiated class right returns return something like easy jerryrig make work simple cases ca nt figure modify collectionview stuff make whole enchilada work", "d": "4/2012"}, {"body": "also pretty sure would nt work setting bindings either", "d": "4/2012"}, {"body": "going go ahead say tomdale misspoke definitely trivial thing understand may annoying times think alternative worse", "d": "4/2012"}, {"body": "issue obviously impossible create computed properties view helper string properties case seems like support passing string properties view computed properties accomplished using initialization rather passing values hash agree nt trivial task seems reasonable properties respected initialization time made writeable initialization like", "d": "4/2012"}, {"body": "good catch seem fairly serious", "d": "4/2012"}, {"body": "tracked method properly escape may also present", "d": "4/2012"}, {"body": "fixes pushed sufficient however since serious issue like feedback make sure nt miss anything got finalized release", "d": "4/2012"}, {"body": "wow wagenet quick thankyou roughly think released worth forking merging individual commit", "d": "4/2012"}, {"body": "johncant hope release today someone else sanity check issue", "d": "4/2012"}, {"body": "clarification applies direct use allowing use input cases risk", "d": "4/2012"}, {"body": "fixed released", "d": "4/2012"}, {"body": "also note used internally ember controls using user data also upgrade", "d": "4/2012"}, {"body": "hi wagenet sorry nt fix issue jsfiddle ember fails direct output bindattr nt escaped also ok use handlebarsutilsescapeexpression pull request fixed cheers", "d": "4/2012"}, {"body": "another pull request nt introduced dependencies ember handlebars", "d": "4/2012"}, {"body": "johncant thanks following turns fix part bug still missed cases definitely fix guess rushed little much sorry", "d": "4/2012"}, {"body": "eviltrout helper binding aware see possible solution", "d": "4/2012"}, {"body": "also integrate deployment script possible", "d": "4/2012"}, {"body": "tomdale looks like one permission take care also anything special release package something could automate", "d": "4/2012"}, {"body": "need help let know also noticed places packages used could add something like top compiled package would solve", "d": "4/2012"}, {"body": "wagenet ping campfire get core contributors access npm package think account might fucked due whole npmusedcouchdbwithworldaccess fiasco think need recover", "d": "4/2012"}, {"body": "fyi started work", "d": "4/2012"}, {"body": "provide browser details seeing behavior describing safari firefox chrome latest versions", "d": "4/2012"}, {"body": "using chrome firefox one note changing selectiondidchange focusout resolves issue assume something event handler preferred use selectiondidchange", "d": "4/2012"}, {"body": "nhidao noticing things capital property names used classes namespaces see post subject main violation see never access properties use instead use specify dependent properties however many cases could used binding bind access global properties within class definition however since defining nested classes may alright made improvements since ca nt reproduce bug jsfiddle much get failing jsfiddle work closing ticket get failing happy reopen", "d": "4/2012"}, {"body": "added note bindings section readme takes time resolve bindings probably provide indepth explanation", "d": "4/2012"}, {"body": "see", "d": "4/2012"}, {"body": "showing result view post says work also tested calling emberrunsync nt help either something people try based documentation get bad experience would recommend changing documentation well least two experience", "d": "4/2012"}, {"body": "clarify rendering value husband wife neither change set husbands householdincome", "d": "4/2012"}, {"body": "absolutely right documentation needs updated hope gets fixed soon problem take look answer updating values see working example", "d": "4/2012"}, {"body": "read answer tried calling emberrunsync first option shows nt work second option sample sent seems work change inside emberrunlater move outside nt work would make however since set method still last called seems still update field see point might work alert right away runs loop template eventually get bound correctly right", "d": "4/2012"}, {"body": "hmm nt know exactly problem guess runloop triggered normally update view via events see", "d": "4/2012"}, {"body": "trying sorts ways think see happening timing always tricky business think something problem regular use agreed docs need explain better thanks help appreciate ember looks like good candidate need main concern size huge compared similar frameworks like approach takes though", "d": "4/2012"}, {"body": "dotnetnerd reproduce jsfiddle good starting point pangratz take stab fixing documentation least file new ticket", "d": "4/2012"}, {"body": "openend issue", "d": "4/2012"}, {"body": "sure illustrates puzzled even though runs asynchronously might updated right away think eventually updated apphusbandset householdincome call simply lost bindings nt sync time", "d": "4/2012"}, {"body": "dotnetnerd wrap creation end agree example bad example however ca nt think case actually something would matter actually set app fashion would almost certainly bad design example appears contrived try show point unfortunately fails even", "d": "4/2012"}, {"body": "nothing contrived creating binding using shown documentation simple bind set sample hardly says anything design ever ill loosing users action simple set operation depending timing nt give much faith libraries design though workaround user library something seems unneeded undocumented nt mean sample fails", "d": "4/2012"}, {"body": "set directions way binding one run queue flushed directions queued picks forward direction sync nt think ever want set directions binding one event handler trying make consistent choice", "d": "4/2012"}, {"body": "thats awful lot lowlevel detail concern user api ensure user writes actually happens reading code top bottom stating two way binding set values x reasoning expect value x troll anything seems api clear one couldshould expect following basic reasoning going documentation leads place experience method call set lost", "d": "4/2012"}, {"body": "dotnetnerd expecting bindings respect last change wins prioritization", "d": "4/2012"}, {"body": "dotnetnerd trying difficult really like see case would actually real app show real world case think would happy attempt fix however lowlevel changes like could definitely unexpected consequences areas something want change lightly definitely want ember easy use time nt want spend time working cases nt really happen practice", "d": "4/2012"}, {"body": "agreed pangratz beginning would ok well documented clear nt appreciate started talking bad design failed examples really followed documentation rationalized oppinion would fine solve better documentation naming methods since unresonable expect set method actually set value named way similar frameworks clear think would consequences providing clarity naming would enough two cents take leave however first time user puzzled since posts exist subject", "d": "4/2012"}, {"body": "dotnetnerd need fix documentation clear thank feedback", "d": "4/2012"}, {"body": "would expect lose bindings hold next set propertybinding naming pattern like saying property getthisvaluefrom path replace current value binding number throwing binding away setting new rule property could new binding simply number like case imo current behavior wrong docs change", "d": "4/2012"}, {"body": "problem thanks cutting chase building cool framework", "d": "4/2012"}, {"body": "dotnetnerd sorry nt intend imply fault docs definitely bad case pangratz opened address main concern whether actually bug needed fixed framework issue us directing people wrong direction bad documentation thanks bringing attention", "d": "4/2012"}, {"body": "think since ticket fixing documentation close issue dotnetnerd issues concerns please let us know", "d": "4/2012"}, {"body": "certainly comparisons ember others frameworks since discussing one use work would like feedback happy oblige", "d": "4/2012"}, {"body": "dotnetnerd feedback always welcome specific feature suggestions bugs please file github things ping us irc emberjs send email peterwagenet gmailcom", "d": "4/2012"}, {"body": "good suggestion already would consider filing pull request add documentation", "d": "4/2012"}, {"body": "like idea would definite win debug build would need benchmarked see impacted performance normal emberassert dev build", "d": "4/2012"}, {"body": "grosser reason nt reason separate hot code path nt want anything slow even checking presence period used would development mode even think slow would likely noticeable enough would nt even want", "d": "4/2012"}, {"body": "zepto support", "d": "4/2012"}, {"body": "let first outline concerns supporting zepto firstclass citizen lot people think zepto basically jquery without ie support illustrated issue linked significant often subtle differences jquery zepto work good description see pamela fox article moving zepto afraid subtle bugs likely crop using zepto users blame emberjs instead realizing bug zepto example handlebars unit tests nt test many edge cases possible binding attributes rely fact jquery methods handle additionally yehuda rely heavily many internal jquery features minimize amount code ship wire like thomas points undocumented maintainers framework nt want spend lot time making sure jquery zepto sync want limit lowest common denominator set features available two libraries need comfortable supporting zepto important milestone zepto pass jquery test suite happens happy advertise support zepto make modifications framework needed ca nt happen someone else would like make effort get emberjs unit tests passing zepto instead jquery consider pull requests improve compatibility long increase code size make code harder understand basically emberjs us developers expecting jquery believe zepto sufficiently compatible jquery make explicit line program says small bit friction reinforces fact saying two libraries compatible us guarantees form passing unit tests would happy reconsider compatibility stands though workaround alias load emberjs make explicit fact telling ember two functionally equivalent going close issue questions comments outlined please feel free add", "d": "4/2012"}, {"body": "thanks detailed answer totally understand point view wanted add enough since ember explicitly tests jquery version", "d": "4/2012"}, {"body": "fair enough run ember test suite zepto failures mainly originating test code zepto nt support jquery proprietary css selectors nt matter agree test suite pass inform people take walk wild side stub windowjquery stravid stub string", "d": "4/2012"}, {"body": "remove assert emberjs already removed minified build asserts development", "d": "4/2012"}, {"body": "thanks kselden information always use dev version rails rails minifaction packaging us hopefully help us integrate zepto app", "d": "4/2012"}, {"body": "would suggest use distemberprodjs build minified emberminjs asserts removed", "d": "4/2012"}, {"body": "names resolution namespaces expensive performance wise loot objects window nesting think induce considerable performance impact", "d": "4/2012"}, {"body": "processed new namespaces added would look deeper objects isnamespace true every property window please correct wrong", "d": "4/2012"}, {"body": "think processed call tostring time walk tree except already processed nodes add deep nesting look whole tree processed nodes sure something added deeper may wrong sims trivial", "d": "4/2012"}, {"body": "looks like processed new namespaces created", "d": "4/2012"}, {"body": "agree point going walk tree wrong need input wycats tomdale one probably", "d": "4/2012"}, {"body": "would like see method create nested namespaces performance issue would allow things like", "d": "4/2012"}, {"body": "agreed nested namespaces could used reflect position project file within subfolders thus enhance readability make easier organize ember project team working even decided ember namespaces organize projects many many source files current ember style ask fully satisfied current approach", "d": "4/2012"}, {"body": "would approach whole idea folder gt namespace find way verbose reminds java think really stay level one namespace", "d": "4/2012"}, {"body": "jepp totally right current approaches javalike namespaces javascript verbose java language feature also access classes simple name instead fully qualified one admit cache fully qualified namespaces beginning file like like javascript problem emberjs related one", "d": "4/2012"}, {"body": "nt think feature necessary let try explain sproutcoreember projects worked toplevel namespaces used talking giant projects icloudcom massive suite apps deal different classes instances needed solution experience break apps shared libraries namespace example shared framework might namespace contains like personally like naming convention verbose requires much deeper object hierarchies simply repeat information twice going close issue consider working correctly think need better job communicating idiomatic emberjs apps", "d": "4/2012"}, {"body": "thanks detailed answer giving different parts namespace something never thought", "d": "4/2012"}, {"body": "awesome thanks answer tom problem need come place fundamental concepts building real apps emberjs presented explained currently gather knowledge mostly source code tests many cases enough", "d": "4/2012"}, {"body": "closing favor", "d": "4/2012"}, {"body": "made jsfiddle code everything works see also think ask question stackoverflow tagged emberjs reasons although fine post questions mainly used qa questions get asked importantly answered second reason another user might similar problem search likely issues github", "d": "4/2012"}, {"body": "mean protocol see", "d": "4/2012"}, {"body": "bug pangratz noted", "d": "4/2012"}, {"body": "thnx", "d": "4/2012"}, {"body": "nt sync bindings immediately case contrived example call force bindings sync normal app development wo nt worry", "d": "4/2012"}, {"body": "see corresponding stackoverflow discussion", "d": "4/2012"}, {"body": "great tks love", "d": "4/2012"}, {"body": "jmiettinen know nt primary issue ca nt help wonder modifying array within transforms certainly intended used transforms modify anything external place things like convert strings integers modify content elsewhere app", "d": "4/2012"}, {"body": "jmiettinen look guess debugging probably app anyway curious actually app problem", "d": "4/2012"}, {"body": "appsuperclassprototypemixin supposed lazily applied appsuperclassprototype prior never caused lazily init appsuperclassprototype creating created appsubclass appsuperclassprototype would stay empty like appsubclasscreate appsuperclassprototypemixin problem causing", "d": "4/2012"}, {"body": "upon looking problem bindings prototypes observers listen changes instances modify prototype shared question shared prototype receive events instance property changes modify shared prototype response change one instance think bindings copied prototype connected create mixin concern chains without", "d": "4/2012"}, {"body": "indeed naughty array modifications debugging purposes actual problem widgets eg binding transformation defined superclass user uses widget redefines binding transformations fire clearly expectations expectations misguided", "d": "4/2012"}, {"body": "nt seem like bindings connected prototypes instances class binding separate object watching prop changes connected target target prototype still receives property change events instances targets prototype means connect new binding object instance interaction new binding binding shared instances property change events bubble nt make sense really since case instance property changed prototype way override binding would run problem created instance superclass creating subclass safe way making default binding currently could try connecting binding instance init nt binding setup determining binding setup kind tricky maybe could make defaultsmixin gets mixed instance create though called create defaultsmixin would let override property descriptors mixins create merge initializing things like bindings", "d": "4/2012"}, {"body": "change example computed property overrides better", "d": "4/2012"}, {"body": "yeah use computed properties instead transformations true computed property fits case better quite get explanation behavior describe expected would overridable bindings make sense", "d": "4/2012"}, {"body": "expect prototype receive property change event instance nt expect binding subclass prototype affect interact binding superclass prototype means bindings prototypes affect prototype instance changed affects instances change instance nt able affect instances javascript tricky inherit instance shared instances definitely problem bindings connecting shared instance computed properties function use get properties even though function shared prototype uses points instance still worry cp setup prototype might invalidate instances one instance changes need confirm bindings hold onto obj connected think problem going testing see makes sense likely think bindings initialized create connecting instance", "d": "4/2012"}, {"body": "going changed work bindings setup object estimate rc might land change bindings computed properties flamejs mean time", "d": "4/2012"}, {"body": "estimate rc yet however definitely possible may another release two three prior whether change computed properties make sense would nt hurt switch", "d": "4/2012"}, {"body": "pretty surprised kselden pointed chat bindings currently behaviour visavis prototypes would expect bindings remain inert instantiation binding connected instance fiddling prototype currently happening exorcised", "d": "4/2012"}, {"body": "got bit change current behavior", "d": "4/2012"}, {"body": "fixes issue bindings still subtle issues observers subclassing emberrewatch", "d": "4/2012"}, {"body": "mixin applied since naming events overriding methods mixin first two events fired example events chosen names actions cause problems rename works expected", "d": "4/2012"}, {"body": "another solution would override methods adding call event action helper see", "d": "4/2012"}, {"body": "workaround simply rename functions consider behavior bug informed however footnote documentation behavior would certainly improvement thanks pangratz help", "d": "4/2012"}, {"body": "mrhus glad could help", "d": "4/2012"}, {"body": "bad link allows work existing protocol either also starterkit repo tickets filed", "d": "4/2012"}, {"body": "starter kit repo please file tickets", "d": "4/2012"}, {"body": "pangratz interesting idea use sure super necessary seems nice getting view seems difficult though", "d": "4/2012"}, {"body": "want react events view kind forced use specify since events captured one possible solution think keep track created instances call application guess use case code view appended applications root otherwise youl specify application want view inserted", "d": "4/2012"}, {"body": "keeps list available namespaces one possible solution could along lines see javascript emberviewreopen append function app app emberassert must specify emberapplication instance emberapplicationdetectinstance app var rootelement appget rootelement return thisappendto rootelement else var applications embernamespacenamespacesfilter function item return emberapplicationdetectinstance item var firstapp applicationsget firstobject firstapp return thisappend firstapp default first application obviously cached somewhere circumvent filter every call", "d": "4/2012"}, {"body": "one default application use something similar done ds default store", "d": "4/2012"}, {"body": "tchak good hint thanks think open pr", "d": "4/2012"}, {"body": "pull request", "d": "4/2012"}, {"body": "closing favor pr", "d": "4/2012"}, {"body": "nt way states work also example go never actually left nt call", "d": "4/2012"}, {"body": "believe root issue caused swapping views inside template using containerview fixed", "d": "4/2012"}, {"body": "call directly instead use call within action", "d": "4/2012"}, {"body": "hmm nt call public function externally statemanager could provide example using reading source nt see anything interesting", "d": "4/2012"}, {"body": "semipublic called outside ie considered bad architecture call directly trigger within action looks method state matching name found looks parent states jsfiddle also incorrect attempted use attribute set template name instead correct furthermore would never change state immediately creating want start different state set different updated jsfiddle used emulate normal delay user input working version", "d": "4/2012"}, {"body": "interesting without settimeout error go ahead call user error still present jsfiddle even using nt fix figure way variably set initialstate pass defer still think issue possible states sure bigger fish fry thanks help wagenet", "d": "4/2012"}, {"body": "reason present without nt finished entering initial state yet call nt know action yet unfortunately states well documented something know issue working improve", "d": "4/2012"}, {"body": "well strict logical sens true guess", "d": "4/2012"}, {"body": "corresponding test", "d": "4/2012"}, {"body": "guess make sense dont send second parameter undefined infact true objects thanks guys", "d": "4/2012"}, {"body": "think ask question stackoverflow tagged emberjs reasons although fine post questions mainly used qa questions get asked importantly answered second reason another user might similar problem search likely issues github", "d": "4/2012"}, {"body": "makes sense ok thanks", "d": "4/2012"}, {"body": "", "d": "4/2012"}, {"body": "might able add warning development solution nt figured", "d": "4/2012"}, {"body": "", "d": "4/2012"}, {"body": "starter kit repo issue tracking issue already addressed though nt uploaded new build yet", "d": "4/2012"}, {"body": "fantastic thanks look little harder next time", "d": "4/2012"}, {"body": "seems odd extract js rails generates link put jsfiddle", "d": "4/2012"}, {"body": "", "d": "4/2012"}, {"body": "add script tag work working fix", "d": "4/2012"}, {"body": "using emberjs fiddle version released days ago would encourage use latest version since many bugs fixed new features added took look example refactored working example found question ask stackoverflow", "d": "4/2012"}, {"body": "updated version fiddle using emberjs", "d": "4/2012"}, {"body": "hi pangratz thanks reply need observers work using binding example given merely trimmed order demonstrate problem could get something working using addobserver function", "d": "4/2012"}, {"body": "look problem never invoked", "d": "4/2012"}, {"body": "pretty sure document ready invoked added alert alert displayed", "d": "4/2012"}, {"body": "ok misunderstanding sorry next try", "d": "4/2012"}, {"body": "need create button via code via view original jsfiddle sample unit testing reasons rely view instantiate button possible", "d": "4/2012"}, {"body": "something like", "d": "4/2012"}, {"body": "thanks much fire observers expected would know nt work add set adding observer", "d": "4/2012"}, {"body": "finally figured wrapped creation button emberrun thanks help pangratz much appreciated definitely helped right direction", "d": "4/2012"}, {"body": "glad could help", "d": "4/2012"}, {"body": "possible handlebars reason allowing keep templates simple nt afraid make view subclasses", "d": "4/2012"}, {"body": "nickfranceschina ewot joke based unix error codes start e wot agree useful case trying empty view inbuffer ie dom yet judging error nt something expect happen using helper kselden check think worked code", "d": "4/2012"}, {"body": "using several spots unable gather solid evidence really happening symptoms look like two totally differentunrelated nested views different nested branches root layout somehow affecting remove one ewot goes away think misusing custom view registered handlebar helper somehow nt figured yet", "d": "4/2012"}, {"body": "ps also using ember layout ember route manager projects", "d": "4/2012"}, {"body": "figured actually bug ember data adapter causing object get updated store several times quickly one lists observing changes property forcing ton redraws fast", "d": "4/2012"}, {"body": "nickfranceschina glad figured still probably nt throw exception", "d": "4/2012"}, {"body": "pangratz nt work", "d": "4/2012"}, {"body": "ok thanks frodsan seems latest oauth enhancements github broke used gem", "d": "4/2012"}, {"body": "opened issue constellationrubynetgithubupload", "d": "4/2012"}, {"body": "wonder nt hit api directly without using", "d": "4/2012"}, {"body": "wagenet might good thing done little search nt found alternative library offers upload files github", "d": "4/2012"}, {"body": "libraries going nt need libraries seriousness able hit api directly", "d": "4/2012"}, {"body": "forked example little refactoring define dependency property also kind deprecated use helper add dependency property would get informed length array changes would nt trigger recalculation sum replace value array via method also question problem emberjs ask directly stackoverflow", "d": "4/2012"}, {"body": "awesome pangratz answered question also nt know deprecated sorry pollute issues questions ember nt think enough rep stackoverflow post question minutes ago thankyou try find time write docs", "d": "4/2012"}, {"body": "cheers wagenet mentioned deprecation comment stackoverflow", "d": "4/2012"}, {"body": "pangratz johncant still cases useful however mainly nt much functionality plan make better time", "d": "4/2012"}, {"body": "corresponding pull request needs merged fix issue emberjsstarterkit", "d": "4/2012"}, {"body": "cool somehow missed emberjsstarterkit", "d": "4/2012"}, {"body": "mentioning wycats wagenet tomdale kselden ebryn notified issue already closed", "d": "4/2012"}, {"body": "davidkellis sounds like lazy setup trying access prototype", "d": "4/2012"}, {"body": "prototype lazily initialized need manually call classproto initialize prototype", "d": "4/2012"}, {"body": "thank yall clarification bet classproto try tomorrow", "d": "4/2012"}, {"body": "use case", "d": "4/2012"}, {"body": "fleshing minimalistic activerecordesque model class looks like note code generated coffeescript translatorcompiler javascript emberminmodel emberobjectextend emberminmodelreopenclass function query var array request query null query array emberarrayproxycreate request ajax url thisprototypeurl lt bit appinvestmentprototypeurl initially undefined type get datatype json data query requestdone function data textstatus jqxhr var models consolelog done data textstatus jqxhr models data map function modeldata return thiscreate modeldata consolelog models models return arrayset content models return array define subclass emberminmodel like went wrong expecting immediately defining subclass appinvestment expression appinvestmentprototypeurl would evaluate investments actually undefined create first instance appinvestment part find unintuitive since appinvestmentprototypeurl evaluates undefined call appinvestmentall nt generate ajax request investments use case tinker expect invoke appinvestmentproto first invocation appinvestmentall appinvestmentprototypeurl evaluate investments make ajax request investments like intended update sure enough inserted appinvestmentproto immediately definition appinvestment first invocation appinvestmentall works expected appinvestmentprototypeurl defined investment ajax request pointed correct url thank yall pointer use classproto", "d": "4/2012"}, {"body": "sandstrom close ideas performance improvements radar", "d": "4/2012"}, {"body": "hmm solution nt straightforward emberbinding defines class level instance level methods tchak approach ca nt worked able former latter", "d": "4/2012"}, {"body": "tomdale says nt expected work however admit would nice changing improvement", "d": "4/2012"}, {"body": "events fire element one responds click events technically bug something improve", "d": "4/2012"}, {"body": "ran across today", "d": "4/2012"}, {"body": "", "d": "4/2012"}, {"body": "", "d": "4/2012"}, {"body": "closing favor", "d": "4/2012"}, {"body": "radicaled thinking nt think using dom insertion anyway designed", "d": "4/2012"}, {"body": "purpose emberjs html elements encapsulated within javascript backed view impression could freely mixmatch freestanding html emberjsbacked html views together freely implies supposed", "d": "4/2012"}, {"body": "general want one parent view app though may exceptions harm putting html parent view ember nt directly control make sure nt trying control stuff ember elsewhere time", "d": "4/2012"}, {"body": "tell bit app may able help clarify things", "d": "4/2012"}, {"body": "regular garden variety cms using emberjs drive applike bits using control behavior media player widget one things context ticket needed functionality prepend widget existing html structure notified element rendered could run party js worked right visible elements nt want cargo cult method definition viewappend everywhere wanted viewprepend viewafter viewbefore etc", "d": "4/2012"}, {"body": "radicaled seen", "d": "4/2012"}, {"body": "wagenet proposing somewhere callback move element jquery regular prepend function", "d": "4/2012"}, {"body": "said depend party js needs visible elements suggesting make emberview right html trigger party js", "d": "4/2012"}, {"body": "whoops bad", "d": "4/2012"}, {"body": "radicaled work case want make sure good solution", "d": "4/2012"}, {"body": "think one quick question related html assuming ca nt change structure markup nt want wrap emberview right way append element", "d": "4/2012"}, {"body": "nt come use case yet would one", "d": "4/2012"}, {"body": "moment one knows annotated version still care could copy code link make new version care", "d": "4/2012"}, {"body": "closed", "d": "4/2012"}, {"body": "like mahonnaise quick template sanity checking thought share quick gist use ember case helps anyone", "d": "4/2012"}, {"body": "raycohen thanks gist", "d": "4/2012"}, {"body": "easy way test templates going close someone else reopen refile want tighter integration ember", "d": "4/2012"}, {"body": "also expected new state set inside based documentation transitioning new state new currentstate enter method called statemanager instance first argument object representing transition second argument also seems useful new state already set", "d": "4/2012"}, {"body": "agreed sytse also need sometimes last state currentstate enter method api evolve could useful laststate property would like also able gotostate enter method state think possible current implementation happens sometimes intermediary states sorry also mentioned", "d": "4/2012"}, {"body": "assumption fix issue mistaken let know reopen", "d": "4/2012"}, {"body": "wagenet great hear played bit profiled jsfiddle actually much faster jsfiddle example runs like x times faster compared great", "d": "4/2012"}, {"body": "fpauser awesome ideas things want improve speed since got improvement going close ticket", "d": "4/2012"}, {"body": "looks like possible reproduce setting following header fix precompile handlebars templates core", "d": "4/2012"}, {"body": "sorry getting back sooner solved problem server level setting xcontentsecuritypolicy header domain necessary", "d": "4/2012"}, {"body": "iamjstates worries seems like found case happen way solve glad got solved case", "d": "4/2012"}, {"body": "changed build script precompile resolve issue", "d": "4/2012"}, {"body": "puzzling seems boil eachproxy handling setting observers internally call addobserver root part chained path however chainnode plucks toplevel keyname eachproxy goes merry way eachproxy never gets involved basically two levels arrays play watching eachnest eachisdone work instance", "d": "4/2012"}, {"body": "forgot clarify chainnode plucks keyname eachproxy getting eacharray hence need nesting observers", "d": "4/2012"}, {"body": "chime also find needing pattern described sopost quite often along something like view figure previous element idx thisgetpath parentviewcontentindex prev thisgetpath parentviewparentview get content objectatcontent unless less convoluted way write current ember arrived mostly trial amp error would say case deserves sugar coating current way far intuitive especially dedicated nested metamorph still quite sure needed seen arguments presenter pattern similar seems little overkill want express something tune see performanceconcern contentindex though perhaps could start prevfirstlastelement first last relatively cheap think would already cover many cases css nt cut", "d": "4/2012"}, {"body": "changing improvement since ebryn said nt intend support case said would still nice support ebryn chance look anymore", "d": "4/2012"}, {"body": "", "d": "4/2012"}, {"body": "taking lack feedback wycats goahead close", "d": "4/2012"}, {"body": "emberwatch causes watched property defined would unknown property based value undefined", "d": "4/2012"}, {"body": "kselden possible note somewhere property yet defined", "d": "4/2012"}, {"body": "false alarm appears work least", "d": "4/2012"}, {"body": "probably revert however make computed properties smarter nt trigger events one watching", "d": "4/2012"}, {"body": "way rely array observers attempt make work outside arrays would difficult best", "d": "4/2012"}, {"body": "anyone needs functionality meantime add enumerable observer see", "d": "4/2012"}, {"body": "kselden still seems problem correct", "d": "4/2012"}, {"body": "assuming either already covered covered", "d": "4/2012"}, {"body": "emberbutton deprecated", "d": "4/2012"}, {"body": "looks nt distribute part starterkit hope", "d": "4/2012"}, {"body": "omo npm package already though date see", "d": "4/2012"}, {"body": "great hear waiting latest push thank letting know", "d": "4/2012"}, {"body": "fixed", "d": "4/2012"}, {"body": "whether change default resolve issue prior release", "d": "4/2012"}, {"body": "think bite bullet", "d": "4/2012"}, {"body": "tomdale turn also enable flag first make default", "d": "4/2012"}, {"body": "wagenet", "d": "4/2012"}, {"body": "progress", "d": "4/2012"}]