[{"title": "query redesign", "body": "proposal redesign query api allows directive find directives structurally children directive query children element placed used query view used viewquery using xxxchild object received desired element null found using xxxchildren object observablearray queries recalculated structural change occurs ngif ngfor xxxchild set new value xxxchildren notify via observable api results injectable rather set declared properties framework ex javascript component view class listcomponent contentchild itemdirective itemdirective itemdirective component view class viewchildren itemdirective itemdirectives observablearray children directives set following callbacks fired query mechanisms go component subviews support configurable visibility follows content descendants considered direct children querying directive considered default visibility configuration queries always skip element querying directive lives similar implementation x implement lifecycle hooks x hook query update calls new hooks x add integration test view query var bindings x remove query forms api x using viewelementinjectors internally instead injchildren tree closes x add x use rxnext observablearray x move declaration component field using setters x implement contentchild viewchild x remove self visibility query optimize static single child x implement dynamic strategy queryrefs cc mhevery vsavkin", "num": "3922", "d": "8/2015"}, {"title": "add ability update routeparams without reloading component", "body": "asking around gitter last couple days really getting much response thought would post something assumption good way already exists fair change case certainly could nt find anything brief digging source trying set linking particular projects list projects personal website creating got linking particular project working fine ideally url update user aka scrolled could copy url know would take back project looking far tell good way obviously manually edit url would make code wrote much less reusable especially relevant given even thinking making directive good way moment think makes sense add something like routeparamsset param string allow user update params without calling routernavigate alternatively might better add method router update current instruction without calling routeroutletactivate indeed already way could probably implement access stringifyinstruction nt seem exist finished distribution locationgo nt complicated", "num": "3921", "d": "8/2015"}, {"title": "add integration tests viewquery var bindings", "body": "test contentquery var bindings integration specs", "num": "3920", "d": "8/2015"}, {"title": "form controls require", "body": "see working issue missing missing around optional", "num": "3919", "d": "8/2015"}, {"title": "canonical list benchmarks", "body": "canonical list benchmarks would also like know ones supported js js seems like way find go benchmark source file see benchmarks declares tbosch", "num": "3918", "d": "8/2015"}, {"title": "datepipe needs review potentially breaking changes", "body": "date pipe quite limited considering implementation angular review code decided breaking changes might need happen especially dependency internationalization apis rely spec polyfill default formats formatting flags aligned spec angular compare feature set angular eg iso string input currently supported filter stateful cause perf issues plan switching locales", "num": "3917", "d": "8/2015"}, {"title": "built pipes exported via", "body": "currently way get hold importing vsavkin intentional", "num": "3915", "d": "8/2015"}, {"title": "make pipes pure functions default option opt", "body": "currently pipes statefull recompute output change detection pass quickly become perf bottlenecks within repeaters large apps considering pipes pure functions default allow us cache reuse output values input nt change share single pipe instance across whole app change made angular gave us huge perf boost especially date filterpipe commonly used large apps", "num": "3914", "d": "8/2015"}, {"title": "nt return thing", "body": "factory like bellow appfactory awesomeservice function return getusers function return return responsedata controller var user awesomeservicegetusers consolelog user console display state object success nt return thing console result otherwise must display result return responsedata", "num": "3910", "d": "8/2015"}, {"title": "http spends much time chrome", "body": "backend frontend javascript chrome firefox ie wireshark", "num": "3908", "d": "8/2015"}, {"title": "misleading filter notarray error", "body": "made simple error placing track instruction end put error raised mistake filter notarray misleading expected array received suggestions create new error track wrong place trackbyisnotlast check notarray got wrongly flagged despite object passed alleged value passed angularjs", "num": "3906", "d": "8/2015"}, {"title": "import project npm client", "body": "tried import library client npm miserably failed need responsive layout system somebody tried know", "num": "3904", "d": "8/2015"}, {"title": "fix runtime throws using querylist type annotation", "body": "error came traceur ts code problem get runtime error used without type annotations pkozlowskiopensource opinion work without annotations", "num": "3903", "d": "8/2015"}, {"title": "refactor split source files", "body": "currently entire source module think split source dedicated separated files component comes module cc btford", "num": "3902", "d": "8/2015"}, {"title": "binding error w bad message components talk mixed case variable name", "body": "mentioned vsavkin asked open use case parent heroes component lists heroes shows current hero child hero detail component one properties communicated parent child named username binding failed w message notice message shows variable name lower case problem goes away rename child property lower case variations fine username user xxx xyx mixedcase name failed similar way example failed w message repro another github repository needed", "num": "3901", "d": "8/2015"}, {"title": "config systemjs using bundles npm dist", "body": "trying run app working using contents seems failing far looks like html systemconfig baseurl defaultjsextensions true paths meta librxjs format cjs libfirebasejs format global exports firebase map rx librxjs firebase libfirebasejs systemimport appbootstrap catch consoleerrorbind console load modules exposed using latest version system little bit help would appreciated way could make work source disk configured system html systemdefaultjsextensions true systemconfig paths meta librxjs format cjs libfirebasejs format global exports firebase map rx librxjs firebase libfirebasejs systemimport appbootstrap catch consoleerrorbind console combination worked fine moved get npm dist forces config system different way", "num": "3900", "d": "8/2015"}, {"title": "using throws ts compilation", "body": "using app compilation seems causes compile throw two semantic errors might recognised using version ts", "num": "3899", "d": "8/2015"}, {"title": "using nghttphttpbindings sfx build causes invalidbindingerror", "body": "using nghttphttpbindings angular sfxdev build throwing following error invalidbindingerror message invalid binding instances binding type allowed got object object originalexception undefined originalstack undefined context undefined stack invalidbindingerrorbaseexception error invalidbindingerrorbaseexception new invalidbindingerror resolvebindings resolvebindings functionsystemregisterexecuteinjectorresolve injectorsystemregisterexecuteinjectorresolveandcreatechild createappinjector zonerun zonesystemregisterexecutengzonecreateinnerzonezoneforkfork run run plunkr reproduce issue change following code everything works looks like nghttp module using somehow incompatible binding mechanism generate httpbindings making something wrong advice welcome also think give hand resolve give tips pr solution thank", "num": "3898", "d": "8/2015"}, {"title": "testlib js jasmineit execute asynchronously strictly required", "body": "need wrap jasmine functions use test injector angular tests current mechanism always pass jasmine callback one parameter ie injected calling method instance forward call parameter provided jasmine injected angular specific wrapper take care calling discussed igorminar would better pass parameter unless striclty required test async", "num": "3893", "d": "8/2015"}, {"title": "required validator shows failed validation input set", "body": "given following input setting value inputsmixedstring initialize field results required validator marking input invalid typing value input subsequent attempts assign value reset button also result incorrect validation result", "num": "3892", "d": "8/2015"}, {"title": "typeerror read property elementbinders undefined http sfx bundles", "body": "using plnkr using following sfx scripts creating simple component causes titular error full trace ca nt really see going grander scale deduced gets defined sfx scripts metioned potential problematic code code seems fine first definition resolves false however second time around resolves true therefore whenever called angular seems get caught infinite loop exceeding maximum stack size", "num": "3890", "d": "8/2015"}, {"title": "dom exposed testlib", "body": "right want dom operations unit tests import would nt make sense expose different name something since place used end users tests", "num": "3887", "d": "8/2015"}, {"title": "facade exposed public namespace", "body": "right things need write app import useful things facade like plans exposing things facade folder namespace", "num": "3886", "d": "8/2015"}, {"title": "unexpected directive value undefined view component todoapp", "body": "hi started getting error please tell error comes", "num": "3885", "d": "8/2015"}, {"title": "angular paramserializer nt work", "body": "nt work correct usage new angular thank much", "num": "3884", "d": "8/2015"}, {"title": "directive selector", "body": "upgrading app one directive selector working anymore realize must conflicting parser canonical syntax events working error really explicit maybe error could explicit doc warns using prefixes attribute selectors", "num": "3883", "d": "8/2015"}, {"title": "refactor ngcontent rename", "body": "turns shadow dom spec element deprecated called want align accordingly", "num": "3882", "d": "8/2015"}, {"title": "routerrecognize nt find urls", "body": "using routersubscribe know navigation occurred trying get component related current url routersubscribe routerrecognize nt find tried call routerrecognize registered urls result see code", "num": "3879", "d": "8/2015"}, {"title": "minor documentation issue step step guide step user input", "body": "docs final code section line instead correct earlier article", "num": "3878", "d": "8/2015"}, {"title": "implement programmatic change detection profiler", "body": "profiler would accessible via dev tools developer installs profiler di module get access global functions could invoke directly dev tools console profiler would exposed global namespace future could host tools profile change detection specifically developer would enter profiler would invoke least times least compute average standard deviation amount time took execute single takes optional named boolean parameter default set records profile cpu profile could inspected later profiles tab dev tools future may add options named parameters custom number runs custom length profile cc vsavkin mhevery", "num": "3877", "d": "8/2015"}, {"title": "dts generation preserve spread arguments", "body": "look generated definition notice include spread operator declared alexeagle please help causes", "num": "3874", "d": "8/2015"}, {"title": "dart remove dependency uri", "body": "uri fully implements uri spec contributes code size however need small subset roll perhaps port regexbased js implementation dart", "num": "3873", "d": "8/2015"}, {"title": "dart make long stack traces optional", "body": "pull dependency turn pulls", "num": "3872", "d": "8/2015"}, {"title": "dart make intl pipes optional", "body": "includes pipes depend currency number date", "num": "3871", "d": "8/2015"}, {"title": "dart make forms api optional", "body": "currently forms api pulled automatically rest angular resulting extra minified ungzipped code", "num": "3870", "d": "8/2015"}, {"title": "investigate sharding build", "body": "build slow maybe could parallelizing tests maybe needlessly waiting something finish could already started something else figure critical path see success story", "num": "3869", "d": "8/2015"}, {"title": "class added component style inside template", "body": "js component selector ngdialog host class dialogcontainer added dom view templateurl dialoghtml class host wrong component controller class dialog title string constructor thistitle dialog html dialogcontent border solid black background gray height width margin auto dialogcontainer position absolute width textalign center top title", "num": "3868", "d": "8/2015"}, {"title": "remove first element replace first child element replace prop view", "body": "code rendered component following want possible need property example replace view", "num": "3866", "d": "8/2015"}, {"title": "adde lifecycleevents", "body": "currently proposal content delayed view delayed", "num": "3863", "d": "8/2015"}, {"title": "angular routing", "body": "hello everyone wondering good tutexample make routing work currently something working using routeconfig app component like apphtml made simple list navigate like html home bootstrap toastr actually work though completely problem navigate bootstrap page im xyzbootstrap page press get webserver mather use wamp iis problem happens pages simply ca nt use refresh perfectly possible used angular uirouter also mean im xyzbootstrap page want navigate toastr page typing xyztoastr get error routing works using buttons apphtml problem navigate pages want use browser back forward button navigate back one time thats like history except go back one hopefully someone help give link nice tut thanks update use alpha angular router using versions version combinations could nt even get working update im building app using typescript tried running vs iis publish run wamp apache result", "num": "3861", "d": "8/2015"}, {"title": "router lifecycle hooks yet", "body": "trying new version router angularjs could make work simple scenario single outlet links navigate could nt use features canactivate lifecycle hooks ignored executed known bug missing something quite surprised working since back code located repo angularrouter btw could share current timing plans around new router extremely useful", "num": "3860", "d": "8/2015"}, {"title": "standardize message bus usage server debug tools", "body": "currently multiclientservermessagebus makes number assumptions application problematic assumption new browser connect time means keep permanent message history define notion app state know browsers connected additionally formalize idea message waiting response rather hard coding result type related involves messaging protocol idea app phases", "num": "3859", "d": "8/2015"}, {"title": "null exception elementinjector removing view elements via ngif queried using viewquery", "body": "using angular dart alpha component view looks like component uses show boolean control whether elements underneath displayed tabpanel tab components implemented code base tabpanel component constructor injector looks like tabpanelcomponent query tabdirective querylist tabquery viewquery itemdirective descendants true querylist itemquery viewquery anotheritemdirective querylist anotheritemquery show set false get following null exception debug found viewquery tabpanelcomponent itemdirective exception stack trace pasted found injector dehydrated time queryupdate called removeparentquery tried quickly add check hydrated fixed exception issue seemed cause problems query getting cleared properly left stale tab panels elementinjectordart removeparentquery queryref query ispresent query thisprunequeryfromtree query queryupdate thishyrdrated false point full exception stack exception null object getter view nosuchmethoderror method found view receiver null arguments show debugpanelcomponent original exception null object getter view nosuchmethoderror method found view receiver null arguments original stacktrace objectnosuchmethod dart objectnosuchmethod dart elementinjectorgetrootviewinjectors package queryrefupdate package elementinjectorremoveparentquery package elementinjectorremoveparentqueries package elementinjectorunlink package appviewmanagerutilsdetachviewincontainer package appviewmanagerdestroyviewincontainer package appviewmanagerviewdehydraterecurse package appviewmanagerdestroyviewincontainer package appviewmanagerdestroyviewincontainer package viewcontainerrefremove package viewcontainerrefclear package ngifngif package package abstractchangedetectordetectchangesinrecords package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchanges package lifecycletick package lifecycleregisterwith package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart ngzonerun package domeventspluginsameelementcallback package", "num": "3857", "d": "8/2015"}, {"title": "remove reflectionentrypoints deprecation message", "body": "sept remove deprecation message constant", "num": "3856", "d": "8/2015"}, {"title": "child component references", "body": "one common use case emerging ionic usage accessing child components parent component exist nt believe intuitive enough common operation turning example take gallery component image carousel inside gallery wants control carousel might push new images remove old ones lifetime gallery component today query carousel however natural guistyle way access interact children especially specify exact set child components commonly one would natural tag child ref like internal view variables using expose component access carousel directly component questions come would need addressed work properly work sets components example created one option make tagging take interpolated value use attribute case perhaps child references accessed abstraction reference id key object semantics component destruction ref system think nullifying reference would sufficient along emitting event though event support would added wrapper class component internals syntax tagging child components viewinternal references maybe system could expanded allow parent access well supply attribute like react worth noting react nice system purpose docs go greater detail parent child direct access valuable thoughts dynamic children problem", "num": "3853", "d": "8/2015"}, {"title": "custom validations error", "body": "hi trying implement number custom validation directives everything goes good put directives element put four validators start receive error happens immediately second entrance page plunkr example page page except first page input validation directives second scenario open plunkr go page return page go page open console able see error thanks dima", "num": "3847", "d": "8/2015"}, {"title": "use reflectmetadataenvfixed", "body": "environment detection incorrect reflectmetadata author module rbuckton respond issue", "num": "3845", "d": "8/2015"}, {"title": "error jqlite onargs jqlite support parameters", "body": "hi using angular nt build project today started production pipeline saw error concatenate angular js file files concatenated used like developing stage work long shot let see suggestions basically error jqlite onargs jqlite support parameters stack trace starting error tag mentioned bottom stack tag ui code navigation menu site", "num": "3844", "d": "8/2015"}, {"title": "transformers reimplement reflection data top treeshakeable map", "body": "assigning sigmundch give us green light implementation", "num": "3842", "d": "8/2015"}, {"title": "dart document code size inspection toolsstrategies", "body": "unused reflection data instrumentation dumpinfo tools", "num": "3841", "d": "8/2015"}, {"title": "investigate potential code savings hello world app shutting optional features", "body": "outcome exercise would report final code size recommendation next get", "num": "3840", "d": "8/2015"}, {"title": "recompile components runtime", "body": "possible recompile components runtime components whose templates dynamic change runtime la compile dynamiccomponentloader seems support adding components dynamically component tree templates still defined statically compilation startup", "num": "3838", "d": "8/2015"}, {"title": "host setting attribute", "body": "host property properly setting attribute app sampling becomes im simple working tabs defined file issue separate files", "num": "3837", "d": "8/2015"}, {"title": "codegen getters annotationdeclared events", "body": "recent changes way pieces change detector model handled serialized etc longer need codegen anything except declared inside annotations pregenerate change detectors remove codegen", "num": "3834", "d": "8/2015"}, {"title": "status", "body": "find roadmap angular beta release feature andor qa goal set betarcstable releases work thresholds", "num": "3833", "d": "8/2015"}, {"title": "router needs way manually shutdowndisposed mutliapp tests", "body": "discussed offline bit injectable listens indirectly location changes part destroy cycle components application disposed tests multiapp environments possible route change trigger dynamic component loader load dom longer exists", "num": "3830", "d": "8/2015"}, {"title": "use angular testability api wait end tests", "body": "right rely hack wait end tests wait loading text disappears however angular exposes api know bootstrap done via see use api prevent future breakages hard explain errors", "num": "3829", "d": "8/2015"}, {"title": "fix dgeni correctly export type declarations", "body": "declarations one http interfaces dts output instead broken master apparently tested tests fail semicolon expected input output", "num": "3828", "d": "8/2015"}, {"title": "revert nowobsolete sort directive parser", "body": "introduces stablesort directive properties longer necessary due", "num": "3827", "d": "8/2015"}, {"title": "contains incorrect systemjs config", "body": "end file sure ended mapping nt configuring paths belonging exclusively angular especially confusing systemjs flipped false", "num": "3826", "d": "8/2015"}, {"title": "viewmetadata nt public constructor dts", "body": "metadata classes nt public constructor present dts files since takes via public api constructor public well", "num": "3825", "d": "8/2015"}, {"title": "testlibdts missing", "body": "currently nt generate build causes issues using testcomponentbulider tests ts", "num": "3824", "d": "8/2015"}, {"title": "documentation quickstart working", "body": "heard cool wanted try verses react decided spend time onboarding used quickstart till got point point completely broke ca nt figure wrong", "num": "3821", "d": "8/2015"}, {"title": "remove calls bind", "body": "", "num": "3820", "d": "8/2015"}, {"title": "conflicting binding syntax properties regular attributes makes text values property binding impossible", "body": "currently attribute binding works means depending type attribute making binding syntax depends last use case rare nt even know properly without dedicating static variable sake getting value attribute value reason attributes nt need double mustaches since guidelines tell suggest fix problem say drop exceptions many exceptions specialities overkill used use including code html files make exception new attribute types", "num": "3817", "d": "8/2015"}, {"title": "test router unit tests outlet", "body": "currently integration specs", "num": "3814", "d": "8/2015"}, {"title": "test router test parity directives", "body": "right totally different tests router roughly high level tests use cases enforced via script set specs probably integration specs assert part target spec descriptions", "num": "3813", "d": "8/2015"}, {"title": "best way call pipe function inside component without template", "body": "js import component view bootstrap bind import capitalizepipe mypipes import pipes component selector myapp view template component controller class myappcomponent name string constructor inject pipes pipe pipes thisname pipeprotocapitalizeprototypetransform ingens bootstrap myappcomponent bind pipes tovalue new pipes capitalize capitalizepipe", "num": "3809", "d": "8/2015"}, {"title": "pipe called three times", "body": "created pipe js pipe name capitalize export class capitalizepipe capitalize value return valuecharat touppercase valueslice transform value string return thiscapitalize value added components controlpath capitalize directives showerror formdirectives pipes capitalizepipe class inputtext controlpath string value string constructor directives formdirectives showerror ngif inputtext component controller class myappcomponent data object form controlgroup constructor inject http thisdata thisform new controlgroup name new control validatorsrequired gt resjson subscribe response gt thisdata response onsubmit f consolelog f consolelog fcontrolsnamevalid consolelog thisdata bootstrap myappcomponent debugged transform pipe function called times", "num": "3807", "d": "8/2015"}, {"title": "passing values components ngcontrol ngformmodel ngmodel", "body": "could something like controlpath uppercase directives showerror formdirectives class inputtext controlpath string value string constructor input text crash ngcontrol error following exception provider controlcontainer function cd renderer elementref ngcontrol controlcontainer way would something like nt know possible", "num": "3804", "d": "8/2015"}, {"title": "attribute label nt exist", "body": "error shown exception ca nt bind since nt known property element matching directives corresponding property", "num": "3803", "d": "8/2015"}, {"title": "feat create di", "body": "many examples using get realize stay away direct dom elements still many cases still need direct access", "num": "3801", "d": "8/2015"}, {"title": "proposal public api add custom eventmanagerplugins", "body": "currently looks like locked set include would possible create public api custom could created would make easier third party libraries add logic certain events importantly example ionic needs clean way able immediately fire click events also prevent delayed click ios additionally think external plugin within core plugin would use new public api", "num": "3800", "d": "8/2015"}, {"title": "error error unknown browser found getbrowsersfromcli running npm test", "body": "hello trying follow instructions run get angularangular master npm test angular test homeabluangularangular gulp testalljs amp amp gulp testalldart dart sdk detected using gulpfile angularangulargulpfilejs starting testalljs env dartsdkhomeabludownloadsdartsdk darthomeabludownloadsdartsdkbindart pubhomeabludownloadsdartsdkbinpub dartanalyzerhomeabludownloadsdartsdkbindartanalyzer dartdochomeabludownloadsdartsdkbindartdoc dartdocgenhomeabludownloadsdartsdkbindocgen chromebingooglechrome pathhomeabluangularangularnodemodulesbin homeabluangularangularnodemodulesbin homeablugopathbin homeablugopathbin homeablugopathbin homeablugopathbin homeablugopathbin usrlocalbin usrlocalsbin usrbin usrsbin bin sbin homeablulocalbin homeablubin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin ngdartbasedirhomeabluangularangularscripts ngdartscriptdirhomeabluangularangularscriptsci dart sdk detected using gulpfile angularangulargulpfilejs starting pretestchecks starting buildcheckcirculardependencies finished buildcheckcirculardependencies finished pretestchecks dart sdk detected using gulpfile angularangulargulpfilejs starting testjs starting testunittoolsci started specs failures finished seconds finished testunittoolsci ms starting testtranspilerunittest started specs failures finished seconds finished testtranspilerunittest ms starting docstest started specs failures finished seconds finished docstest starting testunitjsci testunitjsci errored \u03bcs error error unknown browser found getbrowsersfromcli getbrowsersfromcli gulp moduleexports gulporchestratorruntask gulporchestratorrunstep gulporchestratorstart runnextset gulpontaskend gulpemit gulporchestratoremittaskdone testjs errored error build sequence failed testalljs errored error plugin gulpshell message command failed binsh c scriptscitestjssh details killed false code signal null cmd binsh c scriptscitestjssh stdout env dartsdkhomeabludownloadsdartsdk darthomeabludownloadsdartsdkbindart pubhomeabludownloadsdartsdkbinpub dartanalyzerhomeabludownloadsdartsdkbindartanalyzer dartdochomeabludownloadsdartsdkbindartdoc dartdocgenhomeabludownloadsdartsdkbindocgen chromebingooglechrome pathhomeabluangularangularnodemodulesbin homeabluangularangularnodemodulesbin homeablugopathbin homeablugopathbin homeablugopathbin homeablugopathbin homeablugopathbin usrlocalbin usrlocalsbin usrbin usrsbin bin sbin homeablulocalbin homeablubin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin ngdartbasedirhomeabluangularangularscripts ngdartscriptdirhomeabluangularangularscriptsci dart sdk detected using gulpfile angularangulargulpfilejs starting pretestchecks starting buildcheckcirculardependencies finished buildcheckcirculardependencies finished pretestchecks dart sdk detected using gulpfile angularangulargulpfilejs starting testjs starting testunittoolsci started specs failures finished seconds finished testunittoolsci ms starting testtranspilerunittest started specs failures finished seconds finished testtranspilerunittest ms starting docstest started specs failures finished seconds finished docstest starting testunitjsci testunitjsci errored \u03bcs error error unknown browser found getbrowsersfromcli getbrowsersfromcli gulp moduleexports gulporchestratorruntask gulporchestratorrunstep gulporchestratorstart runnextset gulpontaskend gulpemit gulporchestratoremittaskdone testjs errored error build sequence failed npm err test failed see details pkozlowskiopensource asked irc report issue regards ablu", "num": "3799", "d": "8/2015"}, {"title": "browser crashes async mode generating promises repeatedly", "body": "humble code cause browser completely lock copy pasted current docs adjusted slightly async mode ts import component view bootstrap component selector myapp changedetection onpush view template component controller class myappcomponent get title return promiseresolve hello world bootstrap myappcomponent see problem suspect way angular dirtychecking since getter returns new promise time called angular gets confused even though promise resolves value every time seems like asyncmode specific use regular nonasync mode see browser remains responsive fixed version looks like ts import component view bootstrap component selector myapp changedetection onpush view template component controller class myappcomponent saving reference promise helps title promise constructor thistitle promiseresolve hello world bootstrap myappcomponent code works expected", "num": "3798", "d": "8/2015"}, {"title": "http module missing", "body": "find http module", "num": "3797", "d": "8/2015"}, {"title": "flow component context component contents", "body": "take example javascript import component view bootstrap component selector app view template class app name string bootstrap app make app context available view content suck consuming component foohtml produce hello foobar actually produces hello name", "num": "3796", "d": "8/2015"}, {"title": "documentation coredirectives needs updated match switch uppercase constants", "body": "docs specify using coredirectives looks like coredirectives", "num": "3795", "d": "8/2015"}, {"title": "ts typings missing formdirectivess", "body": "srcdemots error module exported member formdirectivess gets reported using ts typings bundle goes coredirectives", "num": "3789", "d": "8/2015"}, {"title": "rename ngprobe ngprobe", "body": "", "num": "3786", "d": "8/2015"}, {"title": "fix router empty hash url display hash character", "body": "currently use serialize root url single slash empty string etc instead general always prefer fewest number characters serializing url", "num": "3784", "d": "8/2015"}, {"title": "feat router warn user hooks returnresolve bool", "body": "current behavior continuing hook returns surprising says igorminar", "num": "3783", "d": "8/2015"}, {"title": "creating fake event objects testing components", "body": "say want test component behavior called event vanilla js land would create fake event object passing event handler done however types fake event line expected event type ts dart one could almost ie nt support instantiating event objects clear way getting fake event object works handler signature", "num": "3782", "d": "8/2015"}, {"title": "angulario dev guide still shows renamed viewinjector", "body": "search viewinjector found renamed viewbindings trivial please update dev guide accordingly repo dev guide btw correct", "num": "3781", "d": "8/2015"}, {"title": "lexer errors contain contextual info", "body": "name component template url exception would really nice debugging", "num": "3778", "d": "8/2015"}, {"title": "ca nt inject asynctestcompleter beforeeach", "body": "trying inject block results would allow tests significantly cleaner supporting would prevent lot duplication writing test ing", "num": "3777", "d": "8/2015"}, {"title": "rename pushstatelocationstrategy", "body": "think move away lingo location strategy html spec longer versioned year two naming look archaic happy consider names long nt refer", "num": "3776", "d": "8/2015"}, {"title": "feat router release process router", "body": "finally router code merged still need determine best version release builds repo", "num": "3774", "d": "8/2015"}, {"title": "dts generation depend", "body": "currently following three mechanisms excluding certain types dts generation private methodsclasses ignored methods starting ignored constructors annotated private ignored excluding methods starting mixing privacy semantics ts dart creates lot problems instance myfilets class method b b bmethod class b method privatetype say decided move class b separate file improve code organization since compile every file separate library make work dart rename force export privatetype problem mixing privacy semantics dart typescript dart libraryscope privacy ts classscoped privacy privacy ts stricter private method ts private method dart way around use ts notion privacy rely presence way steps take make private work methods annotate public methods starting private rename public methods starting eg change guarantee private methods fields start require work later situation want end use typescript privacy semantics private methods start public methods start alexeagle mhevery rkirov mprobst", "num": "3772", "d": "8/2015"}, {"title": "darttransformer support multiple directives class", "body": "directive metadata visitor support class multiple directives whereas use case seen user code seems like visitor able handle use case", "num": "3771", "d": "8/2015"}, {"title": "dart incremental build missing typings", "body": "repro success edit file reported vsavkin", "num": "3770", "d": "8/2015"}, {"title": "error adding class validating forms", "body": "name company location datalocation blog datablog directives formdirectives showerror ngif component controller class myappcomponent data object constructor inject http thisdata gt resjson subscribe response gt thisdata response onsubmit f consolelog f consolelog fcontrolsnamevalid consolelog thisdata page loaded receive error exception typeerror read property valid undefined fcontrolsnamevalid null error classhassuccess fcontrolsnamevalid", "num": "3767", "d": "8/2015"}, {"title": "src attribute first time calls undefined endpoint", "body": "get found", "num": "3765", "d": "8/2015"}, {"title": "cryptic error templateurl empty", "body": "trying set plnkr skeleton found searched nt find anything leaving empty throws error plnkr found similar issue setting nonurl useful message could simple think", "num": "3762", "d": "8/2015"}, {"title": "dart build failing", "body": "see build first build issue reappeared previous build fine issue already seen eo june see apparently green amp red builds use dart version print l travis logs kevmoo sigmundch idea could go wrong", "num": "3757", "d": "8/2015"}, {"title": "alpha acessing routeparam route parameter provided produce exception", "body": "routes defined editproductview inject routeparams constructor worked fine works fine long route parameter provided none provided exmple following routerlink itemseditnew exception thrown", "num": "3755", "d": "8/2015"}, {"title": "empty event expression produce cryptic error", "body": "related fixed together template following element alpha worked great produces following runtime error following modification still produces error one works", "num": "3754", "d": "8/2015"}, {"title": "error routerdts", "body": "bit puzzled one think appeared alpha nt upgrade updated angular systemjsbuilder systemjs simple route config like got compilation error work around found provide routerdts file following fix interface routedefinition loginview view nothing special", "num": "3753", "d": "8/2015"}, {"title": "nested router", "body": "hi fooling around routers seems nested router navigate inner route parent router simple example alpha outer router inner router issue currently inner router ca nt navigate within path located inner router using navigate path always need nagivate nestedpath issue check commented line outer router use redirect outer router path innerfavoritespath issue check commented line inner router use redirect inner router wo nt able simply travel inner router navigate inner inner router path resolve redirect best regards tiago braga", "num": "3751", "d": "8/2015"}, {"title": "mistake online step step guide", "body": "apology proper issue right place report final code provided step step guide page raises two errors due line interator syntax guess line directive inclusion guess", "num": "3749", "d": "8/2015"}, {"title": "ngfor nt work inside", "body": "ca nt make ngfor directives work inside reproducible demo application start app run app components approotcmp homecmp helpcmp approotcmp configures routes hosts routeroutlet homecmp helpcmp loaded router inside routeroutlet helpcmp contains ngfor displays list topics however list nt displayed errors thrown console move helpcmp routeroutlet approotcmp template everything works fine", "num": "3745", "d": "8/2015"}, {"title": "remove locationurlinterface use abstract class", "body": "typescript released locationurl abstract class", "num": "3741", "d": "8/2015"}, {"title": "error", "body": "new typings files http following lines throwing error message one solution commentremove file one obtained see", "num": "3740", "d": "8/2015"}, {"title": "chore docs remove unused templates", "body": "many packages folder dgeni templates used remove files", "num": "3739", "d": "8/2015"}, {"title": "sourcemaps nt work codebase", "body": "running etc source maps work looking output code seems sourcemappingurl set twice sure related odd sourcemappingurlelementinjectorspecjsmap sourcemappingurlelementinjectorspecjsmap run tests firefox karma reports ton files nt happen chrome", "num": "3737", "d": "8/2015"}, {"title": "chore docs remove jadedatatemplatehtml", "body": "exist reason use template call", "num": "3736", "d": "8/2015"}, {"title": "warn missing calls entry points", "body": "allow omit tests change detection instance bootstrap anything rely reflection remover refactor tests add warning", "num": "3735", "d": "8/2015"}, {"title": "add definitely typed", "body": "noticed http longer part typings file oversight breaking change http moving module nt see renamed constant httpbindings either", "num": "3733", "d": "8/2015"}, {"title": "bug directive ngif root html element comment", "body": "element function refers comment added ngif directive element using", "num": "3732", "d": "8/2015"}, {"title": "event retargeting issue onbubble events", "body": "", "num": "3727", "d": "8/2015"}, {"title": "dart transformer changedetectors ids", "body": "running wtf dart transformers changedetector ids null issue null seems generated transformer mode makes hard debugging", "num": "3726", "d": "8/2015"}, {"title": "guide user input final code", "body": "guide found third guide user input final code example small typo line", "num": "3725", "d": "8/2015"}, {"title": "add support observable directives components", "body": "currently using experimental change detection mode detect objects used bindings implement observable dart observable rx observable subscribe objects fires event request check make solution complete also need detect component directives used template implement observable interface subscribe example component selector mycomponent changedetection onpushobserve view template name directives const mydirective class mycomponent implements observable string name directive selector mydirective class mydirective implements observable example mycomponent emits event request check mydirective emits event request check yjbanov mhevery", "num": "3724", "d": "8/2015"}, {"title": "camelcase property names nt work right", "body": "dart using tried writing property like nt work error reported properties const compileresult experimentation found fix write property name lowercase properties const compileresult compileresult documentation seems indicate camelcase work directive properties propertyname shorthand notation propertyname propertyname bit experimentation shows property name template caseinsensitive seems like first thing tried match better errorchecking misspelled property", "num": "3716", "d": "8/2015"}, {"title": "chore change bundle rules generate one sfx module several minimal modules", "body": "outlined bundles direct children module get special versions include thirdparty dependencies well modules blocked description copied bundles exported includes bundles corejs corenorenderjs core without render nondom contexts formsjs routerjs webworkerjs zonejs extensions bundle published codeangularjsorg npm bundles folder npm package published codeangularjsorg js dts typings separate folder npm distribution jsmap minjs using uglify eventually using angulartsminify devjs runs dev mode devjsmap testingjs testingjsmap testingdts bundle also get sfx version include dependencies like rx reflectmetadata traceurruntime export global object bundles include testing utilities mocks respective module coretestingjs include bulk testing utilities leaving testing bundles mostly include mocks includes dedupe dependencies todo update bundle build rules change ambient declarations use namespace instead prefix ie instead add automated tests bundles try using example tests add readme bundles folder codeangularjsorg npm dist explain use make sure issue document use bundles docs", "num": "3714", "d": "8/2015"}, {"title": "chore rearrange sources better reflect npm package import paths", "body": "see comment details essentially folder structure updated look like todo move outside break separate bundlespecific test folders x add notes commits x release updated paths x remove superfluous toplevel exports x add new public api exports respective filesbundles clean decorators spec leak specs spec apply decorators prototype chain x manually test npm version benchpress changes depends di test angulario make sure correct paths reflected maybe rewrite imports specific x update paths reflect x consolidate exports src folders reduce redundancy core corenorender exports", "num": "3713", "d": "8/2015"}, {"title": "chore zone add zonejs bundles npm distribution", "body": "reasoning distribute two types bundles bundle stripped sub bundles bundle include subbundles like core forms router webworkers version bundle includes thirdparty dependencies like rxjs reflectmetadata polyfills etc separate bundles advanced users include dependencies assume dependencies provided elsewhere", "num": "3712", "d": "8/2015"}, {"title": "missing case router redirects link reditects", "body": "throw error early router complains route redirects component also contains redirect", "num": "3710", "d": "8/2015"}, {"title": "binding multiple style properties", "body": "easier way bind multiple style properties would nice able pass object la style styleobj styleobj top left properties get mapped appropriate dom object properties concise syntax", "num": "3709", "d": "8/2015"}, {"title": "dgeni export const implements amp abstract annotations", "body": "artifacts conversion process hide jade output", "num": "3705", "d": "8/2015"}, {"title": "create generic class uicomponents use messagebus", "body": "messagebasedrendercompiler messagebasedxhrimpl share lot common code structure sink source handlemessage wrapworkerpromise probably going shared among uicomponents want able send receive messages tofrom worker create generic base class abstracts common code away making easier write uicomponents could export class make easier application developers write uicomponents", "num": "3703", "d": "8/2015"}, {"title": "rail performance goals", "body": "way track rail performance goals using users perceive speed web paul irish google keynote", "num": "3702", "d": "8/2015"}, {"title": "ngif conditions called twice also shortcircuit", "body": "sure actually bug given conditionals appear called twice additionally js operators shortcircuit sides evaluated regardless entirely sure expected behaviour hoping someone could shed light", "num": "3701", "d": "8/2015"}, {"title": "dgeni inline type annotation interface used var part var template", "body": "currently template dgeni doctype references type annotation interface link author thought include meat syntax information really type annotation included doc related interface inlined template instead file", "num": "3700", "d": "8/2015"}, {"title": "dgeni outputs partial templates aliases inline", "body": "export doc templates two aliases need update template inlined method signature independent docs", "num": "3699", "d": "8/2015"}, {"title": "feat router redirect metadata", "body": "builds upon redirect routes also allowed metadata data take precedence target redirect metadata", "num": "3697", "d": "8/2015"}, {"title": "replace traceur polyfills angular", "body": "need investigate find replacement polyfills still use runtime", "num": "3694", "d": "8/2015"}, {"title": "issue error unknown browser found getbrowsersfromcli running tests locally", "body": "tried running test suite locally documented however line bash script adds result caused line throw gulpfilejs running task suggestion remove", "num": "3691", "d": "8/2015"}, {"title": "access components developer tools console", "body": "issue came stackoverflow question far know right nt easy way get component native dom element example compiled dom know component nt access cool production mode incapsulation security development mode think would handy could something like think guys", "num": "3689", "d": "8/2015"}, {"title": "angular build instructions developermd", "body": "trying build angular run performance tests following instructions build fails zonejs traceur packages include license file angular build license file maybe bug packages seems begin shipping license file angular ca nt really require one workaround using", "num": "3688", "d": "8/2015"}, {"title": "move eventdispatch messagebroker", "body": "messagebroker becoming generic really nt tied events event logic moved separate eventdispatcher class", "num": "3686", "d": "8/2015"}, {"title": "design webworker messaging protocol", "body": "currently messaging ui webworker pretty haphazard relies lot hard coded strings additionally various components use protocols example broker protocol setup component protocol events protocol defined different places one protocol file similar barista protocol defines structure messages pass messagebus defines constants use", "num": "3685", "d": "8/2015"}, {"title": "messagebus abstract", "body": "currently messagebus interface means ca nt bind di typescript adds abstract classes language released make messagebus abstract class", "num": "3683", "d": "8/2015"}, {"title": "ability change interpolation delimiter character", "body": "folks wish mix angular template syntax another template rendering syntax wish change interpolation character ex complexity globally changing interpolation character break existing directives use default characters solution would make percomponent setting via decorators syntax teams want adopt different separator would create part standard component config annotation decorator way centralize maintenance usage", "num": "3682", "d": "8/2015"}, {"title": "event binding syntax sugar references eg", "body": "would expect desugar something like rhs ref afaict less already happens fake twoway bindings generic works oneway bindings implemented pattern would appear useful propagating data oneway children parent components", "num": "3680", "d": "8/2015"}, {"title": "domreflectpropertiesasattributes nt work directives", "body": "internally tracked", "num": "3678", "d": "8/2015"}, {"title": "request add unit tests examples modulesexamples", "body": "awesome unit tests examples modulesexamples", "num": "3676", "d": "8/2015"}, {"title": "break foreach", "body": "hi angular support break angularforeach", "num": "3675", "d": "8/2015"}, {"title": "angularjs unit testing", "body": "hi first issue related angularjs started reading unit testing frameworks related wanted use framework used ng development anyone know one recommend best regards tiago braga", "num": "3674", "d": "8/2015"}, {"title": "host vs hostlistener mixup documeantation neither seem work", "body": "confused trying set listeners component playing digging source documentation yet host parameter component annotation nt find anything useful find instance documentation updated fit changing names additionally include problem may actual bug rather problem code first problem documentation documentation angulario directiveannotation reference argument seems longer exist seems replaced argument snip example code problem edit ericmartinezr solved fault suspected end trying use argument stripped example trying import component view enum direction updown leftright component selector draggable host onmousedown draggingstart view template component controller export class draggable dragging boolean constructor thisdragging false renders fine would expect get printed every time click instead getting exception every time press mouse", "num": "3671", "d": "8/2015"}, {"title": "extension annotations", "body": "hi would useful ability extending annotations case try implement dsl basic components started inputbase like extend instance implement input typetext problem every time extend input rewrite properties although nt changed", "num": "3670", "d": "8/2015"}, {"title": "fire ngmouseover disabled buttons", "body": "know currently nt imo angularjs use case button remains disabled entered form invalid want show tooltip disabled submit button explain user invalid every time user hovers disabled submit button improve usability chance accepted", "num": "3668", "d": "8/2015"}, {"title": "click work properly", "body": "hello html like text click span effect click work child tags magic", "num": "3665", "d": "8/2015"}, {"title": "better error messages property initialized", "body": "related fixed together listing event directive without creating associated instance results cryptic error typeerror read property observer undefined functionobservablewrappersubscribe eventemitteraccessorsubscribe appviewmanagerutilssetupeventemitters appviewmanagerutilshydrateview appviewmanagerutilshydrateroothostview appviewmanagercreateroothostview zonerun zonerun zoneboundfn reproduce", "num": "3664", "d": "8/2015"}, {"title": "typos stepbystep guide", "body": "found typos stepbystep guide user input final code snippet line line also chapter displaying data missing line end final typescript snippet", "num": "3663", "d": "8/2015"}, {"title": "better error reporting ngmodel exp syntax", "body": "work fail silently either throw allow forms sure makes sense related done together", "num": "3662", "d": "8/2015"}, {"title": "add channel support messagebus", "body": "messagebus support form channel abstraction could channels angular modules renderer compiler xhr router etc users could specify channels", "num": "3661", "d": "8/2015"}, {"title": "bootstrapwebworker transpiled bootstrapwebworker throws typeerror", "body": "hi noticed something weird playing around web worker modules typescript function name called two capital w generated javascript name seems turn one capital w throws typeerror reproduce bootstrapts loaderts workerts typescript import bootstrapwebworker import forminjectables import routerinjectables app component import app app bootstrapwebworker app forminjectables routerinjectables uncaught typeerror function see screenshot nt know typescript bug versions information angular typescript", "num": "3658", "d": "8/2015"}, {"title": "feature request new unbounded query type", "body": "query searches light dom tree matching nodes viewquery searches component view matching nodes consider case many nodes page given type order build tree model components unbounded parent injection used build tree bottomup however building tree possible child injection deeply viewnested components reachable viewquery consider adding new type query descend entire view tree optimize query stop descending first instance since first instance inject children tree", "num": "3657", "d": "8/2015"}, {"title": "bound components showing twice query children", "body": "binding component token results component appearing twice children list injected query ex prints", "num": "3655", "d": "8/2015"}, {"title": "docs api reference also include globalambient object names included sfx bundles", "body": "example bundle exports module user looking componentannotation docs idea get hold annotation using module loader cc wardbell naomiblack", "num": "3651", "d": "8/2015"}, {"title": "docs bookmarks class methods fields linkable", "body": "docs angulario make methods fields bookmarkable easier sharing cc mhevery", "num": "3648", "d": "8/2015"}, {"title": "docs query improve query documentation", "body": "query documentation lacking context code samples available queryfactory interface documentation moment added query documentation given description purpose cc mhevery", "num": "3647", "d": "8/2015"}, {"title": "fix compiler directives pointing forward ref produce error", "body": "two components defined module one component depends defined component undefined runtime since classes transpiled using assignment instead hoistable declarations typescript component directives child child would undefined point class componentone directive class child raise error instead failing silently cc mhevery", "num": "3646", "d": "8/2015"}, {"title": "feat compiler property foo raise exception", "body": "users hack night trying set properties way since foo would never valid expression compiler raise helpful exception pattern found since pattern predictable exception give specific feedback suggestion cc mhevery related done together", "num": "3645", "d": "8/2015"}, {"title": "implement di", "body": "didart supported following usage translated ts currently achieved preferred replacement implement sugar", "num": "3644", "d": "8/2015"}, {"title": "typeerror read property subject undefined systemjs", "body": "updating systemjs version encountered issue following stack trace debugging reached line newest version systemjs property field workaround may work however sure best solution let know think good enough order initiate pull request", "num": "3643", "d": "8/2015"}, {"title": "angular alpha form error", "body": "hello guys breaking change forms alpha alpha forms stopped working upgraded got error tried navigating page one forms plunkr examples alpha check alpha works alpha verify checking console log angular alpha version angular alpha version would appreciate help guys dispense best regards andr\u00e9", "num": "3642", "d": "8/2015"}, {"title": "exception queries concurrently active template", "body": "component uses ngfor create components inside view iterating list html use viewquery get hold child components well change getter return map original array seems ngfor repeatedly destroys creates components change viewquery keeps accumulating components ticks viewquery stops working entirely throws plunker showcasing bug", "num": "3638", "d": "8/2015"}, {"title": "angular type definitions contain lot properties type void", "body": "published type definitions contain properties type void instance value property approoturl class allowed typescript spec serve useful purpose reason also marked error webstorm", "num": "3637", "d": "8/2015"}, {"title": "fix emitted values nt trigger change detection torx", "body": "using torx conjunction http request function gets called right values zones nt propagate changes made presumably rxjs assigning local copy zones chance patch global method code rx think causes problem example code typescript class constructor inject http cc mhevery", "num": "3634", "d": "8/2015"}, {"title": "router export type interface", "body": "currently get two docs exported type interface one core one router confusing think unnecessary duplication make router depend type exported core", "num": "3632", "d": "8/2015"}, {"title": "add support observable models dart", "body": "annotate component like generate onpush change detector automatically subscribe observable objects class abstractchangedetector subscriptions obs value index value observable subscriptions index stream valuestream subscriptions index cancel subscriptions index valuechangeslisten refrequestcheck class mycomponentchangedetector detectchangesinrecordsinternal var ta contexta obs ta yjbanov mhevery", "num": "3631", "d": "8/2015"}, {"title": "uncaught typeerror angular function", "body": "ca nt get around error using systemjs see code", "num": "3628", "d": "8/2015"}, {"title": "ngmodel viewmodel nt update model value changed programatically", "body": "reproduce type something like banana input click swap swap button input change say swap button change say swap banana click swap button input still say swap even though value banana think going ngmodel directive keeps around field last thing typed input typing banana updated banana programatically changed swap nt updated swapped back banana ngmodel thinks value nt changed think ngmodel method would fix might side effects nt understand", "num": "3627", "d": "8/2015"}, {"title": "api docs rename annotations di modules metadata dependency injection", "body": "docs mainly", "num": "3626", "d": "8/2015"}, {"title": "increase number query fields injectors", "body": "performance reasons queries view queries stored element injector fields instead held maps current limit already showing limiting propose bumping limit implementing fallback maps strategy similar injectors instead current behavior throwing", "num": "3625", "d": "8/2015"}, {"title": "dgeni insert space doc breaks two comment lines", "body": "observe comment code produces doc missing spaces linebreaks occur original", "num": "3623", "d": "8/2015"}, {"title": "dart ie support tag", "body": "need polyfillworkaround specifically element becomes htmlunknownelement provide getter fixed js version need similar fix avoid going jsinterop every call cache value dart browseradapterdart bool templateelementcheckperformed false bool supportstemplateelement true void maybechecktemplateelementsupport templateelementcheckperformed return try ie throws others may simply return null supportstemplateelement new templateelement content null catch e supportstemplateelement false update getter dart node content templateelement el gt elcontent node content templateelement el maybechecktemplateelementsupport supportstemplateelement return elcontent else compiler extracts children anyway return el", "num": "3622", "d": "8/2015"}, {"title": "router navigate different router", "body": "updated thread removed previous issue since seems problem worte anyway need route different eg nested router seems router working changes url may router property visibility problem related viewbindings bindings properties viewbindings property visibility component view children hope helps anyone", "num": "3620", "d": "8/2015"}, {"title": "forms assigning ngcontrol variable results null", "body": "full example form ivalid directives formdirectives export class demoform bootstrap demoform results exception typeerror thiscontrol null ivalid null changing code use shown results errors works expected omitting code brevity however odd part removed code get exact error message exception typeerror thiscontrol null ivalid null short behavior seems consistent", "num": "3619", "d": "8/2015"}, {"title": "add runtime instrumentation reports unused reflection data", "body": "wo nt perfectly treeshakeable di syntax andor transformer time mean time would useful developers know reflection data retained transformer never gets used application proposal add flag causes track keys used access objects map add new method returns objects never requested developers could flag objects dead code audit", "num": "3618", "d": "8/2015"}, {"title": "gulp testunitjs break missing browser", "body": "finished broccolijsdev starting testunitjskarmarun error launcher start chromecanary find binary homevictorbindartchromiumchrome please set env variable chromecanarybin finished testunitjskarmarun watch triggered file change pm given logs see task stop browser could launched", "num": "3615", "d": "8/2015"}, {"title": "step step guide user input minor issue", "body": "final code part syntax error directives directives ngfor nif instead ngif", "num": "3610", "d": "8/2015"}, {"title": "precompile templates speed compile new compiler pipeline", "body": "design doc overview new compile pipeline proved faster bootstrap times faster compilation times", "num": "3605", "d": "8/2015"}, {"title": "move variable name mappings variable locations change detectors", "body": "generating change detectors compiler already knows used variables name mappings however runtime generate variable mappings see want precompile templates well moving information variables change detectors would allow mention precompiled templates also makes sense conceptual level purpose variables provide data change detection", "num": "3604", "d": "8/2015"}, {"title": "properly decode querystring", "body": "object want serialize used jquery function library decode nodejs everything worked fine nt need parse anything decided try new angular service decoding instead array get properly decode querystring created service without calling every object array querystring querystring", "num": "3603", "d": "8/2015"}, {"title": "systemimport load js file try load jspmio failed", "body": "following minutes quick start got error browser failed load resource server responded status found potentially unhandled rejection error loading appone found warning nonerror used file apponehtml angular quickstart enviroment information typescript browsers ie chrome problem", "num": "3602", "d": "8/2015"}, {"title": "watch broken testunitdart", "body": "steps reproduce run wait tests finish touch one files ex problem starting buildtreedart buildtreedart errored facadeconvertergetfileandname facadeconvertervisittypename moduletranspilervisitnode transpilervisit moduletranspilertranspilerbasevisit moduletranspilertranspilerbasevisitlist moduletranspilervisitnode transpilervisit moduletranspilertranspilerbasevisit moduletranspilervisitnode error makes running tests dart pretty miserable experience short flagging cc mprobst igorminar", "num": "3601", "d": "8/2015"}, {"title": "queries cleaned elementinjector dehydration", "body": "view reused dynamic component ngfor query limit hit quickly see following plunker fix trivial removing queryrefs elementinjectordehydrate calls", "num": "3598", "d": "8/2015"}, {"title": "uses wrong log level exceptions", "body": "currently exceptions logged wrong log level show error console makes hard assert automated test run exceptions occurred errors logged errors followup", "num": "3597", "d": "8/2015"}, {"title": "remove facade http since js", "body": "currently http module depends facade adds bulk needed since js blocked", "num": "3595", "d": "8/2015"}, {"title": "ca nt use ngfor ngif inside lightdom polymer web component", "body": "polymer shady dom content projection polymer web component created destroys tag necessary ngfor ngif result following error renderer full example", "num": "3593", "d": "8/2015"}, {"title": "feat package add typescript field typings information", "body": "related conversation packagejson", "num": "3590", "d": "8/2015"}, {"title": "dedupe getter setter generation logic", "body": "code generation logic exists bindgenerator amp templatecompiler dedupe", "num": "3589", "d": "8/2015"}, {"title": "feat dist include core modules npm dist", "body": "task change npm release script copy modules module folders outside npm distribution intended included according issue urgent module moved folder would included npm distribution without changing release script", "num": "3588", "d": "8/2015"}, {"title": "redefining property onclick", "body": "trying get app running zombie seeing following error presumably jsdom patching part works likely limitation jsdom many thanks", "num": "3584", "d": "8/2015"}, {"title": "interpolation expression recognized host attributes properties", "body": "given would expect host element ends interpolation expression recognized taken account would expect processed regular templates using syntax templates plunker reproduce scenario", "num": "3583", "d": "8/2015"}, {"title": "question using eventemitter manipulate data return observable", "body": "asked gitter room responses thought might ask looks like want work rxobservables use eventemitter class wondering following component calls service passing something parameter service modifies parameter service returns observables component observe subscribe using rxobservable importing directly following ts myservice export class myservice static dosomething something object rxobservable return rxobservablecreate gt somethingcreatedat datenow oonnext something ooncompleted component ts mycomponent class mycomponent dosomethinghandler something object void myservicedosomething something subscribe info gt consolelog info work eventemitter wrapper saw returns instead looks like pass callbacks left right make work like logic separated component call service one would heavy work returning something already manipulated component", "num": "3580", "d": "8/2015"}, {"title": "refactor remove dart support", "body": "talking mhevery internal stakeholders usefulness generalpurpose http library dart consensus largely needed network data managed specificpurpose client libraries opposition change voiced issue wait days moving forward supporting dart would reduce overhead developingcontributing http library would simplify problems semantic mismatches dart streams observables", "num": "3579", "d": "8/2015"}, {"title": "bootstrap disappeared api docs", "body": "hey yjbanov look longer getting exported dgeni mhevery thinks related refactoring change split separate file", "num": "3578", "d": "8/2015"}, {"title": "querylist iterable constructor", "body": "sorry vague title simple thing suggested post issue another user whenever want access querylist query directives viewquery components ca nt iterate list constructor print list see results iterable iterate oninit example works like expected behaviour documented others users may struggle issue see example code javascript component selector maincomponent view template directives anothercomponent class maincomponent constructor viewquery anothercmp anothercmp querylist oninit coding issue documentation repro directives components edit found issue explained happens still documented", "num": "3577", "d": "8/2015"}, {"title": "dgeni export classes private interfaces", "body": "fixed along applicationref example dts correctly interface output api docs class see essentially need make fix dts dgeni template", "num": "3576", "d": "8/2015"}, {"title": "throwing error upgrading router", "body": "upgrade alpha version router get errors related routeconfig object runtime function running produce error typings seem ok runtime error using version", "num": "3575", "d": "8/2015"}, {"title": "var const exports type information output dgeni", "body": "docs attribute var var adding meaningfulhelpful info user called really want see type information case trailing var likewise const want thing thus fixing name const separate issue nt capitalsnakecase example leftnav dgeni however fine omit type information", "num": "3574", "d": "8/2015"}, {"title": "rename const allunderscorecaps", "body": "also find vars case format const make const", "num": "3573", "d": "8/2015"}, {"title": "interfaces members nt show dgeni", "body": "example see present api docs interface", "num": "3571", "d": "8/2015"}, {"title": "fix router support aux routes within aux routes", "body": "", "num": "3568", "d": "8/2015"}, {"title": "feat router support deep linking aux routes", "body": "needs design work imagine look something like could add nested array represent aux routes", "num": "3567", "d": "8/2015"}, {"title": "subscribe value changes ngmodel", "body": "input html would like subscribe changes would one using form builder following js thatform fbgroup desc validatorsrequired thatdesc thatformcontrolsdesc observablewrappersubscribe thatdescvaluechanges function value something course markup would bit different well html using form builder makes ts compiler complain property exist control", "num": "3565", "d": "8/2015"}, {"title": "router ca nt loaded webworker app", "body": "router locationstrategy moment depends directly dom thus ca nt loaded webworker", "num": "3563", "d": "8/2015"}, {"title": "update newer systemjs infrastructure builder loader", "body": "start hit systemjsrelated bugs already fixed upstream examples upgrade newer builder loader combo", "num": "3562", "d": "8/2015"}, {"title": "anchoring animations nganimateref way transition cloned element new element", "body": "trying achieve morphing animation views using nganimateref animation follow steps user clicks element go forwards back link go backwards fade contents element transitioning opacity contents morph element new size position using nganimateref either fade cloned element reveal actual element underneath fade actual element cloned element removed dom step achieve plunkr far problem nganchoroutremove happens early morph nganimateshimremove real element could use ca nt think else another smaller issue get flash content showing morphing starts faded content", "num": "3560", "d": "8/2015"}, {"title": "missing routeroutlet constructor routerdts", "body": "routerdts typescript declaration according latest angular router alpha however missing getting typescript errors compiling yet code runs dive deep source fix", "num": "3559", "d": "8/2015"}, {"title": "maximum call stack size exceeded error alpha using ngmodel lot fields", "body": "seems work fine alpha reproduction available google chrome", "num": "3558", "d": "8/2015"}, {"title": "error routing alpha", "body": "im getting function switch back okay change name", "num": "3556", "d": "8/2015"}, {"title": "feat bundles include bundles npm distributions", "body": "bundles included npm distributions users still take advantage goodies come package manager explicit versioning gitignored bundles easy installation todo include bundles included codeangularjsorg toplevel folder npm distribution also include dts files folder", "num": "3555", "d": "8/2015"}, {"title": "fragmentation locationsearch string", "body": "problem return function locationsearch need allway return array example url one parameter mysitecom useridabc paramsgetfromurl locationsearch userid consolelog paramsgetfromurl return abc example two parameters mysitecom useridabc amp useriddef paramsgetfromurl locationsearch userid consolelog paramsgetfromurl return abc def need return abc instance abc mysitecom useridabc please help", "num": "3554", "d": "8/2015"}, {"title": "http module also resolve url include base url", "body": "creating node version universal ran problem needed url resolved baseurl sent recreate order find error thrown suppose simple di swap turned recreating proposal allow http use baseurl resolve urls sending updated asked maintainer add baseurl feature universal app ran server assume either user set baseurl server load balancing etc grab baseurl tag also needed router probably rendered anyways server", "num": "3553", "d": "8/2015"}, {"title": "bug locationsearch", "body": "url mysitecom useridabc need get userid parameters use paramsgetfromurl locationsearch userid console paramsgetfromurllenght gt gt gt array instead please help", "num": "3551", "d": "8/2015"}, {"title": "document angular expression syntax", "body": "seems documentation grammar angular expression example value ngfor ngif", "num": "3550", "d": "8/2015"}, {"title": "implement ngupgrade", "body": "", "num": "3548", "d": "8/2015"}, {"title": "component typings angulardts cause ts compiler throw error", "body": "noticed ide complains component updated version updated typings dt package npm defined typings reason compile component looks something like compiler complains", "num": "3546", "d": "8/2015"}, {"title": "cryptic error included templateurl", "body": "sure common ran cryptic error included string simple example example goof forgot change without get nice error message exception failed load template app failed fetch url hello get firefox exception typeerror parts null chrome exception typeerror read property null found error happens string", "num": "3543", "d": "8/2015"}, {"title": "feat typings bundle typings able declare references", "body": "right bundle would implement typings template order include declarations top nt scale well add bundles described instead information able included bundle definitions inside", "num": "3540", "d": "8/2015"}, {"title": "running app webworker", "body": "sure use npm distribution set app using web workers need zonemicrotaskwebworkersjs used examples folder bit confused scriptsjs import script mentioned seem find within npm distribution", "num": "3537", "d": "8/2015"}, {"title": "viewbindings documented changelogmd", "body": "noticed changelogmd documenting renamed breaking change", "num": "3536", "d": "8/2015"}, {"title": "remove implements replace typescript", "body": "", "num": "3535", "d": "8/2015"}, {"title": "omitting misspelling directive selector fails silently", "body": "quickly spot problem javascript import component directive view bootstrap directive slector test class test constructor consolelog activating test component selector hello view template directives test class hello bootstrap hello took mins figure property misspelled effectively removing selector directive throw clear error message case", "num": "3533", "d": "8/2015"}, {"title": "build testunitjs takes secs trigger", "body": "merging secs lag file change test run trigger changing back gets situation back normal lt would vote flipping flag till figure causes slowdown unless someone idea fix slowdown without removing type checks", "num": "3532", "d": "8/2015"}, {"title": "ngif inside ngif nt work", "body": "true condition element inside false condition another element displayed anyway inside first ngif inside second ngif produces whereas englobing false", "num": "3531", "d": "8/2015"}, {"title": "get existing mockbackend instance mock response", "body": "struggling figuring get instance mockbackend injected dependency service mocking response connection made directive js import elementref directive import observablewrapper import isnativeshadowdomsupported commonshadowdom import iconstore appservices directive selector logo export class logo constructor private elementref elementref public icon iconstore let el thiselementrefnativeelement let root isnativeshadowdomsupported root elcreateshadowroot else root el observablewrappersubscribe iconget mediangsvg svg gt rootappendchild svg directive depends turn depends using tests resolve deps run tests js import asynctestcompleter testcomponentbuilder aftereach beforeeachbindings beforeeach describe expect inject import dom import observablewrapper import injector bind component view mockbackend mockconnection connectionbackend baserequestoptions response http import isnativeshadowdomsupported commonshadowdom import iconstore appservices import logo appdirectives const logoglyphhtml export function main describe logo gt var injector injector var backend mockbackend var response component selector test view directives logo class test constructor problem never gets triggered mock response thinking may instance get one thus subscribe right backend connections hard time figuring solve issue ps entire code viewed easily cloned tested locally", "num": "3530", "d": "8/2015"}, {"title": "angular broke existing async pipe", "body": "really sure bug witnessed new breaking behavior since latest basic filter pipe defined js import pipe pipefactory nullpipefactory import pipes export class filterpipe implements pipe supports array return arrayisarray array ondestroy transform values args return args values valuesfilter function object return objectkeys object function key return string object key tolowercase indexof string args tolowercase create factory since create instance binding stateful pipes export class filterfactory implements pipefactory supports array boolean return arrayisarray array create ref pipe return new filterpipe since templates angular async passing value nullpipefactory value supported export var filter new filterfactory new nullpipefactory jade template like promise returned call get new intermediate object deal properly getting array breaks", "num": "3529", "d": "8/2015"}, {"title": "angular alpha error loading routerdevjs", "body": "hello changing app alpha alpha tried load would nt work produced following error message message indicates stems following line code perused rest files see retrieveglobal along prepareglobal defined file never used correct wrong file meant people writting code spec writing code anyone stumbled upon yet one problem best regards andr\u00e9", "num": "3528", "d": "8/2015"}, {"title": "doc links broken keyvaluechanges", "body": "doc links doc previously removed please update api docs mention keyvaluechanges see marking throws api doc errors", "num": "3527", "d": "8/2015"}, {"title": "dts files updated definitelytyped", "body": "jelbourn maybe", "num": "3526", "d": "8/2015"}, {"title": "optional routeparams", "body": "angular router support optional route params id syntax similar functionality new router", "num": "3525", "d": "8/2015"}, {"title": "inconsistencies api names", "body": "interfaces http inconsistent variables start capital letter http inconsistent test inconsistent variable allcaps eg test may wrong constants start lowercase letter eg functions exported var thus appear functions start uppercase lowercase test inconsistent functions begin initial lowercase letter innercap test inconsistent see list classes asof", "num": "3524", "d": "8/2015"}, {"title": "component view content projected wrong place", "body": "component template looks like html import package used demo looks like html progresslinear demo determinate primary determinate accent buffer see rendered output example bar looks like instead output looks like view component project completely wrong place see bug action pull branch run visit", "num": "3521", "d": "8/2015"}, {"title": "need separate dts file separate modules", "body": "forms http tests related", "num": "3520", "d": "8/2015"}, {"title": "docs interfacesclasses nt show types", "body": "generated docs typescript files nt show type class interface members", "num": "3519", "d": "8/2015"}, {"title": "expose libraries lib", "body": "currently exposes libraries convention private dart currently prevents us generating api docs material components", "num": "3518", "d": "8/2015"}, {"title": "implement ngupgrade", "body": "", "num": "3517", "d": "8/2015"}, {"title": "formbuilder defined alpha", "body": "playing formbuilder got following error message uncaught referenceerror formbuilder defined wrong code based fbts import inject import component view bootstrap import formdirectives formbuilder controlgroup component selector myformbuilder viewinjector formbuilder view directives formdirectives template demo form sku component controller class myappcomponent myform controlgroup bootstrap myappcomponent fbhtml systemimport fb", "num": "3515", "d": "8/2015"}, {"title": "use instead", "body": "maybe always use short syntax like", "num": "3514", "d": "8/2015"}, {"title": "refactor rename urlsearchparams something else", "body": "tl dr rename discussed jeffbcross would wise rename class considering behaviour differs whatwg version interface naming differently could help minimize confusion using api ideas missing leading maybe standing family interfaces derived behaviours discussed may agree disagree include following explicit method think would valuable propose editors whatwgurl whatwg future accept proposal like may possible deprecate remove inangular urlsearchparams rely native implementation instead future something semantic issue tab atkins jr nt keen fact sometimes want merge appending existing values multimap behaviour sometimes want replace existing values map behaviour nt believe value providing way specify schema two methods would certainly require explicit though implicitly merging requestoptionsmerge rather whatwg strategy replacing original query entirely currently possibly future urls associated urlsearchparams object possible implicitly merge way even whatwg version object used may thoughts suggestions welcome", "num": "3513", "d": "8/2015"}, {"title": "remove usage int use number", "body": "think leftover dartcompatibility atscript longer needed", "num": "3511", "d": "8/2015"}, {"title": "benchmark generator", "body": "create tool generates apps given app descriptor tool used emulate specific usage patterns apps large number components small apps tableheavy views deep hierarchies multiapps measure application load time eg long function take measure generated code size proposal application descriptor yaml file example yaml toplevel component entrypoint shell component shell name component class element shell template nestinglevel indicates many levels deep node appear nestinglevel whether node guarded conditional eg ngif branch number property bindings node props nestinglevel branch props template node name begins capital letter nested component screenheader props node name begins small letter plain html element div many times repeat node note different branchrepeat repeat template screenheader props div nestinglevel whether node conditionally repeated eg ngfor branch repeat screenheader template div nestinglevel repeat", "num": "3510", "d": "8/2015"}, {"title": "remove unnecessary wrapper classes replace fa\u00e7ades", "body": "see wrapper slaying list", "num": "3509", "d": "8/2015"}, {"title": "binding error hostproperties null", "body": "say create component run component get error decent part seems like actually providing name component", "num": "3506", "d": "8/2015"}, {"title": "make viewencapsulationnone default component behavior", "body": "say component like used template like html mdslider color red developer never touched shadow dom fact nt work frustrating mystery given state shadow dom draft lukewarm reception emulation optin feature", "num": "3505", "d": "8/2015"}, {"title": "forms twoways ngmodel sometimes fail update field value", "body": "set ngmodel property input field object value accessed properties array field value sometimes updated instance imagine following model setup form template like html locale locale description formmodeldescriptiontextmap formmodellocale formmodellocale field updated onlocaleselected locale function first input field correctly show updated locale value second one sometimes fail update locale description text last div correctly updated well observed different nonpredictable behaviour following cases object property exist model property returns undefined exists mapped undefined value input field noticed model always gets updated enter value field fails displayed correctly changing locale debugging noticed ngmodel viewmodel field already still contained new value although changepreviousvalue correct ispropertyupdated returned false view didt receive update", "num": "3503", "d": "8/2015"}, {"title": "test service depends http", "body": "hard time figuring test service dependency simple service js import injectable inject http injectable export class iconstore constructor inject http private spec js import asynctestcompleter aftereach beforeeach describe expect inject spyobject import injector bind http mockbackend connectionbackend baserequestoptions response responseoptions import iconstore icon class spyobserver extends spyobject onnext function onerror function oncompleted function constructor super thisonnext thisspy onnext thisonerror thisspy onerror thisoncompleted thisspy oncompleted export function main describe iconstore gt var injector injector var store iconstore var backend mockbackend var baseresponse keep getting inject instead way suggested docs longer get error actually make sure wo nt fail want mock backend", "num": "3502", "d": "8/2015"}, {"title": "resolveandcreate exist injector angulardts", "body": "seems like static method present definitelytyped typings angulardts", "num": "3499", "d": "8/2015"}, {"title": "limitto pipe lower optional upper bound", "body": "allow multiple limitto throws following error use case pagination directive listed items must two values array", "num": "3497", "d": "8/2015"}, {"title": "feat router provide default alias route based component type name", "body": "via igorminar", "num": "3496", "d": "8/2015"}, {"title": "requires css listed dependencies", "body": "uses npm modules part npm package dependencies issue using node hack solve require dependency module falls apart someone tries use module versions install mymodule anymore means longer solved adding packagejson issues adding dependencies never used browser", "num": "3495", "d": "8/2015"}, {"title": "change", "body": "caused regression dart output incorrect way use must predefined constant cc jelbourn", "num": "3494", "d": "8/2015"}, {"title": "implement imagedemo example dart", "body": "", "num": "3493", "d": "8/2015"}, {"title": "build webworker files libwebworkerdts", "body": "typescript provides libworkersdts using webworker files instead libcoredts since correctly types webworker environment implement need modify toolsbroccolibroccolitypescript accept webworker argument options use correct defaultlibfilename webworkers need modify broccoli builds compile webworkersworker directory separately", "num": "3492", "d": "8/2015"}, {"title": "routersubscribe return streamsubscription instance", "body": "currently returns despite calling instead already returns easy fix ref", "num": "3491", "d": "8/2015"}, {"title": "docs show output examples", "body": "modify dgeni documentation generation implementation shows rendered output next example would extremely useful guide angular component library working", "num": "3490", "d": "8/2015"}, {"title": "allow pseudo keywords getters dart transformer", "body": "transformer currently nt allow property names like pseudo keywords nt tried fix might require changing follows cc kegluneq", "num": "3489", "d": "8/2015"}, {"title": "optional parameter router may cause problems", "body": "problem maybe defined parameter routeconfig myappcomponent use exception thrown reasons routeregistryts code generate null response since uses get route name however corresponds parameter routedefinition optional may defined exception comes missing somethings", "num": "3488", "d": "8/2015"}, {"title": "pipesextend bootstrap method", "body": "looks like possible declare new pipe bootstrap method see bit weird place declare everything used entire app want pipe available everywhere thinking would right place declare like", "num": "3485", "d": "8/2015"}, {"title": "npm install operation timed", "body": "running npm install freshly cloned angular get npm install angular preinstall userskitkatdocumentsdevangular node toolsnpmchecknodemodules purge npm dependencies stale unknown state purging npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcomalexeagletypescriptgit cloning bare repository npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcomalexeagletypescriptgit fatal read error operation timed npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcommlavalcssgit cloning bare repository npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcommlavalcssgit fatal read error operation timed npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcomigorminarbroccolifunnelgit cloning bare repository npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcomigorminarbroccolifunnelgit fatal read error operation timed npm err darwin npm err argv node usrlocalbinnpm install npm err node npm err npm npm err code npm err command failed git clone templateuserskitkatnpmgitremotestemplates mirror git githubcomalexeagletypescriptgit npm err cloning bare repository npm err fatal read error operation timed npm err npm err npm err need help may report error npm err npm err please include following file support request npm err userskitkatdocumentsdevangularnpmdebuglog replace git protocol npmshrinkwrapcleanjson npmshrinkwrapjson", "num": "3484", "d": "8/2015"}, {"title": "routing error", "body": "im getting following error following wrong", "num": "3483", "d": "8/2015"}, {"title": "corejs include bootstrap module", "body": "npm install version import bootstrap error import bootstrap correct", "num": "3482", "d": "8/2015"}, {"title": "feat router provide overridable historystrategy service", "body": "would allow ionic populate history form localstorage server completely override behavior back button throughout app", "num": "3481", "d": "8/2015"}, {"title": "feat router perrouter pushpop history api", "body": "based meeting ionic team sounds like main thing ionic needs missing router", "num": "3480", "d": "8/2015"}, {"title": "automate creation presubmit branches", "body": "discussed design mhevery could speed angular developers bit reacting creation label idea run small appengine app register webhook github issue modification event modification merge label added added trusted party core contributor andor maybe googler create presubmit branch pointed sha approved way simple http api call github creating ref currently create move branch ref", "num": "3478", "d": "8/2015"}, {"title": "prevent situation commits master break downstream projects", "body": "would like extend current presubmit setup also run tests tap could make job syncmaster easier breaking changes would identified resolved lot earlier minimum want report results back committer know downstream breakage exists start fix next step improve avoid commits going master mhevery designed bit currently best guess presubmit branch posts dist folder gcp custom process running internally would fetch create cl test tap submit pass change breaking core team member patch cl fix downstream breakages submit submit changes would automatically merged master source truth master lagging great design amount manual stuff maintain alternative keep different github repo call containing dist folder selected subset presubmit branch well master travis update soon build succeeds nt need run tests could maybe use standard tooling like moe rest merging testing however problem ca nt rebased like original sources hard keep uptodate respect moving master", "num": "3476", "d": "8/2015"}, {"title": "running unit tests new html document creates failures nonchrome browsers", "body": "weeks ago started running unit tests new html document see works fine chrome creates problems browsers biggest one safari events dispatched document causes eventsbased unit tests fail also generates one failure firefox firefox default behaviour event applied eg checkbox checked click text selection feature work moving back real dom nt seem degrade performances means loosing isolation brought new document seems needed able integrate browsers ci", "num": "3475", "d": "8/2015"}, {"title": "initial changedetection working dynamiccomponentloader", "body": "changes newly created components dynamiccomponentloader detected angular version easy example find indexts apphtml msg appts component selector app injectables dynamiccomponentloader injector elementref view templateurl srccomponentappapphtml styleurls srccomponentappappcss export class app provided bar string loaded apphtml foo still displayed change detected soon first event triggered component bar msg shows seems issue within call createloginview app constructor bootstrap promise apphtml displays correct bar msg something wrong thx", "num": "3474", "d": "8/2015"}, {"title": "arbritrary bootstrap import rewritten", "body": "application import ends bootstrapdart rewritten boostrapstaticdart import internal", "num": "3473", "d": "8/2015"}, {"title": "support decorators", "body": "im transpiling code babel uses decorators proposal current code transpiled problem annotation function gets invoked return possible check annotation constructor called new keyword returns function puts onto classes annotation property way angular would support annotations proposal also", "num": "3470", "d": "8/2015"}, {"title": "nt push dart files needed files npm", "body": "imo add proper npmignore file push npm minimal set files filter unnecessary stuff", "num": "3469", "d": "8/2015"}, {"title": "dartdocgen process fails due multiple exports renderelementref", "body": "see logs never made pub looks like renderelementref exported renderdart coredart culprit resolve", "num": "3466", "d": "8/2015"}, {"title": "question getting null rendercompiler", "body": "hey looking load dynamically templates think found good way null blocking way code far javascript import renderapi let render new renderapirendercompiler let customview new renderapiviewdefinition templateabsurl testhtml let compiled rendercompile customview c gt use appviewmanager load compiled view host component throws read property null even makes sense think line returns null directly see line used file nt think case returns null plunkr see missing suggestions thanks advance", "num": "3465", "d": "8/2015"}, {"title": "unhelpful error message component missing selector", "body": "omit selector completely get use empty string selector get error cases captured single check tells user something like", "num": "3464", "d": "8/2015"}, {"title": "remove viewsplitter precompiled apps", "body": "run part transformer runtime", "num": "3462", "d": "8/2015"}, {"title": "remove styleinliner precompiled apps", "body": "runs precompilation", "num": "3461", "d": "8/2015"}, {"title": "remove ast amp parser classes precompiled apps", "body": "classes used precompiled mode add code size bootstrap time", "num": "3460", "d": "8/2015"}, {"title": "remove dynamicchangedetector precompiled apps", "body": "used precompiled apps adds code size", "num": "3459", "d": "8/2015"}, {"title": "bundle import package separate modules", "body": "tl dr skip table bottom see suggesting move things around partial backlog based proposal discussion done x jeffbcross refactor move http module sibling x jeffbcross fix typings typings template make module name end file dynamic x jeffbcross feat typings bundle typings able declare references x jeffbcross feat package add typescript field typings information x feat bundles include bundles npm distributions x cancelled refactor di move di toplevel module x cancelled refactor facade move facade separate toplevel module x cancelled feat dist include core modules npm dist inprogress jeffbcross chore rearrange sources better reflect npm package import paths jeffbcross chore change bundle rules generate one sfx module several minimal modules unscheduled export type definitions testlib docs api reference also include globalambient object names included sfx bundles chore zone add zonejs bundles npm distribution goals simple predictable consistent package installation consumption experience endusers minimal logical bundles production use router bundle core bundle http bundle full bundle deps etc pave path toward eventually able separate modules separate repositories independent development lifecycles maximum symmetry dart javascript publishing naming structure mostly logical import require paths end users without think hierarchy relationships modules import http angular require angularrouter use cases user wants create quick code sample plunker user wants create production app build process reasonable byte size user wants create production app proprietary build process creates minified bundles user wants create production app server using systemjs loader bundles minified modules loaded needed characteristics modules likely used outside angular app without dependency angular runtime requirement useful runtime utility thirdparty angular libraries primarily tool useful app runtime module used outside required useful plugins tooling forms facade router change detection zonejs dependency injection http websocket storage etc tactical benchpress material test lib ngupgrade universal react native renderer workers proposal required tooling becomes subdirectory gets bundle required moved toplevel directory ie bundles pushed codeangularjsorg runtime modules currently part core repo published inside package npm pub zonejs also added npm dist module npm package name pub package bundle bundle global primary runtime js import namespace target source home repo path corejs ngcore forms formsjs ngforms facade router routerjs ngrouter change detection zonejs zonejs zonejs ngzone angularzonejs dependency injection di http nghttp nghttp websocket storage etc ng js ng angularangularmodules tactical tactical tacticaljs ngtactical angulartactical benchpress benchpress benchpress angularangularmodulesbenchpress material ngmaterial test lib testlibjs ngtestlib ngupgrade upgradejs ngupgrade universal angularuniversal react native renderer angularreactnativerender web workers webworkersjs ngwebworkers angularwebworkers primary import namespaces used context angular app opposed used independently angular example bundle used nodejs environment bundles bundles exported includes bundles corejs formsjs routerjs webworkerjs zonejs extensions bundle published codeangularjsorg npm bundles folder npm package published codeangularjsorg js dts typings separate folder npm distribution jsmap minjs using uglify eventually using angulartsminify devjs runs dev mode devjsmap testingjs testingjsmap testingdts bundle also get sfx version include dependencies like rx reflectmetadata traceurruntime export global object bundles include testing utilities mocks respective module coretestingjs include bulk testing utilities leaving testing bundles mostly include mocks", "num": "3458", "d": "8/2015"}, {"title": "typescript syntax errors detected tests run", "body": "certain typescript errors detected reported unit tests run testunitjs example create following class notice lack constructor body error warning case weird things happen time ts playground correctly reports constructor implementation missing would great errors caught early possible think saw cases syntax errors reported properly provide precise examples atm", "num": "3457", "d": "8/2015"}, {"title": "validator relies multiple form fields", "body": "possible create validator use multiple values decide field valid eg customer preferred contact method email email field required thanks", "num": "3453", "d": "8/2015"}, {"title": "change angularjs displaying data document class friendsservice defined appinjector", "body": "according issue angularangular friendsservice defined appinjector irritating resolve kind error started expect resolve kind issue", "num": "3452", "d": "8/2015"}, {"title": "build broken due wrong typings generated enums", "body": "breaks build since generated broken typings ex", "num": "3450", "d": "8/2015"}, {"title": "support alternative", "body": "hi talked victor think need alternative syntax binding bubbleevents currently onevent x alternative event x alternative event x wishes manfred p perhaps onbubbleevent x would good alternative", "num": "3448", "d": "8/2015"}, {"title": "run vdom", "body": "new version could fast super big projects also scope works perfect behind keep super simple possible thanks", "num": "3445", "d": "8/2015"}, {"title": "mistake documentation", "body": "hi small mistake documentation viewannotation class definitions templateurl template messed switched br dima", "num": "3444", "d": "8/2015"}, {"title": "nodes removedreinserted simply shifted", "body": "reports removes reinserts nodes indices shift make sure", "num": "3442", "d": "8/2015"}, {"body": "think great would love see happen clear due way dart transformers work", "d": "8/2015"}, {"body": "use canreuse onreuse hooks", "d": "8/2015"}, {"body": "hum makes sense need check changing params tell reuse nt way directive though right nt think could talking either words directive without route associated components also directives", "d": "8/2015"}, {"body": "matsko talking think important feature want provide different options debouncing url updates pushing history state changes cghislai right implement canreuse decide whether reinstantiate", "d": "8/2015"}, {"body": "works correctly requires container provided", "d": "8/2015"}, {"body": "vahidalvandi repository angular might want file issue give hint deprecated angular try go", "d": "8/2015"}, {"body": "please read contributing guidelines pascal said types questions illsuited github thanks", "d": "8/2015"}, {"body": "hello youtsea please ask questions repo instead smile", "d": "8/2015"}, {"body": "oh thanks flushed", "d": "8/2015"}, {"body": "repo repo", "d": "8/2015"}, {"body": "emirdeliz angular material ready used production yet therefore exposed npm package words nt use angular material yet unless want play contribute", "d": "8/2015"}, {"body": "ok pascalprecht development program utilizing material design lite result similar material css framework right anyway go contribute terminated current project thank", "d": "8/2015"}, {"body": "yes material design lite pure css implementation md spec nt forget close issue", "d": "8/2015"}, {"body": "ok thank", "d": "8/2015"}, {"body": "btw material design lite pure css also javascript part especially use register html element via js eg input fields", "d": "8/2015"}, {"body": "javascript components yes nt want go details sure mean registering html elements using angular tho", "d": "8/2015"}, {"body": "see use mdl dynamic websites material design lite automatically register render elements marked mdl classes upon page load however case creating dom elements dynamically need register new elements using upgradeelement function use mdl template call upgradeelement function", "d": "8/2015"}, {"body": "maku interesting nt know well think angular shape one actually use angular material shape one could one thanks pointing", "d": "8/2015"}, {"body": "pascalprecht yeah would good exercise make reusable components based mdl maybe enough time think angular material design really far away", "d": "8/2015"}, {"body": "pr welcome", "d": "8/2015"}, {"body": "hey wardbell known case see", "d": "8/2015"}, {"body": "ericmartinezr right problem browser lowercasing property attribute names compiler runs ca nt prevent lowercasing happening current compiler got convention snakecase converted camelcase particular case could access mixedcase variable names good news compiler reworked operating dom parsed browser html text lowercasing wo nt happening options handling reporting situation going close one known issue better solution pipe mhevery tbosch plan new textbased compiler handle mixedcase attribute names box still want mimic browser behaviour", "d": "8/2015"}, {"body": "document find may suggest reported error either possibility perhaps better link article typical binding resolution failures solutions", "d": "8/2015"}, {"body": "rolandjitsu got impression making life harder necessary putting deliverables script tag real point downloaded dynamically via systemjs need framework code anyways quick setup demonstrated plunker also check buildtime compilation examples atscript typescript", "d": "8/2015"}, {"body": "pkozlowskiopensource exact thing top post load lib script tag http router figure behaves way", "d": "8/2015"}, {"body": "rolandjitsu sorry sure follow see plunk linked repos using bundles npm deployed npm please share entire plunk modify mine need help better yet let move discussion gitter seems like using systemjs pb", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "looks like bindingbuilder class duplicated bundles changing line following also trick guess bundles built embedded conflicting one", "d": "8/2015"}, {"body": "jeffbcross looking issue detail come looks like http sfx build done seems undone alpha released sfx package wich causing problem reported issue seen undone close issue going come back near future thanks edit looks like cause issue", "d": "8/2015"}, {"body": "alfonsopresa oh wow thank research vote keeping open fix landed", "d": "8/2015"}, {"body": "thank response pascal keep open", "d": "8/2015"}, {"body": "hey alfonsopresa thanks opening issue sorry trouble nt thoroughly test http sfx bundle added sfx http bundle exist future releases since already fixed master go ahead close", "d": "8/2015"}, {"body": "jeffbcross problem problems apart really liked thinking behind two separate bundles though might strategy thing would extended modules like router example wish could give separation modules another chance latter first things first course btw might also want close quite sure also caused two separate bundles thanks", "d": "8/2015"}, {"body": "reproduce templatedrivenform example looks similar could please provided details environment ideally plunker", "d": "8/2015"}, {"body": "confirm issue happening also string interpolation nt work keeps throwing title error adding following code including sfx files trick", "d": "8/2015"}, {"body": "got impression trying use dom facade utility library afaik intent abstraction queering dom tests use dom api directly even jquery", "d": "8/2015"}, {"body": "pkozlowskiopensource see use", "d": "8/2015"}, {"body": "rolandjitsu see using methods safely replace builtin browser native implementations facade nt add anything simple proxy going go ahead close one nt believe want dom facade public api testing nt provide value tests would increase api surface", "d": "8/2015"}, {"body": "pkozlowskiopensource worried native implementations fail use intended fix thanks clearing", "d": "8/2015"}, {"body": "probably facades abstract js dart differences nt want business providing general helper functions already plenty libraries generic manner facades minimal internal use nt want grow sth generic add many bytes framework", "d": "8/2015"}, {"body": "pkozlowskiopensource makes sense curious plans", "d": "8/2015"}, {"body": "probably put something directive list nt exist time due missing misspelled import ex import imnothere somewhere view directives imnothere hard say without context please try support forum types questions want keep github issues bug reports feature requests thnx", "d": "8/2015"}, {"body": "hey repo looking one", "d": "8/2015"}, {"body": "sorry", "d": "8/2015"}, {"body": "cexbrayat could please share plunker minimal reproduce scenario ca nt reproduce simple scenario", "d": "8/2015"}, {"body": "check console see error see plunk use case even minimal check console see error change selector error disappeared", "d": "8/2015"}, {"body": "fact nothing directives selectors error seeing comes using event handler empty event handling expression minimal reproduction believe got issue already let find one", "d": "8/2015"}, {"body": "ok duplicate", "d": "8/2015"}, {"body": "routerrecognize returns promise need handle return get instruction component", "d": "8/2015"}, {"body": "thanks brandon closing issue way instructioncomponent property return componentinstruction know get instance current component talking sample", "d": "8/2015"}, {"body": "get component accessing componentinstructioncomponentcomponenttype", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "love apis could used make decent browser extension extending batarang", "d": "8/2015"}, {"body": "yjbanov sounds good please use global object consistent etc", "d": "8/2015"}, {"body": "looks like fixed via right alexeagle btford", "d": "8/2015"}, {"body": "yes", "d": "8/2015"}, {"body": "tried nt work class binding primary element", "d": "8/2015"}, {"body": "works following js component selector ngdialog host class dialogcontainer view templateurl dialoghtml styleurls dialogcss encapsulation viewencapsulationnone component controller class dialog title string constructor thistitle dialog", "d": "8/2015"}, {"body": "danicomas bit hard follow problem struggling saying think found bug got general support questions need clarification later case could please try use gitter channel first support requests believe bumping bug could please share minimal reproduce scenario using plunker similar thnx", "d": "8/2015"}, {"body": "pkozlowskiopensource nt know bug first comment second class first element binded child class child elements yes html rendered html kk css dialogcontent border solid black height width margin auto background gray dialogcontainer position absolute width textalign center top last comment found solution adding encapsulation attribute none html rendered html kk css dialogcontent border solid black background gray height width margin auto dialogcontainer position absolute width textalign center top nt know correct viewencapsulationnone causes elements binded solution binded without encapsulation think", "d": "8/2015"}, {"body": "think put css class host attribute ngdialog component added tag dom shadowing hide component view place dialogocntainer css rules parent component ngdialog work keep style component scope wrap template", "d": "8/2015"}, {"body": "cghislai put parent element nt work probably binding ngcontent componentid angular nt replace attribute wrap result html modal need position absolute moment think best way fix solution", "d": "8/2015"}, {"body": "found way property host js component selector ngdialog host class dialogcontainer view templateurl dialoghtml component controller class dialog title string constructor thistitle dialog", "d": "8/2015"}, {"body": "cc vsavkin igorminar vicb", "d": "8/2015"}, {"body": "sound good like idea letting parent know stuff changed nt think providing number changes useful sufficient know anything changed go boolean", "d": "8/2015"}, {"body": "seen pr get names actually mean sure like mean different prefixes also find confusing remind", "d": "8/2015"}, {"body": "vicb something happen letting know nt care need something right letting know passed certain point would sound ambiguous makes clear view changes processed still time rename ideas", "d": "8/2015"}, {"body": "mhevery desciption nt get difference vs doc says first check really think everywhere imo confusing event name see impression request checking something would checked otherwise fwit ca nt remember ever seen event prefixed vs would satisfied would also use instead", "d": "8/2015"}, {"body": "see confusion comes allow time come better proposal", "d": "8/2015"}, {"body": "descriptive children view content thoughts", "d": "8/2015"}, {"body": "yep thoughts enums members actually interface names interface define function name lowercase may appropriate would accurate tend think would better especially context also fall back structural type checking tsjs method names probably generic might lead collision proposal oninit ondestroy ondirectiveinit ondirectivedestroy docheck checkbindings misc notes nt comment docheck need rework rename viewlistener methods consistent onviewcreated vs viewcreated", "d": "8/2015"}, {"body": "vicb yes let rename viewlisteners method take yes comment docheck needs work sorry missed also create pr", "d": "8/2015"}, {"body": "able implement work take look specs see action still lot work across codebase best way keep check issues tagged specific bugsproblems filing issues best way influence gets worked next", "d": "8/2015"}, {"body": "also follow specifically tracks progress router", "d": "8/2015"}, {"body": "fixed already master need wait next alpha release day", "d": "8/2015"}, {"body": "thanks verify close issue", "d": "8/2015"}, {"body": "fixed latest drop", "d": "8/2015"}, {"body": "like allow us access children without knowing template actually looks like reference local template variable surely nice convenient way get hold element instance however also means component know identifier used template addition soon change name local variable component code wo nt work anymore unless change like idea think somehow try keep things decoupled possible", "d": "8/2015"}, {"body": "great point nt thought think natural separation user components library components essentially user writes controllerstyle components interact blackbox library components squarely user component space make easier natural query", "d": "8/2015"}, {"body": "tbh really nt know make easier without introducing coupling component view option would introduce new decorator specifically meant used query local template variables however nt really bring additional value except see looking component code relies template vars could help little bit refactoring things mhevery thoughts", "d": "8/2015"}, {"body": "vsavkin rkirov comment latest thinking removing viewquery constructor injection setter injection supporting directly injecting oneof items", "d": "8/2015"}, {"body": "mlynch thanks detailed issue take look proposal moving query injectables removing array indirection singular cases make lot natural javascript component selector gallery view template gallery export class gallery viewchild carousel carousel carousel loadnewslides work thiscarousel long called afterviewinit finer point bring already support querying var bindings see pascal said benefits querying directive types var bindings nt unique template ask work putting interesting child objects grabbag object would unfortunate ts users lose type information type destruction singular objects implemented using custom setter unboxed using contentchildren listen changes", "d": "8/2015"}, {"body": "anybody", "d": "8/2015"}, {"body": "forforeach greatly maximize chances answer trim plunker absolute minimum needed reproduce pb substantial atm please remove stuff essential ex routing trigger pb", "d": "8/2015"}, {"body": "first thanks response secondly nt see squeeze plunkr place think number validation directives remove stay updated plunkr addition explain happens validation directives nothing need order set different validators input two pages reveal validation directives views form directives ngformcontrol binding creates one control binds appropriate input app controller includes small navigation pannel routeroutlet order switch pages scenario said visit second page twice second entrance could able see error console reason remove routing error happens second navigation happens validation directives input thus navigate first page nt get error", "d": "8/2015"}, {"body": "forforeach thnx update", "d": "8/2015"}, {"body": "issues closed move angular repo", "d": "8/2015"}, {"body": "results code size improvements removing forms intl pipes numbers currency date long stack traces uri dynamic change detector minified ungzipped minified gzipped minified ungzipped minified gzipped breakdown reliance dart core libs dropped angular code dropped dropped deps libs including able drop large chunks code yield compact better treeshakable output conclusion gets us pretty close goal start low hanging fruit make forms api optional make intl pipes optional make long stack traces optional remove dependency bigger changes would removal dynamic change detection template compilation done part another round code size analysis precompilation implemented good chance combined changes get us target better", "d": "8/2015"}, {"body": "nice jsts reused", "d": "8/2015"}, {"body": "bradlygreen js bit flux jeffbcross done splitting code bundles right angular minified ungzipped hello world would plus user code ie identical current dart situation likely change drastically unbundling", "d": "8/2015"}, {"body": "easier pr assuming usecase either ab testing hot component reload different user permission", "d": "8/2015"}, {"body": "yea wondering would fit components going precompiled build process usecase basically hot component reload general extensibility though cases seem applicable", "d": "8/2015"}, {"body": "possible add component without root elementref move", "d": "8/2015"}, {"body": "wisesascha hard impossible say pb based description believe bug please share minimal plunk demonstrating saw getting support gitter hopefully managed sort feel free reopen minimal live reproduce scenario", "d": "8/2015"}, {"body": "cc vsavkin seems like yet possible since render compiler still calls compileview missing something", "d": "8/2015"}, {"body": "waiting angular compile pipeline refactor", "d": "8/2015"}, {"body": "ya angular roadmap update angularucom san francisco weekly meeting notes watchattend angularconnect", "d": "8/2015"}, {"body": "thanks look week", "d": "8/2015"}, {"body": "part", "d": "8/2015"}, {"body": "hack introduced", "d": "8/2015"}, {"body": "easy seems since tests need wait angular nt waiting done testability api need way find particular test needs wait tbosch suggestion achieve generic way please ie without setting flag test", "d": "8/2015"}, {"body": "think examplesbenchmarks nt use create registry manually examplebenchmark integration works tests", "d": "8/2015"}, {"body": "cc alexeagle mhevery", "d": "8/2015"}, {"body": "jeffbcross pleases nt add one component issue confuses dashboard use case lets chat dup", "d": "8/2015"}, {"body": "mhevery good know component nt seem like dupe pointing bug using assignments", "d": "8/2015"}, {"body": "agree igorminar nt see reason config migration newer systemjs generally nt think business providing system config going send pr remove", "d": "8/2015"}, {"body": "quick question using new version systemjs nt modules registered js extension example system system pkozlowskiopensource", "d": "8/2015"}, {"body": "jpsfs true never systemjs moves urls module modifiers nt matter much bundled version since everything preloaded http ajax request done runtime resources could register things js extension would nontrivial current setup repo imports shared ts dart files", "d": "8/2015"}, {"body": "added line original goal bundle make getting ground quick painless possible allowed demoes zero jump straight replace version demo users nt feel like need learn systemjs configuration options assumption demos need wrong", "d": "8/2015"}, {"body": "rkirov see point trying make easier users pb see approach enforcing config impacts dependencies everything goes systemjs afraid might mess things experienced systemjs users adding would prefer angular nt try enforce config appglobal wide loader", "d": "8/2015"}, {"body": "thing bundle usable even without systemjs case config nt anything approved pr remove causes friction elsewhere need find different solution", "d": "8/2015"}, {"body": "pkozlowskiopensource expert systemjs please correct wrong modules registered js using defaultjsextension true systemjs try look modules extension find actually think happening right remove problem describe appear example trigger search defaultjsextension true flag registered nt use js config vote would generate bundle js extension register something like", "d": "8/2015"}, {"body": "jpsfs nt think works like systemjs first consult internal registry see dependency dependency registered systemjs try fetch comes play run actual problems somewhere could share plunk demonstrating", "d": "8/2015"}, {"body": "pkozlowskiopensource yes right fact dependency named registered try reproduce plunk asap", "d": "8/2015"}, {"body": "igorminar sounds good lets revisit end remind people set", "d": "8/2015"}, {"body": "think using defaultjsextensions discouraged looking stuff week thu aug rado kirov notifications githubcom wrote igorminar sounds good lets revisit end remind people set defaultjsextensions true reply email directly view github", "d": "8/2015"}, {"body": "use instead", "d": "8/2015"}, {"body": "please provide exception repro case think fank probably pointed root cause", "d": "8/2015"}, {"body": "think missunderstanding examples means set attribute dom reflect property set well tells angular set property evaluation case bypass attribute useful dom properties matters short hand common form interpolation wish set popertey literal work expected yes go dashcase html attributes case insensitive discussed", "d": "8/2015"}, {"body": "yes issue", "d": "8/2015"}, {"body": "wanted know correct way thanks mhevery", "d": "8/2015"}, {"body": "put plunker repro case", "d": "8/2015"}, {"body": "probably linked", "d": "8/2015"}, {"body": "mhevery plunker times called load async request", "d": "8/2015"}, {"body": "danicomas thanks plunker analysis expected called consequence point set yet seems compiler creates promise since promise created within digest delayed since promise resolutions digest runs unexpected one digest happens account reason chrome dev tools show promise call step seems somehow detects end changes twice double executes digest expected called consequence vicb since know better zones could look going definitely one many digests going", "d": "8/2015"}, {"body": "definitely look actually start looking last week bootstrap getting refactored probably wait unless takes much time", "d": "8/2015"}, {"body": "looks reasonable vsavkin thoughts could create easy repro", "d": "8/2015"}, {"body": "mhevery plunker could see ngcontrol controlpath problem causes error go console dev tools could see details", "d": "8/2015"}, {"body": "fine working issue missing missing around", "d": "8/2015"}, {"body": "closing favor", "d": "8/2015"}, {"body": "right property label attribute use bind attributes", "d": "8/2015"}, {"body": "thanks pkozlowskiopensource", "d": "8/2015"}, {"body": "afaik injecting element ref type already type di elements adamdbradley could elaborate specifically requesting", "d": "8/2015"}, {"body": "pascalprecht really shortcut make easier get ahold native element instead could would continue job still provide", "d": "8/2015"}, {"body": "really application vs render layer logic could imagine would introduce certain amount complexity support since would concrete interface probably wo nt work web worker env cases anyways work native element across component methods vs prolly worth complexity sure tbosch better person talk", "d": "8/2015"}, {"body": "passing eventmanager binding bootstrap method js var bindings bind eventmanager tofactory ngzone gt var plugins new customplugin new keyeventsplugin new mycustomdomeventsplugin return new eventmanager plugins ngzone ngzone bootstrap appcmp bindings", "d": "8/2015"}, {"body": "think better idea might pass renderer angular refactoring renderer methods like removeeventlistener element name callback providing renderer also special semantics someone sets property element overrriding element created overriding call every element template opinion special casing events right either user takes defaults wants full control angular dom fri aug pm victor berchet notifications githubcom wrote passing eventmanager binding bootstrap method var binding bind eventmanager tofactory ngzone gt var plugins new customplugin new keyeventsplugin new mycustomdomeventsplugin return new eventmanager plugins ngzone ngzone bootstrap appcmp bindings reply email directly view github", "d": "8/2015"}, {"body": "tbosch suggesting eventmanagerplugins nt right approach begin removed angular continue array event plugins expose public api new methods use case would covered point", "d": "8/2015"}, {"body": "yes suggesting eventmanagerplugins right approach remove extension point mon aug pm adam bradley notifications githubcom wrote tbosch suggesting eventmanagerplugins nt right approach begin removed angular continue array event plugins expose public api new addeventlistener removeeventlistener methods use case would covered point reply email directly view github", "d": "8/2015"}, {"body": "one", "d": "8/2015"}, {"body": "indeed thnx ericmartinezr closing duplicate", "d": "8/2015"}, {"body": "ran something like falcor past changedetectionpipesobservablepipets maintains reference strategy essentially states transform something different cause side effects strategy without subscription strategy subscription currentvaluereturnedvalue currentvalue returnedvalue different know create prevented similar cycle happening change returns new observable reference actually potential problem first state return returned value returned value dereferenced ondestroy pipe lifecycle rather observable reference lifecycle code rxpipe old way make pipe typescript export function isobservable obs return obs amp amp obssubscribe amp amp typeof obssubscribe function export class rxpipe ref changedetectorref promise promise latestvalue object latestreturnedvalue object immediatescheduler subscription observable pending constructor ref changedetectorref thisref ref thislatestvalue null thislatestreturnedvalue null thisimmediatescheduler null thissubscription null thisobservable null thispending null supports obs boolean return isobservable obs ondestroy void ispresent thissubscription thisdispose thislatestreturnedvalue null thislatestvalue null thispending null transform obs isblank thissubscription thissubscribe obs return thislatestreturnedvalue subscribe obs void thisobservable obs thisimmediatescheduler rxscheduler immediate thissubscription obs observeon thisimmediatescheduler subscribe value gt thisupdatelatestvalue value dispose void ispresent thissubscription thissubscriptiondispose thislatestvalue null thissubscription null thisobservable null thisimmediatescheduler null updatelatestvalue value void thislatestvalue value ispresent thisref thisrefrequestcheck ispresent thispending thisdispose let obs thispending thispending null thistransform obs workaround created ref order ensure value transform logic resolve cycle problem see back digest cycles since giving control bindings observablepromise new way manage bindings meteor uses might better way handle async bindings perhaps better introduce template syntax also related cc vsavkin", "d": "8/2015"}, {"body": "unfortunately works expected yes best user experience angular runs cd sees new instance promise every time point flag error nt promise resolves trigger new cd recreates problem way preventing flag always produces value fixed get proper error", "d": "8/2015"}, {"body": "nt understand ticket relates one trust got plan circle back later see status", "d": "8/2015"}, {"body": "kweheliye setup project using prebundled version http separate bundle", "d": "8/2015"}, {"body": "kweheliye http module available namespace instead maybe causes problem", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "file also get uploaded definitelytyped along currently referring one part npm package ai nt great", "d": "8/2015"}, {"body": "see issue", "d": "8/2015"}, {"body": "actually works expected interpolation would active view component outer component view set retrieved instance outer component makes sense", "d": "8/2015"}, {"body": "html body component body innerhtml removed view template way html file component define bare tag without using children node removed render later", "d": "8/2015"}, {"body": "yes solved going merge today", "d": "8/2015"}, {"body": "thnx report though", "d": "8/2015"}, {"body": "wooops typo good", "d": "8/2015"}, {"body": "matsko work landing api", "d": "8/2015"}, {"body": "hey stevenroose repo angulario", "d": "8/2015"}, {"body": "fixed change", "d": "8/2015"}, {"body": "jelbourn actually calls argument functions see source code details nt think lot closing issue feel free reopen feel like worth investigation", "d": "8/2015"}, {"body": "agree renaming problem use pushstate one happens serialize url hash think maybe better", "d": "8/2015"}, {"body": "last week agreed made change pushed presubmit", "d": "8/2015"}, {"body": "missing something cloned master unit tests angular router almost fail maybe early sounded like something could see", "d": "8/2015"}, {"body": "twhitbeck code artifact gets built", "d": "8/2015"}, {"body": "btford yes try getting errors tried running unit tests noticed largely failing got uptodate clone master", "d": "8/2015"}, {"body": "twhitbeck feel free file new issues whatever error seeing like keep discussion issue focused release concerns", "d": "8/2015"}, {"body": "priority wait kegluneq back", "d": "8/2015"}, {"body": "keertip show example present user code original implementation supported multiple directives removed review time least supported one see first review comment btw transformer code moved new link", "d": "8/2015"}, {"body": "sorry looks like example code code closing issue", "d": "8/2015"}, {"body": "able repro last typechecking change prior sha seems introduced", "d": "8/2015"}, {"body": "think understand issue previously files use shims included langdts references globalsdts used reference traceurruntimedts emit depend shims traceurruntimedts unreferenced subsequent incremental compiles think couple options change use target picks types always include traceurruntimedts compiler inputs transpiling mprobst thoughts", "d": "8/2015"}, {"body": "easy get compile angular codebase spent minutes trying make invocation typescript compiler compatible requires bringing many special configurations apply broccoli layer type checker happy think specialcase shim files incremental compile", "d": "8/2015"}, {"body": "current workaround could use make use elvis operator", "d": "8/2015"}, {"body": "works expected", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "sounds like expression really evaluates undefined give information exactly", "d": "8/2015"}, {"body": "pascalprecht updated first comment", "d": "8/2015"}, {"body": "pascalprecht tried href attribute nt happen", "d": "8/2015"}, {"body": "tested behaves chrome without angular executing code console javascript var imgel documentcreateelement img imgelsrc outputs imgelsrc undefined triggers imgelsrc null triggers imgelsrc request triggered looking seems like browsers least chrome string conversion find behavior debatable maybe makes sense file issue case workaround simple initialize data empty string write custom pipe null undefined string conversion use conditional exp", "d": "8/2015"}, {"body": "ngsrc directive controlled empty strings reason problem directly html attribute could make img directive duplicate code ngsrc however workarounds ok thanks pkozlowskiopensource", "d": "8/2015"}, {"body": "nt want something like ngsrc anymore binding properties also ensure escaping pawel would actually also expect end empty string predefining object dedicated properties nt sound like right solution using pipes kinda okay still expect work without anything additional providing expression want handle case vote opening issue fri aug daniel comas fern\u00e1ndez lt notifications githubcom wrote ngsrc directive controlled empty strings reason problem directly html attribute could make img directive ngsrc however workarounds ok thanks pkozlowskiopensource reply email directly view github", "d": "8/2015"}, {"body": "pascalprecht currently nt mechanism framework special setters could escape logic adding would allow us special casing ideal introduces new concepts code etc honestly must say find chrome behavior surprising would expect interpret null undefined empty string would great someone could check dom html spec say sure specified actually check behavior browsers", "d": "8/2015"}, {"body": "oh escaping actually meant value expression going assigned evaluated", "d": "8/2015"}, {"body": "pascalprecht sure got trying say last comment situation expression evaluates undefined setting property img element prop setter img element seems converting value string observe without angular involved", "d": "8/2015"}, {"body": "yea gotcha point ngsrc basically escapes evaluating interpolation done assigning attribute nt broken requests binds properties know yes real escaping also evaluated value gets assigned property evaluated also nt get broken requests despite fact request undefined might course broken url different issue", "d": "8/2015"}, {"body": "pkozlowskiopensource spec says string user agent update image data img element must run following steps otherwise element src attribute specified value empty string let selected source value element src attribute selected pixel density otherwise let selected source null selected pixel density undefined", "d": "8/2015"}, {"body": "sebastianm sepc src attribute property right", "d": "8/2015"}, {"body": "yes spec attribute", "d": "8/2015"}, {"body": "pkozlowskiopensource yes found nothing describes behavior property explicitly description fits code example empty string browser starts fetching src said honestly must say find chrome behavior surprising would expect interpret null undefined empty string also think current browser behavior useless someone file bug discuss", "d": "8/2015"}, {"body": "tried code pkozlowskiopensource following browsers chrome undefined request firefox undefined request microsoft edge undefined request opera classic undefined request good way would apply take consideration next browser updates looking solution inside framework case think pkozlowskiopensource pascalprecht sebastianm", "d": "8/2015"}, {"body": "mentioned subtlety issue making requests current workaround default initial value empty string probably good idea anyways would say interpolation gets default case empty string well code html", "d": "8/2015"}, {"body": "matter understand browser behavior actually null undefined resource get browser picky null undefined value translated null undefined another issue beginning angular correct wrong interpolation translated null undefined empty string since alpha translates null undefined respectively maybe something revisited sooner better breaking effect cheers", "d": "8/2015"}, {"body": "jpsfs got impression mixing separate problems nt think behavior interpolation property binding let explain assuming evaluates null evaluate empty string bind empty string", "d": "8/2015"}, {"body": "pkozlowskiopensource yeah sorry meant two problems value type requirement spec suggests value type someone wanted endpoint would simply provide string value rather relying img tag type corhorsion wanted would provide string version think logic apply nt know change go domcompiler domrenderer simple directive change detection cd understand think problem perhaps actual problem ensuring correct types dom properties problem dom specific maybe dom version changedetection order keep separation always go back angular since would solve everyone problem", "d": "8/2015"}, {"body": "cc kegluneq honestly nt know nt think necessarily sdk issue could also issue introduced analyzer package flaky behavior example race condition order files processed stacktrace seems come resolver part analyzer package analysistasksafelyperform package analysistaskperform package iirc correctly transformer nt use issue transformers", "d": "8/2015"}, {"body": "sigmundch right benchmarksexternal contains apps", "d": "8/2015"}, {"body": "yjbanov looked bit yjbanov suspects issue pub dependency likely codetransformers analyzer", "d": "8/2015"}, {"body": "recall recent change codetransformers bad lower bound analyzer believe new version already released jakemac confirm", "d": "8/2015"}, {"body": "think version constraints somehow busted latest release sigmundch know version constraints", "d": "8/2015"}, {"body": "codetransformers bad version lower bound analyzer new version fix thu aug pm yegor notifications githubcom wrote think version constraints codetransformers analyzer somehow busted latest release codetransformers sigmundch know version constraints reply email directly view github", "d": "8/2015"}, {"body": "mean change necessary", "d": "8/2015"}, {"body": "yes case thu aug pm yegor notifications githubcom wrote mean change necessary reply email directly view github", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "another exception use case alpha", "d": "8/2015"}, {"body": "great like contribute take look fixing next hours", "d": "8/2015"}, {"body": "still trying get things build machine knew getting windows would pain much cheaper still easier use linux anyway nt really found problem found couple ways think could fix one added check bound null param would go away might elegant approach", "d": "8/2015"}, {"body": "think found bit hours said hay least understand routing angular works much better problem get compile tests wo nt run gah anyway problem believe line internalized think might also make sense add check constructor routeparams see params gets passed null either silently deal throw exception probably later tests would failed would found much earlier", "d": "8/2015"}, {"body": "guys want use current version probably check routeparamsparams null", "d": "8/2015"}, {"body": "cghislai apart regression seeing would case empty event handler mean nt take action given event adding would say case simply throw good error maybe got valid usecase", "d": "8/2015"}, {"body": "hack filereader read file stored datauri field img component src attributed bound datauri field issue img reloaded file read triggering event triggered change detection image updated moved job promise update datauri field clause image updates automatically", "d": "8/2015"}, {"body": "ok understand simply way hacky way kickingoff change detection right let solve issue introducing better checks error messages missing event handlers sound", "d": "8/2015"}, {"body": "sounds good main point issue", "d": "8/2015"}, {"body": "sames execute convertastintoprotorecordscreate rec still empty array append first ast visit execute nothing", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "yep weird taking look afternoon", "d": "8/2015"}, {"body": "cghislai post least snippet looks like include constructor signature class correct ca nt reproduce locally", "d": "8/2015"}, {"body": "case helpful seem get error components component constructor function one parameter", "d": "8/2015"}, {"body": "btford available", "d": "8/2015"}, {"body": "components myview also fails match type injects services constructor without annotations bound call happens alpha", "d": "8/2015"}, {"body": "fix landed next release thanks everyone", "d": "8/2015"}, {"body": "cc btford", "d": "8/2015"}, {"body": "right accepts entire url meaning rename introduce new method uses syntax directive nt gotten around yet need investigation thanks bug report", "d": "8/2015"}, {"body": "thank effort guys put development best framework ever keep", "d": "8/2015"}, {"body": "btford hi thought came ca nt find source code saying routing child router route found behaviour routing process try resolve request parent router grandparent router trigger redirect imagine component routers guess first redirect hit router resolve request best regards tiago braga", "d": "8/2015"}, {"body": "good question actually curious response wondering works similar fashion di subject control mechanisms like regular di ie tell router far go tree look route", "d": "8/2015"}, {"body": "think using routing dsl value property less ambiguous handles cases like number much elegantly", "d": "8/2015"}, {"body": "think fixed might deployed yet cc vicb naomiblack", "d": "8/2015"}, {"body": "marcogagliardi thanks report docs error reported pending pr issues mentioned", "d": "8/2015"}, {"body": "class exist could provide concrete description type", "d": "8/2015"}, {"body": "sorry locationurl exist inside router matsko finishes refactor working", "d": "8/2015"}, {"body": "matsko please nt name things follow naming conventions", "d": "8/2015"}, {"body": "mhevery actually doc describing naming conventions", "d": "8/2015"}, {"body": "vicb cc naomiblack", "d": "8/2015"}, {"body": "matsko state", "d": "8/2015"}, {"body": "also ran issue modified also complained finding eventemitter type add well", "d": "8/2015"}, {"body": "add replace", "d": "8/2015"}, {"body": "thanks guys created issue since nt think job fix solution working end breaking file functionality reported issue follow cghislai solution since changed variables type nt remove", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "anyone looking workaround remove http typings packagejson install tsd way file wo nt added tsddts make sure include version http type definitions mine tsd issue tsd link", "d": "8/2015"}, {"body": "make list used", "d": "8/2015"}, {"body": "known issue due traceur traceur gone able fix", "d": "8/2015"}, {"body": "sure related issue issues get right code debugging test added statement code chrome breaks due issue different problem", "d": "8/2015"}, {"body": "related sadly nt good source map setup unit test infrastructure afraid", "d": "8/2015"}, {"body": "tests use transformers basically unit tests nt bootstrap either would like covered well move reflection remover", "d": "8/2015"}, {"body": "install de javascript files typings import lt see http separated file see issue", "d": "8/2015"}, {"body": "interesting http typings file seem added definitelytyped look npm bower bundles instead", "d": "8/2015"}, {"body": "http typings file npm causes following errors error expected error expected", "d": "8/2015"}, {"body": "yes saw suggested gitter chat comment lines want create issue addressing issue", "d": "8/2015"}, {"body": "error tried referencing typings folder", "d": "8/2015"}, {"body": "think fixed", "d": "8/2015"}, {"body": "anyone looking workaround remove http typings packagejson install tsd way file wo nt added tsddts make sure include version http type definitions mine tsd issue tsd link", "d": "8/2015"}, {"body": "repo please reopen thanks", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "cc kegluneq blocking getting proper traces wtf gtaws", "d": "8/2015"}, {"body": "take look right away", "d": "8/2015"}, {"body": "cc tbosch vsavkin change detector ids coming changedetectordefinition comes protoviewfactory idea might coming back empty", "d": "8/2015"}, {"body": "mhevery someone else post repro steps nt able get happen far", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "kegluneq build failing unrelated error could look error liner change rerun many times failure consistent", "d": "8/2015"}, {"body": "cc rkirov vicb mhevery coming package di injectorgenerator transformer tries resolve error cropping analyzer getter guessing trying call sorry nt flying md tomorrow ooo tuesday hopefully someone di knowledge track issue", "d": "8/2015"}, {"body": "failure related reverted master edit actually related router pr see instead", "d": "8/2015"}, {"body": "fixed doc issues reported repo thanks", "d": "8/2015"}, {"body": "nice sorry next time ii consider", "d": "8/2015"}, {"body": "sorry next time ii consider worries easy get lost multiple repos", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "right html case sensitive casepreserving want access mixedcase properties template need use dashcase camelcase convention got specialcased compiler case could bind property using error checking got js side trying bind nonexisting property throw afaik planned dart require handwritten schema indicate properties supported elements handwritten avoid reflective calls tracked going close one way bind camelcased properties better error messages going handled separate issue", "d": "8/2015"}, {"body": "discussed rkirov said would beneficial additional sfx bundle would include since sfx bundle would reregister transitive dependencies like could unwanted side effects", "d": "8/2015"}, {"body": "update changed bundles consistent file directory names throughout angular", "d": "8/2015"}, {"body": "cc zzo", "d": "8/2015"}, {"body": "update added bundles added todo change ambient context namespace instead prefix explicitly represent bundle hierarchy", "d": "8/2015"}, {"body": "conversation mhevery debug bundle included core export included root injector need make sure merely including bindings nt produce side effects also open separate issue designclarify runtime behavior debug utilities one already exist", "d": "8/2015"}, {"body": "apparently including override binding would cause compiler call methods debug app listener creating destroying views propose first step including lib inside added injector debugging without add separate bundleimport open separate issue discuss good user experience triggering mode dynamically browser console mhevery sound good", "d": "8/2015"}, {"body": "jeffbcross sgtm", "d": "8/2015"}, {"body": "would nice consistent filename separators eg vs vs", "d": "8/2015"}, {"body": "rename think also make could technically outside core", "d": "8/2015"}, {"body": "k made progress transition branch issue correctly setting dom time applicationspec revisit next week also started removing take care moving everything around", "d": "8/2015"}, {"body": "resolved blockers testunitcjs testunitjs fixing dart issues", "d": "8/2015"}, {"body": "fwiw proposed inperson igorminar tbosch rkirov worry flatteningmerging directories right would add significant complexity build process moving folders dart output look like sources live src tests live test well rewriting import paths think consensus yes nt bother right think could make change later without breaking change since import statements include internal part public api", "d": "8/2015"}, {"body": "update updating still issues working latest failing job problems decorators left constructors nt unused dart imports declarations interpreted test faliling decoratorscompiler unit tests failing mismatched number expectations", "d": "8/2015"}, {"body": "issues resolved matter decorator imported instead annotation problem existing problem nt tested problem temporarily fixed issue opened longterm fix", "d": "8/2015"}, {"body": "merged initial work moving folders around working rest todos issue", "d": "8/2015"}, {"body": "jeffbcross definitively hurt wonder necessary recall wee got already npm dependency zonejs wonder nt enough", "d": "8/2015"}, {"body": "btford please add labels something missing", "d": "8/2015"}, {"body": "use remember import style directive", "d": "8/2015"}, {"body": "zyzle nt shortcircuit change detection would make code complex probably prevent optimizations conditions must evaluated twice want assert cd stable ie side effect free vsavkin could confirm", "d": "8/2015"}, {"body": "vicb thanks reply ok makes sense could nt find reference documentation looked little odd others raised conversation gitter yesterday shortcircuit big deal ca nt actually think reason rely behaviour issue went expectations", "d": "8/2015"}, {"body": "short circuiting makes sense actually nt run second time due stability assertion feature currently broken mystery extra cd cycle vicb want investigate run wtf second cd seems outside zone something weird going", "d": "8/2015"}, {"body": "vicb looks like promise getting resolved run cd end means cd first time end resolved promise", "d": "8/2015"}, {"body": "investigate", "d": "8/2015"}, {"body": "look afternoon", "d": "8/2015"}, {"body": "btford happen inlined everywhere used like example becomes", "d": "8/2015"}, {"body": "makes something alias inlining needs done router expect nontrivial investigatory work see probably going happen week though", "d": "8/2015"}, {"body": "interface alias two different semantics typescript", "d": "8/2015"}, {"body": "mhevery temporary right semantics declaring assignability interface tightened catch typos property names", "d": "8/2015"}, {"body": "correct inline time easier use file tools suggestions useful", "d": "8/2015"}, {"body": "time work near future unassigning", "d": "8/2015"}, {"body": "also current docs infrastructure certainly take days implement", "d": "8/2015"}, {"body": "think rely us using traceur polyfills use polyfills probably need update time mprobst correct", "d": "8/2015"}, {"body": "relies symbols defined file called easy change could also support two different locations make upgrade easier", "d": "8/2015"}, {"body": "going move next milestone since focusing rearranging modules stuff part", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "seems sauceconfjs nt slchromecanary", "d": "8/2015"}, {"body": "mlaval marc think might somehow linked latest sauce changes", "d": "8/2015"}, {"body": "pkozlowskiopensource sent fix", "d": "8/2015"}, {"body": "fix landed", "d": "8/2015"}, {"body": "roadmap", "d": "8/2015"}, {"body": "heart", "d": "8/2015"}, {"body": "global function activate pass following binding bootstrap", "d": "8/2015"}, {"body": "say step fails", "d": "8/2015"}, {"body": "kmillikin sounds odd nodejs npm version using", "d": "8/2015"}, {"body": "nodejs version npm version packages ubuntu lts tried node npm version seems work sure older version npm include license file two packages case worth investigating directions probably updated mention minimum version nodejs npm required", "d": "8/2015"}, {"body": "version updated", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "fyi name things", "d": "8/2015"}, {"body": "mhevery named", "d": "8/2015"}, {"body": "refactoring code general since concrete classes need interface hard time coming abstract name interface sign interface", "d": "8/2015"}, {"body": "would possible since could change per view basis unlike kind broken feature could work properly", "d": "8/2015"}, {"body": "thanks even considering gents think scenarios would beneficial", "d": "8/2015"}, {"body": "think mean since dom attributes case insensitive think auto assigning expression much magic nt think would useful events looking use syntax prefer explicit implicit magic pass", "d": "8/2015"}, {"body": "record alternative explicit syntax oneway eventdriven bindings could following would translate directly would nicely complement existing one twoway bindings probably relevant anyway unless many users ask come compelling use case", "d": "8/2015"}, {"body": "imo would nice provide minimal context reproduce scenario people nt access internal tracker", "d": "8/2015"}, {"body": "idea mirrors properties set componentsdirectives attributes corresponding dom elements eg show name attribute assuming value", "d": "8/2015"}, {"body": "jeffbcross internal folks look", "d": "8/2015"}, {"body": "place change change detector normally setting properties would never reach renderer ie need change implementation change detectors call renderer ie right times would discussed gt enough include logic dynamic change detection also part generated change detectors probably behind flag pubspecyaml cc vsavkin", "d": "8/2015"}, {"body": "naomiblack yes look", "d": "8/2015"}, {"body": "hmm nt seem like right person looking figure would best", "d": "8/2015"}, {"body": "vsavkin going take sounds like deep change required change detector render apis", "d": "8/2015"}, {"body": "moving since sounds like take days minimum work", "d": "8/2015"}, {"body": "closed via", "d": "8/2015"}, {"body": "ericmdantas think already plenty tests take look sure benefit yet another place tests shown addition actual tests always uptodate", "d": "8/2015"}, {"body": "pascalprecht good point seen wondering could get something smaller scope using tools released bundled versions", "d": "8/2015"}, {"body": "think need use tooling inside angular repo way used angular tests", "d": "8/2015"}, {"body": "examples tests nt think planning unit tests separate goal unit test examples docs cover use case closing issue", "d": "8/2015"}, {"body": "sounds good thanks", "d": "8/2015"}, {"body": "support", "d": "8/2015"}, {"body": "vahidalvandi want get foreach use", "d": "8/2015"}, {"body": "public angularforeach well facades helper methods different story afaik planning add one helper function like created substantial maintenance overhead without much added value", "d": "8/2015"}, {"body": "vahidalvandi please use repo angular questions smile", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "hi check regards evan", "d": "8/2015"}, {"body": "evanliu thank best regards tiago braga", "d": "8/2015"}, {"body": "see issue case change assuming using last alpha version see", "d": "8/2015"}, {"body": "thanks ericmartinezr reason reluctant create issue pretty sure whatever issue seem documentation need updated point match current name parameter make pull request based said good chance things also changed system would mean would need changed make example functional suspect probably wo nt bother things stabilize bit thanks much help hold closing issue definitely also issue documentation thanks much definitely solved issue another issue nt even going bring", "d": "8/2015"}, {"body": "solved", "d": "8/2015"}, {"body": "think good idea see useful another kind issues consider following html structure html according documentation specify live collection direct child directives parent directive would awful option extend componentsdirectives could javascript directive class basedirective directive selector class extends basedirective directive selector class extends basedirective directive selector childnthdirective class childnthdirective extends basedirective finally could query every kind children like would make much easier cleaner think", "d": "8/2015"}, {"body": "binarykitchen repo angular guess wanted report said understanding browsers wo nt fire mouse events disabled elements slight differences browsers seems nothing angular framework matter looks like people using workaround consist wrapping button invisible element ex", "d": "8/2015"}, {"body": "uh ok probably want rename repo angular avoid wrong tickets placed nt obvious right realised browsers wo nt fire mouse events disabled elements solved wrapping another parent div element thanks links", "d": "8/2015"}, {"body": "use docs default angular listens element event ignores events bubble listen bubbled events case clicking child use bubble option event onbubbleevent shown also read article", "d": "8/2015"}, {"body": "already pr typos ngfor nif", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "consistency also rather vote throwing error instead allowing syntaxes", "d": "8/2015"}, {"body": "throw attribute valid think case gets interpreted event called check say event names must alphanumeric", "d": "8/2015"}, {"body": "cc pkozlowskiopensource", "d": "8/2015"}, {"body": "ok makes sense start introducing event checks part schema support could basic event name checks start take care one help anyone community interested", "d": "8/2015"}, {"body": "hmm digging bit seems like html spec putting little restrictions possible event names understand correctly nothing would prevent one creating custom event named sense valid another way looking custom directive events one declare events valid js field names maybe restrictive stick lowestcommondenominator", "d": "8/2015"}, {"body": "creating custom restrictions specific angular think nt problem since prolly one would come defining event names start anyways", "d": "8/2015"}, {"body": "pkozlowskiopensource would love get first issue need help", "d": "8/2015"}, {"body": "yanivefraim maybe collaborate cironunes looks like started working already pkozlowskiopensource also already start sth", "d": "8/2015"}, {"body": "thanks pascalprecht cironunes pkozlowskiopensource help one looking get start contributing project help getting highly appriciated", "d": "8/2015"}, {"body": "hey manekinekko transpiling angular using gulp tasks running typescript compiler", "d": "8/2015"}, {"body": "hi using angularclass repo uses webpack tasks defined packagejson", "d": "8/2015"}, {"body": "looks like issue npm release investigate monday easiest way work around build angular source since nt appear problem build angular directly clone githubcomangularangular cd angular amp amp npm install gulp buildjsdev replace current angular source source code generated", "d": "8/2015"}, {"body": "sorry actually nt bug renamed bootstrapwebworker nt landed npm yet fixed release webworker support still active development going making breaking changes recommend build source part app build pipeline plan use webworkers things changing frequently", "d": "8/2015"}, {"body": "sure understand actually part universal project contributing", "d": "8/2015"}, {"body": "nt component views supposed implementation detail component outer boundaries nt see components inside component view current behavior seems right sat aug tyler potter notifications githubcom wrote query searches light dom tree matching nodes viewquery searches component view matching nodes consider case many nodes page given type order build tree model components unbounded parent injection used build tree bottomup however building tree possible child injection deeply viewnested components reachable viewquery consider adding new type query descend entire view tree optimize query stop descending first instance since first instance inject children tree reply email directly view github", "d": "8/2015"}, {"body": "ancestral injection unbounded though would compliment", "d": "8/2015"}, {"body": "agree pascalprecht implementation detail supported nt think correct behavior side note would expensive runtime speed support query closing wil implement", "d": "8/2015"}, {"body": "show full example including views may twice view also example right since effect going close plesae provide working repro case open new issue still working", "d": "8/2015"}, {"body": "hi able reproduce also nothing bindinds view bindings though happens show component twice page second time component oninit called elements query doubles component nested components querying children parent phone right try put example soon note tested alpha made change query dehydrated components dnk solves", "d": "8/2015"}, {"body": "kidding bit already featuring getting started dev guide js enough need api everywhere perhaps sufficient api examples", "d": "8/2015"}, {"body": "wardbell suggesting version examples would based global object without using sort module imports would multiple versions examples showing using withwithout module systems", "d": "8/2015"}, {"body": "great question simplest one file example nt need module system could use advice modularity story devs things get advanced afaik regardless devs access angular functionality root thinking teach systemjs intriguing", "d": "8/2015"}, {"body": "think point chapter explains use module loader ppl struggle wed aug ward bell notifications githubcom wrote great question simplest one file example nt need module system could use advice modularity story devs things get advanced angularmodule afaik regardless devs access angular functionality ng root thinking teach systemjs intriguing reply email directly view github", "d": "8/2015"}, {"body": "think point chapter explains use module loader wooohooo would separate book atm seriously hopefully work progress going solid polyffils solution could recommend", "d": "8/2015"}, {"body": "think examples written style way work well", "d": "8/2015"}, {"body": "mhevery liked suggestion tried apply example current getting started sample reads import component view bootstrap component selector view template class appcomponent bootstrap appcomponent much less noisy import ng ngcomponent selector ngview template class appcomponent ngbootstrap appcomponent really recommending latter style ts development confusing also still nt know modularity story folks register components services etc create one global application namespace eg use systemjs api possibility rather unusual devs use requirejs quite apart matter teach di roughly language communities would suggest developer simultaneously define class register angular ioc container global got bad feeling one", "d": "8/2015"}, {"body": "folks register components services etc think even services directives components registered place needed like need service instance needs define bindings type service unless defined somewhere parent componentinjector course nt solve problem polluting global scope one would prolly simply go iife immediatelyinvoked function expression nowadays anyways nt think everything needs defined", "d": "8/2015"}, {"body": "one define di modules party components like would arrays components register directly need pascal mentioned nt solve issue global namespace pollution codeloading usually handled amdcjs modules preference avoid picking winners since people usually use whatever already comfortable document one example using di amdcjs leave regards using namespace code feel weird well nice benefits one import set autocompletion ng namespace works nicely downside code bloated", "d": "8/2015"}, {"body": "wardbell yes suggesting open countersuggestions nice thing code samples look identical whether use ambient import statements think explicit imports better complication different code example ambient vs import something handle fine well", "d": "8/2015"}, {"body": "different code examples assume mean different experience far believe different examples inevitable reasons idioms different language communities attempts single sourcing counter productive example although would work time trying teach use wherever possible want discourage morr compelling examples would include different treatment ability hide private variables lost classes hence annoying profusion underscored vars ts code goal presenting dev guide examples two ok three languages cater comfort communities writing examples esperanto annoy everyone accordingly imstriving stylistic consistency within language communities much across", "d": "8/2015"}, {"body": "example although var would work time trying teach use let wherever possible want discourage var recently sent pr tests replace anonymous functions fat arrow functions removed non tests needed lexical scope would therefore introduce perf overhead nt know true transpiled code also native think would true vs mhevery know using fat arrow functions needed introduces perf penalty native maybe nt use place docs since would nt good practice per se", "d": "8/2015"}, {"body": "pascalprecht causes pref referenced", "d": "8/2015"}, {"body": "transpiled native", "d": "8/2015"}, {"body": "maybe error could also give hint", "d": "8/2015"}, {"body": "woah nt even know util nice docs page", "d": "8/2015"}, {"body": "compiler check thrown error important error message name component surrounding directives otherwise useful error suggested error", "d": "8/2015"}, {"body": "bumping nulls undefined directives list", "d": "8/2015"}, {"body": "compiler check viewdirectives thrown error null undefined important error message name component surrounding directives otherwise directive null useful error current error ends directives list wonder silently failing jeff going retest forward references", "d": "8/2015"}, {"body": "today getting errors case parser error unexpected token expected identifier keyword string column b somecomponent giving specific feedback decide go path need take binding forms account goes events well guess", "d": "8/2015"}, {"body": "also voting specific error messages expensive implement think one thing lot ppl struggled angularjs error messages nt super clear first glance even tho think minerror great improve definitely sat aug pawel kozlowski notifications githubcom wrote today getting errors case parser error unexpected token expected identifier keyword string column b somecomponent giving specific feedback decide go path need take binding forms binda databinda account goes events click foo well guess reply email directly view github", "d": "8/2015"}, {"body": "think implemented parser error read easily done parser see parsing text expression starts", "d": "8/2015"}, {"body": "easily done parser see parsing text expression starts probably also check interpolations inside expression string catch cases like", "d": "8/2015"}, {"body": "right solve problem used type annotation sufficient resolve dependency angular di mental model every injector like lazy hash map token object implementing make model less clear would also complicate implementation instance would require us create new composite token including foo bar would create token parse dependencies create bindings means would probably able use operator compare two tokens quite bit complexity would add think consider suffice", "d": "8/2015"}, {"body": "vsavkin actionable thing drop replace", "d": "8/2015"}, {"body": "think changes required flexible covers withannotation use case closing", "d": "8/2015"}, {"body": "ian working upgrading system unit tests involved working around problems seeing let continue discussion", "d": "8/2015"}, {"body": "error noticed piece code domrendererts var binderidx binderidx lt binderslength binderidx var binder binders binderidx var element boundelements binderidx see binderslength used stop condition loop index tested condition used binders array also boundelements array case plunker see amount array elements binder boundelements array long element boundelements array requested gives undefined causes problem later function addlistener called undefined fairly new angular nt know fix yet another index used extra condition applied stop logic sooner maybe nt possible different amount items two arrays sounds likely amount binders equal amount bound elements try look learn insides angular update cloning protoview goes wrong new version old version clone still elemenets new one code also domrendererts right loop createview protoview domprotoview inplaceelement htmlelement renderviewwithfragments var clonedprotoview cloneandqueryprotoview thistemplatecloner protoview true var boundelements clonedprotoviewboundelements update seems clone protoview incorrect inside utilsts code cloneandqueryprotoview located function edited lately well however functionality stay var templatecontent templateclonerclonecontent pvcloneabletemplate importintodocument used var templatecontent importintodocument domimportintodoc domcontent pvrootelement domclone domcontent pvrootelement latter code less reflected templatecloner additional logic see templateclonerts compared pvcloneabletemplate resulting templatecontent seems difference indeed cloneabletemplate check console code address cc name address cc templatecontent result calling clone query function console note also worth mention structure templatecontent different working version cloneabletemplate cloneabletemplate first form myform encapsulates rest content templatecontent clone first form encapsulates part content first nested form stopped update piece code browseradapterjs causes difference html structure clone entering cloneabletemplate input causes nested form become faulty sure angular problem createtemplate html htmlelement var documentcreateelement template tinnerhtml html return update solved ok legit nested forms html browser might strange things would passed innerhtml previous version angular innerhtml used causes problem would angular generate invalid html turns nt parent form tag nests others coming input developer check console code name deleted form tag input everything works older version older version also works without form tag nt think form tag angular generates ones needed looking example setup indeed wrong according html see want since nested forms allowed possible thanks letting investigate angular bit", "d": "8/2015"}, {"body": "thank much goossensmichael really appreciate time effort put thorough explanation goes throughout angular dom generation process case thoughtful take time help fellow programmer less well versed world web development", "d": "8/2015"}, {"body": "problem started learning javascript angular month ago nt think different level experience", "d": "8/2015"}, {"body": "still issue angular closed", "d": "8/2015"}, {"body": "mhevery told html spec support nested forms see reason angular would offer support light circumstance believe nt anything else guys regarding subject matter", "d": "8/2015"}, {"body": "well actually would better angular bit defensive code least exception thrown amount bindings boundelements causes confusion developers quite hard find cause case innerhtml fixed faulty html causing angular go wrong assumptions eventually nullpointer", "d": "8/2015"}, {"body": "totally agree goossensmichael indeed something likely lead developers confusing path exception thrown excellent point", "d": "8/2015"}, {"body": "documentation exception handling done angular maybe add first contribution", "d": "8/2015"}, {"body": "goossensmichael central receives exceptions either throwing right error catching", "d": "8/2015"}, {"body": "believe duplicate", "d": "8/2015"}, {"body": "pkozlowskiopensource would indeed solve issue queries limit think something else see viewquery keeps records child components even destroyed", "d": "8/2015"}, {"body": "ok going reopen rkirov confirm duplicate", "d": "8/2015"}, {"body": "really duplicated since one active query gt however bug fixed add unit test cycles ngfor times close issue", "d": "8/2015"}, {"body": "router depend core exposes class member type must also reexport typescript unhappy mprobst alexeagle ideas", "d": "8/2015"}, {"body": "think wai typescript nt reexport downstream clients understand type signatures could reexport relax field type field private chance valid feature request ts support use case required reexport private fields", "d": "8/2015"}, {"body": "field needs public think something documentation system going change handle thu aug martin probst notifications githubcom wrote think wai typescript nt reexport downstream clients understand type signatures could reexport relax field type field private chance valid feature request ts support use case required reexport private fields reply email directly view github", "d": "8/2015"}, {"body": "result error users import typings jeffbcross checked work documented twice severe issue", "d": "8/2015"}, {"body": "innocuous user think something like could extend dgeni filter certain duplicates suspect encounter problem animations etc might reasonable solve general issue duplicate exports could hard code work around think really happen shared utils like fa\u00e7ades could check given class originates export definitions could possibly relax type makes kind sad also makes documentation worse class", "d": "8/2015"}, {"body": "naomiblack going unassign since actionable end", "d": "8/2015"}, {"body": "assigning misko think best fix", "d": "8/2015"}, {"body": "research needs done nt export include file done updating include dgeni reffer rather know step see idea step reasigning btford hoping knows reasign petebacondarwin", "d": "8/2015"}, {"body": "idea get dgeni cases need refer class prefix", "d": "8/2015"}, {"body": "mhevery think avoid syntax ok router depend angular odd syntax nt fit use modules ca nt make dgeni smarter handle situation reexporting aliased type different package seems like something doc generator handle probably matter resolving aliased symbols typescript explicit api", "d": "8/2015"}, {"body": "mprobst exported router depends uses propose solve situation issue typescript best practices issue canonical way use types", "d": "8/2015"}, {"body": "vs make difference except modifier files look like adts bdts note module uris match forces downstream users get think sanest solution time assume module uris opaque globally unique identifiers resolved mechanism systemjs node whatever", "d": "8/2015"}, {"body": "misko tried compiler still complains mixes ambient declarations module think import keyword causing bdts module even though emit statement seems similar couple bugs filed mohammed relaxed constraints ambient context expression wo nt emit anything example misko still experimenting mon aug martin probst notifications githubcom wrote dts vs ts make difference except declare modifier dts files look like adts declare module whatevera export class wobble bdts declare module whateverb import wobble whatevera export var w wobble reply email directly view github", "d": "8/2015"}, {"body": "fix", "d": "8/2015"}, {"body": "resolved", "d": "8/2015"}, {"body": "could provide code setup use plunker want took liberty making example plunker somewhat using build angular", "d": "8/2015"}, {"body": "yes basically thanks providing demo", "d": "8/2015"}, {"body": "resolved", "d": "8/2015"}, {"body": "use final variable node content probably allowed take argument since ie", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "cc tedsander", "d": "8/2015"}, {"body": "sgtm help lot", "d": "8/2015"}, {"body": "got back aug pm victor berchet notifications githubcom wrote finished broccolijsdev starting testunitjskarmarun error launcher start chromecanary find binary homevictorbindartchromiumchrome please set env variable chromecanarybin finished testunitjskarmarun watch triggered file change pm given logs see task stop browser could launched reply email directly view github", "d": "8/2015"}, {"body": "referring actually makes use please also note angulario relates issues reported thanks", "d": "8/2015"}, {"body": "think referring typo ngif instead yeah related angulario reported", "d": "8/2015"}, {"body": "exactly rewrite issue angulario thanks answer", "d": "8/2015"}, {"body": "cc yjbanov mhevery", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "maybe keep precompiled template", "d": "8/2015"}, {"body": "wrong repo try", "d": "8/2015"}, {"body": "use webstorm command line setting ts module commonjs target experimentaldecorators", "d": "8/2015"}, {"body": "noticed attempting use codeangularjsorg nt seem happen use local version script compiled alpha tag though", "d": "8/2015"}, {"body": "zyzle wildtang could one guys put together plunk showing start", "d": "8/2015"}, {"body": "hat looks suspicious", "d": "8/2015"}, {"body": "pkozlowskiopensource editing posted seems issue older version systemjs traceur plunkr works fine one shows error difference see bad good edit actually sorry thats difference good version also uses updated routerjs created issue yesterday ignore tried swapping back issue", "d": "8/2015"}, {"body": "zyzle pkozlowskiopensource thanks upload codes url", "d": "8/2015"}, {"body": "hm ok wildtang got plunk working changing src src see sure difference makes systemjs fail investigation needed", "d": "8/2015"}, {"body": "hmm switching newer version systemjs also fixes dev prod versions", "d": "8/2015"}, {"body": "sure going older systemjs prod version planning update latest systemjs anyway", "d": "8/2015"}, {"body": "pkozlowskiopensource thanks use code finally worked chrome computer systemconfig defaultjsextensions true systemimport appone ie reported exception expecting function got object functionwrapper exception thrown", "d": "8/2015"}, {"body": "wildtang glad made work problem looks like duplicate", "d": "8/2015"}, {"body": "yes matthewjh said post ie occurs developer tools opened", "d": "8/2015"}, {"body": "closing issue seems rosolved", "d": "8/2015"}, {"body": "nt able reproduce master clean npm install numerous attempts performed clean npm install also sometimes fsevents breaks osx sometimes nt work correctly without reboot usually manifests differently eg watch firing", "d": "8/2015"}, {"body": "caitp wiped let remove manually try", "d": "8/2015"}, {"body": "bah ca nt reproduce anymore either finished buildtreedart sure happened saw stack trace going close reopen see sorry noise thnx caitp retesting", "d": "8/2015"}, {"body": "stacktrace looks like typescript code nt expected nt think stack trace related watching maybe half written syntactically incorrect file add defensive code problem", "d": "8/2015"}, {"body": "mprobst possible ts error one point kept seeing err even reverting changes anyway could use superpowers make sure case ts syntax errors get actual ts error instead stack trace would awesome", "d": "8/2015"}, {"body": "pkozlowskiopensource think reporting ts errors odd maybe caching effect case code bit risky written make report proper error case ran", "d": "8/2015"}, {"body": "issue fixed reproducible head", "d": "8/2015"}, {"body": "internally tracked", "d": "8/2015"}, {"body": "naomiblack find someone look making endend testing hard", "d": "8/2015"}, {"body": "cc jeffbcross", "d": "8/2015"}, {"body": "jsonly currently supports dart", "d": "8/2015"}, {"body": "eventemitterobservable stuff build facade seems hard remove", "d": "8/2015"}, {"body": "caitp http export rx observables directly", "d": "8/2015"}, {"body": "sigmundch know polymer could look", "d": "8/2015"}, {"body": "justinfagnani take look forward right person", "d": "8/2015"}, {"body": "sure", "d": "8/2015"}, {"body": "mhevery sorry already know problem angular creates new clones existing template web component wakes removes light dom children angular find bound elements template however template changed elementbinders match queries elements fixed automatically create every element calling therefore already reference without", "d": "8/2015"}, {"body": "tbosch thanks justinfagnani sigmundch looks like noop thanks", "d": "8/2015"}, {"body": "cc alexeagle", "d": "8/2015"}, {"body": "working little complicated copymerging toplevel module files module src directories statements need changed reflect new root module", "d": "8/2015"}, {"body": "process updating demo alpha uses although see http bundles folder root npm angular scripts mentioned hold possible use http using jspm demo rather loading scripts standard script tag thanks", "d": "8/2015"}, {"body": "danwahlin use bundle work alongside bundle working getting everything order alpha release", "d": "8/2015"}, {"body": "thanks jeff got going modifications paths property jspm config seems load bundle sure works yet though since fighting issues upgraded", "d": "8/2015"}, {"body": "jeffbcross please provide current status", "d": "8/2015"}, {"body": "igorminar yep actually close issue since solved updated issue left long weekend nt think update one short story bulk moving work done resolve failing test sure little issues creep process", "d": "8/2015"}, {"body": "great thanks update jeffbcross going hold alpha since run things along way suspect simplified next release", "d": "8/2015"}, {"body": "danwahlin sounds like good plan things orderly release maybe could help dogfood prealpha resolved", "d": "8/2015"}, {"body": "sounds great suspect issues seeing completely due realizing something changed somewhere happy try things think issues resolved", "d": "8/2015"}, {"body": "zone works uses zone closing favor", "d": "8/2015"}, {"body": "many thanks", "d": "8/2015"}, {"body": "due fact got duplicated logic", "d": "8/2015"}, {"body": "full access method customize want using rxsubjectcreate use directy rx classes instead eventemitter", "d": "8/2015"}, {"body": "ericmartinezr thanks reply thing gives instance work diferent way latest manipulate input output result nt know possible manipulating input returning way even wo nt give something subscribe", "d": "8/2015"}, {"body": "eventemitter torx method return observable subject see definition eventemitter", "d": "8/2015"}, {"body": "hey ericmdantas yes right fact could nt use try see something super simple fail bad say eventemitter job want something complex use observables directly keep simple fact returns rxsubject see", "d": "8/2015"}, {"body": "yes return type rxobservable right subscribe method subject extends isubject turn extends observable saying rxsubject sub class rxobservable", "d": "8/2015"}, {"body": "oh yeah acknowledge hot cold observables deep think get idea rxsubject hot observable rxobservable cold one difference use whether rxsubject subclass taking ericmdantas example changed little bit nt create observable everytime javascript export class myservice constructor thisobs function something return rxobservablecreate gt somethingcreatedat datenow oonnext something ooncompleted component class mycomponent constructor svc myservice svcgetobs something subscribe info gt consolelog info subscriber svcgetobs subscribe info gt consolelog info subscriber svcgetobs subscribe info gt consolelog info subscriber svcgetobs subscribe info gt consolelog info subscriber etc rxsubject would something like javascript export class myservice component class mycomponent constructor svc myservice let sub svcgetsubj subsubscribe info gt svcdosomething info subscriber subonnext suboncompleted dispose understood example needs rxobservable cold one rxsubject would make much complicated wrong please correct anyone understands observables better", "d": "8/2015"}, {"body": "thanks reply case subject instance rxsubject inherits observables observers bottom line want separate logic app like service receiving values something giving something back subscribe something else whenever given value ready like know going eventemitter right way using rxobservables directly ericmartinezr pointed guess idea pretty much http class pass object whatever lets subscribe result whatever done", "d": "8/2015"}, {"body": "ericmartinezr thank putting together yes example need cold observable needed implement hot days ago idea give try eventemitter wraper smile", "d": "8/2015"}, {"body": "get things straight mean typescript import component view bootstrap eventemitter class myservice static dosomething something rxobservable var e new eventemitter component selector main view template class main constructor myservicedosomething subscribe info gt consolelog info bootstrap main myservice", "d": "8/2015"}, {"body": "guess trick ca nt test right try later today let know thank help", "d": "8/2015"}, {"body": "alright suggested worked try implement messagebus type service hot observable ericmartinezr suggested thank guys", "d": "8/2015"}, {"body": "hi spot wrong service supposed save list categories problem case ca nt trigger subscribe component main component component service may see inject service main component component visibility main component bindings due bindings property main component also router important still component visibility service class way instance need get menu xml nt want load second time actually twice issue component request service little code tests cached information actually triggers categories array ca nt somehow subscribe component returning cached array confirmed debugger try catch finally clause component ideas could happening thank best regards tiago braga", "d": "8/2015"}, {"body": "guess calling anyone hearing try following", "d": "8/2015"}, {"body": "ericmdantas thank understand makes sense nt need settimeout since nested subscribe someone hearing best regards tiago braga", "d": "8/2015"}, {"body": "glad worked smile", "d": "8/2015"}, {"body": "mhevery already working issue", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "let wait dartdocsorg green fix includes small cleanup exports may affect dgeni well", "d": "8/2015"}, {"body": "clarified issue yegor try get", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "time take care near future removing also reassigning certainly take couple hours existing infrastructure", "d": "8/2015"}, {"body": "thelgevold look work around", "d": "8/2015"}, {"body": "thanks zyzle", "d": "8/2015"}, {"body": "right duplicate", "d": "8/2015"}, {"body": "naomiblack present", "d": "8/2015"}, {"body": "mean members interface present", "d": "8/2015"}, {"body": "yes sorry mean members interface screenshot part doc", "d": "8/2015"}, {"body": "needs better description", "d": "8/2015"}, {"body": "internal api please nt use use locate vsavkin comment closing since changes needed code", "d": "8/2015"}, {"body": "mhevery alright try internal api subscribe changes method returns observable subscribe use class", "d": "8/2015"}, {"body": "rx follow api", "d": "8/2015"}, {"body": "vsavkin mhevery still nt figured listen model changes use template driven forms example top post think could point would really appreciate", "d": "8/2015"}, {"body": "nearly done land alpha", "d": "8/2015"}, {"body": "systemjs updated going send pr bumps system builder version", "d": "8/2015"}, {"body": "hello please ask angular repo instead one meant angular smile", "d": "8/2015"}, {"body": "thnx ericmdantas", "d": "8/2015"}, {"body": "oops sorry", "d": "8/2015"}, {"body": "also missing activate instruction method many others deeper inspection", "d": "8/2015"}, {"body": "please add concrete items missing think", "d": "8/2015"}, {"body": "routerdts alpha missing least following class routeroutlet constructor class router config definition allowed values tight nt accept different combinations values normally used still everything works changed definitions list", "d": "8/2015"}, {"body": "already fixed master closing", "d": "8/2015"}, {"body": "thanks plnkr repro", "d": "8/2015"}, {"body": "still need info setup using transpilation module loader etc exact error full stack trace best share running reproduce scenario plunker might want start one", "d": "8/2015"}, {"body": "seeing issue application upgrade alpha seen mention breaking changes regards router release something missing changelog maybe routeconfig looks like using traceur systemjs thusly html try add complete stack trace later", "d": "8/2015"}, {"body": "might due impossible say without detailed example stack trace", "d": "8/2015"}, {"body": "sorry away main terminal right try build get complete stack trace would also say built angularrouter js files typings tag rather using codeangularjsorgdefinitelytyped thats never issue past", "d": "8/2015"}, {"body": "zyzle nt new route routes alpha would error alpha", "d": "8/2015"}, {"body": "config zyzle trace typeerror error loading main function function function globalupgradesystemloadercexecute f f l object globalupgradesystemloadereinstantiatepromiseallthenexecute h l", "d": "8/2015"}, {"body": "see example inboxapp uses format however documentation routerlink uses layout example still work alpha believe edit add tried change config use style received error tsc attempting compile sorry cant give actual stack trace right", "d": "8/2015"}, {"body": "zyzle confirm example also works perhaps new route new redirect finished nt know work anyway ca nt get error get", "d": "8/2015"}, {"body": "issue also problem trying use uncaught typeerror function anonymous function anonymous function anonymous function doeval eval globalupgradesystemloaderloaderinstantiateloadmetadataexecute", "d": "8/2015"}, {"body": "also getting error alpha", "d": "8/2015"}, {"body": "markharding could one guys put together plunker reproduces issue ou start one contains workaround", "d": "8/2015"}, {"body": "pkozlowskiopensource sorry took long simplest case reproduce error ca nt seem make plunkr work correctly though complaining baseattr instantiation location strategy scratch got working changing hashlocationstrategy looks like fix might worked", "d": "8/2015"}, {"body": "zyzle ok based plunker fixed master right going close one fixed anyone till seeing pb please provide plunker start happily reopen", "d": "8/2015"}, {"body": "open issue thnx jeffbcross currently push bundles nt npm", "d": "8/2015"}, {"body": "awesome", "d": "8/2015"}, {"body": "alexeagle rkirov agree including bundles folder npm distribution", "d": "8/2015"}, {"body": "maybe accurate", "d": "8/2015"}, {"body": "think seems inconsistent output fine changing", "d": "8/2015"}, {"body": "vahidalvandi already stated wrong repository appropriate forum ask support questions want keep github issues bug reports future requests please direct support questions one support channels side note want always return array could simple oneliner", "d": "8/2015"}, {"body": "vahidalvandi wrong repo guess looking said sure considering bug would return string length sure problems consequence easy help case sounds like support question asked using appropriate support channel see", "d": "8/2015"}, {"body": "ok abc string whit lenght url two parameters return namely array whit object example mysitecom useridabc return abc example mysitecom useridabc amp useriddef return abc def need return abc mysitecom useridabc please help", "d": "8/2015"}, {"body": "skybrian general template syntax documented individual directives got docs syntax examples generally going sure improve docs particular points nt see clarified linked docs would great could send us specific suggestions better yet pull request", "d": "8/2015"}, {"body": "thanks helpful looking angulario something similar expressions statements formatters section first document linked nt think look documentation github nt show searching expression expressions angulario angular documentation page expressions however problem list design principles expression language rather actually explaining expression grammar specific thing trying write statement inside loop specifically goes place snippet tried line line neither one worked without documentation legal expression variables scope nt know else try implemented different way", "d": "8/2015"}, {"body": "naomiblack particular reason publishing perfect docs would useful imo especially rather hard read gh", "d": "8/2015"}, {"body": "naomiblack comment", "d": "8/2015"}, {"body": "pkozlowskiopensource comment user trying get speed personally took embarrassingly long time realize docs tree different appeared far date", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "reality combination new line url dart version nt suffer pb url gets encoded matching try js side bring implementations level", "d": "8/2015"}, {"body": "glad hear working webworker app webworker support still work progress happy help try keep github issues directly related issues code please repost forum help", "d": "8/2015"}, {"body": "yeah thinking example app running web worker great already started implementing existing sample app router seems working post question forum hope able help", "d": "8/2015"}, {"body": "think add change ancestor hosthost skipself", "d": "8/2015"}, {"body": "sorry unfortunently nt plans rewriting past history planning getting better breaking changes future closing since action", "d": "8/2015"}, {"body": "vsavkin think mocking practice interfered using right update", "d": "8/2015"}, {"body": "mprobst created two files spiests spiesdart define new spies turned much simpler trying make one class work well ts dart move spy classes remove", "d": "8/2015"}, {"body": "vsavkin awesome going removal", "d": "8/2015"}, {"body": "mprobst sure", "d": "8/2015"}, {"body": "happens js nt test dart guess got pb properties decorators", "d": "8/2015"}, {"body": "handled described think sufficient close issue", "d": "8/2015"}, {"body": "mhevery indeed looks like microsofttypescript fix imo close one bit worried tracking maybe updates next ts version see still pointing alexeagle fork alexeagle plan one updating ts versions moving npmreleased one", "d": "8/2015"}, {"body": "currently minimal delta released already done work upgrade contains fixes need unless need bleedingedge fix able update soon released got indication may soon long enough angularconnect might able use new features ca nt update would require users also upgrade nt want state goes beta mon aug pawel kozlowski notifications githubcom wrote mhevery indeed looks like microsofttypescript fix imo close one bit worried tracking maybe updates next ts version see still pointing alexeagle fork alexeagle plan one updating ts versions moving npmreleased one reply email directly view github", "d": "8/2015"}, {"body": "alexeagle thnx update going close one retest soon thnx", "d": "8/2015"}, {"body": "would cool version js build travis easy versions listed packagejson let know youd like pick mon aug pm pawel kozlowski notifications githubcom wrote closed reply email directly view github", "d": "8/2015"}, {"body": "filed two issues typescript related", "d": "8/2015"}, {"body": "thnx igorminar", "d": "8/2015"}, {"body": "omittable end tag nested like first ends second begins still happen use instead", "d": "8/2015"}, {"body": "right think thanks", "d": "8/2015"}, {"body": "jeffbcross comment triage", "d": "8/2015"}, {"body": "rolandjitsu function override bindings root test injector bindings setting associated injector new injector creating block able keep block instead creating injector use function exported uses testroot injector nt work please mention comment issue reopen", "d": "8/2015"}, {"body": "want fix bug try using viewbindings instead viewinjector component", "d": "8/2015"}, {"body": "middle major pipe refactoring many breaking changes coming keep old behavior", "d": "8/2015"}, {"body": "one interesting going systemjs builder autodetecting file global module system happens since empty contains ts interface definitions transpilation js effectively empty guess started problem ts systemjs version update since empty file like hitmanmcc workarround add global plugin systemjs config btford guess med high priority guess break people code quite often", "d": "8/2015"}, {"body": "pkozlowskiopensource thank much explanation workaround try soon report back", "d": "8/2015"}, {"body": "hello pkozlowskiopensource wondering could elaborate bit workaround trying told familiar systemjs works pretty sure something wrong would please post line need add configjs load global plugin thanks advance btw tried using alpha alpha routerdevjs combination works", "d": "8/2015"}, {"body": "familiar systemjs works pretty sure something wrong would please post line need add configjs load global plugin hitmanmcc problem using relatively old version systemjs builder config bit involved probably easiest explain something new module loading systemjs instead remove offending line replace see looking root cause issue speak", "d": "8/2015"}, {"body": "thanks quick reply pkozlowskiopensource alas work well two sample applications tried loading local version routerdevjs script modification instructed perform produced error stated provider router anything assist tracking issue feel free ask", "d": "8/2015"}, {"body": "hitmanmcc identified root cause see pr angular repo shortly pb build well identified nt need help tracing thnx regarding error getting sure help without access setup got impression error getting related loading problem discussing best share plunker version router build locally see router loads without pbs plunk try demonstrate issue plunk maybe someone able help", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "yes updating dts files today", "d": "8/2015"}, {"body": "done", "d": "8/2015"}, {"body": "btford comment triage appropriately", "d": "8/2015"}, {"body": "unofficial workaround dart config router like inject routeparams components check value exists class customercomponent routeparams routeparams bool isnew false customercomponent thisrouteparams", "d": "8/2015"}, {"body": "yep though eventual support would nice", "d": "8/2015"}, {"body": "going mark nice since essentially syntax sugar two different configs point component reasonable feature likely happen higher priority issues addressed", "d": "8/2015"}, {"body": "mhevery marking renames potentially breaking changes come consistent guidelines make changes think", "d": "8/2015"}, {"body": "interface start var const functions complicated normal instances vars functions start lower case letters type start upper case letter ok const uppercase far describing kind opposite examples actually correct", "d": "8/2015"}, {"body": "mhevery suggestion vars functions start lower case letter camelcase names consistent idiomatic javascript typescript", "d": "8/2015"}, {"body": "outsider surely would good guideline follow", "d": "8/2015"}, {"body": "thanks jessegood follow except one using private consistency dart also want const uppercasewithunderscores", "d": "8/2015"}, {"body": "cleanup pr", "d": "8/2015"}, {"body": "think resolved close", "d": "8/2015"}, {"body": "closing please reopen think still missing renames", "d": "8/2015"}, {"body": "tbosch fyi", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "could descriptive example looking shows types give see would like see", "d": "8/2015"}, {"body": "within class interface member functions include argument types instance properties show types nt lack inline documentation lack used types within typescript applied docs build process application seen thing examples live docs site demonstrate well picture", "d": "8/2015"}, {"body": "good point", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "wants generate api docs nobody using components real none classes actually public api", "d": "8/2015"}, {"body": "dartdocsorg generates api docs every package hosted pub automatically right fails generate material components mean saying components nt public api imported listed also loaded dynamically case instead template bindings users would call setters directly", "d": "8/2015"}, {"body": "said feel free deprioritize logged could reference something todo people wonder excusing material library api docs", "d": "8/2015"}, {"body": "bumping since components nt going meant actual consumption much later", "d": "8/2015"}, {"body": "forms separate module needs imported working intended", "d": "8/2015"}, {"body": "unfortunately change import using definitelytyped get find module use another dts set dts instance admit bit confused dts use", "d": "8/2015"}, {"body": "tracked", "d": "8/2015"}, {"body": "currently working would good community contribution", "d": "8/2015"}, {"body": "alexeagle would love help need help starting", "d": "8/2015"}, {"body": "misko already working sorry", "d": "8/2015"}, {"body": "fyi part work", "d": "8/2015"}, {"body": "really discussion super clear direction go eventually api needs frozen become close frozen possible invite people input perspective decision arrived quickly surely short change make", "d": "8/2015"}, {"body": "jeffbcross btford could get resolution since need get breaking changes soon", "d": "8/2015"}, {"body": "familiar http serializing data send endpoint think totally distinct issue routing interacts url", "d": "8/2015"}, {"body": "seems like preferred nomenclature urlparams make think search nt really thing", "d": "8/2015"}, {"body": "btford yeah http used serializing parameters originally created polyfill urlsearchparams constructor accompanied fetch spec caitp discussed addingchanging merging semantics decided probably change name considered polyfill like robwormald suggestion update issue queryparams resolution note nt think change names even though conflict fetch constructor names even though somewhat resemble constructors defined fetch names generic enough unlike", "d": "8/2015"}, {"body": "regarding handle merging behavior going give thought would like specialized merging functions part prototype better embrace immutability open issue two monday implement params merging well necessary changes merging", "d": "8/2015"}, {"body": "done continue improving many things wanted separate repo", "d": "8/2015"}, {"body": "way track rail performance goals users perceive speed web paul irish google keynote", "d": "8/2015"}, {"body": "would great outside scope feature feel free file issue", "d": "8/2015"}, {"body": "thanks made one angularbenchpress repo", "d": "8/2015"}, {"body": "talked misko bit issue biggest win change making community contributions easier performance improvements likely substantial mprobst alexeagle feel giving issue community mechanical task vs needing understanding works want make sure nt backfire respond lot obscure issues", "d": "8/2015"}, {"body": "problem need understanding typescript need change upgrade angular repo change code might blow complexitycoordination budget external contributions rado kirov notifications githubcom schrieb di aug um uhr talked misko bit issue biggest win change making community contributions easier performance improvements likely substantial mprobst alexeagle feel giving issue community mechanical task vs needing understanding works want make sure nt backfire respond lot obscure issues reply email directly view github", "d": "8/2015"}, {"body": "jelbourn version tested tried ca nt reproduce error getting correct one typeerror read property left undefined stylleft hostproperties hello could try amend plunk reproduce", "d": "8/2015"}, {"body": "pkozlowskiopensource master reproduce modifying typo bindings run hit", "d": "8/2015"}, {"body": "verified still happens master", "d": "8/2015"}, {"body": "nt agree developer know style encapsulation would put tag probably stylesheet put instead adding inline tag template component making styles mentioned template component local component logical things mentioned annotations component also local component", "d": "8/2015"}, {"body": "think get put component encapsulated put head vote keeping current behavior close please reopen new use cases considered", "d": "8/2015"}, {"body": "made plunker demonstrate issue problem arise ngmodel bound object key value null select english enter text value correctly updated model angular fails update input field value switch another language back english title correctly updated though", "d": "8/2015"}, {"body": "bit testing accessing values object properties seem issue updated plunk reflect ngmodel bound string field editing text input switching languages leads unpredictable behaviour nt edit input works well", "d": "8/2015"}, {"body": "nevermind forgot inject well since required", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "apart pb chaining pipes change pipe takes lower upper bound arguments even better start index elements functionality introduced wayyy late lacking lot", "d": "8/2015"}, {"body": "lower amp optional upper bound default pipe either method would achieve goal", "d": "8/2015"}, {"body": "think replace legacy filter intuitive pipe following native array api beta costly change", "d": "8/2015"}, {"body": "agree mgcrea actually nt realise got pipe already landed definitively rename change api getting alpha", "d": "8/2015"}, {"body": "pkozlowskiopensource mgcrea strings legacy supports strings arrays keep strings use arrays", "d": "8/2015"}, {"body": "thinking since map native javascript api work way startingindex endingindex", "d": "8/2015"}, {"body": "using pipe", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "nt tests catch defect", "d": "8/2015"}, {"body": "probably combination following run dart analyzer offending code passes analyzer check compile unit tests js dart vm nt care eval annotation used runtime used static analysis therefore never fails tests", "d": "8/2015"}, {"body": "nt run dartium checked mode testing fix thu aug yegor notifications githubcom wrote probably combination following run dart analyzer offending code passes analyzer check compile unit tests js dart vm nt care eval proxy annotation used runtime used static analysis therefore never fails tests reply email directly view github", "d": "8/2015"}, {"body": "currently blocked", "d": "8/2015"}, {"body": "could provide description imagedemo part angular", "d": "8/2015"}, {"body": "imagedemo examples inside exampleswebworkers directory shows build proper webworker application well performance benefits gain using webworkers currently fully functional dartium ca nt load filereader api inside isolate", "d": "8/2015"}, {"body": "currently blocked typescript issue", "d": "8/2015"}, {"body": "looks like become unblocked typescript", "d": "8/2015"}, {"body": "could provide details request vague actionable issue", "d": "8/2015"}, {"body": "sorry mhevery angular docs example allowed examples ran directly browser example radio button click show hide component doc setup angular behavior included", "d": "8/2015"}, {"body": "yes part overall docs effort currently wip tracking individual items rewrite done going close", "d": "8/2015"}, {"body": "working expected meaning go route named root component hierarchy go url path home", "d": "8/2015"}, {"body": "probably looking pipescreate", "d": "8/2015"}, {"body": "thanks answer given try maybe making mistake really verbose job pretty much call thought would easier maybe instead throwing used method could use defaultpipes", "d": "8/2015"}, {"body": "pipes getting redo week moot closing since pipes treated directives issue become obsolete", "d": "8/2015"}, {"body": "replacing git seems work", "d": "8/2015"}, {"body": "reconfigure git use instead git protocol hopefully near future going get rid dependencies git repos wo nt need closing many moving parts repo atm workaround future problem go away", "d": "8/2015"}, {"body": "see basically add base element although note another bug currently scroll see workaround also", "d": "8/2015"}, {"body": "solved error thanks", "d": "8/2015"}, {"body": "right changed via guess deliberate change although sure motivation mhevery kittencup causing problems noting breaking change keep mind still alpha need expect several shifts public api", "d": "8/2015"}, {"body": "pkozlowskiopensource thks", "d": "8/2015"}, {"body": "imports core internal api", "d": "8/2015"}, {"body": "nice", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "done working", "d": "8/2015"}, {"body": "nightly builds", "d": "8/2015"}, {"body": "already publish snapshot builds google cloud storage keyed commit sha help example last commit angularangular get js build result", "d": "8/2015"}, {"body": "nt think easy work around demoting change nt agree", "d": "8/2015"}, {"body": "think fix easy sent pull request instead", "d": "8/2015"}, {"body": "blacksonic already supports annotations decorators want use decorators instead example babel", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "never mind found issue gives example doc think work", "d": "8/2015"}, {"body": "related", "d": "8/2015"}, {"body": "question reference sourdoughbreadcrumbs error message imagine would normally use component selector however example nt exist right generic error message might look like annotationsimplannotationsts give thoughts create pull request make tests", "d": "8/2015"}, {"body": "danielrasmuson conversation looks like typescript tape checking take care people using ts mhevery guess still need check inside people using right would happy help danielrasmuson prepare pr", "d": "8/2015"}, {"body": "sure danielrasmuson send pr", "d": "8/2015"}, {"body": "pkozlowskiopensource started working questions selectors string invalid correct selectors empty string invalid correct validate selector special characters amp providing selector valid see", "d": "8/2015"}, {"body": "danielrasmuson empty invalid omitted selectors throw would start simply verify add checks eg special chars later", "d": "8/2015"}, {"body": "nt conflict", "d": "8/2015"}, {"body": "pascalprecht danielrasmuson yeh thinking think throwing probably early throw selector given directive used case think empty selector might make sense would like conventions ex selector derived class name", "d": "8/2015"}, {"body": "yjbanov others apply dart apps working ts apps well", "d": "8/2015"}, {"body": "rolandjitsu issues question tackling dart initially reason similar precompilation done ts future", "d": "8/2015"}, {"body": "think make issue obsolete tbosch confirm close dup", "d": "8/2015"}, {"body": "yes remove even template parser code generating change detection", "d": "8/2015"}, {"body": "two things need done stop using nt include app code require explicit effort fix feel free reclose issue", "d": "8/2015"}, {"body": "change use transformation get correctly tree shaken well", "d": "8/2015"}, {"body": "cool let keep issue open make sure actually tree shaken doubt happen automatically marking blocked", "d": "8/2015"}, {"body": "think make issue obsolete tbosch confirm close dup", "d": "8/2015"}, {"body": "dynamic change detection used creating host views since way create host views change tbosch refactoring putting issue hold", "d": "8/2015"}, {"body": "marking blocked", "d": "8/2015"}, {"body": "please part one module listed", "d": "8/2015"}, {"body": "include angular upgrade process use case consider", "d": "8/2015"}, {"body": "mlaval good question test lib mocks covered well", "d": "8/2015"}, {"body": "like included separate bundles ala please update table", "d": "8/2015"}, {"body": "nt reason would also add angularuniversal angularreactnativerenderer future available nativescript renderer table two latter particular modules likely would nt always want require either way sounds great reasons already mentioned", "d": "8/2015"}, {"body": "thanks koslun worth mentioning projects like definitely consistent distribution strategies", "d": "8/2015"}, {"body": "updated issue nguniversal reactnativerenderer test lib ngupgrade also added column runtime import namespace clarity mhevery think test lib ngupgrade outputs also thinking complexity confusion benefit publishing angular namespace ie really buys us two things simple module name include namespace module name small assurance installingconsuming packages legit angular package try get insight team members users point", "d": "8/2015"}, {"body": "vsavkin right proposal move forms bundle still part distribution want advocate keeping forms bundle would potentially allow us move rx core bundle well since nt think anything else core bundle would depend", "d": "8/2015"}, {"body": "personally believe hold angular opinions angular way everything glued together classes without modules like probably separate di possible sure workout probably approach keeping namespace small amount angular glue di allowing allowing public version without angular deps needs discussion later universal distribution assume work although server bootstrap serverdomrenderer pending could moved core universal repo needs able push packaging systems outside javascriptdart ecosystem scalarubypython ensure developer experience consistent also another reason mentioned repo see universal becoming list modules interplay within angular ecosystem also server version ensure baseline experience bound javascript hence universal", "d": "8/2015"}, {"body": "use cases perhaps even related migration experience four stages web app repo lifecycle hackable dev lang nt knowstarting code toyexample plunkr tutorials smallmedium small app without party services could ignore bundling build step medium small team many party services build step way large enterprise largely depends architecture team large couple teams project one framework possibly one repo enterprise many teams scoped one feature page many frameworks within fall stage three four lazy loading must web app imho growsmatures time abstraction leveltechnical debt also skip stages start later one seed repos tend stage three best feature completely dominating first three levels great transition refactor higher abstractions stories stage one two three much stage four also stubley ensured certain structure allowed fall pit success moving stage three smallmedium thx servicesdiuiroutercontrollerscope abstractions problem subtle structure suggested falls apart next stage four great foundation patternsconcepts pushed framework fourth stage story great great transition stories early stages moment rails kinda cli way victory stage onetwo also keep mind internet become documentation copy error paste google see answers stackoverflow rails also gets questionable stage four experience experience may reflect everything webdev could wrong said propose use casesmigration could thought similar fashion comparing frameworks examples update focused original issue smallmedium apps fine everything larger apps prefer control dependencies apps may need deconstruct bootstrap process techniques code splitting lazy loading", "d": "8/2015"}, {"body": "jeffbcross gt gt gt think test lib ngupgrade outputs gt gt yes yes", "d": "8/2015"}, {"body": "couple things package already exists pub likely need publish different name bundle renamed pub nt allow hyphens package names", "d": "8/2015"}, {"body": "thanks yjbanov updated table changes di web workers also added column table indicating global object name bundle ie object users interact loading bundles via", "d": "8/2015"}, {"body": "also several di change detection routing strategies makes sense pull much weight add", "d": "8/2015"}, {"body": "thinking di changedetection part core thu aug pm igor minar notifications githubcom wrote also several di change detection routing strategies makes sense pull much weight add reply email directly view github", "d": "8/2015"}, {"body": "vsavkin di strategies used core look router strategies better understand think igorminar point falls line think ideal distribution module loading strategy end users bundle load modules application actually needs nt use generated bundles optional strategies would beneficial move modules fall line ideal described even still include bundle", "d": "8/2015"}, {"body": "edit added text npm distribution bullet proposal per offline discussion includes bundle version module well supported module formats", "d": "8/2015"}, {"body": "would potentially allow us move rx core bundle well since nt think anything else core bundle would depend component events implemented using observables rx stay part core di strategies used core nothing di used core", "d": "8/2015"}, {"body": "sure forms separate bundle going change view decorator contain default set directives available user default forms separate bundle set contain ngmodel", "d": "8/2015"}, {"body": "edit added backlog open issues relating issue", "d": "8/2015"}, {"body": "also separate renderers sort naming convention example server could also bootstrap using workers also domrenderer client domrenderer server aka serverdomrenderer example react decoupling renderer completely outside react renderers threejs canvas var react require react var reactdom require reactdom reactdomrender node still require would default case allowing others configure angular way update focused original issue could also perhaps even rename", "d": "8/2015"}, {"body": "example server could also bootstrap using workers referring app may run worker browser may also rendered server wanting establish naming convention two renderers inside namespace nt accidentally share name already problem", "d": "8/2015"}, {"body": "reading right would install form npm package would something like current bits make confusing know everything located properly import end user also affects tooling end user tooling", "d": "8/2015"}, {"body": "johnpapa good feedback correct import module names particular packages would single npm package names importing invalid would import actual classes functions separate modules like di zones facade probably forms would part people would never import zones facade would typically import di", "d": "8/2015"}, {"body": "thanks typed kinda quick would ideal list exports modules least key ones docs today understand modularity still key decision points break different modules export form module also decision include npm package believe modules small possible key points driving separation solid table see proposed npm package concerned discoverability clarity names perhaps consider naming convention reserved angular driven packages make clear example style important result think key end users bundle load modules application actually needs nt use generated bundles", "d": "8/2015"}, {"body": "jeffbcross yeah sorry mentioned two things workers probably stay name unless highly dependent browser goal looking able fullstack angular class model find id return thisbuisnesslogicasync id doaction thisanimation privatemethodasync client would compile rpc since annotate method server return observablereturn businesslogicasync id long running sync task return observablereturn fibonacci id animation native code animations etc return observablereturn would compile methods environment hide network layer precompile application also able combine renderer think since separation application layer render layer reason packages nt well suggesting naming convention renderers example question environment code live live package separate per environment example serverdomrenderer lines code node version http really could one line code replace browserxhr nodexhr update focused original issue workers stay module could also renderer io separation via question environment separation worry later may affect module distribution importing modules", "d": "8/2015"}, {"body": "could open separate issue discuss", "d": "8/2015"}, {"body": "preboot component within angular universal also npm module used outside angular downstream dependencies", "d": "8/2015"}, {"body": "mhevery igorminar discussing best solution internally landed new hierarchy source files bundles imports ultimate goal simple mental model users framework considering constraints byte size use modules outside context angular update table original comment summary changes previous thinking source directory structure everything inside modules folder could stand npm package though modules useful standalone npm package get rid directories dart tree add build process unit test files live next source files consolidate core parts single import facade di part core exported separately core near future subdirectory bundle ie corejs routerjs modules work angular internally imports words designed work di system nt import anything module like files root module represent export export ie publishing anything npm namespace time one quick bundle plunkers lessbytesensitive apps bundle version described detail publish bundles dependencies rx reflectmetadata systemjs bundles exported includes bundles corejs formsjs routerjs webworkerjs extensions bundle published codeangularjsorg npm bundles folder npm package published codeangularjsorg js dts typings separate folder npm distribution jsmap minjs using uglify eventually using angulartsminify devjs runs dev mode devjsmap testingjs testingjsmap testingdts bundle also get sfx version include dependencies like rx reflectmetadata traceurruntime export global object bundles include testing utilities mocks respective module coretestingjs include bulk testing utilities leaving testing bundles mostly include mocks note vsavkin insists di published separate npm package think best keep folder structure proposed treat di special case give packagejson include npm release process rkirov makes good point encouraging bundles shortterm quick way get started longterm work providing better recommendations productionready build setups also points bundles may confusing little gain saved bytes current systemjsbased build system router still minified http similar minified overall still significant byte savings certain use cases separate bundles individual published bundles also provides transparency file size different modules", "d": "8/2015"}, {"body": "dupe", "d": "8/2015"}, {"body": "firecube please use appropriate support channel types questions thnx", "d": "8/2015"}, {"body": "done sorry posting", "d": "8/2015"}, {"body": "sidenote code change actually soon changed next release", "d": "8/2015"}, {"body": "deepakshrma help", "d": "8/2015"}, {"body": "thank quick reply however looking answer already got answer want correction document novice nt want issue initial phase learning", "d": "8/2015"}, {"body": "working tests examples docs catch error going collect one issues like going close", "d": "8/2015"}, {"body": "offending commit pulled", "d": "8/2015"}, {"body": "reverted changes", "d": "8/2015"}, {"body": "manfredsteyer probably looking works today nt see much problem apart introducing yetanotherwayofdoingthings adding", "d": "8/2015"}, {"body": "idea alternative syntax legacy html user familiarity example able create componentsdirectives work angular angular following interface due fact angular nt enforce conventions since one knew best practices componentdirectives years ago actually take advantage today gave subtle nod migration technique ngvegas essentially create directive works example notice using alternative syntax angular today using alias create directive event already angular legacy make sense continue path allows delete half code means twice good since half code switching angular know best practices", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "angular nonnative htmlparser vdom ca nt anything faster opinion", "d": "8/2015"}, {"body": "run vdoms going close issue vague please open issue specific actionable tasks", "d": "8/2015"}, {"body": "make pull request howto fix commit message something along lines also click edit icon quickly make pr make sure commit message correct", "d": "8/2015"}, {"body": "submitted pull request close issue handle link request", "d": "8/2015"}, {"body": "github pr edit description add way github automatically close issue also helps figuring information pr", "d": "8/2015"}, {"body": "thanks first pr angular excited smiley", "d": "8/2015"}, {"body": "cc skybrian", "d": "8/2015"}, {"body": "perhaps unrealistic test code nt know real apps suffer", "d": "8/2015"}, {"body": "may intentional could plunker demonstrates determine something reinserted", "d": "8/2015"}, {"body": "nt know plunker profiled test code chrome dev tools found time spent functions ngfor internal discussion good heuristic find common prefixes suffixes starting beginning ends lists run sophisticated algorithm whatever left middle common case one change optimal looked diff algorithm ago looked like would handle common prefixes well common suffixes ideas cheap diff heuristics", "d": "8/2015"}, {"body": "longest increasing subsequence lis would able identify minimal moves nlog n hard implement also need find shortest list length past lis faster simpler approach certainly lists use ad hoc functions instead generic list differ mhevery need plunker skybrian provided repro sample github gist", "d": "8/2015"}, {"body": "current algorithm outputs added removed amp moved elements sure would handle common suffix vs common prefix probably directive deals changes blame remove view removed amp moved nodes removes dom nodes add views inserted nodes point final number views context might wrong loop views set context index element first step would investigate diff algo directive code blame cc rkirov", "d": "8/2015"}, {"body": "please see pending pr current workaround fix", "d": "8/2015"}, {"body": "pr fixes issue many thanks", "d": "8/2015"}, {"body": "nt think drooping one complaining nice nt think annotations way go would bloat ts code come way annotating things without adding payload", "d": "8/2015"}, {"body": "complaint form hello world strip annotations publishing npm elsewhere", "d": "8/2015"}, {"body": "sure effective way make progress agree yjbanov need start looking causing code size grow particular agree think optin optout annotations help guide process might ways like schedule time brainstorm ideas separately looking general ways make easier track source code culprits dumpinfo partially using codecoverage information using callgraph dependencies figure pulling lot code make easier analyze kind data would really useful framework specific hints narrow search imagine labeling portions never expected part production app suggested come handy", "d": "8/2015"}, {"body": "making need hopefully start removing dynamic pieces runtime otherwise easy pull back without knowing", "d": "8/2015"}, {"body": "another though could notion way automatically exclude transformed code anything would injected development", "d": "8/2015"}, {"body": "sigmundch would combining work bigger issue transformers nt addressed yet namely pull everything ngdeps files used used perhaps transformer prod mode crawls sources looking things actually used app could course also ask people break code smaller libraries eg overuse still kind defeating tree shaking capability", "d": "8/2015"}, {"body": "right discussed potential solutions tree shaking issue design doc", "d": "8/2015"}, {"body": "yjbanov sorry dropping second time around think bulk operations issues issue got coughed bulk agree figuring shrink size hello world clear specific actions need taken think focus understanding problem start guessing solutions", "d": "8/2015"}, {"body": "brainstormed tobias best approach fix settled making query iterate views view containers relieve injectors duty keep downward pointers children would remove need keep containing anything view local injectors making staticly known", "d": "8/2015"}, {"body": "fyi start culling generation unnecessary getters amp setters gated change", "d": "8/2015"}, {"body": "since blocking let bump find owner tomorrow", "d": "8/2015"}, {"body": "closed via", "d": "8/2015"}, {"body": "rkirov stevemao think recent update conventionalchangelog caused", "d": "8/2015"}, {"body": "nt think regenerated computer like looks like changelog run somehow release", "d": "8/2015"}, {"body": "sure actionable since remove duplicate closing", "d": "8/2015"}, {"body": "grr detection dangling attributes would really help catch cases using directives template without listing given directive maybe first step could throw attributes matched directive names elements names containing prefixed perfect able catch common errors", "d": "8/2015"}, {"body": "pkozlowskiopensource stoping implementing thought something already workng", "d": "8/2015"}, {"body": "mhevery nothing particular stops us apart needs work items take care need way knowing attributes consumed directive selector static property bindings need way knowing legitimate attributes regular html elements handcode schema html specs web components require handwritten schema devs definitively doable require work put one releases depending priorities", "d": "8/2015"}, {"body": "taking care today", "d": "8/2015"}, {"body": "moved next milestone complications crossmodule dependencies need figure", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "getting redone week new code different closing", "d": "8/2015"}, {"body": "closing since decided move core publish", "d": "8/2015"}, {"body": "decision available standalone someday wed aug jeff cross notifications githubcom wrote closing since decided move core publish reply email directly view github", "d": "8/2015"}, {"body": "great idea party modules also want support ts dart", "d": "8/2015"}, {"body": "bad news fellas going stay core really thing want maintain support outside folks doubt significant interest building libs target js dart still core could pretty easily consumed installing package moving module though later becomes apparent value separating reason could nt time", "d": "8/2015"}, {"body": "good news keeps improving facade getting smaller less necessary", "d": "8/2015"}, {"body": "done way still works older chrome versions", "d": "8/2015"}, {"body": "yeh bumping working dart unit tests well simple test reproduce add injectorspects test fail chrome linux injector dynamic confusing err failed test failed caught error instantiation engine injectornew package injectordynamicstrategygetobjbykeyid package injectorgetbykeydefault package injectorgetbykey package injectorget package notice enough context trace original exception vsavkin would love fix one got pointers", "d": "8/2015"}, {"body": "got pb js crux seems like default jasmine calling exception obj reporting exceptions message instead following logic used maybe make sure original error message part message thinking really pb exception di", "d": "8/2015"}, {"body": "yes also met case select tag called scale changed input tag called scale changed", "d": "8/2015"}, {"body": "guys tried swap position see position affects outcome", "d": "8/2015"}, {"body": "yes tried nothing change", "d": "8/2015"}, {"body": "alright wondering bindings meant predictable time around wondering position mattered breaking apart twoway binding probably wo nt change anything either", "d": "8/2015"}, {"body": "browsers change attributes order access attributes sure latest browsers position nt matter happen angular ngmodel higher priority normal events priority concept gone angular btw", "d": "8/2015"}, {"body": "handled processing events processing events elements would allow directives rewriteremap events", "d": "8/2015"}, {"body": "mhevery explain give link explanation need info new comer thanks", "d": "8/2015"}, {"body": "tbosch sounds like working intended closed", "d": "8/2015"}, {"body": "solved via well", "d": "8/2015"}, {"body": "matanlurey time angular gets hold dom attributes lowercased ca nt anything closing since working intended", "d": "8/2015"}, {"body": "typotter yes", "d": "8/2015"}, {"body": "vsavkin could quickly summarize better deal performance", "d": "8/2015"}, {"body": "pascalprecht simpler developer need create new concepts reason actions deal webworkes customrenderer better solutions", "d": "8/2015"}, {"body": "really clear asking perhaps start problem first", "d": "8/2015"}, {"body": "mhevery thank feedback may see topbar component close button internal behaviour let say close view want able override behaviour let say want default event clicking close button actually closing view specific view want open dialog confirm closing view could use event emmiters works fine beside wanted default behaviour best regards tiago braga", "d": "8/2015"}, {"body": "think asking button know someone listening short answer would create weird behavior nt want add api closing nt think anything us", "d": "8/2015"}, {"body": "close issue replace concrete issue needs done", "d": "8/2015"}, {"body": "right initial question answered close handle actionable items", "d": "8/2015"}, {"body": "sorry", "d": "8/2015"}, {"body": "websocket work zone today bug zone filed sure angular business writing things notangular specific think use cases better served separate third party projects would much rather focus things angular needs enable work smoothly existing code would like see community pick kinds projects would tempted close issue least push road first main release", "d": "8/2015"}, {"body": "agreed closing seeking input apps realtime communication facilitated problems angular help alleviate", "d": "8/2015"}, {"body": "think works intended think used notice double dash", "d": "8/2015"}, {"body": "closing dup", "d": "8/2015"}, {"body": "changing annotation list property name currently use html template case insensitive systems us nativescript reactnative case sensitive dashcase dealing html case insensitive problem goes away use different rendering bring html limitation rest framework would make sense nonhtml renderers mental model property name object fact html case insensitive html problem pollute rest declaring class closing working intended", "d": "8/2015"}, {"body": "tbosch still problem new compiler prototype", "d": "8/2015"}, {"body": "nt think", "d": "8/2015"}, {"body": "ok let close", "d": "8/2015"}, {"body": "rare syntax easy workaround dropping", "d": "8/2015"}, {"body": "issues please use gitter helpdiscussions", "d": "8/2015"}, {"body": "nt see anything wrong describe steps reproduce expected vs actual behavior", "d": "8/2015"}, {"body": "lack reproducible steps closing", "d": "8/2015"}, {"body": "vsavkin thought implement please close update status", "d": "8/2015"}, {"body": "solved", "d": "8/2015"}, {"body": "moving next milestone make room higher priority items", "d": "8/2015"}, {"body": "think already one", "d": "8/2015"}, {"body": "tracks internal bug", "d": "8/2015"}, {"body": "igorminar matsko like help designing", "d": "8/2015"}, {"body": "still trying design good design tricky ca nt easily work backwards arbitrary partial url set components properly generate instruction solution handles case link like routeconfig new redirect path redirectto second new route path second component dummycmpb secondcmp class parentredirectcmp view template routeconfig new route path first component parentredirectcmp firstcmp class appcmp redirect child another route within child everything works fine trying deeplink redirect parent deep hierarchy work", "d": "8/2015"}, {"body": "would polyfill help probably sounds drop api instead implement would require design doc support", "d": "8/2015"}, {"body": "confused suggesting work needs wait global cd finish seem right chat", "d": "8/2015"}, {"body": "name unfortunate proposing anything global imagine following tree injectorsnodes called dirtycheck bindings injq called dirtycheck dirty check need callback local injq called dirtycheck bindings whole component view tree callback still local injq global", "d": "8/2015"}, {"body": "see makes sense", "d": "8/2015"}, {"body": "clearing assignee since milestone", "d": "8/2015"}, {"body": "situation code size report angulardistdartexamplesbuildwebsrchelloworldindexdartjs true total file size bytes bytes ngdeps bytes dart runtime libs bytes bytes unaccounted bytes breakdown interceptors bytes isolatehelper bytes jshelper bytes angular bytes angularcore bytes angularcorefacade bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes dart bytes dartinternal bytes dartasync bytes dartcollection bytes dartconvert bytes dartcore bytes dartdom bytes dartdomhtml bytes dartdomsvg bytes dartjs bytes darttypeddata bytes darttypeddataimplementation bytes htmlcommon bytes intl bytes path bytes pathcontext bytes pathstyle bytes stacktrace bytes testability bytes testabilitygettestability bytes trace bytes", "d": "8/2015"}, {"body": "specs passing", "d": "8/2015"}, {"body": "vsavkin", "d": "8/2015"}, {"body": "ping vsavkin", "d": "8/2015"}, {"body": "yjbanov think longer issue closed verify", "d": "8/2015"}, {"body": "special case directives nt need dom node could allowed light dom without projected", "d": "8/2015"}, {"body": "work next iteration", "d": "8/2015"}, {"body": "nice thank yoou", "d": "8/2015"}, {"body": "going keep open issue properly lands", "d": "8/2015"}, {"body": "wontfix worksasintended way shadowdom works importantly maybe real panel reprojection tests mockpanel reprojection case nt want fail think correct behavior", "d": "8/2015"}, {"body": "note done elementrefnativeelement return element elementrefs even projected mon aug pm mi\u0161ko hevery notifications githubcom wrote wontfix worksasintended way shadowdom works importantly maybe real panel reprojection tests mockpanel reprojection case nt want fail think correct behavior reply email directly view github", "d": "8/2015"}, {"body": "matanlurey could add justification reopen", "d": "8/2015"}, {"body": "remaining points urgent supporting transformer", "d": "8/2015"}, {"body": "merged via", "d": "8/2015"}, {"body": "cc vsavkin matanlurey nt think support think incorrect component use presence listener input behavior component behave regardless listener want change way component behaves explicit flags passed regardless presence listeners wontfix workingasintended", "d": "8/2015"}, {"body": "still issue closed", "d": "8/2015"}, {"body": "think closed check issue still occurs open sent iphone aug mi\u0161ko hevery notifications githubcom wrote still issue closed reply email directly view github", "d": "8/2015"}, {"body": "tracks internal bug", "d": "8/2015"}, {"body": "please note route browser url necessarily route active since active route could temporally changed custom outlet example block certain routes user logged still showing original url user go logging currently app using private variable routercurrentinstructioncurrentcomponent see route active need something better public reflect actual component url currently seeing necessary url hope helps", "d": "8/2015"}, {"body": "error", "d": "8/2015"}, {"body": "closing since reworking docs startup sequence change errors stem including file gotten step", "d": "8/2015"}, {"body": "hope makes time offer pr would still open couple days could certainly help", "d": "8/2015"}, {"body": "probably getting cut today started like send pr would really appreciated wed aug pm nathan walker notifications githubcom wrote hope makes time offer pr would still open couple days could certainly help reply email directly view github", "d": "8/2015"}, {"body": "punting next milestone maybe nathanwalker get", "d": "8/2015"}, {"body": "alexeagle sorry nt able get yet look typings template last week setup changed bit since earlier alpha versions unable understand fully needed done make static methods available dts file", "d": "8/2015"}, {"body": "thank letting know status try look today tomorrow", "d": "8/2015"}, {"body": "fwiw nt think issue checking last input value fact case match would return input value transformed output since transforms cheap anyway worth optimization place anyway", "d": "8/2015"}, {"body": "problem used code reference since real pipe time course real docs time also api changed remove return reference transformation nt need happen changed use also smoke tests pipes app optimized change detection reference checks old pipe api changedetectionpipesobservablepipets maintain reference observable essentially states transform something different causes side effects observable without subscription observable subscription current valuereturned value current valuereturned value different know create prevented cycle happening change returns new observable reference actually potential bug first state return returned value returned value dereferenced ondestroy pipe lifecycle rather observable reference lifecycle said went back refactor pipes bad", "d": "8/2015"}, {"body": "looking commit closed issue thought fact untransformed value returned initial invokation nt know much pipes probably misread disappointed sorry noise smilingimp", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "look issue ca nt reproduce see plnkr matanlurey please provide details issue", "d": "8/2015"}, {"body": "matanlurey update weeks still sounds like nt hear next days close ca nt reproduce", "d": "8/2015"}, {"body": "close reproduce please reopen show repro case", "d": "8/2015"}, {"body": "nt call begin", "d": "8/2015"}, {"body": "jeffbcross also released maybe switch", "d": "8/2015"}, {"body": "looking today mprobst emailing vscode team like fully understand options write something", "d": "8/2015"}, {"body": "outcome typescript ecosystem nt good generalpurpose solution followup separately angular specifically distribute bundled npm package remove files currently distributed add block run add angular typings without using definitelytyped", "d": "8/2015"}, {"body": "alexeagle unfortunately seems bundled files still added tsddts reinstall install needed typings way prevent", "d": "8/2015"}, {"body": "btford shahata news", "d": "8/2015"}, {"body": "closed ago eagerly waiting news", "d": "8/2015"}, {"body": "btford working hard track current state", "d": "8/2015"}, {"body": "good go", "d": "8/2015"}, {"body": "fixed angularzonejs repo default zonejs file work webworker next time release", "d": "8/2015"}, {"body": "nice thanks", "d": "8/2015"}, {"body": "looks resolved closing", "d": "8/2015"}, {"body": "closed image demo", "d": "8/2015"}, {"body": "wanted mention feature could important might look first sight lot common use cases seem need feature take example menu submenus case believe need lightdom element directives loop list render either entry submenu alternative way implementing current api thanks", "d": "8/2015"}, {"body": "let implement yet may negative perf improvement let make sure real use cases implemented ways", "d": "8/2015"}, {"body": "searching repository could find example unit testing services mocked done without testcomponentbuilder", "d": "8/2015"}, {"body": "pr almost ready hope get initial submit week", "d": "8/2015"}, {"body": "matanlurey update pr", "d": "8/2015"}, {"body": "nt need nt write properties directive binds property ie nt generate different bindings based", "d": "8/2015"}, {"body": "thanks change better still working expected tried following alpha using css class selected lowercase ie work", "d": "8/2015"}, {"body": "amoizp talking different issue need keep mind html casesensitive casepreserving type html browser autocorrect lowercasing attribute names happens angular compiler run ca nt much one", "d": "8/2015"}, {"body": "pkozlowskiopensource got thanks far upgrade angular working well keep guys", "d": "8/2015"}, {"body": "closing obsolete reopen still issue", "d": "8/2015"}, {"body": "merged via", "d": "8/2015"}, {"body": "scenario support canactivate returns false tried fetch data data found rather displaying component want redirect item found view parameterized item idname", "d": "8/2015"}, {"body": "pr caitp please provide update", "d": "8/2015"}, {"body": "also namespace dynamic ie ngrouter described", "d": "8/2015"}, {"body": "still issue fixed", "d": "8/2015"}, {"body": "yeah already fixed thanks", "d": "8/2015"}, {"body": "mhevery btford news one also try use requestanimationframe angular suffer huge performance drops", "d": "8/2015"}, {"body": "thought resolved verify", "d": "8/2015"}, {"body": "fix patching requestanimationframe still pending zonejs repo nt think resolved compare latest release build weekend sure", "d": "8/2015"}, {"body": "pending", "d": "8/2015"}, {"body": "mhevery zonejs issue merged closed", "d": "8/2015"}, {"body": "needs upgrade latest zonejs close issue", "d": "8/2015"}, {"body": "released fix longer blocked", "d": "8/2015"}, {"body": "pushing presubmit", "d": "8/2015"}, {"body": "jeffbcross like work easy task would able elaborate little bit really want maybe hints would like get rid using requestmethods becomes constant list would constants separate file called thanks", "d": "8/2015"}, {"body": "hey rixrix thanks chiming sorry nt see notification comment sooner actually little easier dart support dropped altogether module fix issue remove class enumsts change occurences use typescriptprovided reverse enum lookup like example example looks like files need change enumsts backendsjsonpbackendts backendsxhrbackendts let know provide info", "d": "8/2015"}, {"body": "hi jeff thanks look today cheers", "d": "8/2015"}, {"body": "hi pushed pr ticket good get feedback thanks", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "pkozlowskiopensource planing work", "d": "8/2015"}, {"body": "mhevery point sure could improve err messages without compromising generality template syntax parsing imo getting lot millage detecting dangling bindings already got issues pipe detect dangling events attributes etc nt think template syntax vote goes closing one think better productivity gains tackling items", "d": "8/2015"}, {"body": "pkozlowskiopensource sgtm", "d": "8/2015"}, {"body": "updated days seem like still issue close", "d": "8/2015"}, {"body": "nt seen close open new issue see similar things", "d": "8/2015"}, {"body": "btford way dynamic routerlinks template", "d": "8/2015"}, {"body": "btford provide update believe proper ast", "d": "8/2015"}, {"body": "afaik nt yet started work binding ast transformations need order implement better linking dsl", "d": "8/2015"}, {"body": "pkozlowskiopensource still progress moved alpha please remove milestone nt think land wednesday", "d": "8/2015"}, {"body": "moving wo nt able finish today", "d": "8/2015"}, {"body": "still issue", "d": "8/2015"}, {"body": "bug concerning status seems fixed tests statustext still defaults ok maybe could test status code use generic http error internal server error also seems eventemitter returned httprequest calling observernext even status reports error case rather pass observerthrow edit actually found already issue", "d": "8/2015"}, {"body": "agree vicb interface disappear runtime break di think usage related di could removed perhaps way ts implemented abstract keyword", "d": "8/2015"}, {"body": "sorry still prioritized breakdown first", "d": "8/2015"}, {"body": "bumping landed part cleanup needed jeffbcross working one lands still need crawl repo look traceur use mechanical cleanup work", "d": "8/2015"}, {"body": "may affected", "d": "8/2015"}, {"body": "stale feature removed", "d": "8/2015"}, {"body": "nt part type definition typescript assert", "d": "8/2015"}, {"body": "started tackle one question added new states http enums removed readystate property connection interface renamed mockbackend state jsonpbackend logic checks cancelled state state property nt states nt know exactly could check properly check connection cancelled", "d": "8/2015"}, {"body": "still relevant", "d": "8/2015"}, {"body": "yes probably merely nice ie", "d": "8/2015"}, {"body": "finalised http request responses plans returning events progress rather response perhaps would better return connection backends return etc events instead", "d": "8/2015"}, {"body": "ticked list", "d": "8/2015"}, {"body": "thanks pascalprecht updated list status prs", "d": "8/2015"}, {"body": "also done least ready review", "d": "8/2015"}, {"body": "closing stale", "d": "8/2015"}, {"body": "issues well injection http module using definetlytyped typescript think import like use inject add constructor getting error message person add person many friends directives ngfor ngif class personlist peoplelist array http bootstrap personlist found issue using found bit wierd use also inject make work works", "d": "8/2015"}, {"body": "made basic modification little project initially based angularclass starter cfontes examples release w release inject globally location nt constructor level unlike previous post however injecting via would require use constructor w release nt anymore either inject globally component level one thing note though component level might need use instead maybe try sync w release", "d": "8/2015"}, {"body": "sure upgrading problem gone away anybody still experiencing", "d": "8/2015"}, {"body": "rixrix nice thanks use viewbindings instead viewinjector ca nt find reference information", "d": "8/2015"}, {"body": "cfontes viewinjector nt exist anymore called viewbindings ps documented changelog though", "d": "8/2015"}, {"body": "good reason qua de ago de eric mendes dantas lt notifications githubcom wrote cfontes viewinjector doesnt exist anymore called viewbindings reply email directly view github cristiano fontes", "d": "8/2015"}, {"body": "vsavkin deviated semantic commit message format commit prevented making changelog", "d": "8/2015"}, {"body": "verify reproduction issue fixed newer releases", "d": "8/2015"}, {"body": "think typescript needs hint generate runtime type information di therefore requirement injection decorator work jeffbcross closed", "d": "8/2015"}, {"body": "sure would nice could tell ts compiler always generate rather import injectable every single file", "d": "8/2015"}, {"body": "mhevery nt simply trick", "d": "8/2015"}, {"body": "could class foo constructor inject bar bar injectable class foo constructor bar bar feels like idiomatic ts nt appear matter decorator long one seems like could flag ts compiler options like alwaysgeneratemetadata aug pm pascal precht notifications githubcom wrote mhevery nt simply inject trick reply email directly view github", "d": "8/2015"}, {"body": "hesitant support api surface think let others implement missing functionality independent zone closing reopen feel strongly", "d": "8/2015"}, {"body": "removed milestone left assigned julie since wip", "d": "8/2015"}, {"body": "think remove tags compilation optionally move head want", "d": "8/2015"}, {"body": "would vote removing tags altogether nt think want act poor man loader via templates send firstshot pr discuss", "d": "8/2015"}, {"body": "pkozlowskiopensource sgtm", "d": "8/2015"}, {"body": "think related building app along typescript sources", "d": "8/2015"}, {"body": "obsolete work", "d": "8/2015"}, {"body": "vicb update still valid issue", "d": "8/2015"}, {"body": "think would still nice find generic solution investigate nt seen igor comment", "d": "8/2015"}, {"body": "still issue", "d": "8/2015"}, {"body": "vicb could please point doc discussion recommended way native dom manipulation angular understand would work fine using templates bindings angular sometimes people want integrate thirdparty libraries like jquery plugin learned cached whatever append manually must undo callback questions allowed inject constructor add div lifecycle clear better use managing dom manually way preferable difference understand busy asked would appreciate link could find thank", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "update check reflect metadata done", "d": "8/2015"}, {"body": "moving backlog sure time dive zones coming week", "d": "8/2015"}, {"body": "still issue closed", "d": "8/2015"}, {"body": "yep unfortunatelly still pb quite pesky one since really slows developer flow tdd async tests", "d": "8/2015"}, {"body": "going close work around seems like one working reopen feel otherwise", "d": "8/2015"}, {"body": "moving next milestone waiting make sure consistent distribution story moving forward somewhat stable hoping reviewable tomorrow morning", "d": "8/2015"}, {"body": "looks like resolved closing", "d": "8/2015"}, {"body": "believe refactored code issue satisfied closing", "d": "8/2015"}, {"body": "think done going close treat remainder specific errors", "d": "8/2015"}, {"body": "tedsander update", "d": "8/2015"}, {"body": "sorry yes marking closed", "d": "8/2015"}, {"body": "vicb comment", "d": "8/2015"}, {"body": "vsavkin", "d": "8/2015"}, {"body": "vicb sorry yes vsavkin comment", "d": "8/2015"}, {"body": "tried merge rebased master realized current implementation issue turns concrete exception ie fix every subclass implement method issue concrete constructors take rather signatures changed decided abandon since added code payload constructor signature complexity justify benefit immutability given exception mutated di see little value turning immutable code closing", "d": "8/2015"}, {"body": "wontfix", "d": "8/2015"}, {"body": "rkirov still issue closed", "d": "8/2015"}, {"body": "superceeded", "d": "8/2015"}, {"body": "mhevery using mdinput demo subsequently ending fairly certain current mdinput works ignores uses course means works fine long want input elements mdinput elements want naked input element wrapped input element within component luck nt tested following mdinputcontainer bet dollar fail either missing provider error npe containerregister exception thrown use complex selectors would saved bit time read docs eventually", "d": "8/2015"}, {"body": "jelbourn comment", "d": "8/2015"}, {"body": "ggranum yeah current mdinput works hits input elements selector throwing error bug describes material components codebase mainly experiments may issues similar", "d": "8/2015"}, {"body": "case using comma space selectors fri aug jeremy elbourn notifications githubcom wrote ggranum yeah current mdinput works hits input elements selector mdinputcontainer input throwing error bug describes material components codebase mainly experiments issues similar reply email directly view github", "d": "8/2015"}, {"body": "mhevery current state selector checking work answer never bothered changing whole component going redone", "d": "8/2015"}, {"body": "see lines using thisresults", "d": "8/2015"}, {"body": "obsolte", "d": "8/2015"}, {"body": "still issue latest change way encapsulation", "d": "8/2015"}, {"body": "current solution server rendering encapsulation emulated combining styles using serialized stylesheet next serialized app problem client aware host location generated server client injects styles encapsulation none control encapsulation native nt work server", "d": "8/2015"}, {"body": "new design compiler make public soon solve issue", "d": "8/2015"}, {"body": "change yet implemented master hopefully weeks", "d": "8/2015"}, {"body": "little issue feature say template made like use form viewquery directive get reference use viewquery directive log result console get empty results array expend see content see still able access feature tested supposed work also tried previous alpha versions none seems make work alpha", "d": "8/2015"}, {"body": "aboeglin look", "d": "8/2015"}, {"body": "closing obsolete please reopen still issue", "d": "8/2015"}, {"body": "one feature binding missing still nt noticed angular ability switch binding based another property one example usage think static labels change language switch", "d": "8/2015"}, {"body": "vsavkin think thinking wo nt support close", "d": "8/2015"}, {"body": "currently one use case create new observable every tick store reference observable template problem wo nt present anymore tempting solve problems extending template syntax user already way deal component seem unreasonable even though hard implement recommend requires new syntax makes execution model complicated jeffbcross another good use case bind functionality", "d": "8/2015"}, {"body": "bummer use cases like falcor model tied controller suppose alternative solution patch falcor return promise repeated requests identical values long value underneath nt changed seems like would nice users angular handled transparently though", "d": "8/2015"}, {"body": "ewinslow planning tight integration falcor best way get", "d": "8/2015"}, {"body": "ok well good know guess", "d": "8/2015"}, {"body": "blocked probably wo nt fix time soon dropping priority", "d": "8/2015"}, {"body": "vicb still case close issue", "d": "8/2015"}, {"body": "sure mean ask vsavkin", "d": "8/2015"}, {"body": "sorry vicb vsavkin still case close issue", "d": "8/2015"}, {"body": "vicb still relevant think stale please reopen think otherwise", "d": "8/2015"}, {"body": "btford better person answer", "d": "8/2015"}, {"body": "mhevery tried using host injector plausible works still nt work property host property instanciated via http request async wait instanciated best regards tiago braga", "d": "8/2015"}, {"body": "explaining load async dependency get already instantiated without explicitly call wait response afraid far know nt mechanism implemented want way think one illustrated bellow probably may ways used js import viewencapsulation component view import observablewrapper class asyncdep constructor logic returns promise observable factory actually want component selector mycomponent viewbindings asyncdep view encapsulation viewencapsulationnative template hello name directives class mycomponent name string res myasyncdep constructor myasyncdep asyncdep myasyncdepthen res gt thisres res ready use yet need wait resolved promise observable observerwrappersubscribe myasyncdep res gt thisres res", "d": "8/2015"}, {"body": "managed solve ngif ready guess onactivate work", "d": "8/2015"}, {"body": "vsavkin reworked error massages stale closing", "d": "8/2015"}, {"body": "vsavkin reworked error reporting quite bit make lot useful closing issue stale", "d": "8/2015"}, {"body": "putting back backlog nt think time work timeframe", "d": "8/2015"}, {"body": "ca nt automatically added build step", "d": "8/2015"}, {"body": "pajn whatever come needs work without build step well", "d": "8/2015"}, {"body": "longer case closing", "d": "8/2015"}, {"body": "based inperson discussion vsavkin mhevery going support binding host properties would either require activating directives host properties complex specialcasing compiler people need add remove classes dynamically directives done injecting renderer element ref imperatively based task breakdown x rename class directive selector see pr check easy hard imperative dynamic class manipulation directive make sure works correctly hydrating dehydrating add convenience apis hand current apis cumbersome", "d": "8/2015"}, {"body": "vsavkin based discussion yesterday proposal helper api assuming got intentions right java directive selector mydirective lifecycle lifecycleeventondestroy export class mydirective constructor private cssclass cssclass thiscssclasstoggle foo true interface utility name decided would implementation would stateful would track classes added removed given element would capable cleaning sth guys mind", "d": "8/2015"}, {"body": "sgtm thu aug pawel kozlowski notifications githubcom wrote vsavkin based discussion yesterday proposal helper api assuming got intentions right directive selector mydirective lifecycle lifecycleeventondestroy export class mydirective constructor private cssclass cssclass thiscssclasstoggle foo true dosomething thiscssclasstoggle foo false thiscssclasstoggle bar true ondestroy void thiscssclasscleanup interface utility name decided would interface cssclass toggle classname string add boolean cleanup implementation would stateful would track classes added removed given element would capable cleaning sth guys mind reply email directly view github", "d": "8/2015"}, {"body": "pkozlowskiopensource like idea would also methods addition toggle wonder make something user nt call manually", "d": "8/2015"}, {"body": "hi allow step pkozlowskiopensource think method kinda see use cheers", "d": "8/2015"}, {"body": "jelbourn definitively add convenience cleanup wonder make cleanup something user nt call manually whole idea behind helper class remembers classes need similar mechanism styles added removed given element view get dehydrated restore initial state element would love way nt need users explicitly call nt know atm", "d": "8/2015"}, {"body": "vsavkin way making changes injection support something like automatically disposed upon component destruction", "d": "8/2015"}, {"body": "pr ready review", "d": "8/2015"}, {"body": "rkirov still thing closing think current workaround sufficient reopen feel otherwise", "d": "8/2015"}, {"body": "see let part angular core wo nt work precompiled templates please feel free publish standalone directive tbosch really last word regarding", "d": "8/2015"}, {"body": "closing since inactive obsolete", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "covered", "d": "8/2015"}, {"body": "sekibomazic add justificationusecase need custom events bubbling makes sense input keymouse events", "d": "8/2015"}, {"body": "hi mhevery nt know sekibomazic use case following scenario imagine component trigger service call thus requering kind loading animation depending component location parent want different behaviours loading animation could propagate custom events could easily implement course ways time many better examples surge sure supported hope consider functionality best regards", "d": "8/2015"}, {"body": "mhevery special use case honest expect custom event bubbled well intuitive first time deal later problem another nice guess", "d": "8/2015"}, {"body": "asking add attribute compiler pick compilation creates bit magic distance nt think worth complexity case inject able pragmatically add hoover behavior elment working intended", "d": "8/2015"}, {"body": "naomiblack looks like resilient going close please provide specific use case reopen", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "mhevery thoughts get implemented also would idiomatic approach rules spanning single control", "d": "8/2015"}, {"body": "initial support running tests sauce landed needs done open separate focused issues", "d": "8/2015"}, {"body": "obsolote", "d": "8/2015"}, {"body": "mhevery honest given much greater thought unsure angular responsibility implement sure nice refresh feature resource use cases taken account hardly aid proper solution far involved simple resource refresh instance need two side responseexisting comparison records hope write soon share may interested quick look loopback live set example see possible option solve part problem meantime suggest issue closed", "d": "8/2015"}, {"body": "angular include like api think community step closing outside scope", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "quite similar pb null string conversion attributes discussed pb exactly also calls special setter mechanism given property", "d": "8/2015"}, {"body": "land next couple days", "d": "8/2015"}, {"body": "dup closing", "d": "8/2015"}, {"body": "obsolete reopen still needed", "d": "8/2015"}, {"body": "reopen still issue", "d": "8/2015"}, {"body": "stale", "d": "8/2015"}, {"body": "btford update", "d": "8/2015"}, {"body": "track properly boot time actually increasing time went last comment min hardware finished buildjsdev", "d": "8/2015"}, {"body": "wont fix", "d": "8/2015"}, {"body": "issue cant tell difference class method class property function horrible hack something like reading property twice checking identity different assumed method assumed property vsavkin could add thoughts", "d": "8/2015"}, {"body": "sending backlog nt think get another weeks issues api doc infrastructure language singlesourcing resolved", "d": "8/2015"}, {"body": "closed via", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "opened see get tests stuff modulesexamples", "d": "8/2015"}, {"body": "mhevery probably closed closed well", "d": "8/2015"}, {"body": "problem angular alpha version examples angulario work", "d": "8/2015"}, {"body": "chomba provide plunk verification", "d": "8/2015"}, {"body": "also latest alpha currenlty might wan na update", "d": "8/2015"}, {"body": "tbosch status closed", "d": "8/2015"}, {"body": "master also queriable however nt time change support custom templates implement local wip branch wo nt continue next weeks focus compiler improvements gt happy far", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "docs redone obsolete", "d": "8/2015"}, {"body": "docs redone obsolete", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "news eta one ran bug trying figure property interpolation alpha still present", "d": "8/2015"}, {"body": "known issue vsavkin comment", "d": "8/2015"}, {"body": "rkirov status nt think easily support", "d": "8/2015"}, {"body": "yep support dart type objects used instanceof checks write something like dart supporting purely ts worth extra complexity closing issue needed revisit adding custom filter query", "d": "8/2015"}, {"body": "status update", "d": "8/2015"}, {"body": "became low priority compared things eg thu aug pm mi\u0161ko hevery notifications githubcom wrote status update reply email directly view github", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "alternative decorator annotations", "d": "8/2015"}, {"body": "event amp property feels naturalexplicitintuitive", "d": "8/2015"}, {"body": "someone verify still issue cc rkirov", "d": "8/2015"}, {"body": "seems fixed retested case similar tabs example works nt", "d": "8/2015"}, {"body": "think obsolete closing reopen feel otherwise", "d": "8/2015"}, {"body": "obsolete new injectors support", "d": "8/2015"}, {"body": "dup closing", "d": "8/2015"}, {"body": "obsolete fixed", "d": "8/2015"}, {"body": "sounds like issue closed reopen feel otherwise", "d": "8/2015"}, {"body": "vsavkin lot work cleaning errors verify still issue reopen", "d": "8/2015"}, {"body": "tbosch updated ls still relevant", "d": "8/2015"}, {"body": "yes still issue", "d": "8/2015"}, {"body": "tbosch still issue", "d": "8/2015"}, {"body": "yes relevant js though nt lot users yet", "d": "8/2015"}, {"body": "docs getting rewritten obsolete", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "fix available", "d": "8/2015"}, {"body": "alexeagle still issue", "d": "8/2015"}, {"body": "yes waiting tsd release use new flag let keep issue open remind us present tsd nt include", "d": "8/2015"}, {"body": "tsd released try fix", "d": "8/2015"}, {"body": "clear angular support composing svg documents using separate components words mentioned documentation angular deprecated option scenarios element replacement required application function main one reusable custom components used within svg contexts svg nt work custom elements dom tree main scenario longer supported angular", "d": "8/2015"}, {"body": "vsavkin still relevant", "d": "8/2015"}, {"body": "injectlazy removed di specific decorators think closed", "d": "8/2015"}, {"body": "sjelin moved alpha please remove move milestone wo nt land wednesday", "d": "8/2015"}, {"body": "hey sorry original approach nt work amp nt able make meeting anyway something working api essentially example documentation pending behind scenes works totally differently caching templates client side nt feasible without api like instead idea make karma serve templates urls would used production way retrieved angular ajax like normal sure clear makes sense everyone clean throw npm soon busy wednesday pm though otherwise think solution implement something like", "d": "8/2015"}, {"body": "nt get feedback went ahead published npm let know solves everyone problems need go something else", "d": "8/2015"}, {"body": "per matanlurey july comment longer issue gt removed gt hotlist", "d": "8/2015"}, {"body": "note planning precompiling templates see probably want store templates form", "d": "8/2015"}, {"body": "think still work case templates inline design doc example plugin unnecessary retrieved ajax plugin allow ajax work regardless template formatted going close issue since think solves problem nt seem internal users ask zzo update telling use", "d": "8/2015"}, {"body": "done", "d": "8/2015"}, {"body": "sjelin trying today found ideal solution codebase least similar angular uses mock xhr implementation running unit tests nt real http requests made karma handle seeming tool inlines template contents component js build step ie gt block dart already something like dart transformers", "d": "8/2015"}, {"body": "one working interested gulp tool", "d": "8/2015"}, {"body": "think precompile templates unit tests well way templates also styles loaded offline server converted format angular already understands see tue aug ludovic henin notifications githubcom wrote one working interested gulp tool reply email directly view github", "d": "8/2015"}, {"body": "obsolete closing", "d": "8/2015"}, {"body": "far understand following means append myservice list bindings mycomponent provides think need make mechanism general need nice way override directiveresolver viewresolver similar testcomponentbuilder right operations needs supports replace list bindings append list bindings override individual binding api requires design may look like var overrides directiveresolveroverrides mycomponent append somebinding replace token myservice myotherservice ng platform cookies createapp overrides loadcomponent mycomponent note overrides passed compiler created also since common configure overrides per module basis overrides depend method chaining possible deal collections overrides either arrays maps finally think right mental model overrides mutate data transform passing compiler", "d": "8/2015"}, {"body": "control binding universal need provide node version http also router users include replace default bindings correct environment might solved platformbindings also think renderer separate consider example pending react release var react require react var reactdom require reactdom var mycomponent reactcreateclass render function return hello world reactdomrender node previously reactrender node benefit able fix server rendering problem allowing users use would allow react use strategy angular uses faster initial loads could also help trying figure module distribution renderers also need bit control renderer perhaps separation could allow separate compilecreate steps tobias mentioned allow optimization serverclient one example client able debounce inserting client view user typing hit action key problem currently desktop see problem mobile users keyboard toggles transition input focus", "d": "8/2015"}, {"body": "one thing would great see bootstrap api given focus code size load time way specify angular features want enable app done using method would allow treeshaker include unused features strawman calls methods would fully typed allowing treeshaker closure etc get rid unused code methods would simply populate di module relevant bindings", "d": "8/2015"}, {"body": "bumping working design proposal link week comments", "d": "8/2015"}, {"body": "alxhub update design proposal mentioned", "d": "8/2015"}, {"body": "design angular bootstrapping note long form bootstrapping multiple apps single page existing function continue work simple apps nonweb worker app typescript bindings nonweb worker apps var domappbindings listwrapperconcat appcommonbindings appdombindings platform holds bindings singletons browser page var platform ngplatform rootbindings first application var appfoo platformapplication listwrapperconcat domappbindings first application bindings two root components appfoorootcomponent appfoocomponent ref rootcomponentref gt component ready callback runs application zone appfoorootcomponent appfoosidecomponent ref rootcomponentref gt second component app ready second application independent zone change detection compiler etc var appbar platformapplication listwrapperconcat domappbindings second application bindings appbarrootcomponent appbarcomponent ref rootcomponentref gt second application ready web worker app running web worker thread typescript bindings webworker apps var bus somehow get messagebus webworker apps need bindings initialized asynchronously initialization happens setup event received ngplatform rootbindings asyncapplication gt asyncloader returns promise called synchronously platformrefasyncapplication runs application zone var completer promisewrappercompleter var subscription var emitter busfrom setupchannel subscription observablewrappersubscribe emitter message stringmap gt observablewrapperdispose subscription bindings determined based setup message var appworkerbindings listwrapperconcat appcommonbindings appwebworkerbindings bus message completerresolve listwrapperconcat appworkerbindings application bindings observablewrappercallnext busto setupchannel ready return completerpromise app applicationref gt approotcomponent webworkerappcomponent ref rootcomponentref gt web worker application ready unfortunately due absence last week nt think able make target going push back last delay pr ready evaluation amp review soon", "d": "8/2015"}, {"body": "appfooroot appfoocomponent ref rootcomponentref gt component ready callback runs application zone sure mean application zone cb run inside ngzone asynchronous code triggers change detection nt possible returns promise code would executed zone gets called", "d": "8/2015"}, {"body": "application zone associated application shared among application root components nt know much zones work returns changing mechanism type research see change detection broken currently callback though", "d": "8/2015"}, {"body": "cc review web worker part", "d": "8/2015"}, {"body": "alxhub see comment details returning would run callback calling zone ie outside angular ngzone", "d": "8/2015"}, {"body": "webworker design looks good", "d": "8/2015"}, {"body": "alxhub could change long form explicit phase need serverside applications compile asynchronous every request sync", "d": "8/2015"}, {"body": "two root components appfoorootcomponent appfoocomponent ref rootcomponentref gt component ready callback runs application zone appfoorootcomponent appfoosidecomponent ref rootcomponentref gt second component app ready use case two root components application nt whole idea application always root component", "d": "8/2015"}, {"body": "pascalprecht may want run several applications side side also ngupgrade need ability bootstrap lot child applications", "d": "8/2015"}, {"body": "dropped feature obsolete issue", "d": "8/2015"}, {"body": "tbosch still issue latest code base", "d": "8/2015"}, {"body": "vicb tag template tag keeping original content light dom shows", "d": "8/2015"}, {"body": "vsavkin tbosch still issue closed", "d": "8/2015"}, {"body": "yjbanov working better strategy closing obsolete", "d": "8/2015"}, {"body": "tbosch discussed dart team decided would best dart team write parseranalyzer addition action side situation much improved", "d": "8/2015"}, {"body": "vsavkin verify still issue", "d": "8/2015"}, {"body": "mprobst tools mind dart asking since tools tries enable treeshaking nt understand decorators type annotations maybe ts tooling treeshaking capability", "d": "8/2015"}, {"body": "idea use optimizing compiler like closure compiler supports tree shaking cross compiling indeed nt get type info maybe get gains like also interesting figure much could gain process eg worth make effort better feed closure compiler type info use different compiler matter also dariajung works", "d": "8/2015"}, {"body": "obsolete yjbanov working", "d": "8/2015"}, {"body": "related", "d": "8/2015"}, {"body": "yjbanov verify still issue close appropriate", "d": "8/2015"}, {"body": "yes although renamed updated description", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "obsolete tbosch closing", "d": "8/2015"}, {"body": "believe obsolete closing reopen feel otherwise", "d": "8/2015"}, {"body": "yes done thu aug pm mi\u0161ko hevery notifications githubcom wrote closed reply email directly view github", "d": "8/2015"}, {"body": "mhevery also find behavior really confusing chance revisited spent hour trying understand clicks intercepted event handler figure click events nt bubble unless explicitly tell thanks", "d": "8/2015"}, {"body": "urish better landed", "d": "8/2015"}, {"body": "pascalprecht great thanks", "d": "8/2015"}, {"body": "believe obsolete closing reopen feel otherwise", "d": "8/2015"}, {"body": "believe obsolete closing reopen feel otherwise", "d": "8/2015"}, {"body": "reopened looks like currently using right log level exceptions makes hard catch exceptions automated test look like regular exceptions", "d": "8/2015"}, {"body": "generic question issue closing possible write drag drop directives angular planning including core", "d": "8/2015"}, {"body": "taken dart team closing", "d": "8/2015"}, {"body": "resolved", "d": "8/2015"}, {"body": "longer supported obsolete", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "igorminar still relevant closed", "d": "8/2015"}, {"body": "support new", "d": "8/2015"}, {"body": "vicb still relevant close", "d": "8/2015"}, {"body": "let close create new issue need future", "d": "8/2015"}, {"body": "vsavkin comment", "d": "8/2015"}, {"body": "since paying sourcecode size penalty every change detector class considering encoding logic detector sort like goto statement another option would lightweight class eg subdetector nontrivial change take days maybe week implement", "d": "8/2015"}, {"body": "still done", "d": "8/2015"}, {"body": "mhevery nt canonical syntax events nt", "d": "8/2015"}, {"body": "ca nt since would collide", "d": "8/2015"}, {"body": "ah makes totes sense thanks", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "moved", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "given current injector design seems less likely going close let know feel strongly reopening", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "point template string possible pass promise additional modification could made simple", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "covered benchmarks", "d": "8/2015"}, {"body": "mlaval already working", "d": "8/2015"}]