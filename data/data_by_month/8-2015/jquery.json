[{"title": "css animationdelay attribute set variable", "body": "use variable change animationdelay css property note work something like background color animation attributes animationdelay also work string variable even variable explicitly set string method also work currently works", "num": "2561", "d": "8/2015"}, {"title": "avoid unnecessary reflow amp restyle ie support check nonie browsers", "body": "trying reduce reflows restyles web application improve rendering performance found unnecessary occurrence jquery already removed jquery since seems relevant ie would nt possible check legacy ie api like attachevent execute test case", "num": "2560", "d": "8/2015"}, {"title": "jqueryeach", "body": "change jqueryeach inject function like arrayprototypeforeach func arr arr instead func arr arr", "num": "2559", "d": "8/2015"}, {"title": "mouseenter disabled elements", "body": "plugin needs handle mouseenter elements contain disabled elements ca nt issue test case jquery pure event handlers find related issue ca nt satisfy need events", "num": "2558", "d": "8/2015"}, {"title": "nt expose jqueryacceptdata", "body": "similar nt expose cases reason exposed undocumented", "num": "2555", "d": "8/2015"}, {"title": "queryparam adds incremented keys arrays objects", "body": "outer gets incremented keys case value object nt get key empty value number string would expected tried jquery version", "num": "2550", "d": "8/2015"}, {"title": "location attr href", "body": "browser emulated call function throws exception saying function property called getattribute browsers worked location attr href location prop href", "num": "2549", "d": "8/2015"}, {"title": "parsehtml removes content windows store app", "body": "removes certain content html parsed used windows store app according security restrictions outlined however ruins functionality dependent example comments work like virtual element template binding knockoutjs could fixed changing innerhtml winjsutilitiessetinnerhtmlunsafe used windows store app", "num": "2548", "d": "8/2015"}, {"title": "jquerywhen nt recognize solitary thenables", "body": "look method argument differs behavior longer invocations treat non thenables identically cases", "num": "2546", "d": "8/2015"}, {"title": "improve whenthen nonajax usage", "body": "following code simple example chaining would expect work documentation way deferred used nonajax example explain structure code also makes code complicated ugly may well use traditional callbacks clean suggestion let handle javascript promise expected result synchronous functions fire instantly instead waiting previous async promises resolve javascript var count var functionasync function return new promise function success fail settimeout function success var functionsync function return new promise function success fail count documentbody html count success functionasync functionsync functionasync functionsync addition promise returned next function called immediately unwrap function promise functionsync many others struggling bizarre terminology workflow ugly code feature even misunderstood everything documentation needs improved", "num": "2545", "d": "8/2015"}, {"title": "replacewith time p tags parsing error", "body": "test test var test test clone view testfind view viewclosest drag replacewith viewhtml consolelog testhtml error output wrong test wrong test", "num": "2544", "d": "8/2015"}, {"title": "jquery compatibility", "body": "hi case happened ie used jquery version project poped message said date yet define lead application runi tested ok jquery version problem worse project need bootstrap framework supports framework requires jquery version ca nt use othe low verion", "num": "2543", "d": "8/2015"}, {"title": "cache folder travis build", "body": "see", "num": "2541", "d": "8/2015"}, {"title": "use new qunit interface", "body": "", "num": "2540", "d": "8/2015"}, {"title": "chrome ff position offset nt work correctly within v", "body": "case setting element following element find height element subtract get accurate top position", "num": "2539", "d": "8/2015"}, {"title": "scripts inner html exectuted sequentially order", "body": "inner html contains scripts one external inline executed sequentially order sample demonstrating issue sample uses inner html contains external script twitter widget following inline script uses object previous external script project wickwood inline script generated dynamically put separate file run fiddle get console debugging see script tags processed scripts considered correct order unknown reason external script get loaded till inline script executed search find already reported find workaround thanks", "num": "2538", "d": "8/2015"}, {"title": "ca nt read transition css microsoft edge", "body": "sure case illustrated browsers would log transition edge empty string", "num": "2535", "d": "8/2015"}, {"title": "jquery truck factor", "body": "part phd research code authorship calculated truck factor tf popular github repositories probably know truck bus factor designates minimal number developers hit truck quit project incapacitated work consider system trouble files become orphan ie without main author details work preprint calculated tf jquery obtained value developers responsible tf timmy willison author files jaubourg author files john resig author files micha\u0142 go\u0142\u0119biowski author files validate results would like ask jquery developers following three brief questions agree listed developers main developers jquery b agree jquery trouble listed developers leave project eg win lottery less morbid c jquery characteristics would attenuate loss listed developers eg detailed documentation thanks advance collaboration guilherme avelino phd student applied software engineering group aserg ufmg brazil", "num": "2533", "d": "8/2015"}, {"title": "modify ajaxconvert return promisethenable", "body": "internal function always returns synchronously makes impossible support new techniques async jsonparse defining custom converters considering ajax already asynchronous unreachable private scope propose modify return promisethenable considered beneficial patch tests week", "num": "2532", "d": "8/2015"}, {"title": "npm shim module jquery compatibility build", "body": "hi chance get npm package jquerycompat multiple releases tracking nonbeta versions based looking thread shim modules seem like easiest way get want using npm browserify bundle stuff reasons use certain bundles others basically something like way lodash lodashcompat package require needed", "num": "2531", "d": "8/2015"}, {"title": "data new dataasexpando implementation uses delete dom nodes", "body": "data changes started similar originally see previously left data property nodes never deleted nt issue originally discussion jsperf mentioned still shows improvements using assign instead delete latest chrome", "num": "2530", "d": "8/2015"}, {"title": "call", "body": "hello jquery community first demo relevant output show browser console screenshot shows line jquery problem happens see source demo found situation delegate click event handler targets elements specific attribute custom element uses templates create simple list items item button remove parent item list happens click items button removes element event reaches jquery event handler time event arrives item removed placed document fragment jquery tests event selector document fragment fails course guess fix would simply check element tested selector actually attribute api", "num": "2529", "d": "8/2015"}, {"title": "ajax response parsed correctly ios chrome browser", "body": "developing web application use ajax request retrieve data server side application function working fine desktop browsers mobile browser except iphone chrome ajax request sent correctly data returned server empty ajax success callback function", "num": "2528", "d": "8/2015"}, {"title": "npmignore", "body": "hi add please srcsizzletest npm ignore node packages small possible", "num": "2527", "d": "8/2015"}, {"title": "jquery munges wheel event", "body": "two properties see mdn properties absent event jquery provides event outputs", "num": "2523", "d": "8/2015"}, {"title": "exclude parameter get request", "body": "example javascript var params str string lang null defparams lang en getparams jqueryextend defparams params object lang null str string jquerygetjson getparams get request sent address need essence question value option completely removed url address test using jqueryparam see empty values present url address request", "num": "2522", "d": "8/2015"}, {"title": "nt install jsdom requires python amp visual studio windows", "body": "hi problems like title says terminal says ca nt find python executable tell author fails system nodegyp rebuild tell author fails system npm install amp amp grunt also says need include file npmdebuglog support request ca nt find file nt exist needed copy pasted everything written terminal running jsdom task contextify install c usersanthonywebsitejquerynodemodulesjsdomn odemodulescontextify nodegyp rebuild c usersanthonywebsitejquerynodemodulesjsdomnodemodulescontextify defined npmconfignodegyp node c program filesnodejsnodemodulesnpmbi nnodegypbin nodemodulesnodegypbinnodegypjs rebuild else build gyp err configure error gyp err stack error ca nt find python executable python set pyt hon env variable gyp err stack failnopython c program filesnodejsnodemodulesnpmnod gyp err stack c program filesnodejsnodemodulesnpmnodemodulesnode gyp err stack fsreqwraponcomplete evalmachine gyp err system windowsnt gyp err command node c program filesnodejsnodemodulesnpmnodemodu lesnodegypbinnodegypjs rebuild gyp err cwd c usersanthonywebsitejquerynodemodulesjsdomnodemodulescon textify gyp err node v gyp err nodegyp v gyp err ok npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejs nodemodulesnpmbinnpmclijs install jsdom npm err node npm err npm npm err code elifecycle npm err contextify install npm err exit status npm err npm err failed contextify install script nodegyp rebuild npm err likely problem contextify package npm err npm npm err tell author fails system npm err nodegyp rebuild npm err get info via npm err npm owner ls contextify npm err likely additional logging output npm err please include following file support request npm err c usersanthonywebsitejquerynpmdebuglog warning use force continue aborted due warnings npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejs nodemodulesnpmbinnpmclijs run build npm err node npm err npm npm err code elifecycle npm err jquery build npm err exit status npm err npm err failed jquery build script npm install amp amp grunt npm err likely problem jquery package npm err npm npm err tell author fails system npm err npm install amp amp grunt npm err get info via npm err npm owner ls jquery npm err likely additional logging output npm err please include following file support request npm err c usersanthonywebsitejquerynpmdebuglog", "num": "2519", "d": "8/2015"}, {"title": "common event dom manipulation", "body": "hi looking long time currently common event dom manipulation event fired function calls event fired document window changes dom detected", "num": "2517", "d": "8/2015"}, {"title": "animate nt anything apparently random page loads", "body": "using jquery latest chrome firefox windows bug seems happen randomly maybe every times reload web app also happened people browsers want animate width element fixed value call callback simply logging success message console time works perfectly fine rare occasions load web app instruction nt anything width nt change end callback never called element never behavior remains reload page matter many times try call however still change css properties directly animate elements unfortunately since bug reproducible provide fiddle able investigate saw happen dug issue console", "num": "2516", "d": "8/2015"}, {"body": "mentioned official site jquery", "d": "8/2015"}, {"body": "read page completely missed part sorry however nt explain case nt really understand would want null rather array since would expect array cases items selected", "d": "8/2015"}, {"body": "sure exatly guess told use like nothing short circuit evaluation used set default values means null case fiddle", "d": "8/2015"}, {"body": "documented way since jquery likely breaking lot code changing behavior nt recall done way neelbhatt says easy get result want", "d": "8/2015"}, {"body": "ugh actually one test empty array another recent test null even though returning longstanding might want change consistency", "d": "8/2015"}, {"body": "agree inconsistent keep like reopen others voice opinions", "d": "8/2015"}, {"body": "careful changing case nt change successfulness control agree pretty inconsistent people may depending current values behavior see", "d": "8/2015"}, {"body": "set val called inside map callback returning effect returning ie contribution context element", "d": "8/2015"}, {"body": "okay resolved nt know delete solution", "d": "8/2015"}, {"body": "ca nt delete issue close please future impossible api breaks pass parameter via variable pure javascript jquery nothing", "d": "8/2015"}, {"body": "nt use browser sniffing unrelated inferences use featurebehavior detection example however note offending reflow happens waits dom ready even much may able switch jquery depending browser support", "d": "8/2015"}, {"body": "mistake already removed expect see jquery compat", "d": "8/2015"}, {"body": "unfortunately use jquery yet one hand understand suggestion pure however code specifically written ie unlikely another noniebased browser ever problem based assumption code also removed jquery compat therefore really understand code ignored nonie browsers runtime end removing code certain browser supported anymore checking code certain browser different", "d": "8/2015"}, {"body": "joelrich based assumption code also removed jquery compat therefore really understand code ignored nonie browsers runtime said test removed present jquery compat possible dropped support jquery compat jquery compat continuation jquery jquery continuation jquery currently maintained code contains code sure asking remark general user agent strings notoriously unreliable changed browsers changing particular sites present compatibility issues started relying introducing code may break various circumstances sometimes browsers user agents emulate browsers ones website compatibility checking user agents generally futureproof notably less true ie even microsoft trying get browsers mixed old ies still danger worth case code mentioned gone nothing regarding bug report", "d": "8/2015"}, {"body": "mzgol idea would change releases planned suggestion check ie legacy api like attachevent user agent sniffing alternatively could also use ie conditional comments described", "d": "8/2015"}, {"body": "joelrich releases planned except something critically important discovered happened welcome test jquery compat nt need support nt put production yet alpha suggestion check ie legacy api like attachevent user agent sniffing opera well checking unrelated api dangerous option case", "d": "8/2015"}, {"body": "nt think additional releases planned lines limited resources maintain support test multiple branches problem unrelated legacy apis feature inferences often go bad given age browsers may history shown risky conditional comments often eaten source code processors even mobile carriers use onthefly compression remove comments makes maintenance headache library code potentially processed published like jquery", "d": "8/2015"}, {"body": "ok thanks explanation consider jquery compat ready", "d": "8/2015"}, {"body": "backwards compatibility prevents us making change see also probably duplicate", "d": "8/2015"}, {"body": "confirmed thanks report", "d": "8/2015"}, {"body": "new way help fix issue help understand issue", "d": "8/2015"}, {"body": "jquery uses implement says bubble makes impossible use delegated events however test case mzgol seem show chrome bubbling even though nt supposed jquery also used originally standard ie implemented sure whether supported browsers whether implement properly whatever means depend follow spec bubble event although test breaks chrome firefox works fine nothing spec says browsers suppress event disabled element sure spec says form control disabled must prevent click events queued user interaction task source dispatched element bit pinch chrome firefox fix implementations suppress get spec say must suppressed could change use native get spec changed say event bubbles commitment change", "d": "8/2015"}, {"body": "however test case mzgol seem show chrome bubbling mouseenter even though nt supposed nt bubble happens since hover div time hover button native fired independently since button disabled nt fire button still div check hovering divonly part moving button native fires sure whether supported browsers mouseenter whether implement properly whatever means chrome firefox edge amp ie support safari sure support anyway safari critical bug ca nt use implementation fixed safari need delegated events work jquery mouseenter amp mouseleave though sure switch native implementation missing something ie although test breaks chrome firefox works fine works edge well nt copy chrome bit pinch chrome firefox fix implementations suppress get spec say must suppressed good point could change use native mouseenter get spec changed say event bubbles bubbles also please see wrote event delegation", "d": "8/2015"}, {"body": "right mzgol misinterpreted event bubbling definitely showing entering div think really need browsers allow disabled elements want work right use instead since bubble", "d": "8/2015"}, {"body": "use instead since bubble rely native ie browsers nt pass test checked use regular capture phase would work well real problem hover disabled button without intermediate step form hovering div ie button touches border div native fires native nt either bubble capture phase way us fix would rely capture phase available similarly treat might doable still like know first behavior standardsintended though even amp chrome amp firefox fixes behavior still patch safari also workaround attach one handler capture phase amp simulate regular one might performance implications need measure make sure regressing much", "d": "8/2015"}, {"body": "think wrong mouse events click nt fire disabled elements find whether changed nt think way us work around assume goal fix find whether mouse disabled element nt lot options fires parent button ca nt tell hovering button", "d": "8/2015"}, {"body": "today meeting mzgol pointed really two issues specific issue reported could addressed without dealing root cause disabled elements firing events pretty specific edge case though radical change example switching directly possible likely encounter bugs like one mentioned safari going ping folks find reason seeing look changing code behavior nt seem required spec prevents useful things like info tooltips disabled buttons", "d": "8/2015"}, {"body": "hm guess one might argue function could useful plugin writers seems stop exposing instead documenting", "d": "8/2015"}, {"body": "arschmitz scottgonzalez use mobileui", "d": "8/2015"}, {"body": "another option still expose use internal var instead save bytes support overriding today also copied data overriding would buggy anyway", "d": "8/2015"}, {"body": "timmywil used either ui mobile", "d": "8/2015"}, {"body": "timmywil used either ui mobile seems good stop exposing jbedard would like send us pr", "d": "8/2015"}, {"body": "another option still expose use internal var instead save bytes support overriding exposing mean putting object accessible compiled version use amd modules get lot internal stuff already nt guarantee file hierarchy nt change might even patch release", "d": "8/2015"}, {"body": "standard governing way javascript objects encoded query string behavior consistent many versions incentive us change possibly break existing code reason avoid json encoding well defined servers libraries parse", "d": "8/2015"}, {"body": "yes standard nt even consistent possibility make consistent break exising apps would introduce new flag like existing flag defaulting old inconsistent behaviour understand considered much trouble questionable benefit thought report stroke odd must overlooked big yellow boxes docs", "d": "8/2015"}, {"body": "purpose friends mimic way browsers serialize form inputs uncharted territory pass complex javascript objects since json already solves problem wellsupported nt lot reason come second way already yellowbox note suggesting people use json cases looks like trying serialize javascript data structures string would like use json", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "answer helped change code user locationhref believe jquery inconsistency trying tell", "d": "8/2015"}, {"body": "marceloodiniz literally first link dmethvin google location element dom thus jquery select", "d": "8/2015"}, {"body": "try support windows store apps using apis restricted security reasons one example setting name amp type attributes using windowsspecific nonstandard apis nogo restrictions introduced reason nt hack around could share example code breaks current jquery please test development version least latest alpha well", "d": "8/2015"}, {"body": "agree mzgol api explicitly word trying tell something nt circumvent restrictions likely open security holes use jquery directly follow restrictions listed reference jquery work properly case framework explicitly depends things like html comments semantic meaning injected document sure really good workaround could add sort trap door inside jquery allows user replace seems irresponsible point used reliable way tell good calls evil ones present nt test windows store app scenario talking microsoft integrate ci environment want jquery work course jquery functioning also knockout whether knockout used windows store apps something testing ci least directly knockout team would need commit ensuring worked", "d": "8/2015"}, {"body": "thought going crazy currently outputs console", "d": "8/2015"}, {"body": "example incorrect accepts function parameter passing promise initial async promise resolved sync promises created see printed async operation happens also jquery deferred follow promisesa spec mandates handlers always invoked asynchronously working example", "d": "8/2015"}, {"body": "improved example must still argue first function firing time initial function seems second synchronous function line functions correctly waits previous async function complete understand function invoked asynchronously invoked previous function queue completed notice shows straight away instead waiting first async function complete edit ok passing anything moving right onto solves problem confusing since returning resolved promise redundant something definitely wrong terms usability", "d": "8/2015"}, {"body": "new example still incorrect value passed example promise returned function passing function function considered resolved value results first executed without delay", "d": "8/2015"}, {"body": "scottgonzalez mzgol one instance return promise next return function obviously work like nt consistency majority use cases example edge case means example remove jquery equation see much cleaner original spec code want simple crossbrowser solution possible anything change example simplify jquery", "d": "8/2015"}, {"body": "example remove jquery equation direct equivalent jquery version allow take regular value amp wrap promise resolves thenable changed promise resolving value thenable therefore function nothing special passed functions promise regular value wrap promise resolve function course know promise get kind promise use code nt need conversion step enough attach directly promise hence nt need use example get another kind promise eg jquery promise code using promises promise code using jquery ones need convert first using hand accepts success andor error callback parameter gets invoked promise resolves equivalent way surprising accept different kind input afraid entering stack overflow area though please search help definitely bug jquery reported concepts struggle required comprehend able write promisebased code using jquery also using standard promises one resources might want read pretty comprehensive nt know js chapter promises", "d": "8/2015"}, {"body": "finish thing see currently wrong afaik nt convert another thenable jquery promise covered words print seconds immediately", "d": "8/2015"}, {"body": "mzgol great answers thank keep eye issue addressing example cover exact problem idea would mean seemed brokenmisleading hence confusion terminology hopefully solve thanks", "d": "8/2015"}, {"body": "krazyjakee ok apparently covered issue discovered bug thanks issue thanks pointers", "d": "8/2015"}, {"body": "mzgol sorry could nt direct descriptions see starting make use new features javascript thanks", "d": "8/2015"}, {"body": "valid inside browser infers tag start tag end correct behavior independent jquery", "d": "8/2015"}, {"body": "made popup layer close jquery ajax success problembut put close popup layer method jquery ajax method outside code good", "d": "8/2015"}, {"body": "please search programming help jquery forums stack overflow bug report need concrete information code sample reproduces problem ideally test case jsfiddle jsbin", "d": "8/2015"}, {"body": "thank much learn jquery time short recommend useful jquery forums appreciate much", "d": "8/2015"}, {"body": "nt think good idea lead travis succeeding fresh clone fail install newer dependencies got broken travis old working ones guess us also notice unless habit removing locally amp reinstalling deps regularly oth travis really fast wo nt speed build significantly", "d": "8/2015"}, {"body": "guess forgetting two cis", "d": "8/2015"}, {"body": "guess forgetting two cis good point considering fast travis jquery repository promisesa tests added whole build completed seconds reasons introducing cache", "d": "8/2015"}, {"body": "nt understand question upside downside", "d": "8/2015"}, {"body": "downside eg might miss broken subdependency nt commits recently someone submits pr merged notice jenkins crashes also one day might switch travis completely wo nt notice problem visible upsides saving seconds build nt real upside", "d": "8/2015"}, {"body": "merged notice jenkins crashes never happened chances never happen third party dep dep influence original dep tremendously order us fail even sure happen anywhere ever even could nt anything case wait dep dep would release another version fail would noise could nt even downgrade since original dep could use bad dep tilde caret since first version conjunction question also one day might switch travis completely wo nt notice problem seems try solve issue nt exist situation would indeed dangerous travis caching feature considered dangerous since would issue would issue node community every oss community", "d": "8/2015"}, {"body": "merged notice jenkins crashes never happened chances never happen third party dep dep influence original dep tremendously order us fail even sure happen anywhere ever happen project least twice projects usually depend lot subdependencies wrapped grunt plugin plugin usually thin wrapper around library library matters one failures eslint bug one rules nt catch one edge case fixing bug broke build specific linting bug code even could nt anything case wait dep dep would release another version fail would noise could nt even downgrade since original dep could use bad dep tilde caret since first version pin subdependency version directly fits semver range used least works way npm apply temporary shrinkwrap sometimes downgrade dependency older version temporarily temporarily disable broken functionality build broken sometimes plugin releases new version pinned older subdependency upgrade seen quite often lot things one worst know situation would indeed dangerous travis caching feature considered dangerous since would issue would issue node community every oss community generalizing way much ruby modules usually pin subdependencies file npm angularjs uses shrinkwrap travis caching builds deterministic lot deps though btw nt reply visible gains gains even small faults discredit solution", "d": "8/2015"}, {"body": "happen project bug already code proposed changes like pr already landed said never happens case would notice jenkins pin subdependency honestly options sounds awful wait trush commit history lot things one worst know talking bug dep issue would dissappear would prefer generalizing way much maybe case afraid projects would excluded danger yes loot would still vulnerable btw nt reply visible gains thought faster future might try use babel example least try use exportsimports constructions babel takes lot deps story switch full server js express karma phantom etc story use wd integration tests story would real node tests future bright lot dev deps", "d": "8/2015"}, {"body": "happen project bug already code proposed changes like pr already landed said never happens nt matter bug build worked one day broken later without changes please nt say never happens exactly described happen oo lot things one worst know talking bug dep issue would dissappear would prefer issues disappear one project described one example something never disappears fix code thought faster future might try use babel example least try use exportsimports constructions babel takes lot deps story switch full server js express karma phantom etc story use wd integration tests story would real node tests future bright lot dev deps always enable cache becomes real problem lot deps might even want use shrinkwrap hard project need future", "d": "8/2015"}, {"body": "nt matter bug build worked one day broken later without changes missing point never happens meaning dep dep never breaks significantly would break build broken case dependencies actually fixed might notice jscs preset updated quite lot past six months jquery builds never broke know use jscs dep patch versions jscs never show errors previous patch version meaning would never break code like eslint would explicitly ask putting caret front version number yes people say eslint would makes sense break code edge bug fixed maintainer responsibility fix bug show ppl since bug already code would happen us like jshint implicitly updated nt need show error contributor since might provoke contributor fix unrelated part code would commit would two unrelated things two commits one pr would different things contributor fixed pr would failed pr merge commit fix asap ask contributor rebase situations might discourage contributor submit fix continue work us pr submitted would actually better would notice failure jenkins", "d": "8/2015"}, {"body": "previous meeting decided wait would become issue could resurrect discussion", "d": "8/2015"}, {"body": "html new twtrwidget remote script executes asynchronously inline script executes synchronously given try always run synchronously backwards compatibility crossdomain scripts nt see options within jquery update inline script introduce grace period definition", "d": "8/2015"}, {"body": "even could run sync would bad idea anyway would perpetuate bad practice holding main thread really best way would use execute initialization suppose could define inline html script evaluation chain async deferreds make seqential problem would getting access end chain know ready many methods inject html also creates deferred dependency manipulation nt one today", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "seeing value possible get individual values", "d": "8/2015"}, {"body": "yeup right also windows expected behavior", "d": "8/2015"}, {"body": "shorthand properties little flaky general something jquery ca nt control setting via shorthand usually works fine getting shorthand properties iffy good example try get shorthand borders set uniquely different sides", "d": "8/2015"}, {"body": "see quite unfortunate still browser specific quirks even within jquery getting individually", "d": "8/2015"}, {"body": "looks like tf calculating may weight percent files highly versus contributions individual files example detail calculation new files created example result reorg done switched amd person files regardless whether wrote code also weighted way based age contributions look contributor graph see people mentioned made recent commits nt think project trouble result", "d": "8/2015"}, {"body": "alltime percentages properly right indicators limiting last year would probably give much accurate result", "d": "8/2015"}, {"body": "author files mostly moved lot code around see latest author via ignore wisdom went creation files amp evolution time", "d": "8/2015"}, {"body": "appreciate concept effort putting project suggestions made comments inclined go ahead close facilitate triage feel free continue discussion ticket closed", "d": "8/2015"}, {"body": "ajax always asynchronous option still exists", "d": "8/2015"}, {"body": "dcherman yes interface via already async callbacks thenable suppose could something created side effects synchronous manner without using callbacks believe explicitly opted use goal able write async converters able make run synchronously asynchronously necessary", "d": "8/2015"}, {"body": "quite true plumbing calls inside implicitly asyncsync point example user could callback promise could still use converter sure whether support async filters converters may break assumptions certainly would break assumptions sync ajax exceptions maybe way around", "d": "8/2015"}, {"body": "guess would nt use fetch right usecase usecases", "d": "8/2015"}, {"body": "stands still relatively immature still much api comparison suspect used parallel time achieving sort feature parity plus latent cost migration efforts suspect jquery important part migrating people adding support async converters creates bit technical bridge use case app dependence upon ember data turn delegates make requests server responses push parse times threshold want handle parsing asynchronously using goals nt want replace battletested handrolled version want intermediate step gt transition want enable every application using ember data immediately benefit technique improving entire ecosystem enable support future asynchronous apis allow converters become async well see simply early encounter numerous async dom network apis come", "d": "8/2015"}, {"body": "cc jaubourg", "d": "8/2015"}, {"body": "know alone need last month got question jquery india someone trying parse json response sob", "d": "8/2015"}, {"body": "maybe missing point necessary address ajax converter rather jqxhr", "d": "8/2015"}, {"body": "thought well one unfortunate problem coupled setting header suggesting header always couple workarounds set header manually nt depend jquery depend implementation details ajax set handler prefilter would nt work since get run headers set", "d": "8/2015"}, {"body": "override although admittedly implementation details land way slice magical tries", "d": "8/2015"}, {"body": "depend implementation details ajax set optionsdatatypes text beforesend handler prefilter would nt work since get run headers set although admittedly implementation details land way slice property part public api extendable part jquery pretty much nothing ca nt sure option somewhere make coffee look hard enough", "d": "8/2015"}, {"body": "like idea principle yes converters actually place handle support contenttype detection said prpoc solution needs support chaining converters code would much simpler request async could used great effect internally still handle sync requests", "d": "8/2015"}, {"body": "markelog jsfiddle messes header like described previous comment provided another workable alternative though blow away json converter maintain correct header still manual parsing curiosity wonder pros setting responsetype xhr using property browsers support tested still seemed freeze ui parsing nt seem beneficial piping responsetext jsonparse", "d": "8/2015"}, {"body": "jsfiddle messes accept header like described previous comment nt say nt initialy thought meant user could defer parsing method know see point tested still seemed freeze ui parsing besides last time checked issues json incorrect parsing give meaningful output browser still handle sync requests sync requests deprecated spec spec encourages browsers warn user vendors hand already partly deprecated since discussion removing timmywil dmethvin", "d": "8/2015"}, {"body": "thank comments review seems like general mood thread async converters something wish enable past first bits conversation focusing implementation alternative approaches accomplishing goal opposed value enabling implying rough consensus value provides implemented part goal right thing believe enabling async converters next day two iterate solution address known gaps use browsersafe solutions add tests tests currently pass without working converter chaining holes coverage get polished state landing misread room mood let know", "d": "8/2015"}, {"body": "generally opposed see adding complexity already cumbersome system given druthers converters theirselves would fully separate transports et al bridging two demonstrated already possible want existing api notably using way works around automatic behavior said though could convinced particularly good pr", "d": "8/2015"}, {"body": "see latest update painted us corner unsure get", "d": "8/2015"}, {"body": "test function see code nothing implementation promise libraries detect thenables hence name thenables", "d": "8/2015"}, {"body": "jaubourg yes problem valid converter ducktyped thenable unable protect user case assume intent provide error messages much prefer defensive apis duck typing especially library code ca nt figure way accomplish using disallowed values implementation detail especially nonrecoverable manner result lot nasty surprises jquery enough places seems inevitable would bite somebody", "d": "8/2015"}, {"body": "think overthinking first jquery support changing non issue library break long reach conversion logic secondly every javascript library handles thenable like even rsvpjs promise library used inside emberjs today pretty much coding error create object method promisestandard compliant got enough slack regarding know said decide go make happy sure would shame based design considerations apply jquery sense would place whole library considered", "d": "8/2015"}, {"body": "jaubourg said every method assumed honor promisesa point inside outside jquery cause block", "d": "8/2015"}, {"body": "yes copying old tags final release jquerycompat", "d": "8/2015"}, {"body": "cool thank", "d": "8/2015"}, {"body": "timmywil note enough copy tags every one needs get name jquery packagejsonbowerjson changed jquerycompat afterwards every tag older consistent main jquery package needs checked published npm via npm publish pointing little involved copying tags", "d": "8/2015"}, {"body": "good point think still worth", "d": "8/2015"}, {"body": "unable reproduce demo provide reduced test case eg without polymer git build preferably somewhere like js bin easy us tinker", "d": "8/2015"}, {"body": "haha sorry accidentally uploaded temp workaround timeout waits till event bubbled remove element demo js bin sorry nt prepare demo without polymer knowledge templates narrow set something like posted issue polymer repository got explanation maybe provides clues going also better workaround problem conversion", "d": "8/2015"}, {"body": "simple repro", "d": "8/2015"}, {"body": "looks like needed well ie listened dcherman", "d": "8/2015"}, {"body": "thanks report need concrete test case able procede report vague hard get anything", "d": "8/2015"}, {"body": "facing issue ios chrome latest version web application completely fine mobile browser still response receive ios chrome please help", "d": "8/2015"}, {"body": "duplicate thanks report discussed length people need source files need published going split separate packages much maintenance burden", "d": "8/2015"}, {"body": "btw test folder already published", "d": "8/2015"}, {"body": "mzgol nt talk sources directory nt see repo", "d": "8/2015"}, {"body": "version think remember something removed jquery wo nt contain check see looks like", "d": "8/2015"}, {"body": "mzgol default npm loads", "d": "8/2015"}, {"body": "okay waiting stable", "d": "8/2015"}, {"body": "yeah publishing mistake ca nt reverse fine see sth wrong jquery alphabeta packages please report fix time", "d": "8/2015"}, {"body": "jquery copies commonly used event properties event nt implemented browsers support still find browsers support event full support event please use either jquerymousewheel exposes event uses hood available nt need support older browsers like may try jquerywheel", "d": "8/2015"}, {"body": "see also", "d": "8/2015"}, {"body": "see empty values present url address request providing empty values get empty parameters nt want parameter request expected would remove property object literal even declare value paramslang option completely removed url address ca nt remove parameter messing property extending objects remove property object end javascript var params str string lang null defparams lang en delete paramslang lt delete defparamslang lt getparams jqueryextend defparams params object str string delete getparamslang jquerygetjson getparams", "d": "8/2015"}, {"body": "maybe makes sense include parameters value undefined string let explain code like javascript ajaxsetup data lang en key someaccesskey function callapi method options jquerygetjson method options used obvious solution add callapi condition approach causes lot problems unnecessary steps", "d": "8/2015"}, {"body": "since nt bug report close programming help found jquery forum stackoverflow", "d": "8/2015"}, {"body": "anthomaxcool need visual studio installed windows able install compiled dependencies one install iojs instead nodejs require visual studio jquerycore lot people seem problem compiled deps windows dep requires compiling since iojs going soon merge nodejs likely nodejs first release months starting think skip jsdomrelated tests nodejsiojs older always install latest one ie put installation work nodes using fail old nodejs current jsdom nt support nodejs anyway maybe nt support versions supported upstream leave open consideration next meeting", "d": "8/2015"}, {"body": "thanks fast reply mzgol visual studio installed ultimate visual studio", "d": "8/2015"}, {"body": "error posted seems nt python installed also looking readme seems might need visual studio instead sure true though unfortunately state things compiled packages work windows currently installing python wo nt help upgrade nodejs would easier install iojs use instead", "d": "8/2015"}, {"body": "alright thanks lot time help look foward iojs", "d": "8/2015"}, {"body": "pr", "d": "8/2015"}, {"body": "thank opening issue something implement jquery guarantee work across browsers source unexpected behaviors", "d": "8/2015"}, {"body": "probably want look mutationobserver", "d": "8/2015"}, {"body": "thank opening issue without reproducible test case nothing", "d": "8/2015"}, {"body": "pr", "d": "8/2015"}, {"body": "pr", "d": "8/2015"}, {"body": "although nt quite right approach think main issue normal path code takes generates error blob seems like fix specific problem inside jquery already fix area done issues resolved via approach took outside jquery using extensions provides", "d": "8/2015"}, {"body": "please try open console look", "d": "8/2015"}, {"body": "sure much value changing tool use conventionalchangelog looks decent also ton dependencies either way would nt change jquery part jqueryrelease", "d": "8/2015"}, {"body": "going close since nt see way work around jquery without introducing bugs decreasing performance setter overall hopefully lot css properties suffer behavior workaround hard", "d": "8/2015"}, {"body": "thanks reporting anyway", "d": "8/2015"}, {"body": "btw android market share last month created issue going extreme speed half year almost nonexistent trend continues", "d": "8/2015"}, {"body": "thats said plus market share dropped four months extrapolated data assume tendency another four months share go lower standart pretty big argument removal", "d": "8/2015"}, {"body": "well could still install ie nt necessary mean somebody note stats show browser market os market meaning ppl actually buying nt mean use default browser fact looks like primary clientele opera mini looking much lower percentage plus market share dropped four months extrapolated data assume tendency another four months share go lower standart pretty big argument removal consider android add numbers ios ms browsers would tiny like really tiny add desktop browsers share would practically nonexistent btw android market share last month created issue going extreme speed half year almost nonexistent trend continues think one two thing drop support master keep compat still suffer although little less reason android problems happen often master compat drop support branches redirect people still needing support amp jquery lines prefered second one still need android remain let push web forward slim easy lib", "d": "8/2015"}, {"body": "btw average android run looks like manually restarting jobs timed hard miss critical bugs used fact half tests time default", "d": "8/2015"}, {"body": "fixed sizzle added awaiting sizzle update label", "d": "8/2015"}, {"body": "replace prophook fix let make sure understand correctly suggest switch jquery users define proper need support need workaround issue", "d": "8/2015"}, {"body": "correct", "d": "8/2015"}, {"body": "really think could drop android android statistics", "d": "8/2015"}, {"body": "assume issue making sure always creating new deferred also treating regular value words print seconds immediately", "d": "8/2015"}, {"body": "actually separate issue blocker fortunately easy enough fix though thanks report", "d": "8/2015"}, {"body": "also noticed forced layout repaints ff progress regarding issue", "d": "8/2015"}, {"body": "havenchyk yet issue future milestone currently focusing finishing still lot additional perf tests pull requests tests confirming improve performance could make possible make would nt hold hopes high otherwise", "d": "8/2015"}, {"body": "btw issue dmethvin linked fixed maybe getters huge problem anymore still prs welcome especially perf tests", "d": "8/2015"}, {"body": "think problem jquery side would fixed solution proposed jbedard least jquery event handling code original problem layout dirty coming handler attempt code event handler read properties depend layout force layout well highfrequency handler mousemove scroll defer changes requestanimationframe handler possible throttle change rate avoid kind problem", "d": "8/2015"}, {"body": "dmethvin mean problem side well disabled event handlers app timeline shows time taken triggers layout firefox chrome work smooth glad help determine really problem jquery help something", "d": "8/2015"}, {"body": "nt active event handlers jquery nt event handler attached either create test case jsbincom", "d": "8/2015"}, {"body": "dmethvin problems flexbox performance ff case sorry disturbing", "d": "8/2015"}]