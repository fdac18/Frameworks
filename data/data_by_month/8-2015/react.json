[{"title": "target value sometimes undefined", "body": "loop product list map create react component item click button sometimes etargetvalue defined sometimes undefined totally random clicking button times value sets magically undefined", "num": "4745", "d": "8/2015"}, {"title": "listen props parent component", "body": "hi want listen props parent component like parent component parent component let chartbox reactcreateclass mixins reactaddonslinkedstatemixin getinitialstate return chartstyle componentdidmount let chartwidth thisrefschartboxgetdomnode offsetwidth let chartheight thisrefschartboxgetdomnode offsetheight let chartstyle width chartwidth height chartheight thissetstate chartstyle chartstyle render return child component child component let chart reactcreateclass componentdidmount render return", "num": "4742", "d": "8/2015"}, {"title": "make test utils aware subtrees rendered containers rendersubtreeintocontainer", "body": "using react reactoverlay modal uses portal portal using appears test utils aware subtrees rendered containers search children nt get crawled means order test components first get instead able use testutils directly looked related discussions nt able find anything plans make test utils aware feature nice convenience", "num": "4741", "d": "8/2015"}, {"title": "getting dangerouslyreplacenodewithmarkup error unit tests jsdom jasmine", "body": "happens executing unit tests works fine browser though using dangerouslysetinnerhtml attribute solve problem exception thrown soon add new test case observations happens jsdom webkit working fine happens rendering view event simulated happens rendering string variables inside markup dangerouslysetinnerhtml solve fyi need exact steps explaining exact steps following series blog posts referring solving problem using dangerouslysetinnerhtml property regards nripendra", "num": "4740", "d": "8/2015"}, {"title": "reactbuild postinstall throw assertassertionerror", "body": "reactbuild postinstall usersjohndifooldevelopfacebookreact node scriptscheckdevenginesjs throw new assertassertionerror assertionerror current node version supported development expected satisfy object modulecompile objectmoduleextensionsjs moduleload functionmoduleload functionmodulerunmain startup npm err darwin npm err argv node usrlocalbinnpm install npm err node npm err npm npm err code elifecycle npm err reactbuild postinstall npm err exit status npm err npm err failed reactbuild postinstall script node scriptscheckdevenginesjs npm err likely problem reactbuild package npm err npm npm err tell author fails system npm err node scriptscheckdevenginesjs npm err get info via npm err npm owner ls reactbuild npm err likely additional logging output npm err please include following file support request npm err usersjohndifooldevelopfacebookreactnpmdebuglog", "num": "4738", "d": "8/2015"}, {"title": "datetime field nt register changes", "body": "using datetimelocal field setting date nt register change value setting value react nt know change fix would always set value datetime fields even virtual dom shows change accept limitation tested chrome supported ff", "num": "4733", "d": "8/2015"}, {"title": "shallow rendering uses throws deprecations", "body": "calling get seems places wonder broke entirely", "num": "4730", "d": "8/2015"}, {"title": "rendering input element string setting html dangerously nt fire onchange anymore", "body": "following input element return like callback fired input change however following onchange called preserve onchange", "num": "4729", "d": "8/2015"}, {"title": "question mapping children key prop child moves unmount remount", "body": "example suppose something like following render function happens change order things rerender component affected elements get methods called followed new foos getting methods called react keep elements reorder calling lifecycle methods", "num": "4728", "d": "8/2015"}, {"title": "reactelementvalidatorloggedtypefailures prevents test isolation", "body": "running react testing jasminecore testing component validation use jasmine method mock check trigger warning correct message validation fails use check validation working run unit test two separate test suites expects warning occur react globally tracks warnings triggered avoid spamming console seems nt send warning second time thus fails would expect would setup isolation render warnings checked properly", "num": "4725", "d": "8/2015"}, {"title": "using jsx reactelement children presented array opposed map", "body": "came across making test cases make sure mutating unexpected ways making clone notice property list attempt clone tree presumably something child nodes js let targetelement newchildren clonedelement targetelement newchildren reactchildrenmap targetelementpropschildren node gt something children nodes return reactcloneelement node clonedelement reactcloneelement targetelement undefined newchildren consolelog clonedelement get notice property map consider unexpected mutation tried remediating using ie js let targetelement newchildren clonedelement targetelement newchildren reactchildrenmap targetelementpropschildren node gt something children nodes return reactcloneelement node clonedelement reactcloneelement targetelement undefined objectvalues newchildren consolelog clonedelement produces identical object original also prompts following error bit odd considering create identical copy original jsx output object appears unexpected jsx parser behaviour might babel issue", "num": "4723", "d": "8/2015"}, {"title": "react component lose context seqmap", "body": "originally posted issue immutablejs advised move original react components lose context used within seqmap possibly due lazy evaluation fails resolving sequence explicitly like works expected behavior understanding converting immutables sequences recommended procedure passing react", "num": "4722", "d": "8/2015"}, {"title": "shallow rendering wo nt render primitive nodes", "body": "might intentional technically breaking change figured report following script js var react require react var testutils reactversionsubstring testutils require reactaddons addonstestutils else testutils require reactaddonstestutils var renderer testutilscreaterenderer rendererrender reactcreateelement hello consolelog renderergetrenderoutput js node samplejs type key null ref null owner null context null store props children hello originalprops children hello js node samplejs var inst new component publicprops publiccontext reactupdatequeue typeerror string function reactcompositecomponentmixinmountcomponent wrapper mountcomponent reactshallowrendererrender reactshallowrendererrender object modulecompile objectmoduleextensionsjs moduleload functionmoduleload functionmodulerunmain", "num": "4721", "d": "8/2015"}, {"title": "bug refs showing", "body": "component jsx class root extends reactcomponent render let cards thisdatacards let boardid thispropsboardid let index return mount like result consolelog statement componentdidmount method camera ref shows might", "num": "4718", "d": "8/2015"}, {"title": "communication betwen components", "body": "application list filters button change layout using two components lt filters change settings lt filters want trigger method update view make components interact", "num": "4715", "d": "8/2015"}, {"title": "incorrect handling prefixed styles", "body": "rendering react dom element style properties style object treated special eg adding px numbers particular styles however provided prefixed style like blacklist styles used would pretty awesome style prefixed like first converted nonprefixed kind lookup blacklist", "num": "4714", "d": "8/2015"}, {"title": "requires extra configuration typecheck flow", "body": "create brand new project directory create type check simple file faced bunch errors return missing annotation deferred required module found invariant required module found executionenvironment required module found sprintf required module found fetch required module found warning required module found easy work around add following configuration exactly relay project however great people could follow steps beginning issue create turnkey working system without required configuration maybe fbjs bug react bug nt sure best place file one belongs somewhere else happy redirect thanks", "num": "4713", "d": "8/2015"}, {"title": "use reactid get instance associated component", "body": "iterating react dom tree distinguish dom generated different components eg foo iterate distinguish children target component nodes thinking could use retrieve instance associated component api data held", "num": "4711", "d": "8/2015"}, {"title": "misleading warning message using getdomnode", "body": "says warning getdomnode deprecated plain javascript react classes use reactfinddomnode component instead use get warning deprecated please use instead therefore error message warning getdomnode deprecated plain javascript react classes use instead", "num": "4710", "d": "8/2015"}, {"title": "input losing focus render", "body": "works fine chrome etc issues basically onvalidchange event fired form becomes either valid invalid sets state ie onvalidchange fires rerenders form lose focus input seen people similar problems unable find good solution important parts class look bit like renderlogin var self render var self consolelog rerendering loginisvalid return thisstateloginvalid checkloginvalid var loginform thisrefs loginformref isvalid loginformisvalid", "num": "4709", "d": "8/2015"}, {"title": "reactdnd proxyquire invariant violation could find drag drop manager context mycomponent", "body": "using proxyquire stub subcomponents stores ran invariant violation components wrapped reactdnd contexts warning failed context types required context dragdropmanager specified dragsource card error invariant violation could find drag drop manager context card make sure wrap toplevel component app dragdropcontext read put together repo demonstrate error see run", "num": "4707", "d": "8/2015"}, {"title": "transfer context", "body": "hello project using technique similar take render inside another react tree connected child node problem descendants may want context empty separate tree use fresh call right using function like js export function extractcontext component let context componentreactinternalinstance amp amp componentreactinternalinstancecontext let internalcontext componentreactinternalinstancecontext let key internalcontext internalcontexthasownproperty key amp amp key context key internalcontext key extract context inside popup create wrapper takes context pushes new tree maybe better way transfer entire context without knowledge context internals", "num": "4706", "d": "8/2015"}, {"title": "best way get state value", "body": "hi want get value state immediately setting state value know callback method setstate taken correct current state value nt want write callback get value need provide two interfaces setvalue change state value getvalue get value state good practice", "num": "4705", "d": "8/2015"}, {"title": "components classes methods bound", "body": "writing components classes trying understand methods bind constructor say something like following code js import component react export default class componentname extends component constructor super thishandleclick thishandleclickbind handleclick e render return understand must explicitly bind constructor short using stage features examples seen looks like method bound default nt need something like constructor right lifecycle methods like documentation unclear also anything planned would change behavior", "num": "4699", "d": "8/2015"}, {"title": "reactjs ascii art issue jsx transformation", "body": "trying get ascii art properly rendered react application jsxtransformer executed art looses format renders pretty strange browser seems related identifying line breaks properly hello world var app reactcreateclass render function return lt pre gt lt code gt ditaa text diagram document magic lt code gt lt pre gt var element documentgetelementbyid content reactrender reactcreateelement app element example real context website generator starts markdown gt html gt jsx said change reactcreateclass element someone proposed var app reactcreateclass render function var ascii ditaa text diagram document magic join n fixes problem edit markdown elements reflect interested know jsx transformation identifying line breaks inside code blocks alan", "num": "4698", "d": "8/2015"}, {"title": "unfold children", "body": "hi writing library uses jsx abstract dsl bit like bit like others primitives explain question take example user could define customroute component render use like afaik wo nt detected traversing propschildren enough router see wo nt understand know possible solve basically want descent render tree stop user component native component like reach looking", "num": "4697", "d": "8/2015"}, {"title": "using server rendering invariant violation reactmount two valid unequal nodes", "body": "building gem enable use react redux rails webpack server rendering pretty far along gotten gem work turbolinks however running issue fragment caching created branch demonstrates issue note verified caching without turbolinks works ok see branch also caching turbolinks works issue reproduced following clone repo switch branch cachingfailure visit see server rendering worked open console see tracing messages click link top click back link react top see error message invariant violation reactmount two valid unequal nodes datareactid full error notes open specdummyappviewspagesindexhtmlerb remove cache block around line see working without fragment caching fragment caching removing react dom elements prior rendering reloading cache left tracing statements see rendering called unlikely caching changed rendering part includes call addremove listeners invoke client side rendering dom elements placed server generated html shown includes setup js hooks code inserted dom turbolinks possible reason guessing problem calling react exact code second time seems state maintained maybe page unloaded need tell react view helper looks like html html cdata windowappdata helloworlddata name prop rails server rendering var renderifdomnodepresent function var appdomnode documentgetelementbyid appdomnode consolelog zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz consolelog client side render consolelog zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz var reactcomponent app appdata reactrender reactcomponent appdomnode var turbolinksinstalled typeof turbolinks undefined consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog turbolinksinstalled turbolinksinstalled consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy turbolinksinstalled consolelog warning turbolinks detected js gemfile documentaddeventlistener domcontentloaded function event consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog domcontentloaded event fired consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy renderifdomnodepresent else function onpagechange event consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog page change event fired consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy var removepagechangelistener function consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog removed page change event listener fired consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy documentremoveeventlistener page change onpagechange documentremoveeventlistener page beforeunload removepagechangelistener consolelog removed event listeners documentaddeventlistener page beforeunload removepagechangelistener documentaddeventlistener page afterremove function consolelog page afterremove called renderifdomnodepresent consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog add turbolinks handler page change handler consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy documentaddeventlistener page change onpagechange gt hello prop rails server rendering say hello", "num": "4696", "d": "8/2015"}, {"title": "react classes starting lowercase nt call methods inside class", "body": "react class name starts lowercase letter methods inside class get called ie nothing renders nt get error message browser console see element dom empty contents case rename class change works see simple example get nothing browser console web page change btw drove nuts ran things try thought way could lower vs uppercase issue var myheader reactcreateclass componentwillmount function consolelog myheader componentwillmount componentdidmount function consolelog myheader componentdidmount render function consolelog myheader render return test reactrender documentbody", "num": "4695", "d": "8/2015"}, {"title": "take", "body": "props bit awkwardrandom per prior conversations jordwalke ie prop children special cased deciding factor certainly bit irksume theoretical computer science perspective feels cleaner current api bit ambiguous regards result since children specified two potentially conflicting values imagine third argument different value nt actually know would happen top head especially null case null treated like undefined third argument override second props means props object saved reactelement ca nt hoisted intelligent runtime would otherwise possible runtimestranspilers see nonchild props nt depend particular render could save thousands allocations per render importantly string compares expensive children occurs props means need additional string compare property iterate since need handle children prop special case mostly rfc issue something consider inline elements cc sebmarkbage", "num": "4694", "d": "8/2015"}, {"title": "get reactdom run webpack", "body": "hi always get message naive put console got mayor issues webpack mentioned answer wrong repository get correct reactdom module", "num": "4693", "d": "8/2015"}, {"title": "error invariant violation findallinrenderedtree instance must composite component", "body": "writing test case using mocha jsdom js import react react import testutils reactaddonstestutils describe reactoutsideevent gt captures mousedown event gt let detachedcoponent like obtain reference generated domnode foo produces also tried got error using", "num": "4692", "d": "8/2015"}, {"title": "know whether object reactelement", "body": "find like", "num": "4690", "d": "8/2015"}, {"title": "weird output rendering react server typescript", "body": "get result browser execute code server javascript import express require express import react react import helloworld appcomponentshelloworld var router expressrouter get home page routerget req expressrequest res expressresponse next function gt resrender index output reactrendertostring reactcreatefactory helloworld export default router javascript import react react interface props class helloworld extends reactcomponenthello world export default helloworld know issue react module", "num": "4689", "d": "8/2015"}, {"title": "disable checksumming sanity checks", "body": "nt seem documented anywhere mentioned possible parameters line code change etc also welcome insight things disable make render process faster cpu wise", "num": "4681", "d": "8/2015"}, {"title": "remove jsxtransformer reacttools website", "body": "pieces flight putting together track sanity x recommend babel talk transforming already landed x remove use jsxtransformer transforming site x redirect jsxcompiler babel repl remove links jsxcompiler x update tutorial tutorial repo x land back", "num": "4677", "d": "8/2015"}, {"title": "webkitplaysinline attribute jsx supported", "body": "hi webkitplaysinline jsx ignored solution solve problem", "num": "4676", "d": "8/2015"}, {"title": "createelement mode fails updates", "body": "stupid node js var flip reactcreateclass render function return thispropsx var container documentcreateelement div reactrender container reactrender b container throws", "num": "4674", "d": "8/2015"}, {"title": "commentsjson location confusing tutorial docs", "body": "tutorial says create static json file however tutorial repository file root directory use node server implementation repo create file directory server crashes submitting comment everything works fine file root directory tutorial repo documentation location file consistent repo user grab server implementation go", "num": "4673", "d": "8/2015"}, {"title": "change event fire ie edge certain circumstances", "body": "put together simple example demonstrate issue problem happening elements mouse event listeners attached would trigger render handler never gets called looks like unlike browsers ie edge trigger mouse events element clicking options prevent event triggering", "num": "4672", "d": "8/2015"}, {"title": "handle without ref passing back react component", "body": "hello take following snippit javascript component export default reactcreateclass getinitialstate function return error valid true isvalid function return thisstatevalid setvalid function isvalid thissetstate valid isvalid render function return parent export default reactcreateclass handleclick function var comp thisrefscomp update refs passed back react component able access helper methods class handle certain pieces state like component valid error message displayed actually returns dom node understand everything done javascript modify dom ie take message change node innerhtml message adds extra must done feel good fit modifying state way thinking antipattern considered due seeing many people accomplishing sort thing", "num": "4671", "d": "8/2015"}, {"title": "load javascript file cdn server component", "body": "want load javascript file form cdn server nt want put tag wrote component like nt worked", "num": "4670", "d": "8/2015"}, {"title": "jsx extra semicolon bug", "body": "use semicolon jsx code strange print html page could somebody tell", "num": "4667", "d": "8/2015"}, {"title": "suppressing component warning", "body": "writing wysiwyg editor react order place cursor inside rich document use understandably react nt fare well contenteditable get around framework confusion contenteditable children modified force rerenders new keys work restore selection practice working pretty well getting new warning component contains managed react responsibility guarantee none nodes unexpectedly modified duplicated probably intentional case guarantee nodes unexpectedly modified duplicated intentional way suppress warning unlike factory warning warning appears time component instantiated think least slowly fills consoles considered alternative using children contenteditable component update set outside react would likely sidestep warning get us much else", "num": "4662", "d": "8/2015"}, {"title": "dom props match spec fix give saying props match dom spec", "body": "props react dom elements supposed based dom properties hence used supposedly prop names however eager camelcasing decided react nt actually match spec number cases number cases spec defines noncamelcase properties used browser react defines nonspec camelcase prop htmlimageelement srcset actually srcset htmlformelement autocomplete actually autocomplete enctype actually enctype htmlmediaelement autoplay actually autoplay etc leaves us awkward situation react dom props based dom property names html attribute names used justify sticking number props nt actually use name use dom want fix think two options keep saying react uses dom property names deprecate etc warnings get using jsx b stop saying react dom props based dom properties start saying something like react dom props html elements camelcased props loosely based dom property names often always camelcased aligns common practice using camelcased properties javascript avoids need quote prop names attributes use characters illegal js without forcing developers continually consult html spec know property supposed camelcase however choose b probably going people arguing reason used became invalid reserved words made valid property names object literals react start supporting sticking rules nt make sense react requires environment shimmed shamed fit users react use jsx either part environment least incorporates syntax jsx syntax", "num": "4653", "d": "8/2015"}, {"title": "returns callback rendering multiple times", "body": "trying use attribute described unfortunately sometimes returns called multiple times mwe javascript import react react class view extends reactcomponent render return function render reactrender documentgetelementbyid container setinterval render alternating beween null", "num": "4651", "d": "8/2015"}, {"title": "update facebook blog", "body": "reading following page stupidly failed notice key words uptodate version post available part flux documentation spent struggling code fault surely would better update blog post", "num": "4650", "d": "8/2015"}, {"title": "failing unmount nested render trees throw exceptions event handling", "body": "code js var leakyportal reactcreateclass render function return componentdidmount function reactrender thisrefsdiv var container documentgetelementbyid container reactrender container reactrender container reactrender container works fine implement componentwillunmount", "num": "4648", "d": "8/2015"}, {"title": "checkbox checked html attribute set underlying prop changes", "body": "rendering checkbox html attribute properly set reflect prop component problem seems method link sets property dom node object update html attribute seen fiddle suggestion instead use set property set underlying node property html attribute seen fiddle", "num": "4646", "d": "8/2015"}, {"title": "support custom nonstandard dom events", "body": "please add support custom nonstandard dom events ideally public api go least way would require forking code base attempt exposing nonstandard events getting insights irc unfortunately still work event listeners registered sure whitelists somewhere skips custom events ps help changing snippet make work also greatly appreciated", "num": "4645", "d": "8/2015"}, {"title": "time merge classname react", "body": "well react good like question time fixed support style object support classname think classname support string array object classname repertoryi want write code like javascript var classname reactaddonsclassname var somevar classname puzzled think opened true cloth red support feture", "num": "4644", "d": "8/2015"}, {"title": "transplant react react root manually", "body": "need something react api work domdiff properly example js reactrender foo somediv settimeout function somediv appendto someotherdiv react still works okay", "num": "4640", "d": "8/2015"}, {"title": "reference error render swallowed results", "body": "using rendering following reproduce import missing thus causing react seems swallow error instead reports pretty frustrating debug hope fixable", "num": "4639", "d": "8/2015"}, {"title": "error messages swallowed", "body": "given following components trigger error map component first time renders get plain old error like trigger component receives new props get complicated error trigger error child component render method error message messages thrown child components swallowed render method map looks like javascript render consolecount render render leafletlayer looks like javascript render throw new error hey lt raise error anyone idea might going also using react router webpack think might react problem", "num": "4638", "d": "8/2015"}, {"title": "onchange event fired pollfilled", "body": "used pollyfill onchange event broken", "num": "4637", "d": "8/2015"}, {"title": "add refchildren access support transitiongroup", "body": "transitiongroup clone children change refs therefore nt seem exist easy hack directly access instance call methods especially makes filtering intercepting dispatching events almost impossible great could make way fix figured hard use refs children cloned implementing method could easy way around transitiongroupgetchildwithref child ref gt return child ref", "num": "4636", "d": "8/2015"}, {"title": "update webcomponentsjs latest version", "body": "current used version webpomponents nov bit time change log quite long posting enchancement request test bump prepare pr also sure good idea push react", "num": "4630", "d": "8/2015"}, {"title": "codemods nt apply using modules", "body": "note branch mine cpojer react currently code mods detect require add detection import react", "num": "4629", "d": "8/2015"}, {"title": "react class codemod", "body": "right hand side method definition expression gets dropped completely code mod example result code mod completely dropping method", "num": "4628", "d": "8/2015"}, {"title": "support fontweight svg attribute", "body": "already supported addition would great", "num": "4625", "d": "8/2015"}, {"title": "reacttestutils working", "body": "hello everyone try test react components use found component use cause error test case look like import react reactaddons import expect expect const reacttestutils reactaddonstestutils import root javascriptsalbatrossroot describe root function click working function var root reacttestutilsrenderintodocument reacttestutilssimulateclick reactfinddomnode root expect rootstatecount tobe write like working var react require react var root reactcreateclass displayname root getinitialstate function return count tick function consolelog click thissetstate count thisstatecount render function return moduleexports root change test die import react react export default class root extends reactcomponent constructor props super props thisstate count tick consolelog click thissetstate count thisstatecount render return somebody tell", "num": "4621", "d": "8/2015"}, {"title": "ca nt update defaultcheckeddefaultvalue", "body": "rerender component defaultchecked defaultvalue react fails update value checked attribute accordingly say use controlled input would argue bug basically disallows uncontrolled forms reset buttons always reset whatever initial default value", "num": "4618", "d": "8/2015"}, {"title": "react renders differently server client", "body": "read seemed like maybe another related problem browser tries bootstrap react rerender page get warning apart case unnecessary escape quote seems render differently server browser static content nt really understand markup render element like next test come rendered different", "num": "4616", "d": "8/2015"}, {"title": "links translated docs", "body": "translated docs japanese korean chinese docs links add links translated doc getting started links added get reactjs users feedbacks", "num": "4614", "d": "8/2015"}, {"title": "checksum issue encoded characters chrome", "body": "recently started seeing issues checksums server rendered markup even though client server encoding characters correctly reactmount triggering checksum warning replacing dom seems chrome may changed behavior innerhtmlouterhtml returns encoded character rather encoding causes comparison incorrect see issue firefox correctly renders dom shows warning first thought messages mixed actually existing root node returning decoded string perhaps bug chrome", "num": "4608", "d": "8/2015"}, {"title": "getboundingclientrect nt work jasminejest testing", "body": "every time try test rect always empty tried jasmine jest case something different one neither work hoping something wrong ca nt find version var react require reactaddons var testutils reactaddonstestutils var findclass testutilsfindrendereddomcomponentwithclass describe react tests function return proper bounding rectangle height function var component testutilsrenderintodocument hello world test works fine though works normally normal dom manipulation function var div documentcreateelement div var text documentcreatetextnode hello world divappendchild text documentbodyappendchild div var rect divgetboundingclientrect expect rectheight nottobe", "num": "4606", "d": "8/2015"}, {"title": "set key conditional components", "body": "example two conditional children like javascript showa amp amp showb amp amp set key children without keys diff result remove remove b insert b many conditional children like look could figure answer thanks help", "num": "4605", "d": "8/2015"}, {"title": "support jsx filenames react native", "body": "seems files extension js required jsx files following works fine rename file code jsx gives exception requiring unknown module srcviewsscreenshellojsx sure module try restarting packager restarting nt seem help problem something react native", "num": "4604", "d": "8/2015"}, {"title": "html table summary attribute", "body": "creating data table noticed summary listed react supported html attributes reason including summary attribute workaround fairly useful legacy screen readers", "num": "4603", "d": "8/2015"}, {"title": "giving partial state setstate child properties merged", "body": "docs setstate say merges nextstate current state primary method use trigger ui updates event handlers server request callbacks experienced state really merged happens properties assigned real merge short behaves like lodash assign like merge put words recursive merge shallow one suppose either fix code could break backwards compatibility update documentation clear", "num": "4601", "d": "8/2015"}, {"title": "umbrella", "body": "likely going quick release goes basically lightweight garbage collection release remove deprecated functionality x remove getdomnode setprops replaceprops monkey patching dom refs jimfb x remove getdomnode createclass jimfb x remove deprecated addons clonewithprops jimfb x remove reactrender finddomnode package jimfb deprecated functionality unlocks new features x remove support inheritless classes enables null return values plain functions jimfb spill make sure package includes isomorphic renderers nt burdened even package least make sure module dependencies nt burdened effectively make sure complete decouple dependencies react dom react isomorphic except currentowner react dom still needs set react isomorphic sebmarkbage see comment bonus react native ships copy renderer npm finally works properly", "num": "4600", "d": "8/2015"}, {"title": "warn component nt extend reactcomponent", "body": "support arrow functions plain functions components need know call new examples wo nt work js function plainfunctioncomponent props return null var arrowfunctioncomponent props gt class classcomponent render return need detect component function class calling call everything plain functions long return however wo nt work nullfalsestring return values want support also ca nt call arrow functions likewise ca nt call classes unfortunately ecmascript nt way detect something able current plan add static flag reactcomponent detect something class class pattern nt require still possible sure distinguish pattern one requires warnings though", "num": "4599", "d": "8/2015"}, {"title": "externalize state tree alternatives", "body": "react provides notion implicitly allowing child component store state using functionality however used business logic state also used remember dom state tiny ephemeral state scroll position text selection etc also used temporary state memoization kind magic black box react implementation details largely hidden people tend reinvent wheel invent state management systems eg using flux still plenty use cases flux state belongs flux stores manually managing addingremoving state nodes becomes huge burden regardless going keep manually end system something similar need convenient standard way handle across components something user space components wo nt able integrate well even think using calling setstate still relying capability undermines ecosystem eventually everyone reconverge single external state library anyway make sure gets baked react designed state tree state tree data structure would opaque optimize internals clever ways blocks many antipatterns external users breaks encapsulation boundaries touch someone else state exactly problem react programming model tries address however unfortunately state tree opaque end users means bunch legitimate use cases available external libraries eg undoredo reclaiming memory restoring state sessions debugging tools hot reloading moving state server client could provide standard externalized statetree eg using immutablejs data structure however might make clever optimizations future features difficult adopt also nt capable fully encapsulating true state tree may include dom state may ok treat state differently heuristic api need account also nt allow us enforce certain level encapsulation components another approach try add support use cases react onebyone external state tree nt become useful anymore created separate issues ones already planning supporting debugger hooks public api hibernating state serialized form else need pinging stake holders leebyron swannodette gaearon yungsters ryanflorence", "num": "4595", "d": "8/2015"}, {"title": "hibernating state necessarily serialized", "body": "relay others currently abuses internals get persistent identity component effectively used restore state component temporarily unmounted also common abuse flux stores use case basically since capability nt currently exists encouraged use flux everything case need capability later purpose issue discuss public api hibernating state component restoring component remounts use cases broken three scenarios list item view eg infinite scrolling table views one row eventually needs reclaimed save memory used tree view detail view masterdetail view clicking one item list switches state detail view click original view backforward button want save snapshot state navigate new view change state hit back button return previous state want restore original state subtree would like support least nonserialized form could imagine api serializes json data structure potential follow necessarily part one potential api basically object used key unlike normal key semantics state subtree kept memory indefinitely use weakmap keep state object ever goes away gc collect state subtree solves three use cases", "num": "4594", "d": "8/2015"}, {"title": "include devtools public api", "body": "idea multiversion extension allow attach debugger running react instance debugger protocol injects intercepted functions particular version react exposes development hooks effectively intended expose stateful reflection apis production use since negatively affect performance", "num": "4593", "d": "8/2015"}, {"title": "stop relying document", "body": "use cases support nt rely dom specific globals available shallow rendering worker renderers eg reactnative like environments server rendering setstate etc nt look document unfortunately often screw leads work arounds part problem jest comes jsdom always need test environment allow us execute domless environment also need add separate unit tests three test cases execute domless environment could potentially add lint rule using globals files folder also get rid uses since varies render tree environment", "num": "4592", "d": "8/2015"}, {"title": "warning child array iterator unique key prop provide info", "body": "hi building component complexity alot html warning gets infuriating hard solve would possible include bit context warning example tag class html parent something like", "num": "4591", "d": "8/2015"}, {"title": "broken", "body": "command broken commit error message running jest task running jest may take using jest cli fail srcaddonstestsreactfragmenttestjs typeerror read property length undefined maybereadmore processtickcallback fail srcaddonstransitionstestsreacttransitionchildmappingtestjs error attempted send message worker response last message received worker processes handle one essage time fail srcaddonslinktestsreactlinkproptypestestjs typeerror read property length undefined maybereadmore processtickcallback", "num": "4590", "d": "8/2015"}, {"title": "allow proptypesshape valid definition proptypes", "body": "short accept object valid declaration js import react react export default class extends reactcomponent static proptypes reactproptypesshape file called defines shapes used project eg js import proptypes react export let screeningshapedefinition id proptypesnumberisrequired timestamp proptypesnumberisrequired url proptypesstringisrequired position proptypesnumberisrequired export let screeninglistshapedefinition size proptypesnumberisrequired screenings proptypesarrayof proptypesshape screeningshapedefinition isrequired use modules js import react react import moment moment import screeningshapedefinition shapes export default class extends reactcomponent static proptypes screeningshapedefinition slight leaking cast shape definition object defining relations shapes definition file component definition property supported valid input could avoid leaking js import react react import moment moment import screeningshape shapes export default class extends reactcomponent static proptypes screeningshape js import proptypes react export let screeningshape proptypesshape id proptypesnumberisrequired timestamp proptypesnumberisrequired url proptypesstringisrequired position proptypesnumberisrequired export let screeninglistshape proptypesshape size proptypesnumberisrequired screenings proptypesarrayof screeningshape isrequired", "num": "4589", "d": "8/2015"}, {"title": "ie error rendering properly chrome", "body": "trying render header existing header creating div table html code deleting row header getting rendered script var stickydiv reactcreateclass mixins simplepagescrollmixin simpleresizemixin displayname stickydiv proptypes offsettop reactproptypesnumber zindex reactproptypesnumber classname reactproptypesstring getinitialstate function return fix false width null getdefaultprops function return offsettop classname zindex handleresize function thischeckwidth thischeckpositions handlescroll function thischeckwidth thischeckpositions checkpositions function var pos finddomnode react pos utilfindposrelativetoviewport reactfinddomnode else pos utilfindposrelativetoviewport thisgetdomnode pos lt thispropsoffsettop thissetstate fix true else thissetstate fix false checkwidth function var width null thisrefsduplicate finddomnode react width reactfinddomnode thisrefsduplicate getboundingclientrect width else width thisrefsduplicategetdomnode getboundingclientrect width else finddomnode react width reactfinddomnode thisrefsoriginal getboundingclientrect width else width thisrefsoriginalgetdomnode getboundingclientrect width", "num": "4586", "d": "8/2015"}, {"title": "dont rerender checkbox radiobox", "body": "make quiz app react use logic nextquiz state ok dont change checked info dont use state props manage mini project problem rerender dont rerender check info update small version", "num": "4583", "d": "8/2015"}, {"title": "give relay", "body": "\u3064", "num": "4582", "d": "8/2015"}, {"title": "investigate missing eventtarget", "body": "see cc jimfb syranide", "num": "4578", "d": "8/2015"}, {"title": "reactcreateelement null null throw", "body": "sometimes happens bug application gives warning rendering fails one warning error makes bugs harder debug cases eg serverside rendering warnings get lost log error visible saying uncaught typeerror read property touppercase undefined warnings errors suppose element type null much use element better throw meaningful error early also error thrown earlier get stacktrace function call actually passed constructor debug easier like fact give warnings stuff think cases errors would even helpful", "num": "4575", "d": "8/2015"}, {"title": "get displayname instance", "body": "hi extending reactcomponent define components scalajs react dev tools seeing display name components reason scalajs output getting name function okay modify function get displayname instance break head digging javascript prototypes constructors following code works", "num": "4574", "d": "8/2015"}, {"title": "add support types arrow functions literals", "body": "new facebook flow might missed something nt able write types arrow function literals example craps unexpected", "num": "4573", "d": "8/2015"}, {"title": "consistency propchildren type", "body": "time something like render children component need clone element something right facing problem pass child function longer object end something like time creating little layer deal problem maybe take approach always create array even pass single element unless see problem js return thisrenderchildren renderchildren arrayisarray thispropschildren return thispropschildrenmap thisrenderchild return thisrenderchild thispropschildren", "num": "4572", "d": "8/2015"}, {"title": "differ parentbased context childbased context childbased context lost", "body": "want use materialui react appi material ui says code indexjs reactappjs first use jsx tool compile two files use browserify browserify reactappjs mainjs add pages indexhtml reported get make sense solve", "num": "4571", "d": "8/2015"}, {"title": "tag attribute webkitplaysinline ca nt parsed", "body": "tag attribute webkitplaysinline supposedly prevents default go fullscreen behavior videos attribute works webview flag set native code want use attribute prevent default behavior iphone saw customeattributes doccuments like data aria works like need", "num": "4570", "d": "8/2015"}, {"title": "build folder present latest github release", "body": "indexjs references build folder exist initial install attempting install using jspm since npm version way date", "num": "4568", "d": "8/2015"}, {"title": "including react reactdom together produces warning webpack", "body": "webpack output test gajus webpack watch progress hash version webpack time asset size chunks chunk names appjs kb emitted app multi app bytes built hidden modules warning reactreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibobjectassignjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibobjectassignjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdeprecatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdeprecatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomserverjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomserverjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactisomorphicjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactisomorphicjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcurrentownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcurrentownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancehandlesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancehandlesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmountjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmountjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfinddomnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfinddomnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibrendersubtreeintocontainerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibrendersubtreeintocontainerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomfactoriesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomfactoriesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementvalidatorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementvalidatorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibonlychildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibonlychildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibwarningjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibwarningjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibexecutionenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibexecutionenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibbeforeinputeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibbeforeinputeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibchangeeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibchangeeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibclientreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibclientreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdefaulteventpluginorderjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdefaulteventpluginorderjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibenterleaveeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibenterleaveeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibhtmldompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibhtmldompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsercomponentmixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsercomponentmixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentbrowserenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentbrowserenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomidoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomidoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconciletransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconciletransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibselecteventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibselecteventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibserverreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibserverreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsimpleeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsimpleeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsvgdompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsvgdompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmarkupchecksumjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmarkupchecksumjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibinstantiatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibinstantiatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibinvariantjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibinvariantjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrefjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrefjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibescapetextcontentforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibescapetextcontentforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibvalidatedomnestingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibvalidatedomnestingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsereventemitterjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsereventemitterjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactemptycomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactemptycomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancemapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancemapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcontainsnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcontainsnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsetinnerhtmljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsetinnerhtmljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibshouldupdatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibshouldupdatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcallbackqueuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcallbackqueuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibpooledclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibpooledclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactfragmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactfragmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtraverseallchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtraverseallchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnoopupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnoopupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibmapobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibmapobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacterrorutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacterrorutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationnamesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationnamesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeymirrorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeymirrorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeyofjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeyofjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetiteratorfnjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetiteratorfnjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyfunctionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyfunctionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventconstantsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventconstantsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpropagatorsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpropagatorsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfallbackcompositionstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfallbackcompositionstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticcompositioneventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticcompositioneventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticinputeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticinputeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginhubjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginhubjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibiseventsupportedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibiseventsupportedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibistextinputelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibistextinputelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticmouseeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticmouseeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibautofocusutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibautofocusutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdombuttonjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdombuttonjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdominputjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdominputjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomoptionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomoptionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextareajs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextareajs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibshallowequaljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibshallowequaljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdomchildrenoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdomchildrenoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibeventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibeventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventtargetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventtargetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetunboundedscrollpositionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetunboundedscrollpositionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnativecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnativecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinputselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinputselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetactiveelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetactiveelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticclipboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticclipboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticfocuseventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticfocuseventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetickeyboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetickeyboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticdrageventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticdrageventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetictoucheventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetictoucheventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticuieventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticuieventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticwheeleventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticwheeleventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventcharcodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventcharcodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfanalysisjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfanalysisjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancenowjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancenowjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcompositecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcompositecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibquoteattributevalueforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibquoteattributevalueforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginregistryjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginregistryjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventemittermixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventemittermixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibviewportmetricsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibviewportmetricsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibistextnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibistextnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibaccumulateintojs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibaccumulateintojs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibforeachaccumulatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibforeachaccumulatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgettextcontentaccessorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgettextcontentaccessorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventmodifierstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventmodifierstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibfocusnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibfocusnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerousstylevaluejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerousstylevaluejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibmemoizestringonlyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibmemoizestringonlyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactliblinkedvalueutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactliblinkedvalueutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildupdatetypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildupdatetypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsettextcontentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsettextcontentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventkeyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventkeyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibisnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibisnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibflattenchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibflattenchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatenodesfrommarkupjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatenodesfrommarkupjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetmarkupwrapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetmarkupwrapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetnodeforcharacteroffsetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetnodeforcharacteroffsetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatearrayfrommixedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatearrayfrommixedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibtoarrayjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibtoarrayjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected", "num": "4566", "d": "8/2015"}, {"title": "emptyfunctionjs missing lib folder fresh install", "body": "sure missing appears required order react function properly issue easy recreate notice underneath jspmmodulesnpmreact emptyfunctionjs file present", "num": "4564", "d": "8/2015"}, {"title": "react facebook comments", "body": "hi page completely written react html template use comments widget facebook came code mutates dom react philosophy let assume facebook rewrites plugin react would two react apps react inside react ok include facebook comments like completely wrong path ok one react app inside another one e g video player inside page", "num": "4563", "d": "8/2015"}, {"title": "issue react jsx mocha karma webpack", "body": "trying set testing using mocha karma webpack test file results following error message error invariant violation reactrender invalid component element may caused unintentionally loading two independent copies react component files require simply", "num": "4562", "d": "8/2015"}, {"title": "children nt updated props changed", "body": "loop triggered event setting height children inline style property first time works fine subsequent updates coffee code experienced problem comments coffee react require react reactbootstrap require reactbootstrap tabbedarea reactbootstrap moduleexports reactcreateclass displayname tabbedarea proptypes height reactproptypesnumber height tabbed nav bar known calculate correct height tab panels automatically distributeheights navbar reactfinddomnode refstabbedarearefstabs tabpaneheight propsheight navbarclientheight componentdidmount distributeheights componentdidupdate distributeheights render", "num": "4560", "d": "8/2015"}, {"title": "support camelcase version webkittransform well", "body": "although pascalcase work safari actual property camelcase react nt support properly alias added handle case since nt seem obvious fact safari inspector autocomplete nt even work seems like hack works", "num": "4557", "d": "8/2015"}, {"title": "question two react based apps one page", "body": "hi video component written clojurescript based om page written javascript based react want use video component page came following code works sure ok js class page extends reactcomponent render gt return reactrender documentgetelementbyid page function video instance clojurescript application videoclientrender id abc calls reactrender documentgetelementbyid video please take look confirm eventually", "num": "4556", "d": "8/2015"}, {"title": "question dynamic context", "body": "trying locality specified throughout app thought using context could good solution achieve need let user dynamically change locale dynamically changing context negative consequences tested works want make sure negative consequences", "num": "4555", "d": "8/2015"}, {"title": "missing reactproptypesoneofshape operator", "body": "js import react react let timeshape placeholdershape timeshape reactproptypesshape type reactproptypesoneof time isrequired reactproptypesnumberisrequired url reactproptypesstringisrequired position reactproptypesnumberisrequired placeholdershape reactproptypesshape type reactproptypesoneof placeholder isrequired position reactproptypesnumberisrequired export default reactcreateclass proptypes times reactproptypesarrayof reactproptypesoneofshape timeshape placeholdershape isrequired way validate whether array property whats even worst use latter example produces error validate data expected", "num": "4553", "d": "8/2015"}, {"title": "adding example app wiki", "body": "like add reactfluximmutable demo app examples page wiki simple way pull request changes bit researching done could someone let know preferred way getting done looks like open editing anyone sure", "num": "4551", "d": "8/2015"}, {"title": "reactrendertostaticmarkup add tags", "body": "think placeholders inserted rendering rendertostaticmarkup js var react require react var demo reactcreateclass proptypes render reactproptypesboolisrequired render function return thispropsrender amp amp im demo var container reactcreateclass proptypes render reactproptypesboolisrequired render function return consolelog reactrendertostaticmarkup im demo consolelog reactrendertostaticmarkup example complex structure becomes hard use css selectors like etc", "num": "4550", "d": "8/2015"}, {"title": "import react npm compoent jsx file", "body": "hello freshman use gulp build web compile jsx files gulpreact js like want use react component registered nt know introduce jsx directly add bellow jsx filet wo nt work well import rightly thanks amp regards", "num": "4549", "d": "8/2015"}, {"title": "update checkbox defaultchecked nt work", "body": "update checkbox defaultchecked nt work please see", "num": "4548", "d": "8/2015"}, {"title": "settimeout arguments nulled", "body": "autocomplete textbox component onchange event assigned function called delaykeyup waits user stop typing seconds call handleinputchange function delaykeyup receive event react contains target property screenshot need pass event argument handleinputchange function problem event argument received handleinputchange values null might cause", "num": "4547", "d": "8/2015"}, {"title": "publish addons update npm", "body": "addons npm still importantly modules testutils perf get published thanks still nt npm makes trying bit trickier would ideal", "num": "4544", "d": "8/2015"}, {"title": "reactrender headersticky", "body": "trying render header existing header creating div table html code html deleting row header getting rendered script js var stickydiv reactcreateclass mixins simplepagescrollmixin simpleresizemixin displayname stickydiv proptypes offsettop reactproptypesnumber zindex reactproptypesnumber classname reactproptypesstring getinitialstate function return fix false width null getdefaultprops function return offsettop classname zindex handleresize function thischeckwidth thischeckpositions handlescroll function thischeckwidth thischeckpositions checkpositions function var pos finddomnode react pos utilfindposrelativetoviewport reactfinddomnode else pos utilfindposrelativetoviewport thisgetdomnode pos lt thispropsoffsettop thissetstate fix true else thissetstate fix false checkwidth function var width null thisrefsduplicate finddomnode react width reactfinddomnode thisrefsduplicate getboundingclientrect width else width thisrefsduplicategetdomnode getboundingclientrect width else finddomnode react width reactfinddomnode thisrefsoriginal getboundingclientrect width else width thisrefsoriginalgetdomnode getboundingclientrect width rendered rendered place exisitng row instead seperate row way could render new element row existing table code sticky working header coloumns misaligned since guess cordination two tables guess thanks", "num": "4543", "d": "8/2015"}, {"title": "make easier use alphabeta versions", "body": "hi think easier tryuse beta version react like lack documentation changes yet officially documented would nice github issue per beta community could discuss migration problems usually errorswarnings provided react quite explicit place discuss could also help give insight amount work needed migrate attempt jsfiddle think would nice provide base jsfiddle integration beta versions would permit users test new react behavior sandbox also report bugs beta versions easily peerdependency problem using libs declare react peerdependency problem npm match semver range see forces library author use something like order able use beta lib problem beta published library authors add new beta support mean using reactdatepicker wait lib author allow explicitly able test use shrinkwrap manually edit packagejson lib nt know good solution problem wanted react team aware", "num": "4542", "d": "8/2015"}, {"body": "sorry trouble unfortunate problem process deprecating wo nt fixing anything suggest switching another tool preferred one babel", "d": "8/2015"}, {"body": "cool thanks headsup", "d": "8/2015"}, {"body": "post small reproducible example jsfiddle ca nt help unless give information", "d": "8/2015"}, {"body": "pass component ask type questions stackoverflow github reporting issues", "d": "8/2015"}, {"body": "helloyie use pass props children components without jsxattributes official docs read", "d": "8/2015"}, {"body": "nikolaymatrosov answer perfectcorrect points thanks helloyie want pass props owner child component nikolaymatrosov mentioned looking prop changes may also want read componentwillreceiveprops may apply eitherboth parent child depending use case", "d": "8/2015"}, {"body": "leave open figure longerterm plan test utils unlikely get", "d": "8/2015"}, {"body": "try setting globaldocument globalwindow jsdom requiring react report similar", "d": "8/2015"}, {"body": "please read error message", "d": "8/2015"}, {"body": "also affects input fields chrome", "d": "8/2015"}, {"body": "thanks dupe probably", "d": "8/2015"}, {"body": "react element still works work react classes sounds like instead", "d": "8/2015"}, {"body": "spot spicyj thanks pointer funny thing totally worked otherwise may nice invariant", "d": "8/2015"}, {"body": "okay", "d": "8/2015"}, {"body": "return element like said rendertostring nt include event handlers real way us make happen give details maybe helpful", "d": "8/2015"}, {"body": "rendering string need markdown parser insert tags around react elements takes returns string achieve transformation", "d": "8/2015"}, {"body": "hard without support markdown engine try using", "d": "8/2015"}, {"body": "khan markdown generates react elements similarly string parser inserts react elements like input could move khan extensions awesome thanks", "d": "8/2015"}, {"body": "spicyj atm simplemarkdown examples working however managed get need fork marked thanks bunch cheers", "d": "8/2015"}, {"body": "keys stay components update wo nt unmountedremounted", "d": "8/2015"}, {"body": "future please nt ask usage questions react issue tracker bugs react", "d": "8/2015"}, {"body": "spicyj thanks registered forums", "d": "8/2015"}, {"body": "trusktr stack overflow also good choice questions simple answer like one", "d": "8/2015"}, {"body": "seems related", "d": "8/2015"}, {"body": "yeah close favor", "d": "8/2015"}, {"body": "expected behavior children becoming map cc spicyj", "d": "8/2015"}, {"body": "syranide sorry clear yes expect produce map surprised using jsx construct reactelement hierarchy uses list", "d": "8/2015"}, {"body": "yes jsx always makes array reactchildrenmap return array", "d": "8/2015"}, {"body": "spicyj examples produced using though guessing planned change", "d": "8/2015"}, {"body": "mean key unique identifier going become redundant well", "d": "8/2015"}, {"body": "yes merged nothing changing key works would redundant", "d": "8/2015"}, {"body": "reference error got using array", "d": "8/2015"}, {"body": "write elements inline jsx like react nt ask add attributes since unlikely reorder write need keys reactchildrenmap copied implicitlyadded keys first case nt see warning mapping array would nt copy keys reactchildrenmap still copy keys automatically return array", "d": "8/2015"}, {"body": "thank explanation", "d": "8/2015"}, {"body": "work", "d": "8/2015"}, {"body": "cc spicyj likely result getting rid wrapper components add check shallow renderer somewhere get better error", "d": "8/2015"}, {"body": "yeah knew add better error note nt need shallow rendering want already", "d": "8/2015"}, {"body": "might also add inside featuremapview component jsx class featuremapview extends node case refs appear console output", "d": "8/2015"}, {"body": "ref adding featuremapview overrides one set outside way right two refs single component unfortunately", "d": "8/2015"}, {"body": "thinking thanks spicyj", "d": "8/2015"}, {"body": "pass update functions props use flux probably move question stackoverflow discussreactjsorg instead though", "d": "8/2015"}, {"body": "rather add prefixed versions lookup table first however using js property compatible thought appears might thing need support see quick fix presumably graphiql use pascalcase version", "d": "8/2015"}, {"body": "ah gotcha props described safari console typeahead camel case nt think maybe tolowercase first thanks info dancer", "d": "8/2015"}, {"body": "years ago way showed autocomplete style object inspection everybody thought ie special case standard ie broke opera gone browsers seem want odd one pascalcase awesome made conversion stylesheet rule easy replace capital letter lowercase version done oh well rant", "d": "8/2015"}, {"body": "browsers suck", "d": "8/2015"}, {"body": "probably flow issue anything definitely annoying want documented way soon think need ability compose flowconfigs could stack ignores though maybe something address fbjs brought day let continue issue", "d": "8/2015"}, {"body": "nt supported way best bet probably add wrapper components foo similar explain use case perhaps suggest better solution", "d": "8/2015"}, {"body": "nt supported way breaking encapsulation inner components eg target changing renders something intended look dom nodes certain class less", "d": "8/2015"}, {"body": "spicyj building found better way achieve goal extending method thank help", "d": "8/2015"}, {"body": "good catch thank", "d": "8/2015"}, {"body": "wonder references reactrender reactclassjs reactelementjs", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "issue resolved", "d": "8/2015"}, {"body": "react error please try read error message figure project related instead opening three issues", "d": "8/2015"}, {"body": "spycyj well kept going line nobody claimed responsibility got lucky guess", "d": "8/2015"}, {"body": "sometimes fault", "d": "8/2015"}, {"body": "cmelion sure spicyj nt mean way anyhow want keep gh issues focused development react questions problems please use stackoverflow instead", "d": "8/2015"}, {"body": "cmelion juvenile reply hopefully also know", "d": "8/2015"}, {"body": "syranide thank helpful advice teams relatively new react still finding way occasionally run across issues nt common enough yet turn searching usual channels defy internal efforts resolve currently workaround issue time circle back try understand root cause reactdnd proxyquire guys helpful nt able pin", "d": "8/2015"}, {"body": "sorry got bit tense help put things perspective using react context feature react dnd see message react never supported officially fact discourages using many libraries eg react router never official api bet react folks tired context issues ready support yet know broken ways", "d": "8/2015"}, {"body": "cmelion thank", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "please ask questions stack overflow github issues bug reports", "d": "8/2015"}, {"body": "ok", "d": "8/2015"}, {"body": "store intermediate structure maybe instance", "d": "8/2015"}, {"body": "lifecycle methods bound methods part base class eg setstate nothing planned would change", "d": "8/2015"}, {"body": "thanks clarification think go docs though", "d": "8/2015"}, {"body": "jsx collapses whitespace almost always want obviously inconvenient case sorry using compiler like babel swap jsxtransformerjs use textbabel instead textjsx use template string may palatable", "d": "8/2015"}, {"body": "thank much spicyj", "d": "8/2015"}, {"body": "actually turns adding fixes problem switch babel idea works final version works using jsxtransformer hello world var app reactcreateclass render function return lt pre gt lt code gt ditaa text diagram document magic lt code gt lt pre gt var element documentgetelementbyid content reactrender reactcreateelement app element", "d": "8/2015"}, {"body": "jsxtransformer also supported template literals spicyj trying sneakily get upgrade since deprecated jsxtransformer", "d": "8/2015"}, {"body": "smart move hahahah thanks guys grommet using babel react sake example used jsxtransformer thanks awesome technology", "d": "8/2015"}, {"body": "sorry guys trying understand issue better sorry context could please explain react collapses whitespaces inside tags checked pr definitely agree collapse cases like adding unnecessary whitespace pre tag code seems weird quick test github handles pre code tags preserve spacing provide see ascii art template literal works standalone scenario trying build something converts markdown jsx able easily create websites based react control user markdown decide whether put template literal putting template literal inside markdown also sounds strange also trying replicate markdown jsx pre code tags explains markdown one line transpilation process example expecting alternatively underlineish style get alternatively underlineish style", "d": "8/2015"}, {"body": "alansouzati issue ended writing babelplugin means perfect works uses remarkable markdown gt html gt babelast gt react components feedback welcome helps edit previously used template literals dangerouslysetinnerhtml however would mean escape code block back ticks use alternative string syntax replacement processing issue leading spaces nt know elegant way measure least long left white space remove lines text seems work bulletproof means", "d": "8/2015"}, {"body": "thanks browniefed definitely check plugin", "d": "8/2015"}, {"body": "worries using webpack config pretty straight forward setup file plugin", "d": "8/2015"}, {"body": "hey browniefed successfully integrated plugin pipeline problem persists try environment import react react import markdown babelpluginmarkdownreactmarkdown export default class rendermarkdown extends reactcomponent could something wrong env execution results single line element", "d": "8/2015"}, {"body": "intentionally wrap back tick code marks take look though", "d": "8/2015"}, {"body": "alansouzati htmlspecific jsx nt even wanted could nt imho generally would recommend writing large amounts text inside jsx instead putting string inside render outside component referencing instead", "d": "8/2015"}, {"body": "alansouzati take issue plugin sufficiently call closed", "d": "8/2015"}, {"body": "descending elementpropschildren check tell custom component native component custom components less say give whatever component would render obviously child components expect lifecycles called need call similarly merge component default props child component expects getting detailed semantics right slightly nontrivial doable always trying get native elements might try using heavy lifting future reference questions like better addressed stackoverflow github issues reserved tracking bugs react", "d": "8/2015"}, {"body": "eventually may able support letting implement custom renderer difficult right sorry", "d": "8/2015"}, {"body": "ever replace content manually apply cached html multiple times posted issue error nt really make sense looks react complains mounted cached html trying mount cached html ps sure aware must used clearing react rendered dom right", "d": "8/2015"}, {"body": "syranide looks promising try", "d": "8/2015"}, {"body": "syranide worked updated feedback appreciated anybody interested server rendering rails webpack redux", "d": "8/2015"}, {"body": "glad hear however curious using cached markup clientside makes sense ship server client initial load largely seo really initial mount occurred need mount cached markup rendering", "d": "8/2015"}, {"body": "syranide make heavy use fragment caching rails would want cache markup hydration client stores done rails server need run execjs evaluate javascript produce rendering pulling cache fast seo caching benefite server rendering alexfedoseev opinion", "d": "8/2015"}, {"body": "believe jsx convention lowercase tags considered primitives transformed react element type string think rendered dom given iirc support things like svg potential additions html without maintain whitelist tags uppercase jsx tags transformed refers component", "d": "8/2015"}, {"body": "kmeht yes correct always convention classnames start uppercase one jsx enforces otherwise would namespace collisions way us determine user intended insert component dom node documented design justification discussed", "d": "8/2015"}, {"body": "thanks checked docs missed detailed info provided", "d": "8/2015"}, {"body": "giantelk want send pr make docs clearer", "d": "8/2015"}, {"body": "hi spicyj pr docs throw warning msg browser console declare react component starting lowercase character", "d": "8/2015"}, {"body": "warn previous version kept one version longer support transform tools wo nt adding warnings", "d": "8/2015"}, {"body": "sucks error warning whoever supporting transform tools aware even plain old javascript barks moon variable expected case tue aug paul shannessy wrote warn previous version kept one version longer support transform tools wo nt adding warnings reply email directly view github cheers flying horse dancing", "d": "8/2015"}, {"body": "probably warn lowercase", "d": "8/2015"}, {"body": "spicyj warn lowercase displayname sounds like would throw false positive displayname set automatically filename filename something like userdashboardindexjsx included", "d": "8/2015"}, {"body": "jimbolla true recommend var userdashboard moduleexports userdashboard though", "d": "8/2015"}, {"body": "eh nt like adding redundancy extra line code every file ideal situation would ability customize displayname gets generated value would actually useful display name full relative path source file equivalent something like tells information need go source topic", "d": "8/2015"}, {"body": "seems odd agree way currently implemented weird imho nt belong provides convenience specifying children varargs convenience provided nonjsx users otherwise good api decision forget jsx second comes formal name commonly used property jsx userfriendly sugar prop much everything else pulling realistically mean compare nonprops seems odd edit also context components housing multiple containers children nice works identically except jsxsugar rather see special rather special sounds like boils api decision allowing children provided varargs significant negative sideeffects nt want affecting jsx users move helper nt belong props edit technical perspective ca nt think reason make special user perspective makes sense jsxsugar", "d": "8/2015"}, {"body": "also makes awkwarddifficult implement possible treat props immutables therefore shallow compare children mutable react components meaning treated differently yet come decent way implement component accepts children", "d": "8/2015"}, {"body": "syranide createelement weird even jsx users specify children prop jsx element possibly via ellipsis simultaneously provide child nodes jsx element oddities jsx nonjsx users alike changing createelement signature nt solve weirdness jsx users even powerful argument powerful ones technical jsx nonjsx users taking perf hit every prop key needs checked see stringcompares string children need skip children rendering node attributes means needless stringcompare every prop every element every render nt bad enough take another perf hit children props means super common case element static props nonstatic children ca nt props object hoisted render results thousands needless allocations associated garbage created single large render second perf hit jimbolla yes componentshouldupdate hard implement component accepts children nt really solve problem yes agree processing another case often need treated differently", "d": "8/2015"}, {"body": "component might accept props elements want treat children specially prop hoisting optimization longer belong edit realized syranide said p", "d": "8/2015"}, {"body": "possible treat props immutables therefore shallow compare children mutable react components meaning treated differently nit mutable usually generated inside thus new every time babel hoisting help sure well whereas whole element tree could hoisted constant wrong cause nonhoistable problem think jimfb describing correct", "d": "8/2015"}, {"body": "gaearon correct counts props would hoistable nt fact becomes prop nt forget stringcompares equally importantexpensive", "d": "8/2015"}, {"body": "irksume theoretical computer science perspective even mean care specific nt weird part weird normal oo would put everything eg right mental model think main object functional style get rid completely thing makes weird xml specifically xml object model xml model special cases child elements parsing however deserialized dom represented object thing screws rule dom also allowed access serialized attributes nested anything want consistent would add give reflective api original source text ofc wo nt generally considered mistake expose serialized form object model think mental connection attributes trips people however also broken part dom something tried hard get away theoretical computer science perspective current model makes much sense another thing trip people children instantiated parent meaning nt access instances general misconception around children related nesting eg people expected able treat would dom xhp many traditional models however react nt work like gives us many importantinteresting opportunities even added elements would confusing difference might want ability preinstantiate children point though see example wanted keep open name potential purpose something like even jsx users specify children prop jsx element possibly via ellipsis simultaneously provide child nodes jsx element theoretically confusing trying however think would happen practice would user end situation try intentionally knowing namespace might know priority merging behavior applies avoid accidentally assume different namespaces probably targetting html since valid attribute trying build composite component try use prop realize way access separate things besides could simply lint even disallow transpiler children props means props object saved reactelement ca nt hoisted intelligent runtime incorrect never hoistable dynamic children could potentially hoist secondary object need wrapper object around issue jordwalke pointed past however unclear often would actually beneficial large impact would since wrapper objects around things anyway maximum saving would n rare case actually possible hoist like would able hoist whole tree anyway able hoist rare things like passed event handlers issue move special case end could merge onto would pain use spread etc forward properties also true besides end using value types props likely merge onto allocation outer allocation anyway think struct fields c c children occurs props means need additional string compare property iterate since need handle children prop special case iteration reflective apis expensive jit well solution try avoid much possible anyway see example known props html elements always wanted create function reads props instead iterating eg processing children componentshouldupdate another case often need treated differently nt solve scenario need shallow compare known childrenlike properties case children object likely recreated rerender parent point bail whole subtrees would nt make sense skip one component still proceeding children also nt way composites since nt know property path corresponds next set props child reasons rejected proposal past new knowledge close maybe get actual numbers perf impact real apps could reconsider nt think alternative compilation strategies eg value types likely realized soon enough warrant massive codemodupgrade path however another reason might want might change compromise concession try standardize reactelement data structure part jsx nt really care preserving xml idiosyncracies likely people using jsx target xml might want ever get point join others standardizing jsx data structure might want special case children events however big maybe quirks like semantics dealt first", "d": "8/2015"}, {"body": "sebmarkbage irksume theoretical computer science perspective even mean care specific odd would property randomly overwritten bar overriding prop like feels dirtyarbitrary making props feel bit impure incorrect reactelement never hoistable dynamic children could potentially hoist secondary props object need wrapper object around reactelement never hostable object hoistable talking issue keys reactelement uniform thus much optimizable hosting element less important anyway critical part hoisting issue style move special case reactelement maybe yes stop treating style special case object instead string different discussion practice style objects oftentimes constant thus already hoistable known props html elements always wanted create function reads props instead iterating solves update props initial markuprender maybe get actual numbers perf impact real apps could reconsider real component rendered real github user chosen less random taking children props hosting props object improved initial render time ssr renderer brought render render huge improvement measurable milliseconds add different jsvm ie relative costs could bit different numbers taken grain salt still valid data point warrant massive codemodupgrade path relative size codemod debatable depending far would want take change needs affect representation inline elements output representation could change public component api reactcomponent required realize much performance benefit", "d": "8/2015"}, {"body": "solves update props initial markuprender known whitelist still works optimization works without whitelist elements use property names html nodes frequent could change public component api reactcomponent change inline representation output would create new object gets passed public component api would much slower therefore think would change public component api sure solution proposing mean special casing string element native elements property real component rendered real github user point us complex component one gets rendered lot times also note hoisting nt free might need lazily initialize elements since otherwise negatively impact load time modules come another optimization probably something overcome though", "d": "8/2015"}, {"body": "sebmarkbage known whitelist still works optimization works without whitelist elements use property names html nodes frequent still iterating generate markup unless failing understandsee something entirely possible change inline representation output createelement would create new object gets passed public component api would much slower well dirty hack could mutate props passing component mutate back done maintaining illusion reactelements immutable lifespan element point us complex component one gets rendered lot times component discussed found particularly good one benchmark got ssr render time without couple features like used using black magic like aggressively rewriting reactelement", "d": "8/2015"}, {"body": "installing helped", "d": "8/2015"}, {"body": "yea think npm treating like prerelease ignoring even though published thought npm used default apparently sorry confusion nt think good way handle unfortunately", "d": "8/2015"}, {"body": "yes breaking change need change tests different sorry see actually dom node test utils ca nt look find react component tree rarely comes almost always testing components job test dom components work", "d": "8/2015"}, {"body": "awesome thank", "d": "8/2015"}, {"body": "please ask questions stack overflow github issue tracker bug reports", "d": "8/2015"}, {"body": "reactisvalidelement", "d": "8/2015"}, {"body": "extremely unlikely react issue reproduce problem using react please file issue repro case run easily", "d": "8/2015"}, {"body": "parameters flags involve basically forking react nothing documented really worth us guide point right direction leave checksum related stuff look uses module disabling sanity checks bunch invariants checks throughout codebase place disable would decide ones important nt", "d": "8/2015"}, {"body": "thanks zpao try document back ever able make react node useable isomorphic applications nt demo purposes know point people interested hope many people lose much time like", "d": "8/2015"}, {"body": "nonstandard attribute react view code might help", "d": "8/2015"}, {"body": "yea annoying wrong beginning need server wrong need tweak part tutorial probably require server see discussion", "d": "8/2015"}, {"body": "ah nt see issue thanks", "d": "8/2015"}, {"body": "actually try pass dom node instead instance dom components composite components like one example since finding dom node thing could dom component anyway case believe work way hoping let know actually running problem code general questions like better addressed stackoverflow use github issues track bugs react going close feel free continue discussion", "d": "8/2015"}, {"body": "ahh makes sense dom node refs big change making release exposing refs dom components dom node means looked ref dom component realized useful thing call thisrefsgiraffegetdomnode get underlying dom node release thisrefsgiraffe actual dom node refs custom component classes work exactly piece documentation managed miss reading update sorry nt want bring yet saw would caused lot refactoring case pulling works expected like stated sorry", "d": "8/2015"}, {"body": "questions like best addressed stack overflow since github issue going close rendering script tag probably want biggest question trying render script tag inside div trying render outside module probably invoking module via javascript function hard tell exactly since nt provide much background trying accomplish recommend posting detailed statement goal stackoverflow see people think", "d": "8/2015"}, {"body": "problem elements created innerhtml nt execute also means nt fetch external resource issue react longstanding workarounds also issue ever use createelement scripts suddenly start executing jensyn since way us reliably right might want element creation manually mounting maybe pull functionality create script elements shared way", "d": "8/2015"}, {"body": "thank much help wanted zpao jimfb perhaps detailed description stack overflow thank jimfb", "d": "8/2015"}, {"body": "semicolon nt want", "d": "8/2015"}, {"body": "spicyj thank", "d": "8/2015"}, {"body": "ah team member pointed react warns use children turns calls use places use children places text nodes case likely switch latter cases using well close task obviously welcome reopen think suppressing warning something worth considering", "d": "8/2015"}, {"body": "b correct see also particularly reply", "d": "8/2015"}, {"body": "intended component unmounted ref changes old ref gets called null called new value component instance store instance component effect unobservable long component mounted prevents memory leaks want something ref handler check null", "d": "8/2015"}, {"body": "thanks information think might worth mentioning docs", "d": "8/2015"}, {"body": "going keeping documents sync worth trouble could better job making message top easier see sorry trouble though", "d": "8/2015"}, {"body": "worries fair enough tricky keep two documents sync another possibility would deleting article content provide link seems unusual keep outdated content website", "d": "8/2015"}, {"body": "may well delete set redirect thinking react", "d": "8/2015"}, {"body": "think correct way catching state css actually using pseudoclass example take regular checkbox toggle nt get applied see plus one wo js", "d": "8/2015"}, {"body": "using likely solve use case thanks pointing however note css pseudo class recommendation available older browsers like ie lt also note according attribute specifies button furthermore whatwg html living standard notes adding attribute user agent set checkedness true viceversa also goes talking abstraction command relies certain attributes namely also checkbox state gt bookeeping attribute mentioned one thing pointed certain attribute gives default checkedness input element react form docs talks maintaining uptodate attribute past initialization value unlike html react components must represent state view point time initialization time seems like follow paradigm otherwise seems like something like reset algorithm work think last point also aligns observation checking checkbox live page add attribute vanilla js believe whatg calls state probably reflects pre js framework days notion form submitted first external state checkbox match server side value anyway think others existing code expect existence proper setting attribute", "d": "8/2015"}, {"body": "think simplest solution create component sets accordingly", "d": "8/2015"}, {"body": "bloodyowl zpao pointed using solves issue point general would recommend setting inline html elements styles exist stylesheets managed bigger question semantic meaning attribute common use much existing code relies existence behavior", "d": "8/2015"}, {"body": "hereby add support custom nonstandard dom events", "d": "8/2015"}, {"body": "use module written functionality described", "d": "8/2015"}, {"body": "know mean react support array object string", "d": "8/2015"}, {"body": "react trying keep api simple possible always pick something like described docs sairion referenced", "d": "8/2015"}, {"body": "wonder done way classnames attr probably one important ones", "d": "8/2015"}, {"body": "thanks bringing valid question one discussed current behavior exists stay inline expected dom behavior string make change like suggested would probably use another dom property like array still need convert vanilla array make addremove calls also need work make sure clone array provide props simple equality longer work since would possible pass array reference props render passes regardless really important dom element level composite components take whatever props want convert strings rendering dom elements", "d": "8/2015"}, {"body": "using classnames dedicated module used outside react best option even switching classlist nt cover use cases classnames covers zpao already partially covered fact props passed reactdom elements based dom property equivalents html properties initial examples also nt good ideas supported directly react js makes sense classnames nt map valid js value passed props js also sure example supposed requesting nt make sense string keys nt even pattern implemented classnames", "d": "8/2015"}, {"body": "ok see thx continue focus", "d": "8/2015"}, {"body": "ok move container like fyi ok move react rendered inside container current api", "d": "8/2015"}, {"body": "sweeet thanks syranide", "d": "8/2015"}, {"body": "sure try running code another browser break exceptions enabled spurious problems browsers silently dropping errors", "d": "8/2015"}, {"body": "tried fiddle tested chrome firefox swallowing reference error nt think bug react happy reopenreinvestigate get repro fiddle", "d": "8/2015"}, {"body": "noticed errors thrown components also getting lost", "d": "8/2015"}, {"body": "react nt swallow exceptions promise probably promises getting see related issue reports", "d": "8/2015"}, {"body": "broken would care elaborate", "d": "8/2015"}, {"body": "dupe less nt know yet whether want support", "d": "8/2015"}, {"body": "something wrong old version motivation us upgrade generally good uptodate", "d": "8/2015"}, {"body": "strong motivation imo changes generaly focused around bug fixing simplificationefficiency", "d": "8/2015"}, {"body": "ok going go ahead close bug nt want stay uptodate nt currently bug results us slightly date nt ship webcomponents polyfill users testing since wo nt get much value updating return investment low probably worth fixing moment new version changes affect us go ahead update", "d": "8/2015"}, {"body": "pushed flattened commits one work", "d": "8/2015"}, {"body": "wahoo", "d": "8/2015"}, {"body": "cc cpojer", "d": "8/2015"}, {"body": "thanks mod made refactoring loads easier", "d": "8/2015"}, {"body": "probably warn case wrap thank", "d": "8/2015"}, {"body": "probably use classproperty behind flag throwwarn flag enabled", "d": "8/2015"}, {"body": "could also inline constructor", "d": "8/2015"}, {"body": "constructor means something different inlining though time guess fine correct fix probably", "d": "8/2015"}, {"body": "primarily response classproperty suggestion use classproperty also put constructor better compatibility meant yeah correct fix actually adding prototype", "d": "8/2015"}, {"body": "specify dynamic uncontrolled input want reset bump key value new defaultvalue empty string whatever defaultreset value want effectively reset component internal state could also break react use plain javascript manually reset input state since using uncontrolled input anyway component effectively expecting triggers outside react modify nt break component mental modelcontract could use controlled input mentioned correct solution imho anyway several options disposal job engineer choose one best use case", "d": "8/2015"}, {"body": "jimfb understand hacks achieve desired result using although would expect defaultvalue virtual dom accurately reflects defaultvalue real dom seems odd react completely disregard modifications defaultvalue", "d": "8/2015"}, {"body": "sense hack people want fire forget solution implementing tags think initialvalue instead defaultvalue may make sense point get single opportunity specify value component creation time component takes point forward react pushes topdown data flow reason siblings randomly influencing node state becomes difficult reason state application even harder understand ramifications given change need able influence component state state longer internal component definition modeling internal state violation abstraction touching component internal state violation abstraction need control component state probably using controlled component imo", "d": "8/2015"}, {"body": "jimfb understand view want fire forget form react seems support seems odd uncontrolled forms supported nt allow browser handle defaultvalue defaultchecked trying reset uncontrolled form seems impossible react without hacks rewriting controlled form necessarily control since dependencies use uncontrolled inputs work native forms reset even form controlled limitation unreliable use native reset form trust react actually updated default values form form rerendered saying react users never rely reset forms may initialvalues changed", "d": "8/2015"}, {"body": "dylanpiercey saying resetting form currently resets form elements initial values currently expected behavior conceptually component saving initial property state first mount using state variable point forward ca nt go back time ca nt change initial value already sent want control state components would recommend using controlled input exists exact purpose giving control could always implement component behaves like uncontrolled input anything internally implements whatever semantics like", "d": "8/2015"}, {"body": "dylanpiercey also grab native dom node set manually prefer honestly confused api proposing though would react know reset value know keep user entered", "d": "8/2015"}, {"body": "spicyj current solution create inputs javascript input reactcreateclass componentwillreceiveprops nextprops nextpropsdefaultvalue thispropsdefaultvalue nextpropsdefaultchecked thispropsdefaultchecked var input reactfinddomnode inputdefaultvalue nextpropsdefaultvalue inputdefaultchecked nextpropsdefaultchecked render return basically keeps defaultvalue defaultchecked sync dom actually updates input never touched user form reset guess little misleading browser default modify defaultvalue would propose something like seems like want unambiguous could throw defaultvalue initialvalue initialvalue could override defaultvalue initial render", "d": "8/2015"}, {"body": "maybe make update dom people use reset buttons nt come", "d": "8/2015"}, {"body": "likely red herring warning nt best job detecting differnces like improved master try latest betas see still repros", "d": "8/2015"}, {"body": "rather would still report something different point actual difference random encoded entity see discussion", "d": "8/2015"}, {"body": "posted issue well turns chrome support package fall back using native method key ordering different using vs polyfill", "d": "8/2015"}, {"body": "weird would expect use enumeration order", "d": "8/2015"}, {"body": "traced used messing enumeration order actually problem may within changing underlying structure tell using may behave differently node chrome", "d": "8/2015"}, {"body": "yeah use forin loop", "d": "8/2015"}, {"body": "switch package works fine", "d": "8/2015"}, {"body": "appears bug used marked issue workingasintended unfortunately also created issue since issue arose switched using", "d": "8/2015"}, {"body": "good sleuthing", "d": "8/2015"}, {"body": "cc zpao since one manages stuff pages mostly static maybe exception little javascript seems like ideal thing would detect user preferred language browser headers one translated languages let know translated docs available nudge direction put notice banner something link appropriate translation way users see translated docs regardless reach site search engine results links forums etc", "d": "8/2015"}, {"body": "definitely high list things docs actually looking recently right situation nt awesome like get us slightly better place biggest problem even get japanesekoreanchinese docs hard stay sidebar links english docs works click next buttons fragile started solve never got got traction also really fragile design changes need made places looking alternatives keep updated", "d": "8/2015"}, {"body": "almost certainly red herring warning message improved probably show real cause", "d": "8/2015"}, {"body": "interestingly adding change fix encoding issues seems ordering attributes different client vs server still happening chrome probably outerhtml working necessarily react", "d": "8/2015"}, {"body": "yeah might best log manually use favorite diff tool", "d": "8/2015"}, {"body": "easiest call rendertostring server client compare making root ids findreplace love make nore automatic", "d": "8/2015"}, {"body": "take account though nt see warning firefox instance markupstate nt think warning problem markup used checksum calculation client", "d": "8/2015"}, {"body": "canreusemarkup looks checksum html browser touches nt crossbrowser differences maybe code feature detection sort", "d": "8/2015"}, {"body": "ah right makes sense deep diving markup see different", "d": "8/2015"}, {"body": "posterity sake turns chrome support package fall back using native method key ordering different using vs polyfill", "d": "8/2015"}, {"body": "instead using work nt actually attach node creates suspicion getboundingclientrect reporting dimensions would make sense actually dom", "d": "8/2015"}, {"body": "yes thank figured something like imaginary dom existed could nt find anyone else issue makes lot sense", "d": "8/2015"}, {"body": "get different keys case since different slots null placeholder exists components shown essentially key b key something like would need keys future please use issue tracker bugs react", "d": "8/2015"}, {"body": "please report issue packaging system would need understand", "d": "8/2015"}, {"body": "oh ok", "d": "8/2015"}, {"body": "workaround setattribute componentdidmount awesome probably skipped marked deprecated suggested use think probably best alternative still value could want give shot", "d": "8/2015"}, {"body": "thanks pointing make sure read mozilla docs next time pr", "d": "8/2015"}, {"body": "part", "d": "8/2015"}, {"body": "docs updated unclear say merge nt technically wrong thinking usually referred recursive merge deep merge lodash documentation even", "d": "8/2015"}, {"body": "said would possible recursive merging setstate actually sounds useful", "d": "8/2015"}, {"body": "yaycmyk bad idea free similar want though would nt recommend", "d": "8/2015"}, {"body": "update docs clarify shallow merge wo nt change recursive merge thanks bringing", "d": "8/2015"}, {"body": "zpao probably close pr associated issue merged", "d": "8/2015"}, {"body": "checking function", "d": "8/2015"}, {"body": "rads", "d": "8/2015"}, {"body": "rads might enough bit fragile also means classes ecmascript never default function might one way rendering future eg might still work though need check difference terms engine optimizations options", "d": "8/2015"}, {"body": "nt think ducktyping way go much fragile extend bit annoying stateless components would provide lot possibilities future guess", "d": "8/2015"}, {"body": "another solution would allow arrow functions plain functions since undefined prototypes easily detectable eg would ed arrow functions would ed kind sucks transpilers since nt follow part spec", "d": "8/2015"}, {"body": "sebmarkbage performant way transpilers change behavior", "d": "8/2015"}, {"body": "extend reactcomponent bit annoying stateless components component stateless turn function", "d": "8/2015"}, {"body": "asking users brand classes symbol would probably awkward", "d": "8/2015"}, {"body": "asking users brand classes symbol would probably awkward decorators seems better course early decorators", "d": "8/2015"}, {"body": "however wo nt work nullfalsestring return values want support excited see happen also mean needing wrap jsx interpolated strings eg currently wraps latter part tag", "d": "8/2015"}, {"body": "threepointone still case unrelated", "d": "8/2015"}, {"body": "sebmarkbage want prototype check static flag", "d": "8/2015"}, {"body": "would nt work property initializers autobound decorator autobinds everything extending seems unnecessarily strict though nt know", "d": "8/2015"}, {"body": "nt yet buy argument nt solved userland alternative think might better teach state hoisting rather trying implement something part core personally still fan statehoisting pattern similar different component implementations provide blackbox state object may retained parent parent provide component state component initialize one internally case parent forfeits option preserve child component internal state also solves three use cases described without special logic within core without increasing api surface area added benefits instance allowing parent query component internal state without getting ref component implementor chooses expose internal information part public api useful things like form serializability decided implementor childview recommend pattern become defacto standard preserve entire subtrees saving root internal state imo aggressively utilize design pattern solve problem statehoisting pattern becomes defacto standard many problems evaporate nt require universal libraryframework requires components provide way passing internal state may treated blackbox parent", "d": "8/2015"}, {"body": "jimfb disagree simple everyone building library around boilerplate deal diffing lists etc edit case would solved problem user space", "d": "8/2015"}, {"body": "sebmarkbage yeah diffing lists sucks solved clever diffing libraries implementation remains internal component nt need global external state library components swap diffing implementation without breaking componentslibraries various diffing libraries coexist perfectly without stepping toes without requiring conformance global data loading interface therefore harming ecosystem could even release officially supportedrecommended listdiffing implementation imho people developing frameworks nt know anything better nt sufficiently taught data hoisting pattern never mentioned docs", "d": "8/2015"}, {"body": "something user space components wo nt able integrate well great point one already see taking shape current flux landscape every flux library little ecosystem", "d": "8/2015"}, {"body": "interested one reasons started redux able keep state tree computation let app think static value look redux devtools work keep lifted state initial app state debug ui staged actions replayed hot reload current state index useful slider monitors app sees unlifted state makes behave normally unaware state backed computation another observation use fluxredux means keeping state alive rather keep state shape normalized like database nt worry nt match view hierarchy use memoized computed data view layer need action log lets understand happened app potentially implement lifted state approach described time travel right hard imagine react could solving problem want state logic composable like ui composable different trees ui tree uses abstractions like list view show paginated items model tree may use abstractions like paginated reducer factory creates reducers managing pagination data ongoing requests map though new interesting thing form component mounted redux state tree dependency redux per se nice works recordreplaydevtoolsetc prop interface needs state provider terms current state function nt care provided redux something else nt care state mounted long mounted somewhere changes fact could work fine async talked server state would transferred wire sure helps thoughts sure fit react", "d": "8/2015"}, {"body": "gaearon implement hot reload time travel purpose devtools debugging model people even mutation reducers simplifies implementation nt feature use case solved put another way features get purely framework maintained react sent pr p would flexibility add features examples use cases reducers production environment see use case declarative programming solve timing issues eg allowing execution deferred based tree inconsistent state however allow us defer tree resolution therefore props invoking dispatch use case solved state reducers per say since transformation props still synchronous use case make valuable solves rollback scenario think big difference flux patterns react component state tree divergence two hierarchical models seem inherently incompatible since one optimizing componentization optimizing domain modeling perhaps top app modeled domain leaves opaque component state somehow except deal user form open twice different dialogs different state refactor domain model model view concepts loses appeal domain model begin perhaps remain parallel", "d": "8/2015"}, {"body": "forgive quasiignoring comments like focus particular design avenue going make part public api nt expose concrete data types immutablejs state values instead specify interface implemented state stores however probably want expose concrete data type state keys case concrete state value data types simple benefit restricting state maybe immutable abstract data type state store nt need restrictions keys hand critical requirements influence implement state store protocol need decide want keys opaque exposed structure opaque means singlelevel map basically realistic option basis implementation eqhash map hash map defined ordering redblack tree btree similar transparent keys hand facilitate treeshaped storage either using prefix key delete range sortedmap structuring store nested tree note exposing tree pathstyle keys closes potential future avenues reparenting stateful components pathstyle tradeoff may wise react exists today another big concern atomicbatch updates store tree path keys atomicbatch remove subtree mentioned state store may still choose iterate deleted state something like decrement refcounts implement cleanup ultimately specified interface variation initgetputdel plus potential extensions interface leaves lifecycle management store pretty selfexplanatory like put value potentially thunk value ignored key already exists subject potential recursive nature discussed given path style keys methods take collections rather operate individual keys enable atomicity batch update efficiencies eg using transient data structure possible variations initgetput like unified whole separate topic rollbackundoetc optionally achieved extending store interface two methods object completely opaque offer immutability object guarantee", "d": "8/2015"}, {"body": "let clarify situation really want avoid often hear arguments goes something like expose b c let user implement however want totally flexible except course b c really one reasonable way implement think alluded brandonbloom one data structure becomes defacto implementation many small ones effectively value provide authors understand inner workings short experimental implementations bypass react logic anyway especially decoupled renderers allowing room experimentation nt necessarily primary goal already would optional data structures state store try solve better language interop app specific perf tradeoffs leaning towards idea nt really matter nt think restrict put values state user space content obviously lot different data structures might useful although immutable serializable would nice", "d": "8/2015"}, {"body": "really one reasonable way implement exactly want nt lot things normal users nt writing would optional data structures state store try solve better language interop yes would enable regular js objects reactjs outofbox immutablejs frameworks built reactjs clojurescript data structures om etc alternatively insist standard immutablejs make conscious decision force frameworks om either translate state values immutablejs gooutside system implement state stores insisting standard would enable global undosnapshotetc would also massive breaking change since people store plain old javascript objects state best could strongly encourage immutablejs disallow storage stateful unserializable objects proposal assumes heterogenous state storage new framework propose forcing immutablejs ignore higherlevel frameworks like om", "d": "8/2015"}, {"body": "nt thought much others use case really want want full snapshotting sure obvious want say nt even think undo strong enough use case usually want undo take special care track state want undo also need perform action server revert change usually fine use userland library stuff course immutable database dumb snapshotting possible many people use immutable dbs full snapshotting something really begs controlling entire state tree lives even child components nt know state actually internal snapshotting really useful debugging even production keep track last n app states something goes wrong serialize send somewhere developer resume watch see happened also useful showing parts site statically example go press cmdshiftk paste plan researching nt much else contribute right understand difficulty though implementing library really bad though works single react tree mounted nt even know going able track multiple mounted trees", "d": "8/2015"}, {"body": "think base data structures must cursorlike simple api get set extend functionality think must something like interface course baobab provided example think separation container cursor navigates data container help achieve modularity immutablecursor nativecursor need container stay", "d": "8/2015"}, {"body": "personally still fan statehoisting pattern pattern almost identical usability perspective difference subtle nt require special support react", "d": "8/2015"}, {"body": "current code looks like attempts append information", "d": "8/2015"}, {"body": "make best attempt including reference owning component specific case nt warning please include code try help better", "d": "8/2015"}, {"body": "hmm get name component surrounding html changed running next sentence message check render method timetableentryform allthough useful information component generates quite lists elements finding bug quite hard suggesting error also add information html surrounding list component generated markup", "d": "8/2015"}, {"body": "edit actually think gone", "d": "8/2015"}, {"body": "springuper afik still works latest done recently", "d": "8/2015"}, {"body": "got grunt test breaking master fresh node modules tried iojs node node", "d": "8/2015"}, {"body": "result using iojs node nt currently build either use node npm different issue", "d": "8/2015"}, {"body": "happy submit pr approved", "d": "8/2015"}, {"body": "already define proptype user land use components nt blocking issue nt working proptypes feature anymore everything moving static analysis tools like flow proptypes way sure accept pr know something actively develop internally", "d": "8/2015"}, {"body": "react version context something says ie comments", "d": "8/2015"}, {"body": "likely able reproduce give us contained ideally reduced example impossible say something wrong code pasted mixins jquery ca nt run code really good chance ca nt figure problem thing jumping initially need tbody around tr might cause would result browser modifying dom usually different error", "d": "8/2015"}, {"body": "nt fix issue please file new one simple repro case use test", "d": "8/2015"}, {"body": "calling component cause rerender force rerender using function sounds like usage question rather bug react use github issues track bugs react going close feel free continue discussion thread take discussions stackoverflow", "d": "8/2015"}, {"body": "prolem setstate rerendered checked info nt render", "d": "8/2015"}, {"body": "trquoccuong take look documentation controlled components likely want handle user checking box set prop", "d": "8/2015"}, {"body": "update new version easy debug everything rerender checked status nt remove set checked prop think need change question answer changed status dont problem rerender input form checked strange", "d": "8/2015"}, {"body": "solution think improvement", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "syranide thanks testing", "d": "8/2015"}, {"body": "understand coming switched consoleerror latest version get full stack trace console put breakpoint warning callsite catch debugger check pause caught exceptions get stopped debugger document better nt throw subtle reason want allow inlining elements compile time example would approximately equivalent would nt throw since want observable behavior match identically dev prod cases nt want ever throw createelement sorry makes debugging little harder", "d": "8/2015"}, {"body": "glad switched thanks explanation", "d": "8/2015"}, {"body": "thanks flagging understand pain also sure actually right thing sebmarkbage want support ways nonjs compile js say scalajs needs fix expect displayname instance property path least resistance future js classes", "d": "8/2015"}, {"body": "intuition classes become utilized wild problem solve self mean time probably make good faith effort support popular compiletojs languages coffee script scalajs etc less popular ones conform one compile outputs bigger ones realistically probably already anyway", "d": "8/2015"}, {"body": "something needs solved scalajs language compatibility level ideally preserve function exports js class notion object properties perhaps something like could work nt know", "d": "8/2015"}, {"body": "sebmarkbage thanks hint scalajs emitting function name added manually everything looks fine", "d": "8/2015"}, {"body": "according facebookflow fixed probably post repo still nt work", "d": "8/2015"}, {"body": "per johnydays flow repository would better place", "d": "8/2015"}, {"body": "might issue command line transforming properly case encourage start using babel instead", "d": "8/2015"}, {"body": "work single child", "d": "8/2015"}, {"body": "browniefed basically", "d": "8/2015"}, {"body": "reactchildrenmap work fine single child please file issue repro case find otherwise", "d": "8/2015"}, {"body": "spicyj code fail see console output", "d": "8/2015"}, {"body": "yordis need call like", "d": "8/2015"}, {"body": "browniefed oh guess reason sorry mistake", "d": "8/2015"}, {"body": "little surprised code nt work sure code app specifically error message seems reference paper component nt see used though maybe part raisedbutton could create simple jsfiddle demonstrates issue investigate trying use github track bugs react questions like better addressed stackoverflow since bug current version react master switched parent context warning gone since appears question rather bug going close tracking purposes feel free continue discussion thread move stackoverflow", "d": "8/2015"}, {"body": "addition context never documented supported please nt file issues asking use", "d": "8/2015"}, {"body": "works today still point okin fact like context materialui use", "d": "8/2015"}, {"body": "nt use either", "d": "8/2015"}, {"body": "workaround would recommend getting manually setting attribute js function attachcustomattributes domnode domnode domnodesetattribute webkitinline class video render return", "d": "8/2015"}, {"body": "see long history custom attributes", "d": "8/2015"}, {"body": "think want file nt react issue", "d": "8/2015"}, {"body": "oops meant must still form entry sorry confusion", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "seems work fine could paste error seeing ps required", "d": "8/2015"}, {"body": "failed load resource server responded status found", "d": "8/2015"}, {"body": "need sourceorigination going go limb assume react requiring file external code incorrectly accesses react internals expects", "d": "8/2015"}, {"body": "thanks got pointed right direction appears issue importing reactgridlayout", "d": "8/2015"}, {"body": "yup react moved files different project sharing deps fbjs long said requiring probably break starting force", "d": "8/2015"}, {"body": "assumes get dom node free whatever inside safediv included outer div showcase necessary js class externalfoobarwrapper componentdidmount dowhateverinside thisrefssafe render return blabla", "d": "8/2015"}, {"body": "syranide correct whatever want within children leaf node react render tree react prohibit using mutative apis long nt interfere nodes rendered react say nt mutate node rendered react would confuse react reconciliation algorithm addmutate children leaf node nt modify children nonleaf trying use github issues track bugs react rather questions reason going close bug feel free continue discussion thread future reference questions like better answered stackoverflow", "d": "8/2015"}, {"body": "version react using moved addons separate projects", "d": "8/2015"}, {"body": "actually using versions react use version create alias karma webpack build react reactaddons entirely separate bundles pre", "d": "8/2015"}, {"body": "really nt entirely separate bundles requires requires requires issue definitely come various packagers nt really anything closing usage questions like probably better luck stack overflow", "d": "8/2015"}, {"body": "yaycmyk set working alias react amp karma stuck get alias working configuration zpao thanks input although given asking even slightly complicated questions", "d": "8/2015"}, {"body": "jonira feel free contact via email evan yaycmykcom nt cluttering react issue tracker", "d": "8/2015"}, {"body": "componentwillmount fires upon mounting loop call component mounted unmounted componentwillreceiveprops trick least best solution know", "d": "8/2015"}, {"body": "problem react post mine correct componentwillreceiveprops fire repetitively attempting done inside render method close issue find much better faster help stack overflow", "d": "8/2015"}, {"body": "see setting property child wo nt trigger child hence makes believe bug report", "d": "8/2015"}, {"body": "actually antipattern nt modifying props consider immutable actually freeze dev information actually want store state use would cloneelements render children get rendered correct style something like obviously lot still missing coffee reactcreateclass distributeheights gt want careful otherwise get stuck infinite render loop used componentdidupdate thissetstate height propsheight reactfinddomnode refstabbedarearefstabs render gt children reactchildrenmap child gt reactcloneelement child style height thisstateheight tabbedarea props children", "d": "8/2015"}, {"body": "thanks helps lot", "d": "8/2015"}, {"body": "cc spicyj added warning", "d": "8/2015"}, {"body": "well previously safari autocompleted assumed would right thing use leaving one following pattern moztransform webkittransform otransform mstransform guess moz odd one effectively dead", "d": "8/2015"}, {"body": "sigh", "d": "8/2015"}, {"body": "please use github issues bug reports react", "d": "8/2015"}, {"body": "locale one intended use cases context dynamically changing occasionally expected supported extent context supported keep mind changing context may somewhat expensive avoid setting every frame whatever yeah known bug might run closing since use github issues track bugs react question rather bug better place questions like would discussreactjsorg stackoverflow", "d": "8/2015"}, {"body": "got thanks help aug pm jim notifications githubcom wrote locale one intended use cases context dynamically changing occasionally expected supported extent context supported keep mind changing context may somewhat expensive avoid setting every frame whatever yeah known bug might run closing since use github issues track bugs react question rather bug better place questions like would discussreactjsorg stackoverflow reply email directly view github", "d": "8/2015"}, {"body": "arrayof oneoftype timeshape placeholdershape done past appeared work correctly time", "d": "8/2015"}, {"body": "making johnydays example legible", "d": "8/2015"}, {"body": "yaycmyk tried exactly js import react react let timeshape placeholdershape timeshape reactproptypesshape type reactproptypesoneof time isrequired date reactproptypesnumberisrequired url reactproptypesstringisrequired position reactproptypesnumberisrequired placeholdershape reactproptypesshape type reactproptypesoneof placeholder isrequired position reactproptypesnumberisrequired export default reactcreateclass proptypes times reactproptypesarrayof reactproptypesoneoftype timeshape placeholdershape isrequired using invalid data eg produces error", "d": "8/2015"}, {"body": "getting error meant", "d": "8/2015"}, {"body": "right works fine must done something wrong original code", "d": "8/2015"}, {"body": "glad worked rocket", "d": "8/2015"}, {"body": "feel free add directly wiki", "d": "8/2015"}, {"body": "render elements dom issues pseudo selectors clientside make possible return right need component map node restriction place continue insert elements nt really fix sight couple issues going close", "d": "8/2015"}, {"body": "little bit clarification since nt initially notice specifically trying keep code path output much possible makes somebody could switch mount client without revisit stylesheets assumptions like dom structure", "d": "8/2015"}, {"body": "ok understand thank quick reply fact webpage generator backend side use css frontend side displays rendered html stored db worked around adding different root element thanks", "d": "8/2015"}, {"body": "zpao could use comment node instead noscript", "d": "8/2015"}, {"body": "iirc issues though nt know top head perhaps chenglou", "d": "8/2015"}, {"body": "eh think comment would accidentally disappear older browsers syranide knew", "d": "8/2015"}, {"body": "behavior nt exist might serve useful alternative", "d": "8/2015"}, {"body": "still support yeah", "d": "8/2015"}, {"body": "nt recall us considering comment nodes sounds like good idea though would also believe syranide says", "d": "8/2015"}, {"body": "chenglou iirc whitespace bug affects comments making disappear issue us iirc also bug adjacent comments merged single comment node sure conditions affect ed knockoutjs perhaps info found comments like text nodes nt appear nt think obstacle us spicyj think mentioned never discussed pr using comments instead spans text nodes though", "d": "8/2015"}, {"body": "syranide trouble finding information comment coalescence bug ie find dom method called could explain adjacent text nodes merged used hood nothing specifically comment nodes", "d": "8/2015"}, {"body": "yaycmyk long time ago memory really fuzzy remember knockoutjs affected comment quirks", "d": "8/2015"}, {"body": "closest find", "d": "8/2015"}, {"body": "webpack bableloader better choice", "d": "8/2015"}, {"body": "questions like better addressed stackoverflow trying keep github issues tracking bugs react bug react going close feel free continue discussion thread move conversation stackoverflow", "d": "8/2015"}, {"body": "bug see docs props used initial render", "d": "8/2015"}, {"body": "mentioned working intended actually want controlled component", "d": "8/2015"}, {"body": "thanks nikolaymatrosov zpao", "d": "8/2015"}, {"body": "use checked property works see", "d": "8/2015"}, {"body": "react pools synthetic events call make sure event nt put back pool see info", "d": "8/2015"}, {"body": "koulmomo thank looking issue able resolve case value user type got lost eventtargetvalue p handleinputchange value lost tried searching issues react looking sure yet issue know suggestions kindly let know", "d": "8/2015"}, {"body": "solved passing eventtargetvalue parameter instead sending event", "d": "8/2015"}, {"body": "got caught work yesterday thanks reminder", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "creating div inside table invalid html browser actually rearrange dom nodes happen tables especially fragile like react always renders node replace could render thead tbody even tr td render single node table keep existing children known limitation react ca nt get rid point need design structure bit differently work sorry", "d": "8/2015"}, {"body": "solves betaversions select version following", "d": "8/2015"}, {"body": "bring good points lack documentation absolutely nt document everything go sometimes get lands master usually file issue close release list things still need documented place discuss quite sure issue right place might want say would excellent though spicy might tell wrong jsfiddle yea nt awesome mostly chosen ship browser builds alphas betas rcs finals especially nt sure package trying split react reactdom unadvertised fiddle uses latest builds master server intended get builds sanctioned location nt yet go wild peerdependency problem think dependency problem solved using pattern syranide mentioned still annoying used pretty sure working though unfortunate publish tag perhaps could also tag least scope opposed picking alphas come", "d": "8/2015"}, {"body": "might interest note make peer dependency problem less problematic making warning instead error", "d": "8/2015"}, {"body": "thanks infos discovered seems quite bunch spammers zpao jsfiddle give always address latest prerelease syranide seems solution works unfurtunatly still force library authors update packagejson least add first beta nice know wiill permissive zpao would nice recommendation library authors put packagejson want permissive lib users test alphabeta tests found using something like lib seems first work great able select automatically also rc stable version client lib declares also btw nt exactly know works seems alphabetarc special names semver prerelease tags see also", "d": "8/2015"}, {"body": "syranide seems solution works unfurtunatly still force library authors update packagejson least add first beta nice know wiill permissive slorber entire point semver dependencies new version dependency needs tested used package nt care specify point sticking version numbers still force install supposedly incompatible versions today well bothersome really poor idea reason claiming compatible future release versions true", "d": "8/2015"}, {"body": "yes syranide absolutly right theory practice library authors always testingupdating immediatly new version react come point simpler lib users test lib alphabeta maybe give feedback lib author afterward want basically set semver range supported stable versions still also allow alphabetarc used users without much pain dealing shrinkwrap", "d": "8/2015"}, {"body": "seems quite bunch spammers uggh let crank spam protection spicyj zpao jsfiddle give always address latest prerelease always latest build master likely ahead latest prerelease always address update original move location builds want basically set semver range supported stable versions still also allow alphabetarc used users without much pain dealing shrinkwrap unfortunately nt really problem realistically solve make suggestion put dependency mentioned prereleases still something library author dependency management npm mentioned tag publishing perhaps work", "d": "8/2015"}, {"body": "zpao try use like said work also tried use packagejson next peerdependency npm warn packagejson stample repository field npm warn packagejson stample license valid spdx license expression npm err linux npm err argv install npm err node npm err npm npm err code epeerinvalid npm err peerinvalid package react satisfy siblings peerdependencies requirements npm err peerinvalid peer atomreact wants react gt next npm err peerinvalid peer reactdatepicker wants react gt next npm err please include following file support request npm err homesebastiendesktopstamplereactnpmdebuglog moving peerdependency libs normal dependency seems work warning sure use tags npm seems npm consistent behavior would expect flexible regarging peerdependency normal dependencies", "d": "8/2015"}, {"body": "notice using app peerdependency libs able get new ideal seems flexible option lib authors want support alphabetarcs given version", "d": "8/2015"}, {"body": "adding would consider tagging alphabeta releases looking diff versions makes bit easier figure changed inclined try early releases otherwise need track specific commits tedious", "d": "8/2015"}, {"body": "simulateclick works dom node passing one javascript click btn add item function", "d": "8/2015"}, {"body": "dmatteo still working even pass dom node", "d": "8/2015"}, {"body": "nt see component logic ca nt tell checking length children click test click actually working attaching click handler button pass spy sinon example see click actually firing", "d": "8/2015"}, {"body": "comments like inappropriate space deleted another made previously please read refrain future warning", "d": "8/2015"}, {"body": "ca nt find information regarding decision reactaddonsbatchedupdates goes away supposed batch setstates nondom event handlers", "d": "8/2015"}, {"body": "right batching part reconciler lives even used nondom event handlers", "d": "8/2015"}, {"body": "zpao gone ahead written reactmount library however running issues injects depends dom importing react looks like importing calls ca nt find way stopping think good idea move package", "d": "8/2015"}, {"body": "plan yes need keep package avoid breaking everyone using however marked deprecated plan get rid dynamic injection completely rely static dependency injection eg overridable module resolution probably see lot changes area next months since goal clarify api official way make renderers", "d": "8/2015"}, {"body": "sebmarkbage okay thanks clarifying time dependant dom would cool injection could called somewhere else react package loaded maybe render function renderers could inject plugins least done statically", "d": "8/2015"}, {"body": "warning nt", "d": "8/2015"}, {"body": "wonder kind message put warning event pooling going documented may strange explain pooling system inside warning", "d": "8/2015"}, {"body": "yes event pooling shouldwill documented feel free submit pr add warning let user know event returned pool invoking methods makes sense docs written add link end warning", "d": "8/2015"}, {"body": "got pr would really appreciate feedback", "d": "8/2015"}, {"body": "repo shows issue currently updating react reactdom", "d": "8/2015"}, {"body": "seem get error message sure somewhere", "d": "8/2015"}, {"body": "nt example repo component using first thought reactredux thing without", "d": "8/2015"}, {"body": "looking coming reacthotloader want make sure date report accessing actually factory said strongly encourage export factories instead convert classes factories consuming component module exporting factory used way jsx words primary js api createelement", "d": "8/2015"}, {"body": "cheers somehow missed follow recommendation well", "d": "8/2015"}, {"body": "probably make unnecessary", "d": "8/2015"}, {"body": "awesome thanks heads", "d": "8/2015"}, {"body": "issue simpler example throws error js describe gt var react var reacttestutils beforeeach gt jestresetmoduleregistry react require react reacttestutils require reacttestutils test gt class extends reactcomponent componentwillmount thissetstate true reacttestutilscreaterenderer render", "d": "8/2015"}, {"body": "way getting around issue currently running", "d": "8/2015"}, {"body": "sorry slow response us fb principal author shallow render feature react core nt main gig swamped product work nt offhand answer tnrich put time calendar look next week jim ben paul chance one happened take care would nt mad", "d": "8/2015"}, {"body": "update end think problem actually went away deduped npm dependencies remove extra react version causing issues error pops let know thanks response fri aug pm scott feeney notifications githubcom wrote sorry slow response us fb principal author shallow render feature react core nt main gig ive swamped product work nt offhand answer tnrich put time calendar look next week jim ben paul chance one happened take care would nt mad reply email directly view github", "d": "8/2015"}, {"body": "hmm still able reproduce issue test case running npm dedupe", "d": "8/2015"}, {"body": "clarify previous comment nt supposed mean issue gone away think seeing separate issue caused multiple react versions misidentified issue hope makes sense", "d": "8/2015"}, {"body": "spicyj ok guess object destructuring variable names make sense though keep mind relevant context making convenient developers sense use variable names prop names way case invalid working destructuring shorthand sugar object destructuring forced use variable names property names use full object destructuring syntax etc", "d": "8/2015"}, {"body": "want work pretty simple write babel transform convert example", "d": "8/2015"}, {"body": "cmmartin sounds like bad idea makes class jsx work however prop still still accessed via result end confused developers using code scratching heads nt contain classes passed", "d": "8/2015"}, {"body": "correct although argue developers know reserved word javascript workaround nt surprise either given browser already works exactly way html attribute corresponding javascript property dom objects", "d": "8/2015"}, {"body": "cmmartin suggestion might make sense dom components would utterly surprising userdefined component write means classname old version jsx transform transformation scrapped way surprising", "d": "8/2015"}, {"body": "agreed explored solution means paste chunks dom written designers high level react components much advocating suggesting possibility similar situations aside special cases think current solution works best", "d": "8/2015"}, {"body": "maybe use instead", "d": "8/2015"}, {"body": "agreed beta version could kind parameter enforce whitelist proptypes future version could become required depending community acceptance", "d": "8/2015"}, {"body": "definitively kind property initialization whitelisting property owned exactly one component components passing property kind protected channel", "d": "8/2015"}, {"body": "developed higher order component", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "hey get right using nt seem work way workaround could nt succeed using fire way", "d": "8/2015"}, {"body": "mdibaiee prerelease nt work guess final version wo nt work neither works react everything alone point browser takes different browsers produce different markup", "d": "8/2015"}, {"body": "nt work either hacking using way mention readme react nt support firefox", "d": "8/2015"}, {"body": "mdibaiee maybe missunderstanding question using react renders firefox using alpha instead beta release", "d": "8/2015"}, {"body": "using module alphas npm output", "d": "8/2015"}, {"body": "mdibaiee ah might help", "d": "8/2015"}, {"body": "jimfb oh nt aware thanks pointing", "d": "8/2015"}, {"body": "okay using babel right ca nt find way use beta features transformer ideas", "d": "8/2015"}, {"body": "mdibaiee great question ask babel support group clear removed optimizations bury mentions site", "d": "8/2015"}, {"body": "sure react rendering tag incorrectly related babel", "d": "8/2015"}, {"body": "sebmck original issue last question thread specifically using babel", "d": "8/2015"}, {"body": "zpao whoop sorry mdibaiee came chat pointing issue wanting know install beta version babel would fix issue", "d": "8/2015"}, {"body": "seems firefox problem using xhtml instead html rules fact developing firefox addon sorry inconvenience", "d": "8/2015"}, {"body": "react inbuilt functionality hideshow component boolean variable like js mean instead writing thispropsishidden course define prop component manually create new class inherits reactcomponent functionality already present common situation", "d": "8/2015"}, {"body": "writing simpler easy reduces number magic props need remember", "d": "8/2015"}, {"body": "yes visibilityinvisibility closely related rendering process read render element render using props form written would natural htmlish look btw react already overrides almost standart events like onclick instead onclick remembering one standart usefull prop problem", "d": "8/2015"}, {"body": "think composition point view think makes perfect sense use kind explicit conditional rendering father component since based props child component rendered using magic props hurt readability usability yet one magic thing keep mind hate magic", "d": "8/2015"}, {"body": "look would involved implementing internals moved around bit slightly fiddly overload take optional boolean second argument indicate caller thinks warning repeat previous warning lib update relevant callsites pass boolean dedupe logic update eslint rule checks args warning allow new signature possibly provide supported way inject custom rather somehow modify something open accepting zpao seems related", "d": "8/2015"}, {"body": "reactproptypesstringnotnulldefaultvalue default seems little big weird maybe defaultprops could move flow direction much intuitive", "d": "8/2015"}, {"body": "pretty sure correct behavior neither event fire target disabled example would want fire disabled element disabled button think payment button called changing hover state sets state disabled meanwhile user moves mouse away button button state changed back enabled button state incorrect currently state", "d": "8/2015"}, {"body": "jimfb exact problem find solution", "d": "8/2015"}, {"body": "problem using old version reactjs using grab dom element function part new syntax introduced react beta version react working still relies function", "d": "8/2015"}, {"body": "saemchou actually already uses different sense using like", "d": "8/2015"}, {"body": "hi dmatteo thank joining still lot learn react understood introduced last paragraph blog post also getting error react replicated example test using npm dependency management browserify bundle everything could missing something edit got error message started using alongside deal dom elements described", "d": "8/2015"}, {"body": "hard know without seeing code best guess trying access nt exist moved maybe easier start moving implicit separation dom functions", "d": "8/2015"}, {"body": "dmatteo yep got caught separation dom functions managed get working try using still got error mentioned however found still using instead correct way corrected everything working publish code next time realise would save lot time", "d": "8/2015"}, {"body": "usually helps glad figured though", "d": "8/2015"}, {"body": "nt closed", "d": "8/2015"}, {"body": "yes thanks reminder", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "seeing behavior example running reactheatpack js import react react class holder extends reactcomponent render return class parent extends reactcomponent static childcontexttypes value reactproptypesnumberisrequired constructor props context super props context getchildcontext const value thisstate return value componentdidmount thissetstate value render return thispropschildren class child extends reactcomponent static contexttypes value reactproptypesnumberisrequired render return thiscontextvalue export default end instead expected however directly render instead see expected result get work correctly render", "d": "8/2015"}, {"body": "think fixes happened would good doublecheck", "d": "8/2015"}, {"body": "oops nt realize prs indeed works expected current commit master thank", "d": "8/2015"}, {"body": "massive pain swapping custom css preprocessor generates hashed classnames w radium inline hundreds places across large app updating one one painful", "d": "8/2015"}, {"body": "message master context part release wo nt backporting", "d": "8/2015"}, {"body": "need kind nesting could avoid error", "d": "8/2015"}, {"body": "mdcsfk kind nesting trigger error", "d": "8/2015"}, {"body": "jimfb yes ca nt two nested anchor tags html mdcsfk need restructure markup ca nt kind nesting html whether using react usually want change one links actual link add click handler", "d": "8/2015"}, {"body": "oh right dom rewrite anchors right", "d": "8/2015"}, {"body": "probably bad practice call handlers inspect state directly though sebmarkbage state text input seletedindex input would set state later submit ex button clicked however intentionally set related rendered output case think better way inspecting state want test", "d": "8/2015"}, {"body": "moment way test things like componentdidmount componentdidupdate via shallow rendering exposing instance would provide way", "d": "8/2015"}, {"body": "think nt problem somebody else verify", "d": "8/2015"}, {"body": "may fixed sure actually rerenders though", "d": "8/2015"}, {"body": "tried reproduces way sh node e consolelog processversions node uv zlib modules openssl js var react require react var testutils reactversionsubstring testutils require reactaddons addonstestutils else testutils require reactaddonstestutils processenvdocument globaldocument var renderer testutilscreaterenderer var node reactcreateclass getinitialstate function return foo bar clicked function thissetstate foo baz render function return reactcreateelement div onclick thisclicked thisstatefoo rendererrender reactcreateelement node renderergetrenderoutput propsonclick consolelog renderergetrenderoutput propschildren node samplejs return documentbody referenceerror document defined getactiveelement reactreconciletransactionreactinputselectiongetselectioninformation reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform reactupdatesflushtransactionmixinperform reactupdatesflushtransactionassignperform objectflushbatchedupdates objectwrapper flushbatchedupdates reactdefaultbatchingstrategytransactionmixincloseall reactdefaultbatchingstrategytransactionmixinperform document hack node samplejs baz node samplejs return documentbody referenceerror document defined getactiveelement reactreconciletransactionreactinputselectiongetselectioninformation reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform reactupdatesflushtransactionmixinperform reactupdatesflushtransactionassignperform objectflushbatchedupdates objectwrapper flushbatchedupdates reactdefaultbatchingstrategytransactionmixincloseall reactdefaultbatchingstrategytransactionmixinperform document hack node samplejs baz git tags series grep around looks like commit present", "d": "8/2015"}, {"body": "closing broader discussion", "d": "8/2015"}, {"body": "hmm nt see official documentation anywhere kind important know zpao thanks valuable info totally saved pulling hair", "d": "8/2015"}, {"body": "ffxsam pooling behavior documented recently", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "yes idea render returns promise reactelement still able handle loadingerror states", "d": "8/2015"}, {"body": "update basic problem seems object private could exposed publicly users could optin resetting", "d": "8/2015"}, {"body": "yep dantman technique sane way found handle whole close click away click outside component ux", "d": "8/2015"}, {"body": "outputted object testing like react puts key value without keying think either spans like keyed automatically error specific", "d": "8/2015"}, {"body": "tryspace specific preferably code example", "d": "8/2015"}, {"body": "spicyj sorry forgot indent put example code around coffeescript", "d": "8/2015"}, {"body": "also seeing using width zero componentdidmount using react line returning zero", "d": "8/2015"}, {"body": "problem case hidden parent container display none attempting fade display none makes widths zero trying different approach", "d": "8/2015"}, {"body": "also broken chrome per", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "bugging well understand commit fixed merged master released already use installing version npm least tried update helped guess ticket could closed", "d": "8/2015"}, {"body": "confuse commit linked nt react proper kinda bad user libs hack around imo either deprecation warnings users move logic adjust work expected", "d": "8/2015"}, {"body": "ericclemmons yes still react issue", "d": "8/2015"}, {"body": "ah ericclemmons right nt notice confused upgraded react saw comment seemed fix problem", "d": "8/2015"}, {"body": "hm possible fixed", "d": "8/2015"}, {"body": "good find looks like make next release", "d": "8/2015"}, {"body": "also experiencing strange behavior input converting class extends reactcomponent tried binding handler functions constructor well method never even called worked fine using classes debugging day find root problem also noticed mouse click events longer happening scenarios well converting classes mainly focused onchange debugging far luck errors thrown warnings handler functions never even called", "d": "8/2015"}, {"body": "seems natural feature exists react fully support", "d": "8/2015"}, {"body": "plus sugar better providing wrapper component works way want", "d": "8/2015"}, {"body": "syranide noted current plan pull linking core probably throw addon package assuming something find useful encourage publish npm module git repository provides functionality wrapper component people use since something plan supporting core going go ahead close issue", "d": "8/2015"}, {"body": "issue using ie", "d": "8/2015"}, {"body": "issue jmca adding placeholder textarea value onchange event fired", "d": "8/2015"}, {"body": "hey spicyj kinda late would possible get name invalid component let say try use wrong would possible say failing test would help finding fixing errors", "d": "8/2015"}, {"body": "nt possible without changing transform look stack trace see error", "d": "8/2015"}, {"body": "issue fixed components using seeing use", "d": "8/2015"}, {"body": "setstate merges using nonplain object nt supported put whatever object want inner state key thisstatedata thisstatemap etc", "d": "8/2015"}, {"body": "similar glittershark prefer using state found useful using available client side running isomorphic applications javascript class extends component constructor props super props thisstate mounted false componentdidmount thissetstate mounted true render var mounted thisstate mounted", "d": "8/2015"}, {"body": "bug", "d": "8/2015"}, {"body": "hi progress issue still actual", "d": "8/2015"}, {"body": "got use case involving font awesome would support getting fixed icons look like total shite without font smoothing", "d": "8/2015"}, {"body": "lourd add style core sheet", "d": "8/2015"}, {"body": "yep could totally fix adding class div like font awesome recommends walking wild side project experimenting styling javascript bomb", "d": "8/2015"}, {"body": "lourd nothing get fixed firefox supports correct property", "d": "8/2015"}, {"body": "ah bad also realized coming radium varies based support browser facepalm thanks yall", "d": "8/2015"}, {"body": "encountered problem well found dirty workaround wrap work use portal mixin renders react component different dom element raised another problem rendering new component directly unmounting first one case second component wo nt show fixed storing unique key component state dom element calling keys works love less dirty native solution", "d": "8/2015"}, {"body": "cc jimfb", "d": "8/2015"}, {"body": "clarify functions components optimization thing jsx style example would use components like button width checkbox checked true", "d": "8/2015"}, {"body": "rchanou allows performance optimizations core since nt need keeptrack instances also means less boilerplatetyping since need function instead fullblown class would still able use component using jsx like component would still course could use alternate syntax liked better whatever reason creating factory", "d": "8/2015"}, {"body": "jimfb yeah want use jsx realized probably need use babel react options webpack babelloader options right currently give sort thanks", "d": "8/2015"}, {"body": "also seeing unfired onchange events real insights either", "d": "8/2015"}, {"body": "blainekasten kendagriff manage fix problem following code js var mycomponent reactcreateclass changed function consolelog changed render function return b c reactrender documentqueryselector body nt get console testing version", "d": "8/2015"}, {"body": "thanks checking progress ca nt say using special manner works flawlessly react", "d": "8/2015"}, {"body": "record beginning thought may problem react later today found one polyfills causes issue polyfill remove everything gets back normal", "d": "8/2015"}, {"body": "could definitely problem investigate", "d": "8/2015"}, {"body": "note everything touches prototypes may lead similar issues", "d": "8/2015"}, {"body": "yeah use feature test addeventlistener common polyfills set old ie", "d": "8/2015"}, {"body": "first tried one however broke react event handling guess overwriting much original js methods tried official polyfill mdn nt work either end code causing error transformed polyfill removed completely", "d": "8/2015"}, {"body": "blainekasten fiddle works mode still repro problem", "d": "8/2015"}, {"body": "yes still reproduced native", "d": "8/2015"}, {"body": "hey guys ideas improve rendertostaticmarkup method always going nt see could problem slow cpu bound method makes express requests enqueued super slow", "d": "8/2015"}, {"body": "clear react rendering pages limitation team considering moving marko react codebase becomes big move anyone lives palo alto happy give feedback person", "d": "8/2015"}, {"body": "mufumbo nt easy wins suggest right sorry planning spend time working performance next six months hope improve sounds like react might slow server rendering right", "d": "8/2015"}, {"body": "spicyj quick pointers look source code want try optimization low hanging fruit kinda stuff react unviable serverside rendering accumulates cpu bound requests makes node huge delay example every request takes load weird nt matter cpu speed threadsleep code means next request take next next reqs become quickly delay would highly advise putting large warning react homepage saying unviable serverside rendering might solution months love react would ensure reputation project kept intact people working real projects demo tutorials also make sure people refer back warning write blog posts using react isomorphic solution", "d": "8/2015"}, {"body": "mufumbo spicyj said ready give actionable advice ways make rendering faster something actively working literally spent last two weeks pouring flame graphs idea vacation lowest hanging fruit nt keep internal state generating initial mount images currently side effects idempotent state created unnecessary rendering static markup tracking state waste cpu cycles nt generate string streaming output good sending partial renders also good globally measurably cheaper returning string flatten call tree paying approximately one thousandth millisecond every function call call thousands times milliseconds start add injected plugins hurting performance turn sanity checks securitysanitization protection keep safe confident code turning measurable performance benefits turn checksumming protection ready take guards save cpu cycles realistically none actionable advice changes either require large code refactors extraordinarily complex work progress require disabling features believe critical practicality react continue work continue post github useful information disseminate mean time hold tight know everything make react even faster", "d": "8/2015"}, {"body": "thanks lot jimfb spicyj love work react try hold try tips feedback ux performance priority us unfortunately current architecture unreliable users ca nt predict reqsec certain server would kind share people serving react requests serverside rendering ca nt see reliable served simple nodejs express config people making sure server handling one request time", "d": "8/2015"}, {"body": "jimfb rendertostaticmarkup also avoids checksumming excludes checksum data html also ca nt seem find anything disable sanity checks current docs suspect option yet thanks", "d": "8/2015"}, {"body": "mufumbo using package directly npm unfortunate perf problem due checked see require instead development better warnings may vastly improved perf one way make file like let know helps", "d": "8/2015"}, {"body": "spicyj yes preliminary tests seems decreased mean render time please let know ideas like trying everything unblock event loop thanks lot", "d": "8/2015"}, {"body": "probably easy win suggest sorry", "d": "8/2015"}, {"body": "spicyj test using reactmin performance increase good new still far reqseg tldr one current user ab request current user change requests per second sec time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request reactmin requests per second sec time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request current users ab request current users requests per second sec time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request changed time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request current users ab request current users requests per second sec time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request changed requests per second sec time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request", "d": "8/2015"}, {"body": "btw netflix changes render pipeline react decrease render time spicyj contact netflix could changeimprovement server render engine", "d": "8/2015"}, {"body": "hey guys using renderstring instead rendertostaticmarkup nt improve clientside performance taking full second moment react starts parsing completion ideas improve comes kinds bad user experience like blocking scroll phone heat", "d": "8/2015"}, {"body": "general solution blocking concurrent requests break app two applications web server rendering service communicate via message queues nonblocking fair test run server least cores try different numbers worker processes eg web server core prerun tests several times warm jit", "d": "8/2015"}, {"body": "brigand render done node would nt move problem service processing queue", "d": "8/2015"}, {"body": "mufumbo changes problem blocking web server event loop well cpu parallelizes work multiple processes use finite pool processes sure way go worst case develop backlog means need servers event loop nt blocked send necessary messages cause autoscaling kick maybe wrong mainly frontend developer edit clarify saying performance fine suggesting way performance cripple web servers", "d": "8/2015"}, {"body": "brigand use node clusters node cluster nt pay price data commute web server queue fine scale since web server stateless one solution break page personalized nonpersonalized parts cache rendered html nonpersonalized parts send client right away plus data personalized parts client show nonpersonalized parts render personalized part soon finish receive data need give servers little bit breath course requirements product take consideration silver bullet", "d": "8/2015"}, {"body": "think great discussion wandered way topic streaming markup encourage use alternate venue discussion make sure people watching repo maintain better signal noise ratio set precisely discussions like", "d": "8/2015"}, {"body": "jimfb help us figure disable checksum ca nt find anywhere documentation also sanity checks", "d": "8/2015"}, {"body": "please continue discussion instead", "d": "8/2015"}, {"body": "happened", "d": "8/2015"}, {"body": "anything happening", "d": "8/2015"}, {"body": "currently", "d": "8/2015"}, {"body": "reacttapeventplugin also work desktop ie one solution rule em", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "wondering updates", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "nhagen actually tried use animatecss answering question even latest commit alexpien work animatecss requires multiple classnames like thanks zpao jsfiddle latest build currently able make sandbox work think supported well currently flexible enough support css animation frameworks also using enter enter leave leave parameters think keep simple use enter leave without active suffix mean use remember currently work give pseudo outputs end something like rather", "d": "8/2015"}, {"body": "dom reflow happen didupdate measure heights repaint happens didupdate effect based height without flicker", "d": "8/2015"}, {"body": "frustrating editable cells element tabindex prop set focused removing tabindex nt remove dom sets remove tab order still allows focus mouse way remove tabindex attribute set", "d": "8/2015"}, {"body": "used possibly anyway case hard say without info anyway movement", "d": "8/2015"}, {"body": "yes thank use", "d": "8/2015"}, {"body": "never used context passing dynamic values unchanging references see toy examples anyone used passing dynamic values production apps often find realworld use cases enlightening instance anyone passing keyvalue pairs directly passing unchanging reference object components get values observe", "d": "8/2015"}, {"body": "interested one time implementing sort bubbleup event dispatching context forget exactly idea allow parents intercept add context events coming children children would nt knowledge fit global context", "d": "8/2015"}, {"body": "repros outside reactbootstrap form gets swapped submit triggers", "d": "8/2015"}, {"body": "aaronjensen chance post simple repro case us", "d": "8/2015"}, {"body": "spicyj work", "d": "8/2015"}, {"body": "fyi initially reported part react core nothing todo reactbootstrap believe issue still", "d": "8/2015"}, {"body": "yes terribly difficult us debug without repro case original issue also nt provide", "d": "8/2015"}, {"body": "spicyj repro currently depends redux reactrouter ripped everything else app minimum could get wo starting reimplement redux reactrouter hope helpful", "d": "8/2015"}, {"body": "error happen line removed", "d": "8/2015"}, {"body": "spicyj know nt criticising anything updating issue honest nt looked issue months still use temp solution mentioned revisit week", "d": "8/2015"}, {"body": "aaronjensen thanks repro case try look worries", "d": "8/2015"}, {"body": "okay tracked root cause updates parent child component enqueued batch parent updating another update child enqueued end reconciling child twice breaks assumptions interleaves lifecycle methods incorrectly master fix batchedupdates reference code js var parent reactcreateclass getchild function return thisrefschild render function return var false var child reactcreateclass getinitialstate function return updated false componentwillupdate function true thissetstate updated true componentdidupdate function consolelog child update render function consolelog child render return var parent reactrender documentgetelementbyid container var child parentgetchild consolelog start batch reactaddonsbatchedupdates function parentforceupdate childforceupdate consolelog end batch produces output render update lines interleaved", "d": "8/2015"}, {"body": "thought warning setstate componentwillupdate guess", "d": "8/2015"}, {"body": "quick update thought give go straight away ran uncaught error invariant violation component keys getdomnode handlechange props context state refs reactinternalinstance contains method mounted dom nt happen version currently resting", "d": "8/2015"}, {"body": "message means invariant violation getdomnode component must mounted dom node improved message make bit clearer would nt expect issue fixed make specific attempt fix time see stuff happening issue", "d": "8/2015"}, {"body": "fixed hopefully", "d": "8/2015"}, {"body": "helps next person googling yet another sign problem", "d": "8/2015"}, {"body": "closed think", "d": "8/2015"}, {"body": "believe still broken using cloneelement instead clonewithprops", "d": "8/2015"}, {"body": "got thought wrapper place already", "d": "8/2015"}, {"body": "preventdefault event generated simulate wo nt prevent focus", "d": "8/2015"}, {"body": "status react", "d": "8/2015"}, {"body": "edit going leave open xmlish features mentioned acubed core bug closing tags boolean attributes done dcousens work let us know run issues", "d": "8/2015"}, {"body": "patch mostly makes page break parsing html xml mode still suitable arbitrary xml like svg atom docbook opendocument huge variety domainspecific vocabularies react describing dom document fragment texthtml xml exi even certain subset haml jade serializations dom document right react limited describing subset also rendered texthtml design limitation supporting others dom elements xmlns eg console right get documentfirstelementchildnamespaceuri lt adding support elements arbitrary namespaces really need eg rendered xml mode would output adding every element every time namespace changes becomes repetitive standard ways declare calculate namespace prefix", "d": "8/2015"}, {"body": "closing classes", "d": "8/2015"}, {"body": "diagram real posting issue would better nothing", "d": "8/2015"}, {"body": "quick attempt case provides inspiration", "d": "8/2015"}, {"body": "published quick prop type helper thanks jasonkuhrt glenjamin irc everyone else thread edit actually nt work might work ca nt get past", "d": "8/2015"}, {"body": "run need feature everyday", "d": "8/2015"}, {"body": "many small components ie design modularly end wrap kinds things divs nt might conflating think relates issue", "d": "8/2015"}, {"body": "wrap table rows elements easy wrap may desirable multiple layers wrapping multiple layers", "d": "8/2015"}, {"body": "scenario called trying component provides elements without become renderer entirely", "d": "8/2015"}, {"body": "added note top issue please read commenting", "d": "8/2015"}, {"body": "shame bug nt resolved yet recently implemented behavior search bar using discover later work firefox safari experience works correctly chrome always returns null firefox safari usecase telling event cause component unmounted component onclick handler would chance run circumvented using timeout inside first eventhandler component would unmounted onclick handler chance run solution works negligible sideeffects however far elegant would great compatible firefox chrome bonus points ends working ie maybe already", "d": "8/2015"}, {"body": "ryanseddon solution works looking create multiple top level entry points basically multiple reactrender use case pastiche site sections written react another legacy framework wanted section modularly responsible reactrender could removed swapped around far working well even event system", "d": "8/2015"}, {"body": "maybe thick seems like ryanseddon solution requires using requirejs nonproduction nonminified version react load react go poking bowels even possible given many us experiencing pain caused relative difficulty definitive fix would pr exposing way set id attribute name welcome something along lines", "d": "8/2015"}, {"body": "dvdplm", "d": "8/2015"}, {"body": "added two prs one current tip make idattributename configurable must called rendering occurs course pr pr master", "d": "8/2015"}, {"body": "major vendors starting package embeddable widgets built react example encountered error using zendesk embeddable widget react packaging dom interfering react packaging dom via event handler helps completely valid usecase package distro react building browser extension embeddable widget imho adoption react though easy different vendors play nice site without monkeypatching custom build", "d": "8/2015"}, {"body": "dlopuch similar situation agree wholeheartedly", "d": "8/2015"}, {"body": "understand problem dom trees nested within completely separate", "d": "8/2015"}, {"body": "separate embeddable widget case things often ask put script head bootstraps app injects new div body idattributename workaround fixed easier docs telling embeddable extension developers howwhy use bundling copy react", "d": "8/2015"}, {"body": "top head sure causes problems know error triggered response event handler something else", "d": "8/2015"}, {"body": "happens response mouseover two react site embedded widget react react two elements dom one created embedded widget react one created react full stacktrace error happens mouseover embedded widget element function bit weird react context resolves element node react one mousing matters react node mousing iframe hope helps", "d": "8/2015"}, {"body": "dlopuch small world tech lead zendesk widget created test case reproducing error definitely seems related fact widget creates iframe shares host page love use exposed api namespace data attribute react uses", "d": "8/2015"}, {"body": "use important set dynamic background color element still show printing without important background printed edit since needed used setproperty componentdidmount amp componentdidupdate", "d": "8/2015"}, {"body": "imo supported react place dogmatic people author styles", "d": "8/2015"}, {"body": "longer post lost oh summary would expensive check every value supporting nt awesome even get good option unlikely support nt want go csstext path nt really dogma would say perf fact faced number limitations working styles css could perhaps change data structure style would backwards compatible value nt object exact thing would allow us start using api downside obviously objects nt string parsing", "d": "8/2015"}, {"body": "zpao seems reasonable perf obviously important factor consider appreciate creative thinking solution would least allow developer support need even little effort", "d": "8/2015"}, {"body": "know react component using unknown attribute trouble finding faulty componentelement displaying warning", "d": "8/2015"}, {"body": "rodryqunitero message means attribute unknown use htmlfor instead", "d": "8/2015"}, {"body": "prefer tried true search files since specific case could ide probably also find project feature", "d": "8/2015"}, {"body": "thanks guys tips", "d": "8/2015"}, {"body": "maybe equal clearly api design genius", "d": "8/2015"}, {"body": "one checkbox checked one checkbox checked put indeterminate state click two checkboxes opposite checked states browsers listed means still two distinct bits information least browser implementation", "d": "8/2015"}, {"body": "ooh good find", "d": "8/2015"}, {"body": "want voice support behavior surprising find isrequired prop validator particular throws console warning makes difficult test one thing", "d": "8/2015"}, {"body": "cappslock remember tests correctly version better regarding props validation sure think throw errors least log error instead warning", "d": "8/2015"}, {"body": "hours research confirming server side rendering impossible unless feed everything top possible short term solutions prefill store make server side loading synchronous b feed everything top one data input async fetching one data object wont work unless already know render structure look like need render order know various collectionsmodelsapi dependencies also fetching async client sync server without two different apis b basically problem people make little dependency jsons go routes short term solutions wait react supported solution user land forks plugins", "d": "8/2015"}, {"body": "nickstefan nt understand problem use flux fluxlike container alt redux flummox etc stores nt singletons define static methods like route handlers return promises server match route components grab wait complete rendering prefill flux redux store instance note store instance bound particular request requests stay isolated promises ready render synchronously store instance prefilled good tutorial redux describing approach", "d": "8/2015"}, {"body": "gaearon apologize confused thank response list sounds like correct assuming solution server data dependency ever define data needs root component static methods article linked data dependencies defined root much easier prefill stores etc good flux practice nt potentially limiting add small component bottom view tree needs different data need go edit data dependencies root asking way deeply nested components define asynchronous data needs add needs root component nt coupling root one sub components needs", "d": "8/2015"}, {"body": "nickstefan reactrouting example async data fetching looks like js import router reactroutinglibrouter import http core const router new router gt products async gt products id async state gt const data await return data amp amp await routerdispatch component gt reactrender component documentbody", "d": "8/2015"}, {"body": "solutions work data prefetching bound router problem cases makes sense url defines page therefore data needed general limitation never able create standalone reusable component e twitter stream comments calendar would handle everything insert component hierarchy way come across makes possible reactasync pretty much hack suppose react components simply intended used way still views controllerviews probably completely new library emerge foundation react dream one day able write complete cms using react something like wordpress drupal modx instead htmlphp snippets composing website react components", "d": "8/2015"}, {"body": "nickstefan list sounds like correct assuming solution server data dependency ever define data needs root component static methods article linked data dependencies defined root much easier prefill stores etc add needs root component nt coupling root one sub components needs exactly route handler level may many route handlers app moreover libraries like react router support nested route handlers means nested route handler define dependency router match contain array matched hierarchical route handlers make sense granular every component declare dependency found cases limiting data fetching route handlers top nested ones want pure components accept data via nt even know fetched makes sense ca nt request every component declare dependency approach nt practical unless sort request batching solution imagine declares needs api call render list want wait requests kind data fetching requirement granularity works request batching solution suits relay exactly need special backend", "d": "8/2015"}, {"body": "nickstefan nt currently support percomponent async fetching like add issue tracks progress though one actively working take major restructuring", "d": "8/2015"}, {"body": "gaearon every component declare dependency approach nt practical unless sort request batching solution thought agree seeking nt actually practical originally thought even example would okay team discipline ie make request peoplescalable merely convention probably best enforce dependencies root router even relay sort forces declare dependencies root three different containers relaycontainer relayrootcontainer relayrouter etc kind proves point way essentially hoist dependency declarations tree", "d": "8/2015"}, {"body": "marker refx refy orient", "d": "8/2015"}, {"body": "attributes text rotate dominantbaseline", "d": "8/2015"}, {"body": "addon", "d": "8/2015"}, {"body": "developed higher order component control whether html properties allowed using allowhtmlprops option uses list standard html attributes including dom properties handles dynamic properties", "d": "8/2015"}, {"body": "fwiw anyone stumbling upon issue searching solution simplest assuming probably", "d": "8/2015"}, {"body": "got issue creating widget system react solution check windowreact existed use reactrender reactunmountcomponentatnode windowreact exists", "d": "8/2015"}, {"body": "ever automatic autobinding", "d": "8/2015"}, {"body": "unlikely probably recommend using esfuture syntax feature lands", "d": "8/2015"}, {"body": "hopefully come something nice often whenever passed functions around wished autobound even outside react code understand react devs nt think business designing class system going start using entire view framework much cognitive burden learn class system certainly less cognitive burden keeping track churn", "d": "8/2015"}, {"body": "going go think", "d": "8/2015"}, {"body": "similar problem transitiongroup css using callbacks wondering one hope fix start transitiongroup empty component rerenders adds components triggers componentwillenter componentdidenter good action component rerenders puts components transitiongroup triggers times componentwillleave detach perform transition calling callback straight away detaches one component rerender components detaches one componentwillleave use settimeout works", "d": "8/2015"}, {"body": "oozaa separate issue also fixed", "d": "8/2015"}, {"body": "spicyj link issuefix work properly even components removed done entering added back done leaving", "d": "8/2015"}, {"body": "oozaa nothing else works feel free try robusttransitiongroup", "d": "8/2015"}, {"body": "used focus blur window disable animation window focused onwindowblur function clearinterval thissliderinterval onwindowfocus function thisactivateautoslide", "d": "8/2015"}, {"body": "plans", "d": "8/2015"}, {"body": "still investigated project component uses scrollable div roughly direct child nests maybe children putting translatez force composition layer seems able boost scroll performance fps soon document wheel event attached performance crippled even component relies wheel events dismounted wheel listener document would live reducing scroll performance around fps", "d": "8/2015"}, {"body": "work ie", "d": "8/2015"}, {"body": "pointer events firefox nightly", "d": "8/2015"}, {"body": "somebody please solve need coffee jade", "d": "8/2015"}, {"body": "react strips animate tag ideas overcome", "d": "8/2015"}, {"body": "component lifecycle method", "d": "8/2015"}, {"body": "also makes impossible use react generate scenes like rendered using later natively browser attributes stripped rendered content like even inline node", "d": "8/2015"}]