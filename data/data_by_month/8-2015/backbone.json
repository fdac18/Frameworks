[{"title": "potential regression setting directly", "body": "part upgrading noticed issue app directly setting model nt think best way set id setting additional properties via later code started return minimal example expected behavior output calling wiping appears commit run fiddles see output console sh sh undefined resolved issue changing code call wondering setting directly continue work thanks cc jbrad", "num": "3778", "d": "8/2015"}, {"title": "events work", "body": "recently write city select component demo using backbonejs windowcitymodalview events click spanconfirm confirm failed windowcityview events click confirm works one tell wrong code fix thank much code jsfiddle", "num": "3777", "d": "8/2015"}, {"title": "events work", "body": "recently write city select component demo using backbonejs windowcitymodalview events click spanconfirm confirm failed windowcityview events click confirm works one tell wrong code fix thank much code city component using backbonejs body paddingtop cityblock width height borderradius lineheight display inlineblock textalign center backgroundcolor color fff margin lt p gt clearit color marginleft textdecoration none clearit hover color fff textdecoration none addcity width height borderradius lineheight display inlineblock textalign center border solid margin cursor pointer color hide display none modalblock cityblock backgroundcolor transparent color modalblock cityblock hover backgroundcolor operator textalign center operator span width height lineheight display inlineblock borderradius backgroundcolor darkred color fff fontsize textalign center cursor pointer margin operator span hover backgroundcolor red windowcitymodalview backboneviewextend tagname table initialize function var self bindall render confirm cancel thisrender template template lt div gt city modal lt div gt lt div class modalcontent gt lt div gt lt div class operator gt lt span class confirm gt yes lt span gt lt span class cancel gt lt span gt lt div gt events click spanconfirm confirm click spancancel cancel render function elhtml thistemplate return confirm function consolelog yes cancel function consolelog windowcityview backboneviewextend tagname div events click spanaddcity addcity click confirm click cancel initialize function var self bindall render appenditem addcity confirm cancel thiscitymodalview new citymodalview thisrender template template lt div gt city list lt div gt lt span class cityselected gt lt span gt lt span class addcity gt set city lt span gt lt div class operator gt lt span class gt yes lt span gt lt span class gt lt span gt lt div gt lt div class citymodalsec hide gt lt div gt render function var self elhtml thistemplate citymodalsec thisel append thiscitymodalviewrender el return appenditem function item var itemview new cityitemview model item cityselected thisel append itemviewrender el addcity function citymodalsec removeclass hide confirm function consolelog confirm cancel function consolelog cancel windowhomeview backboneviewextend el body initialize function consolelog initializing home view thiscityview new cityview thisrender template template lt div class citysec gt lt div gt render function thisel html thistemplate citysec thisel append thiscityviewrender el return var homeview new homeview", "num": "3776", "d": "8/2015"}, {"title": "multiple modals opening backbone", "body": "could someone help issue", "num": "3775", "d": "8/2015"}, {"title": "passing options url function backbonesync function model collection", "body": "seems like nobrainer order construct url add query params need know typemethod request options take request source javascript sync function method model options var type methodmap method nt instead javascript sync function method model options var type methodmap method missing something may want construct url add query params given certain options passed backbonesync right", "num": "3774", "d": "8/2015"}, {"title": "routernavigate stopped working", "body": "hi using backbonemarionette webpack project using webpackdevserver server problem though nt work nothing happened error either rolling back solved problem something strange sneaked router", "num": "3773", "d": "8/2015"}, {"title": "rethink backbone templates", "body": "found pretty awesome idea using incremental dom underscore templates tiny extremely powerfull faster underscore templates react fact using almost idea like react developed google ps good idea marionette think jashkenas megawac jridgewell", "num": "3772", "d": "8/2015"}, {"title": "backbonehistory part public api", "body": "could expect backbonehistory object exist moving added documentations", "num": "3769", "d": "8/2015"}, {"title": "add new rows existing page", "body": "please tell add rows rows click", "num": "3768", "d": "8/2015"}, {"title": "rethink backbonesync", "body": "know numerous plugins wild override specific domain logic things like storage proxies web socket connections etc way plugins add functionality tends messy conflict one another backbone suggest reimplement custom sync added backbone long suggested plugins export custom function implemented opposed globally overriding bbsync however merit would suggest something like following adding custom sync js function predicate model options return modeluseproxy function syncfn model options sync function normal whether sync method stop syncs checked could useful storage syncs wish add data indexeddb also executing http sync var exclusivesync false backboneaddsyncmethod predicate syncfn exclusivesync", "num": "3767", "d": "8/2015"}, {"title": "collectioncreate return xhr", "body": "option xhr returned instead events triggered events triggered nt let interfere request example aborting thoughts", "num": "3764", "d": "8/2015"}, {"title": "remove android logger driver", "body": "android logger driver driversstagingandroidloggerc used read write android logs devlog main system android lollipop logger driver loggerc removed logcat reads android logs reading writing android logs handled kernel", "num": "3763", "d": "8/2015"}, {"title": "error fired broken connections", "body": "error event firing app reach server eg net errconnectionreset error function fetch method touched", "num": "3762", "d": "8/2015"}, {"title": "events hash responding jquery triggerhandler method", "body": "hey working legacy code office plugin use seems use rather firing events nt ton xp maybe functionality makes sense really confused unexpected results following var testview backboneviewextend template template events customevent foo function consolelog customevent ran render function elhtml thistemplate var testview new testview testviewrender jqueryeventtrigger customevent null testview foo true example event handler bound render fires thought events bound identically appears event delegation works inside backboneview events hash intended behavior something known issue lived thanks", "num": "3761", "d": "8/2015"}, {"title": "collection set nt intelligently merge unparsed models", "body": "takes option set true call collection parse method input array well model parse method individual objects input array implies ok nonparsed data passed however nonparsed data passed line may fail correctly merge new data existing data collection particular nonparsed data wrapped way obscures idattribute failing test case illustrates issue test collection merge duplicate raw objects merge true function var model backbonemodelextend parse function data return datawrapper option indicates updated model collection object reference instead newly instantiated model potential fix might involve changing line although may elegant solution people agree bug open pull request", "num": "3760", "d": "8/2015"}, {"title": "parse model validating modelset pojo parse true", "body": "backbone model expects wrapped object api eg want work nice use parse like validate like mock model test fails modelset calls validate parsing object nt make whole lot sense say parse true parse validating workaround feel like would less confusing parse true actually work expected validate function", "num": "3757", "d": "8/2015"}, {"title": "nutch tika parsing issue", "body": "trying crawl specific data per requirement using nutch tried make changes parsetika plugin got impacted make small changes compiling connectivity different classes storage parse crawl etc please suggest", "num": "3756", "d": "8/2015"}, {"title": "nutch plugin writing", "body": "writing plugin writing plugin specific data crawling website amp store mongodb please guide give suggestions connect connectivity new plugin parse data mongodb", "num": "3755", "d": "8/2015"}, {"title": "model set docs nt explain options argument", "body": "looked set method backbonemodel today perplexed see parameter method signature mention options explanation seems regression vividly remember least option documented place", "num": "3750", "d": "8/2015"}, {"title": "documentation collection modelid wrong", "body": "modelid docs backbonejsorg say method return name id attribute backbone use long painful debugging session found method actually return id instead attribute name absolutely fixed", "num": "3749", "d": "8/2015"}, {"title": "backbone truck factor", "body": "part phd research code authorship calculated truck factor tf popular github repositories probably know truck bus factor designates minimal number developers hit truck quit project incapacitated work consider system trouble files become orphan ie without main author details work preprint calculated tf backbone obtained value developers responsible tf jeremy ashkenas author files brad dunbar author files validate results would like ask backbone developers following three brief questions agree listed developers main developers backbone b agree backbone trouble listed developers leave project eg win lottery less morbid c backbone characteristics would attenuate loss listed developers eg detailed documentation thanks advance collaboration guilherme avelino phd student applied software engineering group aserg ufmg brazil", "num": "3748", "d": "8/2015"}, {"title": "official opinion needed underscore vs lodash", "body": "someone give official opinion backbonejs stable migrationusage lodash know lodash lodashunderscore lodashcompat read lodash migration notes still want backbone community opion also wan na make sure lodash version work correctly version backbone starting trying digest fact personally closer use underscore first original library similar purposes think johndavid forked create new whell instead contributed withto underscore help jeremy improving underscore bad collaboration good history libs may mistaken sorry advance backbone tests special thanks rusalex triggering thinking way took versions backbone ran tests different lodash versions backbone lodash failed tests lodashcompat failed tests lodash prj frozen v failed testes lodashunderscore failed tests backbone lodash failed tests lodashcompat failed tests lodash prj failed tests lodashunderscore failed tests assume using latest versions libraries release moment appropriate risky obviously using different releasesversions risky", "num": "3746", "d": "8/2015"}, {"title": "model returns undefined iterating although exists collection", "body": "weird issue bothering atm bb reason see undefined model value one models iterating models collection please note always model assigned values using defaults method confirmed using tojson model property model exist collection defaults method adding models collection confirmation model values using tojson see default model exist collection however iterate collection remove models get undefined default mode code result consolelog inside", "num": "3744", "d": "8/2015"}, {"title": "old docs still", "body": "recently got tripped fact hosting outofdate downloads documentation looks like new official site backbonejsorg sure first stumbled upon old url probably duckduckgo search results situation exists underscore perhaps would wise set redirect old url new one", "num": "3741", "d": "8/2015"}, {"body": "may issue chromewebkit testing reveals behavior", "d": "8/2015"}, {"body": "ok fwiw issue appears caused combination chromewebkit catchall type route like backbonerouter something like running results expected behavior router removing flag also results correct behavior interesting turning chrome developer tools somehow fixes problem live mode", "d": "8/2015"}, {"body": "setting directly never really supported experience always readonly property keep needing every single time said could something like following least avoid case messing diff diff git abackbonejs bbackbonejs index abackbonejs bbackbonejs thisid thisget thisidattribute var id thisget thisidattribute id null thisid id", "d": "8/2015"}, {"body": "thanks quick response agree setting directly probably way go sometimes got work got setting directly supported fine issue closed well least got documented others run problem upgrading", "d": "8/2015"}, {"body": "sometimes got work got need mutate clientside nt typically something set sent server", "d": "8/2015"}, {"body": "need mutate id clientside nt typically something set sent server reasons specific code within app agree smell", "d": "8/2015"}, {"body": "please use stackoverflow debugging github issues maintaining framework", "d": "8/2015"}, {"body": "looks like answered future please use mailing list gitter channel questions", "d": "8/2015"}, {"body": "update url want work pr", "d": "8/2015"}, {"body": "yeah would like yep would update url given params", "d": "8/2015"}, {"body": "backwards compatible issues foresee", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "tell thinking words", "d": "8/2015"}, {"body": "create pull request url function needs passed params sync default", "d": "8/2015"}, {"body": "pretty sizable thread read first please search opening issues essentially make use prop jqueryajax need set querystring values futzing actual url string done instance props method", "d": "8/2015"}, {"body": "three changes happened routing layer wager causing problem give us bit information happening", "d": "8/2015"}, {"body": "hmm sure navigate inside backbonejs seems called never calling routernavigate later put consolelog inside backbonejs found two called", "d": "8/2015"}, {"body": "browser using", "d": "8/2015"}, {"body": "many virtual dom libraries wild virtualdom good one backbone continue agnostic choice templating library something specifically change way backbone views work make easier work virtual dom libs maybe consider tend take radically different view app state architecture backbone", "d": "8/2015"}, {"body": "actually intimately familiar idom one reasons enthusiastic really nothing needs done support backbone treat like normal method js var view backboneviewextend template function data idom code render function stuff", "d": "8/2015"}, {"body": "sorry read comment closing please feel free reopen want keep general tracker support virtual doms view unopinionated class backbone better worse know one practice codified prevents general vdom diffs container may keep container js virtualdom example code var tree setinterval function count reassigned every tick normal backbone view natural assume ca nt else event delegation breaks actually first child", "d": "8/2015"}, {"body": "jridgewell admittedly nt ton experience using vdom backbone views experience mithril react one thing stands potential pitfall example looks like work great single view normal html elements manage nested backbone views way backbone combined backbone classes work quite differently vdom libraries", "d": "8/2015"}, {"body": "manage nested backbone views way treat way subviews jquery detach render reattach left two something comments render method wink rerender much slower actually working getting firstclass subview support build idom wo nt apply vdom libraries need detachreattach render racehorse render backbone combined backbone classes work quite differently vdom libraries nondestructive react react much like backbone standardized yet backbone component concern react dev directly call", "d": "8/2015"}, {"body": "treat way subviews jquery detach render reattach triggers reflows nt performance worse using vdom library subview management hard problem jquerybackbone nt unsolvable solutions atodds treebased descriptor approach majority vdom libraries take backbone render component concern react dev directly call could set something similar backbone problem creating backbone view typically sideeffects nt idempotent way vdom components typically implemented event delegation good example could done feeling lot easier use vdomfirst approach", "d": "8/2015"}, {"body": "triggers reflows nt performance worse using vdom library jmeas actually testing ago found dom manipulations happen quickly oneaftertheother nt huge reflow penalty think browser group single reflow idea limit though virtual doms idom included actually trigger dozens reflows single render since elements modified attached dom tree detachreattach subviews nt hurt aside one reasons idom damn fast optimizing garbage collection dom manipulations manipulations certainly slower normal js react definitely right track actually manipulations causing bottleneck throwing away hundreds dom instances think elements attribute instances get created thrown away bottleneck react intelligently diffs largest source garbage fixed still suffers rendering entire virtual tree throwing away old one idom discovered away eliminate virtual tree last painful gc pretty atodds treebased descriptor approach vdom libraries take found something like mustache content attach subview entirely replace element time rerender replace original element rerender maintain element tree replace", "d": "8/2015"}, {"body": "jmeas actually testing ago found dom manipulations happen quickly oneaftertheother nt huge reflow penalty knowing ton browser performance optimization say nt seem like removing readding thousands times scales large app recommendation browser vendors seen avoid touching dom nt also sure repo shows best methodology test dom performance mutationobserver nt really meant used way maybe chromium telemetry firefox performance tools topcoat pretty awesome telemetry tool built chromium would suited virtual doms idom included actually trigger dozens reflows single render since elements modified attached dom tree seems odds said one stated benefits virtual dom batching flushing changes time simply updating properties wo nt trigger reflow adding removing elements updating classnames getting computed styles etc gotten little offtopic fault happy continue gitter", "d": "8/2015"}, {"body": "adding removing elements updating classnames getting computed styles etc meant hopefully adding removing bunch elements every render updating classes common gitter smile", "d": "8/2015"}, {"body": "documented", "d": "8/2015"}, {"body": "sorry specific referring undocumented methods specifically used one devs could assume methods stay part api", "d": "8/2015"}, {"body": "please use mailing list stackoverflow gitter channel questions github issues maintaining framework", "d": "8/2015"}, {"body": "talking middleware approach similar express right like different functions could chained would nt regular conditional custom work use case", "d": "8/2015"}, {"body": "would nt regular conditional custom sync work use case ding ding ding pretty big antifan middleware compared simple plugin calls needs call", "d": "8/2015"}, {"body": "result right model control process rewrite method control xhr want request progress use see collectioncreate backbonesync", "d": "8/2015"}, {"body": "fair point", "d": "8/2015"}, {"body": "part promises js collectioncreate attr value model gt model created successfully error gt error happened creating locally collectioncreate attr value wait true model gt model created successfully error gt error happened creating locally server", "d": "8/2015"}, {"body": "jridgewell near future", "d": "8/2015"}, {"body": "tried suggested little painful modifying sync pretty much want functionality changing return xhr need copy two private function dependencies preparemodel ismodel fun something consider changing better waiting promises jridgewell talking", "d": "8/2015"}, {"body": "something consider changing better waiting promises jridgewell talking wo nt changing", "d": "8/2015"}, {"body": "jquery version use jquery bug times browser like ff requests nt fire events xhr", "d": "8/2015"}, {"body": "unlikely backbone issue jquery one mind opening issue tracker", "d": "8/2015"}, {"body": "think paulfalgout put well marionette issue backbone binds events view delegation directly js example foo customevent backbone elon customevent foo", "d": "8/2015"}, {"body": "perhaps sure something intended handled days anyone", "d": "8/2015"}, {"body": "dupe closed one nt feel strongly one way", "d": "8/2015"}, {"body": "oh right ids need parsed collection level", "d": "8/2015"}, {"body": "nt think necessarily parse model twice fix bug make sure instantiate model earlier passed would nt mind working pr cleaner fix unless worth time know jridgewell working larger refactoring might also address", "d": "8/2015"}, {"body": "make sure instantiate model earlier parse true passed issue nt want instantiate needed know jridgewell working larger refactoring collection parse might also address think approach would completely removing fetching parse collection level map result models passing pass models yes mean instantiating redundant models moving parsing issues entirely", "d": "8/2015"}, {"body": "rethink parsing entirely way currently implemented quite halfassed result never used documentcloud originally imho put towards top list actually", "d": "8/2015"}, {"body": "summarize let know misunderstanding anything passed technically impossible sure passed raw objects already collection without parsing since may root raw object since side effects mutate ca nt call without model instance therefore must instantiate parse every returned model eg fetching data server attempting intelligently merge new models attributes collection think result jridgewell suggestion moving parsing concerns would correct solution problem could significant performance implications also probably would nt happen alternatively short term look pull request created fixes original bug consumers apis wrapped responses nt degrade performance anyone else consumers apis root response nt experience extra parsing passes unit test suite interested running performance test suite anyone one thanks", "d": "8/2015"}, {"body": "nt option think thinking sadly gone see op reasoning", "d": "8/2015"}, {"body": "please direct questions gitter chatroom google group freenode irc documentcloud channel", "d": "8/2015"}, {"body": "dupe", "d": "8/2015"}, {"body": "looks like fixed nt uploaded documentation yet fixed release", "d": "8/2015"}, {"body": "suppose one key dev", "d": "8/2015"}, {"body": "hello guilherme thank sharing results backbone community tf seems comparatively high considering projects considered scored higher would interested know files backbone actually included analysis would guessed file cleaning process would eliminated personally would interested results would included documentation also includes ghpages branch since quality documentation deal breaker deciding make use foss project hand understand might skew results since actually takes different set skills produce high level documentation project would incapacitated copywriters got left seems definition degree code authorship limited admit read fritz et al challenge idea foss project would become incapacitated developers able influence command implementation ceased however think results accurate jashkenas recently refered god along jdalton doubt revere original authors would enough bring end backbone decided relinquish reins even declared backbone mistake started anew appears jashkenas plays executive role recent times watching project weeks time chimed comment documentation looking back commit history majority recent commits merging prs developers notably jridgewell rank analysis think backbone case sign project matured reached stage original authors transition owners stewards foss projects far anarchy people imagine fact strong andor consistent leadership common arguably important fact mature foss project would argue truck factor poorly named lower score better would hope jashkenas braddunbar left project community would quickly reorganise behind another one two developers crux idea please expand methodology deal merges analysis example commit attributed suspect analysis attributes jashkenas opinion jridgewell attributed indeed git blame function attributes file changes jridgewell author commit changed file even though file different repository jashkenasbackone paper like good research paper raises questions answers commend job well done cheers corin", "d": "8/2015"}, {"body": "would hope jashkenas braddunbar left project community would quickly reorganise behind another one two developers crux idea think something else consider leaving project becoming less involved without clear exit cause delays decay project lead interests priorities shift things see involvement decline releases lag project contributors create releasechecklists much prep work lead hits release", "d": "8/2015"}, {"body": "quickly answer questions terms bus factor project future someone hit bus today historical development look authors recent commits see b backbone trouble get hit bus brad wins lottery c important characteristic renders bus factor moot backbone basically finished project comprehensive documentation also helps even important annotated source code cheers", "d": "8/2015"}, {"body": "im official programmer try replace undescrore lodash see backbone tests backbone well tested library tests exist", "d": "8/2015"}, {"body": "rusalex answer almost already googled many developers say like want official opinion nevertheless thank reply need follow reduce amount comments note already migrated lodashbackbone approach project works fine projecttoplevel architecture community yet sure correct way go eager get proper official answers right way reading underscore issue realized sooner later might underdash agree collaboration jashkenas jdalton sure gods busy low probability answer anyway would answer equal official", "d": "8/2015"}, {"body": "assume using latest versions libraries release moment appropriate risky obviously using different releasesversions risky yap lodash includes backbone underscore tests run commit current stable release future lodash may fail handful several tests use nonbackbone related underscore methods excuse wo nt surprises lodash side things lots projects go lodash first backbone think backbone official statement", "d": "8/2015"}, {"body": "nt test zepto lodash compatibility work fine need stronger guarantee stick jquery underscore", "d": "8/2015"}, {"body": "lodash runs passes backbone tests ci marionette runs unit tests multiple version underscore lodash gt takeaway backbone work fine lodash use lodashbackbone series browserify methods replace underscore lodash wild dependencies seem work kind sketchy number api differences libraries", "d": "8/2015"}, {"body": "jdalton thanks reply read part backbone docs enough developers projectcommunity confident sentence tend work varying degrees compatibility tells us level uncertainty agree developers started discussion megawac thanks pointing really happy marionette team dreams merge original backbone team double development forces far researched lodashforbackbone fact weird exactly want backbonelodash fact backbone contributed jashkenas brandonpapworth fact one dozen forks backbone interested unless jeremy tell us version replace backbone browserify way used one communityprojects think lie developers simple substitution one library name another thanks comments yes need stronger guarantee backbone tests results one proven fact tdd needed works show holy wars internet thanks closing issue looks like resolved time solution migrate lodash sure wait underdash really hope", "d": "8/2015"}, {"body": "oy backbonelodash blast past use cases nt run issues using lodash compared underscore another change made library giving ability view elements created using opposed honestly nt used backbone long time aside realized looking back old unmaintained code entertainingdepressing vote would definitely lodash works people nt cause tests create singularity sucks existence", "d": "8/2015"}, {"body": "dupe fix mutating array iterating", "d": "8/2015"}, {"body": "someone tag issue phone", "d": "8/2015"}, {"body": "looks like issue github pages changed repo two years ago looks like old site nt redirected way github repo page", "d": "8/2015"}, {"body": "open ticket github support", "d": "8/2015"}, {"body": "bug project moving first implemented support helpfully unpublished pages us", "d": "8/2015"}, {"body": "make pr done", "d": "8/2015"}, {"body": "pick issues shipping go ahead draft log", "d": "8/2015"}, {"body": "pick issues shipping go ahead draft log let go merged", "d": "8/2015"}, {"body": "paulfalgout agree jdalton let ship merge rest next version", "d": "8/2015"}, {"body": "good deal get shortly long weekend", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "bumped published", "d": "8/2015"}, {"body": "documentation says trigger objecttrigger event args trigger callbacks given event spacedelimited list events subsequent arguments trigger passed along event callbacks nt specifically says use modeltrigger change model caused line number needs amp amp model condition", "d": "8/2015"}, {"body": "hey got fixed like even though got closed jridgewell disappointed", "d": "8/2015"}, {"body": "jridgewell sorry nuisance motivation making changes", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "jridgewell reason binding collection like way using hooks immutably update object handler generic ie nt use parameters passed instead references collection directly seems slightly misleading inside handler happens", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "particular doc generator using handwritten documentation guide looks generated nt see build script fork", "d": "8/2015"}, {"body": "handwritten addressed", "d": "8/2015"}, {"body": "benmccormick decorator call constructor prototype instorstaticvar method used place realise would breaking change seems cleaner way imho like pointed properties defined way prototypeshared strings objects ie shared across instances therefore accessed via class right", "d": "8/2015"}, {"body": "lennerd pointed calling followed good option fires two events use call get change events attributes unset intuitive think could really benefit equivalent method find trying use time always disappointed", "d": "8/2015"}, {"body": "went ahead created little extension add working method backbonemodel backbonemodelreset", "d": "8/2015"}, {"body": "currently situation build click dummy first plain html build wordpress theme clickdummy asset pipelines wordpress ships versions backbone underscore reason ca nt add backbone underscore jquery asset pipelines still would nice maintain separate pipelines libraries instead files shipped along unminified files chance behavior changes", "d": "8/2015"}, {"body": "came across issue well confirm occurred case using backbone version used fiddle opening issue updating backbone issue occur anymore everything worked expected see modified fiddle", "d": "8/2015"}, {"body": "seem issue tried solution mdeering luck stackoverflow question seem missing something let know guys think", "d": "8/2015"}, {"body": "instead trying replace original view element define tagname function make return tag root element template example template something like html render function insert template contents working example", "d": "8/2015"}]