[{"title": "target value sometimes undefined", "body": "loop product list map create react component item click button sometimes etargetvalue defined sometimes undefined totally random clicking button times value sets magically undefined", "num": "4745", "d": "8/2015"}, {"title": "listen props parent component", "body": "hi want listen props parent component like parent component parent component let chartbox reactcreateclass mixins reactaddonslinkedstatemixin getinitialstate return chartstyle componentdidmount let chartwidth thisrefschartboxgetdomnode offsetwidth let chartheight thisrefschartboxgetdomnode offsetheight let chartstyle width chartwidth height chartheight thissetstate chartstyle chartstyle render return child component child component let chart reactcreateclass componentdidmount render return", "num": "4742", "d": "8/2015"}, {"title": "make test utils aware subtrees rendered containers rendersubtreeintocontainer", "body": "using react reactoverlay modal uses portal portal using appears test utils aware subtrees rendered containers search children nt get crawled means order test components first get instead able use testutils directly looked related discussions nt able find anything plans make test utils aware feature nice convenience", "num": "4741", "d": "8/2015"}, {"title": "getting dangerouslyreplacenodewithmarkup error unit tests jsdom jasmine", "body": "happens executing unit tests works fine browser though using dangerouslysetinnerhtml attribute solve problem exception thrown soon add new test case observations happens jsdom webkit working fine happens rendering view event simulated happens rendering string variables inside markup dangerouslysetinnerhtml solve fyi need exact steps explaining exact steps following series blog posts referring solving problem using dangerouslysetinnerhtml property regards nripendra", "num": "4740", "d": "8/2015"}, {"title": "reactbuild postinstall throw assertassertionerror", "body": "reactbuild postinstall usersjohndifooldevelopfacebookreact node scriptscheckdevenginesjs throw new assertassertionerror assertionerror current node version supported development expected satisfy object modulecompile objectmoduleextensionsjs moduleload functionmoduleload functionmodulerunmain startup npm err darwin npm err argv node usrlocalbinnpm install npm err node npm err npm npm err code elifecycle npm err reactbuild postinstall npm err exit status npm err npm err failed reactbuild postinstall script node scriptscheckdevenginesjs npm err likely problem reactbuild package npm err npm npm err tell author fails system npm err node scriptscheckdevenginesjs npm err get info via npm err npm owner ls reactbuild npm err likely additional logging output npm err please include following file support request npm err usersjohndifooldevelopfacebookreactnpmdebuglog", "num": "4738", "d": "8/2015"}, {"title": "datetime field nt register changes", "body": "using datetimelocal field setting date nt register change value setting value react nt know change fix would always set value datetime fields even virtual dom shows change accept limitation tested chrome supported ff", "num": "4733", "d": "8/2015"}, {"title": "shallow rendering uses throws deprecations", "body": "calling get seems places wonder broke entirely", "num": "4730", "d": "8/2015"}, {"title": "rendering input element string setting html dangerously nt fire onchange anymore", "body": "following input element return like callback fired input change however following onchange called preserve onchange", "num": "4729", "d": "8/2015"}, {"title": "question mapping children key prop child moves unmount remount", "body": "example suppose something like following render function happens change order things rerender component affected elements get methods called followed new foos getting methods called react keep elements reorder calling lifecycle methods", "num": "4728", "d": "8/2015"}, {"title": "reactelementvalidatorloggedtypefailures prevents test isolation", "body": "running react testing jasminecore testing component validation use jasmine method mock check trigger warning correct message validation fails use check validation working run unit test two separate test suites expects warning occur react globally tracks warnings triggered avoid spamming console seems nt send warning second time thus fails would expect would setup isolation render warnings checked properly", "num": "4725", "d": "8/2015"}, {"title": "using jsx reactelement children presented array opposed map", "body": "came across making test cases make sure mutating unexpected ways making clone notice property list attempt clone tree presumably something child nodes js let targetelement newchildren clonedelement targetelement newchildren reactchildrenmap targetelementpropschildren node gt something children nodes return reactcloneelement node clonedelement reactcloneelement targetelement undefined newchildren consolelog clonedelement get notice property map consider unexpected mutation tried remediating using ie js let targetelement newchildren clonedelement targetelement newchildren reactchildrenmap targetelementpropschildren node gt something children nodes return reactcloneelement node clonedelement reactcloneelement targetelement undefined objectvalues newchildren consolelog clonedelement produces identical object original also prompts following error bit odd considering create identical copy original jsx output object appears unexpected jsx parser behaviour might babel issue", "num": "4723", "d": "8/2015"}, {"title": "react component lose context seqmap", "body": "originally posted issue immutablejs advised move original react components lose context used within seqmap possibly due lazy evaluation fails resolving sequence explicitly like works expected behavior understanding converting immutables sequences recommended procedure passing react", "num": "4722", "d": "8/2015"}, {"title": "shallow rendering wo nt render primitive nodes", "body": "might intentional technically breaking change figured report following script js var react require react var testutils reactversionsubstring testutils require reactaddons addonstestutils else testutils require reactaddonstestutils var renderer testutilscreaterenderer rendererrender reactcreateelement hello consolelog renderergetrenderoutput js node samplejs type key null ref null owner null context null store props children hello originalprops children hello js node samplejs var inst new component publicprops publiccontext reactupdatequeue typeerror string function reactcompositecomponentmixinmountcomponent wrapper mountcomponent reactshallowrendererrender reactshallowrendererrender object modulecompile objectmoduleextensionsjs moduleload functionmoduleload functionmodulerunmain", "num": "4721", "d": "8/2015"}, {"title": "bug refs showing", "body": "component jsx class root extends reactcomponent render let cards thisdatacards let boardid thispropsboardid let index return mount like result consolelog statement componentdidmount method camera ref shows might", "num": "4718", "d": "8/2015"}, {"title": "communication betwen components", "body": "application list filters button change layout using two components lt filters change settings lt filters want trigger method update view make components interact", "num": "4715", "d": "8/2015"}, {"title": "incorrect handling prefixed styles", "body": "rendering react dom element style properties style object treated special eg adding px numbers particular styles however provided prefixed style like blacklist styles used would pretty awesome style prefixed like first converted nonprefixed kind lookup blacklist", "num": "4714", "d": "8/2015"}, {"title": "requires extra configuration typecheck flow", "body": "create brand new project directory create type check simple file faced bunch errors return missing annotation deferred required module found invariant required module found executionenvironment required module found sprintf required module found fetch required module found warning required module found easy work around add following configuration exactly relay project however great people could follow steps beginning issue create turnkey working system without required configuration maybe fbjs bug react bug nt sure best place file one belongs somewhere else happy redirect thanks", "num": "4713", "d": "8/2015"}, {"title": "use reactid get instance associated component", "body": "iterating react dom tree distinguish dom generated different components eg foo iterate distinguish children target component nodes thinking could use retrieve instance associated component api data held", "num": "4711", "d": "8/2015"}, {"title": "misleading warning message using getdomnode", "body": "says warning getdomnode deprecated plain javascript react classes use reactfinddomnode component instead use get warning deprecated please use instead therefore error message warning getdomnode deprecated plain javascript react classes use instead", "num": "4710", "d": "8/2015"}, {"title": "input losing focus render", "body": "works fine chrome etc issues basically onvalidchange event fired form becomes either valid invalid sets state ie onvalidchange fires rerenders form lose focus input seen people similar problems unable find good solution important parts class look bit like renderlogin var self render var self consolelog rerendering loginisvalid return thisstateloginvalid checkloginvalid var loginform thisrefs loginformref isvalid loginformisvalid", "num": "4709", "d": "8/2015"}, {"title": "reactdnd proxyquire invariant violation could find drag drop manager context mycomponent", "body": "using proxyquire stub subcomponents stores ran invariant violation components wrapped reactdnd contexts warning failed context types required context dragdropmanager specified dragsource card error invariant violation could find drag drop manager context card make sure wrap toplevel component app dragdropcontext read put together repo demonstrate error see run", "num": "4707", "d": "8/2015"}, {"title": "transfer context", "body": "hello project using technique similar take render inside another react tree connected child node problem descendants may want context empty separate tree use fresh call right using function like js export function extractcontext component let context componentreactinternalinstance amp amp componentreactinternalinstancecontext let internalcontext componentreactinternalinstancecontext let key internalcontext internalcontexthasownproperty key amp amp key context key internalcontext key extract context inside popup create wrapper takes context pushes new tree maybe better way transfer entire context without knowledge context internals", "num": "4706", "d": "8/2015"}, {"title": "best way get state value", "body": "hi want get value state immediately setting state value know callback method setstate taken correct current state value nt want write callback get value need provide two interfaces setvalue change state value getvalue get value state good practice", "num": "4705", "d": "8/2015"}, {"title": "components classes methods bound", "body": "writing components classes trying understand methods bind constructor say something like following code js import component react export default class componentname extends component constructor super thishandleclick thishandleclickbind handleclick e render return understand must explicitly bind constructor short using stage features examples seen looks like method bound default nt need something like constructor right lifecycle methods like documentation unclear also anything planned would change behavior", "num": "4699", "d": "8/2015"}, {"title": "reactjs ascii art issue jsx transformation", "body": "trying get ascii art properly rendered react application jsxtransformer executed art looses format renders pretty strange browser seems related identifying line breaks properly hello world var app reactcreateclass render function return lt pre gt lt code gt ditaa text diagram document magic lt code gt lt pre gt var element documentgetelementbyid content reactrender reactcreateelement app element example real context website generator starts markdown gt html gt jsx said change reactcreateclass element someone proposed var app reactcreateclass render function var ascii ditaa text diagram document magic join n fixes problem edit markdown elements reflect interested know jsx transformation identifying line breaks inside code blocks alan", "num": "4698", "d": "8/2015"}, {"title": "unfold children", "body": "hi writing library uses jsx abstract dsl bit like bit like others primitives explain question take example user could define customroute component render use like afaik wo nt detected traversing propschildren enough router see wo nt understand know possible solve basically want descent render tree stop user component native component like reach looking", "num": "4697", "d": "8/2015"}, {"title": "using server rendering invariant violation reactmount two valid unequal nodes", "body": "building gem enable use react redux rails webpack server rendering pretty far along gotten gem work turbolinks however running issue fragment caching created branch demonstrates issue note verified caching without turbolinks works ok see branch also caching turbolinks works issue reproduced following clone repo switch branch cachingfailure visit see server rendering worked open console see tracing messages click link top click back link react top see error message invariant violation reactmount two valid unequal nodes datareactid full error notes open specdummyappviewspagesindexhtmlerb remove cache block around line see working without fragment caching fragment caching removing react dom elements prior rendering reloading cache left tracing statements see rendering called unlikely caching changed rendering part includes call addremove listeners invoke client side rendering dom elements placed server generated html shown includes setup js hooks code inserted dom turbolinks possible reason guessing problem calling react exact code second time seems state maintained maybe page unloaded need tell react view helper looks like html html cdata windowappdata helloworlddata name prop rails server rendering var renderifdomnodepresent function var appdomnode documentgetelementbyid appdomnode consolelog zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz consolelog client side render consolelog zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz var reactcomponent app appdata reactrender reactcomponent appdomnode var turbolinksinstalled typeof turbolinks undefined consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog turbolinksinstalled turbolinksinstalled consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy turbolinksinstalled consolelog warning turbolinks detected js gemfile documentaddeventlistener domcontentloaded function event consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog domcontentloaded event fired consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy renderifdomnodepresent else function onpagechange event consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog page change event fired consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy var removepagechangelistener function consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog removed page change event listener fired consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy documentremoveeventlistener page change onpagechange documentremoveeventlistener page beforeunload removepagechangelistener consolelog removed event listeners documentaddeventlistener page beforeunload removepagechangelistener documentaddeventlistener page afterremove function consolelog page afterremove called renderifdomnodepresent consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog add turbolinks handler page change handler consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy documentaddeventlistener page change onpagechange gt hello prop rails server rendering say hello", "num": "4696", "d": "8/2015"}, {"title": "react classes starting lowercase nt call methods inside class", "body": "react class name starts lowercase letter methods inside class get called ie nothing renders nt get error message browser console see element dom empty contents case rename class change works see simple example get nothing browser console web page change btw drove nuts ran things try thought way could lower vs uppercase issue var myheader reactcreateclass componentwillmount function consolelog myheader componentwillmount componentdidmount function consolelog myheader componentdidmount render function consolelog myheader render return test reactrender documentbody", "num": "4695", "d": "8/2015"}, {"title": "take", "body": "props bit awkwardrandom per prior conversations jordwalke ie prop children special cased deciding factor certainly bit irksume theoretical computer science perspective feels cleaner current api bit ambiguous regards result since children specified two potentially conflicting values imagine third argument different value nt actually know would happen top head especially null case null treated like undefined third argument override second props means props object saved reactelement ca nt hoisted intelligent runtime would otherwise possible runtimestranspilers see nonchild props nt depend particular render could save thousands allocations per render importantly string compares expensive children occurs props means need additional string compare property iterate since need handle children prop special case mostly rfc issue something consider inline elements cc sebmarkbage", "num": "4694", "d": "8/2015"}, {"title": "get reactdom run webpack", "body": "hi always get message naive put console got mayor issues webpack mentioned answer wrong repository get correct reactdom module", "num": "4693", "d": "8/2015"}, {"title": "error invariant violation findallinrenderedtree instance must composite component", "body": "writing test case using mocha jsdom js import react react import testutils reactaddonstestutils describe reactoutsideevent gt captures mousedown event gt let detachedcoponent like obtain reference generated domnode foo produces also tried got error using", "num": "4692", "d": "8/2015"}, {"title": "know whether object reactelement", "body": "find like", "num": "4690", "d": "8/2015"}, {"title": "weird output rendering react server typescript", "body": "get result browser execute code server javascript import express require express import react react import helloworld appcomponentshelloworld var router expressrouter get home page routerget req expressrequest res expressresponse next function gt resrender index output reactrendertostring reactcreatefactory helloworld export default router javascript import react react interface props class helloworld extends reactcomponenthello world export default helloworld know issue react module", "num": "4689", "d": "8/2015"}, {"title": "disable checksumming sanity checks", "body": "nt seem documented anywhere mentioned possible parameters line code change etc also welcome insight things disable make render process faster cpu wise", "num": "4681", "d": "8/2015"}, {"title": "remove jsxtransformer reacttools website", "body": "pieces flight putting together track sanity x recommend babel talk transforming already landed x remove use jsxtransformer transforming site x redirect jsxcompiler babel repl remove links jsxcompiler x update tutorial tutorial repo x land back", "num": "4677", "d": "8/2015"}, {"title": "webkitplaysinline attribute jsx supported", "body": "hi webkitplaysinline jsx ignored solution solve problem", "num": "4676", "d": "8/2015"}, {"title": "createelement mode fails updates", "body": "stupid node js var flip reactcreateclass render function return thispropsx var container documentcreateelement div reactrender container reactrender b container throws", "num": "4674", "d": "8/2015"}, {"title": "commentsjson location confusing tutorial docs", "body": "tutorial says create static json file however tutorial repository file root directory use node server implementation repo create file directory server crashes submitting comment everything works fine file root directory tutorial repo documentation location file consistent repo user grab server implementation go", "num": "4673", "d": "8/2015"}, {"title": "change event fire ie edge certain circumstances", "body": "put together simple example demonstrate issue problem happening elements mouse event listeners attached would trigger render handler never gets called looks like unlike browsers ie edge trigger mouse events element clicking options prevent event triggering", "num": "4672", "d": "8/2015"}, {"title": "handle without ref passing back react component", "body": "hello take following snippit javascript component export default reactcreateclass getinitialstate function return error valid true isvalid function return thisstatevalid setvalid function isvalid thissetstate valid isvalid render function return parent export default reactcreateclass handleclick function var comp thisrefscomp update refs passed back react component able access helper methods class handle certain pieces state like component valid error message displayed actually returns dom node understand everything done javascript modify dom ie take message change node innerhtml message adds extra must done feel good fit modifying state way thinking antipattern considered due seeing many people accomplishing sort thing", "num": "4671", "d": "8/2015"}, {"title": "load javascript file cdn server component", "body": "want load javascript file form cdn server nt want put tag wrote component like nt worked", "num": "4670", "d": "8/2015"}, {"title": "jsx extra semicolon bug", "body": "use semicolon jsx code strange print html page could somebody tell", "num": "4667", "d": "8/2015"}, {"title": "suppressing component warning", "body": "writing wysiwyg editor react order place cursor inside rich document use understandably react nt fare well contenteditable get around framework confusion contenteditable children modified force rerenders new keys work restore selection practice working pretty well getting new warning component contains managed react responsibility guarantee none nodes unexpectedly modified duplicated probably intentional case guarantee nodes unexpectedly modified duplicated intentional way suppress warning unlike factory warning warning appears time component instantiated think least slowly fills consoles considered alternative using children contenteditable component update set outside react would likely sidestep warning get us much else", "num": "4662", "d": "8/2015"}, {"title": "dom props match spec fix give saying props match dom spec", "body": "props react dom elements supposed based dom properties hence used supposedly prop names however eager camelcasing decided react nt actually match spec number cases number cases spec defines noncamelcase properties used browser react defines nonspec camelcase prop htmlimageelement srcset actually srcset htmlformelement autocomplete actually autocomplete enctype actually enctype htmlmediaelement autoplay actually autoplay etc leaves us awkward situation react dom props based dom property names html attribute names used justify sticking number props nt actually use name use dom want fix think two options keep saying react uses dom property names deprecate etc warnings get using jsx b stop saying react dom props based dom properties start saying something like react dom props html elements camelcased props loosely based dom property names often always camelcased aligns common practice using camelcased properties javascript avoids need quote prop names attributes use characters illegal js without forcing developers continually consult html spec know property supposed camelcase however choose b probably going people arguing reason used became invalid reserved words made valid property names object literals react start supporting sticking rules nt make sense react requires environment shimmed shamed fit users react use jsx either part environment least incorporates syntax jsx syntax", "num": "4653", "d": "8/2015"}, {"title": "returns callback rendering multiple times", "body": "trying use attribute described unfortunately sometimes returns called multiple times mwe javascript import react react class view extends reactcomponent render return function render reactrender documentgetelementbyid container setinterval render alternating beween null", "num": "4651", "d": "8/2015"}, {"title": "update facebook blog", "body": "reading following page stupidly failed notice key words uptodate version post available part flux documentation spent struggling code fault surely would better update blog post", "num": "4650", "d": "8/2015"}, {"title": "failing unmount nested render trees throw exceptions event handling", "body": "code js var leakyportal reactcreateclass render function return componentdidmount function reactrender thisrefsdiv var container documentgetelementbyid container reactrender container reactrender container reactrender container works fine implement componentwillunmount", "num": "4648", "d": "8/2015"}, {"title": "checkbox checked html attribute set underlying prop changes", "body": "rendering checkbox html attribute properly set reflect prop component problem seems method link sets property dom node object update html attribute seen fiddle suggestion instead use set property set underlying node property html attribute seen fiddle", "num": "4646", "d": "8/2015"}, {"title": "support custom nonstandard dom events", "body": "please add support custom nonstandard dom events ideally public api go least way would require forking code base attempt exposing nonstandard events getting insights irc unfortunately still work event listeners registered sure whitelists somewhere skips custom events ps help changing snippet make work also greatly appreciated", "num": "4645", "d": "8/2015"}, {"title": "time merge classname react", "body": "well react good like question time fixed support style object support classname think classname support string array object classname repertoryi want write code like javascript var classname reactaddonsclassname var somevar classname puzzled think opened true cloth red support feture", "num": "4644", "d": "8/2015"}, {"title": "transplant react react root manually", "body": "need something react api work domdiff properly example js reactrender foo somediv settimeout function somediv appendto someotherdiv react still works okay", "num": "4640", "d": "8/2015"}, {"title": "reference error render swallowed results", "body": "using rendering following reproduce import missing thus causing react seems swallow error instead reports pretty frustrating debug hope fixable", "num": "4639", "d": "8/2015"}, {"title": "error messages swallowed", "body": "given following components trigger error map component first time renders get plain old error like trigger component receives new props get complicated error trigger error child component render method error message messages thrown child components swallowed render method map looks like javascript render consolecount render render leafletlayer looks like javascript render throw new error hey lt raise error anyone idea might going also using react router webpack think might react problem", "num": "4638", "d": "8/2015"}, {"title": "onchange event fired pollfilled", "body": "used pollyfill onchange event broken", "num": "4637", "d": "8/2015"}, {"title": "add refchildren access support transitiongroup", "body": "transitiongroup clone children change refs therefore nt seem exist easy hack directly access instance call methods especially makes filtering intercepting dispatching events almost impossible great could make way fix figured hard use refs children cloned implementing method could easy way around transitiongroupgetchildwithref child ref gt return child ref", "num": "4636", "d": "8/2015"}, {"title": "update webcomponentsjs latest version", "body": "current used version webpomponents nov bit time change log quite long posting enchancement request test bump prepare pr also sure good idea push react", "num": "4630", "d": "8/2015"}, {"title": "codemods nt apply using modules", "body": "note branch mine cpojer react currently code mods detect require add detection import react", "num": "4629", "d": "8/2015"}, {"title": "react class codemod", "body": "right hand side method definition expression gets dropped completely code mod example result code mod completely dropping method", "num": "4628", "d": "8/2015"}, {"title": "support fontweight svg attribute", "body": "already supported addition would great", "num": "4625", "d": "8/2015"}, {"title": "reacttestutils working", "body": "hello everyone try test react components use found component use cause error test case look like import react reactaddons import expect expect const reacttestutils reactaddonstestutils import root javascriptsalbatrossroot describe root function click working function var root reacttestutilsrenderintodocument reacttestutilssimulateclick reactfinddomnode root expect rootstatecount tobe write like working var react require react var root reactcreateclass displayname root getinitialstate function return count tick function consolelog click thissetstate count thisstatecount render function return moduleexports root change test die import react react export default class root extends reactcomponent constructor props super props thisstate count tick consolelog click thissetstate count thisstatecount render return somebody tell", "num": "4621", "d": "8/2015"}, {"title": "ca nt update defaultcheckeddefaultvalue", "body": "rerender component defaultchecked defaultvalue react fails update value checked attribute accordingly say use controlled input would argue bug basically disallows uncontrolled forms reset buttons always reset whatever initial default value", "num": "4618", "d": "8/2015"}, {"title": "react renders differently server client", "body": "read seemed like maybe another related problem browser tries bootstrap react rerender page get warning apart case unnecessary escape quote seems render differently server browser static content nt really understand markup render element like next test come rendered different", "num": "4616", "d": "8/2015"}, {"title": "links translated docs", "body": "translated docs japanese korean chinese docs links add links translated doc getting started links added get reactjs users feedbacks", "num": "4614", "d": "8/2015"}, {"title": "checksum issue encoded characters chrome", "body": "recently started seeing issues checksums server rendered markup even though client server encoding characters correctly reactmount triggering checksum warning replacing dom seems chrome may changed behavior innerhtmlouterhtml returns encoded character rather encoding causes comparison incorrect see issue firefox correctly renders dom shows warning first thought messages mixed actually existing root node returning decoded string perhaps bug chrome", "num": "4608", "d": "8/2015"}, {"title": "getboundingclientrect nt work jasminejest testing", "body": "every time try test rect always empty tried jasmine jest case something different one neither work hoping something wrong ca nt find version var react require reactaddons var testutils reactaddonstestutils var findclass testutilsfindrendereddomcomponentwithclass describe react tests function return proper bounding rectangle height function var component testutilsrenderintodocument hello world test works fine though works normally normal dom manipulation function var div documentcreateelement div var text documentcreatetextnode hello world divappendchild text documentbodyappendchild div var rect divgetboundingclientrect expect rectheight nottobe", "num": "4606", "d": "8/2015"}, {"title": "set key conditional components", "body": "example two conditional children like javascript showa amp amp showb amp amp set key children without keys diff result remove remove b insert b many conditional children like look could figure answer thanks help", "num": "4605", "d": "8/2015"}, {"title": "support jsx filenames react native", "body": "seems files extension js required jsx files following works fine rename file code jsx gives exception requiring unknown module srcviewsscreenshellojsx sure module try restarting packager restarting nt seem help problem something react native", "num": "4604", "d": "8/2015"}, {"title": "html table summary attribute", "body": "creating data table noticed summary listed react supported html attributes reason including summary attribute workaround fairly useful legacy screen readers", "num": "4603", "d": "8/2015"}, {"title": "giving partial state setstate child properties merged", "body": "docs setstate say merges nextstate current state primary method use trigger ui updates event handlers server request callbacks experienced state really merged happens properties assigned real merge short behaves like lodash assign like merge put words recursive merge shallow one suppose either fix code could break backwards compatibility update documentation clear", "num": "4601", "d": "8/2015"}, {"title": "umbrella", "body": "likely going quick release goes basically lightweight garbage collection release remove deprecated functionality x remove getdomnode setprops replaceprops monkey patching dom refs jimfb x remove getdomnode createclass jimfb x remove deprecated addons clonewithprops jimfb x remove reactrender finddomnode package jimfb deprecated functionality unlocks new features x remove support inheritless classes enables null return values plain functions jimfb spill make sure package includes isomorphic renderers nt burdened even package least make sure module dependencies nt burdened effectively make sure complete decouple dependencies react dom react isomorphic except currentowner react dom still needs set react isomorphic sebmarkbage see comment bonus react native ships copy renderer npm finally works properly", "num": "4600", "d": "8/2015"}, {"title": "warn component nt extend reactcomponent", "body": "support arrow functions plain functions components need know call new examples wo nt work js function plainfunctioncomponent props return null var arrowfunctioncomponent props gt class classcomponent render return need detect component function class calling call everything plain functions long return however wo nt work nullfalsestring return values want support also ca nt call arrow functions likewise ca nt call classes unfortunately ecmascript nt way detect something able current plan add static flag reactcomponent detect something class class pattern nt require still possible sure distinguish pattern one requires warnings though", "num": "4599", "d": "8/2015"}, {"title": "externalize state tree alternatives", "body": "react provides notion implicitly allowing child component store state using functionality however used business logic state also used remember dom state tiny ephemeral state scroll position text selection etc also used temporary state memoization kind magic black box react implementation details largely hidden people tend reinvent wheel invent state management systems eg using flux still plenty use cases flux state belongs flux stores manually managing addingremoving state nodes becomes huge burden regardless going keep manually end system something similar need convenient standard way handle across components something user space components wo nt able integrate well even think using calling setstate still relying capability undermines ecosystem eventually everyone reconverge single external state library anyway make sure gets baked react designed state tree state tree data structure would opaque optimize internals clever ways blocks many antipatterns external users breaks encapsulation boundaries touch someone else state exactly problem react programming model tries address however unfortunately state tree opaque end users means bunch legitimate use cases available external libraries eg undoredo reclaiming memory restoring state sessions debugging tools hot reloading moving state server client could provide standard externalized statetree eg using immutablejs data structure however might make clever optimizations future features difficult adopt also nt capable fully encapsulating true state tree may include dom state may ok treat state differently heuristic api need account also nt allow us enforce certain level encapsulation components another approach try add support use cases react onebyone external state tree nt become useful anymore created separate issues ones already planning supporting debugger hooks public api hibernating state serialized form else need pinging stake holders leebyron swannodette gaearon yungsters ryanflorence", "num": "4595", "d": "8/2015"}, {"title": "hibernating state necessarily serialized", "body": "relay others currently abuses internals get persistent identity component effectively used restore state component temporarily unmounted also common abuse flux stores use case basically since capability nt currently exists encouraged use flux everything case need capability later purpose issue discuss public api hibernating state component restoring component remounts use cases broken three scenarios list item view eg infinite scrolling table views one row eventually needs reclaimed save memory used tree view detail view masterdetail view clicking one item list switches state detail view click original view backforward button want save snapshot state navigate new view change state hit back button return previous state want restore original state subtree would like support least nonserialized form could imagine api serializes json data structure potential follow necessarily part one potential api basically object used key unlike normal key semantics state subtree kept memory indefinitely use weakmap keep state object ever goes away gc collect state subtree solves three use cases", "num": "4594", "d": "8/2015"}, {"title": "include devtools public api", "body": "idea multiversion extension allow attach debugger running react instance debugger protocol injects intercepted functions particular version react exposes development hooks effectively intended expose stateful reflection apis production use since negatively affect performance", "num": "4593", "d": "8/2015"}, {"title": "stop relying document", "body": "use cases support nt rely dom specific globals available shallow rendering worker renderers eg reactnative like environments server rendering setstate etc nt look document unfortunately often screw leads work arounds part problem jest comes jsdom always need test environment allow us execute domless environment also need add separate unit tests three test cases execute domless environment could potentially add lint rule using globals files folder also get rid uses since varies render tree environment", "num": "4592", "d": "8/2015"}, {"title": "warning child array iterator unique key prop provide info", "body": "hi building component complexity alot html warning gets infuriating hard solve would possible include bit context warning example tag class html parent something like", "num": "4591", "d": "8/2015"}, {"title": "broken", "body": "command broken commit error message running jest task running jest may take using jest cli fail srcaddonstestsreactfragmenttestjs typeerror read property length undefined maybereadmore processtickcallback fail srcaddonstransitionstestsreacttransitionchildmappingtestjs error attempted send message worker response last message received worker processes handle one essage time fail srcaddonslinktestsreactlinkproptypestestjs typeerror read property length undefined maybereadmore processtickcallback", "num": "4590", "d": "8/2015"}, {"title": "allow proptypesshape valid definition proptypes", "body": "short accept object valid declaration js import react react export default class extends reactcomponent static proptypes reactproptypesshape file called defines shapes used project eg js import proptypes react export let screeningshapedefinition id proptypesnumberisrequired timestamp proptypesnumberisrequired url proptypesstringisrequired position proptypesnumberisrequired export let screeninglistshapedefinition size proptypesnumberisrequired screenings proptypesarrayof proptypesshape screeningshapedefinition isrequired use modules js import react react import moment moment import screeningshapedefinition shapes export default class extends reactcomponent static proptypes screeningshapedefinition slight leaking cast shape definition object defining relations shapes definition file component definition property supported valid input could avoid leaking js import react react import moment moment import screeningshape shapes export default class extends reactcomponent static proptypes screeningshape js import proptypes react export let screeningshape proptypesshape id proptypesnumberisrequired timestamp proptypesnumberisrequired url proptypesstringisrequired position proptypesnumberisrequired export let screeninglistshape proptypesshape size proptypesnumberisrequired screenings proptypesarrayof screeningshape isrequired", "num": "4589", "d": "8/2015"}, {"title": "ie error rendering properly chrome", "body": "trying render header existing header creating div table html code deleting row header getting rendered script var stickydiv reactcreateclass mixins simplepagescrollmixin simpleresizemixin displayname stickydiv proptypes offsettop reactproptypesnumber zindex reactproptypesnumber classname reactproptypesstring getinitialstate function return fix false width null getdefaultprops function return offsettop classname zindex handleresize function thischeckwidth thischeckpositions handlescroll function thischeckwidth thischeckpositions checkpositions function var pos finddomnode react pos utilfindposrelativetoviewport reactfinddomnode else pos utilfindposrelativetoviewport thisgetdomnode pos lt thispropsoffsettop thissetstate fix true else thissetstate fix false checkwidth function var width null thisrefsduplicate finddomnode react width reactfinddomnode thisrefsduplicate getboundingclientrect width else width thisrefsduplicategetdomnode getboundingclientrect width else finddomnode react width reactfinddomnode thisrefsoriginal getboundingclientrect width else width thisrefsoriginalgetdomnode getboundingclientrect width", "num": "4586", "d": "8/2015"}, {"title": "dont rerender checkbox radiobox", "body": "make quiz app react use logic nextquiz state ok dont change checked info dont use state props manage mini project problem rerender dont rerender check info update small version", "num": "4583", "d": "8/2015"}, {"title": "give relay", "body": "\u3064", "num": "4582", "d": "8/2015"}, {"title": "investigate missing eventtarget", "body": "see cc jimfb syranide", "num": "4578", "d": "8/2015"}, {"title": "reactcreateelement null null throw", "body": "sometimes happens bug application gives warning rendering fails one warning error makes bugs harder debug cases eg serverside rendering warnings get lost log error visible saying uncaught typeerror read property touppercase undefined warnings errors suppose element type null much use element better throw meaningful error early also error thrown earlier get stacktrace function call actually passed constructor debug easier like fact give warnings stuff think cases errors would even helpful", "num": "4575", "d": "8/2015"}, {"title": "get displayname instance", "body": "hi extending reactcomponent define components scalajs react dev tools seeing display name components reason scalajs output getting name function okay modify function get displayname instance break head digging javascript prototypes constructors following code works", "num": "4574", "d": "8/2015"}, {"title": "add support types arrow functions literals", "body": "new facebook flow might missed something nt able write types arrow function literals example craps unexpected", "num": "4573", "d": "8/2015"}, {"title": "consistency propchildren type", "body": "time something like render children component need clone element something right facing problem pass child function longer object end something like time creating little layer deal problem maybe take approach always create array even pass single element unless see problem js return thisrenderchildren renderchildren arrayisarray thispropschildren return thispropschildrenmap thisrenderchild return thisrenderchild thispropschildren", "num": "4572", "d": "8/2015"}, {"title": "differ parentbased context childbased context childbased context lost", "body": "want use materialui react appi material ui says code indexjs reactappjs first use jsx tool compile two files use browserify browserify reactappjs mainjs add pages indexhtml reported get make sense solve", "num": "4571", "d": "8/2015"}, {"title": "tag attribute webkitplaysinline ca nt parsed", "body": "tag attribute webkitplaysinline supposedly prevents default go fullscreen behavior videos attribute works webview flag set native code want use attribute prevent default behavior iphone saw customeattributes doccuments like data aria works like need", "num": "4570", "d": "8/2015"}, {"title": "build folder present latest github release", "body": "indexjs references build folder exist initial install attempting install using jspm since npm version way date", "num": "4568", "d": "8/2015"}, {"title": "including react reactdom together produces warning webpack", "body": "webpack output test gajus webpack watch progress hash version webpack time asset size chunks chunk names appjs kb emitted app multi app bytes built hidden modules warning reactreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibobjectassignjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibobjectassignjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdeprecatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdeprecatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomserverjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomserverjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactisomorphicjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactisomorphicjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcurrentownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcurrentownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancehandlesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancehandlesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmountjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmountjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfinddomnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfinddomnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibrendersubtreeintocontainerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibrendersubtreeintocontainerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomfactoriesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomfactoriesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementvalidatorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementvalidatorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibonlychildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibonlychildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibwarningjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibwarningjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibexecutionenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibexecutionenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibbeforeinputeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibbeforeinputeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibchangeeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibchangeeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibclientreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibclientreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdefaulteventpluginorderjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdefaulteventpluginorderjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibenterleaveeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibenterleaveeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibhtmldompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibhtmldompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsercomponentmixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsercomponentmixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentbrowserenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentbrowserenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomidoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomidoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconciletransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconciletransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibselecteventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibselecteventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibserverreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibserverreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsimpleeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsimpleeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsvgdompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsvgdompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmarkupchecksumjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmarkupchecksumjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibinstantiatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibinstantiatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibinvariantjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibinvariantjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrefjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrefjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibescapetextcontentforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibescapetextcontentforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibvalidatedomnestingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibvalidatedomnestingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsereventemitterjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsereventemitterjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactemptycomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactemptycomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancemapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancemapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcontainsnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcontainsnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsetinnerhtmljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsetinnerhtmljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibshouldupdatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibshouldupdatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcallbackqueuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcallbackqueuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibpooledclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibpooledclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactfragmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactfragmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtraverseallchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtraverseallchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnoopupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnoopupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibmapobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibmapobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacterrorutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacterrorutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationnamesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationnamesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeymirrorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeymirrorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeyofjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeyofjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetiteratorfnjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetiteratorfnjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyfunctionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyfunctionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventconstantsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventconstantsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpropagatorsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpropagatorsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfallbackcompositionstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfallbackcompositionstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticcompositioneventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticcompositioneventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticinputeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticinputeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginhubjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginhubjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibiseventsupportedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibiseventsupportedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibistextinputelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibistextinputelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticmouseeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticmouseeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibautofocusutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibautofocusutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdombuttonjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdombuttonjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdominputjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdominputjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomoptionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomoptionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextareajs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextareajs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibshallowequaljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibshallowequaljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdomchildrenoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdomchildrenoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibeventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibeventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventtargetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventtargetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetunboundedscrollpositionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetunboundedscrollpositionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnativecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnativecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinputselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinputselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetactiveelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetactiveelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticclipboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticclipboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticfocuseventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticfocuseventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetickeyboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetickeyboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticdrageventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticdrageventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetictoucheventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetictoucheventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticuieventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticuieventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticwheeleventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticwheeleventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventcharcodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventcharcodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfanalysisjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfanalysisjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancenowjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancenowjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcompositecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcompositecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibquoteattributevalueforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibquoteattributevalueforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginregistryjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginregistryjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventemittermixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventemittermixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibviewportmetricsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibviewportmetricsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibistextnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibistextnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibaccumulateintojs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibaccumulateintojs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibforeachaccumulatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibforeachaccumulatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgettextcontentaccessorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgettextcontentaccessorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventmodifierstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventmodifierstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibfocusnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibfocusnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerousstylevaluejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerousstylevaluejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibmemoizestringonlyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibmemoizestringonlyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactliblinkedvalueutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactliblinkedvalueutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildupdatetypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildupdatetypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsettextcontentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsettextcontentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventkeyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventkeyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibisnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibisnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibflattenchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibflattenchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatenodesfrommarkupjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatenodesfrommarkupjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetmarkupwrapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetmarkupwrapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetnodeforcharacteroffsetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetnodeforcharacteroffsetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatearrayfrommixedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatearrayfrommixedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibtoarrayjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibtoarrayjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected", "num": "4566", "d": "8/2015"}, {"title": "emptyfunctionjs missing lib folder fresh install", "body": "sure missing appears required order react function properly issue easy recreate notice underneath jspmmodulesnpmreact emptyfunctionjs file present", "num": "4564", "d": "8/2015"}, {"title": "react facebook comments", "body": "hi page completely written react html template use comments widget facebook came code mutates dom react philosophy let assume facebook rewrites plugin react would two react apps react inside react ok include facebook comments like completely wrong path ok one react app inside another one e g video player inside page", "num": "4563", "d": "8/2015"}, {"title": "issue react jsx mocha karma webpack", "body": "trying set testing using mocha karma webpack test file results following error message error invariant violation reactrender invalid component element may caused unintentionally loading two independent copies react component files require simply", "num": "4562", "d": "8/2015"}, {"title": "children nt updated props changed", "body": "loop triggered event setting height children inline style property first time works fine subsequent updates coffee code experienced problem comments coffee react require react reactbootstrap require reactbootstrap tabbedarea reactbootstrap moduleexports reactcreateclass displayname tabbedarea proptypes height reactproptypesnumber height tabbed nav bar known calculate correct height tab panels automatically distributeheights navbar reactfinddomnode refstabbedarearefstabs tabpaneheight propsheight navbarclientheight componentdidmount distributeheights componentdidupdate distributeheights render", "num": "4560", "d": "8/2015"}, {"title": "support camelcase version webkittransform well", "body": "although pascalcase work safari actual property camelcase react nt support properly alias added handle case since nt seem obvious fact safari inspector autocomplete nt even work seems like hack works", "num": "4557", "d": "8/2015"}, {"title": "question two react based apps one page", "body": "hi video component written clojurescript based om page written javascript based react want use video component page came following code works sure ok js class page extends reactcomponent render gt return reactrender documentgetelementbyid page function video instance clojurescript application videoclientrender id abc calls reactrender documentgetelementbyid video please take look confirm eventually", "num": "4556", "d": "8/2015"}, {"title": "question dynamic context", "body": "trying locality specified throughout app thought using context could good solution achieve need let user dynamically change locale dynamically changing context negative consequences tested works want make sure negative consequences", "num": "4555", "d": "8/2015"}, {"title": "missing reactproptypesoneofshape operator", "body": "js import react react let timeshape placeholdershape timeshape reactproptypesshape type reactproptypesoneof time isrequired reactproptypesnumberisrequired url reactproptypesstringisrequired position reactproptypesnumberisrequired placeholdershape reactproptypesshape type reactproptypesoneof placeholder isrequired position reactproptypesnumberisrequired export default reactcreateclass proptypes times reactproptypesarrayof reactproptypesoneofshape timeshape placeholdershape isrequired way validate whether array property whats even worst use latter example produces error validate data expected", "num": "4553", "d": "8/2015"}, {"title": "adding example app wiki", "body": "like add reactfluximmutable demo app examples page wiki simple way pull request changes bit researching done could someone let know preferred way getting done looks like open editing anyone sure", "num": "4551", "d": "8/2015"}, {"title": "reactrendertostaticmarkup add tags", "body": "think placeholders inserted rendering rendertostaticmarkup js var react require react var demo reactcreateclass proptypes render reactproptypesboolisrequired render function return thispropsrender amp amp im demo var container reactcreateclass proptypes render reactproptypesboolisrequired render function return consolelog reactrendertostaticmarkup im demo consolelog reactrendertostaticmarkup example complex structure becomes hard use css selectors like etc", "num": "4550", "d": "8/2015"}, {"title": "import react npm compoent jsx file", "body": "hello freshman use gulp build web compile jsx files gulpreact js like want use react component registered nt know introduce jsx directly add bellow jsx filet wo nt work well import rightly thanks amp regards", "num": "4549", "d": "8/2015"}, {"title": "update checkbox defaultchecked nt work", "body": "update checkbox defaultchecked nt work please see", "num": "4548", "d": "8/2015"}, {"title": "settimeout arguments nulled", "body": "autocomplete textbox component onchange event assigned function called delaykeyup waits user stop typing seconds call handleinputchange function delaykeyup receive event react contains target property screenshot need pass event argument handleinputchange function problem event argument received handleinputchange values null might cause", "num": "4547", "d": "8/2015"}, {"title": "publish addons update npm", "body": "addons npm still importantly modules testutils perf get published thanks still nt npm makes trying bit trickier would ideal", "num": "4544", "d": "8/2015"}, {"title": "reactrender headersticky", "body": "trying render header existing header creating div table html code html deleting row header getting rendered script js var stickydiv reactcreateclass mixins simplepagescrollmixin simpleresizemixin displayname stickydiv proptypes offsettop reactproptypesnumber zindex reactproptypesnumber classname reactproptypesstring getinitialstate function return fix false width null getdefaultprops function return offsettop classname zindex handleresize function thischeckwidth thischeckpositions handlescroll function thischeckwidth thischeckpositions checkpositions function var pos finddomnode react pos utilfindposrelativetoviewport reactfinddomnode else pos utilfindposrelativetoviewport thisgetdomnode pos lt thispropsoffsettop thissetstate fix true else thissetstate fix false checkwidth function var width null thisrefsduplicate finddomnode react width reactfinddomnode thisrefsduplicate getboundingclientrect width else width thisrefsduplicategetdomnode getboundingclientrect width else finddomnode react width reactfinddomnode thisrefsoriginal getboundingclientrect width else width thisrefsoriginalgetdomnode getboundingclientrect width rendered rendered place exisitng row instead seperate row way could render new element row existing table code sticky working header coloumns misaligned since guess cordination two tables guess thanks", "num": "4543", "d": "8/2015"}, {"title": "make easier use alphabeta versions", "body": "hi think easier tryuse beta version react like lack documentation changes yet officially documented would nice github issue per beta community could discuss migration problems usually errorswarnings provided react quite explicit place discuss could also help give insight amount work needed migrate attempt jsfiddle think would nice provide base jsfiddle integration beta versions would permit users test new react behavior sandbox also report bugs beta versions easily peerdependency problem using libs declare react peerdependency problem npm match semver range see forces library author use something like order able use beta lib problem beta published library authors add new beta support mean using reactdatepicker wait lib author allow explicitly able test use shrinkwrap manually edit packagejson lib nt know good solution problem wanted react team aware", "num": "4542", "d": "8/2015"}, {"body": "sorry trouble unfortunate problem process deprecating wo nt fixing anything suggest switching another tool preferred one babel", "d": "8/2015"}, {"body": "cool thanks headsup", "d": "8/2015"}, {"body": "post small reproducible example jsfiddle ca nt help unless give information", "d": "8/2015"}, {"body": "pass component ask type questions stackoverflow github reporting issues", "d": "8/2015"}, {"body": "helloyie use pass props children components without jsxattributes official docs read", "d": "8/2015"}, {"body": "nikolaymatrosov answer perfectcorrect points thanks helloyie want pass props owner child component nikolaymatrosov mentioned looking prop changes may also want read componentwillreceiveprops may apply eitherboth parent child depending use case", "d": "8/2015"}, {"body": "leave open figure longerterm plan test utils unlikely get", "d": "8/2015"}, {"body": "try setting globaldocument globalwindow jsdom requiring react report similar", "d": "8/2015"}, {"body": "please read error message", "d": "8/2015"}, {"body": "also affects input fields chrome", "d": "8/2015"}, {"body": "thanks dupe probably", "d": "8/2015"}, {"body": "react element still works work react classes sounds like instead", "d": "8/2015"}, {"body": "spot spicyj thanks pointer funny thing totally worked otherwise may nice invariant", "d": "8/2015"}, {"body": "okay", "d": "8/2015"}, {"body": "return element like said rendertostring nt include event handlers real way us make happen give details maybe helpful", "d": "8/2015"}, {"body": "rendering string need markdown parser insert tags around react elements takes returns string achieve transformation", "d": "8/2015"}, {"body": "hard without support markdown engine try using", "d": "8/2015"}, {"body": "khan markdown generates react elements similarly string parser inserts react elements like input could move khan extensions awesome thanks", "d": "8/2015"}, {"body": "spicyj atm simplemarkdown examples working however managed get need fork marked thanks bunch cheers", "d": "8/2015"}, {"body": "keys stay components update wo nt unmountedremounted", "d": "8/2015"}, {"body": "future please nt ask usage questions react issue tracker bugs react", "d": "8/2015"}, {"body": "spicyj thanks registered forums", "d": "8/2015"}, {"body": "trusktr stack overflow also good choice questions simple answer like one", "d": "8/2015"}, {"body": "seems related", "d": "8/2015"}, {"body": "yeah close favor", "d": "8/2015"}, {"body": "expected behavior children becoming map cc spicyj", "d": "8/2015"}, {"body": "syranide sorry clear yes expect produce map surprised using jsx construct reactelement hierarchy uses list", "d": "8/2015"}, {"body": "yes jsx always makes array reactchildrenmap return array", "d": "8/2015"}, {"body": "spicyj examples produced using though guessing planned change", "d": "8/2015"}, {"body": "mean key unique identifier going become redundant well", "d": "8/2015"}, {"body": "yes merged nothing changing key works would redundant", "d": "8/2015"}, {"body": "reference error got using array", "d": "8/2015"}, {"body": "write elements inline jsx like react nt ask add attributes since unlikely reorder write need keys reactchildrenmap copied implicitlyadded keys first case nt see warning mapping array would nt copy keys reactchildrenmap still copy keys automatically return array", "d": "8/2015"}, {"body": "thank explanation", "d": "8/2015"}, {"body": "work", "d": "8/2015"}, {"body": "cc spicyj likely result getting rid wrapper components add check shallow renderer somewhere get better error", "d": "8/2015"}, {"body": "yeah knew add better error note nt need shallow rendering want already", "d": "8/2015"}, {"body": "might also add inside featuremapview component jsx class featuremapview extends node case refs appear console output", "d": "8/2015"}, {"body": "ref adding featuremapview overrides one set outside way right two refs single component unfortunately", "d": "8/2015"}, {"body": "thinking thanks spicyj", "d": "8/2015"}, {"body": "pass update functions props use flux probably move question stackoverflow discussreactjsorg instead though", "d": "8/2015"}, {"body": "rather add prefixed versions lookup table first however using js property compatible thought appears might thing need support see quick fix presumably graphiql use pascalcase version", "d": "8/2015"}, {"body": "ah gotcha props described safari console typeahead camel case nt think maybe tolowercase first thanks info dancer", "d": "8/2015"}, {"body": "years ago way showed autocomplete style object inspection everybody thought ie special case standard ie broke opera gone browsers seem want odd one pascalcase awesome made conversion stylesheet rule easy replace capital letter lowercase version done oh well rant", "d": "8/2015"}, {"body": "browsers suck", "d": "8/2015"}, {"body": "probably flow issue anything definitely annoying want documented way soon think need ability compose flowconfigs could stack ignores though maybe something address fbjs brought day let continue issue", "d": "8/2015"}, {"body": "nt supported way best bet probably add wrapper components foo similar explain use case perhaps suggest better solution", "d": "8/2015"}, {"body": "nt supported way breaking encapsulation inner components eg target changing renders something intended look dom nodes certain class less", "d": "8/2015"}, {"body": "spicyj building found better way achieve goal extending method thank help", "d": "8/2015"}, {"body": "good catch thank", "d": "8/2015"}, {"body": "wonder references reactrender reactclassjs reactelementjs", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "issue resolved", "d": "8/2015"}, {"body": "react error please try read error message figure project related instead opening three issues", "d": "8/2015"}, {"body": "spycyj well kept going line nobody claimed responsibility got lucky guess", "d": "8/2015"}, {"body": "sometimes fault", "d": "8/2015"}, {"body": "cmelion sure spicyj nt mean way anyhow want keep gh issues focused development react questions problems please use stackoverflow instead", "d": "8/2015"}, {"body": "cmelion juvenile reply hopefully also know", "d": "8/2015"}, {"body": "syranide thank helpful advice teams relatively new react still finding way occasionally run across issues nt common enough yet turn searching usual channels defy internal efforts resolve currently workaround issue time circle back try understand root cause reactdnd proxyquire guys helpful nt able pin", "d": "8/2015"}, {"body": "sorry got bit tense help put things perspective using react context feature react dnd see message react never supported officially fact discourages using many libraries eg react router never official api bet react folks tired context issues ready support yet know broken ways", "d": "8/2015"}, {"body": "cmelion thank", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "please ask questions stack overflow github issues bug reports", "d": "8/2015"}, {"body": "ok", "d": "8/2015"}, {"body": "store intermediate structure maybe instance", "d": "8/2015"}, {"body": "lifecycle methods bound methods part base class eg setstate nothing planned would change", "d": "8/2015"}, {"body": "thanks clarification think go docs though", "d": "8/2015"}, {"body": "jsx collapses whitespace almost always want obviously inconvenient case sorry using compiler like babel swap jsxtransformerjs use textbabel instead textjsx use template string may palatable", "d": "8/2015"}, {"body": "thank much spicyj", "d": "8/2015"}, {"body": "actually turns adding fixes problem switch babel idea works final version works using jsxtransformer hello world var app reactcreateclass render function return lt pre gt lt code gt ditaa text diagram document magic lt code gt lt pre gt var element documentgetelementbyid content reactrender reactcreateelement app element", "d": "8/2015"}, {"body": "jsxtransformer also supported template literals spicyj trying sneakily get upgrade since deprecated jsxtransformer", "d": "8/2015"}, {"body": "smart move hahahah thanks guys grommet using babel react sake example used jsxtransformer thanks awesome technology", "d": "8/2015"}, {"body": "sorry guys trying understand issue better sorry context could please explain react collapses whitespaces inside tags checked pr definitely agree collapse cases like adding unnecessary whitespace pre tag code seems weird quick test github handles pre code tags preserve spacing provide see ascii art template literal works standalone scenario trying build something converts markdown jsx able easily create websites based react control user markdown decide whether put template literal putting template literal inside markdown also sounds strange also trying replicate markdown jsx pre code tags explains markdown one line transpilation process example expecting alternatively underlineish style get alternatively underlineish style", "d": "8/2015"}, {"body": "alansouzati issue ended writing babelplugin means perfect works uses remarkable markdown gt html gt babelast gt react components feedback welcome helps edit previously used template literals dangerouslysetinnerhtml however would mean escape code block back ticks use alternative string syntax replacement processing issue leading spaces nt know elegant way measure least long left white space remove lines text seems work bulletproof means", "d": "8/2015"}, {"body": "thanks browniefed definitely check plugin", "d": "8/2015"}, {"body": "worries using webpack config pretty straight forward setup file plugin", "d": "8/2015"}, {"body": "hey browniefed successfully integrated plugin pipeline problem persists try environment import react react import markdown babelpluginmarkdownreactmarkdown export default class rendermarkdown extends reactcomponent could something wrong env execution results single line element", "d": "8/2015"}, {"body": "intentionally wrap back tick code marks take look though", "d": "8/2015"}, {"body": "alansouzati htmlspecific jsx nt even wanted could nt imho generally would recommend writing large amounts text inside jsx instead putting string inside render outside component referencing instead", "d": "8/2015"}, {"body": "alansouzati take issue plugin sufficiently call closed", "d": "8/2015"}, {"body": "descending elementpropschildren check tell custom component native component custom components less say give whatever component would render obviously child components expect lifecycles called need call similarly merge component default props child component expects getting detailed semantics right slightly nontrivial doable always trying get native elements might try using heavy lifting future reference questions like better addressed stackoverflow github issues reserved tracking bugs react", "d": "8/2015"}, {"body": "eventually may able support letting implement custom renderer difficult right sorry", "d": "8/2015"}, {"body": "ever replace content manually apply cached html multiple times posted issue error nt really make sense looks react complains mounted cached html trying mount cached html ps sure aware must used clearing react rendered dom right", "d": "8/2015"}, {"body": "syranide looks promising try", "d": "8/2015"}, {"body": "syranide worked updated feedback appreciated anybody interested server rendering rails webpack redux", "d": "8/2015"}, {"body": "glad hear however curious using cached markup clientside makes sense ship server client initial load largely seo really initial mount occurred need mount cached markup rendering", "d": "8/2015"}, {"body": "syranide make heavy use fragment caching rails would want cache markup hydration client stores done rails server need run execjs evaluate javascript produce rendering pulling cache fast seo caching benefite server rendering alexfedoseev opinion", "d": "8/2015"}, {"body": "believe jsx convention lowercase tags considered primitives transformed react element type string think rendered dom given iirc support things like svg potential additions html without maintain whitelist tags uppercase jsx tags transformed refers component", "d": "8/2015"}, {"body": "kmeht yes correct always convention classnames start uppercase one jsx enforces otherwise would namespace collisions way us determine user intended insert component dom node documented design justification discussed", "d": "8/2015"}, {"body": "thanks checked docs missed detailed info provided", "d": "8/2015"}, {"body": "giantelk want send pr make docs clearer", "d": "8/2015"}, {"body": "hi spicyj pr docs throw warning msg browser console declare react component starting lowercase character", "d": "8/2015"}, {"body": "warn previous version kept one version longer support transform tools wo nt adding warnings", "d": "8/2015"}, {"body": "sucks error warning whoever supporting transform tools aware even plain old javascript barks moon variable expected case tue aug paul shannessy wrote warn previous version kept one version longer support transform tools wo nt adding warnings reply email directly view github cheers flying horse dancing", "d": "8/2015"}, {"body": "probably warn lowercase", "d": "8/2015"}, {"body": "spicyj warn lowercase displayname sounds like would throw false positive displayname set automatically filename filename something like userdashboardindexjsx included", "d": "8/2015"}, {"body": "jimbolla true recommend var userdashboard moduleexports userdashboard though", "d": "8/2015"}, {"body": "eh nt like adding redundancy extra line code every file ideal situation would ability customize displayname gets generated value would actually useful display name full relative path source file equivalent something like tells information need go source topic", "d": "8/2015"}, {"body": "seems odd agree way currently implemented weird imho nt belong provides convenience specifying children varargs convenience provided nonjsx users otherwise good api decision forget jsx second comes formal name commonly used property jsx userfriendly sugar prop much everything else pulling realistically mean compare nonprops seems odd edit also context components housing multiple containers children nice works identically except jsxsugar rather see special rather special sounds like boils api decision allowing children provided varargs significant negative sideeffects nt want affecting jsx users move helper nt belong props edit technical perspective ca nt think reason make special user perspective makes sense jsxsugar", "d": "8/2015"}, {"body": "also makes awkwarddifficult implement possible treat props immutables therefore shallow compare children mutable react components meaning treated differently yet come decent way implement component accepts children", "d": "8/2015"}, {"body": "syranide createelement weird even jsx users specify children prop jsx element possibly via ellipsis simultaneously provide child nodes jsx element oddities jsx nonjsx users alike changing createelement signature nt solve weirdness jsx users even powerful argument powerful ones technical jsx nonjsx users taking perf hit every prop key needs checked see stringcompares string children need skip children rendering node attributes means needless stringcompare every prop every element every render nt bad enough take another perf hit children props means super common case element static props nonstatic children ca nt props object hoisted render results thousands needless allocations associated garbage created single large render second perf hit jimbolla yes componentshouldupdate hard implement component accepts children nt really solve problem yes agree processing another case often need treated differently", "d": "8/2015"}, {"body": "component might accept props elements want treat children specially prop hoisting optimization longer belong edit realized syranide said p", "d": "8/2015"}, {"body": "possible treat props immutables therefore shallow compare children mutable react components meaning treated differently nit mutable usually generated inside thus new every time babel hoisting help sure well whereas whole element tree could hoisted constant wrong cause nonhoistable problem think jimfb describing correct", "d": "8/2015"}, {"body": "gaearon correct counts props would hoistable nt fact becomes prop nt forget stringcompares equally importantexpensive", "d": "8/2015"}, {"body": "irksume theoretical computer science perspective even mean care specific nt weird part weird normal oo would put everything eg right mental model think main object functional style get rid completely thing makes weird xml specifically xml object model xml model special cases child elements parsing however deserialized dom represented object thing screws rule dom also allowed access serialized attributes nested anything want consistent would add give reflective api original source text ofc wo nt generally considered mistake expose serialized form object model think mental connection attributes trips people however also broken part dom something tried hard get away theoretical computer science perspective current model makes much sense another thing trip people children instantiated parent meaning nt access instances general misconception around children related nesting eg people expected able treat would dom xhp many traditional models however react nt work like gives us many importantinteresting opportunities even added elements would confusing difference might want ability preinstantiate children point though see example wanted keep open name potential purpose something like even jsx users specify children prop jsx element possibly via ellipsis simultaneously provide child nodes jsx element theoretically confusing trying however think would happen practice would user end situation try intentionally knowing namespace might know priority merging behavior applies avoid accidentally assume different namespaces probably targetting html since valid attribute trying build composite component try use prop realize way access separate things besides could simply lint even disallow transpiler children props means props object saved reactelement ca nt hoisted intelligent runtime incorrect never hoistable dynamic children could potentially hoist secondary object need wrapper object around issue jordwalke pointed past however unclear often would actually beneficial large impact would since wrapper objects around things anyway maximum saving would n rare case actually possible hoist like would able hoist whole tree anyway able hoist rare things like passed event handlers issue move special case end could merge onto would pain use spread etc forward properties also true besides end using value types props likely merge onto allocation outer allocation anyway think struct fields c c children occurs props means need additional string compare property iterate since need handle children prop special case iteration reflective apis expensive jit well solution try avoid much possible anyway see example known props html elements always wanted create function reads props instead iterating eg processing children componentshouldupdate another case often need treated differently nt solve scenario need shallow compare known childrenlike properties case children object likely recreated rerender parent point bail whole subtrees would nt make sense skip one component still proceeding children also nt way composites since nt know property path corresponds next set props child reasons rejected proposal past new knowledge close maybe get actual numbers perf impact real apps could reconsider nt think alternative compilation strategies eg value types likely realized soon enough warrant massive codemodupgrade path however another reason might want might change compromise concession try standardize reactelement data structure part jsx nt really care preserving xml idiosyncracies likely people using jsx target xml might want ever get point join others standardizing jsx data structure might want special case children events however big maybe quirks like semantics dealt first", "d": "8/2015"}, {"body": "sebmarkbage irksume theoretical computer science perspective even mean care specific odd would property randomly overwritten bar overriding prop like feels dirtyarbitrary making props feel bit impure incorrect reactelement never hoistable dynamic children could potentially hoist secondary props object need wrapper object around reactelement never hostable object hoistable talking issue keys reactelement uniform thus much optimizable hosting element less important anyway critical part hoisting issue style move special case reactelement maybe yes stop treating style special case object instead string different discussion practice style objects oftentimes constant thus already hoistable known props html elements always wanted create function reads props instead iterating solves update props initial markuprender maybe get actual numbers perf impact real apps could reconsider real component rendered real github user chosen less random taking children props hosting props object improved initial render time ssr renderer brought render render huge improvement measurable milliseconds add different jsvm ie relative costs could bit different numbers taken grain salt still valid data point warrant massive codemodupgrade path relative size codemod debatable depending far would want take change needs affect representation inline elements output representation could change public component api reactcomponent required realize much performance benefit", "d": "8/2015"}, {"body": "solves update props initial markuprender known whitelist still works optimization works without whitelist elements use property names html nodes frequent could change public component api reactcomponent change inline representation output would create new object gets passed public component api would much slower therefore think would change public component api sure solution proposing mean special casing string element native elements property real component rendered real github user point us complex component one gets rendered lot times also note hoisting nt free might need lazily initialize elements since otherwise negatively impact load time modules come another optimization probably something overcome though", "d": "8/2015"}, {"body": "sebmarkbage known whitelist still works optimization works without whitelist elements use property names html nodes frequent still iterating generate markup unless failing understandsee something entirely possible change inline representation output createelement would create new object gets passed public component api would much slower well dirty hack could mutate props passing component mutate back done maintaining illusion reactelements immutable lifespan element point us complex component one gets rendered lot times component discussed found particularly good one benchmark got ssr render time without couple features like used using black magic like aggressively rewriting reactelement", "d": "8/2015"}, {"body": "installing helped", "d": "8/2015"}, {"body": "yea think npm treating like prerelease ignoring even though published thought npm used default apparently sorry confusion nt think good way handle unfortunately", "d": "8/2015"}, {"body": "yes breaking change need change tests different sorry see actually dom node test utils ca nt look find react component tree rarely comes almost always testing components job test dom components work", "d": "8/2015"}, {"body": "awesome thank", "d": "8/2015"}, {"body": "please ask questions stack overflow github issue tracker bug reports", "d": "8/2015"}, {"body": "reactisvalidelement", "d": "8/2015"}, {"body": "extremely unlikely react issue reproduce problem using react please file issue repro case run easily", "d": "8/2015"}, {"body": "parameters flags involve basically forking react nothing documented really worth us guide point right direction leave checksum related stuff look uses module disabling sanity checks bunch invariants checks throughout codebase place disable would decide ones important nt", "d": "8/2015"}, {"body": "thanks zpao try document back ever able make react node useable isomorphic applications nt demo purposes know point people interested hope many people lose much time like", "d": "8/2015"}, {"body": "nonstandard attribute react view code might help", "d": "8/2015"}, {"body": "yea annoying wrong beginning need server wrong need tweak part tutorial probably require server see discussion", "d": "8/2015"}, {"body": "ah nt see issue thanks", "d": "8/2015"}, {"body": "actually try pass dom node instead instance dom components composite components like one example since finding dom node thing could dom component anyway case believe work way hoping let know actually running problem code general questions like better addressed stackoverflow use github issues track bugs react going close feel free continue discussion", "d": "8/2015"}, {"body": "ahh makes sense dom node refs big change making release exposing refs dom components dom node means looked ref dom component realized useful thing call thisrefsgiraffegetdomnode get underlying dom node release thisrefsgiraffe actual dom node refs custom component classes work exactly piece documentation managed miss reading update sorry nt want bring yet saw would caused lot refactoring case pulling works expected like stated sorry", "d": "8/2015"}, {"body": "questions like best addressed stack overflow since github issue going close rendering script tag probably want biggest question trying render script tag inside div trying render outside module probably invoking module via javascript function hard tell exactly since nt provide much background trying accomplish recommend posting detailed statement goal stackoverflow see people think", "d": "8/2015"}, {"body": "problem elements created innerhtml nt execute also means nt fetch external resource issue react longstanding workarounds also issue ever use createelement scripts suddenly start executing jensyn since way us reliably right might want element creation manually mounting maybe pull functionality create script elements shared way", "d": "8/2015"}, {"body": "thank much help wanted zpao jimfb perhaps detailed description stack overflow thank jimfb", "d": "8/2015"}, {"body": "semicolon nt want", "d": "8/2015"}, {"body": "spicyj thank", "d": "8/2015"}, {"body": "ah team member pointed react warns use children turns calls use places use children places text nodes case likely switch latter cases using well close task obviously welcome reopen think suppressing warning something worth considering", "d": "8/2015"}, {"body": "b correct see also particularly reply", "d": "8/2015"}, {"body": "intended component unmounted ref changes old ref gets called null called new value component instance store instance component effect unobservable long component mounted prevents memory leaks want something ref handler check null", "d": "8/2015"}, {"body": "thanks information think might worth mentioning docs", "d": "8/2015"}, {"body": "going keeping documents sync worth trouble could better job making message top easier see sorry trouble though", "d": "8/2015"}, {"body": "worries fair enough tricky keep two documents sync another possibility would deleting article content provide link seems unusual keep outdated content website", "d": "8/2015"}, {"body": "may well delete set redirect thinking react", "d": "8/2015"}, {"body": "think correct way catching state css actually using pseudoclass example take regular checkbox toggle nt get applied see plus one wo js", "d": "8/2015"}, {"body": "using likely solve use case thanks pointing however note css pseudo class recommendation available older browsers like ie lt also note according attribute specifies button furthermore whatwg html living standard notes adding attribute user agent set checkedness true viceversa also goes talking abstraction command relies certain attributes namely also checkbox state gt bookeeping attribute mentioned one thing pointed certain attribute gives default checkedness input element react form docs talks maintaining uptodate attribute past initialization value unlike html react components must represent state view point time initialization time seems like follow paradigm otherwise seems like something like reset algorithm work think last point also aligns observation checking checkbox live page add attribute vanilla js believe whatg calls state probably reflects pre js framework days notion form submitted first external state checkbox match server side value anyway think others existing code expect existence proper setting attribute", "d": "8/2015"}, {"body": "think simplest solution create component sets accordingly", "d": "8/2015"}, {"body": "bloodyowl zpao pointed using solves issue point general would recommend setting inline html elements styles exist stylesheets managed bigger question semantic meaning attribute common use much existing code relies existence behavior", "d": "8/2015"}, {"body": "hereby add support custom nonstandard dom events", "d": "8/2015"}, {"body": "use module written functionality described", "d": "8/2015"}, {"body": "know mean react support array object string", "d": "8/2015"}, {"body": "react trying keep api simple possible always pick something like described docs sairion referenced", "d": "8/2015"}, {"body": "wonder done way classnames attr probably one important ones", "d": "8/2015"}, {"body": "thanks bringing valid question one discussed current behavior exists stay inline expected dom behavior string make change like suggested would probably use another dom property like array still need convert vanilla array make addremove calls also need work make sure clone array provide props simple equality longer work since would possible pass array reference props render passes regardless really important dom element level composite components take whatever props want convert strings rendering dom elements", "d": "8/2015"}, {"body": "using classnames dedicated module used outside react best option even switching classlist nt cover use cases classnames covers zpao already partially covered fact props passed reactdom elements based dom property equivalents html properties initial examples also nt good ideas supported directly react js makes sense classnames nt map valid js value passed props js also sure example supposed requesting nt make sense string keys nt even pattern implemented classnames", "d": "8/2015"}, {"body": "ok see thx continue focus", "d": "8/2015"}, {"body": "ok move container like fyi ok move react rendered inside container current api", "d": "8/2015"}, {"body": "sweeet thanks syranide", "d": "8/2015"}, {"body": "sure try running code another browser break exceptions enabled spurious problems browsers silently dropping errors", "d": "8/2015"}, {"body": "tried fiddle tested chrome firefox swallowing reference error nt think bug react happy reopenreinvestigate get repro fiddle", "d": "8/2015"}, {"body": "noticed errors thrown components also getting lost", "d": "8/2015"}, {"body": "react nt swallow exceptions promise probably promises getting see related issue reports", "d": "8/2015"}, {"body": "broken would care elaborate", "d": "8/2015"}, {"body": "dupe less nt know yet whether want support", "d": "8/2015"}, {"body": "something wrong old version motivation us upgrade generally good uptodate", "d": "8/2015"}, {"body": "strong motivation imo changes generaly focused around bug fixing simplificationefficiency", "d": "8/2015"}, {"body": "ok going go ahead close bug nt want stay uptodate nt currently bug results us slightly date nt ship webcomponents polyfill users testing since wo nt get much value updating return investment low probably worth fixing moment new version changes affect us go ahead update", "d": "8/2015"}, {"body": "pushed flattened commits one work", "d": "8/2015"}, {"body": "wahoo", "d": "8/2015"}, {"body": "cc cpojer", "d": "8/2015"}, {"body": "thanks mod made refactoring loads easier", "d": "8/2015"}, {"body": "probably warn case wrap thank", "d": "8/2015"}, {"body": "probably use classproperty behind flag throwwarn flag enabled", "d": "8/2015"}, {"body": "could also inline constructor", "d": "8/2015"}, {"body": "constructor means something different inlining though time guess fine correct fix probably", "d": "8/2015"}, {"body": "primarily response classproperty suggestion use classproperty also put constructor better compatibility meant yeah correct fix actually adding prototype", "d": "8/2015"}, {"body": "specify dynamic uncontrolled input want reset bump key value new defaultvalue empty string whatever defaultreset value want effectively reset component internal state could also break react use plain javascript manually reset input state since using uncontrolled input anyway component effectively expecting triggers outside react modify nt break component mental modelcontract could use controlled input mentioned correct solution imho anyway several options disposal job engineer choose one best use case", "d": "8/2015"}, {"body": "jimfb understand hacks achieve desired result using although would expect defaultvalue virtual dom accurately reflects defaultvalue real dom seems odd react completely disregard modifications defaultvalue", "d": "8/2015"}, {"body": "sense hack people want fire forget solution implementing tags think initialvalue instead defaultvalue may make sense point get single opportunity specify value component creation time component takes point forward react pushes topdown data flow reason siblings randomly influencing node state becomes difficult reason state application even harder understand ramifications given change need able influence component state state longer internal component definition modeling internal state violation abstraction touching component internal state violation abstraction need control component state probably using controlled component imo", "d": "8/2015"}, {"body": "jimfb understand view want fire forget form react seems support seems odd uncontrolled forms supported nt allow browser handle defaultvalue defaultchecked trying reset uncontrolled form seems impossible react without hacks rewriting controlled form necessarily control since dependencies use uncontrolled inputs work native forms reset even form controlled limitation unreliable use native reset form trust react actually updated default values form form rerendered saying react users never rely reset forms may initialvalues changed", "d": "8/2015"}, {"body": "dylanpiercey saying resetting form currently resets form elements initial values currently expected behavior conceptually component saving initial property state first mount using state variable point forward ca nt go back time ca nt change initial value already sent want control state components would recommend using controlled input exists exact purpose giving control could always implement component behaves like uncontrolled input anything internally implements whatever semantics like", "d": "8/2015"}, {"body": "dylanpiercey also grab native dom node set manually prefer honestly confused api proposing though would react know reset value know keep user entered", "d": "8/2015"}, {"body": "spicyj current solution create inputs javascript input reactcreateclass componentwillreceiveprops nextprops nextpropsdefaultvalue thispropsdefaultvalue nextpropsdefaultchecked thispropsdefaultchecked var input reactfinddomnode inputdefaultvalue nextpropsdefaultvalue inputdefaultchecked nextpropsdefaultchecked render return basically keeps defaultvalue defaultchecked sync dom actually updates input never touched user form reset guess little misleading browser default modify defaultvalue would propose something like seems like want unambiguous could throw defaultvalue initialvalue initialvalue could override defaultvalue initial render", "d": "8/2015"}, {"body": "maybe make update dom people use reset buttons nt come", "d": "8/2015"}, {"body": "likely red herring warning nt best job detecting differnces like improved master try latest betas see still repros", "d": "8/2015"}, {"body": "rather would still report something different point actual difference random encoded entity see discussion", "d": "8/2015"}, {"body": "posted issue well turns chrome support package fall back using native method key ordering different using vs polyfill", "d": "8/2015"}, {"body": "weird would expect use enumeration order", "d": "8/2015"}, {"body": "traced used messing enumeration order actually problem may within changing underlying structure tell using may behave differently node chrome", "d": "8/2015"}, {"body": "yeah use forin loop", "d": "8/2015"}, {"body": "switch package works fine", "d": "8/2015"}, {"body": "appears bug used marked issue workingasintended unfortunately also created issue since issue arose switched using", "d": "8/2015"}, {"body": "good sleuthing", "d": "8/2015"}, {"body": "cc zpao since one manages stuff pages mostly static maybe exception little javascript seems like ideal thing would detect user preferred language browser headers one translated languages let know translated docs available nudge direction put notice banner something link appropriate translation way users see translated docs regardless reach site search engine results links forums etc", "d": "8/2015"}, {"body": "definitely high list things docs actually looking recently right situation nt awesome like get us slightly better place biggest problem even get japanesekoreanchinese docs hard stay sidebar links english docs works click next buttons fragile started solve never got got traction also really fragile design changes need made places looking alternatives keep updated", "d": "8/2015"}, {"body": "almost certainly red herring warning message improved probably show real cause", "d": "8/2015"}, {"body": "interestingly adding change fix encoding issues seems ordering attributes different client vs server still happening chrome probably outerhtml working necessarily react", "d": "8/2015"}, {"body": "yeah might best log manually use favorite diff tool", "d": "8/2015"}, {"body": "easiest call rendertostring server client compare making root ids findreplace love make nore automatic", "d": "8/2015"}, {"body": "take account though nt see warning firefox instance markupstate nt think warning problem markup used checksum calculation client", "d": "8/2015"}, {"body": "canreusemarkup looks checksum html browser touches nt crossbrowser differences maybe code feature detection sort", "d": "8/2015"}, {"body": "ah right makes sense deep diving markup see different", "d": "8/2015"}, {"body": "posterity sake turns chrome support package fall back using native method key ordering different using vs polyfill", "d": "8/2015"}, {"body": "instead using work nt actually attach node creates suspicion getboundingclientrect reporting dimensions would make sense actually dom", "d": "8/2015"}, {"body": "yes thank figured something like imaginary dom existed could nt find anyone else issue makes lot sense", "d": "8/2015"}, {"body": "get different keys case since different slots null placeholder exists components shown essentially key b key something like would need keys future please use issue tracker bugs react", "d": "8/2015"}, {"body": "please report issue packaging system would need understand", "d": "8/2015"}, {"body": "oh ok", "d": "8/2015"}, {"body": "workaround setattribute componentdidmount awesome probably skipped marked deprecated suggested use think probably best alternative still value could want give shot", "d": "8/2015"}, {"body": "thanks pointing make sure read mozilla docs next time pr", "d": "8/2015"}, {"body": "part", "d": "8/2015"}, {"body": "docs updated unclear say merge nt technically wrong thinking usually referred recursive merge deep merge lodash documentation even", "d": "8/2015"}, {"body": "said would possible recursive merging setstate actually sounds useful", "d": "8/2015"}, {"body": "yaycmyk bad idea free similar want though would nt recommend", "d": "8/2015"}, {"body": "update docs clarify shallow merge wo nt change recursive merge thanks bringing", "d": "8/2015"}, {"body": "zpao probably close pr associated issue merged", "d": "8/2015"}, {"body": "checking function", "d": "8/2015"}, {"body": "rads", "d": "8/2015"}, {"body": "rads might enough bit fragile also means classes ecmascript never default function might one way rendering future eg might still work though need check difference terms engine optimizations options", "d": "8/2015"}, {"body": "nt think ducktyping way go much fragile extend bit annoying stateless components would provide lot possibilities future guess", "d": "8/2015"}, {"body": "another solution would allow arrow functions plain functions since undefined prototypes easily detectable eg would ed arrow functions would ed kind sucks transpilers since nt follow part spec", "d": "8/2015"}, {"body": "sebmarkbage performant way transpilers change behavior", "d": "8/2015"}, {"body": "extend reactcomponent bit annoying stateless components component stateless turn function", "d": "8/2015"}, {"body": "asking users brand classes symbol would probably awkward", "d": "8/2015"}, {"body": "asking users brand classes symbol would probably awkward decorators seems better course early decorators", "d": "8/2015"}, {"body": "however wo nt work nullfalsestring return values want support excited see happen also mean needing wrap jsx interpolated strings eg currently wraps latter part tag", "d": "8/2015"}, {"body": "threepointone still case unrelated", "d": "8/2015"}, {"body": "sebmarkbage want prototype check static flag", "d": "8/2015"}, {"body": "would nt work property initializers autobound decorator autobinds everything extending seems unnecessarily strict though nt know", "d": "8/2015"}, {"body": "nt yet buy argument nt solved userland alternative think might better teach state hoisting rather trying implement something part core personally still fan statehoisting pattern similar different component implementations provide blackbox state object may retained parent parent provide component state component initialize one internally case parent forfeits option preserve child component internal state also solves three use cases described without special logic within core without increasing api surface area added benefits instance allowing parent query component internal state without getting ref component implementor chooses expose internal information part public api useful things like form serializability decided implementor childview recommend pattern become defacto standard preserve entire subtrees saving root internal state imo aggressively utilize design pattern solve problem statehoisting pattern becomes defacto standard many problems evaporate nt require universal libraryframework requires components provide way passing internal state may treated blackbox parent", "d": "8/2015"}, {"body": "jimfb disagree simple everyone building library around boilerplate deal diffing lists etc edit case would solved problem user space", "d": "8/2015"}, {"body": "sebmarkbage yeah diffing lists sucks solved clever diffing libraries implementation remains internal component nt need global external state library components swap diffing implementation without breaking componentslibraries various diffing libraries coexist perfectly without stepping toes without requiring conformance global data loading interface therefore harming ecosystem could even release officially supportedrecommended listdiffing implementation imho people developing frameworks nt know anything better nt sufficiently taught data hoisting pattern never mentioned docs", "d": "8/2015"}, {"body": "something user space components wo nt able integrate well great point one already see taking shape current flux landscape every flux library little ecosystem", "d": "8/2015"}, {"body": "interested one reasons started redux able keep state tree computation let app think static value look redux devtools work keep lifted state initial app state debug ui staged actions replayed hot reload current state index useful slider monitors app sees unlifted state makes behave normally unaware state backed computation another observation use fluxredux means keeping state alive rather keep state shape normalized like database nt worry nt match view hierarchy use memoized computed data view layer need action log lets understand happened app potentially implement lifted state approach described time travel right hard imagine react could solving problem want state logic composable like ui composable different trees ui tree uses abstractions like list view show paginated items model tree may use abstractions like paginated reducer factory creates reducers managing pagination data ongoing requests map though new interesting thing form component mounted redux state tree dependency redux per se nice works recordreplaydevtoolsetc prop interface needs state provider terms current state function nt care provided redux something else nt care state mounted long mounted somewhere changes fact could work fine async talked server state would transferred wire sure helps thoughts sure fit react", "d": "8/2015"}, {"body": "gaearon implement hot reload time travel purpose devtools debugging model people even mutation reducers simplifies implementation nt feature use case solved put another way features get purely framework maintained react sent pr p would flexibility add features examples use cases reducers production environment see use case declarative programming solve timing issues eg allowing execution deferred based tree inconsistent state however allow us defer tree resolution therefore props invoking dispatch use case solved state reducers per say since transformation props still synchronous use case make valuable solves rollback scenario think big difference flux patterns react component state tree divergence two hierarchical models seem inherently incompatible since one optimizing componentization optimizing domain modeling perhaps top app modeled domain leaves opaque component state somehow except deal user form open twice different dialogs different state refactor domain model model view concepts loses appeal domain model begin perhaps remain parallel", "d": "8/2015"}, {"body": "forgive quasiignoring comments like focus particular design avenue going make part public api nt expose concrete data types immutablejs state values instead specify interface implemented state stores however probably want expose concrete data type state keys case concrete state value data types simple benefit restricting state maybe immutable abstract data type state store nt need restrictions keys hand critical requirements influence implement state store protocol need decide want keys opaque exposed structure opaque means singlelevel map basically realistic option basis implementation eqhash map hash map defined ordering redblack tree btree similar transparent keys hand facilitate treeshaped storage either using prefix key delete range sortedmap structuring store nested tree note exposing tree pathstyle keys closes potential future avenues reparenting stateful components pathstyle tradeoff may wise react exists today another big concern atomicbatch updates store tree path keys atomicbatch remove subtree mentioned state store may still choose iterate deleted state something like decrement refcounts implement cleanup ultimately specified interface variation initgetputdel plus potential extensions interface leaves lifecycle management store pretty selfexplanatory like put value potentially thunk value ignored key already exists subject potential recursive nature discussed given path style keys methods take collections rather operate individual keys enable atomicity batch update efficiencies eg using transient data structure possible variations initgetput like unified whole separate topic rollbackundoetc optionally achieved extending store interface two methods object completely opaque offer immutability object guarantee", "d": "8/2015"}, {"body": "let clarify situation really want avoid often hear arguments goes something like expose b c let user implement however want totally flexible except course b c really one reasonable way implement think alluded brandonbloom one data structure becomes defacto implementation many small ones effectively value provide authors understand inner workings short experimental implementations bypass react logic anyway especially decoupled renderers allowing room experimentation nt necessarily primary goal already would optional data structures state store try solve better language interop app specific perf tradeoffs leaning towards idea nt really matter nt think restrict put values state user space content obviously lot different data structures might useful although immutable serializable would nice", "d": "8/2015"}, {"body": "really one reasonable way implement exactly want nt lot things normal users nt writing would optional data structures state store try solve better language interop yes would enable regular js objects reactjs outofbox immutablejs frameworks built reactjs clojurescript data structures om etc alternatively insist standard immutablejs make conscious decision force frameworks om either translate state values immutablejs gooutside system implement state stores insisting standard would enable global undosnapshotetc would also massive breaking change since people store plain old javascript objects state best could strongly encourage immutablejs disallow storage stateful unserializable objects proposal assumes heterogenous state storage new framework propose forcing immutablejs ignore higherlevel frameworks like om", "d": "8/2015"}, {"body": "nt thought much others use case really want want full snapshotting sure obvious want say nt even think undo strong enough use case usually want undo take special care track state want undo also need perform action server revert change usually fine use userland library stuff course immutable database dumb snapshotting possible many people use immutable dbs full snapshotting something really begs controlling entire state tree lives even child components nt know state actually internal snapshotting really useful debugging even production keep track last n app states something goes wrong serialize send somewhere developer resume watch see happened also useful showing parts site statically example go press cmdshiftk paste plan researching nt much else contribute right understand difficulty though implementing library really bad though works single react tree mounted nt even know going able track multiple mounted trees", "d": "8/2015"}, {"body": "think base data structures must cursorlike simple api get set extend functionality think must something like interface course baobab provided example think separation container cursor navigates data container help achieve modularity immutablecursor nativecursor need container stay", "d": "8/2015"}, {"body": "personally still fan statehoisting pattern pattern almost identical usability perspective difference subtle nt require special support react", "d": "8/2015"}, {"body": "current code looks like attempts append information", "d": "8/2015"}, {"body": "make best attempt including reference owning component specific case nt warning please include code try help better", "d": "8/2015"}, {"body": "hmm get name component surrounding html changed running next sentence message check render method timetableentryform allthough useful information component generates quite lists elements finding bug quite hard suggesting error also add information html surrounding list component generated markup", "d": "8/2015"}, {"body": "edit actually think gone", "d": "8/2015"}, {"body": "springuper afik still works latest done recently", "d": "8/2015"}, {"body": "got grunt test breaking master fresh node modules tried iojs node node", "d": "8/2015"}, {"body": "result using iojs node nt currently build either use node npm different issue", "d": "8/2015"}, {"body": "happy submit pr approved", "d": "8/2015"}, {"body": "already define proptype user land use components nt blocking issue nt working proptypes feature anymore everything moving static analysis tools like flow proptypes way sure accept pr know something actively develop internally", "d": "8/2015"}, {"body": "react version context something says ie comments", "d": "8/2015"}, {"body": "likely able reproduce give us contained ideally reduced example impossible say something wrong code pasted mixins jquery ca nt run code really good chance ca nt figure problem thing jumping initially need tbody around tr might cause would result browser modifying dom usually different error", "d": "8/2015"}, {"body": "nt fix issue please file new one simple repro case use test", "d": "8/2015"}, {"body": "calling component cause rerender force rerender using function sounds like usage question rather bug react use github issues track bugs react going close feel free continue discussion thread take discussions stackoverflow", "d": "8/2015"}, {"body": "prolem setstate rerendered checked info nt render", "d": "8/2015"}, {"body": "trquoccuong take look documentation controlled components likely want handle user checking box set prop", "d": "8/2015"}, {"body": "update new version easy debug everything rerender checked status nt remove set checked prop think need change question answer changed status dont problem rerender input form checked strange", "d": "8/2015"}, {"body": "solution think improvement", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "syranide thanks testing", "d": "8/2015"}, {"body": "understand coming switched consoleerror latest version get full stack trace console put breakpoint warning callsite catch debugger check pause caught exceptions get stopped debugger document better nt throw subtle reason want allow inlining elements compile time example would approximately equivalent would nt throw since want observable behavior match identically dev prod cases nt want ever throw createelement sorry makes debugging little harder", "d": "8/2015"}, {"body": "glad switched thanks explanation", "d": "8/2015"}, {"body": "thanks flagging understand pain also sure actually right thing sebmarkbage want support ways nonjs compile js say scalajs needs fix expect displayname instance property path least resistance future js classes", "d": "8/2015"}, {"body": "intuition classes become utilized wild problem solve self mean time probably make good faith effort support popular compiletojs languages coffee script scalajs etc less popular ones conform one compile outputs bigger ones realistically probably already anyway", "d": "8/2015"}, {"body": "something needs solved scalajs language compatibility level ideally preserve function exports js class notion object properties perhaps something like could work nt know", "d": "8/2015"}, {"body": "sebmarkbage thanks hint scalajs emitting function name added manually everything looks fine", "d": "8/2015"}, {"body": "according facebookflow fixed probably post repo still nt work", "d": "8/2015"}, {"body": "per johnydays flow repository would better place", "d": "8/2015"}, {"body": "might issue command line transforming properly case encourage start using babel instead", "d": "8/2015"}, {"body": "work single child", "d": "8/2015"}, {"body": "browniefed basically", "d": "8/2015"}, {"body": "reactchildrenmap work fine single child please file issue repro case find otherwise", "d": "8/2015"}, {"body": "spicyj code fail see console output", "d": "8/2015"}, {"body": "yordis need call like", "d": "8/2015"}, {"body": "browniefed oh guess reason sorry mistake", "d": "8/2015"}, {"body": "little surprised code nt work sure code app specifically error message seems reference paper component nt see used though maybe part raisedbutton could create simple jsfiddle demonstrates issue investigate trying use github track bugs react questions like better addressed stackoverflow since bug current version react master switched parent context warning gone since appears question rather bug going close tracking purposes feel free continue discussion thread move stackoverflow", "d": "8/2015"}, {"body": "addition context never documented supported please nt file issues asking use", "d": "8/2015"}, {"body": "works today still point okin fact like context materialui use", "d": "8/2015"}, {"body": "nt use either", "d": "8/2015"}, {"body": "workaround would recommend getting manually setting attribute js function attachcustomattributes domnode domnode domnodesetattribute webkitinline class video render return", "d": "8/2015"}, {"body": "see long history custom attributes", "d": "8/2015"}, {"body": "think want file nt react issue", "d": "8/2015"}, {"body": "oops meant must still form entry sorry confusion", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "seems work fine could paste error seeing ps required", "d": "8/2015"}, {"body": "failed load resource server responded status found", "d": "8/2015"}, {"body": "need sourceorigination going go limb assume react requiring file external code incorrectly accesses react internals expects", "d": "8/2015"}, {"body": "thanks got pointed right direction appears issue importing reactgridlayout", "d": "8/2015"}, {"body": "yup react moved files different project sharing deps fbjs long said requiring probably break starting force", "d": "8/2015"}, {"body": "assumes get dom node free whatever inside safediv included outer div showcase necessary js class externalfoobarwrapper componentdidmount dowhateverinside thisrefssafe render return blabla", "d": "8/2015"}, {"body": "syranide correct whatever want within children leaf node react render tree react prohibit using mutative apis long nt interfere nodes rendered react say nt mutate node rendered react would confuse react reconciliation algorithm addmutate children leaf node nt modify children nonleaf trying use github issues track bugs react rather questions reason going close bug feel free continue discussion thread future reference questions like better answered stackoverflow", "d": "8/2015"}, {"body": "version react using moved addons separate projects", "d": "8/2015"}, {"body": "actually using versions react use version create alias karma webpack build react reactaddons entirely separate bundles pre", "d": "8/2015"}, {"body": "really nt entirely separate bundles requires requires requires issue definitely come various packagers nt really anything closing usage questions like probably better luck stack overflow", "d": "8/2015"}, {"body": "yaycmyk set working alias react amp karma stuck get alias working configuration zpao thanks input although given asking even slightly complicated questions", "d": "8/2015"}, {"body": "jonira feel free contact via email evan yaycmykcom nt cluttering react issue tracker", "d": "8/2015"}, {"body": "componentwillmount fires upon mounting loop call component mounted unmounted componentwillreceiveprops trick least best solution know", "d": "8/2015"}, {"body": "problem react post mine correct componentwillreceiveprops fire repetitively attempting done inside render method close issue find much better faster help stack overflow", "d": "8/2015"}, {"body": "see setting property child wo nt trigger child hence makes believe bug report", "d": "8/2015"}, {"body": "actually antipattern nt modifying props consider immutable actually freeze dev information actually want store state use would cloneelements render children get rendered correct style something like obviously lot still missing coffee reactcreateclass distributeheights gt want careful otherwise get stuck infinite render loop used componentdidupdate thissetstate height propsheight reactfinddomnode refstabbedarearefstabs render gt children reactchildrenmap child gt reactcloneelement child style height thisstateheight tabbedarea props children", "d": "8/2015"}, {"body": "thanks helps lot", "d": "8/2015"}, {"body": "cc spicyj added warning", "d": "8/2015"}, {"body": "well previously safari autocompleted assumed would right thing use leaving one following pattern moztransform webkittransform otransform mstransform guess moz odd one effectively dead", "d": "8/2015"}, {"body": "sigh", "d": "8/2015"}, {"body": "please use github issues bug reports react", "d": "8/2015"}, {"body": "locale one intended use cases context dynamically changing occasionally expected supported extent context supported keep mind changing context may somewhat expensive avoid setting every frame whatever yeah known bug might run closing since use github issues track bugs react question rather bug better place questions like would discussreactjsorg stackoverflow", "d": "8/2015"}, {"body": "got thanks help aug pm jim notifications githubcom wrote locale one intended use cases context dynamically changing occasionally expected supported extent context supported keep mind changing context may somewhat expensive avoid setting every frame whatever yeah known bug might run closing since use github issues track bugs react question rather bug better place questions like would discussreactjsorg stackoverflow reply email directly view github", "d": "8/2015"}, {"body": "arrayof oneoftype timeshape placeholdershape done past appeared work correctly time", "d": "8/2015"}, {"body": "making johnydays example legible", "d": "8/2015"}, {"body": "yaycmyk tried exactly js import react react let timeshape placeholdershape timeshape reactproptypesshape type reactproptypesoneof time isrequired date reactproptypesnumberisrequired url reactproptypesstringisrequired position reactproptypesnumberisrequired placeholdershape reactproptypesshape type reactproptypesoneof placeholder isrequired position reactproptypesnumberisrequired export default reactcreateclass proptypes times reactproptypesarrayof reactproptypesoneoftype timeshape placeholdershape isrequired using invalid data eg produces error", "d": "8/2015"}, {"body": "getting error meant", "d": "8/2015"}, {"body": "right works fine must done something wrong original code", "d": "8/2015"}, {"body": "glad worked rocket", "d": "8/2015"}, {"body": "feel free add directly wiki", "d": "8/2015"}, {"body": "render elements dom issues pseudo selectors clientside make possible return right need component map node restriction place continue insert elements nt really fix sight couple issues going close", "d": "8/2015"}, {"body": "little bit clarification since nt initially notice specifically trying keep code path output much possible makes somebody could switch mount client without revisit stylesheets assumptions like dom structure", "d": "8/2015"}, {"body": "ok understand thank quick reply fact webpage generator backend side use css frontend side displays rendered html stored db worked around adding different root element thanks", "d": "8/2015"}, {"body": "zpao could use comment node instead noscript", "d": "8/2015"}, {"body": "iirc issues though nt know top head perhaps chenglou", "d": "8/2015"}, {"body": "eh think comment would accidentally disappear older browsers syranide knew", "d": "8/2015"}, {"body": "behavior nt exist might serve useful alternative", "d": "8/2015"}, {"body": "still support yeah", "d": "8/2015"}, {"body": "nt recall us considering comment nodes sounds like good idea though would also believe syranide says", "d": "8/2015"}, {"body": "chenglou iirc whitespace bug affects comments making disappear issue us iirc also bug adjacent comments merged single comment node sure conditions affect ed knockoutjs perhaps info found comments like text nodes nt appear nt think obstacle us spicyj think mentioned never discussed pr using comments instead spans text nodes though", "d": "8/2015"}, {"body": "syranide trouble finding information comment coalescence bug ie find dom method called could explain adjacent text nodes merged used hood nothing specifically comment nodes", "d": "8/2015"}, {"body": "yaycmyk long time ago memory really fuzzy remember knockoutjs affected comment quirks", "d": "8/2015"}, {"body": "closest find", "d": "8/2015"}, {"body": "webpack bableloader better choice", "d": "8/2015"}, {"body": "questions like better addressed stackoverflow trying keep github issues tracking bugs react bug react going close feel free continue discussion thread move conversation stackoverflow", "d": "8/2015"}, {"body": "bug see docs props used initial render", "d": "8/2015"}, {"body": "mentioned working intended actually want controlled component", "d": "8/2015"}, {"body": "thanks nikolaymatrosov zpao", "d": "8/2015"}, {"body": "use checked property works see", "d": "8/2015"}, {"body": "react pools synthetic events call make sure event nt put back pool see info", "d": "8/2015"}, {"body": "koulmomo thank looking issue able resolve case value user type got lost eventtargetvalue p handleinputchange value lost tried searching issues react looking sure yet issue know suggestions kindly let know", "d": "8/2015"}, {"body": "solved passing eventtargetvalue parameter instead sending event", "d": "8/2015"}, {"body": "got caught work yesterday thanks reminder", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "creating div inside table invalid html browser actually rearrange dom nodes happen tables especially fragile like react always renders node replace could render thead tbody even tr td render single node table keep existing children known limitation react ca nt get rid point need design structure bit differently work sorry", "d": "8/2015"}, {"body": "solves betaversions select version following", "d": "8/2015"}, {"body": "bring good points lack documentation absolutely nt document everything go sometimes get lands master usually file issue close release list things still need documented place discuss quite sure issue right place might want say would excellent though spicy might tell wrong jsfiddle yea nt awesome mostly chosen ship browser builds alphas betas rcs finals especially nt sure package trying split react reactdom unadvertised fiddle uses latest builds master server intended get builds sanctioned location nt yet go wild peerdependency problem think dependency problem solved using pattern syranide mentioned still annoying used pretty sure working though unfortunate publish tag perhaps could also tag least scope opposed picking alphas come", "d": "8/2015"}, {"body": "might interest note make peer dependency problem less problematic making warning instead error", "d": "8/2015"}, {"body": "thanks infos discovered seems quite bunch spammers zpao jsfiddle give always address latest prerelease syranide seems solution works unfurtunatly still force library authors update packagejson least add first beta nice know wiill permissive zpao would nice recommendation library authors put packagejson want permissive lib users test alphabeta tests found using something like lib seems first work great able select automatically also rc stable version client lib declares also btw nt exactly know works seems alphabetarc special names semver prerelease tags see also", "d": "8/2015"}, {"body": "syranide seems solution works unfurtunatly still force library authors update packagejson least add first beta nice know wiill permissive slorber entire point semver dependencies new version dependency needs tested used package nt care specify point sticking version numbers still force install supposedly incompatible versions today well bothersome really poor idea reason claiming compatible future release versions true", "d": "8/2015"}, {"body": "yes syranide absolutly right theory practice library authors always testingupdating immediatly new version react come point simpler lib users test lib alphabeta maybe give feedback lib author afterward want basically set semver range supported stable versions still also allow alphabetarc used users without much pain dealing shrinkwrap", "d": "8/2015"}, {"body": "seems quite bunch spammers uggh let crank spam protection spicyj zpao jsfiddle give always address latest prerelease always latest build master likely ahead latest prerelease always address update original move location builds want basically set semver range supported stable versions still also allow alphabetarc used users without much pain dealing shrinkwrap unfortunately nt really problem realistically solve make suggestion put dependency mentioned prereleases still something library author dependency management npm mentioned tag publishing perhaps work", "d": "8/2015"}, {"body": "zpao try use like said work also tried use packagejson next peerdependency npm warn packagejson stample repository field npm warn packagejson stample license valid spdx license expression npm err linux npm err argv install npm err node npm err npm npm err code epeerinvalid npm err peerinvalid package react satisfy siblings peerdependencies requirements npm err peerinvalid peer atomreact wants react gt next npm err peerinvalid peer reactdatepicker wants react gt next npm err please include following file support request npm err homesebastiendesktopstamplereactnpmdebuglog moving peerdependency libs normal dependency seems work warning sure use tags npm seems npm consistent behavior would expect flexible regarging peerdependency normal dependencies", "d": "8/2015"}, {"body": "notice using app peerdependency libs able get new ideal seems flexible option lib authors want support alphabetarcs given version", "d": "8/2015"}, {"body": "adding would consider tagging alphabeta releases looking diff versions makes bit easier figure changed inclined try early releases otherwise need track specific commits tedious", "d": "8/2015"}, {"body": "simulateclick works dom node passing one javascript click btn add item function", "d": "8/2015"}, {"body": "dmatteo still working even pass dom node", "d": "8/2015"}, {"body": "nt see component logic ca nt tell checking length children click test click actually working attaching click handler button pass spy sinon example see click actually firing", "d": "8/2015"}, {"body": "comments like inappropriate space deleted another made previously please read refrain future warning", "d": "8/2015"}, {"body": "ca nt find information regarding decision reactaddonsbatchedupdates goes away supposed batch setstates nondom event handlers", "d": "8/2015"}, {"body": "right batching part reconciler lives even used nondom event handlers", "d": "8/2015"}, {"body": "zpao gone ahead written reactmount library however running issues injects depends dom importing react looks like importing calls ca nt find way stopping think good idea move package", "d": "8/2015"}, {"body": "plan yes need keep package avoid breaking everyone using however marked deprecated plan get rid dynamic injection completely rely static dependency injection eg overridable module resolution probably see lot changes area next months since goal clarify api official way make renderers", "d": "8/2015"}, {"body": "sebmarkbage okay thanks clarifying time dependant dom would cool injection could called somewhere else react package loaded maybe render function renderers could inject plugins least done statically", "d": "8/2015"}, {"body": "warning nt", "d": "8/2015"}, {"body": "wonder kind message put warning event pooling going documented may strange explain pooling system inside warning", "d": "8/2015"}, {"body": "yes event pooling shouldwill documented feel free submit pr add warning let user know event returned pool invoking methods makes sense docs written add link end warning", "d": "8/2015"}, {"body": "got pr would really appreciate feedback", "d": "8/2015"}, {"body": "repo shows issue currently updating react reactdom", "d": "8/2015"}, {"body": "seem get error message sure somewhere", "d": "8/2015"}, {"body": "nt example repo component using first thought reactredux thing without", "d": "8/2015"}, {"body": "looking coming reacthotloader want make sure date report accessing actually factory said strongly encourage export factories instead convert classes factories consuming component module exporting factory used way jsx words primary js api createelement", "d": "8/2015"}, {"body": "cheers somehow missed follow recommendation well", "d": "8/2015"}, {"body": "probably make unnecessary", "d": "8/2015"}, {"body": "awesome thanks heads", "d": "8/2015"}, {"body": "issue simpler example throws error js describe gt var react var reacttestutils beforeeach gt jestresetmoduleregistry react require react reacttestutils require reacttestutils test gt class extends reactcomponent componentwillmount thissetstate true reacttestutilscreaterenderer render", "d": "8/2015"}, {"body": "way getting around issue currently running", "d": "8/2015"}, {"body": "sorry slow response us fb principal author shallow render feature react core nt main gig swamped product work nt offhand answer tnrich put time calendar look next week jim ben paul chance one happened take care would nt mad", "d": "8/2015"}, {"body": "update end think problem actually went away deduped npm dependencies remove extra react version causing issues error pops let know thanks response fri aug pm scott feeney notifications githubcom wrote sorry slow response us fb principal author shallow render feature react core nt main gig ive swamped product work nt offhand answer tnrich put time calendar look next week jim ben paul chance one happened take care would nt mad reply email directly view github", "d": "8/2015"}, {"body": "hmm still able reproduce issue test case running npm dedupe", "d": "8/2015"}, {"body": "clarify previous comment nt supposed mean issue gone away think seeing separate issue caused multiple react versions misidentified issue hope makes sense", "d": "8/2015"}, {"body": "spicyj ok guess object destructuring variable names make sense though keep mind relevant context making convenient developers sense use variable names prop names way case invalid working destructuring shorthand sugar object destructuring forced use variable names property names use full object destructuring syntax etc", "d": "8/2015"}, {"body": "want work pretty simple write babel transform convert example", "d": "8/2015"}, {"body": "cmmartin sounds like bad idea makes class jsx work however prop still still accessed via result end confused developers using code scratching heads nt contain classes passed", "d": "8/2015"}, {"body": "correct although argue developers know reserved word javascript workaround nt surprise either given browser already works exactly way html attribute corresponding javascript property dom objects", "d": "8/2015"}, {"body": "cmmartin suggestion might make sense dom components would utterly surprising userdefined component write means classname old version jsx transform transformation scrapped way surprising", "d": "8/2015"}, {"body": "agreed explored solution means paste chunks dom written designers high level react components much advocating suggesting possibility similar situations aside special cases think current solution works best", "d": "8/2015"}, {"body": "maybe use instead", "d": "8/2015"}, {"body": "agreed beta version could kind parameter enforce whitelist proptypes future version could become required depending community acceptance", "d": "8/2015"}, {"body": "definitively kind property initialization whitelisting property owned exactly one component components passing property kind protected channel", "d": "8/2015"}, {"body": "developed higher order component", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "hey get right using nt seem work way workaround could nt succeed using fire way", "d": "8/2015"}, {"body": "mdibaiee prerelease nt work guess final version wo nt work neither works react everything alone point browser takes different browsers produce different markup", "d": "8/2015"}, {"body": "nt work either hacking using way mention readme react nt support firefox", "d": "8/2015"}, {"body": "mdibaiee maybe missunderstanding question using react renders firefox using alpha instead beta release", "d": "8/2015"}, {"body": "using module alphas npm output", "d": "8/2015"}, {"body": "mdibaiee ah might help", "d": "8/2015"}, {"body": "jimfb oh nt aware thanks pointing", "d": "8/2015"}, {"body": "okay using babel right ca nt find way use beta features transformer ideas", "d": "8/2015"}, {"body": "mdibaiee great question ask babel support group clear removed optimizations bury mentions site", "d": "8/2015"}, {"body": "sure react rendering tag incorrectly related babel", "d": "8/2015"}, {"body": "sebmck original issue last question thread specifically using babel", "d": "8/2015"}, {"body": "zpao whoop sorry mdibaiee came chat pointing issue wanting know install beta version babel would fix issue", "d": "8/2015"}, {"body": "seems firefox problem using xhtml instead html rules fact developing firefox addon sorry inconvenience", "d": "8/2015"}, {"body": "react inbuilt functionality hideshow component boolean variable like js mean instead writing thispropsishidden course define prop component manually create new class inherits reactcomponent functionality already present common situation", "d": "8/2015"}, {"body": "writing simpler easy reduces number magic props need remember", "d": "8/2015"}, {"body": "yes visibilityinvisibility closely related rendering process read render element render using props form written would natural htmlish look btw react already overrides almost standart events like onclick instead onclick remembering one standart usefull prop problem", "d": "8/2015"}, {"body": "think composition point view think makes perfect sense use kind explicit conditional rendering father component since based props child component rendered using magic props hurt readability usability yet one magic thing keep mind hate magic", "d": "8/2015"}, {"body": "look would involved implementing internals moved around bit slightly fiddly overload take optional boolean second argument indicate caller thinks warning repeat previous warning lib update relevant callsites pass boolean dedupe logic update eslint rule checks args warning allow new signature possibly provide supported way inject custom rather somehow modify something open accepting zpao seems related", "d": "8/2015"}, {"body": "reactproptypesstringnotnulldefaultvalue default seems little big weird maybe defaultprops could move flow direction much intuitive", "d": "8/2015"}, {"body": "pretty sure correct behavior neither event fire target disabled example would want fire disabled element disabled button think payment button called changing hover state sets state disabled meanwhile user moves mouse away button button state changed back enabled button state incorrect currently state", "d": "8/2015"}, {"body": "jimfb exact problem find solution", "d": "8/2015"}, {"body": "problem using old version reactjs using grab dom element function part new syntax introduced react beta version react working still relies function", "d": "8/2015"}, {"body": "saemchou actually already uses different sense using like", "d": "8/2015"}, {"body": "hi dmatteo thank joining still lot learn react understood introduced last paragraph blog post also getting error react replicated example test using npm dependency management browserify bundle everything could missing something edit got error message started using alongside deal dom elements described", "d": "8/2015"}, {"body": "hard know without seeing code best guess trying access nt exist moved maybe easier start moving implicit separation dom functions", "d": "8/2015"}, {"body": "dmatteo yep got caught separation dom functions managed get working try using still got error mentioned however found still using instead correct way corrected everything working publish code next time realise would save lot time", "d": "8/2015"}, {"body": "usually helps glad figured though", "d": "8/2015"}, {"body": "nt closed", "d": "8/2015"}, {"body": "yes thanks reminder", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "seeing behavior example running reactheatpack js import react react class holder extends reactcomponent render return class parent extends reactcomponent static childcontexttypes value reactproptypesnumberisrequired constructor props context super props context getchildcontext const value thisstate return value componentdidmount thissetstate value render return thispropschildren class child extends reactcomponent static contexttypes value reactproptypesnumberisrequired render return thiscontextvalue export default end instead expected however directly render instead see expected result get work correctly render", "d": "8/2015"}, {"body": "think fixes happened would good doublecheck", "d": "8/2015"}, {"body": "oops nt realize prs indeed works expected current commit master thank", "d": "8/2015"}, {"body": "massive pain swapping custom css preprocessor generates hashed classnames w radium inline hundreds places across large app updating one one painful", "d": "8/2015"}, {"body": "message master context part release wo nt backporting", "d": "8/2015"}, {"body": "need kind nesting could avoid error", "d": "8/2015"}, {"body": "mdcsfk kind nesting trigger error", "d": "8/2015"}, {"body": "jimfb yes ca nt two nested anchor tags html mdcsfk need restructure markup ca nt kind nesting html whether using react usually want change one links actual link add click handler", "d": "8/2015"}, {"body": "oh right dom rewrite anchors right", "d": "8/2015"}, {"body": "probably bad practice call handlers inspect state directly though sebmarkbage state text input seletedindex input would set state later submit ex button clicked however intentionally set related rendered output case think better way inspecting state want test", "d": "8/2015"}, {"body": "moment way test things like componentdidmount componentdidupdate via shallow rendering exposing instance would provide way", "d": "8/2015"}, {"body": "think nt problem somebody else verify", "d": "8/2015"}, {"body": "may fixed sure actually rerenders though", "d": "8/2015"}, {"body": "tried reproduces way sh node e consolelog processversions node uv zlib modules openssl js var react require react var testutils reactversionsubstring testutils require reactaddons addonstestutils else testutils require reactaddonstestutils processenvdocument globaldocument var renderer testutilscreaterenderer var node reactcreateclass getinitialstate function return foo bar clicked function thissetstate foo baz render function return reactcreateelement div onclick thisclicked thisstatefoo rendererrender reactcreateelement node renderergetrenderoutput propsonclick consolelog renderergetrenderoutput propschildren node samplejs return documentbody referenceerror document defined getactiveelement reactreconciletransactionreactinputselectiongetselectioninformation reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform reactupdatesflushtransactionmixinperform reactupdatesflushtransactionassignperform objectflushbatchedupdates objectwrapper flushbatchedupdates reactdefaultbatchingstrategytransactionmixincloseall reactdefaultbatchingstrategytransactionmixinperform document hack node samplejs baz node samplejs return documentbody referenceerror document defined getactiveelement reactreconciletransactionreactinputselectiongetselectioninformation reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform reactupdatesflushtransactionmixinperform reactupdatesflushtransactionassignperform objectflushbatchedupdates objectwrapper flushbatchedupdates reactdefaultbatchingstrategytransactionmixincloseall reactdefaultbatchingstrategytransactionmixinperform document hack node samplejs baz git tags series grep around looks like commit present", "d": "8/2015"}, {"body": "closing broader discussion", "d": "8/2015"}, {"body": "hmm nt see official documentation anywhere kind important know zpao thanks valuable info totally saved pulling hair", "d": "8/2015"}, {"body": "ffxsam pooling behavior documented recently", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "yes idea render returns promise reactelement still able handle loadingerror states", "d": "8/2015"}, {"body": "update basic problem seems object private could exposed publicly users could optin resetting", "d": "8/2015"}, {"body": "yep dantman technique sane way found handle whole close click away click outside component ux", "d": "8/2015"}, {"body": "outputted object testing like react puts key value without keying think either spans like keyed automatically error specific", "d": "8/2015"}, {"body": "tryspace specific preferably code example", "d": "8/2015"}, {"body": "spicyj sorry forgot indent put example code around coffeescript", "d": "8/2015"}, {"body": "also seeing using width zero componentdidmount using react line returning zero", "d": "8/2015"}, {"body": "problem case hidden parent container display none attempting fade display none makes widths zero trying different approach", "d": "8/2015"}, {"body": "also broken chrome per", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "bugging well understand commit fixed merged master released already use installing version npm least tried update helped guess ticket could closed", "d": "8/2015"}, {"body": "confuse commit linked nt react proper kinda bad user libs hack around imo either deprecation warnings users move logic adjust work expected", "d": "8/2015"}, {"body": "ericclemmons yes still react issue", "d": "8/2015"}, {"body": "ah ericclemmons right nt notice confused upgraded react saw comment seemed fix problem", "d": "8/2015"}, {"body": "hm possible fixed", "d": "8/2015"}, {"body": "good find looks like make next release", "d": "8/2015"}, {"body": "also experiencing strange behavior input converting class extends reactcomponent tried binding handler functions constructor well method never even called worked fine using classes debugging day find root problem also noticed mouse click events longer happening scenarios well converting classes mainly focused onchange debugging far luck errors thrown warnings handler functions never even called", "d": "8/2015"}, {"body": "seems natural feature exists react fully support", "d": "8/2015"}, {"body": "plus sugar better providing wrapper component works way want", "d": "8/2015"}, {"body": "syranide noted current plan pull linking core probably throw addon package assuming something find useful encourage publish npm module git repository provides functionality wrapper component people use since something plan supporting core going go ahead close issue", "d": "8/2015"}, {"body": "issue using ie", "d": "8/2015"}, {"body": "issue jmca adding placeholder textarea value onchange event fired", "d": "8/2015"}, {"body": "hey spicyj kinda late would possible get name invalid component let say try use wrong would possible say failing test would help finding fixing errors", "d": "8/2015"}, {"body": "nt possible without changing transform look stack trace see error", "d": "8/2015"}, {"body": "issue fixed components using seeing use", "d": "8/2015"}, {"body": "setstate merges using nonplain object nt supported put whatever object want inner state key thisstatedata thisstatemap etc", "d": "8/2015"}, {"body": "similar glittershark prefer using state found useful using available client side running isomorphic applications javascript class extends component constructor props super props thisstate mounted false componentdidmount thissetstate mounted true render var mounted thisstate mounted", "d": "8/2015"}, {"body": "bug", "d": "8/2015"}, {"body": "hi progress issue still actual", "d": "8/2015"}, {"body": "got use case involving font awesome would support getting fixed icons look like total shite without font smoothing", "d": "8/2015"}, {"body": "lourd add style core sheet", "d": "8/2015"}, {"body": "yep could totally fix adding class div like font awesome recommends walking wild side project experimenting styling javascript bomb", "d": "8/2015"}, {"body": "lourd nothing get fixed firefox supports correct property", "d": "8/2015"}, {"body": "ah bad also realized coming radium varies based support browser facepalm thanks yall", "d": "8/2015"}, {"body": "encountered problem well found dirty workaround wrap work use portal mixin renders react component different dom element raised another problem rendering new component directly unmounting first one case second component wo nt show fixed storing unique key component state dom element calling keys works love less dirty native solution", "d": "8/2015"}, {"body": "cc jimfb", "d": "8/2015"}, {"body": "clarify functions components optimization thing jsx style example would use components like button width checkbox checked true", "d": "8/2015"}, {"body": "rchanou allows performance optimizations core since nt need keeptrack instances also means less boilerplatetyping since need function instead fullblown class would still able use component using jsx like component would still course could use alternate syntax liked better whatever reason creating factory", "d": "8/2015"}, {"body": "jimfb yeah want use jsx realized probably need use babel react options webpack babelloader options right currently give sort thanks", "d": "8/2015"}, {"body": "also seeing unfired onchange events real insights either", "d": "8/2015"}, {"body": "blainekasten kendagriff manage fix problem following code js var mycomponent reactcreateclass changed function consolelog changed render function return b c reactrender documentqueryselector body nt get console testing version", "d": "8/2015"}, {"body": "thanks checking progress ca nt say using special manner works flawlessly react", "d": "8/2015"}, {"body": "record beginning thought may problem react later today found one polyfills causes issue polyfill remove everything gets back normal", "d": "8/2015"}, {"body": "could definitely problem investigate", "d": "8/2015"}, {"body": "note everything touches prototypes may lead similar issues", "d": "8/2015"}, {"body": "yeah use feature test addeventlistener common polyfills set old ie", "d": "8/2015"}, {"body": "first tried one however broke react event handling guess overwriting much original js methods tried official polyfill mdn nt work either end code causing error transformed polyfill removed completely", "d": "8/2015"}, {"body": "blainekasten fiddle works mode still repro problem", "d": "8/2015"}, {"body": "yes still reproduced native", "d": "8/2015"}, {"body": "hey guys ideas improve rendertostaticmarkup method always going nt see could problem slow cpu bound method makes express requests enqueued super slow", "d": "8/2015"}, {"body": "clear react rendering pages limitation team considering moving marko react codebase becomes big move anyone lives palo alto happy give feedback person", "d": "8/2015"}, {"body": "mufumbo nt easy wins suggest right sorry planning spend time working performance next six months hope improve sounds like react might slow server rendering right", "d": "8/2015"}, {"body": "spicyj quick pointers look source code want try optimization low hanging fruit kinda stuff react unviable serverside rendering accumulates cpu bound requests makes node huge delay example every request takes load weird nt matter cpu speed threadsleep code means next request take next next reqs become quickly delay would highly advise putting large warning react homepage saying unviable serverside rendering might solution months love react would ensure reputation project kept intact people working real projects demo tutorials also make sure people refer back warning write blog posts using react isomorphic solution", "d": "8/2015"}, {"body": "mufumbo spicyj said ready give actionable advice ways make rendering faster something actively working literally spent last two weeks pouring flame graphs idea vacation lowest hanging fruit nt keep internal state generating initial mount images currently side effects idempotent state created unnecessary rendering static markup tracking state waste cpu cycles nt generate string streaming output good sending partial renders also good globally measurably cheaper returning string flatten call tree paying approximately one thousandth millisecond every function call call thousands times milliseconds start add injected plugins hurting performance turn sanity checks securitysanitization protection keep safe confident code turning measurable performance benefits turn checksumming protection ready take guards save cpu cycles realistically none actionable advice changes either require large code refactors extraordinarily complex work progress require disabling features believe critical practicality react continue work continue post github useful information disseminate mean time hold tight know everything make react even faster", "d": "8/2015"}, {"body": "thanks lot jimfb spicyj love work react try hold try tips feedback ux performance priority us unfortunately current architecture unreliable users ca nt predict reqsec certain server would kind share people serving react requests serverside rendering ca nt see reliable served simple nodejs express config people making sure server handling one request time", "d": "8/2015"}, {"body": "jimfb rendertostaticmarkup also avoids checksumming excludes checksum data html also ca nt seem find anything disable sanity checks current docs suspect option yet thanks", "d": "8/2015"}, {"body": "mufumbo using package directly npm unfortunate perf problem due checked see require instead development better warnings may vastly improved perf one way make file like let know helps", "d": "8/2015"}, {"body": "spicyj yes preliminary tests seems decreased mean render time please let know ideas like trying everything unblock event loop thanks lot", "d": "8/2015"}, {"body": "probably easy win suggest sorry", "d": "8/2015"}, {"body": "spicyj test using reactmin performance increase good new still far reqseg tldr one current user ab request current user change requests per second sec time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request reactmin requests per second sec time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request current users ab request current users requests per second sec time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request changed time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request current users ab request current users requests per second sec time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request changed requests per second sec time per request ms time per request ms transfer rate kbytessec received connection times ms min mean sd median max connect processing waiting total percentage requests served within certain time ms longest request", "d": "8/2015"}, {"body": "btw netflix changes render pipeline react decrease render time spicyj contact netflix could changeimprovement server render engine", "d": "8/2015"}, {"body": "hey guys using renderstring instead rendertostaticmarkup nt improve clientside performance taking full second moment react starts parsing completion ideas improve comes kinds bad user experience like blocking scroll phone heat", "d": "8/2015"}, {"body": "general solution blocking concurrent requests break app two applications web server rendering service communicate via message queues nonblocking fair test run server least cores try different numbers worker processes eg web server core prerun tests several times warm jit", "d": "8/2015"}, {"body": "brigand render done node would nt move problem service processing queue", "d": "8/2015"}, {"body": "mufumbo changes problem blocking web server event loop well cpu parallelizes work multiple processes use finite pool processes sure way go worst case develop backlog means need servers event loop nt blocked send necessary messages cause autoscaling kick maybe wrong mainly frontend developer edit clarify saying performance fine suggesting way performance cripple web servers", "d": "8/2015"}, {"body": "brigand use node clusters node cluster nt pay price data commute web server queue fine scale since web server stateless one solution break page personalized nonpersonalized parts cache rendered html nonpersonalized parts send client right away plus data personalized parts client show nonpersonalized parts render personalized part soon finish receive data need give servers little bit breath course requirements product take consideration silver bullet", "d": "8/2015"}, {"body": "think great discussion wandered way topic streaming markup encourage use alternate venue discussion make sure people watching repo maintain better signal noise ratio set precisely discussions like", "d": "8/2015"}, {"body": "jimfb help us figure disable checksum ca nt find anywhere documentation also sanity checks", "d": "8/2015"}, {"body": "please continue discussion instead", "d": "8/2015"}, {"body": "happened", "d": "8/2015"}, {"body": "anything happening", "d": "8/2015"}, {"body": "currently", "d": "8/2015"}, {"body": "reacttapeventplugin also work desktop ie one solution rule em", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "wondering updates", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "nhagen actually tried use animatecss answering question even latest commit alexpien work animatecss requires multiple classnames like thanks zpao jsfiddle latest build currently able make sandbox work think supported well currently flexible enough support css animation frameworks also using enter enter leave leave parameters think keep simple use enter leave without active suffix mean use remember currently work give pseudo outputs end something like rather", "d": "8/2015"}, {"body": "dom reflow happen didupdate measure heights repaint happens didupdate effect based height without flicker", "d": "8/2015"}, {"body": "frustrating editable cells element tabindex prop set focused removing tabindex nt remove dom sets remove tab order still allows focus mouse way remove tabindex attribute set", "d": "8/2015"}, {"body": "used possibly anyway case hard say without info anyway movement", "d": "8/2015"}, {"body": "yes thank use", "d": "8/2015"}, {"body": "never used context passing dynamic values unchanging references see toy examples anyone used passing dynamic values production apps often find realworld use cases enlightening instance anyone passing keyvalue pairs directly passing unchanging reference object components get values observe", "d": "8/2015"}, {"body": "interested one time implementing sort bubbleup event dispatching context forget exactly idea allow parents intercept add context events coming children children would nt knowledge fit global context", "d": "8/2015"}, {"body": "repros outside reactbootstrap form gets swapped submit triggers", "d": "8/2015"}, {"body": "aaronjensen chance post simple repro case us", "d": "8/2015"}, {"body": "spicyj work", "d": "8/2015"}, {"body": "fyi initially reported part react core nothing todo reactbootstrap believe issue still", "d": "8/2015"}, {"body": "yes terribly difficult us debug without repro case original issue also nt provide", "d": "8/2015"}, {"body": "spicyj repro currently depends redux reactrouter ripped everything else app minimum could get wo starting reimplement redux reactrouter hope helpful", "d": "8/2015"}, {"body": "error happen line removed", "d": "8/2015"}, {"body": "spicyj know nt criticising anything updating issue honest nt looked issue months still use temp solution mentioned revisit week", "d": "8/2015"}, {"body": "aaronjensen thanks repro case try look worries", "d": "8/2015"}, {"body": "okay tracked root cause updates parent child component enqueued batch parent updating another update child enqueued end reconciling child twice breaks assumptions interleaves lifecycle methods incorrectly master fix batchedupdates reference code js var parent reactcreateclass getchild function return thisrefschild render function return var false var child reactcreateclass getinitialstate function return updated false componentwillupdate function true thissetstate updated true componentdidupdate function consolelog child update render function consolelog child render return var parent reactrender documentgetelementbyid container var child parentgetchild consolelog start batch reactaddonsbatchedupdates function parentforceupdate childforceupdate consolelog end batch produces output render update lines interleaved", "d": "8/2015"}, {"body": "thought warning setstate componentwillupdate guess", "d": "8/2015"}, {"body": "quick update thought give go straight away ran uncaught error invariant violation component keys getdomnode handlechange props context state refs reactinternalinstance contains method mounted dom nt happen version currently resting", "d": "8/2015"}, {"body": "message means invariant violation getdomnode component must mounted dom node improved message make bit clearer would nt expect issue fixed make specific attempt fix time see stuff happening issue", "d": "8/2015"}, {"body": "fixed hopefully", "d": "8/2015"}, {"body": "helps next person googling yet another sign problem", "d": "8/2015"}, {"body": "closed think", "d": "8/2015"}, {"body": "believe still broken using cloneelement instead clonewithprops", "d": "8/2015"}, {"body": "got thought wrapper place already", "d": "8/2015"}, {"body": "preventdefault event generated simulate wo nt prevent focus", "d": "8/2015"}, {"body": "status react", "d": "8/2015"}, {"body": "edit going leave open xmlish features mentioned acubed core bug closing tags boolean attributes done dcousens work let us know run issues", "d": "8/2015"}, {"body": "patch mostly makes page break parsing html xml mode still suitable arbitrary xml like svg atom docbook opendocument huge variety domainspecific vocabularies react describing dom document fragment texthtml xml exi even certain subset haml jade serializations dom document right react limited describing subset also rendered texthtml design limitation supporting others dom elements xmlns eg console right get documentfirstelementchildnamespaceuri lt adding support elements arbitrary namespaces really need eg rendered xml mode would output adding every element every time namespace changes becomes repetitive standard ways declare calculate namespace prefix", "d": "8/2015"}, {"body": "closing classes", "d": "8/2015"}, {"body": "diagram real posting issue would better nothing", "d": "8/2015"}, {"body": "quick attempt case provides inspiration", "d": "8/2015"}, {"body": "published quick prop type helper thanks jasonkuhrt glenjamin irc everyone else thread edit actually nt work might work ca nt get past", "d": "8/2015"}, {"body": "run need feature everyday", "d": "8/2015"}, {"body": "many small components ie design modularly end wrap kinds things divs nt might conflating think relates issue", "d": "8/2015"}, {"body": "wrap table rows elements easy wrap may desirable multiple layers wrapping multiple layers", "d": "8/2015"}, {"body": "scenario called trying component provides elements without become renderer entirely", "d": "8/2015"}, {"body": "added note top issue please read commenting", "d": "8/2015"}, {"body": "shame bug nt resolved yet recently implemented behavior search bar using discover later work firefox safari experience works correctly chrome always returns null firefox safari usecase telling event cause component unmounted component onclick handler would chance run circumvented using timeout inside first eventhandler component would unmounted onclick handler chance run solution works negligible sideeffects however far elegant would great compatible firefox chrome bonus points ends working ie maybe already", "d": "8/2015"}, {"body": "ryanseddon solution works looking create multiple top level entry points basically multiple reactrender use case pastiche site sections written react another legacy framework wanted section modularly responsible reactrender could removed swapped around far working well even event system", "d": "8/2015"}, {"body": "maybe thick seems like ryanseddon solution requires using requirejs nonproduction nonminified version react load react go poking bowels even possible given many us experiencing pain caused relative difficulty definitive fix would pr exposing way set id attribute name welcome something along lines", "d": "8/2015"}, {"body": "dvdplm", "d": "8/2015"}, {"body": "added two prs one current tip make idattributename configurable must called rendering occurs course pr pr master", "d": "8/2015"}, {"body": "major vendors starting package embeddable widgets built react example encountered error using zendesk embeddable widget react packaging dom interfering react packaging dom via event handler helps completely valid usecase package distro react building browser extension embeddable widget imho adoption react though easy different vendors play nice site without monkeypatching custom build", "d": "8/2015"}, {"body": "dlopuch similar situation agree wholeheartedly", "d": "8/2015"}, {"body": "understand problem dom trees nested within completely separate", "d": "8/2015"}, {"body": "separate embeddable widget case things often ask put script head bootstraps app injects new div body idattributename workaround fixed easier docs telling embeddable extension developers howwhy use bundling copy react", "d": "8/2015"}, {"body": "top head sure causes problems know error triggered response event handler something else", "d": "8/2015"}, {"body": "happens response mouseover two react site embedded widget react react two elements dom one created embedded widget react one created react full stacktrace error happens mouseover embedded widget element function bit weird react context resolves element node react one mousing matters react node mousing iframe hope helps", "d": "8/2015"}, {"body": "dlopuch small world tech lead zendesk widget created test case reproducing error definitely seems related fact widget creates iframe shares host page love use exposed api namespace data attribute react uses", "d": "8/2015"}, {"body": "use important set dynamic background color element still show printing without important background printed edit since needed used setproperty componentdidmount amp componentdidupdate", "d": "8/2015"}, {"body": "imo supported react place dogmatic people author styles", "d": "8/2015"}, {"body": "longer post lost oh summary would expensive check every value supporting nt awesome even get good option unlikely support nt want go csstext path nt really dogma would say perf fact faced number limitations working styles css could perhaps change data structure style would backwards compatible value nt object exact thing would allow us start using api downside obviously objects nt string parsing", "d": "8/2015"}, {"body": "zpao seems reasonable perf obviously important factor consider appreciate creative thinking solution would least allow developer support need even little effort", "d": "8/2015"}, {"body": "know react component using unknown attribute trouble finding faulty componentelement displaying warning", "d": "8/2015"}, {"body": "rodryqunitero message means attribute unknown use htmlfor instead", "d": "8/2015"}, {"body": "prefer tried true search files since specific case could ide probably also find project feature", "d": "8/2015"}, {"body": "thanks guys tips", "d": "8/2015"}, {"body": "maybe equal clearly api design genius", "d": "8/2015"}, {"body": "one checkbox checked one checkbox checked put indeterminate state click two checkboxes opposite checked states browsers listed means still two distinct bits information least browser implementation", "d": "8/2015"}, {"body": "ooh good find", "d": "8/2015"}, {"body": "want voice support behavior surprising find isrequired prop validator particular throws console warning makes difficult test one thing", "d": "8/2015"}, {"body": "cappslock remember tests correctly version better regarding props validation sure think throw errors least log error instead warning", "d": "8/2015"}, {"body": "hours research confirming server side rendering impossible unless feed everything top possible short term solutions prefill store make server side loading synchronous b feed everything top one data input async fetching one data object wont work unless already know render structure look like need render order know various collectionsmodelsapi dependencies also fetching async client sync server without two different apis b basically problem people make little dependency jsons go routes short term solutions wait react supported solution user land forks plugins", "d": "8/2015"}, {"body": "nickstefan nt understand problem use flux fluxlike container alt redux flummox etc stores nt singletons define static methods like route handlers return promises server match route components grab wait complete rendering prefill flux redux store instance note store instance bound particular request requests stay isolated promises ready render synchronously store instance prefilled good tutorial redux describing approach", "d": "8/2015"}, {"body": "gaearon apologize confused thank response list sounds like correct assuming solution server data dependency ever define data needs root component static methods article linked data dependencies defined root much easier prefill stores etc good flux practice nt potentially limiting add small component bottom view tree needs different data need go edit data dependencies root asking way deeply nested components define asynchronous data needs add needs root component nt coupling root one sub components needs", "d": "8/2015"}, {"body": "nickstefan reactrouting example async data fetching looks like js import router reactroutinglibrouter import http core const router new router gt products async gt products id async state gt const data await return data amp amp await routerdispatch component gt reactrender component documentbody", "d": "8/2015"}, {"body": "solutions work data prefetching bound router problem cases makes sense url defines page therefore data needed general limitation never able create standalone reusable component e twitter stream comments calendar would handle everything insert component hierarchy way come across makes possible reactasync pretty much hack suppose react components simply intended used way still views controllerviews probably completely new library emerge foundation react dream one day able write complete cms using react something like wordpress drupal modx instead htmlphp snippets composing website react components", "d": "8/2015"}, {"body": "nickstefan list sounds like correct assuming solution server data dependency ever define data needs root component static methods article linked data dependencies defined root much easier prefill stores etc add needs root component nt coupling root one sub components needs exactly route handler level may many route handlers app moreover libraries like react router support nested route handlers means nested route handler define dependency router match contain array matched hierarchical route handlers make sense granular every component declare dependency found cases limiting data fetching route handlers top nested ones want pure components accept data via nt even know fetched makes sense ca nt request every component declare dependency approach nt practical unless sort request batching solution imagine declares needs api call render list want wait requests kind data fetching requirement granularity works request batching solution suits relay exactly need special backend", "d": "8/2015"}, {"body": "nickstefan nt currently support percomponent async fetching like add issue tracks progress though one actively working take major restructuring", "d": "8/2015"}, {"body": "gaearon every component declare dependency approach nt practical unless sort request batching solution thought agree seeking nt actually practical originally thought even example would okay team discipline ie make request peoplescalable merely convention probably best enforce dependencies root router even relay sort forces declare dependencies root three different containers relaycontainer relayrootcontainer relayrouter etc kind proves point way essentially hoist dependency declarations tree", "d": "8/2015"}, {"body": "marker refx refy orient", "d": "8/2015"}, {"body": "attributes text rotate dominantbaseline", "d": "8/2015"}, {"body": "addon", "d": "8/2015"}, {"body": "developed higher order component control whether html properties allowed using allowhtmlprops option uses list standard html attributes including dom properties handles dynamic properties", "d": "8/2015"}, {"body": "fwiw anyone stumbling upon issue searching solution simplest assuming probably", "d": "8/2015"}, {"body": "got issue creating widget system react solution check windowreact existed use reactrender reactunmountcomponentatnode windowreact exists", "d": "8/2015"}, {"body": "ever automatic autobinding", "d": "8/2015"}, {"body": "unlikely probably recommend using esfuture syntax feature lands", "d": "8/2015"}, {"body": "hopefully come something nice often whenever passed functions around wished autobound even outside react code understand react devs nt think business designing class system going start using entire view framework much cognitive burden learn class system certainly less cognitive burden keeping track churn", "d": "8/2015"}, {"body": "going go think", "d": "8/2015"}, {"body": "similar problem transitiongroup css using callbacks wondering one hope fix start transitiongroup empty component rerenders adds components triggers componentwillenter componentdidenter good action component rerenders puts components transitiongroup triggers times componentwillleave detach perform transition calling callback straight away detaches one component rerender components detaches one componentwillleave use settimeout works", "d": "8/2015"}, {"body": "oozaa separate issue also fixed", "d": "8/2015"}, {"body": "spicyj link issuefix work properly even components removed done entering added back done leaving", "d": "8/2015"}, {"body": "oozaa nothing else works feel free try robusttransitiongroup", "d": "8/2015"}, {"body": "used focus blur window disable animation window focused onwindowblur function clearinterval thissliderinterval onwindowfocus function thisactivateautoslide", "d": "8/2015"}, {"body": "plans", "d": "8/2015"}, {"body": "still investigated project component uses scrollable div roughly direct child nests maybe children putting translatez force composition layer seems able boost scroll performance fps soon document wheel event attached performance crippled even component relies wheel events dismounted wheel listener document would live reducing scroll performance around fps", "d": "8/2015"}, {"body": "work ie", "d": "8/2015"}, {"body": "pointer events firefox nightly", "d": "8/2015"}, {"body": "somebody please solve need coffee jade", "d": "8/2015"}, {"body": "react strips animate tag ideas overcome", "d": "8/2015"}, {"body": "component lifecycle method", "d": "8/2015"}, {"body": "also makes impossible use react generate scenes like rendered using later natively browser attributes stripped rendered content like even inline node", "d": "8/2015"}, {"title": "rfc drop lifecyle directive config", "body": "current way subscribing lc hooks kind messy dart key exists use source truth configuration gets generated transformer implemented interfaces fine nontransformed code value priority implemented interfaces counterintuitive might lead different behavior vs transformed code js value priority structural type checking could cause unexpected behavior value updated lc hooks added removed proposal remove config option dart would implement desired interfaces js would name methods lc hooks pass structural type check ts preferred way would implement interfaces well js way would work equally well js dart amp ts preferred class mydirective implements onchanges onchanges amp ts nonpreferred class mydirective onchanges pb imagine related yjbanov wants remove interfaces generated metadata dart white list interfaces want include like collect thoughts changes wdyt mhevery yjbanov vsavkin kegluneq effort would probably around day", "num": "3924", "d": "8/2015"}, {"title": "query redesign", "body": "proposal redesign query api allows directive find directives structurally children directive query children element placed used query view used viewquery using xxxchild object received desired element null found using xxxchildren object observablearray queries recalculated structural change occurs ngif ngfor xxxchild set new value xxxchildren notify via observable api results injectable rather set declared properties framework ex javascript component view class listcomponent contentchild itemdirective itemdirective itemdirective component view class viewchildren itemdirective itemdirectives observablearray children directives set following callbacks fired query mechanisms go component subviews support configurable visibility follows content descendants considered direct children querying directive considered default visibility configuration queries always skip element querying directive lives similar implementation x implement lifecycle hooks x hook query update calls new hooks x add integration test view query var bindings x remove query forms api x using viewelementinjectors internally instead injchildren tree closes x add x use rxnext observablearray x move declaration component field using setters x implement contentchild viewchild x remove self visibility query optimize static single child x implement dynamic strategy queryrefs cc mhevery vsavkin", "num": "3922", "d": "8/2015"}, {"title": "add ability update routeparams without reloading component", "body": "asking around gitter last couple days really getting much response thought would post something assumption good way already exists fair change case certainly could nt find anything brief digging source trying set linking particular projects list projects personal website creating got linking particular project working fine ideally url update user aka scrolled could copy url know would take back project looking far tell good way obviously manually edit url would make code wrote much less reusable especially relevant given even thinking making directive good way moment think makes sense add something like routeparamsset param string allow user update params without calling routernavigate alternatively might better add method router update current instruction without calling routeroutletactivate indeed already way could probably implement access stringifyinstruction nt seem exist finished distribution locationgo nt complicated", "num": "3921", "d": "8/2015"}, {"title": "add integration tests viewquery var bindings", "body": "test contentquery var bindings integration specs", "num": "3920", "d": "8/2015"}, {"title": "form controls require", "body": "see working issue missing missing around optional", "num": "3919", "d": "8/2015"}, {"title": "canonical list benchmarks", "body": "canonical list benchmarks would also like know ones supported js js seems like way find go benchmark source file see benchmarks declares tbosch", "num": "3918", "d": "8/2015"}, {"title": "datepipe needs review potentially breaking changes", "body": "date pipe quite limited considering implementation angular review code decided breaking changes might need happen especially dependency internationalization apis rely spec polyfill default formats formatting flags aligned spec angular compare feature set angular eg iso string input currently supported filter stateful cause perf issues plan switching locales", "num": "3917", "d": "8/2015"}, {"title": "built pipes exported via", "body": "currently way get hold importing vsavkin intentional", "num": "3915", "d": "8/2015"}, {"title": "make pipes pure functions default option opt", "body": "currently pipes statefull recompute output change detection pass quickly become perf bottlenecks within repeaters large apps considering pipes pure functions default allow us cache reuse output values input nt change share single pipe instance across whole app change made angular gave us huge perf boost especially date filterpipe commonly used large apps", "num": "3914", "d": "8/2015"}, {"title": "nt return thing", "body": "factory like bellow appfactory awesomeservice function return getusers function return return responsedata controller var user awesomeservicegetusers consolelog user console display state object success nt return thing console result otherwise must display result return responsedata", "num": "3910", "d": "8/2015"}, {"title": "http spends much time chrome", "body": "backend frontend javascript chrome firefox ie wireshark", "num": "3908", "d": "8/2015"}, {"title": "misleading filter notarray error", "body": "made simple error placing track instruction end put error raised mistake filter notarray misleading expected array received suggestions create new error track wrong place trackbyisnotlast check notarray got wrongly flagged despite object passed alleged value passed angularjs", "num": "3906", "d": "8/2015"}, {"title": "import project npm client", "body": "tried import library client npm miserably failed need responsive layout system somebody tried know", "num": "3904", "d": "8/2015"}, {"title": "fix runtime throws using querylist type annotation", "body": "error came traceur ts code problem get runtime error used without type annotations pkozlowskiopensource opinion work without annotations", "num": "3903", "d": "8/2015"}, {"title": "refactor split source files", "body": "currently entire source module think split source dedicated separated files component comes module cc btford", "num": "3902", "d": "8/2015"}, {"title": "binding error w bad message components talk mixed case variable name", "body": "mentioned vsavkin asked open use case parent heroes component lists heroes shows current hero child hero detail component one properties communicated parent child named username binding failed w message notice message shows variable name lower case problem goes away rename child property lower case variations fine username user xxx xyx mixedcase name failed similar way example failed w message repro another github repository needed", "num": "3901", "d": "8/2015"}, {"title": "config systemjs using bundles npm dist", "body": "trying run app working using contents seems failing far looks like html systemconfig baseurl defaultjsextensions true paths meta librxjs format cjs libfirebasejs format global exports firebase map rx librxjs firebase libfirebasejs systemimport appbootstrap catch consoleerrorbind console load modules exposed using latest version system little bit help would appreciated way could make work source disk configured system html systemdefaultjsextensions true systemconfig paths meta librxjs format cjs libfirebasejs format global exports firebase map rx librxjs firebase libfirebasejs systemimport appbootstrap catch consoleerrorbind console combination worked fine moved get npm dist forces config system different way", "num": "3900", "d": "8/2015"}, {"title": "using throws ts compilation", "body": "using app compilation seems causes compile throw two semantic errors might recognised using version ts", "num": "3899", "d": "8/2015"}, {"title": "using nghttphttpbindings sfx build causes invalidbindingerror", "body": "using nghttphttpbindings angular sfxdev build throwing following error invalidbindingerror message invalid binding instances binding type allowed got object object originalexception undefined originalstack undefined context undefined stack invalidbindingerrorbaseexception error invalidbindingerrorbaseexception new invalidbindingerror resolvebindings resolvebindings functionsystemregisterexecuteinjectorresolve injectorsystemregisterexecuteinjectorresolveandcreatechild createappinjector zonerun zonesystemregisterexecutengzonecreateinnerzonezoneforkfork run run plunkr reproduce issue change following code everything works looks like nghttp module using somehow incompatible binding mechanism generate httpbindings making something wrong advice welcome also think give hand resolve give tips pr solution thank", "num": "3898", "d": "8/2015"}, {"title": "testlib js jasmineit execute asynchronously strictly required", "body": "need wrap jasmine functions use test injector angular tests current mechanism always pass jasmine callback one parameter ie injected calling method instance forward call parameter provided jasmine injected angular specific wrapper take care calling discussed igorminar would better pass parameter unless striclty required test async", "num": "3893", "d": "8/2015"}, {"title": "required validator shows failed validation input set", "body": "given following input setting value inputsmixedstring initialize field results required validator marking input invalid typing value input subsequent attempts assign value reset button also result incorrect validation result", "num": "3892", "d": "8/2015"}, {"title": "typeerror read property elementbinders undefined http sfx bundles", "body": "using plnkr using following sfx scripts creating simple component causes titular error full trace ca nt really see going grander scale deduced gets defined sfx scripts metioned potential problematic code code seems fine first definition resolves false however second time around resolves true therefore whenever called angular seems get caught infinite loop exceeding maximum stack size", "num": "3890", "d": "8/2015"}, {"title": "dom exposed testlib", "body": "right want dom operations unit tests import would nt make sense expose different name something since place used end users tests", "num": "3887", "d": "8/2015"}, {"title": "facade exposed public namespace", "body": "right things need write app import useful things facade like plans exposing things facade folder namespace", "num": "3886", "d": "8/2015"}, {"title": "unexpected directive value undefined view component todoapp", "body": "hi started getting error please tell error comes", "num": "3885", "d": "8/2015"}, {"title": "angular paramserializer nt work", "body": "nt work correct usage new angular thank much", "num": "3884", "d": "8/2015"}, {"title": "directive selector", "body": "upgrading app one directive selector working anymore realize must conflicting parser canonical syntax events working error really explicit maybe error could explicit doc warns using prefixes attribute selectors", "num": "3883", "d": "8/2015"}, {"title": "refactor ngcontent rename", "body": "turns shadow dom spec element deprecated called want align accordingly", "num": "3882", "d": "8/2015"}, {"title": "routerrecognize nt find urls", "body": "using routersubscribe know navigation occurred trying get component related current url routersubscribe routerrecognize nt find tried call routerrecognize registered urls result see code", "num": "3879", "d": "8/2015"}, {"title": "minor documentation issue step step guide step user input", "body": "docs final code section line instead correct earlier article", "num": "3878", "d": "8/2015"}, {"title": "implement programmatic change detection profiler", "body": "profiler would accessible via dev tools developer installs profiler di module get access global functions could invoke directly dev tools console profiler would exposed global namespace future could host tools profile change detection specifically developer would enter profiler would invoke least times least compute average standard deviation amount time took execute single takes optional named boolean parameter default set records profile cpu profile could inspected later profiles tab dev tools future may add options named parameters custom number runs custom length profile cc vsavkin mhevery", "num": "3877", "d": "8/2015"}, {"title": "dts generation preserve spread arguments", "body": "look generated definition notice include spread operator declared alexeagle please help causes", "num": "3874", "d": "8/2015"}, {"title": "dart remove dependency uri", "body": "uri fully implements uri spec contributes code size however need small subset roll perhaps port regexbased js implementation dart", "num": "3873", "d": "8/2015"}, {"title": "dart make long stack traces optional", "body": "pull dependency turn pulls", "num": "3872", "d": "8/2015"}, {"title": "dart make intl pipes optional", "body": "includes pipes depend currency number date", "num": "3871", "d": "8/2015"}, {"title": "dart make forms api optional", "body": "currently forms api pulled automatically rest angular resulting extra minified ungzipped code", "num": "3870", "d": "8/2015"}, {"title": "investigate sharding build", "body": "build slow maybe could parallelizing tests maybe needlessly waiting something finish could already started something else figure critical path see success story", "num": "3869", "d": "8/2015"}, {"title": "class added component style inside template", "body": "js component selector ngdialog host class dialogcontainer added dom view templateurl dialoghtml class host wrong component controller class dialog title string constructor thistitle dialog html dialogcontent border solid black background gray height width margin auto dialogcontainer position absolute width textalign center top title", "num": "3868", "d": "8/2015"}, {"title": "remove first element replace first child element replace prop view", "body": "code rendered component following want possible need property example replace view", "num": "3866", "d": "8/2015"}, {"title": "adde lifecycleevents", "body": "currently proposal content delayed view delayed", "num": "3863", "d": "8/2015"}, {"title": "angular routing", "body": "hello everyone wondering good tutexample make routing work currently something working using routeconfig app component like apphtml made simple list navigate like html home bootstrap toastr actually work though completely problem navigate bootstrap page im xyzbootstrap page press get webserver mather use wamp iis problem happens pages simply ca nt use refresh perfectly possible used angular uirouter also mean im xyzbootstrap page want navigate toastr page typing xyztoastr get error routing works using buttons apphtml problem navigate pages want use browser back forward button navigate back one time thats like history except go back one hopefully someone help give link nice tut thanks update use alpha angular router using versions version combinations could nt even get working update im building app using typescript tried running vs iis publish run wamp apache result", "num": "3861", "d": "8/2015"}, {"title": "router lifecycle hooks yet", "body": "trying new version router angularjs could make work simple scenario single outlet links navigate could nt use features canactivate lifecycle hooks ignored executed known bug missing something quite surprised working since back code located repo angularrouter btw could share current timing plans around new router extremely useful", "num": "3860", "d": "8/2015"}, {"title": "standardize message bus usage server debug tools", "body": "currently multiclientservermessagebus makes number assumptions application problematic assumption new browser connect time means keep permanent message history define notion app state know browsers connected additionally formalize idea message waiting response rather hard coding result type related involves messaging protocol idea app phases", "num": "3859", "d": "8/2015"}, {"title": "null exception elementinjector removing view elements via ngif queried using viewquery", "body": "using angular dart alpha component view looks like component uses show boolean control whether elements underneath displayed tabpanel tab components implemented code base tabpanel component constructor injector looks like tabpanelcomponent query tabdirective querylist tabquery viewquery itemdirective descendants true querylist itemquery viewquery anotheritemdirective querylist anotheritemquery show set false get following null exception debug found viewquery tabpanelcomponent itemdirective exception stack trace pasted found injector dehydrated time queryupdate called removeparentquery tried quickly add check hydrated fixed exception issue seemed cause problems query getting cleared properly left stale tab panels elementinjectordart removeparentquery queryref query ispresent query thisprunequeryfromtree query queryupdate thishyrdrated false point full exception stack exception null object getter view nosuchmethoderror method found view receiver null arguments show debugpanelcomponent original exception null object getter view nosuchmethoderror method found view receiver null arguments original stacktrace objectnosuchmethod dart objectnosuchmethod dart elementinjectorgetrootviewinjectors package queryrefupdate package elementinjectorremoveparentquery package elementinjectorremoveparentqueries package elementinjectorunlink package appviewmanagerutilsdetachviewincontainer package appviewmanagerdestroyviewincontainer package appviewmanagerviewdehydraterecurse package appviewmanagerdestroyviewincontainer package appviewmanagerdestroyviewincontainer package viewcontainerrefremove package viewcontainerrefclear package ngifngif package package abstractchangedetectordetectchangesinrecords package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchanges package lifecycletick package lifecycleregisterwith package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart ngzonerun package domeventspluginsameelementcallback package", "num": "3857", "d": "8/2015"}, {"title": "remove reflectionentrypoints deprecation message", "body": "sept remove deprecation message constant", "num": "3856", "d": "8/2015"}, {"title": "child component references", "body": "one common use case emerging ionic usage accessing child components parent component exist nt believe intuitive enough common operation turning example take gallery component image carousel inside gallery wants control carousel might push new images remove old ones lifetime gallery component today query carousel however natural guistyle way access interact children especially specify exact set child components commonly one would natural tag child ref like internal view variables using expose component access carousel directly component questions come would need addressed work properly work sets components example created one option make tagging take interpolated value use attribute case perhaps child references accessed abstraction reference id key object semantics component destruction ref system think nullifying reference would sufficient along emitting event though event support would added wrapper class component internals syntax tagging child components viewinternal references maybe system could expanded allow parent access well supply attribute like react worth noting react nice system purpose docs go greater detail parent child direct access valuable thoughts dynamic children problem", "num": "3853", "d": "8/2015"}, {"title": "custom validations error", "body": "hi trying implement number custom validation directives everything goes good put directives element put four validators start receive error happens immediately second entrance page plunkr example page page except first page input validation directives second scenario open plunkr go page return page go page open console able see error thanks dima", "num": "3847", "d": "8/2015"}, {"title": "use reflectmetadataenvfixed", "body": "environment detection incorrect reflectmetadata author module rbuckton respond issue", "num": "3845", "d": "8/2015"}, {"title": "error jqlite onargs jqlite support parameters", "body": "hi using angular nt build project today started production pipeline saw error concatenate angular js file files concatenated used like developing stage work long shot let see suggestions basically error jqlite onargs jqlite support parameters stack trace starting error tag mentioned bottom stack tag ui code navigation menu site", "num": "3844", "d": "8/2015"}, {"title": "transformers reimplement reflection data top treeshakeable map", "body": "assigning sigmundch give us green light implementation", "num": "3842", "d": "8/2015"}, {"title": "dart document code size inspection toolsstrategies", "body": "unused reflection data instrumentation dumpinfo tools", "num": "3841", "d": "8/2015"}, {"title": "investigate potential code savings hello world app shutting optional features", "body": "outcome exercise would report final code size recommendation next get", "num": "3840", "d": "8/2015"}, {"title": "recompile components runtime", "body": "possible recompile components runtime components whose templates dynamic change runtime la compile dynamiccomponentloader seems support adding components dynamically component tree templates still defined statically compilation startup", "num": "3838", "d": "8/2015"}, {"title": "host setting attribute", "body": "host property properly setting attribute app sampling becomes im simple working tabs defined file issue separate files", "num": "3837", "d": "8/2015"}, {"title": "codegen getters annotationdeclared events", "body": "recent changes way pieces change detector model handled serialized etc longer need codegen anything except declared inside annotations pregenerate change detectors remove codegen", "num": "3834", "d": "8/2015"}, {"title": "status", "body": "find roadmap angular beta release feature andor qa goal set betarcstable releases work thresholds", "num": "3833", "d": "8/2015"}, {"title": "router needs way manually shutdowndisposed mutliapp tests", "body": "discussed offline bit injectable listens indirectly location changes part destroy cycle components application disposed tests multiapp environments possible route change trigger dynamic component loader load dom longer exists", "num": "3830", "d": "8/2015"}, {"title": "use angular testability api wait end tests", "body": "right rely hack wait end tests wait loading text disappears however angular exposes api know bootstrap done via see use api prevent future breakages hard explain errors", "num": "3829", "d": "8/2015"}, {"title": "fix dgeni correctly export type declarations", "body": "declarations one http interfaces dts output instead broken master apparently tested tests fail semicolon expected input output", "num": "3828", "d": "8/2015"}, {"title": "revert nowobsolete sort directive parser", "body": "introduces stablesort directive properties longer necessary due", "num": "3827", "d": "8/2015"}, {"title": "contains incorrect systemjs config", "body": "end file sure ended mapping nt configuring paths belonging exclusively angular especially confusing systemjs flipped false", "num": "3826", "d": "8/2015"}, {"title": "viewmetadata nt public constructor dts", "body": "metadata classes nt public constructor present dts files since takes via public api constructor public well", "num": "3825", "d": "8/2015"}, {"title": "testlibdts missing", "body": "currently nt generate build causes issues using testcomponentbulider tests ts", "num": "3824", "d": "8/2015"}, {"title": "documentation quickstart working", "body": "heard cool wanted try verses react decided spend time onboarding used quickstart till got point point completely broke ca nt figure wrong", "num": "3821", "d": "8/2015"}, {"title": "remove calls bind", "body": "", "num": "3820", "d": "8/2015"}, {"title": "conflicting binding syntax properties regular attributes makes text values property binding impossible", "body": "currently attribute binding works means depending type attribute making binding syntax depends last use case rare nt even know properly without dedicating static variable sake getting value attribute value reason attributes nt need double mustaches since guidelines tell suggest fix problem say drop exceptions many exceptions specialities overkill used use including code html files make exception new attribute types", "num": "3817", "d": "8/2015"}, {"title": "test router unit tests outlet", "body": "currently integration specs", "num": "3814", "d": "8/2015"}, {"title": "test router test parity directives", "body": "right totally different tests router roughly high level tests use cases enforced via script set specs probably integration specs assert part target spec descriptions", "num": "3813", "d": "8/2015"}, {"title": "best way call pipe function inside component without template", "body": "js import component view bootstrap bind import capitalizepipe mypipes import pipes component selector myapp view template component controller class myappcomponent name string constructor inject pipes pipe pipes thisname pipeprotocapitalizeprototypetransform ingens bootstrap myappcomponent bind pipes tovalue new pipes capitalize capitalizepipe", "num": "3809", "d": "8/2015"}, {"title": "pipe called three times", "body": "created pipe js pipe name capitalize export class capitalizepipe capitalize value return valuecharat touppercase valueslice transform value string return thiscapitalize value added components controlpath capitalize directives showerror formdirectives pipes capitalizepipe class inputtext controlpath string value string constructor directives formdirectives showerror ngif inputtext component controller class myappcomponent data object form controlgroup constructor inject http thisdata thisform new controlgroup name new control validatorsrequired gt resjson subscribe response gt thisdata response onsubmit f consolelog f consolelog fcontrolsnamevalid consolelog thisdata bootstrap myappcomponent debugged transform pipe function called times", "num": "3807", "d": "8/2015"}, {"title": "passing values components ngcontrol ngformmodel ngmodel", "body": "could something like controlpath uppercase directives showerror formdirectives class inputtext controlpath string value string constructor input text crash ngcontrol error following exception provider controlcontainer function cd renderer elementref ngcontrol controlcontainer way would something like nt know possible", "num": "3804", "d": "8/2015"}, {"title": "attribute label nt exist", "body": "error shown exception ca nt bind since nt known property element matching directives corresponding property", "num": "3803", "d": "8/2015"}, {"title": "feat create di", "body": "many examples using get realize stay away direct dom elements still many cases still need direct access", "num": "3801", "d": "8/2015"}, {"title": "proposal public api add custom eventmanagerplugins", "body": "currently looks like locked set include would possible create public api custom could created would make easier third party libraries add logic certain events importantly example ionic needs clean way able immediately fire click events also prevent delayed click ios additionally think external plugin within core plugin would use new public api", "num": "3800", "d": "8/2015"}, {"title": "error error unknown browser found getbrowsersfromcli running npm test", "body": "hello trying follow instructions run get angularangular master npm test angular test homeabluangularangular gulp testalljs amp amp gulp testalldart dart sdk detected using gulpfile angularangulargulpfilejs starting testalljs env dartsdkhomeabludownloadsdartsdk darthomeabludownloadsdartsdkbindart pubhomeabludownloadsdartsdkbinpub dartanalyzerhomeabludownloadsdartsdkbindartanalyzer dartdochomeabludownloadsdartsdkbindartdoc dartdocgenhomeabludownloadsdartsdkbindocgen chromebingooglechrome pathhomeabluangularangularnodemodulesbin homeabluangularangularnodemodulesbin homeablugopathbin homeablugopathbin homeablugopathbin homeablugopathbin homeablugopathbin usrlocalbin usrlocalsbin usrbin usrsbin bin sbin homeablulocalbin homeablubin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin ngdartbasedirhomeabluangularangularscripts ngdartscriptdirhomeabluangularangularscriptsci dart sdk detected using gulpfile angularangulargulpfilejs starting pretestchecks starting buildcheckcirculardependencies finished buildcheckcirculardependencies finished pretestchecks dart sdk detected using gulpfile angularangulargulpfilejs starting testjs starting testunittoolsci started specs failures finished seconds finished testunittoolsci ms starting testtranspilerunittest started specs failures finished seconds finished testtranspilerunittest ms starting docstest started specs failures finished seconds finished docstest starting testunitjsci testunitjsci errored \u03bcs error error unknown browser found getbrowsersfromcli getbrowsersfromcli gulp moduleexports gulporchestratorruntask gulporchestratorrunstep gulporchestratorstart runnextset gulpontaskend gulpemit gulporchestratoremittaskdone testjs errored error build sequence failed testalljs errored error plugin gulpshell message command failed binsh c scriptscitestjssh details killed false code signal null cmd binsh c scriptscitestjssh stdout env dartsdkhomeabludownloadsdartsdk darthomeabludownloadsdartsdkbindart pubhomeabludownloadsdartsdkbinpub dartanalyzerhomeabludownloadsdartsdkbindartanalyzer dartdochomeabludownloadsdartsdkbindartdoc dartdocgenhomeabludownloadsdartsdkbindocgen chromebingooglechrome pathhomeabluangularangularnodemodulesbin homeabluangularangularnodemodulesbin homeablugopathbin homeablugopathbin homeablugopathbin homeablugopathbin homeablugopathbin usrlocalbin usrlocalsbin usrbin usrsbin bin sbin homeablulocalbin homeablubin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin homeabludownloadsdartsdkbin ngdartbasedirhomeabluangularangularscripts ngdartscriptdirhomeabluangularangularscriptsci dart sdk detected using gulpfile angularangulargulpfilejs starting pretestchecks starting buildcheckcirculardependencies finished buildcheckcirculardependencies finished pretestchecks dart sdk detected using gulpfile angularangulargulpfilejs starting testjs starting testunittoolsci started specs failures finished seconds finished testunittoolsci ms starting testtranspilerunittest started specs failures finished seconds finished testtranspilerunittest ms starting docstest started specs failures finished seconds finished docstest starting testunitjsci testunitjsci errored \u03bcs error error unknown browser found getbrowsersfromcli getbrowsersfromcli gulp moduleexports gulporchestratorruntask gulporchestratorrunstep gulporchestratorstart runnextset gulpontaskend gulpemit gulporchestratoremittaskdone testjs errored error build sequence failed npm err test failed see details pkozlowskiopensource asked irc report issue regards ablu", "num": "3799", "d": "8/2015"}, {"title": "browser crashes async mode generating promises repeatedly", "body": "humble code cause browser completely lock copy pasted current docs adjusted slightly async mode ts import component view bootstrap component selector myapp changedetection onpush view template component controller class myappcomponent get title return promiseresolve hello world bootstrap myappcomponent see problem suspect way angular dirtychecking since getter returns new promise time called angular gets confused even though promise resolves value every time seems like asyncmode specific use regular nonasync mode see browser remains responsive fixed version looks like ts import component view bootstrap component selector myapp changedetection onpush view template component controller class myappcomponent saving reference promise helps title promise constructor thistitle promiseresolve hello world bootstrap myappcomponent code works expected", "num": "3798", "d": "8/2015"}, {"title": "http module missing", "body": "find http module", "num": "3797", "d": "8/2015"}, {"title": "flow component context component contents", "body": "take example javascript import component view bootstrap component selector app view template class app name string bootstrap app make app context available view content suck consuming component foohtml produce hello foobar actually produces hello name", "num": "3796", "d": "8/2015"}, {"title": "documentation coredirectives needs updated match switch uppercase constants", "body": "docs specify using coredirectives looks like coredirectives", "num": "3795", "d": "8/2015"}, {"title": "ts typings missing formdirectivess", "body": "srcdemots error module exported member formdirectivess gets reported using ts typings bundle goes coredirectives", "num": "3789", "d": "8/2015"}, {"title": "rename ngprobe ngprobe", "body": "", "num": "3786", "d": "8/2015"}, {"title": "fix router empty hash url display hash character", "body": "currently use serialize root url single slash empty string etc instead general always prefer fewest number characters serializing url", "num": "3784", "d": "8/2015"}, {"title": "feat router warn user hooks returnresolve bool", "body": "current behavior continuing hook returns surprising says igorminar", "num": "3783", "d": "8/2015"}, {"title": "creating fake event objects testing components", "body": "say want test component behavior called event vanilla js land would create fake event object passing event handler done however types fake event line expected event type ts dart one could almost ie nt support instantiating event objects clear way getting fake event object works handler signature", "num": "3782", "d": "8/2015"}, {"title": "angulario dev guide still shows renamed viewinjector", "body": "search viewinjector found renamed viewbindings trivial please update dev guide accordingly repo dev guide btw correct", "num": "3781", "d": "8/2015"}, {"title": "lexer errors contain contextual info", "body": "name component template url exception would really nice debugging", "num": "3778", "d": "8/2015"}, {"title": "ca nt inject asynctestcompleter beforeeach", "body": "trying inject block results would allow tests significantly cleaner supporting would prevent lot duplication writing test ing", "num": "3777", "d": "8/2015"}, {"title": "rename pushstatelocationstrategy", "body": "think move away lingo location strategy html spec longer versioned year two naming look archaic happy consider names long nt refer", "num": "3776", "d": "8/2015"}, {"title": "feat router release process router", "body": "finally router code merged still need determine best version release builds repo", "num": "3774", "d": "8/2015"}, {"title": "dts generation depend", "body": "currently following three mechanisms excluding certain types dts generation private methodsclasses ignored methods starting ignored constructors annotated private ignored excluding methods starting mixing privacy semantics ts dart creates lot problems instance myfilets class method b b bmethod class b method privatetype say decided move class b separate file improve code organization since compile every file separate library make work dart rename force export privatetype problem mixing privacy semantics dart typescript dart libraryscope privacy ts classscoped privacy privacy ts stricter private method ts private method dart way around use ts notion privacy rely presence way steps take make private work methods annotate public methods starting private rename public methods starting eg change guarantee private methods fields start require work later situation want end use typescript privacy semantics private methods start public methods start alexeagle mhevery rkirov mprobst", "num": "3772", "d": "8/2015"}, {"title": "darttransformer support multiple directives class", "body": "directive metadata visitor support class multiple directives whereas use case seen user code seems like visitor able handle use case", "num": "3771", "d": "8/2015"}, {"title": "dart incremental build missing typings", "body": "repro success edit file reported vsavkin", "num": "3770", "d": "8/2015"}, {"title": "error adding class validating forms", "body": "name company location datalocation blog datablog directives formdirectives showerror ngif component controller class myappcomponent data object constructor inject http thisdata gt resjson subscribe response gt thisdata response onsubmit f consolelog f consolelog fcontrolsnamevalid consolelog thisdata page loaded receive error exception typeerror read property valid undefined fcontrolsnamevalid null error classhassuccess fcontrolsnamevalid", "num": "3767", "d": "8/2015"}, {"title": "src attribute first time calls undefined endpoint", "body": "get found", "num": "3765", "d": "8/2015"}, {"title": "cryptic error templateurl empty", "body": "trying set plnkr skeleton found searched nt find anything leaving empty throws error plnkr found similar issue setting nonurl useful message could simple think", "num": "3762", "d": "8/2015"}, {"title": "dart build failing", "body": "see build first build issue reappeared previous build fine issue already seen eo june see apparently green amp red builds use dart version print l travis logs kevmoo sigmundch idea could go wrong", "num": "3757", "d": "8/2015"}, {"title": "alpha acessing routeparam route parameter provided produce exception", "body": "routes defined editproductview inject routeparams constructor worked fine works fine long route parameter provided none provided exmple following routerlink itemseditnew exception thrown", "num": "3755", "d": "8/2015"}, {"title": "empty event expression produce cryptic error", "body": "related fixed together template following element alpha worked great produces following runtime error following modification still produces error one works", "num": "3754", "d": "8/2015"}, {"title": "error routerdts", "body": "bit puzzled one think appeared alpha nt upgrade updated angular systemjsbuilder systemjs simple route config like got compilation error work around found provide routerdts file following fix interface routedefinition loginview view nothing special", "num": "3753", "d": "8/2015"}, {"title": "nested router", "body": "hi fooling around routers seems nested router navigate inner route parent router simple example alpha outer router inner router issue currently inner router ca nt navigate within path located inner router using navigate path always need nagivate nestedpath issue check commented line outer router use redirect outer router path innerfavoritespath issue check commented line inner router use redirect inner router wo nt able simply travel inner router navigate inner inner router path resolve redirect best regards tiago braga", "num": "3751", "d": "8/2015"}, {"title": "mistake online step step guide", "body": "apology proper issue right place report final code provided step step guide page raises two errors due line interator syntax guess line directive inclusion guess", "num": "3749", "d": "8/2015"}, {"title": "ngfor nt work inside", "body": "ca nt make ngfor directives work inside reproducible demo application start app run app components approotcmp homecmp helpcmp approotcmp configures routes hosts routeroutlet homecmp helpcmp loaded router inside routeroutlet helpcmp contains ngfor displays list topics however list nt displayed errors thrown console move helpcmp routeroutlet approotcmp template everything works fine", "num": "3745", "d": "8/2015"}, {"title": "remove locationurlinterface use abstract class", "body": "typescript released locationurl abstract class", "num": "3741", "d": "8/2015"}, {"title": "error", "body": "new typings files http following lines throwing error message one solution commentremove file one obtained see", "num": "3740", "d": "8/2015"}, {"title": "chore docs remove unused templates", "body": "many packages folder dgeni templates used remove files", "num": "3739", "d": "8/2015"}, {"title": "sourcemaps nt work codebase", "body": "running etc source maps work looking output code seems sourcemappingurl set twice sure related odd sourcemappingurlelementinjectorspecjsmap sourcemappingurlelementinjectorspecjsmap run tests firefox karma reports ton files nt happen chrome", "num": "3737", "d": "8/2015"}, {"title": "chore docs remove jadedatatemplatehtml", "body": "exist reason use template call", "num": "3736", "d": "8/2015"}, {"title": "warn missing calls entry points", "body": "allow omit tests change detection instance bootstrap anything rely reflection remover refactor tests add warning", "num": "3735", "d": "8/2015"}, {"title": "add definitely typed", "body": "noticed http longer part typings file oversight breaking change http moving module nt see renamed constant httpbindings either", "num": "3733", "d": "8/2015"}, {"title": "bug directive ngif root html element comment", "body": "element function refers comment added ngif directive element using", "num": "3732", "d": "8/2015"}, {"title": "event retargeting issue onbubble events", "body": "", "num": "3727", "d": "8/2015"}, {"title": "dart transformer changedetectors ids", "body": "running wtf dart transformers changedetector ids null issue null seems generated transformer mode makes hard debugging", "num": "3726", "d": "8/2015"}, {"title": "guide user input final code", "body": "guide found third guide user input final code example small typo line", "num": "3725", "d": "8/2015"}, {"title": "add support observable directives components", "body": "currently using experimental change detection mode detect objects used bindings implement observable dart observable rx observable subscribe objects fires event request check make solution complete also need detect component directives used template implement observable interface subscribe example component selector mycomponent changedetection onpushobserve view template name directives const mydirective class mycomponent implements observable string name directive selector mydirective class mydirective implements observable example mycomponent emits event request check mydirective emits event request check yjbanov mhevery", "num": "3724", "d": "8/2015"}, {"title": "camelcase property names nt work right", "body": "dart using tried writing property like nt work error reported properties const compileresult experimentation found fix write property name lowercase properties const compileresult compileresult documentation seems indicate camelcase work directive properties propertyname shorthand notation propertyname propertyname bit experimentation shows property name template caseinsensitive seems like first thing tried match better errorchecking misspelled property", "num": "3716", "d": "8/2015"}, {"title": "chore change bundle rules generate one sfx module several minimal modules", "body": "outlined bundles direct children module get special versions include thirdparty dependencies well modules blocked description copied bundles exported includes bundles corejs corenorenderjs core without render nondom contexts formsjs routerjs webworkerjs zonejs extensions bundle published codeangularjsorg npm bundles folder npm package published codeangularjsorg js dts typings separate folder npm distribution jsmap minjs using uglify eventually using angulartsminify devjs runs dev mode devjsmap testingjs testingjsmap testingdts bundle also get sfx version include dependencies like rx reflectmetadata traceurruntime export global object bundles include testing utilities mocks respective module coretestingjs include bulk testing utilities leaving testing bundles mostly include mocks includes dedupe dependencies todo update bundle build rules change ambient declarations use namespace instead prefix ie instead add automated tests bundles try using example tests add readme bundles folder codeangularjsorg npm dist explain use make sure issue document use bundles docs", "num": "3714", "d": "8/2015"}, {"title": "chore rearrange sources better reflect npm package import paths", "body": "see comment details essentially folder structure updated look like todo move outside break separate bundlespecific test folders x add notes commits x release updated paths x remove superfluous toplevel exports x add new public api exports respective filesbundles clean decorators spec leak specs spec apply decorators prototype chain x manually test npm version benchpress changes depends di test angulario make sure correct paths reflected maybe rewrite imports specific x update paths reflect x consolidate exports src folders reduce redundancy core corenorender exports", "num": "3713", "d": "8/2015"}, {"title": "chore zone add zonejs bundles npm distribution", "body": "reasoning distribute two types bundles bundle stripped sub bundles bundle include subbundles like core forms router webworkers version bundle includes thirdparty dependencies like rxjs reflectmetadata polyfills etc separate bundles advanced users include dependencies assume dependencies provided elsewhere", "num": "3712", "d": "8/2015"}, {"title": "missing case router redirects link reditects", "body": "throw error early router complains route redirects component also contains redirect", "num": "3710", "d": "8/2015"}, {"title": "binding multiple style properties", "body": "easier way bind multiple style properties would nice able pass object la style styleobj styleobj top left properties get mapped appropriate dom object properties concise syntax", "num": "3709", "d": "8/2015"}, {"title": "dgeni export const implements amp abstract annotations", "body": "artifacts conversion process hide jade output", "num": "3705", "d": "8/2015"}, {"title": "create generic class uicomponents use messagebus", "body": "messagebasedrendercompiler messagebasedxhrimpl share lot common code structure sink source handlemessage wrapworkerpromise probably going shared among uicomponents want able send receive messages tofrom worker create generic base class abstracts common code away making easier write uicomponents could export class make easier application developers write uicomponents", "num": "3703", "d": "8/2015"}, {"title": "rail performance goals", "body": "way track rail performance goals using users perceive speed web paul irish google keynote", "num": "3702", "d": "8/2015"}, {"title": "ngif conditions called twice also shortcircuit", "body": "sure actually bug given conditionals appear called twice additionally js operators shortcircuit sides evaluated regardless entirely sure expected behaviour hoping someone could shed light", "num": "3701", "d": "8/2015"}, {"title": "dgeni inline type annotation interface used var part var template", "body": "currently template dgeni doctype references type annotation interface link author thought include meat syntax information really type annotation included doc related interface inlined template instead file", "num": "3700", "d": "8/2015"}, {"title": "dgeni outputs partial templates aliases inline", "body": "export doc templates two aliases need update template inlined method signature independent docs", "num": "3699", "d": "8/2015"}, {"title": "feat router redirect metadata", "body": "builds upon redirect routes also allowed metadata data take precedence target redirect metadata", "num": "3697", "d": "8/2015"}, {"title": "replace traceur polyfills angular", "body": "need investigate find replacement polyfills still use runtime", "num": "3694", "d": "8/2015"}, {"title": "issue error unknown browser found getbrowsersfromcli running tests locally", "body": "tried running test suite locally documented however line bash script adds result caused line throw gulpfilejs running task suggestion remove", "num": "3691", "d": "8/2015"}, {"title": "access components developer tools console", "body": "issue came stackoverflow question far know right nt easy way get component native dom element example compiled dom know component nt access cool production mode incapsulation security development mode think would handy could something like think guys", "num": "3689", "d": "8/2015"}, {"title": "angular build instructions developermd", "body": "trying build angular run performance tests following instructions build fails zonejs traceur packages include license file angular build license file maybe bug packages seems begin shipping license file angular ca nt really require one workaround using", "num": "3688", "d": "8/2015"}, {"title": "move eventdispatch messagebroker", "body": "messagebroker becoming generic really nt tied events event logic moved separate eventdispatcher class", "num": "3686", "d": "8/2015"}, {"title": "design webworker messaging protocol", "body": "currently messaging ui webworker pretty haphazard relies lot hard coded strings additionally various components use protocols example broker protocol setup component protocol events protocol defined different places one protocol file similar barista protocol defines structure messages pass messagebus defines constants use", "num": "3685", "d": "8/2015"}, {"title": "messagebus abstract", "body": "currently messagebus interface means ca nt bind di typescript adds abstract classes language released make messagebus abstract class", "num": "3683", "d": "8/2015"}, {"title": "ability change interpolation delimiter character", "body": "folks wish mix angular template syntax another template rendering syntax wish change interpolation character ex complexity globally changing interpolation character break existing directives use default characters solution would make percomponent setting via decorators syntax teams want adopt different separator would create part standard component config annotation decorator way centralize maintenance usage", "num": "3682", "d": "8/2015"}, {"title": "event binding syntax sugar references eg", "body": "would expect desugar something like rhs ref afaict less already happens fake twoway bindings generic works oneway bindings implemented pattern would appear useful propagating data oneway children parent components", "num": "3680", "d": "8/2015"}, {"title": "domreflectpropertiesasattributes nt work directives", "body": "internally tracked", "num": "3678", "d": "8/2015"}, {"title": "request add unit tests examples modulesexamples", "body": "awesome unit tests examples modulesexamples", "num": "3676", "d": "8/2015"}, {"title": "break foreach", "body": "hi angular support break angularforeach", "num": "3675", "d": "8/2015"}, {"title": "angularjs unit testing", "body": "hi first issue related angularjs started reading unit testing frameworks related wanted use framework used ng development anyone know one recommend best regards tiago braga", "num": "3674", "d": "8/2015"}, {"title": "host vs hostlistener mixup documeantation neither seem work", "body": "confused trying set listeners component playing digging source documentation yet host parameter component annotation nt find anything useful find instance documentation updated fit changing names additionally include problem may actual bug rather problem code first problem documentation documentation angulario directiveannotation reference argument seems longer exist seems replaced argument snip example code problem edit ericmartinezr solved fault suspected end trying use argument stripped example trying import component view enum direction updown leftright component selector draggable host onmousedown draggingstart view template component controller export class draggable dragging boolean constructor thisdragging false renders fine would expect get printed every time click instead getting exception every time press mouse", "num": "3671", "d": "8/2015"}, {"title": "extension annotations", "body": "hi would useful ability extending annotations case try implement dsl basic components started inputbase like extend instance implement input typetext problem every time extend input rewrite properties although nt changed", "num": "3670", "d": "8/2015"}, {"title": "fire ngmouseover disabled buttons", "body": "know currently nt imo angularjs use case button remains disabled entered form invalid want show tooltip disabled submit button explain user invalid every time user hovers disabled submit button improve usability chance accepted", "num": "3668", "d": "8/2015"}, {"title": "click work properly", "body": "hello html like text click span effect click work child tags magic", "num": "3665", "d": "8/2015"}, {"title": "better error messages property initialized", "body": "related fixed together listing event directive without creating associated instance results cryptic error typeerror read property observer undefined functionobservablewrappersubscribe eventemitteraccessorsubscribe appviewmanagerutilssetupeventemitters appviewmanagerutilshydrateview appviewmanagerutilshydrateroothostview appviewmanagercreateroothostview zonerun zonerun zoneboundfn reproduce", "num": "3664", "d": "8/2015"}, {"title": "typos stepbystep guide", "body": "found typos stepbystep guide user input final code snippet line line also chapter displaying data missing line end final typescript snippet", "num": "3663", "d": "8/2015"}, {"title": "better error reporting ngmodel exp syntax", "body": "work fail silently either throw allow forms sure makes sense related done together", "num": "3662", "d": "8/2015"}, {"title": "add channel support messagebus", "body": "messagebus support form channel abstraction could channels angular modules renderer compiler xhr router etc users could specify channels", "num": "3661", "d": "8/2015"}, {"title": "bootstrapwebworker transpiled bootstrapwebworker throws typeerror", "body": "hi noticed something weird playing around web worker modules typescript function name called two capital w generated javascript name seems turn one capital w throws typeerror reproduce bootstrapts loaderts workerts typescript import bootstrapwebworker import forminjectables import routerinjectables app component import app app bootstrapwebworker app forminjectables routerinjectables uncaught typeerror function see screenshot nt know typescript bug versions information angular typescript", "num": "3658", "d": "8/2015"}, {"title": "feature request new unbounded query type", "body": "query searches light dom tree matching nodes viewquery searches component view matching nodes consider case many nodes page given type order build tree model components unbounded parent injection used build tree bottomup however building tree possible child injection deeply viewnested components reachable viewquery consider adding new type query descend entire view tree optimize query stop descending first instance since first instance inject children tree", "num": "3657", "d": "8/2015"}, {"title": "bound components showing twice query children", "body": "binding component token results component appearing twice children list injected query ex prints", "num": "3655", "d": "8/2015"}, {"title": "docs api reference also include globalambient object names included sfx bundles", "body": "example bundle exports module user looking componentannotation docs idea get hold annotation using module loader cc wardbell naomiblack", "num": "3651", "d": "8/2015"}, {"title": "docs bookmarks class methods fields linkable", "body": "docs angulario make methods fields bookmarkable easier sharing cc mhevery", "num": "3648", "d": "8/2015"}, {"title": "docs query improve query documentation", "body": "query documentation lacking context code samples available queryfactory interface documentation moment added query documentation given description purpose cc mhevery", "num": "3647", "d": "8/2015"}, {"title": "fix compiler directives pointing forward ref produce error", "body": "two components defined module one component depends defined component undefined runtime since classes transpiled using assignment instead hoistable declarations typescript component directives child child would undefined point class componentone directive class child raise error instead failing silently cc mhevery", "num": "3646", "d": "8/2015"}, {"title": "feat compiler property foo raise exception", "body": "users hack night trying set properties way since foo would never valid expression compiler raise helpful exception pattern found since pattern predictable exception give specific feedback suggestion cc mhevery related done together", "num": "3645", "d": "8/2015"}, {"title": "implement di", "body": "didart supported following usage translated ts currently achieved preferred replacement implement sugar", "num": "3644", "d": "8/2015"}, {"title": "typeerror read property subject undefined systemjs", "body": "updating systemjs version encountered issue following stack trace debugging reached line newest version systemjs property field workaround may work however sure best solution let know think good enough order initiate pull request", "num": "3643", "d": "8/2015"}, {"title": "angular alpha form error", "body": "hello guys breaking change forms alpha alpha forms stopped working upgraded got error tried navigating page one forms plunkr examples alpha check alpha works alpha verify checking console log angular alpha version angular alpha version would appreciate help guys dispense best regards andr\u00e9", "num": "3642", "d": "8/2015"}, {"title": "exception queries concurrently active template", "body": "component uses ngfor create components inside view iterating list html use viewquery get hold child components well change getter return map original array seems ngfor repeatedly destroys creates components change viewquery keeps accumulating components ticks viewquery stops working entirely throws plunker showcasing bug", "num": "3638", "d": "8/2015"}, {"title": "angular type definitions contain lot properties type void", "body": "published type definitions contain properties type void instance value property approoturl class allowed typescript spec serve useful purpose reason also marked error webstorm", "num": "3637", "d": "8/2015"}, {"title": "fix emitted values nt trigger change detection torx", "body": "using torx conjunction http request function gets called right values zones nt propagate changes made presumably rxjs assigning local copy zones chance patch global method code rx think causes problem example code typescript class constructor inject http cc mhevery", "num": "3634", "d": "8/2015"}, {"title": "router export type interface", "body": "currently get two docs exported type interface one core one router confusing think unnecessary duplication make router depend type exported core", "num": "3632", "d": "8/2015"}, {"title": "add support observable models dart", "body": "annotate component like generate onpush change detector automatically subscribe observable objects class abstractchangedetector subscriptions obs value index value observable subscriptions index stream valuestream subscriptions index cancel subscriptions index valuechangeslisten refrequestcheck class mycomponentchangedetector detectchangesinrecordsinternal var ta contexta obs ta yjbanov mhevery", "num": "3631", "d": "8/2015"}, {"title": "uncaught typeerror angular function", "body": "ca nt get around error using systemjs see code", "num": "3628", "d": "8/2015"}, {"title": "ngmodel viewmodel nt update model value changed programatically", "body": "reproduce type something like banana input click swap swap button input change say swap button change say swap banana click swap button input still say swap even though value banana think going ngmodel directive keeps around field last thing typed input typing banana updated banana programatically changed swap nt updated swapped back banana ngmodel thinks value nt changed think ngmodel method would fix might side effects nt understand", "num": "3627", "d": "8/2015"}, {"title": "api docs rename annotations di modules metadata dependency injection", "body": "docs mainly", "num": "3626", "d": "8/2015"}, {"title": "increase number query fields injectors", "body": "performance reasons queries view queries stored element injector fields instead held maps current limit already showing limiting propose bumping limit implementing fallback maps strategy similar injectors instead current behavior throwing", "num": "3625", "d": "8/2015"}, {"title": "dgeni insert space doc breaks two comment lines", "body": "observe comment code produces doc missing spaces linebreaks occur original", "num": "3623", "d": "8/2015"}, {"title": "dart ie support tag", "body": "need polyfillworkaround specifically element becomes htmlunknownelement provide getter fixed js version need similar fix avoid going jsinterop every call cache value dart browseradapterdart bool templateelementcheckperformed false bool supportstemplateelement true void maybechecktemplateelementsupport templateelementcheckperformed return try ie throws others may simply return null supportstemplateelement new templateelement content null catch e supportstemplateelement false update getter dart node content templateelement el gt elcontent node content templateelement el maybechecktemplateelementsupport supportstemplateelement return elcontent else compiler extracts children anyway return el", "num": "3622", "d": "8/2015"}, {"title": "router navigate different router", "body": "updated thread removed previous issue since seems problem worte anyway need route different eg nested router seems router working changes url may router property visibility problem related viewbindings bindings properties viewbindings property visibility component view children hope helps anyone", "num": "3620", "d": "8/2015"}, {"title": "forms assigning ngcontrol variable results null", "body": "full example form ivalid directives formdirectives export class demoform bootstrap demoform results exception typeerror thiscontrol null ivalid null changing code use shown results errors works expected omitting code brevity however odd part removed code get exact error message exception typeerror thiscontrol null ivalid null short behavior seems consistent", "num": "3619", "d": "8/2015"}, {"title": "add runtime instrumentation reports unused reflection data", "body": "wo nt perfectly treeshakeable di syntax andor transformer time mean time would useful developers know reflection data retained transformer never gets used application proposal add flag causes track keys used access objects map add new method returns objects never requested developers could flag objects dead code audit", "num": "3618", "d": "8/2015"}, {"title": "gulp testunitjs break missing browser", "body": "finished broccolijsdev starting testunitjskarmarun error launcher start chromecanary find binary homevictorbindartchromiumchrome please set env variable chromecanarybin finished testunitjskarmarun watch triggered file change pm given logs see task stop browser could launched", "num": "3615", "d": "8/2015"}, {"title": "step step guide user input minor issue", "body": "final code part syntax error directives directives ngfor nif instead ngif", "num": "3610", "d": "8/2015"}, {"title": "precompile templates speed compile new compiler pipeline", "body": "design doc overview new compile pipeline proved faster bootstrap times faster compilation times", "num": "3605", "d": "8/2015"}, {"title": "move variable name mappings variable locations change detectors", "body": "generating change detectors compiler already knows used variables name mappings however runtime generate variable mappings see want precompile templates well moving information variables change detectors would allow mention precompiled templates also makes sense conceptual level purpose variables provide data change detection", "num": "3604", "d": "8/2015"}, {"title": "properly decode querystring", "body": "object want serialize used jquery function library decode nodejs everything worked fine nt need parse anything decided try new angular service decoding instead array get properly decode querystring created service without calling every object array querystring querystring", "num": "3603", "d": "8/2015"}, {"title": "systemimport load js file try load jspmio failed", "body": "following minutes quick start got error browser failed load resource server responded status found potentially unhandled rejection error loading appone found warning nonerror used file apponehtml angular quickstart enviroment information typescript browsers ie chrome problem", "num": "3602", "d": "8/2015"}, {"title": "watch broken testunitdart", "body": "steps reproduce run wait tests finish touch one files ex problem starting buildtreedart buildtreedart errored facadeconvertergetfileandname facadeconvertervisittypename moduletranspilervisitnode transpilervisit moduletranspilertranspilerbasevisit moduletranspilertranspilerbasevisitlist moduletranspilervisitnode transpilervisit moduletranspilertranspilerbasevisit moduletranspilervisitnode error makes running tests dart pretty miserable experience short flagging cc mprobst igorminar", "num": "3601", "d": "8/2015"}, {"title": "queries cleaned elementinjector dehydration", "body": "view reused dynamic component ngfor query limit hit quickly see following plunker fix trivial removing queryrefs elementinjectordehydrate calls", "num": "3598", "d": "8/2015"}, {"title": "uses wrong log level exceptions", "body": "currently exceptions logged wrong log level show error console makes hard assert automated test run exceptions occurred errors logged errors followup", "num": "3597", "d": "8/2015"}, {"title": "remove facade http since js", "body": "currently http module depends facade adds bulk needed since js blocked", "num": "3595", "d": "8/2015"}, {"title": "ca nt use ngfor ngif inside lightdom polymer web component", "body": "polymer shady dom content projection polymer web component created destroys tag necessary ngfor ngif result following error renderer full example", "num": "3593", "d": "8/2015"}, {"title": "feat package add typescript field typings information", "body": "related conversation packagejson", "num": "3590", "d": "8/2015"}, {"title": "dedupe getter setter generation logic", "body": "code generation logic exists bindgenerator amp templatecompiler dedupe", "num": "3589", "d": "8/2015"}, {"title": "feat dist include core modules npm dist", "body": "task change npm release script copy modules module folders outside npm distribution intended included according issue urgent module moved folder would included npm distribution without changing release script", "num": "3588", "d": "8/2015"}, {"title": "redefining property onclick", "body": "trying get app running zombie seeing following error presumably jsdom patching part works likely limitation jsdom many thanks", "num": "3584", "d": "8/2015"}, {"title": "interpolation expression recognized host attributes properties", "body": "given would expect host element ends interpolation expression recognized taken account would expect processed regular templates using syntax templates plunker reproduce scenario", "num": "3583", "d": "8/2015"}, {"title": "question using eventemitter manipulate data return observable", "body": "asked gitter room responses thought might ask looks like want work rxobservables use eventemitter class wondering following component calls service passing something parameter service modifies parameter service returns observables component observe subscribe using rxobservable importing directly following ts myservice export class myservice static dosomething something object rxobservable return rxobservablecreate gt somethingcreatedat datenow oonnext something ooncompleted component ts mycomponent class mycomponent dosomethinghandler something object void myservicedosomething something subscribe info gt consolelog info work eventemitter wrapper saw returns instead looks like pass callbacks left right make work like logic separated component call service one would heavy work returning something already manipulated component", "num": "3580", "d": "8/2015"}, {"title": "refactor remove dart support", "body": "talking mhevery internal stakeholders usefulness generalpurpose http library dart consensus largely needed network data managed specificpurpose client libraries opposition change voiced issue wait days moving forward supporting dart would reduce overhead developingcontributing http library would simplify problems semantic mismatches dart streams observables", "num": "3579", "d": "8/2015"}, {"title": "bootstrap disappeared api docs", "body": "hey yjbanov look longer getting exported dgeni mhevery thinks related refactoring change split separate file", "num": "3578", "d": "8/2015"}, {"title": "querylist iterable constructor", "body": "sorry vague title simple thing suggested post issue another user whenever want access querylist query directives viewquery components ca nt iterate list constructor print list see results iterable iterate oninit example works like expected behaviour documented others users may struggle issue see example code javascript component selector maincomponent view template directives anothercomponent class maincomponent constructor viewquery anothercmp anothercmp querylist oninit coding issue documentation repro directives components edit found issue explained happens still documented", "num": "3577", "d": "8/2015"}, {"title": "dgeni export classes private interfaces", "body": "fixed along applicationref example dts correctly interface output api docs class see essentially need make fix dts dgeni template", "num": "3576", "d": "8/2015"}, {"title": "throwing error upgrading router", "body": "upgrade alpha version router get errors related routeconfig object runtime function running produce error typings seem ok runtime error using version", "num": "3575", "d": "8/2015"}, {"title": "var const exports type information output dgeni", "body": "docs attribute var var adding meaningfulhelpful info user called really want see type information case trailing var likewise const want thing thus fixing name const separate issue nt capitalsnakecase example leftnav dgeni however fine omit type information", "num": "3574", "d": "8/2015"}, {"title": "rename const allunderscorecaps", "body": "also find vars case format const make const", "num": "3573", "d": "8/2015"}, {"title": "interfaces members nt show dgeni", "body": "example see present api docs interface", "num": "3571", "d": "8/2015"}, {"title": "fix router support aux routes within aux routes", "body": "", "num": "3568", "d": "8/2015"}, {"title": "feat router support deep linking aux routes", "body": "needs design work imagine look something like could add nested array represent aux routes", "num": "3567", "d": "8/2015"}, {"title": "subscribe value changes ngmodel", "body": "input html would like subscribe changes would one using form builder following js thatform fbgroup desc validatorsrequired thatdesc thatformcontrolsdesc observablewrappersubscribe thatdescvaluechanges function value something course markup would bit different well html using form builder makes ts compiler complain property exist control", "num": "3565", "d": "8/2015"}, {"title": "router ca nt loaded webworker app", "body": "router locationstrategy moment depends directly dom thus ca nt loaded webworker", "num": "3563", "d": "8/2015"}, {"title": "update newer systemjs infrastructure builder loader", "body": "start hit systemjsrelated bugs already fixed upstream examples upgrade newer builder loader combo", "num": "3562", "d": "8/2015"}, {"title": "anchoring animations nganimateref way transition cloned element new element", "body": "trying achieve morphing animation views using nganimateref animation follow steps user clicks element go forwards back link go backwards fade contents element transitioning opacity contents morph element new size position using nganimateref either fade cloned element reveal actual element underneath fade actual element cloned element removed dom step achieve plunkr far problem nganchoroutremove happens early morph nganimateshimremove real element could use ca nt think else another smaller issue get flash content showing morphing starts faded content", "num": "3560", "d": "8/2015"}, {"title": "missing routeroutlet constructor routerdts", "body": "routerdts typescript declaration according latest angular router alpha however missing getting typescript errors compiling yet code runs dive deep source fix", "num": "3559", "d": "8/2015"}, {"title": "maximum call stack size exceeded error alpha using ngmodel lot fields", "body": "seems work fine alpha reproduction available google chrome", "num": "3558", "d": "8/2015"}, {"title": "error routing alpha", "body": "im getting function switch back okay change name", "num": "3556", "d": "8/2015"}, {"title": "feat bundles include bundles npm distributions", "body": "bundles included npm distributions users still take advantage goodies come package manager explicit versioning gitignored bundles easy installation todo include bundles included codeangularjsorg toplevel folder npm distribution also include dts files folder", "num": "3555", "d": "8/2015"}, {"title": "fragmentation locationsearch string", "body": "problem return function locationsearch need allway return array example url one parameter mysitecom useridabc paramsgetfromurl locationsearch userid consolelog paramsgetfromurl return abc example two parameters mysitecom useridabc amp useriddef paramsgetfromurl locationsearch userid consolelog paramsgetfromurl return abc def need return abc instance abc mysitecom useridabc please help", "num": "3554", "d": "8/2015"}, {"title": "http module also resolve url include base url", "body": "creating node version universal ran problem needed url resolved baseurl sent recreate order find error thrown suppose simple di swap turned recreating proposal allow http use baseurl resolve urls sending updated asked maintainer add baseurl feature universal app ran server assume either user set baseurl server load balancing etc grab baseurl tag also needed router probably rendered anyways server", "num": "3553", "d": "8/2015"}, {"title": "bug locationsearch", "body": "url mysitecom useridabc need get userid parameters use paramsgetfromurl locationsearch userid console paramsgetfromurllenght gt gt gt array instead please help", "num": "3551", "d": "8/2015"}, {"title": "document angular expression syntax", "body": "seems documentation grammar angular expression example value ngfor ngif", "num": "3550", "d": "8/2015"}, {"title": "implement ngupgrade", "body": "", "num": "3548", "d": "8/2015"}, {"title": "component typings angulardts cause ts compiler throw error", "body": "noticed ide complains component updated version updated typings dt package npm defined typings reason compile component looks something like compiler complains", "num": "3546", "d": "8/2015"}, {"title": "cryptic error included templateurl", "body": "sure common ran cryptic error included string simple example example goof forgot change without get nice error message exception failed load template app failed fetch url hello get firefox exception typeerror parts null chrome exception typeerror read property null found error happens string", "num": "3543", "d": "8/2015"}, {"title": "feat typings bundle typings able declare references", "body": "right bundle would implement typings template order include declarations top nt scale well add bundles described instead information able included bundle definitions inside", "num": "3540", "d": "8/2015"}, {"title": "running app webworker", "body": "sure use npm distribution set app using web workers need zonemicrotaskwebworkersjs used examples folder bit confused scriptsjs import script mentioned seem find within npm distribution", "num": "3537", "d": "8/2015"}, {"title": "viewbindings documented changelogmd", "body": "noticed changelogmd documenting renamed breaking change", "num": "3536", "d": "8/2015"}, {"title": "remove implements replace typescript", "body": "", "num": "3535", "d": "8/2015"}, {"title": "omitting misspelling directive selector fails silently", "body": "quickly spot problem javascript import component directive view bootstrap directive slector test class test constructor consolelog activating test component selector hello view template directives test class hello bootstrap hello took mins figure property misspelled effectively removing selector directive throw clear error message case", "num": "3533", "d": "8/2015"}, {"title": "build testunitjs takes secs trigger", "body": "merging secs lag file change test run trigger changing back gets situation back normal lt would vote flipping flag till figure causes slowdown unless someone idea fix slowdown without removing type checks", "num": "3532", "d": "8/2015"}, {"title": "ngif inside ngif nt work", "body": "true condition element inside false condition another element displayed anyway inside first ngif inside second ngif produces whereas englobing false", "num": "3531", "d": "8/2015"}, {"title": "get existing mockbackend instance mock response", "body": "struggling figuring get instance mockbackend injected dependency service mocking response connection made directive js import elementref directive import observablewrapper import isnativeshadowdomsupported commonshadowdom import iconstore appservices directive selector logo export class logo constructor private elementref elementref public icon iconstore let el thiselementrefnativeelement let root isnativeshadowdomsupported root elcreateshadowroot else root el observablewrappersubscribe iconget mediangsvg svg gt rootappendchild svg directive depends turn depends using tests resolve deps run tests js import asynctestcompleter testcomponentbuilder aftereach beforeeachbindings beforeeach describe expect inject import dom import observablewrapper import injector bind component view mockbackend mockconnection connectionbackend baserequestoptions response http import isnativeshadowdomsupported commonshadowdom import iconstore appservices import logo appdirectives const logoglyphhtml export function main describe logo gt var injector injector var backend mockbackend var response component selector test view directives logo class test constructor problem never gets triggered mock response thinking may instance get one thus subscribe right backend connections hard time figuring solve issue ps entire code viewed easily cloned tested locally", "num": "3530", "d": "8/2015"}, {"title": "angular broke existing async pipe", "body": "really sure bug witnessed new breaking behavior since latest basic filter pipe defined js import pipe pipefactory nullpipefactory import pipes export class filterpipe implements pipe supports array return arrayisarray array ondestroy transform values args return args values valuesfilter function object return objectkeys object function key return string object key tolowercase indexof string args tolowercase create factory since create instance binding stateful pipes export class filterfactory implements pipefactory supports array boolean return arrayisarray array create ref pipe return new filterpipe since templates angular async passing value nullpipefactory value supported export var filter new filterfactory new nullpipefactory jade template like promise returned call get new intermediate object deal properly getting array breaks", "num": "3529", "d": "8/2015"}, {"title": "angular alpha error loading routerdevjs", "body": "hello changing app alpha alpha tried load would nt work produced following error message message indicates stems following line code perused rest files see retrieveglobal along prepareglobal defined file never used correct wrong file meant people writting code spec writing code anyone stumbled upon yet one problem best regards andr\u00e9", "num": "3528", "d": "8/2015"}, {"title": "doc links broken keyvaluechanges", "body": "doc links doc previously removed please update api docs mention keyvaluechanges see marking throws api doc errors", "num": "3527", "d": "8/2015"}, {"title": "dts files updated definitelytyped", "body": "jelbourn maybe", "num": "3526", "d": "8/2015"}, {"title": "optional routeparams", "body": "angular router support optional route params id syntax similar functionality new router", "num": "3525", "d": "8/2015"}, {"title": "inconsistencies api names", "body": "interfaces http inconsistent variables start capital letter http inconsistent test inconsistent variable allcaps eg test may wrong constants start lowercase letter eg functions exported var thus appear functions start uppercase lowercase test inconsistent functions begin initial lowercase letter innercap test inconsistent see list classes asof", "num": "3524", "d": "8/2015"}, {"title": "component view content projected wrong place", "body": "component template looks like html import package used demo looks like html progresslinear demo determinate primary determinate accent buffer see rendered output example bar looks like instead output looks like view component project completely wrong place see bug action pull branch run visit", "num": "3521", "d": "8/2015"}, {"title": "need separate dts file separate modules", "body": "forms http tests related", "num": "3520", "d": "8/2015"}, {"title": "docs interfacesclasses nt show types", "body": "generated docs typescript files nt show type class interface members", "num": "3519", "d": "8/2015"}, {"title": "expose libraries lib", "body": "currently exposes libraries convention private dart currently prevents us generating api docs material components", "num": "3518", "d": "8/2015"}, {"title": "implement ngupgrade", "body": "", "num": "3517", "d": "8/2015"}, {"title": "formbuilder defined alpha", "body": "playing formbuilder got following error message uncaught referenceerror formbuilder defined wrong code based fbts import inject import component view bootstrap import formdirectives formbuilder controlgroup component selector myformbuilder viewinjector formbuilder view directives formdirectives template demo form sku component controller class myappcomponent myform controlgroup bootstrap myappcomponent fbhtml systemimport fb", "num": "3515", "d": "8/2015"}, {"title": "use instead", "body": "maybe always use short syntax like", "num": "3514", "d": "8/2015"}, {"title": "refactor rename urlsearchparams something else", "body": "tl dr rename discussed jeffbcross would wise rename class considering behaviour differs whatwg version interface naming differently could help minimize confusion using api ideas missing leading maybe standing family interfaces derived behaviours discussed may agree disagree include following explicit method think would valuable propose editors whatwgurl whatwg future accept proposal like may possible deprecate remove inangular urlsearchparams rely native implementation instead future something semantic issue tab atkins jr nt keen fact sometimes want merge appending existing values multimap behaviour sometimes want replace existing values map behaviour nt believe value providing way specify schema two methods would certainly require explicit though implicitly merging requestoptionsmerge rather whatwg strategy replacing original query entirely currently possibly future urls associated urlsearchparams object possible implicitly merge way even whatwg version object used may thoughts suggestions welcome", "num": "3513", "d": "8/2015"}, {"title": "remove usage int use number", "body": "think leftover dartcompatibility atscript longer needed", "num": "3511", "d": "8/2015"}, {"title": "benchmark generator", "body": "create tool generates apps given app descriptor tool used emulate specific usage patterns apps large number components small apps tableheavy views deep hierarchies multiapps measure application load time eg long function take measure generated code size proposal application descriptor yaml file example yaml toplevel component entrypoint shell component shell name component class element shell template nestinglevel indicates many levels deep node appear nestinglevel whether node guarded conditional eg ngif branch number property bindings node props nestinglevel branch props template node name begins capital letter nested component screenheader props node name begins small letter plain html element div many times repeat node note different branchrepeat repeat template screenheader props div nestinglevel whether node conditionally repeated eg ngfor branch repeat screenheader template div nestinglevel repeat", "num": "3510", "d": "8/2015"}, {"title": "remove unnecessary wrapper classes replace fa\u00e7ades", "body": "see wrapper slaying list", "num": "3509", "d": "8/2015"}, {"title": "binding error hostproperties null", "body": "say create component run component get error decent part seems like actually providing name component", "num": "3506", "d": "8/2015"}, {"title": "make viewencapsulationnone default component behavior", "body": "say component like used template like html mdslider color red developer never touched shadow dom fact nt work frustrating mystery given state shadow dom draft lukewarm reception emulation optin feature", "num": "3505", "d": "8/2015"}, {"title": "forms twoways ngmodel sometimes fail update field value", "body": "set ngmodel property input field object value accessed properties array field value sometimes updated instance imagine following model setup form template like html locale locale description formmodeldescriptiontextmap formmodellocale formmodellocale field updated onlocaleselected locale function first input field correctly show updated locale value second one sometimes fail update locale description text last div correctly updated well observed different nonpredictable behaviour following cases object property exist model property returns undefined exists mapped undefined value input field noticed model always gets updated enter value field fails displayed correctly changing locale debugging noticed ngmodel viewmodel field already still contained new value although changepreviousvalue correct ispropertyupdated returned false view didt receive update", "num": "3503", "d": "8/2015"}, {"title": "test service depends http", "body": "hard time figuring test service dependency simple service js import injectable inject http injectable export class iconstore constructor inject http private spec js import asynctestcompleter aftereach beforeeach describe expect inject spyobject import injector bind http mockbackend connectionbackend baserequestoptions response responseoptions import iconstore icon class spyobserver extends spyobject onnext function onerror function oncompleted function constructor super thisonnext thisspy onnext thisonerror thisspy onerror thisoncompleted thisspy oncompleted export function main describe iconstore gt var injector injector var store iconstore var backend mockbackend var baseresponse keep getting inject instead way suggested docs longer get error actually make sure wo nt fail want mock backend", "num": "3502", "d": "8/2015"}, {"title": "resolveandcreate exist injector angulardts", "body": "seems like static method present definitelytyped typings angulardts", "num": "3499", "d": "8/2015"}, {"title": "limitto pipe lower optional upper bound", "body": "allow multiple limitto throws following error use case pagination directive listed items must two values array", "num": "3497", "d": "8/2015"}, {"title": "feat router provide default alias route based component type name", "body": "via igorminar", "num": "3496", "d": "8/2015"}, {"title": "requires css listed dependencies", "body": "uses npm modules part npm package dependencies issue using node hack solve require dependency module falls apart someone tries use module versions install mymodule anymore means longer solved adding packagejson issues adding dependencies never used browser", "num": "3495", "d": "8/2015"}, {"title": "change", "body": "caused regression dart output incorrect way use must predefined constant cc jelbourn", "num": "3494", "d": "8/2015"}, {"title": "implement imagedemo example dart", "body": "", "num": "3493", "d": "8/2015"}, {"title": "build webworker files libwebworkerdts", "body": "typescript provides libworkersdts using webworker files instead libcoredts since correctly types webworker environment implement need modify toolsbroccolibroccolitypescript accept webworker argument options use correct defaultlibfilename webworkers need modify broccoli builds compile webworkersworker directory separately", "num": "3492", "d": "8/2015"}, {"title": "routersubscribe return streamsubscription instance", "body": "currently returns despite calling instead already returns easy fix ref", "num": "3491", "d": "8/2015"}, {"title": "docs show output examples", "body": "modify dgeni documentation generation implementation shows rendered output next example would extremely useful guide angular component library working", "num": "3490", "d": "8/2015"}, {"title": "allow pseudo keywords getters dart transformer", "body": "transformer currently nt allow property names like pseudo keywords nt tried fix might require changing follows cc kegluneq", "num": "3489", "d": "8/2015"}, {"title": "optional parameter router may cause problems", "body": "problem maybe defined parameter routeconfig myappcomponent use exception thrown reasons routeregistryts code generate null response since uses get route name however corresponds parameter routedefinition optional may defined exception comes missing somethings", "num": "3488", "d": "8/2015"}, {"title": "pipesextend bootstrap method", "body": "looks like possible declare new pipe bootstrap method see bit weird place declare everything used entire app want pipe available everywhere thinking would right place declare like", "num": "3485", "d": "8/2015"}, {"title": "npm install operation timed", "body": "running npm install freshly cloned angular get npm install angular preinstall userskitkatdocumentsdevangular node toolsnpmchecknodemodules purge npm dependencies stale unknown state purging npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcomalexeagletypescriptgit cloning bare repository npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcomalexeagletypescriptgit fatal read error operation timed npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcommlavalcssgit cloning bare repository npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcommlavalcssgit fatal read error operation timed npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcomigorminarbroccolifunnelgit cloning bare repository npm err git clone templateuserskitkatnpmgitremotestemplates mirror git githubcomigorminarbroccolifunnelgit fatal read error operation timed npm err darwin npm err argv node usrlocalbinnpm install npm err node npm err npm npm err code npm err command failed git clone templateuserskitkatnpmgitremotestemplates mirror git githubcomalexeagletypescriptgit npm err cloning bare repository npm err fatal read error operation timed npm err npm err npm err need help may report error npm err npm err please include following file support request npm err userskitkatdocumentsdevangularnpmdebuglog replace git protocol npmshrinkwrapcleanjson npmshrinkwrapjson", "num": "3484", "d": "8/2015"}, {"title": "routing error", "body": "im getting following error following wrong", "num": "3483", "d": "8/2015"}, {"title": "corejs include bootstrap module", "body": "npm install version import bootstrap error import bootstrap correct", "num": "3482", "d": "8/2015"}, {"title": "feat router provide overridable historystrategy service", "body": "would allow ionic populate history form localstorage server completely override behavior back button throughout app", "num": "3481", "d": "8/2015"}, {"title": "feat router perrouter pushpop history api", "body": "based meeting ionic team sounds like main thing ionic needs missing router", "num": "3480", "d": "8/2015"}, {"title": "automate creation presubmit branches", "body": "discussed design mhevery could speed angular developers bit reacting creation label idea run small appengine app register webhook github issue modification event modification merge label added added trusted party core contributor andor maybe googler create presubmit branch pointed sha approved way simple http api call github creating ref currently create move branch ref", "num": "3478", "d": "8/2015"}, {"title": "prevent situation commits master break downstream projects", "body": "would like extend current presubmit setup also run tests tap could make job syncmaster easier breaking changes would identified resolved lot earlier minimum want report results back committer know downstream breakage exists start fix next step improve avoid commits going master mhevery designed bit currently best guess presubmit branch posts dist folder gcp custom process running internally would fetch create cl test tap submit pass change breaking core team member patch cl fix downstream breakages submit submit changes would automatically merged master source truth master lagging great design amount manual stuff maintain alternative keep different github repo call containing dist folder selected subset presubmit branch well master travis update soon build succeeds nt need run tests could maybe use standard tooling like moe rest merging testing however problem ca nt rebased like original sources hard keep uptodate respect moving master", "num": "3476", "d": "8/2015"}, {"title": "running unit tests new html document creates failures nonchrome browsers", "body": "weeks ago started running unit tests new html document see works fine chrome creates problems browsers biggest one safari events dispatched document causes eventsbased unit tests fail also generates one failure firefox firefox default behaviour event applied eg checkbox checked click text selection feature work moving back real dom nt seem degrade performances means loosing isolation brought new document seems needed able integrate browsers ci", "num": "3475", "d": "8/2015"}, {"title": "initial changedetection working dynamiccomponentloader", "body": "changes newly created components dynamiccomponentloader detected angular version easy example find indexts apphtml msg appts component selector app injectables dynamiccomponentloader injector elementref view templateurl srccomponentappapphtml styleurls srccomponentappappcss export class app provided bar string loaded apphtml foo still displayed change detected soon first event triggered component bar msg shows seems issue within call createloginview app constructor bootstrap promise apphtml displays correct bar msg something wrong thx", "num": "3474", "d": "8/2015"}, {"title": "arbritrary bootstrap import rewritten", "body": "application import ends bootstrapdart rewritten boostrapstaticdart import internal", "num": "3473", "d": "8/2015"}, {"title": "support decorators", "body": "im transpiling code babel uses decorators proposal current code transpiled problem annotation function gets invoked return possible check annotation constructor called new keyword returns function puts onto classes annotation property way angular would support annotations proposal also", "num": "3470", "d": "8/2015"}, {"title": "nt push dart files needed files npm", "body": "imo add proper npmignore file push npm minimal set files filter unnecessary stuff", "num": "3469", "d": "8/2015"}, {"title": "dartdocgen process fails due multiple exports renderelementref", "body": "see logs never made pub looks like renderelementref exported renderdart coredart culprit resolve", "num": "3466", "d": "8/2015"}, {"title": "question getting null rendercompiler", "body": "hey looking load dynamically templates think found good way null blocking way code far javascript import renderapi let render new renderapirendercompiler let customview new renderapiviewdefinition templateabsurl testhtml let compiled rendercompile customview c gt use appviewmanager load compiled view host component throws read property null even makes sense think line returns null directly see line used file nt think case returns null plunkr see missing suggestions thanks advance", "num": "3465", "d": "8/2015"}, {"title": "unhelpful error message component missing selector", "body": "omit selector completely get use empty string selector get error cases captured single check tells user something like", "num": "3464", "d": "8/2015"}, {"title": "remove viewsplitter precompiled apps", "body": "run part transformer runtime", "num": "3462", "d": "8/2015"}, {"title": "remove styleinliner precompiled apps", "body": "runs precompilation", "num": "3461", "d": "8/2015"}, {"title": "remove ast amp parser classes precompiled apps", "body": "classes used precompiled mode add code size bootstrap time", "num": "3460", "d": "8/2015"}, {"title": "remove dynamicchangedetector precompiled apps", "body": "used precompiled apps adds code size", "num": "3459", "d": "8/2015"}, {"title": "bundle import package separate modules", "body": "tl dr skip table bottom see suggesting move things around partial backlog based proposal discussion done x jeffbcross refactor move http module sibling x jeffbcross fix typings typings template make module name end file dynamic x jeffbcross feat typings bundle typings able declare references x jeffbcross feat package add typescript field typings information x feat bundles include bundles npm distributions x cancelled refactor di move di toplevel module x cancelled refactor facade move facade separate toplevel module x cancelled feat dist include core modules npm dist inprogress jeffbcross chore rearrange sources better reflect npm package import paths jeffbcross chore change bundle rules generate one sfx module several minimal modules unscheduled export type definitions testlib docs api reference also include globalambient object names included sfx bundles chore zone add zonejs bundles npm distribution goals simple predictable consistent package installation consumption experience endusers minimal logical bundles production use router bundle core bundle http bundle full bundle deps etc pave path toward eventually able separate modules separate repositories independent development lifecycles maximum symmetry dart javascript publishing naming structure mostly logical import require paths end users without think hierarchy relationships modules import http angular require angularrouter use cases user wants create quick code sample plunker user wants create production app build process reasonable byte size user wants create production app proprietary build process creates minified bundles user wants create production app server using systemjs loader bundles minified modules loaded needed characteristics modules likely used outside angular app without dependency angular runtime requirement useful runtime utility thirdparty angular libraries primarily tool useful app runtime module used outside required useful plugins tooling forms facade router change detection zonejs dependency injection http websocket storage etc tactical benchpress material test lib ngupgrade universal react native renderer workers proposal required tooling becomes subdirectory gets bundle required moved toplevel directory ie bundles pushed codeangularjsorg runtime modules currently part core repo published inside package npm pub zonejs also added npm dist module npm package name pub package bundle bundle global primary runtime js import namespace target source home repo path corejs ngcore forms formsjs ngforms facade router routerjs ngrouter change detection zonejs zonejs zonejs ngzone angularzonejs dependency injection di http nghttp nghttp websocket storage etc ng js ng angularangularmodules tactical tactical tacticaljs ngtactical angulartactical benchpress benchpress benchpress angularangularmodulesbenchpress material ngmaterial test lib testlibjs ngtestlib ngupgrade upgradejs ngupgrade universal angularuniversal react native renderer angularreactnativerender web workers webworkersjs ngwebworkers angularwebworkers primary import namespaces used context angular app opposed used independently angular example bundle used nodejs environment bundles bundles exported includes bundles corejs formsjs routerjs webworkerjs zonejs extensions bundle published codeangularjsorg npm bundles folder npm package published codeangularjsorg js dts typings separate folder npm distribution jsmap minjs using uglify eventually using angulartsminify devjs runs dev mode devjsmap testingjs testingjsmap testingdts bundle also get sfx version include dependencies like rx reflectmetadata traceurruntime export global object bundles include testing utilities mocks respective module coretestingjs include bulk testing utilities leaving testing bundles mostly include mocks", "num": "3458", "d": "8/2015"}, {"title": "typescript syntax errors detected tests run", "body": "certain typescript errors detected reported unit tests run testunitjs example create following class notice lack constructor body error warning case weird things happen time ts playground correctly reports constructor implementation missing would great errors caught early possible think saw cases syntax errors reported properly provide precise examples atm", "num": "3457", "d": "8/2015"}, {"title": "validator relies multiple form fields", "body": "possible create validator use multiple values decide field valid eg customer preferred contact method email email field required thanks", "num": "3453", "d": "8/2015"}, {"title": "change angularjs displaying data document class friendsservice defined appinjector", "body": "according issue angularangular friendsservice defined appinjector irritating resolve kind error started expect resolve kind issue", "num": "3452", "d": "8/2015"}, {"title": "build broken due wrong typings generated enums", "body": "breaks build since generated broken typings ex", "num": "3450", "d": "8/2015"}, {"title": "support alternative", "body": "hi talked victor think need alternative syntax binding bubbleevents currently onevent x alternative event x alternative event x wishes manfred p perhaps onbubbleevent x would good alternative", "num": "3448", "d": "8/2015"}, {"title": "run vdom", "body": "new version could fast super big projects also scope works perfect behind keep super simple possible thanks", "num": "3445", "d": "8/2015"}, {"title": "mistake documentation", "body": "hi small mistake documentation viewannotation class definitions templateurl template messed switched br dima", "num": "3444", "d": "8/2015"}, {"title": "nodes removedreinserted simply shifted", "body": "reports removes reinserts nodes indices shift make sure", "num": "3442", "d": "8/2015"}, {"body": "think great would love see happen clear due way dart transformers work", "d": "8/2015"}, {"body": "use canreuse onreuse hooks", "d": "8/2015"}, {"body": "hum makes sense need check changing params tell reuse nt way directive though right nt think could talking either words directive without route associated components also directives", "d": "8/2015"}, {"body": "matsko talking think important feature want provide different options debouncing url updates pushing history state changes cghislai right implement canreuse decide whether reinstantiate", "d": "8/2015"}, {"body": "works correctly requires container provided", "d": "8/2015"}, {"body": "vahidalvandi repository angular might want file issue give hint deprecated angular try go", "d": "8/2015"}, {"body": "please read contributing guidelines pascal said types questions illsuited github thanks", "d": "8/2015"}, {"body": "hello youtsea please ask questions repo instead smile", "d": "8/2015"}, {"body": "oh thanks flushed", "d": "8/2015"}, {"body": "repo repo", "d": "8/2015"}, {"body": "emirdeliz angular material ready used production yet therefore exposed npm package words nt use angular material yet unless want play contribute", "d": "8/2015"}, {"body": "ok pascalprecht development program utilizing material design lite result similar material css framework right anyway go contribute terminated current project thank", "d": "8/2015"}, {"body": "yes material design lite pure css implementation md spec nt forget close issue", "d": "8/2015"}, {"body": "ok thank", "d": "8/2015"}, {"body": "btw material design lite pure css also javascript part especially use register html element via js eg input fields", "d": "8/2015"}, {"body": "javascript components yes nt want go details sure mean registering html elements using angular tho", "d": "8/2015"}, {"body": "see use mdl dynamic websites material design lite automatically register render elements marked mdl classes upon page load however case creating dom elements dynamically need register new elements using upgradeelement function use mdl template call upgradeelement function", "d": "8/2015"}, {"body": "maku interesting nt know well think angular shape one actually use angular material shape one could one thanks pointing", "d": "8/2015"}, {"body": "pascalprecht yeah would good exercise make reusable components based mdl maybe enough time think angular material design really far away", "d": "8/2015"}, {"body": "pr welcome", "d": "8/2015"}, {"body": "hey wardbell known case see", "d": "8/2015"}, {"body": "ericmartinezr right problem browser lowercasing property attribute names compiler runs ca nt prevent lowercasing happening current compiler got convention snakecase converted camelcase particular case could access mixedcase variable names good news compiler reworked operating dom parsed browser html text lowercasing wo nt happening options handling reporting situation going close one known issue better solution pipe mhevery tbosch plan new textbased compiler handle mixedcase attribute names box still want mimic browser behaviour", "d": "8/2015"}, {"body": "document find may suggest reported error either possibility perhaps better link article typical binding resolution failures solutions", "d": "8/2015"}, {"body": "rolandjitsu got impression making life harder necessary putting deliverables script tag real point downloaded dynamically via systemjs need framework code anyways quick setup demonstrated plunker also check buildtime compilation examples atscript typescript", "d": "8/2015"}, {"body": "pkozlowskiopensource exact thing top post load lib script tag http router figure behaves way", "d": "8/2015"}, {"body": "rolandjitsu sorry sure follow see plunk linked repos using bundles npm deployed npm please share entire plunk modify mine need help better yet let move discussion gitter seems like using systemjs pb", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "looks like bindingbuilder class duplicated bundles changing line following also trick guess bundles built embedded conflicting one", "d": "8/2015"}, {"body": "jeffbcross looking issue detail come looks like http sfx build done seems undone alpha released sfx package wich causing problem reported issue seen undone close issue going come back near future thanks edit looks like cause issue", "d": "8/2015"}, {"body": "alfonsopresa oh wow thank research vote keeping open fix landed", "d": "8/2015"}, {"body": "thank response pascal keep open", "d": "8/2015"}, {"body": "hey alfonsopresa thanks opening issue sorry trouble nt thoroughly test http sfx bundle added sfx http bundle exist future releases since already fixed master go ahead close", "d": "8/2015"}, {"body": "jeffbcross problem problems apart really liked thinking behind two separate bundles though might strategy thing would extended modules like router example wish could give separation modules another chance latter first things first course btw might also want close quite sure also caused two separate bundles thanks", "d": "8/2015"}, {"body": "reproduce templatedrivenform example looks similar could please provided details environment ideally plunker", "d": "8/2015"}, {"body": "confirm issue happening also string interpolation nt work keeps throwing title error adding following code including sfx files trick", "d": "8/2015"}, {"body": "got impression trying use dom facade utility library afaik intent abstraction queering dom tests use dom api directly even jquery", "d": "8/2015"}, {"body": "pkozlowskiopensource see use", "d": "8/2015"}, {"body": "rolandjitsu see using methods safely replace builtin browser native implementations facade nt add anything simple proxy going go ahead close one nt believe want dom facade public api testing nt provide value tests would increase api surface", "d": "8/2015"}, {"body": "pkozlowskiopensource worried native implementations fail use intended fix thanks clearing", "d": "8/2015"}, {"body": "probably facades abstract js dart differences nt want business providing general helper functions already plenty libraries generic manner facades minimal internal use nt want grow sth generic add many bytes framework", "d": "8/2015"}, {"body": "pkozlowskiopensource makes sense curious plans", "d": "8/2015"}, {"body": "probably put something directive list nt exist time due missing misspelled import ex import imnothere somewhere view directives imnothere hard say without context please try support forum types questions want keep github issues bug reports feature requests thnx", "d": "8/2015"}, {"body": "hey repo looking one", "d": "8/2015"}, {"body": "sorry", "d": "8/2015"}, {"body": "cexbrayat could please share plunker minimal reproduce scenario ca nt reproduce simple scenario", "d": "8/2015"}, {"body": "check console see error see plunk use case even minimal check console see error change selector error disappeared", "d": "8/2015"}, {"body": "fact nothing directives selectors error seeing comes using event handler empty event handling expression minimal reproduction believe got issue already let find one", "d": "8/2015"}, {"body": "ok duplicate", "d": "8/2015"}, {"body": "routerrecognize returns promise need handle return get instruction component", "d": "8/2015"}, {"body": "thanks brandon closing issue way instructioncomponent property return componentinstruction know get instance current component talking sample", "d": "8/2015"}, {"body": "get component accessing componentinstructioncomponentcomponenttype", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "love apis could used make decent browser extension extending batarang", "d": "8/2015"}, {"body": "yjbanov sounds good please use global object consistent etc", "d": "8/2015"}, {"body": "looks like fixed via right alexeagle btford", "d": "8/2015"}, {"body": "yes", "d": "8/2015"}, {"body": "tried nt work class binding primary element", "d": "8/2015"}, {"body": "works following js component selector ngdialog host class dialogcontainer view templateurl dialoghtml styleurls dialogcss encapsulation viewencapsulationnone component controller class dialog title string constructor thistitle dialog", "d": "8/2015"}, {"body": "danicomas bit hard follow problem struggling saying think found bug got general support questions need clarification later case could please try use gitter channel first support requests believe bumping bug could please share minimal reproduce scenario using plunker similar thnx", "d": "8/2015"}, {"body": "pkozlowskiopensource nt know bug first comment second class first element binded child class child elements yes html rendered html kk css dialogcontent border solid black height width margin auto background gray dialogcontainer position absolute width textalign center top last comment found solution adding encapsulation attribute none html rendered html kk css dialogcontent border solid black background gray height width margin auto dialogcontainer position absolute width textalign center top nt know correct viewencapsulationnone causes elements binded solution binded without encapsulation think", "d": "8/2015"}, {"body": "think put css class host attribute ngdialog component added tag dom shadowing hide component view place dialogocntainer css rules parent component ngdialog work keep style component scope wrap template", "d": "8/2015"}, {"body": "cghislai put parent element nt work probably binding ngcontent componentid angular nt replace attribute wrap result html modal need position absolute moment think best way fix solution", "d": "8/2015"}, {"body": "found way property host js component selector ngdialog host class dialogcontainer view templateurl dialoghtml component controller class dialog title string constructor thistitle dialog", "d": "8/2015"}, {"body": "cc vsavkin igorminar vicb", "d": "8/2015"}, {"body": "sound good like idea letting parent know stuff changed nt think providing number changes useful sufficient know anything changed go boolean", "d": "8/2015"}, {"body": "seen pr get names actually mean sure like mean different prefixes also find confusing remind", "d": "8/2015"}, {"body": "vicb something happen letting know nt care need something right letting know passed certain point would sound ambiguous makes clear view changes processed still time rename ideas", "d": "8/2015"}, {"body": "mhevery desciption nt get difference vs doc says first check really think everywhere imo confusing event name see impression request checking something would checked otherwise fwit ca nt remember ever seen event prefixed vs would satisfied would also use instead", "d": "8/2015"}, {"body": "see confusion comes allow time come better proposal", "d": "8/2015"}, {"body": "descriptive children view content thoughts", "d": "8/2015"}, {"body": "yep thoughts enums members actually interface names interface define function name lowercase may appropriate would accurate tend think would better especially context also fall back structural type checking tsjs method names probably generic might lead collision proposal oninit ondestroy ondirectiveinit ondirectivedestroy docheck checkbindings misc notes nt comment docheck need rework rename viewlistener methods consistent onviewcreated vs viewcreated", "d": "8/2015"}, {"body": "vicb yes let rename viewlisteners method take yes comment docheck needs work sorry missed also create pr", "d": "8/2015"}, {"body": "able implement work take look specs see action still lot work across codebase best way keep check issues tagged specific bugsproblems filing issues best way influence gets worked next", "d": "8/2015"}, {"body": "also follow specifically tracks progress router", "d": "8/2015"}, {"body": "fixed already master need wait next alpha release day", "d": "8/2015"}, {"body": "thanks verify close issue", "d": "8/2015"}, {"body": "fixed latest drop", "d": "8/2015"}, {"body": "like allow us access children without knowing template actually looks like reference local template variable surely nice convenient way get hold element instance however also means component know identifier used template addition soon change name local variable component code wo nt work anymore unless change like idea think somehow try keep things decoupled possible", "d": "8/2015"}, {"body": "great point nt thought think natural separation user components library components essentially user writes controllerstyle components interact blackbox library components squarely user component space make easier natural query", "d": "8/2015"}, {"body": "tbh really nt know make easier without introducing coupling component view option would introduce new decorator specifically meant used query local template variables however nt really bring additional value except see looking component code relies template vars could help little bit refactoring things mhevery thoughts", "d": "8/2015"}, {"body": "vsavkin rkirov comment latest thinking removing viewquery constructor injection setter injection supporting directly injecting oneof items", "d": "8/2015"}, {"body": "mlynch thanks detailed issue take look proposal moving query injectables removing array indirection singular cases make lot natural javascript component selector gallery view template gallery export class gallery viewchild carousel carousel carousel loadnewslides work thiscarousel long called afterviewinit finer point bring already support querying var bindings see pascal said benefits querying directive types var bindings nt unique template ask work putting interesting child objects grabbag object would unfortunate ts users lose type information type destruction singular objects implemented using custom setter unboxed using contentchildren listen changes", "d": "8/2015"}, {"body": "anybody", "d": "8/2015"}, {"body": "forforeach greatly maximize chances answer trim plunker absolute minimum needed reproduce pb substantial atm please remove stuff essential ex routing trigger pb", "d": "8/2015"}, {"body": "first thanks response secondly nt see squeeze plunkr place think number validation directives remove stay updated plunkr addition explain happens validation directives nothing need order set different validators input two pages reveal validation directives views form directives ngformcontrol binding creates one control binds appropriate input app controller includes small navigation pannel routeroutlet order switch pages scenario said visit second page twice second entrance could able see error console reason remove routing error happens second navigation happens validation directives input thus navigate first page nt get error", "d": "8/2015"}, {"body": "forforeach thnx update", "d": "8/2015"}, {"body": "issues closed move angular repo", "d": "8/2015"}, {"body": "results code size improvements removing forms intl pipes numbers currency date long stack traces uri dynamic change detector minified ungzipped minified gzipped minified ungzipped minified gzipped breakdown reliance dart core libs dropped angular code dropped dropped deps libs including able drop large chunks code yield compact better treeshakable output conclusion gets us pretty close goal start low hanging fruit make forms api optional make intl pipes optional make long stack traces optional remove dependency bigger changes would removal dynamic change detection template compilation done part another round code size analysis precompilation implemented good chance combined changes get us target better", "d": "8/2015"}, {"body": "nice jsts reused", "d": "8/2015"}, {"body": "bradlygreen js bit flux jeffbcross done splitting code bundles right angular minified ungzipped hello world would plus user code ie identical current dart situation likely change drastically unbundling", "d": "8/2015"}, {"body": "easier pr assuming usecase either ab testing hot component reload different user permission", "d": "8/2015"}, {"body": "yea wondering would fit components going precompiled build process usecase basically hot component reload general extensibility though cases seem applicable", "d": "8/2015"}, {"body": "possible add component without root elementref move", "d": "8/2015"}, {"body": "wisesascha hard impossible say pb based description believe bug please share minimal plunk demonstrating saw getting support gitter hopefully managed sort feel free reopen minimal live reproduce scenario", "d": "8/2015"}, {"body": "cc vsavkin seems like yet possible since render compiler still calls compileview missing something", "d": "8/2015"}, {"body": "waiting angular compile pipeline refactor", "d": "8/2015"}, {"body": "ya angular roadmap update angularucom san francisco weekly meeting notes watchattend angularconnect", "d": "8/2015"}, {"body": "thanks look week", "d": "8/2015"}, {"body": "part", "d": "8/2015"}, {"body": "hack introduced", "d": "8/2015"}, {"body": "easy seems since tests need wait angular nt waiting done testability api need way find particular test needs wait tbosch suggestion achieve generic way please ie without setting flag test", "d": "8/2015"}, {"body": "think examplesbenchmarks nt use create registry manually examplebenchmark integration works tests", "d": "8/2015"}, {"body": "cc alexeagle mhevery", "d": "8/2015"}, {"body": "jeffbcross pleases nt add one component issue confuses dashboard use case lets chat dup", "d": "8/2015"}, {"body": "mhevery good know component nt seem like dupe pointing bug using assignments", "d": "8/2015"}, {"body": "agree igorminar nt see reason config migration newer systemjs generally nt think business providing system config going send pr remove", "d": "8/2015"}, {"body": "quick question using new version systemjs nt modules registered js extension example system system pkozlowskiopensource", "d": "8/2015"}, {"body": "jpsfs true never systemjs moves urls module modifiers nt matter much bundled version since everything preloaded http ajax request done runtime resources could register things js extension would nontrivial current setup repo imports shared ts dart files", "d": "8/2015"}, {"body": "added line original goal bundle make getting ground quick painless possible allowed demoes zero jump straight replace version demo users nt feel like need learn systemjs configuration options assumption demos need wrong", "d": "8/2015"}, {"body": "rkirov see point trying make easier users pb see approach enforcing config impacts dependencies everything goes systemjs afraid might mess things experienced systemjs users adding would prefer angular nt try enforce config appglobal wide loader", "d": "8/2015"}, {"body": "thing bundle usable even without systemjs case config nt anything approved pr remove causes friction elsewhere need find different solution", "d": "8/2015"}, {"body": "pkozlowskiopensource expert systemjs please correct wrong modules registered js using defaultjsextension true systemjs try look modules extension find actually think happening right remove problem describe appear example trigger search defaultjsextension true flag registered nt use js config vote would generate bundle js extension register something like", "d": "8/2015"}, {"body": "jpsfs nt think works like systemjs first consult internal registry see dependency dependency registered systemjs try fetch comes play run actual problems somewhere could share plunk demonstrating", "d": "8/2015"}, {"body": "pkozlowskiopensource yes right fact dependency named registered try reproduce plunk asap", "d": "8/2015"}, {"body": "igorminar sounds good lets revisit end remind people set", "d": "8/2015"}, {"body": "think using defaultjsextensions discouraged looking stuff week thu aug rado kirov notifications githubcom wrote igorminar sounds good lets revisit end remind people set defaultjsextensions true reply email directly view github", "d": "8/2015"}, {"body": "use instead", "d": "8/2015"}, {"body": "please provide exception repro case think fank probably pointed root cause", "d": "8/2015"}, {"body": "think missunderstanding examples means set attribute dom reflect property set well tells angular set property evaluation case bypass attribute useful dom properties matters short hand common form interpolation wish set popertey literal work expected yes go dashcase html attributes case insensitive discussed", "d": "8/2015"}, {"body": "yes issue", "d": "8/2015"}, {"body": "wanted know correct way thanks mhevery", "d": "8/2015"}, {"body": "put plunker repro case", "d": "8/2015"}, {"body": "probably linked", "d": "8/2015"}, {"body": "mhevery plunker times called load async request", "d": "8/2015"}, {"body": "danicomas thanks plunker analysis expected called consequence point set yet seems compiler creates promise since promise created within digest delayed since promise resolutions digest runs unexpected one digest happens account reason chrome dev tools show promise call step seems somehow detects end changes twice double executes digest expected called consequence vicb since know better zones could look going definitely one many digests going", "d": "8/2015"}, {"body": "definitely look actually start looking last week bootstrap getting refactored probably wait unless takes much time", "d": "8/2015"}, {"body": "looks reasonable vsavkin thoughts could create easy repro", "d": "8/2015"}, {"body": "mhevery plunker could see ngcontrol controlpath problem causes error go console dev tools could see details", "d": "8/2015"}, {"body": "fine working issue missing missing around", "d": "8/2015"}, {"body": "closing favor", "d": "8/2015"}, {"body": "right property label attribute use bind attributes", "d": "8/2015"}, {"body": "thanks pkozlowskiopensource", "d": "8/2015"}, {"body": "afaik injecting element ref type already type di elements adamdbradley could elaborate specifically requesting", "d": "8/2015"}, {"body": "pascalprecht really shortcut make easier get ahold native element instead could would continue job still provide", "d": "8/2015"}, {"body": "really application vs render layer logic could imagine would introduce certain amount complexity support since would concrete interface probably wo nt work web worker env cases anyways work native element across component methods vs prolly worth complexity sure tbosch better person talk", "d": "8/2015"}, {"body": "passing eventmanager binding bootstrap method js var bindings bind eventmanager tofactory ngzone gt var plugins new customplugin new keyeventsplugin new mycustomdomeventsplugin return new eventmanager plugins ngzone ngzone bootstrap appcmp bindings", "d": "8/2015"}, {"body": "think better idea might pass renderer angular refactoring renderer methods like removeeventlistener element name callback providing renderer also special semantics someone sets property element overrriding element created overriding call every element template opinion special casing events right either user takes defaults wants full control angular dom fri aug pm victor berchet notifications githubcom wrote passing eventmanager binding bootstrap method var binding bind eventmanager tofactory ngzone gt var plugins new customplugin new keyeventsplugin new mycustomdomeventsplugin return new eventmanager plugins ngzone ngzone bootstrap appcmp bindings reply email directly view github", "d": "8/2015"}, {"body": "tbosch suggesting eventmanagerplugins nt right approach begin removed angular continue array event plugins expose public api new methods use case would covered point", "d": "8/2015"}, {"body": "yes suggesting eventmanagerplugins right approach remove extension point mon aug pm adam bradley notifications githubcom wrote tbosch suggesting eventmanagerplugins nt right approach begin removed angular continue array event plugins expose public api new addeventlistener removeeventlistener methods use case would covered point reply email directly view github", "d": "8/2015"}, {"body": "one", "d": "8/2015"}, {"body": "indeed thnx ericmartinezr closing duplicate", "d": "8/2015"}, {"body": "ran something like falcor past changedetectionpipesobservablepipets maintains reference strategy essentially states transform something different cause side effects strategy without subscription strategy subscription currentvaluereturnedvalue currentvalue returnedvalue different know create prevented similar cycle happening change returns new observable reference actually potential problem first state return returned value returned value dereferenced ondestroy pipe lifecycle rather observable reference lifecycle code rxpipe old way make pipe typescript export function isobservable obs return obs amp amp obssubscribe amp amp typeof obssubscribe function export class rxpipe ref changedetectorref promise promise latestvalue object latestreturnedvalue object immediatescheduler subscription observable pending constructor ref changedetectorref thisref ref thislatestvalue null thislatestreturnedvalue null thisimmediatescheduler null thissubscription null thisobservable null thispending null supports obs boolean return isobservable obs ondestroy void ispresent thissubscription thisdispose thislatestreturnedvalue null thislatestvalue null thispending null transform obs isblank thissubscription thissubscribe obs return thislatestreturnedvalue subscribe obs void thisobservable obs thisimmediatescheduler rxscheduler immediate thissubscription obs observeon thisimmediatescheduler subscribe value gt thisupdatelatestvalue value dispose void ispresent thissubscription thissubscriptiondispose thislatestvalue null thissubscription null thisobservable null thisimmediatescheduler null updatelatestvalue value void thislatestvalue value ispresent thisref thisrefrequestcheck ispresent thispending thisdispose let obs thispending thispending null thistransform obs workaround created ref order ensure value transform logic resolve cycle problem see back digest cycles since giving control bindings observablepromise new way manage bindings meteor uses might better way handle async bindings perhaps better introduce template syntax also related cc vsavkin", "d": "8/2015"}, {"body": "unfortunately works expected yes best user experience angular runs cd sees new instance promise every time point flag error nt promise resolves trigger new cd recreates problem way preventing flag always produces value fixed get proper error", "d": "8/2015"}, {"body": "nt understand ticket relates one trust got plan circle back later see status", "d": "8/2015"}, {"body": "kweheliye setup project using prebundled version http separate bundle", "d": "8/2015"}, {"body": "kweheliye http module available namespace instead maybe causes problem", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "file also get uploaded definitelytyped along currently referring one part npm package ai nt great", "d": "8/2015"}, {"body": "see issue", "d": "8/2015"}, {"body": "actually works expected interpolation would active view component outer component view set retrieved instance outer component makes sense", "d": "8/2015"}, {"body": "html body component body innerhtml removed view template way html file component define bare tag without using children node removed render later", "d": "8/2015"}, {"body": "yes solved going merge today", "d": "8/2015"}, {"body": "thnx report though", "d": "8/2015"}, {"body": "wooops typo good", "d": "8/2015"}, {"body": "matsko work landing api", "d": "8/2015"}, {"body": "hey stevenroose repo angulario", "d": "8/2015"}, {"body": "fixed change", "d": "8/2015"}, {"body": "jelbourn actually calls argument functions see source code details nt think lot closing issue feel free reopen feel like worth investigation", "d": "8/2015"}, {"body": "agree renaming problem use pushstate one happens serialize url hash think maybe better", "d": "8/2015"}, {"body": "last week agreed made change pushed presubmit", "d": "8/2015"}, {"body": "missing something cloned master unit tests angular router almost fail maybe early sounded like something could see", "d": "8/2015"}, {"body": "twhitbeck code artifact gets built", "d": "8/2015"}, {"body": "btford yes try getting errors tried running unit tests noticed largely failing got uptodate clone master", "d": "8/2015"}, {"body": "twhitbeck feel free file new issues whatever error seeing like keep discussion issue focused release concerns", "d": "8/2015"}, {"body": "priority wait kegluneq back", "d": "8/2015"}, {"body": "keertip show example present user code original implementation supported multiple directives removed review time least supported one see first review comment btw transformer code moved new link", "d": "8/2015"}, {"body": "sorry looks like example code code closing issue", "d": "8/2015"}, {"body": "able repro last typechecking change prior sha seems introduced", "d": "8/2015"}, {"body": "think understand issue previously files use shims included langdts references globalsdts used reference traceurruntimedts emit depend shims traceurruntimedts unreferenced subsequent incremental compiles think couple options change use target picks types always include traceurruntimedts compiler inputs transpiling mprobst thoughts", "d": "8/2015"}, {"body": "easy get compile angular codebase spent minutes trying make invocation typescript compiler compatible requires bringing many special configurations apply broccoli layer type checker happy think specialcase shim files incremental compile", "d": "8/2015"}, {"body": "current workaround could use make use elvis operator", "d": "8/2015"}, {"body": "works expected", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "sounds like expression really evaluates undefined give information exactly", "d": "8/2015"}, {"body": "pascalprecht updated first comment", "d": "8/2015"}, {"body": "pascalprecht tried href attribute nt happen", "d": "8/2015"}, {"body": "tested behaves chrome without angular executing code console javascript var imgel documentcreateelement img imgelsrc outputs imgelsrc undefined triggers imgelsrc null triggers imgelsrc request triggered looking seems like browsers least chrome string conversion find behavior debatable maybe makes sense file issue case workaround simple initialize data empty string write custom pipe null undefined string conversion use conditional exp", "d": "8/2015"}, {"body": "ngsrc directive controlled empty strings reason problem directly html attribute could make img directive duplicate code ngsrc however workarounds ok thanks pkozlowskiopensource", "d": "8/2015"}, {"body": "nt want something like ngsrc anymore binding properties also ensure escaping pawel would actually also expect end empty string predefining object dedicated properties nt sound like right solution using pipes kinda okay still expect work without anything additional providing expression want handle case vote opening issue fri aug daniel comas fern\u00e1ndez lt notifications githubcom wrote ngsrc directive controlled empty strings reason problem directly html attribute could make img directive ngsrc however workarounds ok thanks pkozlowskiopensource reply email directly view github", "d": "8/2015"}, {"body": "pascalprecht currently nt mechanism framework special setters could escape logic adding would allow us special casing ideal introduces new concepts code etc honestly must say find chrome behavior surprising would expect interpret null undefined empty string would great someone could check dom html spec say sure specified actually check behavior browsers", "d": "8/2015"}, {"body": "oh escaping actually meant value expression going assigned evaluated", "d": "8/2015"}, {"body": "pascalprecht sure got trying say last comment situation expression evaluates undefined setting property img element prop setter img element seems converting value string observe without angular involved", "d": "8/2015"}, {"body": "yea gotcha point ngsrc basically escapes evaluating interpolation done assigning attribute nt broken requests binds properties know yes real escaping also evaluated value gets assigned property evaluated also nt get broken requests despite fact request undefined might course broken url different issue", "d": "8/2015"}, {"body": "pkozlowskiopensource spec says string user agent update image data img element must run following steps otherwise element src attribute specified value empty string let selected source value element src attribute selected pixel density otherwise let selected source null selected pixel density undefined", "d": "8/2015"}, {"body": "sebastianm sepc src attribute property right", "d": "8/2015"}, {"body": "yes spec attribute", "d": "8/2015"}, {"body": "pkozlowskiopensource yes found nothing describes behavior property explicitly description fits code example empty string browser starts fetching src said honestly must say find chrome behavior surprising would expect interpret null undefined empty string also think current browser behavior useless someone file bug discuss", "d": "8/2015"}, {"body": "tried code pkozlowskiopensource following browsers chrome undefined request firefox undefined request microsoft edge undefined request opera classic undefined request good way would apply take consideration next browser updates looking solution inside framework case think pkozlowskiopensource pascalprecht sebastianm", "d": "8/2015"}, {"body": "mentioned subtlety issue making requests current workaround default initial value empty string probably good idea anyways would say interpolation gets default case empty string well code html", "d": "8/2015"}, {"body": "matter understand browser behavior actually null undefined resource get browser picky null undefined value translated null undefined another issue beginning angular correct wrong interpolation translated null undefined empty string since alpha translates null undefined respectively maybe something revisited sooner better breaking effect cheers", "d": "8/2015"}, {"body": "jpsfs got impression mixing separate problems nt think behavior interpolation property binding let explain assuming evaluates null evaluate empty string bind empty string", "d": "8/2015"}, {"body": "pkozlowskiopensource yeah sorry meant two problems value type requirement spec suggests value type someone wanted endpoint would simply provide string value rather relying img tag type corhorsion wanted would provide string version think logic apply nt know change go domcompiler domrenderer simple directive change detection cd understand think problem perhaps actual problem ensuring correct types dom properties problem dom specific maybe dom version changedetection order keep separation always go back angular since would solve everyone problem", "d": "8/2015"}, {"body": "cc kegluneq honestly nt know nt think necessarily sdk issue could also issue introduced analyzer package flaky behavior example race condition order files processed stacktrace seems come resolver part analyzer package analysistasksafelyperform package analysistaskperform package iirc correctly transformer nt use issue transformers", "d": "8/2015"}, {"body": "sigmundch right benchmarksexternal contains apps", "d": "8/2015"}, {"body": "yjbanov looked bit yjbanov suspects issue pub dependency likely codetransformers analyzer", "d": "8/2015"}, {"body": "recall recent change codetransformers bad lower bound analyzer believe new version already released jakemac confirm", "d": "8/2015"}, {"body": "think version constraints somehow busted latest release sigmundch know version constraints", "d": "8/2015"}, {"body": "codetransformers bad version lower bound analyzer new version fix thu aug pm yegor notifications githubcom wrote think version constraints codetransformers analyzer somehow busted latest release codetransformers sigmundch know version constraints reply email directly view github", "d": "8/2015"}, {"body": "mean change necessary", "d": "8/2015"}, {"body": "yes case thu aug pm yegor notifications githubcom wrote mean change necessary reply email directly view github", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "another exception use case alpha", "d": "8/2015"}, {"body": "great like contribute take look fixing next hours", "d": "8/2015"}, {"body": "still trying get things build machine knew getting windows would pain much cheaper still easier use linux anyway nt really found problem found couple ways think could fix one added check bound null param would go away might elegant approach", "d": "8/2015"}, {"body": "think found bit hours said hay least understand routing angular works much better problem get compile tests wo nt run gah anyway problem believe line internalized think might also make sense add check constructor routeparams see params gets passed null either silently deal throw exception probably later tests would failed would found much earlier", "d": "8/2015"}, {"body": "guys want use current version probably check routeparamsparams null", "d": "8/2015"}, {"body": "cghislai apart regression seeing would case empty event handler mean nt take action given event adding would say case simply throw good error maybe got valid usecase", "d": "8/2015"}, {"body": "hack filereader read file stored datauri field img component src attributed bound datauri field issue img reloaded file read triggering event triggered change detection image updated moved job promise update datauri field clause image updates automatically", "d": "8/2015"}, {"body": "ok understand simply way hacky way kickingoff change detection right let solve issue introducing better checks error messages missing event handlers sound", "d": "8/2015"}, {"body": "sounds good main point issue", "d": "8/2015"}, {"body": "sames execute convertastintoprotorecordscreate rec still empty array append first ast visit execute nothing", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "yep weird taking look afternoon", "d": "8/2015"}, {"body": "cghislai post least snippet looks like include constructor signature class correct ca nt reproduce locally", "d": "8/2015"}, {"body": "case helpful seem get error components component constructor function one parameter", "d": "8/2015"}, {"body": "btford available", "d": "8/2015"}, {"body": "components myview also fails match type injects services constructor without annotations bound call happens alpha", "d": "8/2015"}, {"body": "fix landed next release thanks everyone", "d": "8/2015"}, {"body": "cc btford", "d": "8/2015"}, {"body": "right accepts entire url meaning rename introduce new method uses syntax directive nt gotten around yet need investigation thanks bug report", "d": "8/2015"}, {"body": "thank effort guys put development best framework ever keep", "d": "8/2015"}, {"body": "btford hi thought came ca nt find source code saying routing child router route found behaviour routing process try resolve request parent router grandparent router trigger redirect imagine component routers guess first redirect hit router resolve request best regards tiago braga", "d": "8/2015"}, {"body": "good question actually curious response wondering works similar fashion di subject control mechanisms like regular di ie tell router far go tree look route", "d": "8/2015"}, {"body": "think using routing dsl value property less ambiguous handles cases like number much elegantly", "d": "8/2015"}, {"body": "think fixed might deployed yet cc vicb naomiblack", "d": "8/2015"}, {"body": "marcogagliardi thanks report docs error reported pending pr issues mentioned", "d": "8/2015"}, {"body": "class exist could provide concrete description type", "d": "8/2015"}, {"body": "sorry locationurl exist inside router matsko finishes refactor working", "d": "8/2015"}, {"body": "matsko please nt name things follow naming conventions", "d": "8/2015"}, {"body": "mhevery actually doc describing naming conventions", "d": "8/2015"}, {"body": "vicb cc naomiblack", "d": "8/2015"}, {"body": "matsko state", "d": "8/2015"}, {"body": "also ran issue modified also complained finding eventemitter type add well", "d": "8/2015"}, {"body": "add replace", "d": "8/2015"}, {"body": "thanks guys created issue since nt think job fix solution working end breaking file functionality reported issue follow cghislai solution since changed variables type nt remove", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "anyone looking workaround remove http typings packagejson install tsd way file wo nt added tsddts make sure include version http type definitions mine tsd issue tsd link", "d": "8/2015"}, {"body": "make list used", "d": "8/2015"}, {"body": "known issue due traceur traceur gone able fix", "d": "8/2015"}, {"body": "sure related issue issues get right code debugging test added statement code chrome breaks due issue different problem", "d": "8/2015"}, {"body": "related sadly nt good source map setup unit test infrastructure afraid", "d": "8/2015"}, {"body": "tests use transformers basically unit tests nt bootstrap either would like covered well move reflection remover", "d": "8/2015"}, {"body": "install de javascript files typings import lt see http separated file see issue", "d": "8/2015"}, {"body": "interesting http typings file seem added definitelytyped look npm bower bundles instead", "d": "8/2015"}, {"body": "http typings file npm causes following errors error expected error expected", "d": "8/2015"}, {"body": "yes saw suggested gitter chat comment lines want create issue addressing issue", "d": "8/2015"}, {"body": "error tried referencing typings folder", "d": "8/2015"}, {"body": "think fixed", "d": "8/2015"}, {"body": "anyone looking workaround remove http typings packagejson install tsd way file wo nt added tsddts make sure include version http type definitions mine tsd issue tsd link", "d": "8/2015"}, {"body": "repo please reopen thanks", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "cc kegluneq blocking getting proper traces wtf gtaws", "d": "8/2015"}, {"body": "take look right away", "d": "8/2015"}, {"body": "cc tbosch vsavkin change detector ids coming changedetectordefinition comes protoviewfactory idea might coming back empty", "d": "8/2015"}, {"body": "mhevery someone else post repro steps nt able get happen far", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "kegluneq build failing unrelated error could look error liner change rerun many times failure consistent", "d": "8/2015"}, {"body": "cc rkirov vicb mhevery coming package di injectorgenerator transformer tries resolve error cropping analyzer getter guessing trying call sorry nt flying md tomorrow ooo tuesday hopefully someone di knowledge track issue", "d": "8/2015"}, {"body": "failure related reverted master edit actually related router pr see instead", "d": "8/2015"}, {"body": "fixed doc issues reported repo thanks", "d": "8/2015"}, {"body": "nice sorry next time ii consider", "d": "8/2015"}, {"body": "sorry next time ii consider worries easy get lost multiple repos", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "right html case sensitive casepreserving want access mixedcase properties template need use dashcase camelcase convention got specialcased compiler case could bind property using error checking got js side trying bind nonexisting property throw afaik planned dart require handwritten schema indicate properties supported elements handwritten avoid reflective calls tracked going close one way bind camelcased properties better error messages going handled separate issue", "d": "8/2015"}, {"body": "discussed rkirov said would beneficial additional sfx bundle would include since sfx bundle would reregister transitive dependencies like could unwanted side effects", "d": "8/2015"}, {"body": "update changed bundles consistent file directory names throughout angular", "d": "8/2015"}, {"body": "cc zzo", "d": "8/2015"}, {"body": "update added bundles added todo change ambient context namespace instead prefix explicitly represent bundle hierarchy", "d": "8/2015"}, {"body": "conversation mhevery debug bundle included core export included root injector need make sure merely including bindings nt produce side effects also open separate issue designclarify runtime behavior debug utilities one already exist", "d": "8/2015"}, {"body": "apparently including override binding would cause compiler call methods debug app listener creating destroying views propose first step including lib inside added injector debugging without add separate bundleimport open separate issue discuss good user experience triggering mode dynamically browser console mhevery sound good", "d": "8/2015"}, {"body": "jeffbcross sgtm", "d": "8/2015"}, {"body": "would nice consistent filename separators eg vs vs", "d": "8/2015"}, {"body": "rename think also make could technically outside core", "d": "8/2015"}, {"body": "k made progress transition branch issue correctly setting dom time applicationspec revisit next week also started removing take care moving everything around", "d": "8/2015"}, {"body": "resolved blockers testunitcjs testunitjs fixing dart issues", "d": "8/2015"}, {"body": "fwiw proposed inperson igorminar tbosch rkirov worry flatteningmerging directories right would add significant complexity build process moving folders dart output look like sources live src tests live test well rewriting import paths think consensus yes nt bother right think could make change later without breaking change since import statements include internal part public api", "d": "8/2015"}, {"body": "update updating still issues working latest failing job problems decorators left constructors nt unused dart imports declarations interpreted test faliling decoratorscompiler unit tests failing mismatched number expectations", "d": "8/2015"}, {"body": "issues resolved matter decorator imported instead annotation problem existing problem nt tested problem temporarily fixed issue opened longterm fix", "d": "8/2015"}, {"body": "merged initial work moving folders around working rest todos issue", "d": "8/2015"}, {"body": "jeffbcross definitively hurt wonder necessary recall wee got already npm dependency zonejs wonder nt enough", "d": "8/2015"}, {"body": "btford please add labels something missing", "d": "8/2015"}, {"body": "use remember import style directive", "d": "8/2015"}, {"body": "zyzle nt shortcircuit change detection would make code complex probably prevent optimizations conditions must evaluated twice want assert cd stable ie side effect free vsavkin could confirm", "d": "8/2015"}, {"body": "vicb thanks reply ok makes sense could nt find reference documentation looked little odd others raised conversation gitter yesterday shortcircuit big deal ca nt actually think reason rely behaviour issue went expectations", "d": "8/2015"}, {"body": "short circuiting makes sense actually nt run second time due stability assertion feature currently broken mystery extra cd cycle vicb want investigate run wtf second cd seems outside zone something weird going", "d": "8/2015"}, {"body": "vicb looks like promise getting resolved run cd end means cd first time end resolved promise", "d": "8/2015"}, {"body": "investigate", "d": "8/2015"}, {"body": "look afternoon", "d": "8/2015"}, {"body": "btford happen inlined everywhere used like example becomes", "d": "8/2015"}, {"body": "makes something alias inlining needs done router expect nontrivial investigatory work see probably going happen week though", "d": "8/2015"}, {"body": "interface alias two different semantics typescript", "d": "8/2015"}, {"body": "mhevery temporary right semantics declaring assignability interface tightened catch typos property names", "d": "8/2015"}, {"body": "correct inline time easier use file tools suggestions useful", "d": "8/2015"}, {"body": "time work near future unassigning", "d": "8/2015"}, {"body": "also current docs infrastructure certainly take days implement", "d": "8/2015"}, {"body": "think rely us using traceur polyfills use polyfills probably need update time mprobst correct", "d": "8/2015"}, {"body": "relies symbols defined file called easy change could also support two different locations make upgrade easier", "d": "8/2015"}, {"body": "going move next milestone since focusing rearranging modules stuff part", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "seems sauceconfjs nt slchromecanary", "d": "8/2015"}, {"body": "mlaval marc think might somehow linked latest sauce changes", "d": "8/2015"}, {"body": "pkozlowskiopensource sent fix", "d": "8/2015"}, {"body": "fix landed", "d": "8/2015"}, {"body": "roadmap", "d": "8/2015"}, {"body": "heart", "d": "8/2015"}, {"body": "global function activate pass following binding bootstrap", "d": "8/2015"}, {"body": "say step fails", "d": "8/2015"}, {"body": "kmillikin sounds odd nodejs npm version using", "d": "8/2015"}, {"body": "nodejs version npm version packages ubuntu lts tried node npm version seems work sure older version npm include license file two packages case worth investigating directions probably updated mention minimum version nodejs npm required", "d": "8/2015"}, {"body": "version updated", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "fyi name things", "d": "8/2015"}, {"body": "mhevery named", "d": "8/2015"}, {"body": "refactoring code general since concrete classes need interface hard time coming abstract name interface sign interface", "d": "8/2015"}, {"body": "would possible since could change per view basis unlike kind broken feature could work properly", "d": "8/2015"}, {"body": "thanks even considering gents think scenarios would beneficial", "d": "8/2015"}, {"body": "think mean since dom attributes case insensitive think auto assigning expression much magic nt think would useful events looking use syntax prefer explicit implicit magic pass", "d": "8/2015"}, {"body": "record alternative explicit syntax oneway eventdriven bindings could following would translate directly would nicely complement existing one twoway bindings probably relevant anyway unless many users ask come compelling use case", "d": "8/2015"}, {"body": "imo would nice provide minimal context reproduce scenario people nt access internal tracker", "d": "8/2015"}, {"body": "idea mirrors properties set componentsdirectives attributes corresponding dom elements eg show name attribute assuming value", "d": "8/2015"}, {"body": "jeffbcross internal folks look", "d": "8/2015"}, {"body": "place change change detector normally setting properties would never reach renderer ie need change implementation change detectors call renderer ie right times would discussed gt enough include logic dynamic change detection also part generated change detectors probably behind flag pubspecyaml cc vsavkin", "d": "8/2015"}, {"body": "naomiblack yes look", "d": "8/2015"}, {"body": "hmm nt seem like right person looking figure would best", "d": "8/2015"}, {"body": "vsavkin going take sounds like deep change required change detector render apis", "d": "8/2015"}, {"body": "moving since sounds like take days minimum work", "d": "8/2015"}, {"body": "closed via", "d": "8/2015"}, {"body": "ericmdantas think already plenty tests take look sure benefit yet another place tests shown addition actual tests always uptodate", "d": "8/2015"}, {"body": "pascalprecht good point seen wondering could get something smaller scope using tools released bundled versions", "d": "8/2015"}, {"body": "think need use tooling inside angular repo way used angular tests", "d": "8/2015"}, {"body": "examples tests nt think planning unit tests separate goal unit test examples docs cover use case closing issue", "d": "8/2015"}, {"body": "sounds good thanks", "d": "8/2015"}, {"body": "support", "d": "8/2015"}, {"body": "vahidalvandi want get foreach use", "d": "8/2015"}, {"body": "public angularforeach well facades helper methods different story afaik planning add one helper function like created substantial maintenance overhead without much added value", "d": "8/2015"}, {"body": "vahidalvandi please use repo angular questions smile", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "hi check regards evan", "d": "8/2015"}, {"body": "evanliu thank best regards tiago braga", "d": "8/2015"}, {"body": "see issue case change assuming using last alpha version see", "d": "8/2015"}, {"body": "thanks ericmartinezr reason reluctant create issue pretty sure whatever issue seem documentation need updated point match current name parameter make pull request based said good chance things also changed system would mean would need changed make example functional suspect probably wo nt bother things stabilize bit thanks much help hold closing issue definitely also issue documentation thanks much definitely solved issue another issue nt even going bring", "d": "8/2015"}, {"body": "solved", "d": "8/2015"}, {"body": "think good idea see useful another kind issues consider following html structure html according documentation specify live collection direct child directives parent directive would awful option extend componentsdirectives could javascript directive class basedirective directive selector class extends basedirective directive selector class extends basedirective directive selector childnthdirective class childnthdirective extends basedirective finally could query every kind children like would make much easier cleaner think", "d": "8/2015"}, {"body": "binarykitchen repo angular guess wanted report said understanding browsers wo nt fire mouse events disabled elements slight differences browsers seems nothing angular framework matter looks like people using workaround consist wrapping button invisible element ex", "d": "8/2015"}, {"body": "uh ok probably want rename repo angular avoid wrong tickets placed nt obvious right realised browsers wo nt fire mouse events disabled elements solved wrapping another parent div element thanks links", "d": "8/2015"}, {"body": "use docs default angular listens element event ignores events bubble listen bubbled events case clicking child use bubble option event onbubbleevent shown also read article", "d": "8/2015"}, {"body": "already pr typos ngfor nif", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "consistency also rather vote throwing error instead allowing syntaxes", "d": "8/2015"}, {"body": "throw attribute valid think case gets interpreted event called check say event names must alphanumeric", "d": "8/2015"}, {"body": "cc pkozlowskiopensource", "d": "8/2015"}, {"body": "ok makes sense start introducing event checks part schema support could basic event name checks start take care one help anyone community interested", "d": "8/2015"}, {"body": "hmm digging bit seems like html spec putting little restrictions possible event names understand correctly nothing would prevent one creating custom event named sense valid another way looking custom directive events one declare events valid js field names maybe restrictive stick lowestcommondenominator", "d": "8/2015"}, {"body": "creating custom restrictions specific angular think nt problem since prolly one would come defining event names start anyways", "d": "8/2015"}, {"body": "pkozlowskiopensource would love get first issue need help", "d": "8/2015"}, {"body": "yanivefraim maybe collaborate cironunes looks like started working already pkozlowskiopensource also already start sth", "d": "8/2015"}, {"body": "thanks pascalprecht cironunes pkozlowskiopensource help one looking get start contributing project help getting highly appriciated", "d": "8/2015"}, {"body": "hey manekinekko transpiling angular using gulp tasks running typescript compiler", "d": "8/2015"}, {"body": "hi using angularclass repo uses webpack tasks defined packagejson", "d": "8/2015"}, {"body": "looks like issue npm release investigate monday easiest way work around build angular source since nt appear problem build angular directly clone githubcomangularangular cd angular amp amp npm install gulp buildjsdev replace current angular source source code generated", "d": "8/2015"}, {"body": "sorry actually nt bug renamed bootstrapwebworker nt landed npm yet fixed release webworker support still active development going making breaking changes recommend build source part app build pipeline plan use webworkers things changing frequently", "d": "8/2015"}, {"body": "sure understand actually part universal project contributing", "d": "8/2015"}, {"body": "nt component views supposed implementation detail component outer boundaries nt see components inside component view current behavior seems right sat aug tyler potter notifications githubcom wrote query searches light dom tree matching nodes viewquery searches component view matching nodes consider case many nodes page given type order build tree model components unbounded parent injection used build tree bottomup however building tree possible child injection deeply viewnested components reachable viewquery consider adding new type query descend entire view tree optimize query stop descending first instance since first instance inject children tree reply email directly view github", "d": "8/2015"}, {"body": "ancestral injection unbounded though would compliment", "d": "8/2015"}, {"body": "agree pascalprecht implementation detail supported nt think correct behavior side note would expensive runtime speed support query closing wil implement", "d": "8/2015"}, {"body": "show full example including views may twice view also example right since effect going close plesae provide working repro case open new issue still working", "d": "8/2015"}, {"body": "hi able reproduce also nothing bindinds view bindings though happens show component twice page second time component oninit called elements query doubles component nested components querying children parent phone right try put example soon note tested alpha made change query dehydrated components dnk solves", "d": "8/2015"}, {"body": "kidding bit already featuring getting started dev guide js enough need api everywhere perhaps sufficient api examples", "d": "8/2015"}, {"body": "wardbell suggesting version examples would based global object without using sort module imports would multiple versions examples showing using withwithout module systems", "d": "8/2015"}, {"body": "great question simplest one file example nt need module system could use advice modularity story devs things get advanced afaik regardless devs access angular functionality root thinking teach systemjs intriguing", "d": "8/2015"}, {"body": "think point chapter explains use module loader ppl struggle wed aug ward bell notifications githubcom wrote great question simplest one file example nt need module system could use advice modularity story devs things get advanced angularmodule afaik regardless devs access angular functionality ng root thinking teach systemjs intriguing reply email directly view github", "d": "8/2015"}, {"body": "think point chapter explains use module loader wooohooo would separate book atm seriously hopefully work progress going solid polyffils solution could recommend", "d": "8/2015"}, {"body": "think examples written style way work well", "d": "8/2015"}, {"body": "mhevery liked suggestion tried apply example current getting started sample reads import component view bootstrap component selector view template class appcomponent bootstrap appcomponent much less noisy import ng ngcomponent selector ngview template class appcomponent ngbootstrap appcomponent really recommending latter style ts development confusing also still nt know modularity story folks register components services etc create one global application namespace eg use systemjs api possibility rather unusual devs use requirejs quite apart matter teach di roughly language communities would suggest developer simultaneously define class register angular ioc container global got bad feeling one", "d": "8/2015"}, {"body": "folks register components services etc think even services directives components registered place needed like need service instance needs define bindings type service unless defined somewhere parent componentinjector course nt solve problem polluting global scope one would prolly simply go iife immediatelyinvoked function expression nowadays anyways nt think everything needs defined", "d": "8/2015"}, {"body": "one define di modules party components like would arrays components register directly need pascal mentioned nt solve issue global namespace pollution codeloading usually handled amdcjs modules preference avoid picking winners since people usually use whatever already comfortable document one example using di amdcjs leave regards using namespace code feel weird well nice benefits one import set autocompletion ng namespace works nicely downside code bloated", "d": "8/2015"}, {"body": "wardbell yes suggesting open countersuggestions nice thing code samples look identical whether use ambient import statements think explicit imports better complication different code example ambient vs import something handle fine well", "d": "8/2015"}, {"body": "different code examples assume mean different experience far believe different examples inevitable reasons idioms different language communities attempts single sourcing counter productive example although would work time trying teach use wherever possible want discourage morr compelling examples would include different treatment ability hide private variables lost classes hence annoying profusion underscored vars ts code goal presenting dev guide examples two ok three languages cater comfort communities writing examples esperanto annoy everyone accordingly imstriving stylistic consistency within language communities much across", "d": "8/2015"}, {"body": "example although var would work time trying teach use let wherever possible want discourage var recently sent pr tests replace anonymous functions fat arrow functions removed non tests needed lexical scope would therefore introduce perf overhead nt know true transpiled code also native think would true vs mhevery know using fat arrow functions needed introduces perf penalty native maybe nt use place docs since would nt good practice per se", "d": "8/2015"}, {"body": "pascalprecht causes pref referenced", "d": "8/2015"}, {"body": "transpiled native", "d": "8/2015"}, {"body": "maybe error could also give hint", "d": "8/2015"}, {"body": "woah nt even know util nice docs page", "d": "8/2015"}, {"body": "compiler check thrown error important error message name component surrounding directives otherwise useful error suggested error", "d": "8/2015"}, {"body": "bumping nulls undefined directives list", "d": "8/2015"}, {"body": "compiler check viewdirectives thrown error null undefined important error message name component surrounding directives otherwise directive null useful error current error ends directives list wonder silently failing jeff going retest forward references", "d": "8/2015"}, {"body": "today getting errors case parser error unexpected token expected identifier keyword string column b somecomponent giving specific feedback decide go path need take binding forms account goes events well guess", "d": "8/2015"}, {"body": "also voting specific error messages expensive implement think one thing lot ppl struggled angularjs error messages nt super clear first glance even tho think minerror great improve definitely sat aug pawel kozlowski notifications githubcom wrote today getting errors case parser error unexpected token expected identifier keyword string column b somecomponent giving specific feedback decide go path need take binding forms binda databinda account goes events click foo well guess reply email directly view github", "d": "8/2015"}, {"body": "think implemented parser error read easily done parser see parsing text expression starts", "d": "8/2015"}, {"body": "easily done parser see parsing text expression starts probably also check interpolations inside expression string catch cases like", "d": "8/2015"}, {"body": "right solve problem used type annotation sufficient resolve dependency angular di mental model every injector like lazy hash map token object implementing make model less clear would also complicate implementation instance would require us create new composite token including foo bar would create token parse dependencies create bindings means would probably able use operator compare two tokens quite bit complexity would add think consider suffice", "d": "8/2015"}, {"body": "vsavkin actionable thing drop replace", "d": "8/2015"}, {"body": "think changes required flexible covers withannotation use case closing", "d": "8/2015"}, {"body": "ian working upgrading system unit tests involved working around problems seeing let continue discussion", "d": "8/2015"}, {"body": "error noticed piece code domrendererts var binderidx binderidx lt binderslength binderidx var binder binders binderidx var element boundelements binderidx see binderslength used stop condition loop index tested condition used binders array also boundelements array case plunker see amount array elements binder boundelements array long element boundelements array requested gives undefined causes problem later function addlistener called undefined fairly new angular nt know fix yet another index used extra condition applied stop logic sooner maybe nt possible different amount items two arrays sounds likely amount binders equal amount bound elements try look learn insides angular update cloning protoview goes wrong new version old version clone still elemenets new one code also domrendererts right loop createview protoview domprotoview inplaceelement htmlelement renderviewwithfragments var clonedprotoview cloneandqueryprotoview thistemplatecloner protoview true var boundelements clonedprotoviewboundelements update seems clone protoview incorrect inside utilsts code cloneandqueryprotoview located function edited lately well however functionality stay var templatecontent templateclonerclonecontent pvcloneabletemplate importintodocument used var templatecontent importintodocument domimportintodoc domcontent pvrootelement domclone domcontent pvrootelement latter code less reflected templatecloner additional logic see templateclonerts compared pvcloneabletemplate resulting templatecontent seems difference indeed cloneabletemplate check console code address cc name address cc templatecontent result calling clone query function console note also worth mention structure templatecontent different working version cloneabletemplate cloneabletemplate first form myform encapsulates rest content templatecontent clone first form encapsulates part content first nested form stopped update piece code browseradapterjs causes difference html structure clone entering cloneabletemplate input causes nested form become faulty sure angular problem createtemplate html htmlelement var documentcreateelement template tinnerhtml html return update solved ok legit nested forms html browser might strange things would passed innerhtml previous version angular innerhtml used causes problem would angular generate invalid html turns nt parent form tag nests others coming input developer check console code name deleted form tag input everything works older version older version also works without form tag nt think form tag angular generates ones needed looking example setup indeed wrong according html see want since nested forms allowed possible thanks letting investigate angular bit", "d": "8/2015"}, {"body": "thank much goossensmichael really appreciate time effort put thorough explanation goes throughout angular dom generation process case thoughtful take time help fellow programmer less well versed world web development", "d": "8/2015"}, {"body": "problem started learning javascript angular month ago nt think different level experience", "d": "8/2015"}, {"body": "still issue angular closed", "d": "8/2015"}, {"body": "mhevery told html spec support nested forms see reason angular would offer support light circumstance believe nt anything else guys regarding subject matter", "d": "8/2015"}, {"body": "well actually would better angular bit defensive code least exception thrown amount bindings boundelements causes confusion developers quite hard find cause case innerhtml fixed faulty html causing angular go wrong assumptions eventually nullpointer", "d": "8/2015"}, {"body": "totally agree goossensmichael indeed something likely lead developers confusing path exception thrown excellent point", "d": "8/2015"}, {"body": "documentation exception handling done angular maybe add first contribution", "d": "8/2015"}, {"body": "goossensmichael central receives exceptions either throwing right error catching", "d": "8/2015"}, {"body": "believe duplicate", "d": "8/2015"}, {"body": "pkozlowskiopensource would indeed solve issue queries limit think something else see viewquery keeps records child components even destroyed", "d": "8/2015"}, {"body": "ok going reopen rkirov confirm duplicate", "d": "8/2015"}, {"body": "really duplicated since one active query gt however bug fixed add unit test cycles ngfor times close issue", "d": "8/2015"}, {"body": "router depend core exposes class member type must also reexport typescript unhappy mprobst alexeagle ideas", "d": "8/2015"}, {"body": "think wai typescript nt reexport downstream clients understand type signatures could reexport relax field type field private chance valid feature request ts support use case required reexport private fields", "d": "8/2015"}, {"body": "field needs public think something documentation system going change handle thu aug martin probst notifications githubcom wrote think wai typescript nt reexport downstream clients understand type signatures could reexport relax field type field private chance valid feature request ts support use case required reexport private fields reply email directly view github", "d": "8/2015"}, {"body": "result error users import typings jeffbcross checked work documented twice severe issue", "d": "8/2015"}, {"body": "innocuous user think something like could extend dgeni filter certain duplicates suspect encounter problem animations etc might reasonable solve general issue duplicate exports could hard code work around think really happen shared utils like fa\u00e7ades could check given class originates export definitions could possibly relax type makes kind sad also makes documentation worse class", "d": "8/2015"}, {"body": "naomiblack going unassign since actionable end", "d": "8/2015"}, {"body": "assigning misko think best fix", "d": "8/2015"}, {"body": "research needs done nt export include file done updating include dgeni reffer rather know step see idea step reasigning btford hoping knows reasign petebacondarwin", "d": "8/2015"}, {"body": "idea get dgeni cases need refer class prefix", "d": "8/2015"}, {"body": "mhevery think avoid syntax ok router depend angular odd syntax nt fit use modules ca nt make dgeni smarter handle situation reexporting aliased type different package seems like something doc generator handle probably matter resolving aliased symbols typescript explicit api", "d": "8/2015"}, {"body": "mprobst exported router depends uses propose solve situation issue typescript best practices issue canonical way use types", "d": "8/2015"}, {"body": "vs make difference except modifier files look like adts bdts note module uris match forces downstream users get think sanest solution time assume module uris opaque globally unique identifiers resolved mechanism systemjs node whatever", "d": "8/2015"}, {"body": "misko tried compiler still complains mixes ambient declarations module think import keyword causing bdts module even though emit statement seems similar couple bugs filed mohammed relaxed constraints ambient context expression wo nt emit anything example misko still experimenting mon aug martin probst notifications githubcom wrote dts vs ts make difference except declare modifier dts files look like adts declare module whatevera export class wobble bdts declare module whateverb import wobble whatevera export var w wobble reply email directly view github", "d": "8/2015"}, {"body": "fix", "d": "8/2015"}, {"body": "resolved", "d": "8/2015"}, {"body": "could provide code setup use plunker want took liberty making example plunker somewhat using build angular", "d": "8/2015"}, {"body": "yes basically thanks providing demo", "d": "8/2015"}, {"body": "resolved", "d": "8/2015"}, {"body": "use final variable node content probably allowed take argument since ie", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "cc tedsander", "d": "8/2015"}, {"body": "sgtm help lot", "d": "8/2015"}, {"body": "got back aug pm victor berchet notifications githubcom wrote finished broccolijsdev starting testunitjskarmarun error launcher start chromecanary find binary homevictorbindartchromiumchrome please set env variable chromecanarybin finished testunitjskarmarun watch triggered file change pm given logs see task stop browser could launched reply email directly view github", "d": "8/2015"}, {"body": "referring actually makes use please also note angulario relates issues reported thanks", "d": "8/2015"}, {"body": "think referring typo ngif instead yeah related angulario reported", "d": "8/2015"}, {"body": "exactly rewrite issue angulario thanks answer", "d": "8/2015"}, {"body": "cc yjbanov mhevery", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "maybe keep precompiled template", "d": "8/2015"}, {"body": "wrong repo try", "d": "8/2015"}, {"body": "use webstorm command line setting ts module commonjs target experimentaldecorators", "d": "8/2015"}, {"body": "noticed attempting use codeangularjsorg nt seem happen use local version script compiled alpha tag though", "d": "8/2015"}, {"body": "zyzle wildtang could one guys put together plunk showing start", "d": "8/2015"}, {"body": "hat looks suspicious", "d": "8/2015"}, {"body": "pkozlowskiopensource editing posted seems issue older version systemjs traceur plunkr works fine one shows error difference see bad good edit actually sorry thats difference good version also uses updated routerjs created issue yesterday ignore tried swapping back issue", "d": "8/2015"}, {"body": "zyzle pkozlowskiopensource thanks upload codes url", "d": "8/2015"}, {"body": "hm ok wildtang got plunk working changing src src see sure difference makes systemjs fail investigation needed", "d": "8/2015"}, {"body": "hmm switching newer version systemjs also fixes dev prod versions", "d": "8/2015"}, {"body": "sure going older systemjs prod version planning update latest systemjs anyway", "d": "8/2015"}, {"body": "pkozlowskiopensource thanks use code finally worked chrome computer systemconfig defaultjsextensions true systemimport appone ie reported exception expecting function got object functionwrapper exception thrown", "d": "8/2015"}, {"body": "wildtang glad made work problem looks like duplicate", "d": "8/2015"}, {"body": "yes matthewjh said post ie occurs developer tools opened", "d": "8/2015"}, {"body": "closing issue seems rosolved", "d": "8/2015"}, {"body": "nt able reproduce master clean npm install numerous attempts performed clean npm install also sometimes fsevents breaks osx sometimes nt work correctly without reboot usually manifests differently eg watch firing", "d": "8/2015"}, {"body": "caitp wiped let remove manually try", "d": "8/2015"}, {"body": "bah ca nt reproduce anymore either finished buildtreedart sure happened saw stack trace going close reopen see sorry noise thnx caitp retesting", "d": "8/2015"}, {"body": "stacktrace looks like typescript code nt expected nt think stack trace related watching maybe half written syntactically incorrect file add defensive code problem", "d": "8/2015"}, {"body": "mprobst possible ts error one point kept seeing err even reverting changes anyway could use superpowers make sure case ts syntax errors get actual ts error instead stack trace would awesome", "d": "8/2015"}, {"body": "pkozlowskiopensource think reporting ts errors odd maybe caching effect case code bit risky written make report proper error case ran", "d": "8/2015"}, {"body": "issue fixed reproducible head", "d": "8/2015"}, {"body": "internally tracked", "d": "8/2015"}, {"body": "naomiblack find someone look making endend testing hard", "d": "8/2015"}, {"body": "cc jeffbcross", "d": "8/2015"}, {"body": "jsonly currently supports dart", "d": "8/2015"}, {"body": "eventemitterobservable stuff build facade seems hard remove", "d": "8/2015"}, {"body": "caitp http export rx observables directly", "d": "8/2015"}, {"body": "sigmundch know polymer could look", "d": "8/2015"}, {"body": "justinfagnani take look forward right person", "d": "8/2015"}, {"body": "sure", "d": "8/2015"}, {"body": "mhevery sorry already know problem angular creates new clones existing template web component wakes removes light dom children angular find bound elements template however template changed elementbinders match queries elements fixed automatically create every element calling therefore already reference without", "d": "8/2015"}, {"body": "tbosch thanks justinfagnani sigmundch looks like noop thanks", "d": "8/2015"}, {"body": "cc alexeagle", "d": "8/2015"}, {"body": "working little complicated copymerging toplevel module files module src directories statements need changed reflect new root module", "d": "8/2015"}, {"body": "process updating demo alpha uses although see http bundles folder root npm angular scripts mentioned hold possible use http using jspm demo rather loading scripts standard script tag thanks", "d": "8/2015"}, {"body": "danwahlin use bundle work alongside bundle working getting everything order alpha release", "d": "8/2015"}, {"body": "thanks jeff got going modifications paths property jspm config seems load bundle sure works yet though since fighting issues upgraded", "d": "8/2015"}, {"body": "jeffbcross please provide current status", "d": "8/2015"}, {"body": "igorminar yep actually close issue since solved updated issue left long weekend nt think update one short story bulk moving work done resolve failing test sure little issues creep process", "d": "8/2015"}, {"body": "great thanks update jeffbcross going hold alpha since run things along way suspect simplified next release", "d": "8/2015"}, {"body": "danwahlin sounds like good plan things orderly release maybe could help dogfood prealpha resolved", "d": "8/2015"}, {"body": "sounds great suspect issues seeing completely due realizing something changed somewhere happy try things think issues resolved", "d": "8/2015"}, {"body": "zone works uses zone closing favor", "d": "8/2015"}, {"body": "many thanks", "d": "8/2015"}, {"body": "due fact got duplicated logic", "d": "8/2015"}, {"body": "full access method customize want using rxsubjectcreate use directy rx classes instead eventemitter", "d": "8/2015"}, {"body": "ericmartinezr thanks reply thing gives instance work diferent way latest manipulate input output result nt know possible manipulating input returning way even wo nt give something subscribe", "d": "8/2015"}, {"body": "eventemitter torx method return observable subject see definition eventemitter", "d": "8/2015"}, {"body": "hey ericmdantas yes right fact could nt use try see something super simple fail bad say eventemitter job want something complex use observables directly keep simple fact returns rxsubject see", "d": "8/2015"}, {"body": "yes return type rxobservable right subscribe method subject extends isubject turn extends observable saying rxsubject sub class rxobservable", "d": "8/2015"}, {"body": "oh yeah acknowledge hot cold observables deep think get idea rxsubject hot observable rxobservable cold one difference use whether rxsubject subclass taking ericmdantas example changed little bit nt create observable everytime javascript export class myservice constructor thisobs function something return rxobservablecreate gt somethingcreatedat datenow oonnext something ooncompleted component class mycomponent constructor svc myservice svcgetobs something subscribe info gt consolelog info subscriber svcgetobs subscribe info gt consolelog info subscriber svcgetobs subscribe info gt consolelog info subscriber svcgetobs subscribe info gt consolelog info subscriber etc rxsubject would something like javascript export class myservice component class mycomponent constructor svc myservice let sub svcgetsubj subsubscribe info gt svcdosomething info subscriber subonnext suboncompleted dispose understood example needs rxobservable cold one rxsubject would make much complicated wrong please correct anyone understands observables better", "d": "8/2015"}, {"body": "thanks reply case subject instance rxsubject inherits observables observers bottom line want separate logic app like service receiving values something giving something back subscribe something else whenever given value ready like know going eventemitter right way using rxobservables directly ericmartinezr pointed guess idea pretty much http class pass object whatever lets subscribe result whatever done", "d": "8/2015"}, {"body": "ericmartinezr thank putting together yes example need cold observable needed implement hot days ago idea give try eventemitter wraper smile", "d": "8/2015"}, {"body": "get things straight mean typescript import component view bootstrap eventemitter class myservice static dosomething something rxobservable var e new eventemitter component selector main view template class main constructor myservicedosomething subscribe info gt consolelog info bootstrap main myservice", "d": "8/2015"}, {"body": "guess trick ca nt test right try later today let know thank help", "d": "8/2015"}, {"body": "alright suggested worked try implement messagebus type service hot observable ericmartinezr suggested thank guys", "d": "8/2015"}, {"body": "hi spot wrong service supposed save list categories problem case ca nt trigger subscribe component main component component service may see inject service main component component visibility main component bindings due bindings property main component also router important still component visibility service class way instance need get menu xml nt want load second time actually twice issue component request service little code tests cached information actually triggers categories array ca nt somehow subscribe component returning cached array confirmed debugger try catch finally clause component ideas could happening thank best regards tiago braga", "d": "8/2015"}, {"body": "guess calling anyone hearing try following", "d": "8/2015"}, {"body": "ericmdantas thank understand makes sense nt need settimeout since nested subscribe someone hearing best regards tiago braga", "d": "8/2015"}, {"body": "glad worked smile", "d": "8/2015"}, {"body": "mhevery already working issue", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "let wait dartdocsorg green fix includes small cleanup exports may affect dgeni well", "d": "8/2015"}, {"body": "clarified issue yegor try get", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "time take care near future removing also reassigning certainly take couple hours existing infrastructure", "d": "8/2015"}, {"body": "thelgevold look work around", "d": "8/2015"}, {"body": "thanks zyzle", "d": "8/2015"}, {"body": "right duplicate", "d": "8/2015"}, {"body": "naomiblack present", "d": "8/2015"}, {"body": "mean members interface present", "d": "8/2015"}, {"body": "yes sorry mean members interface screenshot part doc", "d": "8/2015"}, {"body": "needs better description", "d": "8/2015"}, {"body": "internal api please nt use use locate vsavkin comment closing since changes needed code", "d": "8/2015"}, {"body": "mhevery alright try internal api subscribe changes method returns observable subscribe use class", "d": "8/2015"}, {"body": "rx follow api", "d": "8/2015"}, {"body": "vsavkin mhevery still nt figured listen model changes use template driven forms example top post think could point would really appreciate", "d": "8/2015"}, {"body": "nearly done land alpha", "d": "8/2015"}, {"body": "systemjs updated going send pr bumps system builder version", "d": "8/2015"}, {"body": "hello please ask angular repo instead one meant angular smile", "d": "8/2015"}, {"body": "thnx ericmdantas", "d": "8/2015"}, {"body": "oops sorry", "d": "8/2015"}, {"body": "also missing activate instruction method many others deeper inspection", "d": "8/2015"}, {"body": "please add concrete items missing think", "d": "8/2015"}, {"body": "routerdts alpha missing least following class routeroutlet constructor class router config definition allowed values tight nt accept different combinations values normally used still everything works changed definitions list", "d": "8/2015"}, {"body": "already fixed master closing", "d": "8/2015"}, {"body": "thanks plnkr repro", "d": "8/2015"}, {"body": "still need info setup using transpilation module loader etc exact error full stack trace best share running reproduce scenario plunker might want start one", "d": "8/2015"}, {"body": "seeing issue application upgrade alpha seen mention breaking changes regards router release something missing changelog maybe routeconfig looks like using traceur systemjs thusly html try add complete stack trace later", "d": "8/2015"}, {"body": "might due impossible say without detailed example stack trace", "d": "8/2015"}, {"body": "sorry away main terminal right try build get complete stack trace would also say built angularrouter js files typings tag rather using codeangularjsorgdefinitelytyped thats never issue past", "d": "8/2015"}, {"body": "zyzle nt new route routes alpha would error alpha", "d": "8/2015"}, {"body": "config zyzle trace typeerror error loading main function function function globalupgradesystemloadercexecute f f l object globalupgradesystemloadereinstantiatepromiseallthenexecute h l", "d": "8/2015"}, {"body": "see example inboxapp uses format however documentation routerlink uses layout example still work alpha believe edit add tried change config use style received error tsc attempting compile sorry cant give actual stack trace right", "d": "8/2015"}, {"body": "zyzle confirm example also works perhaps new route new redirect finished nt know work anyway ca nt get error get", "d": "8/2015"}, {"body": "issue also problem trying use uncaught typeerror function anonymous function anonymous function anonymous function doeval eval globalupgradesystemloaderloaderinstantiateloadmetadataexecute", "d": "8/2015"}, {"body": "also getting error alpha", "d": "8/2015"}, {"body": "markharding could one guys put together plunker reproduces issue ou start one contains workaround", "d": "8/2015"}, {"body": "pkozlowskiopensource sorry took long simplest case reproduce error ca nt seem make plunkr work correctly though complaining baseattr instantiation location strategy scratch got working changing hashlocationstrategy looks like fix might worked", "d": "8/2015"}, {"body": "zyzle ok based plunker fixed master right going close one fixed anyone till seeing pb please provide plunker start happily reopen", "d": "8/2015"}, {"body": "open issue thnx jeffbcross currently push bundles nt npm", "d": "8/2015"}, {"body": "awesome", "d": "8/2015"}, {"body": "alexeagle rkirov agree including bundles folder npm distribution", "d": "8/2015"}, {"body": "maybe accurate", "d": "8/2015"}, {"body": "think seems inconsistent output fine changing", "d": "8/2015"}, {"body": "vahidalvandi already stated wrong repository appropriate forum ask support questions want keep github issues bug reports future requests please direct support questions one support channels side note want always return array could simple oneliner", "d": "8/2015"}, {"body": "vahidalvandi wrong repo guess looking said sure considering bug would return string length sure problems consequence easy help case sounds like support question asked using appropriate support channel see", "d": "8/2015"}, {"body": "ok abc string whit lenght url two parameters return namely array whit object example mysitecom useridabc return abc example mysitecom useridabc amp useriddef return abc def need return abc mysitecom useridabc please help", "d": "8/2015"}, {"body": "skybrian general template syntax documented individual directives got docs syntax examples generally going sure improve docs particular points nt see clarified linked docs would great could send us specific suggestions better yet pull request", "d": "8/2015"}, {"body": "thanks helpful looking angulario something similar expressions statements formatters section first document linked nt think look documentation github nt show searching expression expressions angulario angular documentation page expressions however problem list design principles expression language rather actually explaining expression grammar specific thing trying write statement inside loop specifically goes place snippet tried line line neither one worked without documentation legal expression variables scope nt know else try implemented different way", "d": "8/2015"}, {"body": "naomiblack particular reason publishing perfect docs would useful imo especially rather hard read gh", "d": "8/2015"}, {"body": "naomiblack comment", "d": "8/2015"}, {"body": "pkozlowskiopensource comment user trying get speed personally took embarrassingly long time realize docs tree different appeared far date", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "reality combination new line url dart version nt suffer pb url gets encoded matching try js side bring implementations level", "d": "8/2015"}, {"body": "glad hear working webworker app webworker support still work progress happy help try keep github issues directly related issues code please repost forum help", "d": "8/2015"}, {"body": "yeah thinking example app running web worker great already started implementing existing sample app router seems working post question forum hope able help", "d": "8/2015"}, {"body": "think add change ancestor hosthost skipself", "d": "8/2015"}, {"body": "sorry unfortunently nt plans rewriting past history planning getting better breaking changes future closing since action", "d": "8/2015"}, {"body": "vsavkin think mocking practice interfered using right update", "d": "8/2015"}, {"body": "mprobst created two files spiests spiesdart define new spies turned much simpler trying make one class work well ts dart move spy classes remove", "d": "8/2015"}, {"body": "vsavkin awesome going removal", "d": "8/2015"}, {"body": "mprobst sure", "d": "8/2015"}, {"body": "happens js nt test dart guess got pb properties decorators", "d": "8/2015"}, {"body": "handled described think sufficient close issue", "d": "8/2015"}, {"body": "mhevery indeed looks like microsofttypescript fix imo close one bit worried tracking maybe updates next ts version see still pointing alexeagle fork alexeagle plan one updating ts versions moving npmreleased one", "d": "8/2015"}, {"body": "currently minimal delta released already done work upgrade contains fixes need unless need bleedingedge fix able update soon released got indication may soon long enough angularconnect might able use new features ca nt update would require users also upgrade nt want state goes beta mon aug pawel kozlowski notifications githubcom wrote mhevery indeed looks like microsofttypescript fix imo close one bit worried tracking maybe updates next ts version see still pointing alexeagle fork alexeagle plan one updating ts versions moving npmreleased one reply email directly view github", "d": "8/2015"}, {"body": "alexeagle thnx update going close one retest soon thnx", "d": "8/2015"}, {"body": "would cool version js build travis easy versions listed packagejson let know youd like pick mon aug pm pawel kozlowski notifications githubcom wrote closed reply email directly view github", "d": "8/2015"}, {"body": "filed two issues typescript related", "d": "8/2015"}, {"body": "thnx igorminar", "d": "8/2015"}, {"body": "omittable end tag nested like first ends second begins still happen use instead", "d": "8/2015"}, {"body": "right think thanks", "d": "8/2015"}, {"body": "jeffbcross comment triage", "d": "8/2015"}, {"body": "rolandjitsu function override bindings root test injector bindings setting associated injector new injector creating block able keep block instead creating injector use function exported uses testroot injector nt work please mention comment issue reopen", "d": "8/2015"}, {"body": "want fix bug try using viewbindings instead viewinjector component", "d": "8/2015"}, {"body": "middle major pipe refactoring many breaking changes coming keep old behavior", "d": "8/2015"}, {"body": "one interesting going systemjs builder autodetecting file global module system happens since empty contains ts interface definitions transpilation js effectively empty guess started problem ts systemjs version update since empty file like hitmanmcc workarround add global plugin systemjs config btford guess med high priority guess break people code quite often", "d": "8/2015"}, {"body": "pkozlowskiopensource thank much explanation workaround try soon report back", "d": "8/2015"}, {"body": "hello pkozlowskiopensource wondering could elaborate bit workaround trying told familiar systemjs works pretty sure something wrong would please post line need add configjs load global plugin thanks advance btw tried using alpha alpha routerdevjs combination works", "d": "8/2015"}, {"body": "familiar systemjs works pretty sure something wrong would please post line need add configjs load global plugin hitmanmcc problem using relatively old version systemjs builder config bit involved probably easiest explain something new module loading systemjs instead remove offending line replace see looking root cause issue speak", "d": "8/2015"}, {"body": "thanks quick reply pkozlowskiopensource alas work well two sample applications tried loading local version routerdevjs script modification instructed perform produced error stated provider router anything assist tracking issue feel free ask", "d": "8/2015"}, {"body": "hitmanmcc identified root cause see pr angular repo shortly pb build well identified nt need help tracing thnx regarding error getting sure help without access setup got impression error getting related loading problem discussing best share plunker version router build locally see router loads without pbs plunk try demonstrate issue plunk maybe someone able help", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "yes updating dts files today", "d": "8/2015"}, {"body": "done", "d": "8/2015"}, {"body": "btford comment triage appropriately", "d": "8/2015"}, {"body": "unofficial workaround dart config router like inject routeparams components check value exists class customercomponent routeparams routeparams bool isnew false customercomponent thisrouteparams", "d": "8/2015"}, {"body": "yep though eventual support would nice", "d": "8/2015"}, {"body": "going mark nice since essentially syntax sugar two different configs point component reasonable feature likely happen higher priority issues addressed", "d": "8/2015"}, {"body": "mhevery marking renames potentially breaking changes come consistent guidelines make changes think", "d": "8/2015"}, {"body": "interface start var const functions complicated normal instances vars functions start lower case letters type start upper case letter ok const uppercase far describing kind opposite examples actually correct", "d": "8/2015"}, {"body": "mhevery suggestion vars functions start lower case letter camelcase names consistent idiomatic javascript typescript", "d": "8/2015"}, {"body": "outsider surely would good guideline follow", "d": "8/2015"}, {"body": "thanks jessegood follow except one using private consistency dart also want const uppercasewithunderscores", "d": "8/2015"}, {"body": "cleanup pr", "d": "8/2015"}, {"body": "think resolved close", "d": "8/2015"}, {"body": "closing please reopen think still missing renames", "d": "8/2015"}, {"body": "tbosch fyi", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "could descriptive example looking shows types give see would like see", "d": "8/2015"}, {"body": "within class interface member functions include argument types instance properties show types nt lack inline documentation lack used types within typescript applied docs build process application seen thing examples live docs site demonstrate well picture", "d": "8/2015"}, {"body": "good point", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "wants generate api docs nobody using components real none classes actually public api", "d": "8/2015"}, {"body": "dartdocsorg generates api docs every package hosted pub automatically right fails generate material components mean saying components nt public api imported listed also loaded dynamically case instead template bindings users would call setters directly", "d": "8/2015"}, {"body": "said feel free deprioritize logged could reference something todo people wonder excusing material library api docs", "d": "8/2015"}, {"body": "bumping since components nt going meant actual consumption much later", "d": "8/2015"}, {"body": "forms separate module needs imported working intended", "d": "8/2015"}, {"body": "unfortunately change import using definitelytyped get find module use another dts set dts instance admit bit confused dts use", "d": "8/2015"}, {"body": "tracked", "d": "8/2015"}, {"body": "currently working would good community contribution", "d": "8/2015"}, {"body": "alexeagle would love help need help starting", "d": "8/2015"}, {"body": "misko already working sorry", "d": "8/2015"}, {"body": "fyi part work", "d": "8/2015"}, {"body": "really discussion super clear direction go eventually api needs frozen become close frozen possible invite people input perspective decision arrived quickly surely short change make", "d": "8/2015"}, {"body": "jeffbcross btford could get resolution since need get breaking changes soon", "d": "8/2015"}, {"body": "familiar http serializing data send endpoint think totally distinct issue routing interacts url", "d": "8/2015"}, {"body": "seems like preferred nomenclature urlparams make think search nt really thing", "d": "8/2015"}, {"body": "btford yeah http used serializing parameters originally created polyfill urlsearchparams constructor accompanied fetch spec caitp discussed addingchanging merging semantics decided probably change name considered polyfill like robwormald suggestion update issue queryparams resolution note nt think change names even though conflict fetch constructor names even though somewhat resemble constructors defined fetch names generic enough unlike", "d": "8/2015"}, {"body": "regarding handle merging behavior going give thought would like specialized merging functions part prototype better embrace immutability open issue two monday implement params merging well necessary changes merging", "d": "8/2015"}, {"body": "done continue improving many things wanted separate repo", "d": "8/2015"}, {"body": "way track rail performance goals users perceive speed web paul irish google keynote", "d": "8/2015"}, {"body": "would great outside scope feature feel free file issue", "d": "8/2015"}, {"body": "thanks made one angularbenchpress repo", "d": "8/2015"}, {"body": "talked misko bit issue biggest win change making community contributions easier performance improvements likely substantial mprobst alexeagle feel giving issue community mechanical task vs needing understanding works want make sure nt backfire respond lot obscure issues", "d": "8/2015"}, {"body": "problem need understanding typescript need change upgrade angular repo change code might blow complexitycoordination budget external contributions rado kirov notifications githubcom schrieb di aug um uhr talked misko bit issue biggest win change making community contributions easier performance improvements likely substantial mprobst alexeagle feel giving issue community mechanical task vs needing understanding works want make sure nt backfire respond lot obscure issues reply email directly view github", "d": "8/2015"}, {"body": "jelbourn version tested tried ca nt reproduce error getting correct one typeerror read property left undefined stylleft hostproperties hello could try amend plunk reproduce", "d": "8/2015"}, {"body": "pkozlowskiopensource master reproduce modifying typo bindings run hit", "d": "8/2015"}, {"body": "verified still happens master", "d": "8/2015"}, {"body": "nt agree developer know style encapsulation would put tag probably stylesheet put instead adding inline tag template component making styles mentioned template component local component logical things mentioned annotations component also local component", "d": "8/2015"}, {"body": "think get put component encapsulated put head vote keeping current behavior close please reopen new use cases considered", "d": "8/2015"}, {"body": "made plunker demonstrate issue problem arise ngmodel bound object key value null select english enter text value correctly updated model angular fails update input field value switch another language back english title correctly updated though", "d": "8/2015"}, {"body": "bit testing accessing values object properties seem issue updated plunk reflect ngmodel bound string field editing text input switching languages leads unpredictable behaviour nt edit input works well", "d": "8/2015"}, {"body": "nevermind forgot inject well since required", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "apart pb chaining pipes change pipe takes lower upper bound arguments even better start index elements functionality introduced wayyy late lacking lot", "d": "8/2015"}, {"body": "lower amp optional upper bound default pipe either method would achieve goal", "d": "8/2015"}, {"body": "think replace legacy filter intuitive pipe following native array api beta costly change", "d": "8/2015"}, {"body": "agree mgcrea actually nt realise got pipe already landed definitively rename change api getting alpha", "d": "8/2015"}, {"body": "pkozlowskiopensource mgcrea strings legacy supports strings arrays keep strings use arrays", "d": "8/2015"}, {"body": "thinking since map native javascript api work way startingindex endingindex", "d": "8/2015"}, {"body": "using pipe", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "nt tests catch defect", "d": "8/2015"}, {"body": "probably combination following run dart analyzer offending code passes analyzer check compile unit tests js dart vm nt care eval annotation used runtime used static analysis therefore never fails tests", "d": "8/2015"}, {"body": "nt run dartium checked mode testing fix thu aug yegor notifications githubcom wrote probably combination following run dart analyzer offending code passes analyzer check compile unit tests js dart vm nt care eval proxy annotation used runtime used static analysis therefore never fails tests reply email directly view github", "d": "8/2015"}, {"body": "currently blocked", "d": "8/2015"}, {"body": "could provide description imagedemo part angular", "d": "8/2015"}, {"body": "imagedemo examples inside exampleswebworkers directory shows build proper webworker application well performance benefits gain using webworkers currently fully functional dartium ca nt load filereader api inside isolate", "d": "8/2015"}, {"body": "currently blocked typescript issue", "d": "8/2015"}, {"body": "looks like become unblocked typescript", "d": "8/2015"}, {"body": "could provide details request vague actionable issue", "d": "8/2015"}, {"body": "sorry mhevery angular docs example allowed examples ran directly browser example radio button click show hide component doc setup angular behavior included", "d": "8/2015"}, {"body": "yes part overall docs effort currently wip tracking individual items rewrite done going close", "d": "8/2015"}, {"body": "working expected meaning go route named root component hierarchy go url path home", "d": "8/2015"}, {"body": "probably looking pipescreate", "d": "8/2015"}, {"body": "thanks answer given try maybe making mistake really verbose job pretty much call thought would easier maybe instead throwing used method could use defaultpipes", "d": "8/2015"}, {"body": "pipes getting redo week moot closing since pipes treated directives issue become obsolete", "d": "8/2015"}, {"body": "replacing git seems work", "d": "8/2015"}, {"body": "reconfigure git use instead git protocol hopefully near future going get rid dependencies git repos wo nt need closing many moving parts repo atm workaround future problem go away", "d": "8/2015"}, {"body": "see basically add base element although note another bug currently scroll see workaround also", "d": "8/2015"}, {"body": "solved error thanks", "d": "8/2015"}, {"body": "right changed via guess deliberate change although sure motivation mhevery kittencup causing problems noting breaking change keep mind still alpha need expect several shifts public api", "d": "8/2015"}, {"body": "pkozlowskiopensource thks", "d": "8/2015"}, {"body": "imports core internal api", "d": "8/2015"}, {"body": "nice", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "done working", "d": "8/2015"}, {"body": "nightly builds", "d": "8/2015"}, {"body": "already publish snapshot builds google cloud storage keyed commit sha help example last commit angularangular get js build result", "d": "8/2015"}, {"body": "nt think easy work around demoting change nt agree", "d": "8/2015"}, {"body": "think fix easy sent pull request instead", "d": "8/2015"}, {"body": "blacksonic already supports annotations decorators want use decorators instead example babel", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "never mind found issue gives example doc think work", "d": "8/2015"}, {"body": "related", "d": "8/2015"}, {"body": "question reference sourdoughbreadcrumbs error message imagine would normally use component selector however example nt exist right generic error message might look like annotationsimplannotationsts give thoughts create pull request make tests", "d": "8/2015"}, {"body": "danielrasmuson conversation looks like typescript tape checking take care people using ts mhevery guess still need check inside people using right would happy help danielrasmuson prepare pr", "d": "8/2015"}, {"body": "sure danielrasmuson send pr", "d": "8/2015"}, {"body": "pkozlowskiopensource started working questions selectors string invalid correct selectors empty string invalid correct validate selector special characters amp providing selector valid see", "d": "8/2015"}, {"body": "danielrasmuson empty invalid omitted selectors throw would start simply verify add checks eg special chars later", "d": "8/2015"}, {"body": "nt conflict", "d": "8/2015"}, {"body": "pascalprecht danielrasmuson yeh thinking think throwing probably early throw selector given directive used case think empty selector might make sense would like conventions ex selector derived class name", "d": "8/2015"}, {"body": "yjbanov others apply dart apps working ts apps well", "d": "8/2015"}, {"body": "rolandjitsu issues question tackling dart initially reason similar precompilation done ts future", "d": "8/2015"}, {"body": "think make issue obsolete tbosch confirm close dup", "d": "8/2015"}, {"body": "yes remove even template parser code generating change detection", "d": "8/2015"}, {"body": "two things need done stop using nt include app code require explicit effort fix feel free reclose issue", "d": "8/2015"}, {"body": "change use transformation get correctly tree shaken well", "d": "8/2015"}, {"body": "cool let keep issue open make sure actually tree shaken doubt happen automatically marking blocked", "d": "8/2015"}, {"body": "think make issue obsolete tbosch confirm close dup", "d": "8/2015"}, {"body": "dynamic change detection used creating host views since way create host views change tbosch refactoring putting issue hold", "d": "8/2015"}, {"body": "marking blocked", "d": "8/2015"}, {"body": "please part one module listed", "d": "8/2015"}, {"body": "include angular upgrade process use case consider", "d": "8/2015"}, {"body": "mlaval good question test lib mocks covered well", "d": "8/2015"}, {"body": "like included separate bundles ala please update table", "d": "8/2015"}, {"body": "nt reason would also add angularuniversal angularreactnativerenderer future available nativescript renderer table two latter particular modules likely would nt always want require either way sounds great reasons already mentioned", "d": "8/2015"}, {"body": "thanks koslun worth mentioning projects like definitely consistent distribution strategies", "d": "8/2015"}, {"body": "updated issue nguniversal reactnativerenderer test lib ngupgrade also added column runtime import namespace clarity mhevery think test lib ngupgrade outputs also thinking complexity confusion benefit publishing angular namespace ie really buys us two things simple module name include namespace module name small assurance installingconsuming packages legit angular package try get insight team members users point", "d": "8/2015"}, {"body": "vsavkin right proposal move forms bundle still part distribution want advocate keeping forms bundle would potentially allow us move rx core bundle well since nt think anything else core bundle would depend", "d": "8/2015"}, {"body": "personally believe hold angular opinions angular way everything glued together classes without modules like probably separate di possible sure workout probably approach keeping namespace small amount angular glue di allowing allowing public version without angular deps needs discussion later universal distribution assume work although server bootstrap serverdomrenderer pending could moved core universal repo needs able push packaging systems outside javascriptdart ecosystem scalarubypython ensure developer experience consistent also another reason mentioned repo see universal becoming list modules interplay within angular ecosystem also server version ensure baseline experience bound javascript hence universal", "d": "8/2015"}, {"body": "use cases perhaps even related migration experience four stages web app repo lifecycle hackable dev lang nt knowstarting code toyexample plunkr tutorials smallmedium small app without party services could ignore bundling build step medium small team many party services build step way large enterprise largely depends architecture team large couple teams project one framework possibly one repo enterprise many teams scoped one feature page many frameworks within fall stage three four lazy loading must web app imho growsmatures time abstraction leveltechnical debt also skip stages start later one seed repos tend stage three best feature completely dominating first three levels great transition refactor higher abstractions stories stage one two three much stage four also stubley ensured certain structure allowed fall pit success moving stage three smallmedium thx servicesdiuiroutercontrollerscope abstractions problem subtle structure suggested falls apart next stage four great foundation patternsconcepts pushed framework fourth stage story great great transition stories early stages moment rails kinda cli way victory stage onetwo also keep mind internet become documentation copy error paste google see answers stackoverflow rails also gets questionable stage four experience experience may reflect everything webdev could wrong said propose use casesmigration could thought similar fashion comparing frameworks examples update focused original issue smallmedium apps fine everything larger apps prefer control dependencies apps may need deconstruct bootstrap process techniques code splitting lazy loading", "d": "8/2015"}, {"body": "jeffbcross gt gt gt think test lib ngupgrade outputs gt gt yes yes", "d": "8/2015"}, {"body": "couple things package already exists pub likely need publish different name bundle renamed pub nt allow hyphens package names", "d": "8/2015"}, {"body": "thanks yjbanov updated table changes di web workers also added column table indicating global object name bundle ie object users interact loading bundles via", "d": "8/2015"}, {"body": "also several di change detection routing strategies makes sense pull much weight add", "d": "8/2015"}, {"body": "thinking di changedetection part core thu aug pm igor minar notifications githubcom wrote also several di change detection routing strategies makes sense pull much weight add reply email directly view github", "d": "8/2015"}, {"body": "vsavkin di strategies used core look router strategies better understand think igorminar point falls line think ideal distribution module loading strategy end users bundle load modules application actually needs nt use generated bundles optional strategies would beneficial move modules fall line ideal described even still include bundle", "d": "8/2015"}, {"body": "edit added text npm distribution bullet proposal per offline discussion includes bundle version module well supported module formats", "d": "8/2015"}, {"body": "would potentially allow us move rx core bundle well since nt think anything else core bundle would depend component events implemented using observables rx stay part core di strategies used core nothing di used core", "d": "8/2015"}, {"body": "sure forms separate bundle going change view decorator contain default set directives available user default forms separate bundle set contain ngmodel", "d": "8/2015"}, {"body": "edit added backlog open issues relating issue", "d": "8/2015"}, {"body": "also separate renderers sort naming convention example server could also bootstrap using workers also domrenderer client domrenderer server aka serverdomrenderer example react decoupling renderer completely outside react renderers threejs canvas var react require react var reactdom require reactdom reactdomrender node still require would default case allowing others configure angular way update focused original issue could also perhaps even rename", "d": "8/2015"}, {"body": "example server could also bootstrap using workers referring app may run worker browser may also rendered server wanting establish naming convention two renderers inside namespace nt accidentally share name already problem", "d": "8/2015"}, {"body": "reading right would install form npm package would something like current bits make confusing know everything located properly import end user also affects tooling end user tooling", "d": "8/2015"}, {"body": "johnpapa good feedback correct import module names particular packages would single npm package names importing invalid would import actual classes functions separate modules like di zones facade probably forms would part people would never import zones facade would typically import di", "d": "8/2015"}, {"body": "thanks typed kinda quick would ideal list exports modules least key ones docs today understand modularity still key decision points break different modules export form module also decision include npm package believe modules small possible key points driving separation solid table see proposed npm package concerned discoverability clarity names perhaps consider naming convention reserved angular driven packages make clear example style important result think key end users bundle load modules application actually needs nt use generated bundles", "d": "8/2015"}, {"body": "jeffbcross yeah sorry mentioned two things workers probably stay name unless highly dependent browser goal looking able fullstack angular class model find id return thisbuisnesslogicasync id doaction thisanimation privatemethodasync client would compile rpc since annotate method server return observablereturn businesslogicasync id long running sync task return observablereturn fibonacci id animation native code animations etc return observablereturn would compile methods environment hide network layer precompile application also able combine renderer think since separation application layer render layer reason packages nt well suggesting naming convention renderers example question environment code live live package separate per environment example serverdomrenderer lines code node version http really could one line code replace browserxhr nodexhr update focused original issue workers stay module could also renderer io separation via question environment separation worry later may affect module distribution importing modules", "d": "8/2015"}, {"body": "could open separate issue discuss", "d": "8/2015"}, {"body": "preboot component within angular universal also npm module used outside angular downstream dependencies", "d": "8/2015"}, {"body": "mhevery igorminar discussing best solution internally landed new hierarchy source files bundles imports ultimate goal simple mental model users framework considering constraints byte size use modules outside context angular update table original comment summary changes previous thinking source directory structure everything inside modules folder could stand npm package though modules useful standalone npm package get rid directories dart tree add build process unit test files live next source files consolidate core parts single import facade di part core exported separately core near future subdirectory bundle ie corejs routerjs modules work angular internally imports words designed work di system nt import anything module like files root module represent export export ie publishing anything npm namespace time one quick bundle plunkers lessbytesensitive apps bundle version described detail publish bundles dependencies rx reflectmetadata systemjs bundles exported includes bundles corejs formsjs routerjs webworkerjs extensions bundle published codeangularjsorg npm bundles folder npm package published codeangularjsorg js dts typings separate folder npm distribution jsmap minjs using uglify eventually using angulartsminify devjs runs dev mode devjsmap testingjs testingjsmap testingdts bundle also get sfx version include dependencies like rx reflectmetadata traceurruntime export global object bundles include testing utilities mocks respective module coretestingjs include bulk testing utilities leaving testing bundles mostly include mocks note vsavkin insists di published separate npm package think best keep folder structure proposed treat di special case give packagejson include npm release process rkirov makes good point encouraging bundles shortterm quick way get started longterm work providing better recommendations productionready build setups also points bundles may confusing little gain saved bytes current systemjsbased build system router still minified http similar minified overall still significant byte savings certain use cases separate bundles individual published bundles also provides transparency file size different modules", "d": "8/2015"}, {"body": "dupe", "d": "8/2015"}, {"body": "firecube please use appropriate support channel types questions thnx", "d": "8/2015"}, {"body": "done sorry posting", "d": "8/2015"}, {"body": "sidenote code change actually soon changed next release", "d": "8/2015"}, {"body": "deepakshrma help", "d": "8/2015"}, {"body": "thank quick reply however looking answer already got answer want correction document novice nt want issue initial phase learning", "d": "8/2015"}, {"body": "working tests examples docs catch error going collect one issues like going close", "d": "8/2015"}, {"body": "offending commit pulled", "d": "8/2015"}, {"body": "reverted changes", "d": "8/2015"}, {"body": "manfredsteyer probably looking works today nt see much problem apart introducing yetanotherwayofdoingthings adding", "d": "8/2015"}, {"body": "idea alternative syntax legacy html user familiarity example able create componentsdirectives work angular angular following interface due fact angular nt enforce conventions since one knew best practices componentdirectives years ago actually take advantage today gave subtle nod migration technique ngvegas essentially create directive works example notice using alternative syntax angular today using alias create directive event already angular legacy make sense continue path allows delete half code means twice good since half code switching angular know best practices", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "angular nonnative htmlparser vdom ca nt anything faster opinion", "d": "8/2015"}, {"body": "run vdoms going close issue vague please open issue specific actionable tasks", "d": "8/2015"}, {"body": "make pull request howto fix commit message something along lines also click edit icon quickly make pr make sure commit message correct", "d": "8/2015"}, {"body": "submitted pull request close issue handle link request", "d": "8/2015"}, {"body": "github pr edit description add way github automatically close issue also helps figuring information pr", "d": "8/2015"}, {"body": "thanks first pr angular excited smiley", "d": "8/2015"}, {"body": "cc skybrian", "d": "8/2015"}, {"body": "perhaps unrealistic test code nt know real apps suffer", "d": "8/2015"}, {"body": "may intentional could plunker demonstrates determine something reinserted", "d": "8/2015"}, {"body": "nt know plunker profiled test code chrome dev tools found time spent functions ngfor internal discussion good heuristic find common prefixes suffixes starting beginning ends lists run sophisticated algorithm whatever left middle common case one change optimal looked diff algorithm ago looked like would handle common prefixes well common suffixes ideas cheap diff heuristics", "d": "8/2015"}, {"body": "longest increasing subsequence lis would able identify minimal moves nlog n hard implement also need find shortest list length past lis faster simpler approach certainly lists use ad hoc functions instead generic list differ mhevery need plunker skybrian provided repro sample github gist", "d": "8/2015"}, {"body": "current algorithm outputs added removed amp moved elements sure would handle common suffix vs common prefix probably directive deals changes blame remove view removed amp moved nodes removes dom nodes add views inserted nodes point final number views context might wrong loop views set context index element first step would investigate diff algo directive code blame cc rkirov", "d": "8/2015"}, {"body": "please see pending pr current workaround fix", "d": "8/2015"}, {"body": "pr fixes issue many thanks", "d": "8/2015"}, {"body": "nt think drooping one complaining nice nt think annotations way go would bloat ts code come way annotating things without adding payload", "d": "8/2015"}, {"body": "complaint form hello world strip annotations publishing npm elsewhere", "d": "8/2015"}, {"body": "sure effective way make progress agree yjbanov need start looking causing code size grow particular agree think optin optout annotations help guide process might ways like schedule time brainstorm ideas separately looking general ways make easier track source code culprits dumpinfo partially using codecoverage information using callgraph dependencies figure pulling lot code make easier analyze kind data would really useful framework specific hints narrow search imagine labeling portions never expected part production app suggested come handy", "d": "8/2015"}, {"body": "making need hopefully start removing dynamic pieces runtime otherwise easy pull back without knowing", "d": "8/2015"}, {"body": "another though could notion way automatically exclude transformed code anything would injected development", "d": "8/2015"}, {"body": "sigmundch would combining work bigger issue transformers nt addressed yet namely pull everything ngdeps files used used perhaps transformer prod mode crawls sources looking things actually used app could course also ask people break code smaller libraries eg overuse still kind defeating tree shaking capability", "d": "8/2015"}, {"body": "right discussed potential solutions tree shaking issue design doc", "d": "8/2015"}, {"body": "yjbanov sorry dropping second time around think bulk operations issues issue got coughed bulk agree figuring shrink size hello world clear specific actions need taken think focus understanding problem start guessing solutions", "d": "8/2015"}, {"body": "brainstormed tobias best approach fix settled making query iterate views view containers relieve injectors duty keep downward pointers children would remove need keep containing anything view local injectors making staticly known", "d": "8/2015"}, {"body": "fyi start culling generation unnecessary getters amp setters gated change", "d": "8/2015"}, {"body": "since blocking let bump find owner tomorrow", "d": "8/2015"}, {"body": "closed via", "d": "8/2015"}, {"body": "rkirov stevemao think recent update conventionalchangelog caused", "d": "8/2015"}, {"body": "nt think regenerated computer like looks like changelog run somehow release", "d": "8/2015"}, {"body": "sure actionable since remove duplicate closing", "d": "8/2015"}, {"body": "grr detection dangling attributes would really help catch cases using directives template without listing given directive maybe first step could throw attributes matched directive names elements names containing prefixed perfect able catch common errors", "d": "8/2015"}, {"body": "pkozlowskiopensource stoping implementing thought something already workng", "d": "8/2015"}, {"body": "mhevery nothing particular stops us apart needs work items take care need way knowing attributes consumed directive selector static property bindings need way knowing legitimate attributes regular html elements handcode schema html specs web components require handwritten schema devs definitively doable require work put one releases depending priorities", "d": "8/2015"}, {"body": "taking care today", "d": "8/2015"}, {"body": "moved next milestone complications crossmodule dependencies need figure", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "getting redone week new code different closing", "d": "8/2015"}, {"body": "closing since decided move core publish", "d": "8/2015"}, {"body": "decision available standalone someday wed aug jeff cross notifications githubcom wrote closing since decided move core publish reply email directly view github", "d": "8/2015"}, {"body": "great idea party modules also want support ts dart", "d": "8/2015"}, {"body": "bad news fellas going stay core really thing want maintain support outside folks doubt significant interest building libs target js dart still core could pretty easily consumed installing package moving module though later becomes apparent value separating reason could nt time", "d": "8/2015"}, {"body": "good news keeps improving facade getting smaller less necessary", "d": "8/2015"}, {"body": "done way still works older chrome versions", "d": "8/2015"}, {"body": "yeh bumping working dart unit tests well simple test reproduce add injectorspects test fail chrome linux injector dynamic confusing err failed test failed caught error instantiation engine injectornew package injectordynamicstrategygetobjbykeyid package injectorgetbykeydefault package injectorgetbykey package injectorget package notice enough context trace original exception vsavkin would love fix one got pointers", "d": "8/2015"}, {"body": "got pb js crux seems like default jasmine calling exception obj reporting exceptions message instead following logic used maybe make sure original error message part message thinking really pb exception di", "d": "8/2015"}, {"body": "yes also met case select tag called scale changed input tag called scale changed", "d": "8/2015"}, {"body": "guys tried swap position see position affects outcome", "d": "8/2015"}, {"body": "yes tried nothing change", "d": "8/2015"}, {"body": "alright wondering bindings meant predictable time around wondering position mattered breaking apart twoway binding probably wo nt change anything either", "d": "8/2015"}, {"body": "browsers change attributes order access attributes sure latest browsers position nt matter happen angular ngmodel higher priority normal events priority concept gone angular btw", "d": "8/2015"}, {"body": "handled processing events processing events elements would allow directives rewriteremap events", "d": "8/2015"}, {"body": "mhevery explain give link explanation need info new comer thanks", "d": "8/2015"}, {"body": "tbosch sounds like working intended closed", "d": "8/2015"}, {"body": "solved via well", "d": "8/2015"}, {"body": "matanlurey time angular gets hold dom attributes lowercased ca nt anything closing since working intended", "d": "8/2015"}, {"body": "typotter yes", "d": "8/2015"}, {"body": "vsavkin could quickly summarize better deal performance", "d": "8/2015"}, {"body": "pascalprecht simpler developer need create new concepts reason actions deal webworkes customrenderer better solutions", "d": "8/2015"}, {"body": "really clear asking perhaps start problem first", "d": "8/2015"}, {"body": "mhevery thank feedback may see topbar component close button internal behaviour let say close view want able override behaviour let say want default event clicking close button actually closing view specific view want open dialog confirm closing view could use event emmiters works fine beside wanted default behaviour best regards tiago braga", "d": "8/2015"}, {"body": "think asking button know someone listening short answer would create weird behavior nt want add api closing nt think anything us", "d": "8/2015"}, {"body": "close issue replace concrete issue needs done", "d": "8/2015"}, {"body": "right initial question answered close handle actionable items", "d": "8/2015"}, {"body": "sorry", "d": "8/2015"}, {"body": "websocket work zone today bug zone filed sure angular business writing things notangular specific think use cases better served separate third party projects would much rather focus things angular needs enable work smoothly existing code would like see community pick kinds projects would tempted close issue least push road first main release", "d": "8/2015"}, {"body": "agreed closing seeking input apps realtime communication facilitated problems angular help alleviate", "d": "8/2015"}, {"body": "think works intended think used notice double dash", "d": "8/2015"}, {"body": "closing dup", "d": "8/2015"}, {"body": "changing annotation list property name currently use html template case insensitive systems us nativescript reactnative case sensitive dashcase dealing html case insensitive problem goes away use different rendering bring html limitation rest framework would make sense nonhtml renderers mental model property name object fact html case insensitive html problem pollute rest declaring class closing working intended", "d": "8/2015"}, {"body": "tbosch still problem new compiler prototype", "d": "8/2015"}, {"body": "nt think", "d": "8/2015"}, {"body": "ok let close", "d": "8/2015"}, {"body": "rare syntax easy workaround dropping", "d": "8/2015"}, {"body": "issues please use gitter helpdiscussions", "d": "8/2015"}, {"body": "nt see anything wrong describe steps reproduce expected vs actual behavior", "d": "8/2015"}, {"body": "lack reproducible steps closing", "d": "8/2015"}, {"body": "vsavkin thought implement please close update status", "d": "8/2015"}, {"body": "solved", "d": "8/2015"}, {"body": "moving next milestone make room higher priority items", "d": "8/2015"}, {"body": "think already one", "d": "8/2015"}, {"body": "tracks internal bug", "d": "8/2015"}, {"body": "igorminar matsko like help designing", "d": "8/2015"}, {"body": "still trying design good design tricky ca nt easily work backwards arbitrary partial url set components properly generate instruction solution handles case link like routeconfig new redirect path redirectto second new route path second component dummycmpb secondcmp class parentredirectcmp view template routeconfig new route path first component parentredirectcmp firstcmp class appcmp redirect child another route within child everything works fine trying deeplink redirect parent deep hierarchy work", "d": "8/2015"}, {"body": "would polyfill help probably sounds drop api instead implement would require design doc support", "d": "8/2015"}, {"body": "confused suggesting work needs wait global cd finish seem right chat", "d": "8/2015"}, {"body": "name unfortunate proposing anything global imagine following tree injectorsnodes called dirtycheck bindings injq called dirtycheck dirty check need callback local injq called dirtycheck bindings whole component view tree callback still local injq global", "d": "8/2015"}, {"body": "see makes sense", "d": "8/2015"}, {"body": "clearing assignee since milestone", "d": "8/2015"}, {"body": "situation code size report angulardistdartexamplesbuildwebsrchelloworldindexdartjs true total file size bytes bytes ngdeps bytes dart runtime libs bytes bytes unaccounted bytes breakdown interceptors bytes isolatehelper bytes jshelper bytes angular bytes angularcore bytes angularcorefacade bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes bytes dart bytes dartinternal bytes dartasync bytes dartcollection bytes dartconvert bytes dartcore bytes dartdom bytes dartdomhtml bytes dartdomsvg bytes dartjs bytes darttypeddata bytes darttypeddataimplementation bytes htmlcommon bytes intl bytes path bytes pathcontext bytes pathstyle bytes stacktrace bytes testability bytes testabilitygettestability bytes trace bytes", "d": "8/2015"}, {"body": "specs passing", "d": "8/2015"}, {"body": "vsavkin", "d": "8/2015"}, {"body": "ping vsavkin", "d": "8/2015"}, {"body": "yjbanov think longer issue closed verify", "d": "8/2015"}, {"body": "special case directives nt need dom node could allowed light dom without projected", "d": "8/2015"}, {"body": "work next iteration", "d": "8/2015"}, {"body": "nice thank yoou", "d": "8/2015"}, {"body": "going keep open issue properly lands", "d": "8/2015"}, {"body": "wontfix worksasintended way shadowdom works importantly maybe real panel reprojection tests mockpanel reprojection case nt want fail think correct behavior", "d": "8/2015"}, {"body": "note done elementrefnativeelement return element elementrefs even projected mon aug pm mi\u0161ko hevery notifications githubcom wrote wontfix worksasintended way shadowdom works importantly maybe real panel reprojection tests mockpanel reprojection case nt want fail think correct behavior reply email directly view github", "d": "8/2015"}, {"body": "matanlurey could add justification reopen", "d": "8/2015"}, {"body": "remaining points urgent supporting transformer", "d": "8/2015"}, {"body": "merged via", "d": "8/2015"}, {"body": "cc vsavkin matanlurey nt think support think incorrect component use presence listener input behavior component behave regardless listener want change way component behaves explicit flags passed regardless presence listeners wontfix workingasintended", "d": "8/2015"}, {"body": "still issue closed", "d": "8/2015"}, {"body": "think closed check issue still occurs open sent iphone aug mi\u0161ko hevery notifications githubcom wrote still issue closed reply email directly view github", "d": "8/2015"}, {"body": "tracks internal bug", "d": "8/2015"}, {"body": "please note route browser url necessarily route active since active route could temporally changed custom outlet example block certain routes user logged still showing original url user go logging currently app using private variable routercurrentinstructioncurrentcomponent see route active need something better public reflect actual component url currently seeing necessary url hope helps", "d": "8/2015"}, {"body": "error", "d": "8/2015"}, {"body": "closing since reworking docs startup sequence change errors stem including file gotten step", "d": "8/2015"}, {"body": "hope makes time offer pr would still open couple days could certainly help", "d": "8/2015"}, {"body": "probably getting cut today started like send pr would really appreciated wed aug pm nathan walker notifications githubcom wrote hope makes time offer pr would still open couple days could certainly help reply email directly view github", "d": "8/2015"}, {"body": "punting next milestone maybe nathanwalker get", "d": "8/2015"}, {"body": "alexeagle sorry nt able get yet look typings template last week setup changed bit since earlier alpha versions unable understand fully needed done make static methods available dts file", "d": "8/2015"}, {"body": "thank letting know status try look today tomorrow", "d": "8/2015"}, {"body": "fwiw nt think issue checking last input value fact case match would return input value transformed output since transforms cheap anyway worth optimization place anyway", "d": "8/2015"}, {"body": "problem used code reference since real pipe time course real docs time also api changed remove return reference transformation nt need happen changed use also smoke tests pipes app optimized change detection reference checks old pipe api changedetectionpipesobservablepipets maintain reference observable essentially states transform something different causes side effects observable without subscription observable subscription current valuereturned value current valuereturned value different know create prevented cycle happening change returns new observable reference actually potential bug first state return returned value returned value dereferenced ondestroy pipe lifecycle rather observable reference lifecycle said went back refactor pipes bad", "d": "8/2015"}, {"body": "looking commit closed issue thought fact untransformed value returned initial invokation nt know much pipes probably misread disappointed sorry noise smilingimp", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "look issue ca nt reproduce see plnkr matanlurey please provide details issue", "d": "8/2015"}, {"body": "matanlurey update weeks still sounds like nt hear next days close ca nt reproduce", "d": "8/2015"}, {"body": "close reproduce please reopen show repro case", "d": "8/2015"}, {"body": "nt call begin", "d": "8/2015"}, {"body": "jeffbcross also released maybe switch", "d": "8/2015"}, {"body": "looking today mprobst emailing vscode team like fully understand options write something", "d": "8/2015"}, {"body": "outcome typescript ecosystem nt good generalpurpose solution followup separately angular specifically distribute bundled npm package remove files currently distributed add block run add angular typings without using definitelytyped", "d": "8/2015"}, {"body": "alexeagle unfortunately seems bundled files still added tsddts reinstall install needed typings way prevent", "d": "8/2015"}, {"body": "btford shahata news", "d": "8/2015"}, {"body": "closed ago eagerly waiting news", "d": "8/2015"}, {"body": "btford working hard track current state", "d": "8/2015"}, {"body": "good go", "d": "8/2015"}, {"body": "fixed angularzonejs repo default zonejs file work webworker next time release", "d": "8/2015"}, {"body": "nice thanks", "d": "8/2015"}, {"body": "looks resolved closing", "d": "8/2015"}, {"body": "closed image demo", "d": "8/2015"}, {"body": "wanted mention feature could important might look first sight lot common use cases seem need feature take example menu submenus case believe need lightdom element directives loop list render either entry submenu alternative way implementing current api thanks", "d": "8/2015"}, {"body": "let implement yet may negative perf improvement let make sure real use cases implemented ways", "d": "8/2015"}, {"body": "searching repository could find example unit testing services mocked done without testcomponentbuilder", "d": "8/2015"}, {"body": "pr almost ready hope get initial submit week", "d": "8/2015"}, {"body": "matanlurey update pr", "d": "8/2015"}, {"body": "nt need nt write properties directive binds property ie nt generate different bindings based", "d": "8/2015"}, {"body": "thanks change better still working expected tried following alpha using css class selected lowercase ie work", "d": "8/2015"}, {"body": "amoizp talking different issue need keep mind html casesensitive casepreserving type html browser autocorrect lowercasing attribute names happens angular compiler run ca nt much one", "d": "8/2015"}, {"body": "pkozlowskiopensource got thanks far upgrade angular working well keep guys", "d": "8/2015"}, {"body": "closing obsolete reopen still issue", "d": "8/2015"}, {"body": "merged via", "d": "8/2015"}, {"body": "scenario support canactivate returns false tried fetch data data found rather displaying component want redirect item found view parameterized item idname", "d": "8/2015"}, {"body": "pr caitp please provide update", "d": "8/2015"}, {"body": "also namespace dynamic ie ngrouter described", "d": "8/2015"}, {"body": "still issue fixed", "d": "8/2015"}, {"body": "yeah already fixed thanks", "d": "8/2015"}, {"body": "mhevery btford news one also try use requestanimationframe angular suffer huge performance drops", "d": "8/2015"}, {"body": "thought resolved verify", "d": "8/2015"}, {"body": "fix patching requestanimationframe still pending zonejs repo nt think resolved compare latest release build weekend sure", "d": "8/2015"}, {"body": "pending", "d": "8/2015"}, {"body": "mhevery zonejs issue merged closed", "d": "8/2015"}, {"body": "needs upgrade latest zonejs close issue", "d": "8/2015"}, {"body": "released fix longer blocked", "d": "8/2015"}, {"body": "pushing presubmit", "d": "8/2015"}, {"body": "jeffbcross like work easy task would able elaborate little bit really want maybe hints would like get rid using requestmethods becomes constant list would constants separate file called thanks", "d": "8/2015"}, {"body": "hey rixrix thanks chiming sorry nt see notification comment sooner actually little easier dart support dropped altogether module fix issue remove class enumsts change occurences use typescriptprovided reverse enum lookup like example example looks like files need change enumsts backendsjsonpbackendts backendsxhrbackendts let know provide info", "d": "8/2015"}, {"body": "hi jeff thanks look today cheers", "d": "8/2015"}, {"body": "hi pushed pr ticket good get feedback thanks", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "pkozlowskiopensource planing work", "d": "8/2015"}, {"body": "mhevery point sure could improve err messages without compromising generality template syntax parsing imo getting lot millage detecting dangling bindings already got issues pipe detect dangling events attributes etc nt think template syntax vote goes closing one think better productivity gains tackling items", "d": "8/2015"}, {"body": "pkozlowskiopensource sgtm", "d": "8/2015"}, {"body": "updated days seem like still issue close", "d": "8/2015"}, {"body": "nt seen close open new issue see similar things", "d": "8/2015"}, {"body": "btford way dynamic routerlinks template", "d": "8/2015"}, {"body": "btford provide update believe proper ast", "d": "8/2015"}, {"body": "afaik nt yet started work binding ast transformations need order implement better linking dsl", "d": "8/2015"}, {"body": "pkozlowskiopensource still progress moved alpha please remove milestone nt think land wednesday", "d": "8/2015"}, {"body": "moving wo nt able finish today", "d": "8/2015"}, {"body": "still issue", "d": "8/2015"}, {"body": "bug concerning status seems fixed tests statustext still defaults ok maybe could test status code use generic http error internal server error also seems eventemitter returned httprequest calling observernext even status reports error case rather pass observerthrow edit actually found already issue", "d": "8/2015"}, {"body": "agree vicb interface disappear runtime break di think usage related di could removed perhaps way ts implemented abstract keyword", "d": "8/2015"}, {"body": "sorry still prioritized breakdown first", "d": "8/2015"}, {"body": "bumping landed part cleanup needed jeffbcross working one lands still need crawl repo look traceur use mechanical cleanup work", "d": "8/2015"}, {"body": "may affected", "d": "8/2015"}, {"body": "stale feature removed", "d": "8/2015"}, {"body": "nt part type definition typescript assert", "d": "8/2015"}, {"body": "started tackle one question added new states http enums removed readystate property connection interface renamed mockbackend state jsonpbackend logic checks cancelled state state property nt states nt know exactly could check properly check connection cancelled", "d": "8/2015"}, {"body": "still relevant", "d": "8/2015"}, {"body": "yes probably merely nice ie", "d": "8/2015"}, {"body": "finalised http request responses plans returning events progress rather response perhaps would better return connection backends return etc events instead", "d": "8/2015"}, {"body": "ticked list", "d": "8/2015"}, {"body": "thanks pascalprecht updated list status prs", "d": "8/2015"}, {"body": "also done least ready review", "d": "8/2015"}, {"body": "closing stale", "d": "8/2015"}, {"body": "issues well injection http module using definetlytyped typescript think import like use inject add constructor getting error message person add person many friends directives ngfor ngif class personlist peoplelist array http bootstrap personlist found issue using found bit wierd use also inject make work works", "d": "8/2015"}, {"body": "made basic modification little project initially based angularclass starter cfontes examples release w release inject globally location nt constructor level unlike previous post however injecting via would require use constructor w release nt anymore either inject globally component level one thing note though component level might need use instead maybe try sync w release", "d": "8/2015"}, {"body": "sure upgrading problem gone away anybody still experiencing", "d": "8/2015"}, {"body": "rixrix nice thanks use viewbindings instead viewinjector ca nt find reference information", "d": "8/2015"}, {"body": "cfontes viewinjector nt exist anymore called viewbindings ps documented changelog though", "d": "8/2015"}, {"body": "good reason qua de ago de eric mendes dantas lt notifications githubcom wrote cfontes viewinjector doesnt exist anymore called viewbindings reply email directly view github cristiano fontes", "d": "8/2015"}, {"body": "vsavkin deviated semantic commit message format commit prevented making changelog", "d": "8/2015"}, {"body": "verify reproduction issue fixed newer releases", "d": "8/2015"}, {"body": "think typescript needs hint generate runtime type information di therefore requirement injection decorator work jeffbcross closed", "d": "8/2015"}, {"body": "sure would nice could tell ts compiler always generate rather import injectable every single file", "d": "8/2015"}, {"body": "mhevery nt simply trick", "d": "8/2015"}, {"body": "could class foo constructor inject bar bar injectable class foo constructor bar bar feels like idiomatic ts nt appear matter decorator long one seems like could flag ts compiler options like alwaysgeneratemetadata aug pm pascal precht notifications githubcom wrote mhevery nt simply inject trick reply email directly view github", "d": "8/2015"}, {"body": "hesitant support api surface think let others implement missing functionality independent zone closing reopen feel strongly", "d": "8/2015"}, {"body": "removed milestone left assigned julie since wip", "d": "8/2015"}, {"body": "think remove tags compilation optionally move head want", "d": "8/2015"}, {"body": "would vote removing tags altogether nt think want act poor man loader via templates send firstshot pr discuss", "d": "8/2015"}, {"body": "pkozlowskiopensource sgtm", "d": "8/2015"}, {"body": "think related building app along typescript sources", "d": "8/2015"}, {"body": "obsolete work", "d": "8/2015"}, {"body": "vicb update still valid issue", "d": "8/2015"}, {"body": "think would still nice find generic solution investigate nt seen igor comment", "d": "8/2015"}, {"body": "still issue", "d": "8/2015"}, {"body": "vicb could please point doc discussion recommended way native dom manipulation angular understand would work fine using templates bindings angular sometimes people want integrate thirdparty libraries like jquery plugin learned cached whatever append manually must undo callback questions allowed inject constructor add div lifecycle clear better use managing dom manually way preferable difference understand busy asked would appreciate link could find thank", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "update check reflect metadata done", "d": "8/2015"}, {"body": "moving backlog sure time dive zones coming week", "d": "8/2015"}, {"body": "still issue closed", "d": "8/2015"}, {"body": "yep unfortunatelly still pb quite pesky one since really slows developer flow tdd async tests", "d": "8/2015"}, {"body": "going close work around seems like one working reopen feel otherwise", "d": "8/2015"}, {"body": "moving next milestone waiting make sure consistent distribution story moving forward somewhat stable hoping reviewable tomorrow morning", "d": "8/2015"}, {"body": "looks like resolved closing", "d": "8/2015"}, {"body": "believe refactored code issue satisfied closing", "d": "8/2015"}, {"body": "think done going close treat remainder specific errors", "d": "8/2015"}, {"body": "tedsander update", "d": "8/2015"}, {"body": "sorry yes marking closed", "d": "8/2015"}, {"body": "vicb comment", "d": "8/2015"}, {"body": "vsavkin", "d": "8/2015"}, {"body": "vicb sorry yes vsavkin comment", "d": "8/2015"}, {"body": "tried merge rebased master realized current implementation issue turns concrete exception ie fix every subclass implement method issue concrete constructors take rather signatures changed decided abandon since added code payload constructor signature complexity justify benefit immutability given exception mutated di see little value turning immutable code closing", "d": "8/2015"}, {"body": "wontfix", "d": "8/2015"}, {"body": "rkirov still issue closed", "d": "8/2015"}, {"body": "superceeded", "d": "8/2015"}, {"body": "mhevery using mdinput demo subsequently ending fairly certain current mdinput works ignores uses course means works fine long want input elements mdinput elements want naked input element wrapped input element within component luck nt tested following mdinputcontainer bet dollar fail either missing provider error npe containerregister exception thrown use complex selectors would saved bit time read docs eventually", "d": "8/2015"}, {"body": "jelbourn comment", "d": "8/2015"}, {"body": "ggranum yeah current mdinput works hits input elements selector throwing error bug describes material components codebase mainly experiments may issues similar", "d": "8/2015"}, {"body": "case using comma space selectors fri aug jeremy elbourn notifications githubcom wrote ggranum yeah current mdinput works hits input elements selector mdinputcontainer input throwing error bug describes material components codebase mainly experiments issues similar reply email directly view github", "d": "8/2015"}, {"body": "mhevery current state selector checking work answer never bothered changing whole component going redone", "d": "8/2015"}, {"body": "see lines using thisresults", "d": "8/2015"}, {"body": "obsolte", "d": "8/2015"}, {"body": "still issue latest change way encapsulation", "d": "8/2015"}, {"body": "current solution server rendering encapsulation emulated combining styles using serialized stylesheet next serialized app problem client aware host location generated server client injects styles encapsulation none control encapsulation native nt work server", "d": "8/2015"}, {"body": "new design compiler make public soon solve issue", "d": "8/2015"}, {"body": "change yet implemented master hopefully weeks", "d": "8/2015"}, {"body": "little issue feature say template made like use form viewquery directive get reference use viewquery directive log result console get empty results array expend see content see still able access feature tested supposed work also tried previous alpha versions none seems make work alpha", "d": "8/2015"}, {"body": "aboeglin look", "d": "8/2015"}, {"body": "closing obsolete please reopen still issue", "d": "8/2015"}, {"body": "one feature binding missing still nt noticed angular ability switch binding based another property one example usage think static labels change language switch", "d": "8/2015"}, {"body": "vsavkin think thinking wo nt support close", "d": "8/2015"}, {"body": "currently one use case create new observable every tick store reference observable template problem wo nt present anymore tempting solve problems extending template syntax user already way deal component seem unreasonable even though hard implement recommend requires new syntax makes execution model complicated jeffbcross another good use case bind functionality", "d": "8/2015"}, {"body": "bummer use cases like falcor model tied controller suppose alternative solution patch falcor return promise repeated requests identical values long value underneath nt changed seems like would nice users angular handled transparently though", "d": "8/2015"}, {"body": "ewinslow planning tight integration falcor best way get", "d": "8/2015"}, {"body": "ok well good know guess", "d": "8/2015"}, {"body": "blocked probably wo nt fix time soon dropping priority", "d": "8/2015"}, {"body": "vicb still case close issue", "d": "8/2015"}, {"body": "sure mean ask vsavkin", "d": "8/2015"}, {"body": "sorry vicb vsavkin still case close issue", "d": "8/2015"}, {"body": "vicb still relevant think stale please reopen think otherwise", "d": "8/2015"}, {"body": "btford better person answer", "d": "8/2015"}, {"body": "mhevery tried using host injector plausible works still nt work property host property instanciated via http request async wait instanciated best regards tiago braga", "d": "8/2015"}, {"body": "explaining load async dependency get already instantiated without explicitly call wait response afraid far know nt mechanism implemented want way think one illustrated bellow probably may ways used js import viewencapsulation component view import observablewrapper class asyncdep constructor logic returns promise observable factory actually want component selector mycomponent viewbindings asyncdep view encapsulation viewencapsulationnative template hello name directives class mycomponent name string res myasyncdep constructor myasyncdep asyncdep myasyncdepthen res gt thisres res ready use yet need wait resolved promise observable observerwrappersubscribe myasyncdep res gt thisres res", "d": "8/2015"}, {"body": "managed solve ngif ready guess onactivate work", "d": "8/2015"}, {"body": "vsavkin reworked error massages stale closing", "d": "8/2015"}, {"body": "vsavkin reworked error reporting quite bit make lot useful closing issue stale", "d": "8/2015"}, {"body": "putting back backlog nt think time work timeframe", "d": "8/2015"}, {"body": "ca nt automatically added build step", "d": "8/2015"}, {"body": "pajn whatever come needs work without build step well", "d": "8/2015"}, {"body": "longer case closing", "d": "8/2015"}, {"body": "based inperson discussion vsavkin mhevery going support binding host properties would either require activating directives host properties complex specialcasing compiler people need add remove classes dynamically directives done injecting renderer element ref imperatively based task breakdown x rename class directive selector see pr check easy hard imperative dynamic class manipulation directive make sure works correctly hydrating dehydrating add convenience apis hand current apis cumbersome", "d": "8/2015"}, {"body": "vsavkin based discussion yesterday proposal helper api assuming got intentions right java directive selector mydirective lifecycle lifecycleeventondestroy export class mydirective constructor private cssclass cssclass thiscssclasstoggle foo true interface utility name decided would implementation would stateful would track classes added removed given element would capable cleaning sth guys mind", "d": "8/2015"}, {"body": "sgtm thu aug pawel kozlowski notifications githubcom wrote vsavkin based discussion yesterday proposal helper api assuming got intentions right directive selector mydirective lifecycle lifecycleeventondestroy export class mydirective constructor private cssclass cssclass thiscssclasstoggle foo true dosomething thiscssclasstoggle foo false thiscssclasstoggle bar true ondestroy void thiscssclasscleanup interface utility name decided would interface cssclass toggle classname string add boolean cleanup implementation would stateful would track classes added removed given element would capable cleaning sth guys mind reply email directly view github", "d": "8/2015"}, {"body": "pkozlowskiopensource like idea would also methods addition toggle wonder make something user nt call manually", "d": "8/2015"}, {"body": "hi allow step pkozlowskiopensource think method kinda see use cheers", "d": "8/2015"}, {"body": "jelbourn definitively add convenience cleanup wonder make cleanup something user nt call manually whole idea behind helper class remembers classes need similar mechanism styles added removed given element view get dehydrated restore initial state element would love way nt need users explicitly call nt know atm", "d": "8/2015"}, {"body": "vsavkin way making changes injection support something like automatically disposed upon component destruction", "d": "8/2015"}, {"body": "pr ready review", "d": "8/2015"}, {"body": "rkirov still thing closing think current workaround sufficient reopen feel otherwise", "d": "8/2015"}, {"body": "see let part angular core wo nt work precompiled templates please feel free publish standalone directive tbosch really last word regarding", "d": "8/2015"}, {"body": "closing since inactive obsolete", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "covered", "d": "8/2015"}, {"body": "sekibomazic add justificationusecase need custom events bubbling makes sense input keymouse events", "d": "8/2015"}, {"body": "hi mhevery nt know sekibomazic use case following scenario imagine component trigger service call thus requering kind loading animation depending component location parent want different behaviours loading animation could propagate custom events could easily implement course ways time many better examples surge sure supported hope consider functionality best regards", "d": "8/2015"}, {"body": "mhevery special use case honest expect custom event bubbled well intuitive first time deal later problem another nice guess", "d": "8/2015"}, {"body": "asking add attribute compiler pick compilation creates bit magic distance nt think worth complexity case inject able pragmatically add hoover behavior elment working intended", "d": "8/2015"}, {"body": "naomiblack looks like resilient going close please provide specific use case reopen", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "mhevery thoughts get implemented also would idiomatic approach rules spanning single control", "d": "8/2015"}, {"body": "initial support running tests sauce landed needs done open separate focused issues", "d": "8/2015"}, {"body": "obsolote", "d": "8/2015"}, {"body": "mhevery honest given much greater thought unsure angular responsibility implement sure nice refresh feature resource use cases taken account hardly aid proper solution far involved simple resource refresh instance need two side responseexisting comparison records hope write soon share may interested quick look loopback live set example see possible option solve part problem meantime suggest issue closed", "d": "8/2015"}, {"body": "angular include like api think community step closing outside scope", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "quite similar pb null string conversion attributes discussed pb exactly also calls special setter mechanism given property", "d": "8/2015"}, {"body": "land next couple days", "d": "8/2015"}, {"body": "dup closing", "d": "8/2015"}, {"body": "obsolete reopen still needed", "d": "8/2015"}, {"body": "reopen still issue", "d": "8/2015"}, {"body": "stale", "d": "8/2015"}, {"body": "btford update", "d": "8/2015"}, {"body": "track properly boot time actually increasing time went last comment min hardware finished buildjsdev", "d": "8/2015"}, {"body": "wont fix", "d": "8/2015"}, {"body": "issue cant tell difference class method class property function horrible hack something like reading property twice checking identity different assumed method assumed property vsavkin could add thoughts", "d": "8/2015"}, {"body": "sending backlog nt think get another weeks issues api doc infrastructure language singlesourcing resolved", "d": "8/2015"}, {"body": "closed via", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "opened see get tests stuff modulesexamples", "d": "8/2015"}, {"body": "mhevery probably closed closed well", "d": "8/2015"}, {"body": "problem angular alpha version examples angulario work", "d": "8/2015"}, {"body": "chomba provide plunk verification", "d": "8/2015"}, {"body": "also latest alpha currenlty might wan na update", "d": "8/2015"}, {"body": "tbosch status closed", "d": "8/2015"}, {"body": "master also queriable however nt time change support custom templates implement local wip branch wo nt continue next weeks focus compiler improvements gt happy far", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "docs redone obsolete", "d": "8/2015"}, {"body": "docs redone obsolete", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "news eta one ran bug trying figure property interpolation alpha still present", "d": "8/2015"}, {"body": "known issue vsavkin comment", "d": "8/2015"}, {"body": "rkirov status nt think easily support", "d": "8/2015"}, {"body": "yep support dart type objects used instanceof checks write something like dart supporting purely ts worth extra complexity closing issue needed revisit adding custom filter query", "d": "8/2015"}, {"body": "status update", "d": "8/2015"}, {"body": "became low priority compared things eg thu aug pm mi\u0161ko hevery notifications githubcom wrote status update reply email directly view github", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "alternative decorator annotations", "d": "8/2015"}, {"body": "event amp property feels naturalexplicitintuitive", "d": "8/2015"}, {"body": "someone verify still issue cc rkirov", "d": "8/2015"}, {"body": "seems fixed retested case similar tabs example works nt", "d": "8/2015"}, {"body": "think obsolete closing reopen feel otherwise", "d": "8/2015"}, {"body": "obsolete new injectors support", "d": "8/2015"}, {"body": "dup closing", "d": "8/2015"}, {"body": "obsolete fixed", "d": "8/2015"}, {"body": "sounds like issue closed reopen feel otherwise", "d": "8/2015"}, {"body": "vsavkin lot work cleaning errors verify still issue reopen", "d": "8/2015"}, {"body": "tbosch updated ls still relevant", "d": "8/2015"}, {"body": "yes still issue", "d": "8/2015"}, {"body": "tbosch still issue", "d": "8/2015"}, {"body": "yes relevant js though nt lot users yet", "d": "8/2015"}, {"body": "docs getting rewritten obsolete", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "fix available", "d": "8/2015"}, {"body": "alexeagle still issue", "d": "8/2015"}, {"body": "yes waiting tsd release use new flag let keep issue open remind us present tsd nt include", "d": "8/2015"}, {"body": "tsd released try fix", "d": "8/2015"}, {"body": "clear angular support composing svg documents using separate components words mentioned documentation angular deprecated option scenarios element replacement required application function main one reusable custom components used within svg contexts svg nt work custom elements dom tree main scenario longer supported angular", "d": "8/2015"}, {"body": "vsavkin still relevant", "d": "8/2015"}, {"body": "injectlazy removed di specific decorators think closed", "d": "8/2015"}, {"body": "sjelin moved alpha please remove move milestone wo nt land wednesday", "d": "8/2015"}, {"body": "hey sorry original approach nt work amp nt able make meeting anyway something working api essentially example documentation pending behind scenes works totally differently caching templates client side nt feasible without api like instead idea make karma serve templates urls would used production way retrieved angular ajax like normal sure clear makes sense everyone clean throw npm soon busy wednesday pm though otherwise think solution implement something like", "d": "8/2015"}, {"body": "nt get feedback went ahead published npm let know solves everyone problems need go something else", "d": "8/2015"}, {"body": "per matanlurey july comment longer issue gt removed gt hotlist", "d": "8/2015"}, {"body": "note planning precompiling templates see probably want store templates form", "d": "8/2015"}, {"body": "think still work case templates inline design doc example plugin unnecessary retrieved ajax plugin allow ajax work regardless template formatted going close issue since think solves problem nt seem internal users ask zzo update telling use", "d": "8/2015"}, {"body": "done", "d": "8/2015"}, {"body": "sjelin trying today found ideal solution codebase least similar angular uses mock xhr implementation running unit tests nt real http requests made karma handle seeming tool inlines template contents component js build step ie gt block dart already something like dart transformers", "d": "8/2015"}, {"body": "one working interested gulp tool", "d": "8/2015"}, {"body": "think precompile templates unit tests well way templates also styles loaded offline server converted format angular already understands see tue aug ludovic henin notifications githubcom wrote one working interested gulp tool reply email directly view github", "d": "8/2015"}, {"body": "obsolete closing", "d": "8/2015"}, {"body": "far understand following means append myservice list bindings mycomponent provides think need make mechanism general need nice way override directiveresolver viewresolver similar testcomponentbuilder right operations needs supports replace list bindings append list bindings override individual binding api requires design may look like var overrides directiveresolveroverrides mycomponent append somebinding replace token myservice myotherservice ng platform cookies createapp overrides loadcomponent mycomponent note overrides passed compiler created also since common configure overrides per module basis overrides depend method chaining possible deal collections overrides either arrays maps finally think right mental model overrides mutate data transform passing compiler", "d": "8/2015"}, {"body": "control binding universal need provide node version http also router users include replace default bindings correct environment might solved platformbindings also think renderer separate consider example pending react release var react require react var reactdom require reactdom var mycomponent reactcreateclass render function return hello world reactdomrender node previously reactrender node benefit able fix server rendering problem allowing users use would allow react use strategy angular uses faster initial loads could also help trying figure module distribution renderers also need bit control renderer perhaps separation could allow separate compilecreate steps tobias mentioned allow optimization serverclient one example client able debounce inserting client view user typing hit action key problem currently desktop see problem mobile users keyboard toggles transition input focus", "d": "8/2015"}, {"body": "one thing would great see bootstrap api given focus code size load time way specify angular features want enable app done using method would allow treeshaker include unused features strawman calls methods would fully typed allowing treeshaker closure etc get rid unused code methods would simply populate di module relevant bindings", "d": "8/2015"}, {"body": "bumping working design proposal link week comments", "d": "8/2015"}, {"body": "alxhub update design proposal mentioned", "d": "8/2015"}, {"body": "design angular bootstrapping note long form bootstrapping multiple apps single page existing function continue work simple apps nonweb worker app typescript bindings nonweb worker apps var domappbindings listwrapperconcat appcommonbindings appdombindings platform holds bindings singletons browser page var platform ngplatform rootbindings first application var appfoo platformapplication listwrapperconcat domappbindings first application bindings two root components appfoorootcomponent appfoocomponent ref rootcomponentref gt component ready callback runs application zone appfoorootcomponent appfoosidecomponent ref rootcomponentref gt second component app ready second application independent zone change detection compiler etc var appbar platformapplication listwrapperconcat domappbindings second application bindings appbarrootcomponent appbarcomponent ref rootcomponentref gt second application ready web worker app running web worker thread typescript bindings webworker apps var bus somehow get messagebus webworker apps need bindings initialized asynchronously initialization happens setup event received ngplatform rootbindings asyncapplication gt asyncloader returns promise called synchronously platformrefasyncapplication runs application zone var completer promisewrappercompleter var subscription var emitter busfrom setupchannel subscription observablewrappersubscribe emitter message stringmap gt observablewrapperdispose subscription bindings determined based setup message var appworkerbindings listwrapperconcat appcommonbindings appwebworkerbindings bus message completerresolve listwrapperconcat appworkerbindings application bindings observablewrappercallnext busto setupchannel ready return completerpromise app applicationref gt approotcomponent webworkerappcomponent ref rootcomponentref gt web worker application ready unfortunately due absence last week nt think able make target going push back last delay pr ready evaluation amp review soon", "d": "8/2015"}, {"body": "appfooroot appfoocomponent ref rootcomponentref gt component ready callback runs application zone sure mean application zone cb run inside ngzone asynchronous code triggers change detection nt possible returns promise code would executed zone gets called", "d": "8/2015"}, {"body": "application zone associated application shared among application root components nt know much zones work returns changing mechanism type research see change detection broken currently callback though", "d": "8/2015"}, {"body": "cc review web worker part", "d": "8/2015"}, {"body": "alxhub see comment details returning would run callback calling zone ie outside angular ngzone", "d": "8/2015"}, {"body": "webworker design looks good", "d": "8/2015"}, {"body": "alxhub could change long form explicit phase need serverside applications compile asynchronous every request sync", "d": "8/2015"}, {"body": "two root components appfoorootcomponent appfoocomponent ref rootcomponentref gt component ready callback runs application zone appfoorootcomponent appfoosidecomponent ref rootcomponentref gt second component app ready use case two root components application nt whole idea application always root component", "d": "8/2015"}, {"body": "pascalprecht may want run several applications side side also ngupgrade need ability bootstrap lot child applications", "d": "8/2015"}, {"body": "dropped feature obsolete issue", "d": "8/2015"}, {"body": "tbosch still issue latest code base", "d": "8/2015"}, {"body": "vicb tag template tag keeping original content light dom shows", "d": "8/2015"}, {"body": "vsavkin tbosch still issue closed", "d": "8/2015"}, {"body": "yjbanov working better strategy closing obsolete", "d": "8/2015"}, {"body": "tbosch discussed dart team decided would best dart team write parseranalyzer addition action side situation much improved", "d": "8/2015"}, {"body": "vsavkin verify still issue", "d": "8/2015"}, {"body": "mprobst tools mind dart asking since tools tries enable treeshaking nt understand decorators type annotations maybe ts tooling treeshaking capability", "d": "8/2015"}, {"body": "idea use optimizing compiler like closure compiler supports tree shaking cross compiling indeed nt get type info maybe get gains like also interesting figure much could gain process eg worth make effort better feed closure compiler type info use different compiler matter also dariajung works", "d": "8/2015"}, {"body": "obsolete yjbanov working", "d": "8/2015"}, {"body": "related", "d": "8/2015"}, {"body": "yjbanov verify still issue close appropriate", "d": "8/2015"}, {"body": "yes although renamed updated description", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "obsolete tbosch closing", "d": "8/2015"}, {"body": "believe obsolete closing reopen feel otherwise", "d": "8/2015"}, {"body": "yes done thu aug pm mi\u0161ko hevery notifications githubcom wrote closed reply email directly view github", "d": "8/2015"}, {"body": "mhevery also find behavior really confusing chance revisited spent hour trying understand clicks intercepted event handler figure click events nt bubble unless explicitly tell thanks", "d": "8/2015"}, {"body": "urish better landed", "d": "8/2015"}, {"body": "pascalprecht great thanks", "d": "8/2015"}, {"body": "believe obsolete closing reopen feel otherwise", "d": "8/2015"}, {"body": "believe obsolete closing reopen feel otherwise", "d": "8/2015"}, {"body": "reopened looks like currently using right log level exceptions makes hard catch exceptions automated test look like regular exceptions", "d": "8/2015"}, {"body": "generic question issue closing possible write drag drop directives angular planning including core", "d": "8/2015"}, {"body": "taken dart team closing", "d": "8/2015"}, {"body": "resolved", "d": "8/2015"}, {"body": "longer supported obsolete", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "igorminar still relevant closed", "d": "8/2015"}, {"body": "support new", "d": "8/2015"}, {"body": "vicb still relevant close", "d": "8/2015"}, {"body": "let close create new issue need future", "d": "8/2015"}, {"body": "vsavkin comment", "d": "8/2015"}, {"body": "since paying sourcecode size penalty every change detector class considering encoding logic detector sort like goto statement another option would lightweight class eg subdetector nontrivial change take days maybe week implement", "d": "8/2015"}, {"body": "still done", "d": "8/2015"}, {"body": "mhevery nt canonical syntax events nt", "d": "8/2015"}, {"body": "ca nt since would collide", "d": "8/2015"}, {"body": "ah makes totes sense thanks", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "moved", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "given current injector design seems less likely going close let know feel strongly reopening", "d": "8/2015"}, {"body": "obsolete", "d": "8/2015"}, {"body": "point template string possible pass promise additional modification could made simple", "d": "8/2015"}, {"body": "dup", "d": "8/2015"}, {"body": "covered benchmarks", "d": "8/2015"}, {"body": "mlaval already working", "d": "8/2015"}, {"title": "atom safe eval", "body": "hi tried use vue atom plugin works really great one issue atom allow eval though possible overcome loophole package create new vue object found data object initially fully initialized example contains empty array array used generate list vue nt compile list related directives first element added list delay possible use loophole provide safe eval get exception resolved issue adding fake element array new vue call deleting afterwards obviously hack wonder way insert loophole call somewhere prevent evalexception maybe possible add property could used provide wrapper eval unsafe calls", "num": "1231", "d": "8/2015"}, {"title": "transitions instance initialisation", "body": "currently transitions available using would useful make transitions available components without directives importantly root vue instance use case examples lightbox popup whole content fade creation cases toolbar panels visualstudio like may slide outside window", "num": "1230", "d": "8/2015"}, {"title": "deprecate options param", "body": "problem param common gotcha dealing elements often requires additional formatting source data custom filter limited capabilities customizing rendered options proposal reason existed due internal implementation issues really reason way ux perspective therefore internal refactoring deprecate param instead use normal array objects also bind underlying value directly object using options", "num": "1229", "d": "8/2015"}, {"title": "add check adding plugins", "body": "seems call use every try think would cool vue checked plugin already applied would helpful modular js systems builds browserify", "num": "1228", "d": "8/2015"}, {"title": "\u52a8\u753b\u5217\u961f\u6709\u95ee", "body": "\u5982\u679cn\u4e2a\u5143\u7d20 \u975e\u6570\u7ec4\u5faa\u73af \u8981\u5b9e\u73b0\u6309\u7279\u5b9a\u7684\u987a\u5e8f\u6267\u884c\u52a8\u753b \u6709\u5bf9\u5e94\u7684\u6307\u4ee4\u5417", "num": "1227", "d": "8/2015"}, {"title": "initdata extremely slow since upgrade vue", "body": "quick screen shots results dev tools profiling utility vue vue dig deeper seems merging data instance could nt figure reason slow wondering idea might reason start looking try see isolate problem try reproduce jsfiddle something", "num": "1226", "d": "8/2015"}, {"title": "filters filter gets applied model nt get updated", "body": "", "num": "1224", "d": "8/2015"}, {"title": "ie mustache bug", "body": "variable name typename wanted display page used mustache style html worked fine chrome ie nt show value typename mustache expression opened console developer tool ie errors looked dom found mustache expression divided two lines nt know whether reason causes issue waiting help thanks reading ps use vtext instead mustache expression vtext works fine chrome ie", "num": "1223", "d": "8/2015"}, {"title": "cache computed prop default false configurable", "body": "find default cache computed prop true however case computed props simple enough time changed means caching wasting memory default configurable default false", "num": "1222", "d": "8/2015"}, {"title": "loose element attributes directive binds", "body": "may overlooking something js vuedirective editable bind function html content editable adds attribute contenteditable true element null looked directives thing pick vmodel thanks", "num": "1220", "d": "8/2015"}, {"title": "scope inside vrepeat tag affected component vrepeat", "body": "seems like could problem shared props two vrepeats one affects one please see js fiddle comments", "num": "1219", "d": "8/2015"}, {"title": "feature request debugging reactions", "body": "middle second website love vue made much productive organized however spend significant amount time debugging inside vue code variable working problem shows exception vue code set breakpoints vue code find step even hard tell going gettersetters would like propose debugging tools vue implement end current project would need help though since expert vue code suggesting hook code would good example help debugging aids would fall two categories observing usage vue reactivity think vue operation much like rxfs ie observables subscribers data props observables anywhere dataprops used declaratives instance methods etc subscribers reactions automatic vue makes easeofuse magic makes debugging harder traces could dump reactions either console log log file would one line per automatic variable reaction observation breakpoints could set reaction happens reaction could kind identifier id could come reading log data keypath could watched usage anyone thoughts would anyone find useful", "num": "1218", "d": "8/2015"}, {"title": "vue", "body": "", "num": "1217", "d": "8/2015"}, {"title": "\u4f7f\u7528svg\u65f6\u5bfc\u81f4\u7684\u5185\u5b58\u6cc4\u9732\u95ee\u9898", "body": "\u8fd9\u4e9bstrings\u57fa\u672c\u90fd\u662fsvg\u5b57\u7b26\u4e32", "num": "1216", "d": "8/2015"}, {"title": "call methods outside instance", "body": "extended vue adding additional methods howcome possible call outside instance js mixinjs moduleexports created function thishello methods hello function consolelog hello mixin testjs var mymixin require mixin var component vueextend mixins mymixin var component new component gt hello mixin js mixinjs moduleexports methods hello function consolelog hello mixin testjs var mymixin require mixin var component vueextend mixins mymixin var component new component componenthello componenthello function", "num": "1215", "d": "8/2015"}, {"title": "asynchronous component transfer parameters", "body": "code dynamically load slider vue slider vref slider moduleexports data function return components slider function resolve require componentslidervue resolve point window object sliderslides link image throws question vue webpack bug pass reference", "num": "1214", "d": "8/2015"}, {"title": "way run single unit test", "body": "beers run test separately", "num": "1213", "d": "8/2015"}, {"title": "", "body": "", "num": "1212", "d": "8/2015"}, {"title": "highlighter vue sublime text", "body": "know hard anyway", "num": "1211", "d": "8/2015"}, {"title": "checkbox checked page load updating", "body": "row checkboxes bound filters checkbox checked sets attribute true url hash makes ajax call retrieved data filter applied well page load hash checked filters data fetched accordingly checkboxes bound vmodel set true url value set true worked updated filters work checkboxes remaining checked", "num": "1210", "d": "8/2015"}, {"title": "pluralize bug", "body": "hello sure something wrong bug use pluralize filter", "num": "1209", "d": "8/2015"}, {"title": "macbook esc key ca nt fire dom event chrome", "body": "env yosemite chrome version macbook pro sure vue problem try safari ok try keyboard good also", "num": "1208", "d": "8/2015"}, {"title": "partial template", "body": "tell connect partial template eg layertransitionsettings block found description act done correctly", "num": "1207", "d": "8/2015"}, {"title": "\u53d1\u73b0\u4e00\u4e2a\u7a33\u5b9a\u590d\u73b0\u7684\u62a5\u9519", "body": "\u5728\u4f7f\u7528vrepeat\u548ctrackby\u7684\u65f6\u5019\u53d1\u73b0\u4e2a\u95ee\u9898 uncaught typeerror read property vtrans null", "num": "1205", "d": "8/2015"}, {"title": "set clearified api reference", "body": "instance method need document examples clarify features everyone need array value need update method currently note tutorials", "num": "1204", "d": "8/2015"}, {"title": "possible update template", "body": "possible update template super called need logic work template ca nt use super called wo nt work js export default class basewidget extends vue constructor options ideal js export default class basewidget extends vue constructor options super options", "num": "1202", "d": "8/2015"}, {"title": "move vuejs organization", "body": "mostly logistics please comment anything missing x links docs x links readme x links packagejson x links source code comments x links examples x links forumvuejsorg x package manager bower x cdn jsdelivr x cdn cdnjs x gitter room", "num": "1201", "d": "8/2015"}, {"title": "deprecate favor", "body": "working new version significantly performant current version introduces breaking differences terms scoping order keep backwards compatibility migration new version introduced original left intact current status tests passed test current branch difference required alias alias required using syntax preferred reads naturally also means meta property longer used still available also still refer parent scope index nested loops anonymous child vms previously creates actual child vm instance every repeated block longer case repeated block real partially compiled fragment lightweight intermediate scope greatly reduces overhead result see significant performance improvement initial rendering noncomponent loops rerendering tested dbmonster also means using extra repeat longer creates overhead child instance would work repeated block component longer anonymous child instances created case component scoping part different previously use component get somewhat weird scoping example automatically available inside component parent template want use parent template create wrap repeat addition requires component implementation aware specific external data received via standard interface get expected scoping need explicitly pass external data component makes component implementation longer specific less magical", "num": "1200", "d": "8/2015"}, {"title": "vrepeat\u6e32\u67d3\u7684dom\u4e0einline\u548cinlineblock\u51b2\u7a81", "body": "\u6e32\u67d3\u540e\u7684dom", "num": "1199", "d": "8/2015"}, {"title": "additional planned changes", "body": "longer used prop replacing component default data good pattern deprecate option originally used internal mechanisms longer needed internally api overused lead subtle bugs make state components harder understand deprecate prefer using queryselector may new method querying dom sugar standard interface normal fragment instances renamed", "num": "1198", "d": "8/2015"}, {"title": "object missing child object vue throws error console component", "body": "two issues common scenario data comming server ajax call refer array element template get error console object missing child element predefined vuejs also throws error read property display undefined vueeval eval js fiddle demo best aproach scenario thanks kris", "num": "1197", "d": "8/2015"}, {"title": "ca nt use options without vmodel", "body": "sometimes actually interested twoway binding care listening event however without nt work instead use set watcher works sure even fixed since directive argument could also manually create discouraged framework", "num": "1196", "d": "8/2015"}, {"title": "bug templating", "body": "code clones array element code works correctly template glues source element copied", "num": "1195", "d": "8/2015"}, {"title": "vmodel work hidden input", "body": "code thismeasuretime always empty see value html source code html source code", "num": "1194", "d": "8/2015"}, {"title": "pass params dynamic component", "body": "hava dynamic component example var mainwrapper new vue el mainwrapper components dashboard dashboard wheels wheels wheel wheel pass param dashboard others", "num": "1193", "d": "8/2015"}, {"title": "vrepeat", "body": "way vrepeat limit", "num": "1192", "d": "8/2015"}, {"title": "error resolving repeat component strict mode", "body": "strict asset resolve mode idea repeat component example followed console report component resolved resolving checking modified code something like course try another approach one component needs pass repeated data component ability repeat block lost example however code work without errors result wrong always empty linked within even set instance", "num": "1191", "d": "8/2015"}, {"title": "", "body": "\u66f4\u6362\u6570\u7ec4 listvue dataitemsnewarray newarray", "num": "1190", "d": "8/2015"}, {"title": "make computed property caching optional", "body": "computed properties recalculated change past cached algorithm used make sense people sure least never flushed updated computed properties project actually useless think good documentation flush algorithm would match common sense must feature", "num": "1189", "d": "8/2015"}, {"title": "vue managing check box values", "body": "checkbox status nterpreted vue model using true false values usualy doesnt reflect model values real database storage typical html tag definition looks like value value vue way reflect model value true false values used easy fit database following tag example would expect clicking check box sets model value unsetting value sets model also follow situation several checkboxes bound one model multivalue selection", "num": "1188", "d": "8/2015"}, {"title": "call method vrepeat", "body": "hi tell call method finish vrepeat run", "num": "1187", "d": "8/2015"}, {"title": "using html tags strings inside mustache braces", "body": "reason using html tags strings inside triple mustache work expected example case output html everything including triple braces ps double mustache issue", "num": "1186", "d": "8/2015"}, {"title": "cached linker may lead wrong host unexpected behaviours", "body": "test version cache linker constructor element html however linker relative host means lead hardtodiscover unexpected behaviours example followed wo nt fire events attached program compile link binding directive template directive fetch linker cache whose host directive invoke compile link added list check need fire event however host attached wo nt fire html something", "num": "1185", "d": "8/2015"}, {"title": "vrepeat \u5bf9\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u65e0\u6548", "body": "\u5728 \u91cc\u5e76\u4e0d\u80fd\u5f97\u5230", "num": "1184", "d": "8/2015"}, {"title": "dropdown list value support representing arbitrary javascript objects strings", "body": "example following code currently nt work choose clear choosen chosenticketname chosenticketprice knockoutjs supports extremely useful data binding cascading dropdowns like", "num": "1183", "d": "8/2015"}, {"title": "\u7ec4\u4ef6\u590d\u7528\u4f7f\u7528\u7684\u7591\u95ee", "body": "\u6709\u4e2a\u5206\u9875\u7ec4\u4ef6 vue \u5206\u9875\u6a21\u677f\u7ec4\u4ef6 use strict moduleexports props currentpage totalpage data function return navcount href null computed pagenavs function var total thistotalpage \u6240\u6709\u9875\u6570 var current thiscurrentpage \u5f53\u524d\u9875 var navcount thisnavcount \u6700\u591a\u663e\u793a\u591a\u5c11nav var link thishref var half mathfloor navcount var start start var end current lt half total lt navcount total navcount start else current gt total half total start current half else current half start current half var navs start lt navspush start start return navs disablegofirst function var onoff thiscurrentpage return disabled onoff disablegolast function var onoff thiscurrentpage thistotalpage return disabled onoff showprevmoreflag function var boundary mathceil var onoff thiscurrentpage gt boundary return onoff shownextmoreflag function var total thistotalpage var boundary total mathfloor var onoff thiscurrentpage lt boundary return onoff lastlink function firstlink function \u91cd\u8f7d\u4ed6 js var pagination require \u6307\u5411\u4e0a\u9762\u4ee3\u7801\u6240\u5728\u6587\u4ef6 var postpagination vueextend pagination var pp new postpagination data href posts navcount \u662f\u4e0d\u662f\u8981\u628apagination\u548cdata\u6df7\u5408 exportspostpagination vueextend paination data href posts navcount vue moduleexports components postmain postmain postpagination", "num": "1182", "d": "8/2015"}, {"title": "access corresponding dom element onclick vrepeat item", "body": "got list displayed html username javascript new vue el vue access corresponding element clicked want perform jquery actions thanks lot", "num": "1181", "d": "8/2015"}, {"title": "local scope vue inside component", "body": "component transcludes inner content using hook inner content vue instance example fiddle would expect prop visible html appears show note type bound updates vm get feeling bound make work", "num": "1180", "d": "8/2015"}, {"title": "route", "body": "hello tell read configuring routed need clientside implementation rather server", "num": "1179", "d": "8/2015"}, {"title": "\u5728click\u4e8b\u4ef6\u51fd\u6570\u4e2d\u83b7\u53d6model\u540d", "body": "hi \u600e\u6837\u5728click\u4e8b\u4ef6\u4e2d\u83b7\u53d6\u5f53\u524d\u5143\u7d20\u7684\u6570\u636emodel\u540d \u6211\u60f3\u505a\u4e00\u4e2a\u53ef\u901a\u7528\u7684\u6dfb\u52a0\u6216\u5220\u9664\u7c7b \u73b0\u6709\u505a\u6cd5\u662f \u60f3\u5c06xxx\u53d8\u6210\u52a8\u6001\u83b7\u53d6\u7684 \u6216\u8005\u6709\u4ec0\u4e48\u65b9\u6cd5\u80fd\u5c06click\u4e8b\u4ef6\u4e0e\u5f53\u524dmodel\u7ed1\u5b9a\u8d77\u6765\u4e5f\u53ef\u4ee5 \u6570\u636e\u7ed3\u6784\u662f\u8fd9\u6837\u7684 thanks", "num": "1178", "d": "8/2015"}, {"title": "pass objectsarrays props custom component", "body": "way make work page use generally way pass objectarrays custom component directly view", "num": "1177", "d": "8/2015"}, {"title": "vel working", "body": "double click todo edit focus tried vuenexttick function still working", "num": "1176", "d": "8/2015"}, {"title": "stop propagation default", "body": "problem event system seemed like useful idea first implemented still useful internally found almost never use application code accidental complexity introduce issues behavior relies structure component tree surface decouples components fact still couples quite tightly event relationship set components need stick structure accidentally break event chain moving components around namespacing listen event idea child component somewhere might dispatch event name screw things ca nt prevent events often ab used trigger state changes propagation inside component tree abstract implicit events go ways events flow inside large application quickly gets hard wrap head around becomes even harder understand app state change originated lot times simple global event bus make things centralized thus lot easier understand even adopt flux want go proposal deprecate event methods still remain means vue isntances still event emitters stop propagation default unless user calls second argument expose global utility users construct event bus something like outside core investigate recommendation state management use libraries like vuex redux", "num": "1175", "d": "8/2015"}, {"title": "\u662f\u5426\u6709\u5f15\u7528\u5916\u90e8\u6a21\u677f\u7684\u5185\u7f6e\u65b9\u6cd5\u5462", "body": "hi vue\u4e2d\u6709\u6ca1\u6709\u7c7b\u4f3cangularjs\u7684templatecache\u65b9\u6cd5\u80fd\u591f\u5f15\u7528\u5916\u90e8\u6a21\u677f\u6765\u505aheader thanks", "num": "1174", "d": "8/2015"}, {"title": "make binding syntax consistent", "body": "quick reference latest syntax last updated sep html context currently several types bindings template reactive directives eg amp attribute values directly evaluated expressions current component scope contain mustache tags dynamic literal directives eg amp attribute values treated plain strings contain mustache tags always reactive reactive containing mustache tags two evaluate normal html attributes mustache tags converted internally prop bindings eg props attribute values treated plain strings contain mustache tags prop binding dynamic contains mustache tags directive param attributes eg amp treated almost normal attributes evaluated problem well probably noticed confusing many types attributes clear rule expressions expected mustache interpolations allowed specifically prop syntax could use improvement original intention making props require mustaches tags reactive dynamic prop look different normal html attributes given normal attributes contain mustache tags well still explicit enough also much common use dynamic props literal strings using mustache tags indicate reactivity simply intuitive another problem becomes awkward want pass literal numberboolean prop without mustache tags attribute value string write pass real number boolean currently vue autocasts literal props numbersbooleans possible may always want want pass string numbers proposal last updated pretty radical changes maybe imo conceptually much cleaner goal eliminate inside attribute values categorize syntax purpose text html interpolations handled also places mustaches used vue directives preserve prefix something special binding values always parsed expressions arguments multiple clauses one expression followed one filters previously preserves special syntax html core directives also preserved replaceable interpolations literal syntax core directives either reactive empty sometimes may want pass literal string custom directive instead dynamic expression similar literal directives want make explicit clearly know whether attribute value actually string expression longer concept literal directives use dotequal syntax indicate passing literal value directive directive function called literal string argument event handlers prefixed value always parsed expressions either method name statement eg raised people seemed really like fact starts imo event handlers deserve something different succinct html bind prefix html addition prefix shortened colon totally optional props similar normal attribute bindings nonprefixed props always passed literal strings pass dynamic prop add colon prefix also binding type indicators moved attribute value attribute name right equal sign special attributes including directive params amp literal directives appear together either directive component also use colon prefixes reactive behavior directive params evaluated vue tell dev mode child component element refs previously longer directives dedicated syntaxes see benefits explicit code says simpler smaller set core directives args directives multiple clauses expressions filters confusion mustache inside attributes see prefix always means value expression prefix always plain string eliminates edge cases like causing requests gets thrown away ie also eliminates need note please nt dislike proposal sake many changes changes proposed implemented backwards compatible way deprecation warnings migration unacceptably painful", "num": "1173", "d": "8/2015"}, {"title": "\u5efa\u8bae \u6307\u4ee4\u548c\u7ec4\u4ef6\u6dfb\u52a0\u4f18\u5148\u7ea7\u5c5e\u6027", "body": "vrepeat vrepeat \u4f18\u5148\u7ea7\u4e3a vrepeat \u4e00\u5b9a\u4f1a\u4fdd\u8bc1\u5728 vtap", "num": "1172", "d": "8/2015"}, {"title": "deprecate add", "body": "problem currently somewhat confusing behavior nothing key already exists even pass second argument supposed value hand functionality replaced almost cases seems unnecessary proposal deprecate use instead", "num": "1171", "d": "8/2015"}, {"title": "make strict mode default", "body": "problem currently asset passed component option becomes available component also descendants component view hierarchy although convenient cases encourages child component implicitly rely ancestor providing asset needs looking child component alone becomes unclear dependency comes makes hard locate source dependency impact maintainability large codebases many nested components proposal make strict mode default potentially remove strict config option altogether", "num": "1170", "d": "8/2015"}, {"title": "deprecate component param", "body": "ref discussion problem originally designed control transition timing dynamic components proven confusing cumbersome use declared parent template implemented child components potentially switched pick event name nt conflict anything else chance child component could dispatch event name proposal deprecate introduce new lifecycle hook tentative name called component insertion component inserted user calls passedin callback example activate hook called component inserted dom either static component form custom element dynamic component note called imperatively manipulate instance instance api methods like also component invoke already activated kept alive", "num": "1169", "d": "8/2015"}, {"title": "make alias required vrepeat", "body": "problem currently two ways write without alias withoutalias syntax supported long time issues makes unclear whether property belongs current repeat scope parent scope use magical refer primitive values allowing two different syntaxes complicates internal implementation component used without alias repeated object passed component component also default function fields returned merged passed object essentially mutating raw data array proposal make alias required", "num": "1168", "d": "8/2015"}, {"title": "deprecate favor", "body": "moved discussion tracking core problem context see distribution section tl dr browser vendors agree content distribution api web components current syntax likely replaced post describes two possible new apis imperative one new declarative one vue internal compilation cycle mostly interested new declarative api name slots proposal apple component template html shadow content using component rendered result benefits proposal current api much explicit exposed slots essentially become part component interface thus makes easier compose nested components proposal move api explicit select could coexist", "num": "1167", "d": "8/2015"}, {"title": "warn duplicate propsdata fields", "body": "problem currently props merged instance problems data props declare property name order priority merging clear prop overwrite field name data way around currently props initial values available inside functions field returned data gets overwritten prop merged clear whether component property private state prop passed thus changed parent unless go check component props declaration proposal move props name space example avoids merging problem either make reserved field make makes explicit something prop obtained outside component throw warning user defines duplicate fields", "num": "1166", "d": "8/2015"}, {"title": "value mustache dynamically updated custom directives", "body": "html first get right index value delete value array function executed still passes original index value changes get right index something changes array", "num": "1164", "d": "8/2015"}, {"title": "output values within textarea", "body": "hi whether possible implement using vuejs following problem", "num": "1163", "d": "8/2015"}, {"title": "computed properties calculation results inconsistent", "body": "different code sequence different computed result problem caused cache suggest switch control cache want result example example consolelog results old data new data example consolelog results old data old data new data html read detailcontent example results want javascript vueconfigdebug true vue new vue el demo data content old data methods readcontent function var self example javascript vueconfigdebug true vue new vue el demo data content old data methods readcontent function var self", "num": "1162", "d": "8/2015"}, {"title": "radio buttons vmodel vrepeat explode splice", "body": "hello friends found little problem solvable hour searching something like example code add item button code example code problem add item c two items b splice item b checked state gets exploded items item b work xd item b checked state lost space thats amazing iterate data course addition data correct case strange xd directive didnt help tried uids idea thanks advance nice weekend smiley", "num": "1161", "d": "8/2015"}, {"title": "change value button", "body": "hi actually issue framework rather question help button opens dropdown bootstrap click li dropdown change span text inside button basically simulates select tag jquery function works perfectly trying migrate code vuejs struggling would thing sure simple thing missing something thanks", "num": "1160", "d": "8/2015"}, {"title": "think vchange like angularjs needed vue think", "body": "implemented repo used following codes available like want detect changes even nt need basically define model need define model purposely use think like directive needed vue wrote article sorry written japanese tweet said twitter think agree opinion make pr already ready", "num": "1159", "d": "8/2015"}, {"title": "selected option tag list issue", "body": "state getting compiled help please", "num": "1158", "d": "8/2015"}, {"title": "suggestion add set silent mode", "body": "sure possible situations need alter data object fly dome compiled without firing watch event suggestion would adding silent option ex set foo true result without triggering watchers events", "num": "1157", "d": "8/2015"}, {"title": "add considering keypath", "body": "using set keypath go deep creating nested levels required nt happen using add maybe limitation add combined set documentation states keypath add well assuming work way let know wrong example", "num": "1156", "d": "8/2015"}, {"title": "select defaults recognized empty string", "body": "hi list options value empty string model set empty string well get synced default option empty easier see say check jsfiddle know new default option feature options dynamic situation could empty string option", "num": "1155", "d": "8/2015"}, {"title": "allow checkbox td clickable anywhere td", "body": "problem pretty simple one must simple solution table checkbox row problem works clicking around input within td click input directly automatically gets unselected click surrounding td anyone solution", "num": "1154", "d": "8/2015"}, {"title": "much worry ings", "body": "pretty simple sort going getting error advice anything funky code throwing var sorts foo bar baz new vue el app data category foo items id name one id name two id name three id name four id name five id name six id name seven id name eight id name nine id name ten filters sortbycategory function values category var sortorder sorts category return valuessort function b sortorderindexof aid b sortorderindexof bid return b along demo", "num": "1153", "d": "8/2015"}, {"title": "child cleaned dynamic component changes waitfor event triggered", "body": "click page wait component appear click page click log children see console click page immediately click page loads click log children see console stuck forever parent children array", "num": "1152", "d": "8/2015"}, {"title": "keepalive waitfor work together", "body": "click page click page click page since component cached compiled function called never emits event", "num": "1150", "d": "8/2015"}, {"title": "dynamic select clarification request", "body": "hi got v adding select options tag vrepeat deprecated already started refactoring code could specify attributes inflated repeated options text value example disabled style class attributes thanks", "num": "1149", "d": "8/2015"}, {"title": "auto transform property number even property assert type string", "body": "example followed initialisation warn expected string got number raised html vuecomponent name comp props type string", "num": "1148", "d": "8/2015"}, {"title": "suggestion access wrapped component inline", "body": "sometimes want access wrapped component vm inline example followed want something according value rewrite receive function property watch property context create property common vm html oninvalid invalid gt thisinvalid invalid think vue support feature followed compinvalid element directive create anonymous component like vrepeat meta property inline inlinevalue componentvalue", "num": "1147", "d": "8/2015"}, {"title": "vmodel von click checkbox different priority chrome firefox", "body": "want use vmodel von checkbox like jsfiddle chrome firefox alert different result get thx", "num": "1146", "d": "8/2015"}, {"title": "inherit work use vuerouter", "body": "mainjs file var vue require vue var vuerouter require vuerouter var vueresource require vueresource vueuse vuerouter vueuse vueresource var router new vuerouter history true savescrollposition true routermap require routes var app vueextend data function return isloggedin false name examplecom components appheader require componentsheader appfooter require componentsfooter routerstart app app windowrouter router access isloggedin property header component set inherit true getting undefined error note access components defines routes file routermap require routes", "num": "1144", "d": "8/2015"}, {"title": "", "body": "", "num": "1143", "d": "8/2015"}, {"title": "formatters parsers", "body": "way accomplish vue formatters parsers angular would reasonable request single value could maybe use computed property single nonreusable transformation want run value pipeline well ca nt also value ca nt use computed property anymore create component repeater none ideal current usecase trying convert simple online invoice creator jqueryspaghetti vue see values input elements areshould formatted currency underlying model value number run math", "num": "1141", "d": "8/2015"}, {"title": "try read optional props document fragment", "body": "fiddle js var foo vueextend props optionalprop type number required false new foo el documentcreatedocumentfragment results", "num": "1139", "d": "8/2015"}, {"title": "index available element vrepeat", "body": "fiddle according docs displaying list work js var item vueextend id item props index type number data function return index template index new vue el body components item getting", "num": "1138", "d": "8/2015"}, {"title": "template vif attribute nt render safari vuejs version", "body": "ran issue using vue mobilei using template tag create three layer nested structure vif attributebut innermost layer nt able render correctly safari ran well chrome android jsfiddle link could try running safari amp chrome see different renderings anybody ran issue help appreciated screenshot chrome screenshot safari thanks advance guys", "num": "1137", "d": "8/2015"}, {"title": "force vmodel update value", "body": "sometimes textfield set vmodel change due external javascript process like datepicker cases vmodel nt gets fired way forcing vue fetch actual value binding case changed vue nt notice", "num": "1136", "d": "8/2015"}, {"title": "suggestion clone object utility", "body": "plenty ways clone object however util method much like jquery maybe clone object utility would useful", "num": "1134", "d": "8/2015"}, {"title": "lost semicolon vuejs source code", "body": "hi \u4f51 thanks work vue fantastic add end line source code code compressed appears problem", "num": "1132", "d": "8/2015"}, {"title": "suggestion filter", "body": "hi experimenting vuejs little bit feel really great however opinion filter bit restricted nt allow empty string used country currency symbol popular time get ignored users therefore symbol used place format currency using thousand separator decimal point usual know pass space get rid currency symbol actually use space front currency value ideal think allowing empty string used currency symbol would appropriate space front currency value suggestion thanks excellent work vuejs anyway cheers rati", "num": "1131", "d": "8/2015"}, {"title": "laravue good practice", "body": "found repository called laravue uses laravel backend vue frontend engine question although looks convenient way author constructs app patterns vue uses example references whole app components allows encourages direct access function variables every components across app would potentially cause problems", "num": "1130", "d": "8/2015"}, {"title": "nested templates vrepeat fail silently safari", "body": "tested yosemite safari iphone ios output chrome output safari", "num": "1128", "d": "8/2015"}, {"title": "vshow allowing multiple boolean args", "body": "ability comma separated booleans even multiple booleans minimal logic andor single vshow would great thanks awesome tool", "num": "1127", "d": "8/2015"}, {"title": "index vrepeat orderby", "body": "got list displayed html name phone javascript new vue el vue use access original user however manipulate list ordering andor filtering eg points element ordered list like removing element original users array stated works original filtered ordered lists", "num": "1126", "d": "8/2015"}, {"title": "content select expected contents nt mutual exclusive", "body": "description followed online demo check html", "num": "1125", "d": "8/2015"}, {"title": "vmodel number radio", "body": "casting number using attribute nt work inputs eg", "num": "1124", "d": "8/2015"}, {"title": "\u8bf7\u95ee\u5982\u4f55\u4f7f\u7528\u5f02\u6b65\u7ec4\u4ef6", "body": "", "num": "1123", "d": "8/2015"}, {"title": "vue loosing bindings even using set method using keypath props values", "body": "strange behavior upgrading sure going ca nt explain really created simplified fiddle demonstrate sure something wrong looks like vue problems bindings", "num": "1122", "d": "8/2015"}, {"title": "", "body": "html title uppercase start add", "num": "1121", "d": "8/2015"}, {"title": "\u591a\u4e2aselect component\u65f6\u63d0\u793acannot read property childnodes undefined", "body": "read property childnodes undefined", "num": "1120", "d": "8/2015"}, {"title": "outin transition nt work properly three transitioning elements", "body": "component waits component leave component begin animating component replaced component nt wait component leave animates immediately issue nt happen increase second delay test method component started animating component waits animate", "num": "1119", "d": "8/2015"}, {"title": "multiple nested template rendered ios", "body": "issues shown title example inside content rendered ios android ok", "num": "1118", "d": "8/2015"}, {"title": "calling done immediately enter leave hook causes error", "body": "found trying find workaround click one click two get uncaught typeerror read property removechild null", "num": "1117", "d": "8/2015"}, {"title": "transition hangs transition immediately cancelled", "body": "fiddle think transitionend event fired since transition happened using callback enter leave fixes two problems enter animation cancelled still waits callback component leave animation second component start animating leave hook would take account elements current opacity calculate correct timeout eg click button two component page one leaving one entering keep clicking several", "num": "1116", "d": "8/2015"}, {"title": "support object values", "body": "using format dynamic options becomes complex get back display since binds one must run computed property filter get point would possible support syntax like would let us get value back like idea feel free say nay", "num": "1115", "d": "8/2015"}, {"title": "children calling root methods reactive", "body": "wanted build system update entire app change language idea root vm holds current language actually globalize object method change language translation method problem without inherit true child components nt get methods scope nt want add inherit true every component tried write mixin defines methods every component need forwards root vm simplified version edit child components actually children testcase fixed works except children updated change language also looked uses vueprototype add method everything think run issue tried make reactive like came different solution work ok better way", "num": "1114", "d": "8/2015"}, {"title": "use vrepeat inlinetemplate component tr table row within tbody", "body": "following example produces one empty instance tr instead iterating records array html javascript var model new vue template html replace true data records title title components recordrow methods onclick function model mount model appendto divcontainer found workaround situation described would great see fixed least explained possible workaround add declaration component tr set vue replace component descriptor false html javascript var model new vue template html replace true data records title title components recordrow replace false lt set replace false methods onclick function model mount model appendto divcontainer", "num": "1112", "d": "8/2015"}, {"title": "firebase example", "body": "firebase validation example broken adding one user email allow adding new users without validation required", "num": "1110", "d": "8/2015"}, {"title": "data binding updates nt reflected inside textareas", "body": "put tag inside tags former stay sync data bindings latter nt budge fiddle", "num": "1109", "d": "8/2015"}, {"body": "csp branch purpose", "d": "8/2015"}, {"body": "nt use case transition visibility components statedriven managed imperatively", "d": "8/2015"}, {"body": "like except repeating code vue blablabla moduleexports data function return initialized false ready function thisinitialized true would much handy write something like parent template", "d": "8/2015"}, {"body": "meant used parent component though consider use case mentioned popup lightbox sidebar part app whether displayed managed piece state app eg app template something like component also needs able control showhide state pass parent state component twoway prop inside sidebar close setting either case nt see need initialization transitions", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "using component like without alias", "d": "8/2015"}, {"body": "oh might vm observing prefixed properties data contain lot properties", "d": "8/2015"}, {"body": "vast majority properties defined using nt prefixed using properties prefixed define directly vm like however using without aliases using alias significant performance increase vue without aliasing vue aliasing however still quite lot slower vue aliasing try narrow specifically could causing slow", "d": "8/2015"}, {"body": "briefly describe question look like using lot", "d": "8/2015"}, {"body": "commit imagine related try commenting lines local files see makes difference", "d": "8/2015"}, {"body": "wow suspicious seemingly right change commented lines practically restored performance numbers vue vue without looking code something toggle config options answer previous questions using handful times copy paste using", "d": "8/2015"}, {"body": "ok using", "d": "8/2015"}, {"body": "seems caused sync mode merging lot props repeated object every merge called thus forcing entire list reevaluated tested would longer happen", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "read filter affects dom value want limit model value two decimals need still write filter", "d": "8/2015"}, {"body": "filter fiddle removes nonnumeric characters nt round value want round value model filter", "d": "8/2015"}, {"body": "happen every mustache tag provide reproduction", "d": "8/2015"}, {"body": "makes sense although difference terms memory usage pretty small computed properties results less memory cases probably nt need worry", "d": "8/2015"}, {"body": "agree setting default especially since computed properties simple would allow developer finetune application applying caching needed rather removing caching everywhere", "d": "8/2015"}, {"body": "personally debated bit introducing change yeah seems trade memory performance really better default cache default false", "d": "8/2015"}, {"body": "directives compilation priorities default priority custom directive bound already removed able get vmodel value use priority higher", "d": "8/2015"}, {"body": "thanks sorted", "d": "8/2015"}, {"body": "something like mind nt got time great someone wants work said relies lot vue internals maybe first step start ux tool ie present reactivity users component hierarchy would ui like stage think wise start things implementationbound", "d": "8/2015"}, {"body": "forgot document second category showing observable values instead gettersetters chrome extension useful works looking dom means observe declaratives want method looking observable values resolved needs work even stepping code least breakpoint hit could something runs console", "d": "8/2015"}, {"body": "would ui like yes implementation would much easier beginning suggestion ui design ui could run second web page browser based would also mean could run atom editor facebook nuclide later could even sourcebased linking vue user source code like real ide last part would obviously long terms", "d": "8/2015"}, {"body": "markhahn needs sort communication bridge injected app page injecting ui current page", "d": "8/2015"}, {"body": "note lot ideas flowing moment many bad ideas good way start designing needs sort communication bridge injected app page idea node bridge debug api developers hook debuggers chromium apis low level vue could least querying keypaths find observables acting beginning simple gdblike commandline repl interface could used talk debug api api would hard first ui would easy since would map user interaction api calls later higherlevel uis like one probably thinking could implemented api would one pullrequest vue api everything else could decoupled affect vue core injecting ui current page yes could done even api idea api could called anywhere even injected code current page api looks hard drop idea quickly really feel api proven method using debuggers course disagree api idea drop final say ideas would nt work unless agree", "d": "8/2015"}, {"body": "let close move vuejsdiscussion time work nodechromium debug api seems bit lower level mind note gives clean state instead gettersetters even paused break point think would generally useful something along lines ember inspector", "d": "8/2015"}, {"body": "amber example looks quite nice sun aug evan notifications githubcom wrote closed reply email directly view github", "d": "8/2015"}, {"body": "please specific happen upgrade version using previously code look like ca nt expect people help posting screenshot", "d": "8/2015"}, {"body": "previous version updated error", "d": "8/2015"}, {"body": "vuerouter tests working properly need real demo see wrong", "d": "8/2015"}, {"body": "strange works perfectly except messages console project error point", "d": "8/2015"}, {"body": "looked little bit mistake turned certainly find element id error gave router causing falls", "d": "8/2015"}, {"body": "error occurs announcement", "d": "8/2015"}, {"body": "unplugged router error still announcement", "d": "8/2015"}, {"body": "could due fact used nodejs php problems", "d": "8/2015"}, {"body": "using router start app router closing provide repro actual error", "d": "8/2015"}, {"body": "cited example moment code provided example", "d": "8/2015"}, {"body": "turns two errors one vue second vuerouter two identical error reproduce example able arises error", "d": "8/2015"}, {"body": "example nt even using router correctly show error originally described", "d": "8/2015"}, {"body": "router code taken example minor changes", "d": "8/2015"}, {"body": "mounting two vue instances onto element", "d": "8/2015"}, {"body": "even hook selectors disable error still persists", "d": "8/2015"}, {"body": "means example irrelevant error need provide one actually shows error", "d": "8/2015"}, {"body": "link showed code fact used", "d": "8/2015"}, {"body": "showing error screenshot many times explain ca nt help error happens means something wrong setup shown", "d": "8/2015"}, {"body": "new \u4e00\u4e2a vue \u6765\u66f4\u65b0\u7684", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "\u4e0d\u8981\u7528 svg \u5b57\u7b26\u4e32\u8d4b\u503c\u554a vue \u53ef\u4ee5\u76f4\u63a5\u7ed1\u5b9a svg \u7684", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "\u4f60\u53ef\u4ee5\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6307\u4ee4\u5728 vue \u91cc\u9762\u76f4\u63a5\u7528", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "\u53ef\u80fd\u662f", "d": "8/2015"}, {"body": "app cpde async factory function slider component hooks", "d": "8/2015"}, {"body": "part vue concern general recommendations", "d": "8/2015"}, {"body": "btw", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "\u67e5\u770b\u63a7\u5236\u53f0", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "\u4f60\u770b\u5230 webpack \u7684\u8b66\u544a\u6ca1\u6709 \u4f1a\u5bfc\u81f4 vue", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "figured grabbing value url hash hash value true nt get cast boolean checkbox get checked casting boolean works sure broke", "d": "8/2015"}, {"body": "\u786e\u5b9e\u662f\u4e2a", "d": "8/2015"}, {"body": "pluralize filter follows simple rules handle irregular special cases amp write custom filter type formatting", "d": "8/2015"}, {"body": "please provide reproduction exactly environment working", "d": "8/2015"}, {"body": "fault chrome extension block esc event spent whole afternoon debug sorry wasting time", "d": "8/2015"}, {"body": "\u0442\u0443\u0442 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u043d\u0435 \u0437\u0430\u0434\u0430\u044e\u0442 \u0432\u0430\u043c \u0441\u044e\u0434\u0430 \u0438\u043b\u0438 vuejsdiscussion", "d": "8/2015"}, {"body": "azamatsharapov \u0430 \u043c\u043d\u0435 \u043a\u0430\u0436\u0435\u0442\u0441\u044f \u044f \u044d\u0442\u043e\u0442 \u043c\u043e\u043c\u0435\u043d\u0442 \u043e\u043f\u0438\u0441\u0430\u043b \u0442\u0430\u043c \u0433\u0434\u0435 \u043d\u0443\u0436\u043d\u043e \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u0434\u043e\u043a\u0430\u0445 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u0432\u043e\u0434\u0443 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435\u0442\u0443", "d": "8/2015"}, {"body": "wormen \u0432\u043e \u043f\u0435\u0440\u0432\u044b\u0445 \u0443 \u0432\u0430\u0441 \u043f\u043b\u043e\u0445\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0441 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u043c \u0432\u043e \u0432\u0442\u043e\u0440\u044b\u0445 \u0443 \u0432\u0430\u0441 \u0432\u043e\u043f\u0440\u043e\u0441 \u043d\u0435 bug report \u0438 \u043d\u0435 feature request \u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0447\u0442\u043e \u043a\u0443\u0434\u0430 \u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0435\u043c \u0431\u043e\u043b\u0435\u0435 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f issue \u0433\u0438\u0442\u0445\u0430\u0431 \u0432\u0430\u043c \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u044d\u0442\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0432\u044b\u0434\u0435\u043b\u044f\u044f \u0435\u0451 \u043a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442 \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u043c\u0438 \u0438\u0441\u0445\u043e\u0434\u043d\u0438\u043a\u0430\u043c\u0438 \u0434\u0430\u0436\u0435 \u0434\u043e\u043a\u0438 \u0442\u0430\u043a \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0432\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b \u0447\u0442\u043e \u0432 \u0434\u043e\u043a\u0430\u0445 \u0447\u0435\u0433\u043e \u0442\u043e \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442 \u0438\u043b\u0438 \u043a\u0430\u043a\u0430\u044f \u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u044d\u0442\u043e \u0441\u0430\u043c\u0438 \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0438\u043b\u0438 issue \u0442\u0430\u043c \u043e\u0442\u043a\u0440\u044b\u0442\u044c", "d": "8/2015"}, {"body": "\u0430 \u043d\u0430\u0441\u0447\u0435\u0442 \u0432\u0430\u0448\u0435\u0433\u043e \u0432\u043e\u043f\u0440\u043e\u0441\u0430 \u0435\u0441\u043b\u0438 \u0432\u044b \u0434\u043e\u043a\u0438 \u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u0435\u0435 \u0441\u043c\u043e\u0442\u0440\u0435\u043b\u0438 \u0442\u043e \u0442\u0430\u043c \u043d\u0435 \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u044c\u0441\u044f \u043d\u0438\u0447\u0435\u0433\u043e \u043e \u0441\u0435\u043b\u0435\u043a\u0442\u043e\u0440\u0430\u0445 selector \u0431\u0435\u0440\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u0430\u043a \u0432\u0442\u043e\u0440\u043e\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442", "d": "8/2015"}, {"body": "\u044d\u0442\u043e \u044f \u0432\u0438\u0434\u0435\u043b \u0432 \u0442\u043e\u043c \u0438 \u043f\u0435\u0447\u0430\u043b\u044c", "d": "8/2015"}, {"body": "\u8fd9\u91cc\u4f60\u7b49\u4e8e\u628a \u8ddf\u81ea\u5df1\u548c", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "whwnow", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "ca nt directly use class subclass vue use really want classes take look", "d": "8/2015"}, {"body": "think something like js import basewidget basewidget export default class griditem extends basewidget constructor options optionstemplate templatewidgetgriditem html super options", "d": "8/2015"}, {"body": "nice install version via npm", "d": "8/2015"}, {"body": "sdebacker proposal proposing changes people provide feedback", "d": "8/2015"}, {"body": "yes proposed changes already pushed branch", "d": "8/2015"}, {"body": "sdebacker install branch note branch unstable use risk", "d": "8/2015"}, {"body": "thanks returns matches found", "d": "8/2015"}, {"body": "sdebacker version npm using", "d": "8/2015"}, {"body": "upgrade npm via homebrew perhaps need", "d": "8/2015"}, {"body": "weird tried works maybe typo", "d": "8/2015"}, {"body": "great proposal", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "component scoping still compiled parent scope except scope", "d": "8/2015"}, {"body": "implemented alpha branch", "d": "8/2015"}, {"body": "switched zsh bash run", "d": "8/2015"}, {"body": "interpreting correctly deprecation vrepeat lieu vfor create true partials opposed vms within standard use case experience loss functionality passing object back event handlers", "d": "8/2015"}, {"body": "mattymil yet see use case anonymous child vm necessary cases pass event handler data object repeated array", "d": "8/2015"}, {"body": "vue \u7684\u6e32\u67d3\u5f53\u7136\u4e0d\u4f1a\u5305\u62ec \u4f9d\u8d56 inline \u5143\u7d20\u4e4b\u95f4\u7684 whitespace margin", "d": "8/2015"}, {"body": "looking forward breaking changes", "d": "8/2015"}, {"body": "like except worried killing agree good pattern general sometimes useful easiest way handle complex interactionsdata passing tightly coupled components", "d": "8/2015"}, {"body": "davidkhess yet come across situation absolutely needed make work sure make things easy necessarily good way direct parentchild situations always use props multiple nested components big mess performance implications trying share something entire component tree put access", "d": "8/2015"}, {"body": "see like convenience javascript closure visibility everything every parent scope create typically capture couple vars practice overuse closures would bad style certainly come handy patterns code tightly coupled", "d": "8/2015"}, {"body": "davidkhess know like lexical scoping however difference javascript functions need written together get lexical scoping fairly clear understand look file components definition unit isolation often separated different files used together defined template parent component look child component ca nt easily reason context used make components maintainable rely self discipline ie use need exactly want move away want system maintainablebydefault", "d": "8/2015"}, {"body": "use rarely components declared within another component file way visually see nesting implications much like javascript closure mainly playing devil advocate could live without years burned couple times decisions overly restrict system behavior later forced go back open back personally comfortable position got enough vueyears belt yet take strong stance", "d": "8/2015"}, {"body": "base component widget extending multiple variations text widget image widget etc use component select correct widget pass props different widgets would need different props currently place use extend worries hold widgets array main app vrepeat create", "d": "8/2015"}, {"body": "would removing using lead get wrong element example would query result using many components mixins apply behaviors sorry nt seen new query api ignore comment html", "d": "8/2015"}, {"body": "terencez sure understood original usage would query api solve", "d": "8/2015"}, {"body": "sorry nt describe issue clearly problem select element declared template including transcluded elements example html want select element element using easy locate using get result reason ignoring comment assume problem resolved new query api provided", "d": "8/2015"}, {"body": "predefine things need also put things depend certain data inside block", "d": "8/2015"}, {"body": "hi evan thanks quick reply followed advise still get errors console changed push items array using method makes difference missing something updated js fiddle thanks kris", "d": "8/2015"}, {"body": "meant", "d": "8/2015"}, {"body": "worked great thanks however getting really weird behaviour rename todo todotable getting errors console funny enough remove span template error gone", "d": "8/2015"}, {"body": "actually using fine use options warning heuristics bit aggressive ignore also considering improving param since really intuitive", "d": "8/2015"}, {"body": "also somewhat annoying warnings appear even repeating", "d": "8/2015"}, {"body": "dgerber gon na gone warn used inside select", "d": "8/2015"}, {"body": "ok longer necessary allow bind even object", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "please provide reproduction code nt show problem", "d": "8/2015"}, {"body": "screenshot submission along array enough", "d": "8/2015"}, {"body": "correctly bag", "d": "8/2015"}, {"body": "enough need actual code reproduces bug like ca nt fix bugs looking screenshots", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "sorry save", "d": "8/2015"}, {"body": "duplicate objects array push clone instead code also quite messy fixed", "d": "8/2015"}, {"body": "vmodel nt work hidden input nt using hidden input using vue store state dom store js directly", "d": "8/2015"}, {"body": "please post questions please read docs opening questions", "d": "8/2015"}, {"body": "use filter please open questions vuejsdiscussion", "d": "8/2015"}, {"body": "\u5982\u679c\u65b0\u65e7\u5185\u5bb9\u6709\u90e8\u5206\u91cd\u590d\u7684\u8bdd\u53ef\u4ee5\u8003\u8651\u52a0\u4e0a index", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "listvue newarray b c", "d": "8/2015"}, {"body": "xiaoyou\u4e0a\u6b21podcast\u91cc\u8bf4\u7684animation\u7684\u94a9\u5b50\u4ec0\u4e48\u7684 \u662f\u6307\u7684\u662f\u5565\u54c7", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "\u73b0\u5728 \u5bf9\u7528\u6237\u6765\u8bf4\u663e\u793a\u5168\u90e8 \u5c06\u6765\u7684\u7248\u672c\u4f1a\u9488\u5bf9", "d": "8/2015"}, {"body": "please provide reproduction nt work intended", "d": "8/2015"}, {"body": "consider following paginated list multiple columns javascript function entitiesperviewport paginated list child scrollable container var clientheight parent elclientheight return thiscolumns mathround clientheight thisentityheight prior change computed property evaluation always worked must placed docs state computed properties cached lazily reevaluated necessary offer explanation conditions invalidate cache suspect changes tracked invalidates cache", "d": "8/2015"}, {"body": "hmm guess personally use computed properties making view declarative ie bind template never rely imperative code never meant used getter guess lot people teffenellis right cache invalidates reactive dependency changed vue way knowing external dependency like changed make cache optional since makes performance difference computed property unusually expensive", "d": "8/2015"}, {"body": "believe adding config making computed property cache optional might unnecessary clarification documentation help user understand computed property appropriate getter function computed properties cached reevaluated reactive dependency changed thank", "d": "8/2015"}, {"body": "teffenellis could done unobtrusive way default work like without caching really need caching specific scenario enable perproperty basis", "d": "8/2015"}, {"body": "per computed configuration defaulting", "d": "8/2015"}, {"body": "make one step plus boolean value alwayscached alwaysreevaluated properties", "d": "8/2015"}, {"body": "karevn nt really see point making function makes unnecessarily complicated", "d": "8/2015"}, {"body": "hard way function bit overkill may helpful complex cases make work ways function use result mark cache record stale boolean use enabledisable caching", "d": "8/2015"}, {"body": "think making accept function make confusing people may end creating slow apps nt use correctly thing computed properties remember somebody complaining performance evan advising use heavy operations inside computed properties implemented caching", "d": "8/2015"}, {"body": "computed properties evaluated point easier make one computation function handler computed properties smarter removed alltogether sake simplicity tried use current state ended using approaches recomputed data methods could control caching strategy effectively enough imho question make easy use newbies powerful enough advanced usage words make aggressively cached default evan cache option optional function cache advanced usage example current app lots computations related window object dom element sizes would useful control caching one function passed several computed properties least api mark cached computed value stale", "d": "8/2015"}, {"body": "karevn nt think really understand computed properties automagic always uptodate property used compute value based reactive values putting lot windowdom sizes inside computed properties expect act dependencies say using wrong find useful", "d": "8/2015"}, {"body": "got computations based vue reactive values pretty cheap bother caching", "d": "8/2015"}, {"body": "karevn cheap time also say computed property mapfilterreduces huge array slow let suppose additional computed properties rely one calling expensive computed property many times necessary", "d": "8/2015"}, {"body": "agree still think adding control caching hurt", "d": "8/2015"}, {"body": "meant function value option make sure confusion function return value determine cache flush ie returns true keep cached false triggers recalculation", "d": "8/2015"}, {"body": "karevn would useful know call function call reactive dependency changes really different cached", "d": "8/2015"}, {"body": "already implemented shipped next release", "d": "8/2015"}, {"body": "checked release ca nt see change area meant work", "d": "8/2015"}, {"body": "bad overlooked pr writing release note", "d": "8/2015"}, {"body": "suppose add release notes", "d": "8/2015"}, {"body": "actually minor issues regarding feature officially include patch release", "d": "8/2015"}, {"body": "thanks great effort greetings czech republlic evan notifications githubcom actually minor issues regarding feature officially include patch release reply email directly view github", "d": "8/2015"}, {"body": "shipped", "d": "8/2015"}, {"body": "supposed work thought eg clicking checkbox willl sets finished model instead true", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "note vue templates parsed actual html tag template parsed actual tag breaks expression rule thumb never include tags inside mustache expressions vue stringbased template language use either filter computed property case", "d": "8/2015"}, {"body": "thanks detailed report appreciated", "d": "8/2015"}, {"body": "\u76f4\u63a5", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "textarea \u7684 selectionstart selecitonend \u8fd9\u79cd", "d": "8/2015"}, {"body": "\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "duplicate yes going added", "d": "8/2015"}, {"body": "\u4e0d\u60f3\u901a\u8fc7props", "d": "8/2015"}, {"body": "\u63d0\u95ee\u8bf7\u5230 vuejsdiscussion", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "peaktai", "d": "8/2015"}, {"body": "please post questions vuejsdiscussion function access", "d": "8/2015"}, {"body": "merci beaucoup thanks tip vuejsdiscussions", "d": "8/2015"}, {"body": "inserted content follow component scope rules seems looking inlinetemplate", "d": "8/2015"}, {"body": "hi evan looked still getting weird behaviour fiddle shows looks like correctly compiled child scope without needing use note however binding nt update type box fiddle shows happens put component longer compiles component binding still nt update type box sure make", "d": "8/2015"}, {"body": "ah sorry nt look original fiddle careful enough related rather manually mounting vue instance inside another use one toplevel instance", "d": "8/2015"}, {"body": "ok thanks help", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "matmoo understandable interested another time example", "d": "8/2015"}, {"body": "wormen assume english native language understanding question correctly sorry", "d": "8/2015"}, {"body": "matmoo place clear", "d": "8/2015"}, {"body": "decision needed", "d": "8/2015"}, {"body": "wormen people community speak russian nt afraid duplicate messages russian although probably ask questions vuejsdiscussion vue gitter \u0432 \u043a\u043e\u043c\u044c\u044e\u043d\u0438\u0442\u0438 \u0435\u0441\u0442\u044c \u043b\u044e\u0434\u0438 \u0440\u0430\u0437\u0433\u043e\u0432\u0430\u0440\u0438\u0432\u0430\u044e\u0449\u0438\u0435 \u043f\u043e\u0440\u0443\u0441\u0441\u043a\u0438 \u0442\u0430\u043c \u0447\u0442\u043e \u043d\u0435 \u0441\u0442\u0435\u0441\u043d\u044f\u0439\u0442\u0435\u0441\u044c \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u0442\u0435\u043c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u043b\u0443\u0447\u0448\u0435 \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u0442\u044c \u0432 vuejsdiscussion \u0438\u043b\u0438 vue gitter", "d": "8/2015"}, {"body": "simplesmiler thanks", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "try", "d": "8/2015"}, {"body": "perfect thank", "d": "8/2015"}, {"body": "itangog nt work wrapped", "d": "8/2015"}, {"body": "inside wo nt register top vm could many conflicting see handle official todomvc example", "d": "8/2015"}, {"body": "sure read code trying break everything written currently use dispatch event component tell parent selected bound main app broadcasts components message say new component selected works exactly thought made sense could change use way prop start going multiple layers gets bit messy imo still using internally let live add new global emitter people use current system nt work", "d": "8/2015"}, {"body": "use heavily willing rewrite everything really starting feel messy", "d": "8/2015"}, {"body": "start going multiple layers gets bit messy imo wrote something like earlier probably wo nt come soon events use sometimes global utility would useful interesting cases events dev centralizing app data state", "d": "8/2015"}, {"body": "adding global would nice please nt remove current ones find useful know intent improves readability use three heavily mon aug azamat notifications githubcom wrote start going multiple layers gets bit messy imo wrote something like context earlier probably wo nt come soon events use sometimes global utility would useful interesting cases events dev centralizing app data state reply email directly view github", "d": "8/2015"}, {"body": "also heavily rely relied event bus finished projects really felt bit messy eventually time sending events controller instance top handled sometimes another event broadcast chain sort globalized localized system implement something like really love idea please make sure switched custom modules node ecosystem like one thing consider us use sort modularisation like webpack browserify really make sense implement eventbus instance existing eventbus fingertip writing", "d": "8/2015"}, {"body": "markhahn remove anything plenty time migrate honestly think benefits decoupling event system view structure outweighs express intent example global event bus grep know former trigger latter event propagation depends components structured ca nt sure nirazul currently vue instances implement emitter interface already matter exposing internals already totally optional sure use whatever external event library want since without global emitter would common pattern good make sure users using certain build tools still access functionality", "d": "8/2015"}, {"body": "honestly think benefits decoupling event system view structure outweighs express intent broadcast dispatch realized arguing strongly simplicity removing things agree removed mon aug pm evan notifications githubcom wrote markhahn remove anything plenty time migrate honestly think benefits decoupling event system view structure outweighs express intent broadcast dispatch example global event bus grep emit event event know former trigger latter event propagation depends components structured ca nt sure nirazul currently vue instances implement emitter interface already matter exposing internals already totally optional sure use whatever external event library want since without broadcast dispatch global emitter would common pattern good make sure users using certain build tools still access functionality reply email directly view github", "d": "8/2015"}, {"body": "building application global event bus pattern lead app easier manage think building common ui components think useful communicate relative components like structure intend coupled structure information also carried events implicit example closes also let close easy event", "d": "8/2015"}, {"body": "menu closes also let submenus close easy broadcast menuclose event event one name without namespace problems global bus would require awkward namespacing code tue aug pm terencez notifications githubcom wrote building application global event bus pattern lead app easier manage think building common ui components think broadcast dispatch useful communicate relative components like menu menuitem submenu structure intend coupled structure information also carried events implicit broadcast dispatch example menu closes also let submenus close easy broadcast menuclose event reply email directly view github", "d": "8/2015"}, {"body": "terencez markhahn see use case control boundary events right prevent event dispatched go outside remember corresponding event handler contain inserted content nt implicit namespace problem remember manually fragile pattern part unhappy current implementation love see way solve problem keeping usefulness", "d": "8/2015"}, {"body": "control boundary events confused global bus boundaries right must misunderstanding meaning boundary wed aug evan notifications githubcom wrote terencez markhahn see use case control boundary events right prevent event dispatched menuitem go outside menu remember return false menu corresponding event handler boardcast menuitem contain inserted content nt implicit namespace problem remember manually fragile pattern part unhappy current implementation love see way solve problem keeping usefulness reply email directly view github", "d": "8/2015"}, {"body": "markhahn yeah true agree global event bus issues maybe want event listeners default ie broadcasted dispatched event handled stops unless handler explicitly pass would naturally contain events sent within subtree nt accidentally affect parts application", "d": "8/2015"}, {"body": "would prefer keep way clearly personal preference lazy arguments made either default return good coding would make every return explicit grin wed aug pm evan notifications githubcom wrote markhahn yeah true agree global event bus issues maybe want event listeners return false default ie broadcasted dispatched event handled stops unless handler explicitly pass return true reply email directly view github", "d": "8/2015"}, {"body": "like idea defaulting specifying event propagate semantic providing handler callback executed want event propagate something like js handler propagate eventa function data propagate something data handler propagate eventb function data propagate something data propagate", "d": "8/2015"}, {"body": "youngsteveo agreed definitely worth considering", "d": "8/2015"}, {"body": "return true semantic standard used everywhere everyone know means semantic providing easy migration path may seem easy looks like lot unneeded complexity everyone want change something works someone show example current methods nt work break something wed aug pm ryan p kilby notifications githubcom wrote import vue vue vueextend emitters dispatch vuedispatchbus components created function dispatch function data bus propagate methods thething function couple thoughts deprecating existing emitters providing easy migration path different buses provide different behaviors events propagated throughout vue hierarchy thought current dispatch emitter similar dom event bubbling whether good thing nt know familiar mental model regular dom event handlers maybe solution separate emitter behavior bus vues would register multiple buses possiblities dispatch bus vue hierarchy aware sends events vue hierarchy broadcast bus vue hierarchy aware sends events vue hierarchy global bus vue hierarchy agnostic broadcasts events vues registry local bus like current emit could maybe default required bus thoughts emit could take optional bus name specify bus emit message onto defaults local bus otherwise existing dispatch broadcast methods would provided respective buses shortcuts calling emit child vuescomponents automatically register reply email directly view github", "d": "8/2015"}, {"body": "sorry prematurely submitted comment hashing thoughts thought able delete sent email", "d": "8/2015"}, {"body": "markhahn imagine component say includes private child component communicates dispatching event eg want make component reusable nt want events dispatched child leak outside potentially affect higherup component also happens listen event sure avoid namespacing events full control whole application component used someone else unknown environment guarantee dispatched event wo nt accidentally trigger unwanted handler tree ensure event nt leak intercept level current api explicitly return probably people", "d": "8/2015"}, {"body": "good example understand argue reverse return truefalse default continue argue anything complex wed aug pm evan notifications githubcom wrote markhahn imagine component say menu includes private child component menuitem menuitem communicates menu dispatching event eg closed want make component reusable nt want closed events dispatched child leak outside menu potentially affect higherup component also happens listen closed event sure avoid namespacing events thats full control whole application component used someone else unknown environment guarantee dispatched event wo nt accidentally trigger unwanted handler tree ensure event nt leak intercept menu level current api explicitly return false probably people reply email directly view github", "d": "8/2015"}, {"body": "markhahn opinion literal booleans easily become antipatterns used function parameters return values unless function name semantically indicates expecting boolean like something like example boolean parameters make code less semantic example looks like function saving object third param second param would look function definition find params better api would something like pretty much reason saving object want upsert option true nt want log anything semantic regarding make analogies returning indicate really means mean mean event successfully handled mean event propagate mean backend operation successful everyone know means semantic really true pun intended jk everyone knows means expected intrinsic semantic explicit", "d": "8/2015"}, {"body": "agree everything pointed although using less ambiguous call example always seen return false mean stop propagating talking reversing think would really bad would opposite standard would really confuse everyone maybe simple call would unambiguous semantic still argue meaning stop propagation would fine know opinion flipflopping place try think things better typing least stimulating thinking hope btw googling semantic results relating meaning language logic meaning events clearly stop propagating semantic semantic", "d": "8/2015"}, {"body": "markhahn completely agree using event handler stop propagation common however firmly reject semantic meaning events clearly stop propagating semantic knowing thing make explicit subjectively know meaning applying context experience look objectively boolean context beyond would argue would much ugly said guess gets job done end day", "d": "8/2015"}, {"body": "first started working components vue assumed event propagation stopped first component listening got hit thats made sense course carefully reading docs aware return false want propagate something like propagate", "d": "8/2015"}, {"body": "necessary make listening events dispatch check event dispatched handler event attribute optional root component call broadcast stop propagation default", "d": "8/2015"}, {"body": "couple thoughts could fix namespace issue using reverse domain naming instance comexampleclosed kind verbose would work viewmodel could declare terminates event hierarchy leaf node starts new event hierarchy point events nt propagate across broadcast sends event new hierarchy dispatch sends event parent event hierarchy propagate call approach would work used consistently handler would declarative setting viewmodel handlers would nt need worry option could also generalized event bus pattern call option root viewmodel single event bus inherited children hierarchy hitting viewmodel declares everything share new bus actually like option", "d": "8/2015"}, {"body": "davidkhess interesting ideas one problem call event root solution defines upperbound events lowerbound relies child component also declare event root strong guarantee", "d": "8/2015"}, {"body": "true enough ie optin mechanism event forwarding default behavior safer ca nt think way option declaratively without creating lot extra declarative setup least isolated event handlers", "d": "8/2015"}, {"body": "ok problem extra argument events may emit unknown length arguments simply append end argument list handler nt really know one arguments length different guess go although less explicit seems straightforward solution", "d": "8/2015"}, {"body": "implemented alpha branch", "d": "8/2015"}, {"body": "vue \u6709 partial", "d": "8/2015"}, {"body": "probably data become synonym", "d": "8/2015"}, {"body": "azamatsharapov probably libs rely attributes nt know user really wants data attribute prop", "d": "8/2015"}, {"body": "really like proposal way code speaks looks even cleaner", "d": "8/2015"}, {"body": "whilst agree like fact v becasue easy understand vue based attribute rather third party anything else could config value becasue would quite like use u still leaves e looking thml know part vue system", "d": "8/2015"}, {"body": "matmoo literal directives need used together reactive directives eg makes sense also component also used components treated like directive params beginning nonprefixed exception actually never liked since always considering deprecating", "d": "8/2015"}, {"body": "actually suppose makes consistent props component", "d": "8/2015"}, {"body": "hello use von directive one tag bind one event like question please give suggestsforgive poor english", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "azamatsharapov thx", "d": "8/2015"}, {"body": "like proposal especially get nonbreaking way deprecation warnings indeed confusing keeping track literals dynamic literals expressions apply", "d": "8/2015"}, {"body": "overall simplifies understanding code thing personally nt like bullet syntax sometimes clean easy understand example html sample button achieve result new syntax", "d": "8/2015"}, {"body": "gapipro agree string concatenation bit ugly syntax html sample button", "d": "8/2015"}, {"body": "would nt appropriate way handle particular case many attributes behave like", "d": "8/2015"}, {"body": "davidkhess yeah could something like html sample button still clear interpolation syntax", "d": "8/2015"}, {"body": "nt know personally prefer since explicit going", "d": "8/2015"}, {"body": "think go step support object syntax remove addition accept array html", "d": "8/2015"}, {"body": "would nt nicer instead kind object syntax support html expression string", "d": "8/2015"}, {"body": "gapipro find unnecessary difference format data handle expression example", "d": "8/2015"}, {"body": "yes unnecessary like easier notice coding html", "d": "8/2015"}, {"body": "gapipro idea make attribute databindable adding similar better syntax", "d": "8/2015"}, {"body": "oh ok got", "d": "8/2015"}, {"body": "like", "d": "8/2015"}, {"body": "two thumbs", "d": "8/2015"}, {"body": "like somewhat related find always using never advantage likely use one ultimately wondering good case deprecated favor", "d": "8/2015"}, {"body": "vshow showshides element css vif adds removes dom possible use vshow faster think got right", "d": "8/2015"}, {"body": "possible use vshow faster matmoo source fact", "d": "8/2015"}, {"body": "\u73b0\u5728\u5c31\u6709 priority", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "attribute", "d": "8/2015"}, {"body": "agree", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "implemented alpha branch need removal beta", "d": "8/2015"}, {"body": "currently building large application strict turned really beneficial", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "considering would one pass assets parent child imagine slider component lets consumer specify custom transition slides would possible extending component overriding assets currently possible containing component asset provider component hacky gets job done", "d": "8/2015"}, {"body": "simplesmiler imagine component would come set predefined transitions let user pick one although theoretically pass like looks hacky", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "never used pattern would nt want rely", "d": "8/2015"}, {"body": "confirmed deprecation warning implemented alpha option removed beta", "d": "8/2015"}, {"body": "agreed", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "would affect iterating object edit nvm looks like use alias iterating object already alias value property", "d": "8/2015"}, {"body": "cheapsteak yep difference instead", "d": "8/2015"}, {"body": "way alias key well nested repeats", "d": "8/2015"}, {"body": "yeah currently angular really want avoid complicating syntax something", "d": "8/2015"}, {"body": "maybe vrepeat supported objects first place single way order object keys upd guess irrelevant issue still", "d": "8/2015"}, {"body": "single way order object keys list web page always ordered showing series images order tue aug pm denis karabaza notifications githubcom wrote maybe vrepeat supported objects first place single way order object keys reply email directly view github", "d": "8/2015"}, {"body": "simplesmiler", "d": "8/2015"}, {"body": "markhahn dom elements certainly ordered seems like repeat array point message parenthesis imaginary part syntax", "d": "8/2015"}, {"body": "dom elements certainly ordered contents dom nt gave example nt care order images shown tue aug pm denis karabaza notifications githubcom wrote markhahn dom elements certainly ordered vrepeat val object orderby key seems like repeat array point message parenthesis imaginary part syntax reply email directly view github", "d": "8/2015"}, {"body": "guess opened new issue oh well markhahn data unordered sure way user perceives data representation may unordered representation developers working always ordered think abstract far away fact different scenarios things without order sometimes care particular order items visual representation independent order absolutely positioned points scatterplot sometimes care particular order items want ordering stable refresh insertion new item items nt jump around much participants discussion sometimes want items ordered quasirandomly every item given equal exposure sometimes items inherent order may ordered given criteria rows table sortable columns understand may implemented using current syntax think repeating object keys different repeating array repeating object keys without gives false sense stably quasirandomly ordered may improved perfomancewise truly orderindependent data wrong assumption truly orderindependent data less modifications made dom data changes", "d": "8/2015"}, {"body": "simplesmiler object key order defined", "d": "8/2015"}, {"body": "simplesmiler implied behavior repeating object keys without orderby order property enumeration order implemented browser javascript engine order opinion reasonable assumption separating object iteration different syntax implementation complicates issue", "d": "8/2015"}, {"body": "josephsilber thanks aware think transpilation aggressive minification like babel closure compiler break order original minified scripts behave differently fair javascript still think possible write special directive unordered data would outperform general case", "d": "8/2015"}, {"body": "browser implemented yet way know", "d": "8/2015"}, {"body": "closed favor", "d": "8/2015"}, {"body": "looks great behave add component", "d": "8/2015"}, {"body": "exclusive content insertion adding makes sense", "d": "8/2015"}, {"body": "see compiled context", "d": "8/2015"}, {"body": "yes considered child", "d": "8/2015"}, {"body": "could support way compiled local scope inheriting assets consumer take grid component exposing customizable cells one must either name partial component globally use cell use grid component mixin grid template would look like usage", "d": "8/2015"}, {"body": "implemented alpha branch", "d": "8/2015"}, {"body": "sounds great hope especially improve props namespace issue", "d": "8/2015"}, {"body": "calling would make clear reserved", "d": "8/2015"}, {"body": "work way binding present send prop blank data defines defaults works nicely separating would need merge defaults prop data create correct data structure creating component trying make component responsible data app make sense", "d": "8/2015"}, {"body": "matmoo sure get mean declare defaults props directly", "d": "8/2015"}, {"body": "hmm using vrepeat array create components data comes anyway maybe irrelevant", "d": "8/2015"}, {"body": "functions vars passed via parameters local variables space vue stay sun aug pm evan notifications githubcom wrote problem currently props merged instance data problems data props declare property name order priority merging clear prop overwrite field name data way around currently props initial values available inside data functions field returned data gets overwritten prop merged clear whether component property private state prop passed thus changed parent unless go check component props declaration proposal move props name space example thisprops avoids merging problem either make props reserved field make props makes explicit something prop obtained outside component reply email directly view github", "d": "8/2015"}, {"body": "would add syntax things like mustaches one vue biggest features simplicity nt see proposal enough benefit excuse added complexity things like removing great perfection attained nothing add nothing remove antoine de saint exup\u00e9ry", "d": "8/2015"}, {"body": "markhahn yes would make template bit verbose tradeoff conciseness note necessarily simplicity explicitness component stateful state change time different say pure function call could helpful clearly know part state external thus change without component anything said also sure proposal yet would love get feedback others", "d": "8/2015"}, {"body": "could helpful clearly know part state external thus change without component anything objects passed functions also change without function help ca nt tell object string using syntax adding syntax like hungarian notation would horrible adding scope meaning variables using syntax slippery slope vars passed function look different local vars look different closure vars look different global vars", "d": "8/2015"}, {"body": "still sure using way bindings would data prop", "d": "8/2015"}, {"body": "opinion vue one best frameworks ever seen simplicity moving params scope would make structure complex show warning param data property name", "d": "8/2015"}, {"body": "gamperl yeah could work maybe something like nt redefine prop data use prop default value instead", "d": "8/2015"}, {"body": "would actually like separate believe keeps simpler", "d": "8/2015"}, {"body": "warning instead different namespaces time add confusion adding props data attributes name real use case props data name right", "d": "8/2015"}, {"body": "warning sounds like good idea", "d": "8/2015"}, {"body": "embrace probable interference taking next way state info data props specification external interface available higher level component properties created function become defaults props passed outside would also suggest rename props attributes make straightforward see people often confused gitter discussions bad times", "d": "8/2015"}, {"body": "called renamed later sounds better shorter type", "d": "8/2015"}, {"body": "emitting warning name clashes case param data attribute name seems like lead trouble confusion", "d": "8/2015"}, {"body": "azamatsharapov call one letter", "d": "8/2015"}, {"body": "karevn point introducing breaking changes naming preferences objectively shorter easier type people gotten used offer substantial benefits justify change", "d": "8/2015"}, {"body": "implemented branch", "d": "8/2015"}, {"body": "using literal directive also internal flag nt need set provide literal directive automatically dynamic literal really want literal directive html", "d": "8/2015"}, {"body": "thanks misunderstood doc", "d": "8/2015"}, {"body": "misunderstood doc written apps vue great btw still get confused mustache needed needing situations even replacement happening confusing would cool allowed places things evaluated evaluation parser could strip sun aug pm tiga wu notifications githubcom wrote thanks misunderstood doc reply email directly view github", "d": "8/2015"}, {"body": "use computed property", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "please provide debuggable reproduction", "d": "8/2015"}, {"body": "added examples locked professional project ca nt give access evan schrieb please provide debuggable reproduction reply email directly view", "d": "8/2015"}, {"body": "katywings evan asking sscce fiddle start vue", "d": "8/2015"}, {"body": "ahh really missunderstood xd yeah create one today denis karabaza schrieb katywings evan asking sscce fiddle start vue reply email directly view", "d": "8/2015"}, {"body": "okay starting two items b press add item button first item create item c b item b radiuses looses checked state thanks lot help", "d": "8/2015"}, {"body": "sure helps", "d": "8/2015"}, {"body": "found cause insert new instance radio inputs attribute instance updated yet based moment page inputs thus selecting one deselects others suggest simply remove name attribute nt need submit form send array instead getting form", "d": "8/2015"}, {"body": "yeah priority model updates change names impossible fix framework something like pause vmodel computations update vrepeat variables index resume vmodel computations think framework get widely adapted future problem occur like case easy switch form action submit input name elements ajax submit simplesmiler looks easy dancer thank man try workaround strange trackby index helps two days ago tried trackby uid didnt help", "d": "8/2015"}, {"body": "simplesmiler workaround works perfectly thank", "d": "8/2015"}, {"body": "closing found workaround edge case rather nonrecommended pattern nt seem justify amount effort work around", "d": "8/2015"}, {"body": "think worth mention docs fact radio buttons require attribute radio also radio buttons example probably stripped attributes", "d": "8/2015"}, {"body": "simplesmiler yeah good idea", "d": "8/2015"}, {"body": "please post questions vuejsdiscussion instead main repo", "d": "8/2015"}, {"body": "simply", "d": "8/2015"}, {"body": "endaaman thanks suggestion sorry probably misunderstood points article reading used google translate thought problem using together eg getting wrong model value inside listeners seems case josephsilber suggested using simply use inside expressions sorry suggesting open pr due misunderstanding pray directive still nice work ps reserved meta property inside may want pick different name store value", "d": "8/2015"}, {"body": "selected state working", "d": "8/2015"}, {"body": "following valid equivalent true following invalid", "d": "8/2015"}, {"body": "also using select element use dynamic options", "d": "8/2015"}, {"body": "using actually ajax call get traininglist using vmodel ajax method post url modaluserinfo token documentqueryselector token getattribute value data thisuserinfo success function traininglist todome create function repetitive lines thatnextwizard tabindex thattrainings traininglist var trainingpage training text thattrainings function key trng alert trainingpage trngname", "d": "8/2015"}, {"body": "problem get state compiled", "d": "8/2015"}, {"body": "work using", "d": "8/2015"}, {"body": "sorry working browser select last list selected options", "d": "8/2015"}, {"body": "please look example carefully looking multiple select need add multiple attribute", "d": "8/2015"}, {"body": "really recommended breaks reactivity guarantee however call call", "d": "8/2015"}, {"body": "yes course app quite big complex makes difficult understand thanks considering anyway", "d": "8/2015"}, {"body": "well usually advice adding new data properties fly prefer deterministic data model helps reason app gets big", "d": "8/2015"}, {"body": "yes totally right already started moving towards approach", "d": "8/2015"}, {"body": "yeah error doc support paths fact since everything deprecated", "d": "8/2015"}, {"body": "correct use set even object setting exists root", "d": "8/2015"}, {"body": "yeah calls internally note difference vs former accepts paths vm instance method latter accept keys data object enhancement method", "d": "8/2015"}, {"body": "make sense would suggest updating docs avoid confusions deprecating add seems correct thanks evan", "d": "8/2015"}, {"body": "big problem selecting options example", "d": "8/2015"}, {"body": "fiddle works properly latest branch wait next release please", "d": "8/2015"}, {"body": "thanks evan", "d": "8/2015"}, {"body": "purpose checkbox show selectednot selected class state td based claimselected need add hidden input", "d": "8/2015"}, {"body": "please post type questions vuejsdiscussion next time although dirty add listener input stop event propagation future versions also directly", "d": "8/2015"}, {"body": "indeed causing infinite loop mutates array triggers filter applied make sure sort copy", "d": "8/2015"}, {"body": "perfect thanks evan", "d": "8/2015"}, {"body": "supposed destroy previous child since waitfor event happened yet set yet", "d": "8/2015"}, {"body": "yeah saw post discussion currently idea probably need new hook instead called right first insertion hook provide callback also accepts returning promise", "d": "8/2015"}, {"body": "really related discovered accidentally looking code intended usage waitfor could fixed waiting event component reloaded cache component data needs though might stale need wait", "d": "8/2015"}, {"body": "use object format form style classes dynamic options currently supported suggest using selector like style options", "d": "8/2015"}, {"body": "ok thanks property use option object", "d": "8/2015"}, {"body": "maybe making vrepeat options obsolete could reconsidered whenever extend base html select plugins custom directive weird things happen", "d": "8/2015"}, {"body": "checkout official example reason used options makes difficult handle twoway syncing", "d": "8/2015"}, {"body": "seems updating backing options array later respect viewmodel initialization nt work since usually fill select actually ajax return callbacks hard issue work around cry please take look slightly modified official example also design perspective maybe filling text property options view responsibility viewmodel one smile thanks", "d": "8/2015"}, {"body": "example assumes options static instead ing use inside update options", "d": "8/2015"}, {"body": "closing think anyway improve current select syntax", "d": "8/2015"}, {"body": "auto casted cases people want number pass number want literal string numbers", "d": "8/2015"}, {"body": "nt use use", "d": "8/2015"}, {"body": "ok thx try use vrepeat together watch thx", "d": "8/2015"}, {"body": "use components", "d": "8/2015"}, {"body": "likely due router instability please reopen router repo instead", "d": "8/2015"}, {"body": "\u770b\u8d77\u6765\u4f60\u7684\u6570\u636e\u7ed3\u6784\u91cc\u9762\u6709\u5bf9 window", "d": "8/2015"}, {"body": "\u5199\u9053 \u770b\u8d77\u6765\u4f60\u7684\u6570\u636e\u7ed3\u6784\u91cc\u9762\u6709\u5bf9 window reply email directly view github", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "\u628a\u4ee3\u7801\u548c\u8be6\u7ec6\u7684\u91cd\u73b0\u6b65\u9aa4\u53d1\u7ed9\u6211", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "\u4e0d\u8981\u7528\u538b\u7f29\u7248\u672c\u7684", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "briefly mentioned guide think twoway filters looking", "d": "8/2015"}, {"body": "exactly thing twoway filters nt allow type anything want input unless use want context play fiddle messed many fronts empty input ca nt enter anything anymore stuck since keeps formatting value starts hitting backspace change press backspace many times want nothing change maybe fixed triggering read lazily", "d": "8/2015"}, {"body": "well thing formatting user input tricky thing nt think get expect angular formattersparsers either think trying impossible transform relationship user input value underlying model value gets converted number way know text format back yeah actually want persist user types format user blurs twoway filters created use case generally twoway binding nt make sense case two separate piece state store underlying value display value handle events separately closing formattersparsers wo nt solve issue", "d": "8/2015"}, {"body": "formatters angular invoked model changes source form element prevents issues outlined see example type input field stay way set value button input field set nt call formatter blur think different point important thing formatters called type", "d": "8/2015"}, {"body": "josephsilber ah makes sense would make twoway filters easier use", "d": "8/2015"}, {"body": "sure understand saying think good idea default behavior twoway filters think calling read blur", "d": "8/2015"}, {"body": "josephsilber yes current twoway filter behavior confusing hard use think angular formatter behavior simplifies issue need prevent triggering model view updates user typing", "d": "8/2015"}, {"body": "please reopen issue", "d": "8/2015"}, {"body": "beautiful thank much", "d": "8/2015"}, {"body": "sunglasses", "d": "8/2015"}, {"body": "hmm looks like props skipped case situation would fragment passed instance", "d": "8/2015"}, {"body": "probably useful practical usage trying get vue working framework benchmark", "d": "8/2015"}, {"body": "hah seems lot faster old version", "d": "8/2015"}, {"body": "yeah friend work saying vue lot slower react styleattribute based animations thinking ca nt right even slower ca nt much found benchmarks couple months ago looks like vue twice fast react", "d": "8/2015"}, {"body": "well bottleneck styleattributebased animations almost never framework properties animating", "d": "8/2015"}, {"body": "ing component get limited abilities ca nt access case think evan mentioned somewhere issues wrap tag", "d": "8/2015"}, {"body": "repeated components automatically available inside component template components get limitation component scope rules", "d": "8/2015"}, {"body": "duplicate already fixed", "d": "8/2015"}, {"body": "jsfiddle link", "d": "8/2015"}, {"body": "\u5c31\u6709\u4e86", "d": "8/2015"}, {"body": "patrickhertling nt think solved vue rather external library using jquerystuff depending needs general case custom twoway directives solution might looking", "d": "8/2015"}, {"body": "thank think use directive", "d": "8/2015"}, {"body": "principle vueutil methods must useful vue internal code need specific util methods use lodash lodash also ships standalone versions individual methods", "d": "8/2015"}, {"body": "look code style semicolons unless necessary nt issues minimized vue sources reproduce", "d": "8/2015"}, {"body": "nt write semicolons necessary", "d": "8/2015"}, {"body": "thanks sharing using totaljs vue builtin js compressor totaljs problem webpack code including vue js code one line without semicolon browser blocked seems compressor nt insert semicolon webpack vue code tried use yui compressor tried uglify compress generated code still nt work util modified source code totaljs avoid using builtin compressor better solution used semi add semicolon vue everything came back normal cheers", "d": "8/2015"}, {"body": "seems compressor nt insert semicolon would consider broken follow javascript standard would file issue repo sat aug pm charlie li notifications githubcom wrote thanks sharing using totaljs vue builtin js compressor totaljs problem webpack code including vue js code one line without semicolon browser blocked seems compressor nt insert semicolon webpack vue code tried use yui compressor tried uglify compress generated code still nt work util modified source code totaljs avoid using builtin compressor better solution used semi add semicolon vue everything came back normal cheers reply email directly view github", "d": "8/2015"}, {"body": "moved vuejsdiscussion personally nt like style shown post people whatever like cases want components well encapsulated rely simple props rather entire app state", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "use inline expressions like need something complex consider using computed property", "d": "8/2015"}, {"body": "ah thanks put pr documentation noting", "d": "8/2015"}, {"body": "ok able remove clicked user following changes html javascript", "d": "8/2015"}, {"body": "remove item directly take either index number actual object remove", "d": "8/2015"}, {"body": "thanks lot fast answer", "d": "8/2015"}, {"body": "actually intended content outlet get content elements match selector regardless appearance order allows block content reused multiple times component sometimes useful also think better rendered result depend outlets ordered use specific selector example", "d": "8/2015"}, {"body": "\u4e0a\u9762\u7528 \u4e0d\u662f", "d": "8/2015"}, {"body": "\u603b\u662f\u628a \u5199\u6210\u4e86", "d": "8/2015"}, {"body": "updated fiddle examples looks like vue loosing bindings even using method using keypath value prop like", "d": "8/2015"}, {"body": "nt initializing created hook returning inside option specifically initializing observed properties", "d": "8/2015"}, {"body": "\u65b0\u589e\u7684\u60c5\u51b5 \u63d0\u4f9b\u4e86 set \u51fd\u6570\u7684 \u4e0d\u662f\u76f4\u63a5 \u8d4b\u503c", "d": "8/2015"}, {"body": "\u4e4b\u524d\u4e5f\u60f3\u8fc7\u7528 \u8ba9\u6211\u8bef\u4ee5\u4e3a", "d": "8/2015"}, {"body": "\u770b\u5230\u6839\u672c\u6ca1\u6709 level \u6539\u6210 \u548b\u6837", "d": "8/2015"}, {"body": "use codes place like selectpackage dl vrepeat items template vif template vif isfirstmonth dt groupname dd vrepeat item von click onchoose itemid skuid isfirstmonth span skuname template vif isfirstmonth dt groupname dd vrepeat item von click onchoose itemid skuid isfirstmonth vshow skuid span skuname", "d": "8/2015"}, {"body": "using latest version fix related nested templates safari still happens please provide jsfiddle reproduction", "d": "8/2015"}, {"body": "vuejs provide new directive like worked maybe concise syntax use instead easy use use scene", "d": "8/2015"}, {"body": "demo", "d": "8/2015"}, {"body": "velse maybe vempty also since composing views three conditions common nothing show something show something different needs adjusting", "d": "8/2015"}, {"body": "thanks unfortunately nt fix issue use settimeout eg chrome never works ms sometimes realistic test case keep clicking link quickly nt able break chrome clicking fast enough able firefox also easier computer swapping firefox entering div also gets pushed leaving one fast enough real app enough time move mouse one menu item one click happen", "d": "8/2015"}, {"body": "testing requestanimationframe setting justentered false next frame always enough firefox fact even nesting two requestanimationframes nt enough settimeout clicking menu items including mouse movement one menu item using backforward mouse", "d": "8/2015"}, {"body": "real reason styles toggle enter leave fast enough opacity nt started interpolating yet still gets applied thus css transition triggered event never fires simple quite unintuitive fix giving tiny value different example", "d": "8/2015"}, {"body": "yeah know hoping would possible fix using requestanimationframe looks like pretty much impossible", "d": "8/2015"}, {"body": "better option might allow option actual object like angular", "d": "8/2015"}, {"body": "yeah would definitely work", "d": "8/2015"}, {"body": "would cool", "d": "8/2015"}, {"body": "installed latest code dev branch still nt work debug code find inside selectjs execute line object object string value", "d": "8/2015"}, {"body": "jfliu course serialized object value works syncing back model", "d": "8/2015"}, {"body": "example code still nt work try", "d": "8/2015"}, {"body": "jfliu build dist folder contains standalone build vuejs however files checkedin release happens dev branch files date", "d": "8/2015"}, {"body": "simplesmiler installed clone repo run build task code works thanks", "d": "8/2015"}, {"body": "would nt perfect use case broadcasting event root view models would listen react", "d": "8/2015"}, {"body": "update bindings", "d": "8/2015"}, {"body": "since picture worth thousand words would think biggest issue running using components view models three separate unrelated view model hierarchies", "d": "8/2015"}, {"body": "yeah though using broadcast like nt want inject globalize object vm prefer solution private data translator object kept away vms pluginmixin essentially becomes service injected vm either automatically vms plugin manually mixin exports functions public api essentially keeping private data separated", "d": "8/2015"}, {"body": "note way using creating children view models body tag view model see fiddle added logging make clear best way get parent child relationships like working use component system", "d": "8/2015"}, {"body": "oh confusing thanks pointing even fix nt work real app actually dynamic component", "d": "8/2015"}, {"body": "two problems first functions components returning second key problem order bind need make sure view model defined otherwise vue binds calls see reference translator therefore ca nt watch causes update created updated later", "d": "8/2015"}, {"body": "right using add works component even though translator nt defined root either work children", "d": "8/2015"}, {"body": "understanding deal setting data components directives compiled executed nt think effect anything already compiled dom point maybe could shed light subtlety", "d": "8/2015"}, {"body": "another reason prefer initializing data properly working verison internally calling vm causes watchers reevaluated new dependency non existing watchers aware essentially forced dirtycheck digest cycle like angular propagates child child normal components derive parent data via also forceupdated digest cycle", "d": "8/2015"}, {"body": "table element restrictions elements appear inside custom elements hoisted render properly cases use component directive syntax docs scroll tip", "d": "8/2015"}, {"body": "fwiw work bind text area value property instead ie", "d": "8/2015"}, {"body": "separate issue looks good though open pr", "d": "8/2015"}, {"body": "use tried adding none select ignoredoverriden nt show", "d": "8/2015"}, {"body": "pdcmoreira released yet", "d": "8/2015"}, {"body": "implemented", "d": "8/2015"}, {"body": "run today love see implemented optional array datakey parameter especially declare advance pass vue component", "d": "8/2015"}, {"body": "array argument good idea expecially passed data parameter k august steve notifications githubcom wrote run today love see implemented optional array datakey parameter filterby filterkey name power especially declare advance pass vue component reply email directly view github", "d": "8/2015"}, {"body": "would good improvement waiting", "d": "8/2015"}, {"body": "proposed solution think bit finegrained make template async basic unit vue apps component", "d": "8/2015"}, {"body": "hi using vuejs environment little key write modules using standard syntax use load main vue module nt require bundling complexities setup look something like following javascript somecomponentjs import vue vue import template pathtotemplatehtml text const somecomponent vueextend template template export default somecomponent javascript somevuejs import vue vue import somecomponent somecomponent vuecomponent somecomponent somecomponent new vue html served client includes following bits html systemimport somevue let know anything better articulated", "d": "8/2015"}, {"body": "like tip work always build final script every change", "d": "8/2015"}, {"body": "like tip work always build final script every change browser caching issue bundle pathname changes per build would get around caching individual module paths static however browser would caching old versions files", "d": "8/2015"}, {"body": "closing inactivity", "d": "8/2015"}, {"body": "warning nt understand written support", "d": "8/2015"}, {"body": "suggest try old version like last version need test", "d": "8/2015"}, {"body": "ran well problem dynamic component components async emit event rendered worked around using nexttick also issue things async cases sync others eg function gets data server clientside data yet available caches calls callback immediately next time", "d": "8/2015"}, {"body": "dhruvio provide example code working nexttick struggling article helpful edit minutes passed realized nt using set", "d": "8/2015"}, {"body": "hey breland waitfor listens events end current event loop iteration run logic inside vue instance follows say current event loop listener wo nt pick event waitfor wo nt listening yet wrote phone apologies formatting weird hope answers question nt understand recommend googling processnexttick works vue nexttick method analogous cheers aug tyler breland notifications githubcom wrote dhruvio provide example code working nexttick struggling article helpful reply email directly view github", "d": "8/2015"}, {"body": "experimentation implementing change actually affects many parts compilation chain requires nontrivial refactoring benefits marginal one always put root template string instead raw html going move forward", "d": "8/2015"}, {"body": "nice feature using beta like vmodel array index mycustomkey working nice", "d": "8/2015"}, {"body": "closed via", "d": "8/2015"}, {"body": "using following syntax vue components written typescript typescript load decorators destruct decorators vuecomponent const createcomponent prop lifecyclehook eventhook vuecomponent transform class demo vue component called demo createcomponent demo vuecomponentbase provides declarations vue provieds component makes sure typescript support type checking autocomplete class demo extends vuecomponentbase put github repo tiny library examples derived original vue examples", "d": "8/2015"}, {"body": "jabher gamperl cool pretty sure nt nt need one official class interface vue components us would subtle preferences beauty easily create interface top vue transpilers", "d": "8/2015"}, {"body": "would disagree every person make good implementation take significant amount time sure something kind something dumb wrapper appear soon anyway deep integration always better least performance speaking vue really looking like made btw gamperl looks like caching anything also bind local componentsdirectivesfilters also objectgetownpropertynames iterating property descriptors sounds like kind bad idea especially serious projects caching help solve fully implementation relying upon event decorators either important using getters setters computed properties methods em methods override constructor using annotations methodsprops using static attributes template inherit looks like one obviously preferable way implement vue would really good idea make bundled default happy help take amount time rewrite parts app actually checking vue code weekend strong feeling following options possible would propose restructure application bit create endpoints one creating classic vue interface another one expose vue class possible though bit complex endpoints footprint rather small maintainability become worse users make", "d": "8/2015"}, {"body": "jabher imo vue ship lean core runs environments anything assumes shipped plugin think possible reference implementation class interface nt want make way use vue", "d": "8/2015"}, {"body": "vue ship lean core runs environments temporary decision long need transpilers would stay effect even widespread native support", "d": "8/2015"}, {"body": "josephsilber call temporary native support pretty dismal moment judging long took universally supported say take another years widespread adoption without need transpilers addition current class interfaces rely stage proposals property initializers part time vue would probably rewritten pure already", "d": "8/2015"}, {"body": "sob", "d": "8/2015"}, {"body": "josephsilber haha something replaces javascript", "d": "8/2015"}, {"body": "webassembly maybe write go smile", "d": "8/2015"}, {"body": "know cool guys actively using babel mostly looking compatibility table best idea guys front making big ecommerce app us company hundreds thousands shops worldwide ember babel internet explorer transpilers already adopted even lot big corps using becoming good practice right", "d": "8/2015"}, {"body": "josephsilber let go clojure yeah smile", "d": "8/2015"}, {"body": "jabher exactly mean need transpilers make work vue core contain parts rely transpilers class interface ship separately", "d": "8/2015"}, {"body": "dammit understood idiot vue supports prototype extension literally make nothing decorators events objectgetownpropertydescriptors stuff javascript class test extends vue test documentbodyinnerhtml working new test el body ready function thistest man needed support decorators even relying upon main app make pr tomorrow nt mind usage something like", "d": "8/2015"}, {"body": "jabher please make standalone module said nt want vuecore installitandyougeteverything eg vuerouter vueresource separate packages vuecore used without used together needed decorators", "d": "8/2015"}, {"body": "jabher implementation feature complete proof concept want separate methods computed properties without using getownpropertynames", "d": "8/2015"}, {"body": "gamperl actually need later becoming prototype properties simply double work hand continuing investigate stuff see everything kind overcomplexified kind blocking implementation details", "d": "8/2015"}, {"body": "try use vueroutervue jsdom app works without jsdom following warning vue throws anyone working jsfiddle sample vue vuerouter ca nt get work", "d": "8/2015"}, {"body": "hi evan starters really loving vuejs great job question possible trigger jquerylike events posted question stackoverflow came across thread thought might help others come across situation", "d": "8/2015"}, {"body": "need event method carries useful information target element click coordinates say better create dedication method corresponding signature call method click handler common use case event nt need call method code nt event first place", "d": "8/2015"}, {"body": "hi according discussion jsfiddle work looks like native events nt trigger data sync vue", "d": "8/2015"}, {"body": "slcodenine vmodel listens event default listens lazy mode", "d": "8/2015"}, {"body": "run reason default nonlazy nt also listen", "d": "8/2015"}, {"body": "cool work thanks josephsilber probably getting triggered focus moved inputelement thanks listening see databinding asyoutype somewhat agree could default listen lazy mode makes sense one expect listen event least technical issues related", "d": "8/2015"}, {"body": "way change several variables without rendering intermediate stages makes ui slow times wrong", "d": "8/2015"}, {"body": "thecotne vue default behavior buffers rendering next event loop described never happen running problems create issue reproduction", "d": "8/2015"}, {"body": "never use prop underscore sure would convert hyphencase version could fri aug pm jason daly notifications githubcom wrote trouble understanding computed property observed child via props vs inherit given following parent view parent vue var parent vueextend data return orders tab current computed scopedorders return thistab completed return thisorders future return thisorders components child child following work using inherit child vue var child vueextend template require sometemplatepathmustache inherit true following using props child vue var child vueextend template require ordersindexmustache props scopedorders specifically template like child using props fetch computed scopedorders property get following error typeerror read property length undefined using inherit instead props child view observes changes scopedorders without problem worth mentioning orders parent updated via ajax response set data initially empty error occurs ajax time finish reply email directly view github", "d": "8/2015"}, {"body": "exact difference circumstances use", "d": "8/2015"}, {"body": "voyga see simply gettersetter proxy", "d": "8/2015"}, {"body": "change template component created default template recompiling", "d": "8/2015"}, {"body": "look forward serverside rendering", "d": "8/2015"}, {"body": "love serverside rendering", "d": "8/2015"}, {"body": "thumbs serverside rendering", "d": "8/2015"}, {"body": "moving wiki", "d": "8/2015"}, {"title": "router reloading page hash changes chrome", "body": "created simple router application var backbone require backbone var router backbonerouterextend routes codename path onroute onroute function var p documentcreateelement p var args arrayprototypeslicecall arguments pinnertext argsjoin documentbodyappendchild p new router backbonehistorystart using run duplicate open developer tools address bar type random fragment see address bar type next random fragment see ok seems normal close developer tools repeat steps couple times sure occasionally type fragments used router continually reloading page fragment changes expected reload page fragment changes seems like reason backbone router behaves correctly developer tools open poorly closed safari also seems suffer lesser degree maybe related note seems apart known webkit issue loading url fragment twice", "num": "3781", "d": "8/2015"}, {"title": "potential regression setting directly", "body": "part upgrading noticed issue app directly setting model nt think best way set id setting additional properties via later code started return minimal example expected behavior output calling wiping appears commit run fiddles see output console sh sh undefined resolved issue changing code call wondering setting directly continue work thanks cc jbrad", "num": "3778", "d": "8/2015"}, {"title": "events work", "body": "recently write city select component demo using backbonejs windowcitymodalview events click spanconfirm confirm failed windowcityview events click confirm works one tell wrong code fix thank much code jsfiddle", "num": "3777", "d": "8/2015"}, {"title": "events work", "body": "recently write city select component demo using backbonejs windowcitymodalview events click spanconfirm confirm failed windowcityview events click confirm works one tell wrong code fix thank much code city component using backbonejs body paddingtop cityblock width height borderradius lineheight display inlineblock textalign center backgroundcolor color fff margin lt p gt clearit color marginleft textdecoration none clearit hover color fff textdecoration none addcity width height borderradius lineheight display inlineblock textalign center border solid margin cursor pointer color hide display none modalblock cityblock backgroundcolor transparent color modalblock cityblock hover backgroundcolor operator textalign center operator span width height lineheight display inlineblock borderradius backgroundcolor darkred color fff fontsize textalign center cursor pointer margin operator span hover backgroundcolor red windowcitymodalview backboneviewextend tagname table initialize function var self bindall render confirm cancel thisrender template template lt div gt city modal lt div gt lt div class modalcontent gt lt div gt lt div class operator gt lt span class confirm gt yes lt span gt lt span class cancel gt lt span gt lt div gt events click spanconfirm confirm click spancancel cancel render function elhtml thistemplate return confirm function consolelog yes cancel function consolelog windowcityview backboneviewextend tagname div events click spanaddcity addcity click confirm click cancel initialize function var self bindall render appenditem addcity confirm cancel thiscitymodalview new citymodalview thisrender template template lt div gt city list lt div gt lt span class cityselected gt lt span gt lt span class addcity gt set city lt span gt lt div class operator gt lt span class gt yes lt span gt lt span class gt lt span gt lt div gt lt div class citymodalsec hide gt lt div gt render function var self elhtml thistemplate citymodalsec thisel append thiscitymodalviewrender el return appenditem function item var itemview new cityitemview model item cityselected thisel append itemviewrender el addcity function citymodalsec removeclass hide confirm function consolelog confirm cancel function consolelog cancel windowhomeview backboneviewextend el body initialize function consolelog initializing home view thiscityview new cityview thisrender template template lt div class citysec gt lt div gt render function thisel html thistemplate citysec thisel append thiscityviewrender el return var homeview new homeview", "num": "3776", "d": "8/2015"}, {"title": "multiple modals opening backbone", "body": "could someone help issue", "num": "3775", "d": "8/2015"}, {"title": "passing options url function backbonesync function model collection", "body": "seems like nobrainer order construct url add query params need know typemethod request options take request source javascript sync function method model options var type methodmap method nt instead javascript sync function method model options var type methodmap method missing something may want construct url add query params given certain options passed backbonesync right", "num": "3774", "d": "8/2015"}, {"title": "routernavigate stopped working", "body": "hi using backbonemarionette webpack project using webpackdevserver server problem though nt work nothing happened error either rolling back solved problem something strange sneaked router", "num": "3773", "d": "8/2015"}, {"title": "rethink backbone templates", "body": "found pretty awesome idea using incremental dom underscore templates tiny extremely powerfull faster underscore templates react fact using almost idea like react developed google ps good idea marionette think jashkenas megawac jridgewell", "num": "3772", "d": "8/2015"}, {"title": "backbonehistory part public api", "body": "could expect backbonehistory object exist moving added documentations", "num": "3769", "d": "8/2015"}, {"title": "add new rows existing page", "body": "please tell add rows rows click", "num": "3768", "d": "8/2015"}, {"title": "rethink backbonesync", "body": "know numerous plugins wild override specific domain logic things like storage proxies web socket connections etc way plugins add functionality tends messy conflict one another backbone suggest reimplement custom sync added backbone long suggested plugins export custom function implemented opposed globally overriding bbsync however merit would suggest something like following adding custom sync js function predicate model options return modeluseproxy function syncfn model options sync function normal whether sync method stop syncs checked could useful storage syncs wish add data indexeddb also executing http sync var exclusivesync false backboneaddsyncmethod predicate syncfn exclusivesync", "num": "3767", "d": "8/2015"}, {"title": "collectioncreate return xhr", "body": "option xhr returned instead events triggered events triggered nt let interfere request example aborting thoughts", "num": "3764", "d": "8/2015"}, {"title": "remove android logger driver", "body": "android logger driver driversstagingandroidloggerc used read write android logs devlog main system android lollipop logger driver loggerc removed logcat reads android logs reading writing android logs handled kernel", "num": "3763", "d": "8/2015"}, {"title": "error fired broken connections", "body": "error event firing app reach server eg net errconnectionreset error function fetch method touched", "num": "3762", "d": "8/2015"}, {"title": "events hash responding jquery triggerhandler method", "body": "hey working legacy code office plugin use seems use rather firing events nt ton xp maybe functionality makes sense really confused unexpected results following var testview backboneviewextend template template events customevent foo function consolelog customevent ran render function elhtml thistemplate var testview new testview testviewrender jqueryeventtrigger customevent null testview foo true example event handler bound render fires thought events bound identically appears event delegation works inside backboneview events hash intended behavior something known issue lived thanks", "num": "3761", "d": "8/2015"}, {"title": "collection set nt intelligently merge unparsed models", "body": "takes option set true call collection parse method input array well model parse method individual objects input array implies ok nonparsed data passed however nonparsed data passed line may fail correctly merge new data existing data collection particular nonparsed data wrapped way obscures idattribute failing test case illustrates issue test collection merge duplicate raw objects merge true function var model backbonemodelextend parse function data return datawrapper option indicates updated model collection object reference instead newly instantiated model potential fix might involve changing line although may elegant solution people agree bug open pull request", "num": "3760", "d": "8/2015"}, {"title": "parse model validating modelset pojo parse true", "body": "backbone model expects wrapped object api eg want work nice use parse like validate like mock model test fails modelset calls validate parsing object nt make whole lot sense say parse true parse validating workaround feel like would less confusing parse true actually work expected validate function", "num": "3757", "d": "8/2015"}, {"title": "nutch tika parsing issue", "body": "trying crawl specific data per requirement using nutch tried make changes parsetika plugin got impacted make small changes compiling connectivity different classes storage parse crawl etc please suggest", "num": "3756", "d": "8/2015"}, {"title": "nutch plugin writing", "body": "writing plugin writing plugin specific data crawling website amp store mongodb please guide give suggestions connect connectivity new plugin parse data mongodb", "num": "3755", "d": "8/2015"}, {"title": "model set docs nt explain options argument", "body": "looked set method backbonemodel today perplexed see parameter method signature mention options explanation seems regression vividly remember least option documented place", "num": "3750", "d": "8/2015"}, {"title": "documentation collection modelid wrong", "body": "modelid docs backbonejsorg say method return name id attribute backbone use long painful debugging session found method actually return id instead attribute name absolutely fixed", "num": "3749", "d": "8/2015"}, {"title": "backbone truck factor", "body": "part phd research code authorship calculated truck factor tf popular github repositories probably know truck bus factor designates minimal number developers hit truck quit project incapacitated work consider system trouble files become orphan ie without main author details work preprint calculated tf backbone obtained value developers responsible tf jeremy ashkenas author files brad dunbar author files validate results would like ask backbone developers following three brief questions agree listed developers main developers backbone b agree backbone trouble listed developers leave project eg win lottery less morbid c backbone characteristics would attenuate loss listed developers eg detailed documentation thanks advance collaboration guilherme avelino phd student applied software engineering group aserg ufmg brazil", "num": "3748", "d": "8/2015"}, {"title": "official opinion needed underscore vs lodash", "body": "someone give official opinion backbonejs stable migrationusage lodash know lodash lodashunderscore lodashcompat read lodash migration notes still want backbone community opion also wan na make sure lodash version work correctly version backbone starting trying digest fact personally closer use underscore first original library similar purposes think johndavid forked create new whell instead contributed withto underscore help jeremy improving underscore bad collaboration good history libs may mistaken sorry advance backbone tests special thanks rusalex triggering thinking way took versions backbone ran tests different lodash versions backbone lodash failed tests lodashcompat failed tests lodash prj frozen v failed testes lodashunderscore failed tests backbone lodash failed tests lodashcompat failed tests lodash prj failed tests lodashunderscore failed tests assume using latest versions libraries release moment appropriate risky obviously using different releasesversions risky", "num": "3746", "d": "8/2015"}, {"title": "model returns undefined iterating although exists collection", "body": "weird issue bothering atm bb reason see undefined model value one models iterating models collection please note always model assigned values using defaults method confirmed using tojson model property model exist collection defaults method adding models collection confirmation model values using tojson see default model exist collection however iterate collection remove models get undefined default mode code result consolelog inside", "num": "3744", "d": "8/2015"}, {"title": "old docs still", "body": "recently got tripped fact hosting outofdate downloads documentation looks like new official site backbonejsorg sure first stumbled upon old url probably duckduckgo search results situation exists underscore perhaps would wise set redirect old url new one", "num": "3741", "d": "8/2015"}, {"body": "may issue chromewebkit testing reveals behavior", "d": "8/2015"}, {"body": "ok fwiw issue appears caused combination chromewebkit catchall type route like backbonerouter something like running results expected behavior router removing flag also results correct behavior interesting turning chrome developer tools somehow fixes problem live mode", "d": "8/2015"}, {"body": "setting directly never really supported experience always readonly property keep needing every single time said could something like following least avoid case messing diff diff git abackbonejs bbackbonejs index abackbonejs bbackbonejs thisid thisget thisidattribute var id thisget thisidattribute id null thisid id", "d": "8/2015"}, {"body": "thanks quick response agree setting directly probably way go sometimes got work got setting directly supported fine issue closed well least got documented others run problem upgrading", "d": "8/2015"}, {"body": "sometimes got work got need mutate clientside nt typically something set sent server", "d": "8/2015"}, {"body": "need mutate id clientside nt typically something set sent server reasons specific code within app agree smell", "d": "8/2015"}, {"body": "please use stackoverflow debugging github issues maintaining framework", "d": "8/2015"}, {"body": "looks like answered future please use mailing list gitter channel questions", "d": "8/2015"}, {"body": "update url want work pr", "d": "8/2015"}, {"body": "yeah would like yep would update url given params", "d": "8/2015"}, {"body": "backwards compatible issues foresee", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "tell thinking words", "d": "8/2015"}, {"body": "create pull request url function needs passed params sync default", "d": "8/2015"}, {"body": "pretty sizable thread read first please search opening issues essentially make use prop jqueryajax need set querystring values futzing actual url string done instance props method", "d": "8/2015"}, {"body": "three changes happened routing layer wager causing problem give us bit information happening", "d": "8/2015"}, {"body": "hmm sure navigate inside backbonejs seems called never calling routernavigate later put consolelog inside backbonejs found two called", "d": "8/2015"}, {"body": "browser using", "d": "8/2015"}, {"body": "many virtual dom libraries wild virtualdom good one backbone continue agnostic choice templating library something specifically change way backbone views work make easier work virtual dom libs maybe consider tend take radically different view app state architecture backbone", "d": "8/2015"}, {"body": "actually intimately familiar idom one reasons enthusiastic really nothing needs done support backbone treat like normal method js var view backboneviewextend template function data idom code render function stuff", "d": "8/2015"}, {"body": "sorry read comment closing please feel free reopen want keep general tracker support virtual doms view unopinionated class backbone better worse know one practice codified prevents general vdom diffs container may keep container js virtualdom example code var tree setinterval function count reassigned every tick normal backbone view natural assume ca nt else event delegation breaks actually first child", "d": "8/2015"}, {"body": "jridgewell admittedly nt ton experience using vdom backbone views experience mithril react one thing stands potential pitfall example looks like work great single view normal html elements manage nested backbone views way backbone combined backbone classes work quite differently vdom libraries", "d": "8/2015"}, {"body": "manage nested backbone views way treat way subviews jquery detach render reattach left two something comments render method wink rerender much slower actually working getting firstclass subview support build idom wo nt apply vdom libraries need detachreattach render racehorse render backbone combined backbone classes work quite differently vdom libraries nondestructive react react much like backbone standardized yet backbone component concern react dev directly call", "d": "8/2015"}, {"body": "treat way subviews jquery detach render reattach triggers reflows nt performance worse using vdom library subview management hard problem jquerybackbone nt unsolvable solutions atodds treebased descriptor approach majority vdom libraries take backbone render component concern react dev directly call could set something similar backbone problem creating backbone view typically sideeffects nt idempotent way vdom components typically implemented event delegation good example could done feeling lot easier use vdomfirst approach", "d": "8/2015"}, {"body": "triggers reflows nt performance worse using vdom library jmeas actually testing ago found dom manipulations happen quickly oneaftertheother nt huge reflow penalty think browser group single reflow idea limit though virtual doms idom included actually trigger dozens reflows single render since elements modified attached dom tree detachreattach subviews nt hurt aside one reasons idom damn fast optimizing garbage collection dom manipulations manipulations certainly slower normal js react definitely right track actually manipulations causing bottleneck throwing away hundreds dom instances think elements attribute instances get created thrown away bottleneck react intelligently diffs largest source garbage fixed still suffers rendering entire virtual tree throwing away old one idom discovered away eliminate virtual tree last painful gc pretty atodds treebased descriptor approach vdom libraries take found something like mustache content attach subview entirely replace element time rerender replace original element rerender maintain element tree replace", "d": "8/2015"}, {"body": "jmeas actually testing ago found dom manipulations happen quickly oneaftertheother nt huge reflow penalty knowing ton browser performance optimization say nt seem like removing readding thousands times scales large app recommendation browser vendors seen avoid touching dom nt also sure repo shows best methodology test dom performance mutationobserver nt really meant used way maybe chromium telemetry firefox performance tools topcoat pretty awesome telemetry tool built chromium would suited virtual doms idom included actually trigger dozens reflows single render since elements modified attached dom tree seems odds said one stated benefits virtual dom batching flushing changes time simply updating properties wo nt trigger reflow adding removing elements updating classnames getting computed styles etc gotten little offtopic fault happy continue gitter", "d": "8/2015"}, {"body": "adding removing elements updating classnames getting computed styles etc meant hopefully adding removing bunch elements every render updating classes common gitter smile", "d": "8/2015"}, {"body": "documented", "d": "8/2015"}, {"body": "sorry specific referring undocumented methods specifically used one devs could assume methods stay part api", "d": "8/2015"}, {"body": "please use mailing list stackoverflow gitter channel questions github issues maintaining framework", "d": "8/2015"}, {"body": "talking middleware approach similar express right like different functions could chained would nt regular conditional custom work use case", "d": "8/2015"}, {"body": "would nt regular conditional custom sync work use case ding ding ding pretty big antifan middleware compared simple plugin calls needs call", "d": "8/2015"}, {"body": "result right model control process rewrite method control xhr want request progress use see collectioncreate backbonesync", "d": "8/2015"}, {"body": "fair point", "d": "8/2015"}, {"body": "part promises js collectioncreate attr value model gt model created successfully error gt error happened creating locally collectioncreate attr value wait true model gt model created successfully error gt error happened creating locally server", "d": "8/2015"}, {"body": "jridgewell near future", "d": "8/2015"}, {"body": "tried suggested little painful modifying sync pretty much want functionality changing return xhr need copy two private function dependencies preparemodel ismodel fun something consider changing better waiting promises jridgewell talking", "d": "8/2015"}, {"body": "something consider changing better waiting promises jridgewell talking wo nt changing", "d": "8/2015"}, {"body": "jquery version use jquery bug times browser like ff requests nt fire events xhr", "d": "8/2015"}, {"body": "unlikely backbone issue jquery one mind opening issue tracker", "d": "8/2015"}, {"body": "think paulfalgout put well marionette issue backbone binds events view delegation directly js example foo customevent backbone elon customevent foo", "d": "8/2015"}, {"body": "perhaps sure something intended handled days anyone", "d": "8/2015"}, {"body": "dupe closed one nt feel strongly one way", "d": "8/2015"}, {"body": "oh right ids need parsed collection level", "d": "8/2015"}, {"body": "nt think necessarily parse model twice fix bug make sure instantiate model earlier passed would nt mind working pr cleaner fix unless worth time know jridgewell working larger refactoring might also address", "d": "8/2015"}, {"body": "make sure instantiate model earlier parse true passed issue nt want instantiate needed know jridgewell working larger refactoring collection parse might also address think approach would completely removing fetching parse collection level map result models passing pass models yes mean instantiating redundant models moving parsing issues entirely", "d": "8/2015"}, {"body": "rethink parsing entirely way currently implemented quite halfassed result never used documentcloud originally imho put towards top list actually", "d": "8/2015"}, {"body": "summarize let know misunderstanding anything passed technically impossible sure passed raw objects already collection without parsing since may root raw object since side effects mutate ca nt call without model instance therefore must instantiate parse every returned model eg fetching data server attempting intelligently merge new models attributes collection think result jridgewell suggestion moving parsing concerns would correct solution problem could significant performance implications also probably would nt happen alternatively short term look pull request created fixes original bug consumers apis wrapped responses nt degrade performance anyone else consumers apis root response nt experience extra parsing passes unit test suite interested running performance test suite anyone one thanks", "d": "8/2015"}, {"body": "nt option think thinking sadly gone see op reasoning", "d": "8/2015"}, {"body": "please direct questions gitter chatroom google group freenode irc documentcloud channel", "d": "8/2015"}, {"body": "dupe", "d": "8/2015"}, {"body": "looks like fixed nt uploaded documentation yet fixed release", "d": "8/2015"}, {"body": "suppose one key dev", "d": "8/2015"}, {"body": "hello guilherme thank sharing results backbone community tf seems comparatively high considering projects considered scored higher would interested know files backbone actually included analysis would guessed file cleaning process would eliminated personally would interested results would included documentation also includes ghpages branch since quality documentation deal breaker deciding make use foss project hand understand might skew results since actually takes different set skills produce high level documentation project would incapacitated copywriters got left seems definition degree code authorship limited admit read fritz et al challenge idea foss project would become incapacitated developers able influence command implementation ceased however think results accurate jashkenas recently refered god along jdalton doubt revere original authors would enough bring end backbone decided relinquish reins even declared backbone mistake started anew appears jashkenas plays executive role recent times watching project weeks time chimed comment documentation looking back commit history majority recent commits merging prs developers notably jridgewell rank analysis think backbone case sign project matured reached stage original authors transition owners stewards foss projects far anarchy people imagine fact strong andor consistent leadership common arguably important fact mature foss project would argue truck factor poorly named lower score better would hope jashkenas braddunbar left project community would quickly reorganise behind another one two developers crux idea please expand methodology deal merges analysis example commit attributed suspect analysis attributes jashkenas opinion jridgewell attributed indeed git blame function attributes file changes jridgewell author commit changed file even though file different repository jashkenasbackone paper like good research paper raises questions answers commend job well done cheers corin", "d": "8/2015"}, {"body": "would hope jashkenas braddunbar left project community would quickly reorganise behind another one two developers crux idea think something else consider leaving project becoming less involved without clear exit cause delays decay project lead interests priorities shift things see involvement decline releases lag project contributors create releasechecklists much prep work lead hits release", "d": "8/2015"}, {"body": "quickly answer questions terms bus factor project future someone hit bus today historical development look authors recent commits see b backbone trouble get hit bus brad wins lottery c important characteristic renders bus factor moot backbone basically finished project comprehensive documentation also helps even important annotated source code cheers", "d": "8/2015"}, {"body": "im official programmer try replace undescrore lodash see backbone tests backbone well tested library tests exist", "d": "8/2015"}, {"body": "rusalex answer almost already googled many developers say like want official opinion nevertheless thank reply need follow reduce amount comments note already migrated lodashbackbone approach project works fine projecttoplevel architecture community yet sure correct way go eager get proper official answers right way reading underscore issue realized sooner later might underdash agree collaboration jashkenas jdalton sure gods busy low probability answer anyway would answer equal official", "d": "8/2015"}, {"body": "assume using latest versions libraries release moment appropriate risky obviously using different releasesversions risky yap lodash includes backbone underscore tests run commit current stable release future lodash may fail handful several tests use nonbackbone related underscore methods excuse wo nt surprises lodash side things lots projects go lodash first backbone think backbone official statement", "d": "8/2015"}, {"body": "nt test zepto lodash compatibility work fine need stronger guarantee stick jquery underscore", "d": "8/2015"}, {"body": "lodash runs passes backbone tests ci marionette runs unit tests multiple version underscore lodash gt takeaway backbone work fine lodash use lodashbackbone series browserify methods replace underscore lodash wild dependencies seem work kind sketchy number api differences libraries", "d": "8/2015"}, {"body": "jdalton thanks reply read part backbone docs enough developers projectcommunity confident sentence tend work varying degrees compatibility tells us level uncertainty agree developers started discussion megawac thanks pointing really happy marionette team dreams merge original backbone team double development forces far researched lodashforbackbone fact weird exactly want backbonelodash fact backbone contributed jashkenas brandonpapworth fact one dozen forks backbone interested unless jeremy tell us version replace backbone browserify way used one communityprojects think lie developers simple substitution one library name another thanks comments yes need stronger guarantee backbone tests results one proven fact tdd needed works show holy wars internet thanks closing issue looks like resolved time solution migrate lodash sure wait underdash really hope", "d": "8/2015"}, {"body": "oy backbonelodash blast past use cases nt run issues using lodash compared underscore another change made library giving ability view elements created using opposed honestly nt used backbone long time aside realized looking back old unmaintained code entertainingdepressing vote would definitely lodash works people nt cause tests create singularity sucks existence", "d": "8/2015"}, {"body": "dupe fix mutating array iterating", "d": "8/2015"}, {"body": "someone tag issue phone", "d": "8/2015"}, {"body": "looks like issue github pages changed repo two years ago looks like old site nt redirected way github repo page", "d": "8/2015"}, {"body": "open ticket github support", "d": "8/2015"}, {"body": "bug project moving first implemented support helpfully unpublished pages us", "d": "8/2015"}, {"body": "make pr done", "d": "8/2015"}, {"body": "pick issues shipping go ahead draft log", "d": "8/2015"}, {"body": "pick issues shipping go ahead draft log let go merged", "d": "8/2015"}, {"body": "paulfalgout agree jdalton let ship merge rest next version", "d": "8/2015"}, {"body": "good deal get shortly long weekend", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "bumped published", "d": "8/2015"}, {"body": "documentation says trigger objecttrigger event args trigger callbacks given event spacedelimited list events subsequent arguments trigger passed along event callbacks nt specifically says use modeltrigger change model caused line number needs amp amp model condition", "d": "8/2015"}, {"body": "hey got fixed like even though got closed jridgewell disappointed", "d": "8/2015"}, {"body": "jridgewell sorry nuisance motivation making changes", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "jridgewell reason binding collection like way using hooks immutably update object handler generic ie nt use parameters passed instead references collection directly seems slightly misleading inside handler happens", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "particular doc generator using handwritten documentation guide looks generated nt see build script fork", "d": "8/2015"}, {"body": "handwritten addressed", "d": "8/2015"}, {"body": "benmccormick decorator call constructor prototype instorstaticvar method used place realise would breaking change seems cleaner way imho like pointed properties defined way prototypeshared strings objects ie shared across instances therefore accessed via class right", "d": "8/2015"}, {"body": "lennerd pointed calling followed good option fires two events use call get change events attributes unset intuitive think could really benefit equivalent method find trying use time always disappointed", "d": "8/2015"}, {"body": "went ahead created little extension add working method backbonemodel backbonemodelreset", "d": "8/2015"}, {"body": "currently situation build click dummy first plain html build wordpress theme clickdummy asset pipelines wordpress ships versions backbone underscore reason ca nt add backbone underscore jquery asset pipelines still would nice maintain separate pipelines libraries instead files shipped along unminified files chance behavior changes", "d": "8/2015"}, {"body": "came across issue well confirm occurred case using backbone version used fiddle opening issue updating backbone issue occur anymore everything worked expected see modified fiddle", "d": "8/2015"}, {"body": "seem issue tried solution mdeering luck stackoverflow question seem missing something let know guys think", "d": "8/2015"}, {"body": "instead trying replace original view element define tagname function make return tag root element template example template something like html render function insert template contents working example", "d": "8/2015"}, {"title": "proxied promise fail handler promiseproxymixin nt execute exception thrown fail handler nt caught application", "body": "relates issue proxied fail handler nt called exception rethrown promiseproxymixin nt caught application causing error handling acceptance tests fail promisearray experiencing issue linked related issue rethrown exceptions promiseproxymixin catchable application level thrown error reads uncaught return type jsfiddle example", "num": "12254", "d": "8/2015"}, {"title": "uncaught typeerror read property enter undefined using transitiontoroute", "body": "getting uncaught typeerror read property enter undefined using transitiontoroute controller transitiontoroute function controller transitiontoroute function target may either another controller router var target get target var method targettransitiontoroute targettransitionto return methodapply target arguments target variable assigned view instead controller router nt know issue using transitiontoroute wrong way need help edit function found edit function calls get function controller object looking target key log thistarget transitiontoroute prints route class log variable get function get view class clue happening", "num": "12251", "d": "8/2015"}, {"title": "remove unwatchkeys", "body": "hello closed possible remove function", "num": "12249", "d": "8/2015"}, {"title": "setupcontroller called route refresh", "body": "hello sure related based documentation thought setupcontroller get called route refresh calls given following example nt appear case import ember ember export default emberrouteextend model function params gets called initial load refresh return thisstorefind mymodel paramsmymodelid setupcontroller function controller model gets called initial load refresh thissuper controller model actions refreshroute function thisrefresh insight thanks", "num": "12244", "d": "8/2015"}, {"title": "bad error closure actions wrapping missing functions", "body": "using closure actions wrap function current context function provide undefined receive nonhelpful error message time invoke closure wrapped action ie example snippet invoking via throws following error demo", "num": "12240", "d": "8/2015"}, {"title": "aliasmethod marked private", "body": "emberaliasmethod marked private without notice remove fact private", "num": "12238", "d": "8/2015"}, {"title": "alias property returns initial value source property even source property updated", "body": "good bug report unsuccessfully spent many hours prepare jsbin decided open issue private app computed alias always returns undefined regardless value source property initial source property value instead current value jsbin unsuccessfully tried create demonstrate problem app always null jsbin works could timing issue already workaround mentioned jsbin would really like avoid committing bisected problem pr ideas", "num": "12234", "d": "8/2015"}, {"title": "reregistration initializers", "body": "looking using acceptance tests stumbled onto error seems root cause use routing service eg gets cached application registry restart picked initializer running throws error worked around particular instance similar issue crop registration transforms ember data wondering rerunning initializers part resetting application feel like semantically instance initializer reran thoughts seems like could get faster test times without completely recreate application time blocks us able use new instances right super simple repro case jsbin", "num": "12231", "d": "8/2015"}, {"title": "problem view deprecation", "body": "possible add class binding div element route inserts eg without using routed view understand guide suggests binding attribute inside template nt work div automatically inserted ember using", "num": "12225", "d": "8/2015"}, {"title": "may want multiple symbol implementations", "body": "likely purposes fast access fast creation slightly slower access use native possible quick r amp function intern str var obj obj str var key obj key str return key return str function symbol debug return intern debug id guidkey mathfloor mathrandom new date var id var guidkey intern ember new date new date gettime function debug return debug id id guidkey function debug return intern debug id id guidkey function debug return intern debug id id guidkey function debug return debug id id guidkey function debug return debug id id guidkey var zeroa symbol bye var zerob symbol bye var onea symbol bye var oneb symbol bye var twoa bye var twob bye var threea bye var threeb bye var foura bye var fourb bye var fivea bye var fiveb bye require bench name symbol fn function return symbol bye name symbol fn function return symbol bye name fn function return bye name fn function return bye name fn function return bye name fn function return bye name compare symbol fn function return symbol bye symbol bye name compare symbol fn function return symbol bye symbol bye name compare fn function return bye bye name compare fn function return bye bye name compare fn function return bye bye name compare fn function return bye bye name compare existing symbol fn function return zeroa zerob name compare existing symbol fn function return onea oneb name compare existing fn function return twoa twob name compare existing fn function return threea threeb name compare existing fn function return foura fourb name compare existing fn function return fivea fiveb results note internal usages easily possible create faster symbol replacements cross platform faster etc ultimately would prefer symbols uniform experience also important still need add lookup hit lookup miss benchmarks", "num": "12223", "d": "8/2015"}, {"title": "canary actions nt bubble route using rendertemplate", "body": "following setup render content modal outlet javascript rendertemplate controller model thisrender actions actionname something template found errors requested action nt found inside controller either autogenerated created manually", "num": "12217", "d": "8/2015"}, {"title": "rerendering based layoutname broken", "body": "component renders number different layouts based certain conditions flows ember accomplishing updating calling updated app old template still rendered even though layoutname updated created jsbins illustrating approximate issue seeing difference examples attributes seem updating properly whereas app seeing update correctly changed either case examples app fail render properly hoping solution working example broken example", "num": "12216", "d": "8/2015"}, {"title": "embercomputedsort serious flaw", "body": "spending entire morning finally figure kind hard explain let start demo notice component uses two instances component dom clicking button move item causes one component instances update understand look implementation first important computed macro creates new computed property declaration component instance see reducecomputedmacrosjs means every component instance type ultimately share computed property next every time value computed clears prior observers rebuilds see reducecomputedmacrosjs inlies problem since computed property lives class clears observers instances component make sense anyone", "num": "12212", "d": "8/2015"}, {"title": "embercomputedmap issues", "body": "see jsbin clicking change color causes version add duplicate values observe value change actually changes four times", "num": "12210", "d": "8/2015"}, {"title": "embercomputedsort fails null list worked", "body": "target null causes crash branch worked ember branch ember ember", "num": "12207", "d": "8/2015"}, {"title": "switch assert deprecate etc internal api modules", "body": "x packages x container x ember x emberapplication x emberdebug x emberextensionsupport x emberhtmlbars x embermetal x embermetalviews x emberrouting x emberroutinghtmlbars x emberroutingviews x emberruntime x embertemplatecompiler x embertesting x emberviews x switch defeatureify babelpluginfilterimports x remove emberjsbuild x audit production build output confirm debug statements properly stripped", "num": "12204", "d": "8/2015"}, {"title": "override ember provided helpers", "body": "versions prior defined new helpers registered ember provided helpers like similar approach nt seem working exporting implementation seen bug possible register new helpers ember reserved ones longer allowed", "num": "12201", "d": "8/2015"}, {"title": "discussion reopen classes instance initializers easily lead memory leaks", "body": "joshvfleming recently ran across several cases developers reopening classes within instance initializers retaining application instance per initialization retaining look obvious cases cases obvious reveals self tests fastboot environments lead something looked like following know past talks allowing classes reopened initialized actually working rewriting coreobject throw class reopened post initialization know series path adopting classes wondering prevent footgun existing core object feature flag", "num": "12200", "d": "8/2015"}, {"title": "possible windows ember cli conflict evident loading css assets", "body": "making notable changes css stylesheets longer loading receive following error reverted code back previously working version throwing error run cli problem persisits also longer create new project totally different directory bowerjson emberclibuildjs var emberapp require emberclilibbroccoliemberapp moduleexports function defaults var app new emberapp defaults lessoptions paths bowercomponentssemanticui return apptotree sure related run ccleaner registry morning error appeared", "num": "12199", "d": "8/2015"}, {"title": "ca nt opt properties shadowed attributes", "body": "undertstand intention move parameters separate namespace internal component state currently separation triggered invoking component angle brackets however separation attrs properties much component design whether shadowing happens nt depend component user invokes component currently trying take advantage split attrs properties proving hard way like property even mixin signal want attrs separate properties code looks like didreceiveattrs thissuper var columns thisgetattr columns check columns translating necessary internal format thisset columns columns unfortunately didreceiveattrs run property columns set original unprocessed value tried inside several attempted hacks ca nt seem shake shadowing", "num": "12196", "d": "8/2015"}, {"title": "uncaught typeerror read property sendevent undefined", "body": "getting following error upgrade also verified happens later versions ember well nt tracked causing issue yet nt able create jsbin shows behavior come across piece code backburner let see bit state app happening help would greatly appreciated thanks", "num": "12195", "d": "8/2015"}, {"title": "emberrunlater halting certain circumstances", "body": "twiddle demoing also tested gist found demonstration timer value updated via continuously running calls halt update value full duration expired replaced simple halting experience problem assist way please let know heart", "num": "12193", "d": "8/2015"}, {"title": "spurious misleading using deprecated template property view warning printed", "body": "see sample bin enablelegacyviewsupport true set two views toggled button views except withlayoutview layout property set every time withlayoutview displayed using deprecated template property view deprecation warning printed console notably views render templates set via xhandlebars script tags instead via template properties layout property makes difference warning printed actually sure desired behaviour seems one way another nt driven presence layout", "num": "12191", "d": "8/2015"}, {"title": "missing controller keyword deprecation", "body": "template using keyword functions correctly without deprecation warning causes assertion compile time canary", "num": "12189", "d": "8/2015"}, {"title": "esperanto deprecated", "body": "starting new ember project get following warning", "num": "12185", "d": "8/2015"}, {"title": "tagname application template", "body": "application template adds div page ends looking like want set tagname application template nothing nt want content wrapped div messes css previously done creating viewsapplicationjs setting tagname views deprecated without views", "num": "12183", "d": "8/2015"}, {"title": "query params reset default values initial render transitionto called beforemodel", "body": "hopefully title js bin say tl dr call beforemodel initial load hitting refresh button query params reset default state", "num": "12169", "d": "8/2015"}, {"title": "render docs lost rewrite", "body": "see original docs docs added", "num": "12168", "d": "8/2015"}, {"title": "error event substate", "body": "way handle errors include action route errors generic unauthorized forbidden etc handled application route used work perfectly exactly sure broke probably documentation following example actions error function error transition error amp amp errorstatus error substate parent routes handle error return thistransitionto modelnotfound statuserrorerrorerrorserrorerrors thistransitionto login occasion error still logged return true error gets logged twice first two could submit pull request update documentation third one seems possibly issue also change number string intended", "num": "12166", "d": "8/2015"}, {"title": "multilevel aliases nt work", "body": "working embertwiddle", "num": "12165", "d": "8/2015"}, {"title": "wrong convention event names", "body": "documentation ember written necessery use dashed name convention events see actually still uses old convention listed see example bug mistake docs ember", "num": "12162", "d": "8/2015"}, {"title": "property nt access synced dependencies", "body": "code ember js assignedbundles embercomputedreadonly controllerspatientassignedbundles allassessments embercomputedreadonly controllersapplicationallassessments otherassessments function var bundleassessments thisget assignedbundles mapby assessment return thisget allassessments reject function assessment return bundleassessmentscontains assessmentget id property allassessments assignedbundles get error check afterwards ember inspector correctly array something seems computed anyone else seen", "num": "12161", "d": "8/2015"}, {"title": "replaces sortablemixin ember", "body": "embersortablemixin use etc", "num": "12160", "d": "8/2015"}, {"title": "variable helper shares name helper always wins", "body": "calling helpers unambiguous template hash positional parameter call helper otherwise lookup variable see tracking issue cross posted cc stefanpenner", "num": "12155", "d": "8/2015"}, {"title": "pod routable component ignored next routejs directory", "body": "using pods routable components thanks pr application would love definition routable component sit next component like controllers example structure routable component follows map route render component using however component object never actually created conditional entered defined route template path template rendered without using would thought defined options passed render method component exists satisfies requirements glimmer component prefer component fallback template suggest removed conditional statement least ignored defined options component matches routable component requirements", "num": "12154", "d": "8/2015"}, {"title": "read property foreach undefined", "body": "upgrading ember version console show error first thought problem vendor js could deprecated code something one library vendorsjs nt work created new clean ember app also changed version ember console still showing error even clean bootstrapped application guess problem lays emberdata console shows", "num": "12153", "d": "8/2015"}, {"title": "stack overflow controller action sends action w name", "body": "action handler call controller handler order invoke route handler instead invoking action route controller action reinvoked stack overflows twiddle illustration courtesy locks trying use pattern pass componenttriggered action route without use two different action names seems confusing", "num": "12152", "d": "8/2015"}, {"title": "glimmer errors lifecycle hooks leave app unrecoverable state", "body": "glimmer runtime error occurred ember able continue properly executing clean going routes appears original exception constantly thrown code executed", "num": "12150", "d": "8/2015"}, {"title": "routeintermediatetransitionto public", "body": "routeintermediatetransitionto function currently marked private unfortunately way manually transition error state attempt straight url changed pretty gross error template error event handler pretty much forced pattern see", "num": "12149", "d": "8/2015"}, {"title": "template value updated value alias aliased property", "body": "reproduces error occur version bound template updated template value changes however controller properties updated correctly specific case seems problem affects rendering engine however experienced similar error aliased properties depends cps still investigating", "num": "12148", "d": "8/2015"}, {"title": "really slow hanging behaviour transitioning away route", "body": "nt really able create smaller app reproduce yet started working gui rewrite prototype internal open sourced point application work currently running random data using emberclimirage repo transition away anywhere else really browser hangs bit get reaaally big flamegraphs jquery events backburner stuff overall screenshot bit zoomed reproduce behavior firefox chrome maybe something terribly evil wrong", "num": "12147", "d": "8/2015"}, {"title": "classnames components output class twice dom", "body": "set classnames component output twice dom jsbin example expected dom generated dom", "num": "12146", "d": "8/2015"}, {"title": "documentation route transition object", "body": "mentioned several times doucumentation since defined tildeiorouterjs nt documentation ember brief documentation route beforemodel however everything particular looking error mentioned nt even know available cc locks", "num": "12142", "d": "8/2015"}, {"title": "bug emberselect longer defaults first option value undefined", "body": "jsbin illustrates issue change ember version longer see red show", "num": "12141", "d": "8/2015"}, {"title": "documentation languages", "body": "brazilian wonder initiative translate documentation something useful could translate portuguese translator english would good increase size community brazil could help", "num": "12140", "d": "8/2015"}, {"title": "refreshmodel config property nt work properly safari", "body": "seems issue using queryparams setting refreshmodel property true safari investigation appears refreshes page quickly new query params lost seemed fixed issue adding timeout millisecond sure better solution issue temporary fix queryparamsdidchange function changed totalpresent removed var qpmap propertygetget qp map", "num": "12139", "d": "8/2015"}, {"title": "bound style attribute warnings", "body": "sure bug upgrading app noticed lot following warnings warning binding style attributes may introduce crosssite scripting vulnerabilities please ensure values bound properly escaped release blog post ember seemed suggest used could avoid warnings see ember released escaping content built quick jsbin isolate attribute binding question seems like anytime style binding utilizes string interpolation template eg receive warning workaround interpolation computed property bind style looking guidance bug", "num": "12137", "d": "8/2015"}, {"title": "logic determine local lookup incorrect", "body": "property present component component invoked without block present completely ignore layout demos also taking looked container via consideration thanks reporting", "num": "12134", "d": "8/2015"}, {"title": "glimmer component quotedunquoted attributes", "body": "appears glimmer components issue quoted vs unquoted attributes toplevel elements", "num": "12133", "d": "8/2015"}, {"title": "canary throws stack overflow minified", "body": "introduced demo using believe krisselden fix submitting pr soonish", "num": "12131", "d": "8/2015"}, {"title": "glimmer components checklist", "body": "post merge pending items fix toplevel case make sure people nt accidentally use oldstyle apis toplevel elements glimmercomponent refactor separate conceptually different code paths happen share code buildcomponenttemplate component node manager make recursive invocation work component toplevel element inside layout discuss path properties vs attributes plausibly aligned normal elements components make sure set glimmercomponent fix skipped tests make glimmercomponent export module add flag allow component author use newsemantics provide deprecation component invoked curlies providing bridge", "num": "12129", "d": "8/2015"}, {"title": "computed properties getting property changes components didreceiveattrs defined", "body": "title says remove didreceiveattrs computed properties able detect changes fire another workaround really need didreceiveattrs defined explicitly set property component rather passed templates guessing somehow related entirely sure yet expected behavior using ember embertwiddle", "num": "12127", "d": "8/2015"}, {"title": "display api ember lt", "body": "since released ca nt change api version api links previous advance", "num": "12126", "d": "8/2015"}, {"title": "updated value set substring typed value", "body": "js bin type input see happens cut characters possibly glimmer sees value chars nt think needs update input", "num": "12125", "d": "8/2015"}, {"title": "documentation code example match description", "body": "description example states action called upon blur example uses", "num": "12122", "d": "8/2015"}, {"title": "difference way binding behaviour", "body": "upgrading app noticed following difference way binding behaviour ember application template following gist prints shanya followed deepan however gist prints shanya followed shanya difference expected versions", "num": "12119", "d": "8/2015"}, {"title": "startup container service integration tests", "body": "need integration testing service depends another service requires app initializers run starting essentially want start app visit views problem unless visit route instance initializers nt run could throw visit start integration test ideal force instance initializers run run setup code service test triggers changes view things get messy start app fully without visiting view perhaps better way perform service integration test", "num": "12114", "d": "8/2015"}, {"title": "nearestoftype marked private", "body": "marked quick search could find anything internal ember accessing beyond tests explicitly testing seems go desire components encapsulated however run across addons use seems like either marked public become deprecated future method", "num": "12110", "d": "8/2015"}, {"title": "ember error string key calling use keys", "body": "receiving error seemingly random interactions googling could come error related using helper without key checked every single use code key set debug stacktrace lead code either idea keep digging using release ember ember data", "num": "12109", "d": "8/2015"}, {"title": "emberviewviews nt include components", "body": "contains component instances know nt really public recommended use one valuable debugging tools style views able grab instance view poke state via console helped solve hundreds bugs sure glimmer complicates beyond really nice mechanism easily access component instances debugging", "num": "12108", "d": "8/2015"}, {"title": "sticky query params broken loading substate", "body": "related route dynamic segment query parameter child route slowloading model loading template query parameter longer sticky fixed js error occurring nt fix underlying problem far trace back transition inside setup route null nt fiddle ember canary loading substate correct sticky query params fiddle loading substate added query params longer sticky", "num": "12107", "d": "8/2015"}, {"title": "feature request promise willdestroyelement", "body": "currently way animating component away component closed seems something like indeed clone element put correct place animate would really nice could promise could stop element destroyed resolve passed react something similar possible way internals works atm", "num": "12105", "d": "8/2015"}, {"title": "possible regression query params alias behavior changed", "body": "following code js controllerjs queryparams displaymode mode routejs queryparams mode replace true however started giving error allowed one controller property map query param key map fix mapping one controller properties different query param key via config option eg changing route following solved issue", "num": "12102", "d": "8/2015"}, {"title": "missnaming filenames", "body": "situation reproducing mdnworldclock view select depreciated solution use ember serve gives livereload server serving deprecation helper deprecated favor htmlbarsstyle bound attributes isbindattrmodifier userslodocumentsember wc userslodocumentsember wc head search file deprecerrors using cli", "num": "12101", "d": "8/2015"}, {"title": "concatenatedproperties works obliged", "body": "issue seen toggle emberjs version string see starts fail set component bar equals equals entirely certain correct behavior missing documentation somewhere exposed began digging", "num": "12099", "d": "8/2015"}, {"title": "using fails development builds", "body": "jsbin calling methods trigger deprecation warnings currently", "num": "12097", "d": "8/2015"}, {"title": "regression embercomputedsum null", "body": "working believe correct js coerces likely applies computed array macros", "num": "12096", "d": "8/2015"}, {"title": "emberobjectset longer allows chaining", "body": "objetset changed return value passed set rather object acted upon broke chaining following code works fine ember emberdata throws exception ember data exception going change would expected deprecation", "num": "12095", "d": "8/2015"}, {"title": "isarray returns true objects property length", "body": "includes models contain property called simple fix involves changing", "num": "12094", "d": "8/2015"}, {"title": "", "body": "upgraded ember ember seems regression slipped hacking away internals without knowing failing test tiny example project shows break actual stack shows addon use issue exact line strange ember parent component name dynamiceachattrs addition child component also using mixin suddenly attr data causing line execute non array model context ember dynamiceachattrs array empty save funny part save first child context clicked button parent list component showing validateeach used next child component showing use validate validateeach detail hbs actionbutton setup save js code go totally clear parent hbs save action w diff name help provedisprove true regression would much much appreciated broke literally every app work", "num": "12091", "d": "8/2015"}, {"title": "refactoring emberhtmlbarsmakeboundhelper bound change", "body": "trying fix deprecation warnings ember application currently hung refactoring helpers appears new helpers bound change example following works deprecated following formats first render nt change value changes missing si way specify helper bound", "num": "12085", "d": "8/2015"}, {"title": "ember upgrade leads blank page", "body": "revisiting series early versions seemed difficult upgrade gone process embercli tested package upgrade one time make sure app still worked everything upgraded latest version except ember emberdata still respectively flip switch ember running leaves blank screen console errors expected deprecations since using outdated patterns still need update expect since ember following semver deprecated features would removed sure page failing sudden repository pretty small app wanted get upgrade working something simple tackling larger apps proving difficult expected anyone idea going", "num": "12084", "d": "8/2015"}, {"title": "arrayproxy mutation longer notifying dependent keys", "body": "ember final broken ember works", "num": "12083", "d": "8/2015"}, {"title": "containerhas behavior changed without deprecations warning", "body": "used return false preember throws error deprecation warnings previously logged", "num": "12082", "d": "8/2015"}, {"title": "broken query params ember", "body": "following implementation route controller template linkto installationstep queryparams previous linkto linkto installationstep queryparams next linkto clicking links nt change query param also changing query param adress bar anything something wrong according ember standards regression", "num": "12081", "d": "8/2015"}, {"title": "parentview undefined willdestroyelement", "body": "happens least since changing older assert never fails jsbin would make sense parentview still present since event called element gets destroyed work intended", "num": "12080", "d": "8/2015"}, {"title": "docs opening subpage breaks version chooser", "body": "using guides emberjscom one switch back versions guides probably failes match correct item steps reproduce open try switch another version trys open", "num": "12079", "d": "8/2015"}, {"title": "thislookup function release", "body": "firing ember twiddle release branch moment nt load error might twiddle related maybe file", "num": "12077", "d": "8/2015"}, {"title": "remove legacy hooks", "body": "specifically ones labeled remove legacy hooks", "num": "12076", "d": "8/2015"}, {"title": "cant set attributes component test anglebracket components", "body": "using ember addon generated ember component import ember ember import layout template export default embercomponentextend layout layout didreceiveattrs consolelog didreceiveattrs foo thisgetattr foo willrender consolelog willrender foo thisgetattr foo instantiate test using anglebracket notation feature flags turned ca nt set attributes using following test didreceiveattrs willrender never called import moduleforcomponent test emberqunit import hbs htmlbarsinlineprecompile moduleforcomponent xfoo integration component x foo integration true test renders function assert assertexpect set properties thisset myproperty value handle actions thison myaction function val thisset foo bar thisrender hbs thisset foo baz called run following render instead case output console", "num": "12072", "d": "8/2015"}, {"title": "twoway binding aliased properties nt work components", "body": "see application hierarchy date time picker components subclasses alias properties superclass clarity binding think datepicker datefoo vs timepicker timefoo components broken us possibly earlier versions ember due behaviour shown js bin updates context side bound values communicated components updates component side bound values communicated back context", "num": "12069", "d": "8/2015"}, {"title": "bug release ddau controllers routes consistent", "body": "obvious ddau controllers routes general expected behavior component sends action mutate data case existing model changes propagate downwards however depends handle mutation instance jsbin shows action handled controller ui rerenders new items however hook called even odder thing happens action handled route wholesale replace existing model new copy essentially glimmer engine care old model new model efficiently update dom based new attrs example hooks fire new items appended list suspect bugs current experience wildly different based upon action handled cc petethepete wycats chancancode", "num": "12068", "d": "8/2015"}, {"title": "observers view broken since", "body": "since ember controller property views gets changed called ember change called problem facing observer view listens property controller gets fired controller property gets changed observer gets called controller property changes instead property controller jsbin showing problem note problem occurs without emberlegacyviews addon", "num": "12064", "d": "8/2015"}, {"title": "ember click events components triggered", "body": "export default emcomponentextend tagname classnames btn btnprimary classnamebindings disabled click function thissendaction click triggered clicking component works", "num": "12063", "d": "8/2015"}, {"title": "acceptance tests failing ember must global obj given", "body": "upgrading ember ember acceptance tests began fail following error downgrading back ember removes issue like better isolate provide better bug report unsure even begin someone point right direction may able put together js bin example", "num": "12055", "d": "8/2015"}, {"title": "emberjs truck factor", "body": "part phd research code authorship calculated truck factor tf popular github repositories probably know truck bus factor designates minimal number developers hit truck quit project incapacitated work consider system trouble files become orphan ie without main author details work preprint calculated tf emberjs obtained value developers responsible tf robert jackson author files peter wagenet author files charles jolley author files tomhuda author files stefan penner author files martin munoz author files validate results would like ask emberjs developers following three brief questions agree listed developers main developers emberjs b agree emberjs trouble listed developers leave project eg win lottery less morbid c emberjs characteristics would attenuate loss listed developers eg detailed documentation thanks advance collaboration guilherme avelino phd student applied software engineering group aserg ufmg brazil", "num": "12054", "d": "8/2015"}, {"title": "didinsertelement route refreshing", "body": "prior ember didinsertelement called route refreshed ember route refreshing triggers didrender intentional", "num": "12053", "d": "8/2015"}, {"title": "uncaught typeerror read property hasroute undefined", "body": "auth service trying write unit test nt previous transition stored auth service redirects specific route app works expected however tests service give following error nt know debug solve going auth service import ember ember import config configenvironment export default emberserviceextend routing emberinjectservice routing logincapable true localstoragekey configlocalstoragekeysuser router import ember ember import config configenvironment var router emberrouterextend location configlocationtype routermap function thisroute authenticated path function thisroute index resetnamespace true thisroute login export default router test service import modulefor test emberqunit import ember ember import startapp recruiteradmintestshelpersstartapp import pretender pretender var server application var user adid uniqueid firstname first name lastname last name employeetype regular employeeid manager cnmanagerid ouemployees oucompany users dccompany dccom success true function jsonresponse json status return status contenttype applicationjson jsonstringify json modulefor service auth unit service auth unit true needs router main beforeeach application startapp replace real tests test exists function assert var service thissubject assertok service test isloggedin testing function assert var service thissubject assertok serviceget isloggedin false logged test login function assert assertexpect using ember", "num": "12052", "d": "8/2015"}, {"title": "binding variable template controller seems broken", "body": "updating seems break binding variables template controller example templatehbs declaring property email controller nt update email property controller typing worked fine versions", "num": "12047", "d": "8/2015"}, {"title": "input value binding working", "body": "following works update identification property controller code nt work something wrong", "num": "12044", "d": "8/2015"}, {"title": "willdestroyelement always called", "body": "seeing problem app matching willdestroyelement call missing", "num": "12042", "d": "8/2015"}, {"title": "initial build due babel jshint htmlbars slow", "body": "focus large rebuild time caches lost rebuilds mitigate created work works quite well still needs windows support fixed one large ember apps took babel time initial build persist caches likely make babel nonoptional yes optout support coffeescript fans", "num": "12041", "d": "8/2015"}, {"title": "vendorcssapp trees invalidate", "body": "causes trees invalidate even stale post details shortly", "num": "12040", "d": "8/2015"}, {"title": "classnames linkto cause full app refresh", "body": "linkto classnames passed linkto libraryupdate classnames btn btnprimary btnxs cause full app refresh removing classnames linkto trigger bug appears bug seen", "num": "12039", "d": "8/2015"}, {"title": "add documentation linkto currentwhen attribute public documentation", "body": "get currentwhen linkto documented linkto component examples", "num": "12038", "d": "8/2015"}, {"title": "didinitattrs see bound values unless explicitly defined component class", "body": "noticed property nt explicitly defined component class value never seen didinitattrs method even though bound template defining property value null work nt required sure bug previous behavior incorrect fixed embertwiddle", "num": "12035", "d": "8/2015"}, {"title": "linkto queryparams always points route created", "body": "made small embercli app reproduce bug steps reproduce expected behaviour go paginate good click link open child route exit pagination works good reproduce buggy behaviour go reload browser close form note href pagination links try paginate instead going app transitions apparently rendered sub route active link point route even transition back parent one expected behaviour may may time fix week try anyone knows exact point failing go ahead beat", "num": "12033", "d": "8/2015"}, {"title": "pathological view teardown performance", "body": "started investigating last night nt chance finish posting issue case anybody else sees wants dig chadhietala created repo reproduces issue toggle routes see massive delay problem somewhere legacy childviews support controller controller actions firing million times render", "num": "12016", "d": "8/2015"}, {"title": "glimmer confused changes made dom via jquery", "body": "using jquerysortable modifies dom lists drag drop dragging lists glimmer seems become confused fails render items list item dragged didrender hook list items binding nt match list items dom detect happens didrender hook call thisrerender nt appear clean problem way tell glimmer dom modified tell fresh render", "num": "12015", "d": "8/2015"}, {"title": "documentation positional params", "body": "twiddle example working another one questions expected usage possible bug hard address issues without documented behavior positionalparams used embercomponent source packagesemberhtmlbarstestsintegrationcomponentinvocationtestjs packagesemberhtmlbarslibnodemanagerscomponentnodemanagerjs also see related issue", "num": "12012", "d": "8/2015"}, {"title": "classnames incorrectly split letter letter input helper", "body": "using beta specify generated dom contains problem twofold first split one css class letter probably treated array string secondly classes get missing way causes eg value bindings malfunction change use instead works ca nt find mention whatsoever property smile broken elsewhere supposed use", "num": "12008", "d": "8/2015"}, {"title": "ie edge tests pass saucelabs build label added", "body": "would possible use emberjs ie edge browser tests pass saucelabs test label added show current status", "num": "12007", "d": "8/2015"}, {"title": "creation bindings bindingnamed properties broken release branch", "body": "textbinding works appropriately sets text property component content text working release broken", "num": "12006", "d": "8/2015"}, {"title": "array methods marked private", "body": "marks lots array methods eg foreach sortby private surely ca nt correct rwjblue intentional", "num": "12004", "d": "8/2015"}, {"title": "emberarray methods return array rather emberarray", "body": "emberarray methods return array like return bare js array rather emberarray makes chaining emberarray methods impossible prototype extensions disabled example javascript prototype extensions embera somearray filterby property mapby otherproperty gt prototype extensions embera somearray filterby property mapby otherproperty gt undefined function embera embera somearray filterby property mapby otherproperty gt ca nt find discussion documentation opening issue seems like would make sense emberarray methods return array return emberarray chaining emberarray methods becomes possible", "num": "12003", "d": "8/2015"}, {"title": "viewcontroller streams still created even without viewlegacy addons present", "body": "results quite large number extra work alloc", "num": "12002", "d": "8/2015"}, {"title": "incorrect order inserting dom nested routesviews", "body": "hello nested routes ember loads routes correct order parent child insert dom fires didinsertelement reverse order child parent could nt use example modal dialogs parent dialog would top instead child", "num": "11998", "d": "8/2015"}, {"title": "controller needs deprecations", "body": "question needs going removed release later viewscontrollers removed reason asking lot needs app replacing real pain stay views controllers removed stick deprecations", "num": "11997", "d": "8/2015"}, {"title": "deprecation needs controller issue", "body": "upgrading removing controller includes replacing reason still get needs required message error confusing since removed needs missing applicationneeds", "num": "11996", "d": "8/2015"}, {"title": "bug rendertemplate cause new controller instance instantiated", "body": "issue pass instance controller causes generate new instance controller note issue case register controller singleton proposal pass inside demo undefined view original post suspect perhaps turned due focus move away controllers send pr thumbs otherwise please close", "num": "11995", "d": "8/2015"}, {"title": "requires call", "body": "didreceiveattrs fires first render thisget value thisgetattr value didreceiveattrs fires rerenders thisget value previous value thisgetattr value current value", "num": "11992", "d": "8/2015"}, {"title": "document", "body": "changes behavior made helper docs add roughly sane", "num": "11989", "d": "8/2015"}, {"title": "collisions helpers properties name", "body": "upgrading addon maintain changed use single word helper fairly common word applications title found trying render property name app results page simply load lookup error ideas way forward see original issue see reproduction", "num": "11987", "d": "8/2015"}, {"title": "classnamebindings toggling classes components", "body": "using global event bus pattern components classnamebindings classes seem obey setter functions component classnamebinding attribute toggle properly classes bindings nt toggle accordingly funky behaviour ensues created example demo highlights issue jsbin", "num": "11980", "d": "8/2015"}, {"title": "positionalparams nt override default values", "body": "appears latest ember version attributes passed values via use positionalparams default value defined component nt override defaults new value however named assignment override example twiddle notice component default value set like two instances first passing attribute value via positionalparam second using named assignment named assignment version successfully overrides original default value", "num": "11979", "d": "8/2015"}, {"title": "transitionto queryparams fails renamed params", "body": "calling passing queryparams one queryparams renamed destination controller eg application fail load errors witnessed fiddle showing behavior fiddle setup work default includes instructions triggering issue change queryparam property name renamed controller property names provided place url query parameter names call works properly eg instead perhaps intended behavior behavior seen ember", "num": "11977", "d": "8/2015"}, {"title": "parent route model reloaded contains hasmany relation", "body": "trying refresh parent route model loaded remove relationships model reloaded another related issue able reproduce moment project parent model reloaded know makes reloaded jsbin quite similar use case resolved model ignored set controller somewhere read model changed ignored case changed new relationships added like jsbin cars added parent model ideas going wrong", "num": "11976", "d": "8/2015"}, {"title": "partial template using leading dash file name", "body": "ie partial template formhbs using vim edit file need escape first really confusing inconvenient", "num": "11973", "d": "8/2015"}, {"title": "component integration test helper rendering correctly select tag", "body": "hi component based consider following template snippet uiselecthbs integration test would call var options value label option value label option thisset options options thisset myselectedid assertequal val selected value correct fail selected attribute never rendered change selected attribute template anything random add option tag like compiler stripping selected attribute affects test devprod build select component works expected remembers current selection initialized current selection correctly edit inspected html dev build selected attribute missing option tag previously selected option selected latest chrome passes figured one issue selected attribute true isequal helper set right option optionselectedtrue simply using wrong way retrieve selected value select bad", "num": "11971", "d": "8/2015"}, {"title": "updating bound properties component init hook notify parent view", "body": "change bound property observer triggered parentview appcontrollersmycontrollerjs propertychanged function triggered consolelog changed observes property dosomething function thisset property false init bound controller updated component updates tried use component hooks worked examples ember outputs changed ember", "num": "11967", "d": "8/2015"}, {"title": "make linkto pure component", "body": "x use new arbitrarylength positional params feature x expose components privately x use nested helper avoid exposing", "num": "11962", "d": "8/2015"}, {"title": "setting adapter property route", "body": "hi ember setting property adapter inside model hook nt work anymore ember intended property simply nt get set buildurl function using property build correct url api backend thanks", "num": "11954", "d": "8/2015"}, {"title": "emberdateparse interpret iso strings without time zone offset local time", "body": "currently interprets iso strings without time zone offset utc time correct following ecmascript specification date time string format value absent time zone offset z changed ecmascript date time string format time zone offset absent datetime interpreted local time follow ecmascript aspect especially import dealing dateonly iso strings current implementation results unexpected behaviour like one js new date emberdateparse tolocaledatestring new date gettimezoneoffset", "num": "11951", "d": "8/2015"}, {"title": "instance initializers read property register undefined", "body": "hello trying update ember getting lot went docs read instance initializers really understand migrate initializers embercli environment nt undefined example deprecation docs sample initializer migrate using instance initializers nt get errors anymore thanks import ember ember export function initialize container application export default name myinit otherinit initialize initialize", "num": "11950", "d": "8/2015"}, {"title": "canary computed properties working anglebracked component", "body": "sure whether implemented yet missing something works javascript template mycomponent namename componentjs someprop embercomputedalias name nt javascript template componentjs someprop embercomputedalias attrsname accessing component template works fine", "num": "11948", "d": "8/2015"}, {"title": "pinterest style routes", "body": "like implement pinterest style modal page items imagesitemspostsetc whichever page click item modal item details pops page feed still sits background url address bar changes link item sites share friends close item modal still feed ember support type routing know reactrouter support imagine ember would well heavily inspired emberrouter source url pictures id potentially match two routes depends url navigated feed click item feed see opens overlay copypaste different browser window like chrome firefox see image render inside overlay one url two session dependent routes ui", "num": "11947", "d": "8/2015"}, {"title": "unlock simpledom dependency", "body": "something broke node tests cleared travis cache get tests started failing locked dep issue exists place track unlocking dep fixing underlying issue diff cc krisselden", "num": "11943", "d": "8/2015"}, {"body": "going pretty hard us help could provide jsbin embertwiddlecom example help us narrow going", "d": "8/2015"}, {"body": "think comment referring semicolon entire function", "d": "8/2015"}, {"body": "correct semicolon comment removed function", "d": "8/2015"}, {"body": "lessless mind submitting pr remove comment extra semicolon", "d": "8/2015"}, {"body": "think model nt changing", "d": "8/2015"}, {"body": "app noticed problem happening template component js code alias correct value still nt able create jsbin minimal app demonstrate probably close issue soon nt make progress", "d": "8/2015"}, {"body": "least one issue related changes length property arrayproxy update properly quite possible issue related would extremely helpful reproduction help us ensure right track definitely understand repros sometimes difficult part fixing bug thanks working please keep us updated", "d": "8/2015"}, {"body": "feel like semantically instance initializer reran agree", "d": "8/2015"}, {"body": "app instances appreset two different things older less meant rebuild everything preserving namespace support globals used namespace store various factories world modules namespace nt need perserved work exists replace ssr testing world appinstances instance vs non instance initializers actually meaning trying make tests faster fixing path going best path forward actually intended design also important ssr usecases general app testing close possible testing use path net positive", "d": "8/2015"}, {"body": "believe acceptance test helpers embertesting need significant work make compatible living instances likely best path forward imho aka stef said smileycat", "d": "8/2015"}, {"body": "said work blow away rebuild original registry worth noting likely wont give perf want appinstances work may regression dgeb anything come mind", "d": "8/2015"}, {"body": "stefanpenner fix bit basically need using initializers internally incoming", "d": "8/2015"}, {"body": "rwjblue", "d": "8/2015"}, {"body": "thanks clarification everyone glad issue getting addressed look approach test perf improvement instead rwjblue thoughts refactor test helpers support using instances took look seem fairly bound application happy pursue whatever work needs done get working", "d": "8/2015"}, {"body": "trentmwillis sorry upfront confusion hope explanation made sense gladly provide context interested would love see efforts aligned", "d": "8/2015"}, {"body": "would generally suggest use emberlegacyviews addon nonhacky way without addon routable components land future version", "d": "8/2015"}, {"body": "cc mmun", "d": "8/2015"}, {"body": "likely still ned prop lookup propmiss examples", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "provide runnable demo jsbin embertwiddlecom", "d": "8/2015"}, {"body": "fully willing admit may taking best approach method using would love find better way", "d": "8/2015"}, {"body": "duplicate comment", "d": "8/2015"}, {"body": "small mockup using provided jsbin showing might helper", "d": "8/2015"}, {"body": "one possible solution would filter foreign observers calling resetting list time example said current implementation feels tad bit dangerous memory wise class ends potentially dangling references instances looking advice best way fix blocking us moving moment", "d": "8/2015"}, {"body": "ah crap ya bad fault believe storing observers cp omission really complex relationship workmanw provide failing test likely work afternoon tomorrow morning", "d": "8/2015"}, {"body": "stefanpenner yea nt problem", "d": "8/2015"}, {"body": "stefanpenner yea nt problem thanks", "d": "8/2015"}, {"body": "stefanpenner added demonstrate validity test comment definition see test passes thanks lot", "d": "8/2015"}, {"body": "jskeate issues resolved whole internals array computed macros lazy simplified world unlikely backported change quite involved many apps depend todays spurious change events theory someone could extract macros provide addon older systems unlikely time support provide due time constraints unless misunderstood issue believe fixed likely closed", "d": "8/2015"}, {"body": "ah ok nt sure known issue quick scan nt find anything", "d": "8/2015"}, {"body": "demo duplicate items", "d": "8/2015"}, {"body": "fixed master", "d": "8/2015"}, {"body": "stefanpenner still present master", "d": "8/2015"}, {"body": "stefanpenner fivetanley seems like easiest solution check null bail early submit pull think way go really ember style guide anymore", "d": "8/2015"}, {"body": "similar fix seems like need add similar guard workmanw take look pr submit pr", "d": "8/2015"}, {"body": "ah sort map", "d": "8/2015"}, {"body": "rwjblue stefanpenner yea make", "d": "8/2015"}, {"body": "rfc related", "d": "8/2015"}, {"body": "btecu nt believe public api", "d": "8/2015"}, {"body": "wanted know leading future feature needs changes", "d": "8/2015"}, {"body": "tidbits internally removing dependency globals use babel defeaturify rather two passes", "d": "8/2015"}, {"body": "btecu stefanpenner exactly right", "d": "8/2015"}, {"body": "packages done ready work babel plugin", "d": "8/2015"}, {"body": "babel plugin done added two items checklist nearly done", "d": "8/2015"}, {"body": "intentional internal helperskeywords overridden nt think really bug even though annoying yall", "d": "8/2015"}, {"body": "thanks rwjblue needed know intentional", "d": "8/2015"}, {"body": "favor preventing reopen instantiation seems like bug fix think probably needs behind feature flag initially allow us easy way back negatively affects bunch apps", "d": "8/2015"}, {"body": "fyi fix following locations unsure first ran prior instantiation vaguely think router instantiated runs second definitely reopening current instance add", "d": "8/2015"}, {"body": "biggest effort likely refactoring embers tests maybe env boot typically concerned long running flags like especially since may bifurcate addon community let careful", "d": "8/2015"}, {"body": "generally keep repo issues dedicated bugs ember looks like embercli related issue would mind reopening", "d": "8/2015"}, {"body": "current semantics components access passed attribute values changed internally representing passed attributes continue mirror attributes component root likely current lifespan theory possible prevent mirroring would strongly suggest would require overriding private internal behavior brittle changes throughout versions", "d": "8/2015"}, {"body": "transition blog described conflating attributes values provided component caller component state cause confusion especially combined mutable attributes beginning anglebracket components ember component attributes available thisattrs rather component least seems like encouraging developers transition separate namespaces least writing anglebracket components already available question addon developer write anglebracket component addon user free invoke however want imho need flag component say anglebracket component however invoked", "d": "8/2015"}, {"body": "quoted blog post written time angle bracket components enabled default feature subsequently disabled numerous issues addon developer write anglebracket component addon user free invoke however want assertion angle bracket component extend invoked curly brackets imho need flag component say anglebracket component however invoked yep likely also way optinto allowing invoked via curly brackets deprecation allow authors provide way forward existing components", "d": "8/2015"}, {"body": "awesome expected resolved private embergrid targeting see glimmercomponent pops view enable slated release", "d": "8/2015"}, {"body": "still number issues ironed see list", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "ok found culprit idea line seems cause error edit link nt working click right click open new tab github go correct line", "d": "8/2015"}, {"body": "general line appropriate please share reproduction showing error help track", "d": "8/2015"}, {"body": "work putting together simple example tomorrow know root put debug statements determined one views failing render upgrading old version ember nt even components app", "d": "8/2015"}, {"body": "defined job initialize attributes viewcomponent primary job copy attributes object observation starts fire hooks default noop", "d": "8/2015"}, {"body": "way functions fired via comes mixin using defined", "d": "8/2015"}, {"body": "complete guess based error message reason undefined inside put conditional breakpoint see", "d": "8/2015"}, {"body": "like might guessed wound bug side issue migrating app embercli using script assumes classes named ie issue wound mixins nt given names fine current version app using requirejs script translate modules wound exporting mixin file view blowing wound trying use mixin anyway thanks help", "d": "8/2015"}, {"body": "awesome glad got figured", "d": "8/2015"}, {"body": "glance sounds like duplicate turn upstream bug", "d": "8/2015"}, {"body": "dtetto yes came conclusion thank linking", "d": "8/2015"}, {"body": "consolidated related pr together", "d": "8/2015"}, {"body": "yes deprecation example views", "d": "8/2015"}, {"body": "moved helper function triggered layout present", "d": "8/2015"}, {"body": "someone wants tackle target branch since code path longer present commit prefix", "d": "8/2015"}, {"body": "hmmm view controller based paths triggered deprecation", "d": "8/2015"}, {"body": "rwjblue may looked usage value hash argument mustache", "d": "8/2015"}, {"body": "given deprecation properly printed", "d": "8/2015"}, {"body": "deprecation done", "d": "8/2015"}, {"body": "unsure related emberclitemplatelint propertly handle considers function truthy working fix though", "d": "8/2015"}, {"body": "ooh using emberclitemplatelint problem", "d": "8/2015"}, {"body": "yep working fixingupdating please track", "d": "8/2015"}, {"body": "dupe please see embercli repo", "d": "8/2015"}, {"body": "ah sorry", "d": "8/2015"}, {"body": "see ugly know javascript appviewsapplicationjs appapplicationviewjs import ember ember export default embercomponentextend tagname", "d": "8/2015"}, {"body": "know question without using views views deprecated", "d": "8/2015"}, {"body": "code use extends", "d": "8/2015"}, {"body": "quaertym suggestion also mentioned issuescommentsetc works fine generally want encourage folks components feels weird might future refactoring hazard would use addon need root level view like exactly", "d": "8/2015"}, {"body": "quaertym sorry nt see part code interesting solution agree ugly take look legacy views addon rwjblue future feature without using components views legacy addon routable components address", "d": "8/2015"}, {"body": "yes routable components land actual component customize tag attributes classes etc", "d": "8/2015"}, {"body": "raytiley wondering bug exists also example work prior version ember ie", "d": "8/2015"}, {"body": "raytiley think related root issue wise", "d": "8/2015"}, {"body": "rwjblue might really need dig little bit deeper understand desired behavior happening underlying issue handler nt updated new transition starts happens event gets triggered router basic understanding without writing test initially enter route url query params creates new transition never calls interrupted call one routes hooks new transition prepares queryparams since qpmeta never updated original transition uses default values therefore stuck default values", "d": "8/2015"}, {"body": "pixelhandler nt tested versions yet nt think area code changed drastically except trek recent work moving queryparam config router nt believe landed yet might nice place change behavior ideally think need finalize queryparam changes current transition calling active transition since pass queryparams still gives new transition way override queryparam changes previous transition call anyone following along workaround able schedule transitionto onto run loop order keep queryparams get annoying flash undesired route better loosing incoming state places app huge priority get fixed soon wanted report", "d": "8/2015"}, {"body": "raytiley tried workaround queryparams still getting stripped like correct syntax yes", "d": "8/2015"}, {"body": "using ember time start contributing add submit pr", "d": "8/2015"}, {"body": "btecu yeah perhaps docs improved handling error think example exists docs would open creating branch pull request guides project see", "d": "8/2015"}, {"body": "provide reproduction demonstrating", "d": "8/2015"}, {"body": "pixelhandler yes stated pull request clear change rwjblue see thanks looking", "d": "8/2015"}, {"body": "works get rid use", "d": "8/2015"}, {"body": "ember way", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "bratukham yeah cloned twiddle example see using event nt work nt work", "d": "8/2015"}, {"body": "prototype extensions enabled disabled", "d": "8/2015"}, {"body": "stefanpenner would find", "d": "8/2015"}, {"body": "think working used whenever get nothing", "d": "8/2015"}, {"body": "ok found commit changelog", "d": "8/2015"}, {"body": "nevermind looks like supposed use", "d": "8/2015"}, {"body": "lookup variable check variable ideally could used unfortunately nt work userland proxies especially proxies content comes async", "d": "8/2015"}, {"body": "think variable always displayed even undefined ambiguity changes context weird use case helpers requires parameters kind foresee cases case think ambiguity supporting makes semantics helpers much confusing", "d": "8/2015"}, {"body": "timevans detect variable exists second part comment describe problem see comes detecting existence property", "d": "8/2015"}, {"body": "nt seem like bug helpers always win historically intentional", "d": "8/2015"}, {"body": "nt bug could documented new helpers allowing dashless helpers common words cause problems encountered", "d": "8/2015"}, {"body": "timevans discussed bit slack helpers win case actually fairly important document api docs writing helpers guide nt think changed easily actually rely ambiguous able helper call specifically case", "d": "8/2015"}, {"body": "timevans handled ambiguity addon adding ast transform detected usages rewrote commit going go ahead close annoying behavior think change without majorly breaking things rely today happy merge pr making clear api docs guides helpers always used first even local property exists name", "d": "8/2015"}, {"body": "think also document workaround future travelers", "d": "8/2015"}, {"body": "always downside allowing dashes helpers", "d": "8/2015"}, {"body": "unsure reasoning behind conditional assigning ebryn review", "d": "8/2015"}, {"body": "case useful jsbin demonstrating issue jsbin using ember build conditional removed branch happy raise pr", "d": "8/2015"}, {"body": "must use ember data canary ember ember data compatible ember", "d": "8/2015"}, {"body": "bridge gap closure actions amp route explicitly calling controller router trick", "d": "8/2015"}, {"body": "adamesque right suggest using stated docs closure actions like bubble second version work thus suggest going first option sends action thus infinite loop calling adamesque going close let know missed something", "d": "8/2015"}, {"body": "thanks yall helpful private property though recently got pr merged make public perhaps open similar pr also especially closure actions available directly getting confused properties need accessed via days one would okay case calling", "d": "8/2015"}, {"body": "seem like regression cloned example used release version ember happens unrecoverable route stuck bad route seems like workaround would use trycatch around code expected throw error potential throw error", "d": "8/2015"}, {"body": "mikepost yeah seems regression true ember cloned example seems like workaround catch code expected return error", "d": "8/2015"}, {"body": "pretty sure pixelhandler comment meant", "d": "8/2015"}, {"body": "fixed release channel canary beta released next days working jsbin using release channel build", "d": "8/2015"}, {"body": "topaxi quick read issue description without reading example app code running imo issue sounds big like really need broken actionable solution discovered think problem framework issue could optimization issue maybe backburner jquery issue perhaps ask someone pair embercommunityslackcom chat room maybe second set eyes issue may identified", "d": "8/2015"}, {"body": "versions stuff seems related something digging", "d": "8/2015"}, {"body": "possibly", "d": "8/2015"}, {"body": "stefanpenner ember jquery emberdata liquidfire", "d": "8/2015"}, {"body": "tested without liquidfire get fast instant transitions", "d": "8/2015"}, {"body": "switch transition also get fast nt use transitions anything template even sure put issue might liquidfire related", "d": "8/2015"}, {"body": "issue might liquidfire related believe issue ember liquid fire exposes", "d": "8/2015"}, {"body": "duplicate maybe reopen failing test", "d": "8/2015"}, {"body": "fpauser thanks linking going take look failing test", "d": "8/2015"}, {"body": "would correct way document something without code ember codebase file documentation comments", "d": "8/2015"}, {"body": "transition comes documentation needs cleanup properly parseable yuidoc move declarations description ensure every documented block ensure documentation blocks andor statements confirm listed every param expected method also need update include similar include rsvp", "d": "8/2015"}, {"body": "think issues motivation fixed since use deprecated write component use addon", "d": "8/2015"}, {"body": "rondalesc ultimately duplicate btecu correct deprecated", "d": "8/2015"}, {"body": "rondalesc tried xselect component see emberaddonscom", "d": "8/2015"}, {"body": "chatted rondalesc bit agree regression related glimmer work unlikely addressed would happily review pr release another version someone wants tackle though", "d": "8/2015"}, {"body": "rwjblue pixelhandler thanks look one decided roll", "d": "8/2015"}, {"body": "josenberg perhaps join embercommunityslackcom chat room join documentation channel think could let know plans exist multilanguage best guess team translators would needed ensure timely delivery docs", "d": "8/2015"}, {"body": "coleythebest perhaps instead using settimeout use allow current run queue processed handle refresh next queue also perhaps try putting simple example using jsbin embertwiddle show problem action", "d": "8/2015"}, {"body": "definitely annoying nt bug eventually would like remove need warning proper css sanitization also definitely see blog post confusing sorry", "d": "8/2015"}, {"body": "demo without warning", "d": "8/2015"}, {"body": "worries thanks clearing", "d": "8/2015"}, {"body": "jonathankingston teasing plan attack style sanitization basically making accept object would make valid safe sanitizing actual css instead styles harder given enough time possible", "d": "8/2015"}, {"body": "mixonic jonathankingston sounds good one initial piece feedback looks bit verbose app supports lot custom sizing positioning things normally style bindings maybe edge case area using cp better us wanted provide feedback", "d": "8/2015"}, {"body": "workmanw hash nt focus certainly style usage common within ember addons react basically advocating good thing lets get fight goberserk providing security works restrictive csp policies main aim yeah working rfc however would rather get right headaches core ember developers currently working talk next week security however free give real focus needs get correct", "d": "8/2015"}, {"body": "rwjblue pr one submitted since code longer exists sure right branch point correct branch merge target thanks", "d": "8/2015"}, {"body": "correct branch target", "d": "8/2015"}, {"body": "pr", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "cc wycats", "d": "8/2015"}, {"body": "chadhietala sure proper use unquoted use curly braces attribute component seems curly braces inside quotes found odd see would expected instead unquoted curlies however look proper recall blog post announcing glimmer release example attribute used curlies inside quotes", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "cc wycats chancancode", "d": "8/2015"}, {"body": "need call working", "d": "8/2015"}, {"body": "thanks got confused bug since lifecycle hooks nt need get work", "d": "8/2015"}, {"body": "totally understood agree nt call generally always best practice call framework hooks", "d": "8/2015"}, {"body": "definitely annoying nt bug latest release version api documentation online emberjscomapi generally working versioned api documentation browser project emberjsapi ready yet options want older versions api docs build website locally prior api docs update use app like dash allows multiple documentation versions locally use yuidoc browser along autopublished yuidoc json output found sorry troubles", "d": "8/2015"}, {"body": "issue morph cache gets sync currently displayed value input box example always reset unique value input text updated properly", "d": "8/2015"}, {"body": "need dig around bit see solution bare case use component mechanism builtin via take look onewayinput component using also supports sanitization seems somewhat related trying", "d": "8/2015"}, {"body": "fyi use onewayinput", "d": "8/2015"}, {"body": "rwjblue thanks came something looks", "d": "8/2015"}, {"body": "great catch would mind updating submitting pull request commit pr title prefixed", "d": "8/2015"}, {"body": "sure difference expected seem odd use init event app controller component property seems like ripe sort race condition", "d": "8/2015"}, {"body": "integration tests boot application need run use acceptance test boots application initializers setup way allow import function embercli sets default could import function execute component integration test block seems like question try reserve issue tracker bugs could instead open stack overflow question ask slack", "d": "8/2015"}, {"body": "would much prefer contextual componenthelpers rfc concepts allow nested components access relative parents vs traversing tree find nearest given type example would prefer something like following invoked aware instance belongs anyways nt really point issue maybe show potential future make happen ok marked goal ultimately make useless sometime cycle deprecate", "d": "8/2015"}, {"body": "referring somewhat ideas", "d": "8/2015"}, {"body": "still useful things discussed rfc", "d": "8/2015"}, {"body": "mmun indeed use helpful composable components neat traverse parent component type instead manualy recursing little code quite usefull", "d": "8/2015"}, {"body": "steffenbrem think find rwjblue suggested even better almost cases", "d": "8/2015"}, {"body": "nt nice contextual components rfc associating parent child components emitting parent passing example ember sortable uses approach rather", "d": "8/2015"}, {"body": "raycohen yep great solution little verbose lands still marking public would merge", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "maybe sparse list kind", "d": "8/2015"}, {"body": "list types calls iterate nonmodels potentially items", "d": "8/2015"}, {"body": "wo nt sparse list foreach skips sparse entries must null entries would guess render normal row let get thing would null streams key think null becomes valid key dupes one null key handled way dupes currently handled important part entry null key also null entry null key also null phone sharing thoughts", "d": "8/2015"}, {"body": "vaguely thought coerce keys string default would become already handle duplicates fine multiple times would fine edit coerce see", "d": "8/2015"}, {"body": "assuming caused iterating array contains item tested seems work fine tpitale definitely need sort repro help one", "d": "8/2015"}, {"body": "else looking debugging nt help level knowledge assume something code working series ember going try updating emberdata beta see changes anything", "d": "8/2015"}, {"body": "tpitale definitely saying nt something simple array", "d": "8/2015"}, {"body": "ahh replicated error specifying manual path resolves clue hitting though using anywhere", "d": "8/2015"}, {"body": "using every thought deprecated warnings told", "d": "8/2015"}, {"body": "tpitale yeah early cycle printed deprecation used without key mostly due bug htmlbars fixed later versions generally required specify key pretty edgy cases might still make sense specify scenarios nt need", "d": "8/2015"}, {"body": "sorry confusion thing caused", "d": "8/2015"}, {"body": "okay let try deleting smile", "d": "8/2015"}, {"body": "yep deleting works", "d": "8/2015"}, {"body": "still private get access view registry container", "d": "8/2015"}, {"body": "know emberviewviews nt really public recommended use one valuable debugging tools style views able grab instance view poke state via console helped solve hundreds bugs ember inspector also works pretty well", "d": "8/2015"}, {"body": "rlivsey yeap looking thanks stefanpenner took bit longer figure looked bit assumed could nt checkbox kind hiding trick thanks", "d": "8/2015"}, {"body": "seems related", "d": "8/2015"}, {"body": "possible way internals works atm would recommend taking look liquid fire using liquid fire directly", "d": "8/2015"}, {"body": "provide reproduction embertwiddle jsbin", "d": "8/2015"}, {"body": "reproduction jsbin change input cause error jsbin identical code older ember version error", "d": "8/2015"}, {"body": "sure something different twiddle showing queryparams alias nt work maybe error never used", "d": "8/2015"}, {"body": "definitely seems like report deprecated folks recommend approach embermodaldialog using solution", "d": "8/2015"}, {"body": "nt seem like ember bug though", "d": "8/2015"}, {"body": "ember bug file pathname said title", "d": "8/2015"}, {"body": "somewhat fundamental way addons work anything addons app directory merged application code error path indicating sorry confusing nt really bug hop embercli channel community slack ask stackoverflow sure folks help explain better done", "d": "8/2015"}, {"body": "ugh mixonic told", "d": "8/2015"}, {"body": "rwjblue time help nt really know begin", "d": "8/2015"}, {"body": "rondalesc ping hour pair", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "looks like deprecation wrong place", "d": "8/2015"}, {"body": "fix likely need need add sufficient tests ensure deprecation correctly triggered", "d": "8/2015"}, {"body": "instances need audited replaced less tricky mechanism saladfork grep various usage came following list", "d": "8/2015"}, {"body": "js export function map obj callback thisarg return objmap objmap callback thisarg mapcall obj callback thisarg var deprecatedmap map emberrunindebug function deprecatedmap function emberdeprecate emberenumberableutilsmap deprecated please refactor use arrayprototypemap return mapapply arguments \u30c4", "d": "8/2015"}, {"body": "sadly ca nt nest matching debug statements sadly limitation working replacing anyways something little crazier javascript export function map obj callback thisarg return objmap objmap callback thisarg mapcall obj callback thisarg var deprecatedmap map emberrunindebug function deprecatedmap function var deprecate emberdeprecate stashing prevent nested defefeatureify errors deprecate emberenumberableutilsmap deprecated please refactor use arrayprototypemap return mapapply arguments", "d": "8/2015"}, {"body": "looks like emberenumerableutils methods affected", "d": "8/2015"}, {"body": "working example", "d": "8/2015"}, {"body": "looks like number undefined nan believe existing ember behavior worth maintaining", "d": "8/2015"}, {"body": "also verify behavior methods operate arrays numbers", "d": "8/2015"}, {"body": "going change would expected deprecation unfortunately nt obvious deprecation maybe returning proxy sounded like massive worms listed somewhere cibernox remember documented mixonic may need amendment blogpost worth noting align ember getset getterssetters without change hope migrating seamlessly", "d": "8/2015"}, {"body": "looks like intended documented never happened", "d": "8/2015"}, {"body": "looks like intended documented never happened emberjswebsite thanks catching looks like slipped cracks", "d": "8/2015"}, {"body": "create pr updating deprecations guide nobody already", "d": "8/2015"}, {"body": "create pr updating deprecations guide nobody already would great nt believe anyone else yet", "d": "8/2015"}, {"body": "breaking apps wild think revert change benefits worth pain", "d": "8/2015"}, {"body": "tomdale agree", "d": "8/2015"}, {"body": "options end bet aligned regular setters non breaking way advertise breaking change release notes explicit enough", "d": "8/2015"}, {"body": "cibernox aligning regular setters strong enough benefit end users justify breaking things apps without deprecations strong sacrifice marginal improvement", "d": "8/2015"}, {"body": "also confusion super cp setter take account cibernox mind sharing example help enumerate rationale tomdale wycats discussed explained meeting acknowledged caveats confirmed acceptable want backtrack fine means way ever deprecate functionality also note less breaking things deemed acceptable also suspect relevant differences would hate set precedence also break apps beta began rely js aligned semantics", "d": "8/2015"}, {"body": "think main problem missed release notes think advertised people would understand one breaking change ca nt done otherwise acceptable major version ok reverting change saves real pain wild unused feature tho nt see way ever deprecatable way", "d": "8/2015"}, {"body": "stefanpenner sure example mean one comes mind cps people keeps bitted fact computed properties cache return value seen many people mistake caching seen tens times", "d": "8/2015"}, {"body": "possibility revert infavor fix landing hope sufficient community mass embercli enalbing static analysis based deprecation able cover sufficient usecases still would prefer see change accept major concern potentially community pain whatever choice made must happen next", "d": "8/2015"}, {"body": "meanwhile example confusing use case confuses devs using super computed properties js var twitteruser emberobjectextend handler tomster aka embercomputed handler get return thisget handler set v return thisset handler v var twittertroll twitteruserextend aka embercomputed handler get return thisget handler lol set k v return thissuper arguments var troll twittertrollcreate trollget aka tomster trollset aka horsejs ember returns instance ember returns horsejs trollget aka also since return value call cached ember cached instance ember returns horsejs", "d": "8/2015"}, {"body": "maybe way deprecated long new function used property returns get chaining effect warning return value get new effect cover cases guess could go well remember old return value cached nt seem work new one", "d": "8/2015"}, {"body": "orisomething caching policy cp setters nt changed afaik however linting mechanism mmun proposing may catch almost usages", "d": "8/2015"}, {"body": "recommendation people use wanting know something actual array said fix looks reasonable would likely consider pr", "d": "8/2015"}, {"body": "issue manifesting inside using serializer model attribute named see put together pr weekend", "d": "8/2015"}, {"body": "appears explicitly shared instances scoped module root used", "d": "8/2015"}, {"body": "idea worked looked changelog nt seem show anything would alter behavior", "d": "8/2015"}, {"body": "also clarify using var like shared across mixin singleton", "d": "8/2015"}, {"body": "correct var module root essentially singleton", "d": "8/2015"}, {"body": "funny nt see months ago see eventually grok worked", "d": "8/2015"}, {"body": "suspect timing related change merely exposed preexisting issue validation code ideas may would consider regressions ember rather luck manifest sooner course singleton source problem merely scanned available code potential singleton leaks could possible account behavior explained", "d": "8/2015"}, {"body": "likely ordertiming change results global singleton related methods interleaving slightly differently", "d": "8/2015"}, {"body": "agreed rework flow avoid stateful interaction like today thanks quick scan labeled much appreciated", "d": "8/2015"}, {"body": "anyone following along fixed released patch weekend", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "arenoir new style helpers return array params first argument instead spreading try destructure", "d": "8/2015"}, {"body": "thanks mmun", "d": "8/2015"}, {"body": "suggest updating ember data well similar problem", "d": "8/2015"}, {"body": "hoping upgrade ember emberdata bigger issues emberdata series wanted address separately ember upgrade rather tackle simultaneously way use older ed versions ember", "d": "8/2015"}, {"body": "thanks submission quick look reveals app appears functioningloadingrunning correctly merely visible bumping liquidfire latest version addresses moments may worth taking look something appears gone sideways error failure occurred maybe exists way message specific failure", "d": "8/2015"}, {"body": "confirm liquidfire culprit though using karat liquidfire version nt know would nt picked latest version fresh install", "d": "8/2015"}, {"body": "going close since remaining issue pertains liquidfire rather ember stef mentioned", "d": "8/2015"}, {"body": "based diff versions seems likely caused issue krisselden stefanpenner would one yall able take look", "d": "8/2015"}, {"body": "ill look", "d": "8/2015"}, {"body": "created relatively thorough failing test case", "d": "8/2015"}, {"body": "appears issue originated yet clear commit question actually caused issue merely exposed underlying issue investigation needed", "d": "8/2015"}, {"body": "cc dgeb", "d": "8/2015"}, {"body": "looks like passing validatefullname check see also calls normalize turn calls normalizefullname set registry built see looks breaking change resolver probably embercli container registry think might appropriate throw error situation surprised could valid route name sure exactly characters restricted stefanpenner thoughts", "d": "8/2015"}, {"body": "throws error tell us version ember provide error stack trace provide reproduction isolated repo bin would ideal", "d": "8/2015"}, {"body": "definitely private api would kinda expect throw wacky route name", "d": "8/2015"}, {"body": "feeling well nt think getting past currently trick ensure accounts wacky right error thrown", "d": "8/2015"}, {"body": "would love see issue reproduction make sure nothing else funky going", "d": "8/2015"}, {"body": "tricky one reproduce seems error thrown running tests please see test originally written emberjs integration tests landed", "d": "8/2015"}, {"body": "stefanpenner got chance look reproduction", "d": "8/2015"}, {"body": "sorry nt notice look get work", "d": "8/2015"}, {"body": "dgeb assertion im sure think fine tradeoff provide good errors people provide something clearly invalid opt said one option make assert invalid names likely satisfies constraints", "d": "8/2015"}, {"body": "throwing error think point around fact breaking change introduced without proper preceding deprecation warning refactored usage function catch errors", "d": "8/2015"}, {"body": "container always private api generally clear use risk definitely try deprecate much intentional change behavior possible case added helpful error message method used incorrect arguments fact previously worked intentional though perhaps make always return also aside dgeb wonderful work lately expose parts folks need containerregistry public api", "d": "8/2015"}, {"body": "hey thanks rwjblue still think catching good come letting propagate downstream although glad assertion place catch let try beef regex currently", "d": "8/2015"}, {"body": "though perhaps make always return true false think like let try beef regex currently", "d": "8/2015"}, {"body": "although private api think really binary w nonexceptional errors", "d": "8/2015"}, {"body": "controller looks route subclass jsbin example would better reproduction create one via also nt need anything defined route nt actually valid configuration please see guide", "d": "8/2015"}, {"body": "whoops ie check thanks met vriendelijke groet kind regards dennis tel thu aug pm erik bryn notifications githubcom wrote controller looks route subclass jsbin example would better reproduction create one via reply email directly view github", "d": "8/2015"}, {"body": "fyi updated original comment", "d": "8/2015"}, {"body": "ok changed according docs still issue would want create jsbin illustrate query params route controller template linkto installationstep queryparams previous linkto linkto installationstep queryparams next linkto", "d": "8/2015"}, {"body": "also tried replacing linkto helpers actions setting param also update queryparam address bar", "d": "8/2015"}, {"body": "ok bad nt notice deprecation warning ember inspector emberdocumenttitle plugin still using closed", "d": "8/2015"}, {"body": "symptom root cause emberclidocumenttitle could nt figure deprecation coming significance thanks properly tracked emberclidocumenttitle", "d": "8/2015"}, {"body": "correct deprecation warning query params nt update nt think discarded issue", "d": "8/2015"}, {"body": "talked rwjblue twiddle demonstrating issue adding removing breaks fixes links", "d": "8/2015"}, {"body": "investigating feels like something going", "d": "8/2015"}, {"body": "seems related", "d": "8/2015"}, {"body": "good catch opened guides repo emberjsguides might want close one hop", "d": "8/2015"}, {"body": "fixed sorry", "d": "8/2015"}, {"body": "remove comments hooks stick around", "d": "8/2015"}, {"body": "seems like issue closed rwjblue", "d": "8/2015"}, {"body": "submit failing test case pull ensure fixed may already fixed though", "d": "8/2015"}, {"body": "little bit lost source code checked glimmercomponent branch looking try find add test found tests glimmer components invoked curly braces legacy components invoked angle brackets hit bug used ember g component xfoo pod generate component gives default template yield nt change make legacy component glimmer component one triggered user code also want put test packagesemberhtmlbarstestsintegrationcomponentinvocationtestjs", "d": "8/2015"}, {"body": "unsupported default latest versions", "d": "8/2015"}, {"body": "ember per example nt work mut either", "d": "8/2015"}, {"body": "believe default binding deprecated ember documentation seems incorrect many areas implement mut helper push changes parent explicitly call jsbin examples", "d": "8/2015"}, {"body": "daveduchene jsbin provided uses believe bindings still supported works", "d": "8/2015"}, {"body": "examples working using aliased property everything works fine unaliased properties initial js bin includes demonstration problem usage mut helper said", "d": "8/2015"}, {"body": "orkon seeing behaviour bad js bin update use latest build", "d": "8/2015"}, {"body": "dylanmensaert sorry misread bin see binding aliased property wonder real problem relying legacy behaviour vis attrs hash", "d": "8/2015"}, {"body": "daveduchene using legacy behaviour seem problem use observers check bar changed still push parent using set seems broken compared earlier versions tried works mentioned updates aliased property trigger update parent solution seems use works expected jsbin", "d": "8/2015"}, {"body": "dylanmensaert thanks suggestions updated bin original bug report use use either observer workaround computed property emulates emcomputedalias", "d": "8/2015"}, {"body": "daveduchene advice use mut helper works", "d": "8/2015"}, {"body": "thought needed mut helper invoking component via angle brackets one way another nt think mut helper making difference observer", "d": "8/2015"}, {"body": "documentation states call push changes parent also good explanation one agree implemented using observer work twoway binding longer supported use combination make work long run", "d": "8/2015"}, {"body": "ok hold worked curly bracket invocation two way binding still work without major refactoring angle bracket components definitely require one way bindings mut et al curly invocation ultimately believe duplicate daveduchene could double check failing test pr see think issue yes comment also affects setter cp crosslink issue", "d": "8/2015"}, {"body": "rwjblue apologies cp nt know enough ember internals really judge issue fwiw problem reporting occurs property defined emcomputedalias bound properties including static computed properties emulate emcomputedalias work fine exhibit expected twoway binding behaviour", "d": "8/2015"}, {"body": "cp computed property fairly sure issue failing test pr demonstrating", "d": "8/2015"}, {"body": "rwjblue looking unit test pr really sure issue implement computed property emulates emcomputedalias component two way bindings work fine would last workaround demonstrated js bin linked initial bug report defer judgement though", "d": "8/2015"}, {"body": "rwjblue another case demonstrate similar andor related problem mixonic described possible cause however failing example work version version issue likely different reported version also wonder anybody also reported issue probably common case version note seems rendering problem controller properties updated alias works correctly however template output updated moving separate issue", "d": "8/2015"}, {"body": "chadhietala issues definitely seem like bugs", "d": "8/2015"}, {"body": "setting thiscurrentmodel using set model new data seems work renders new items calls attrs events building chadhietala jsbin", "d": "8/2015"}, {"body": "seems working invoking component", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "nt work classnames problem", "d": "8/2015"}, {"body": "gotcha nt declaration component invocation switching instead work", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "exact error message getting stack point anything useful reproduction would really make easier track work", "d": "8/2015"}, {"body": "yes thats get test full output acceptance tests report working slimmed reproduction share stack trace note see error running tests application seems performing normally otherwise", "d": "8/2015"}, {"body": "comes triggered calling system model attribute model put break point line linked see calling", "d": "8/2015"}, {"body": "model attribute break returned following given code think tracked set occurring specifically function component declared like run inside function debugging receive model passed component run inside get key value shippingaccount", "d": "8/2015"}, {"body": "move super call first thing", "d": "8/2015"}, {"body": "rwjblue", "d": "8/2015"}, {"body": "general init javascript constructor calling super shouldmust happen touching reasons otherwise object correctly initialized actually enforces static error believe solution correct approach unlikely encourage patterns deviate think issue closed docsblogpost entry created discuss calling correctly", "d": "8/2015"}, {"body": "stefanpenner certainly makes sense surprised see failure part update make sure communicate peers init rule thumb thank rwjblue stefanpenner prompt response course thank ember", "d": "8/2015"}, {"body": "agree listed developers main developers emberjs really charles jolley nt actively involved long time last person touch many stable parts infrastructure slowchanging tomhuda really two people wycats tomdale everyone else listed definitely main developer quite people enough knowledge navigate maintain codebase risk forgetting someone point krisselden ebryn machty mixonic trek b agree emberjs trouble listed developers leave project eg win lottery less morbid addition half core team listed large set contributors scattered across many companies many could step keep project alive think methodology overweighting edits understandable since measurable truck factor really depends reads need people read code understand sometimes people may reached make small targeted changes reading time allows add truck factor", "d": "8/2015"}, {"body": "eg win lottery less morbid open source somebody wins lottery expect see contributions fewer p", "d": "8/2015"}, {"body": "depends wifi new yacht", "d": "8/2015"}, {"body": "depends wifi new yacht sort lottery would buy yacht without wifi trollface", "d": "8/2015"}, {"body": "b agree emberjs trouble listed developers leave project eg win lottery less morbid nt believe project would fail healthy distributed vibrant community suspect short term loss context would cause pain believe community would adapt biggest lose may measured vast amounts issue triage release related work rwjblue krisselden deep problem solving skills wifelette ability organize promote community conferences etc list important maybe directly visible via gh commits contributors goes gavelino may interesting attempt take measure contributions dimensions issue tracker related projects core team minute meetings rfc submissions addon maintainership measuring dimensions would likely costly possible may yield interesting pieces", "d": "8/2015"}, {"body": "open source somebody wins lottery expect see contributions fewer p agree someone would pay lottery pretty much thing os", "d": "8/2015"}, {"body": "also argument reads strong ember source readable contributed know way around decently well reliably familiar many parts entire core team suddenly abandoned project go live big island sun would nt think hard deciding start working", "d": "8/2015"}, {"body": "sake risk mitigation discuss codifying rules specifically ember core team members forbidden buying lottery tickets trollface thus continuity assured", "d": "8/2015"}, {"body": "obviously irb give permission test experimentally although sake science us would dutifully accept winning lottery ticket might interesting track examples main primary authors left past year josscrowcroft floating river somewhere world jashkenas away quite time backbone seems well many underscore users shifted two projects merging authors stopped work two years ago despite still listed recommendation state machines ruby toolbox project essentially lives new set authors", "d": "8/2015"}, {"body": "thank answers really appreciate feedback research development answers receiving survey help better interpret results improve approach", "d": "8/2015"}, {"body": "gavelino awesome best luck", "d": "8/2015"}, {"body": "fired viewcomponent initially inserted dom prior versions ember route cause existing dom elements removed new ones created ember properly preserves dom reason rerendering much faster called intentional yes", "d": "8/2015"}, {"body": "closing question answered", "d": "8/2015"}, {"body": "using private service expects instance initialized setup test either mock setup router opposed tweaking bit prevent error ultimately return false falsey want submit pr using private api nonsupported way nt bug", "d": "8/2015"}, {"body": "closing issue happily review pr", "d": "8/2015"}, {"body": "post reproduction using", "d": "8/2015"}, {"body": "seems working", "d": "8/2015"}, {"body": "also hit issue believe shows toggle back label updates", "d": "8/2015"}, {"body": "changing classnames class fix issue likely duplicate", "d": "8/2015"}, {"body": "still regression though saying good smilecat", "d": "8/2015"}, {"body": "able repro twiddle rwjblue suggests changing fixes problem", "d": "8/2015"}, {"body": "nt work likely going", "d": "8/2015"}, {"body": "also using paths template deprecated work though unsure work finished", "d": "8/2015"}, {"body": "swapped template code following still get value input field typing also heck tried luck console errors deprecation warnings ember inspector chrome", "d": "8/2015"}, {"body": "sake complete code context code entire template recruiter admin authlogincapable unless loginprocessing continue else iconspinner unless error errortitle errordescription component controller code import ember ember export default embercomponentextend auth emberinjectservice classnames logincontainer containerfluid bowerjson file packagejson file", "d": "8/2015"}, {"body": "ok see mean works sans classnames attribute hrmmmmm", "d": "8/2015"}, {"body": "ok mistake changed classnames class solved world continue spinning", "d": "8/2015"}, {"body": "multiple button clicks example seem cause also memory leak", "d": "8/2015"}, {"body": "looks like works expected nt dispatch hook", "d": "8/2015"}, {"body": "seems related", "d": "8/2015"}, {"body": "omg wrong repo", "d": "8/2015"}, {"body": "sure nt embercli issue", "d": "8/2015"}, {"body": "omg wrong repo", "d": "8/2015"}, {"body": "believe related basically specifying today class removed click event nt properly handled browser full refresh", "d": "8/2015"}, {"body": "faced today basically changed templates work afaik", "d": "8/2015"}, {"body": "gladly accept pr adding documentation", "d": "8/2015"}, {"body": "confirm bug immediately upgrading seeing attribute passed component component following assert throws would correctly bound also confirm defining attribute component fixes issue experience pretty common see attributes passed component nt explicitly defined regardless people feel practice nonexplicit attributes", "d": "8/2015"}, {"body": "bumped declare object things work jsbin edit work", "d": "8/2015"}, {"body": "think fix writing test verify unless one breaking test already", "d": "8/2015"}, {"body": "great hear though", "d": "8/2015"}, {"body": "nt breaking test breaking app", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "soonish", "d": "8/2015"}, {"body": "times oo scale used hearing", "d": "8/2015"}, {"body": "worst case special case teardown legacy stuff may causing grief areas well", "d": "8/2015"}, {"body": "digging nt think two functions coexist least current state repro repo get rid notifycontrollerchange nt million function calls trying figure axe one", "d": "8/2015"}, {"body": "think ca nt axe answer wrapping method clause possible seems like dependent event would nt present legacy case", "d": "8/2015"}, {"body": "runspired yea separately tried function check make sure nt exist nt found anything still passes test first assertions fine last nt pass yo tomdale git blame implicates code tests got ideas", "d": "8/2015"}, {"body": "thanks documenting positionalparams would great actually looking something contribute perhaps help", "d": "8/2015"}, {"body": "awesome love help", "d": "8/2015"}, {"body": "rwjblue alright assume contributing guidelines need read first go documenting positionalparams anything need know wherehow write documentation core ember functionality", "d": "8/2015"}, {"body": "classnames array", "d": "8/2015"}, {"body": "perlun guide page advocates use also found similar question stack overflow seem use instead may need assign array input helper closely resembles normal html input believe preferred way add class name use", "d": "8/2015"}, {"body": "reproduce one could use x classnames hello seems one must refactor x class hello", "d": "8/2015"}, {"body": "reproduce one could use x classnames hello seems one must refactor x class hello may regression nt believe intended used way nontheless people appear use decide want case", "d": "8/2015"}, {"body": "seem use classnames instead class may need assign array input helper closely resembles normal html input believe preferred way add class name use class possibly used work w ember similar indeed change sense stefanpenner live us changing definitely add list breaking changes case", "d": "8/2015"}, {"body": "breaking behavior appears upgrading", "d": "8/2015"}, {"body": "may regression ya regression", "d": "8/2015"}, {"body": "work fine last time checked saucelabs yet support ie edge add ci run look", "d": "8/2015"}, {"body": "checked windows edge support yet", "d": "8/2015"}, {"body": "michaelvdheeren issue adding sauce support please update title description stands ticket pretty vague sure actionable steps could take close", "d": "8/2015"}, {"body": "mixonic run tests edge green close michaelvdheeren sure soon aware sauce supports edge enable", "d": "8/2015"}, {"body": "mixonic question workshas validated badge could added last one nono saucelabs nt support yet verifying green would already help stefanpenner agreed verifying test would already help us thanks help", "d": "8/2015"}, {"body": "yup seems good", "d": "8/2015"}, {"body": "michaelvdheeren channel pages emberjscombuilds site include link run full test suite allows run test suite browser available helpful various mobile platforms please report issues supported browsers test", "d": "8/2015"}, {"body": "rwjblue thanks tip nt know", "d": "8/2015"}, {"body": "general syntax avoided deprecatedremoved template usage likely deprecated objectjs usage sometime cycle agree definitely intended change point look figuring going work around likely already thought use instead demo", "d": "8/2015"}, {"body": "yeah addon code definitely ways around glance debugging shows release also seems method never gets called release relying observer never gets triggered compared", "d": "8/2015"}, {"body": "interestingly seems happens passing property routecontroller component gt still works controllersapplicationjs still works export default embercomponentextend foo hello textbinding foo", "d": "8/2015"}, {"body": "release branch working closed believe", "d": "8/2015"}, {"body": "thanks checking confirming", "d": "8/2015"}, {"body": "alexspeller goal making doc privacy settings explicit seem like public api pr would welcome marking public beta", "d": "8/2015"}, {"body": "subclass natives nt reasonable amp performant way two potential ideas use lodash unlock efficient treeshaking builds lodash transition embers helpers follow adapter similar lodash pattern suspect using lodash may better option believe making work wontfix issue please note nt meant chainable helpers rather quirk todays internals require prototype extensions observability sideaffect friends available via method began working alleviate internal dependency making redundant nt bring completion", "d": "8/2015"}, {"body": "okay using want use prototype extensions turned true see lodash seems like better option way get propertybased ease via lodash luck", "d": "8/2015"}, {"body": "way get propertybased ease filterby propname wantedvalue via lodash luck unsure know mappers support deep properties lodash using emberenumerablefilterbyapply array function want use filterby prototype extensions turned missing feature think might make good addon territory set helpers similar following might interesting", "d": "8/2015"}, {"body": "exists however work days ago", "d": "8/2015"}, {"body": "stefanpenner said use lodash embercliembercli unlock efficient treeshaking builds lodash mean ember version lodash included think perhaps context confusion ran problem chaining using everywhere maintaining embercli addon design prototype extensions turned means addon significant amount data manipulation one perform large bit heavy lifting deep dive enumerable mixin force inclusion third party library like lodash first one seems like disservice ember addon authors second seems like insidious expectation consumers addon advice also managed handle array manipulation ember addon side could find way accomplish described redundent probubly slated go away coldsweat", "d": "8/2015"}, {"body": "mean ember version lodash included means using lodash pay go pr explains", "d": "8/2015"}, {"body": "final solution two fold remove internal dependencies second allow people use something like lodash without addon include embercliembercli", "d": "8/2015"}, {"body": "mean creating streams local keywords", "d": "8/2015"}, {"body": "yes", "d": "8/2015"}, {"body": "dmagunov create jsbin jsfiddle embertwiddle example issue", "d": "8/2015"}, {"body": "app example please look console output correct order index sub happens views didinsertelement event use emberlegacyviews addon git", "d": "8/2015"}, {"body": "believe krisselden reasonrationale", "d": "8/2015"}, {"body": "insert dom fires didinsertelement reverse order child parent nt actually happening insertion event ordering happen different phases", "d": "8/2015"}, {"body": "stefanpenner correct ordering correct dom rendered top bottom hooks called bottom precisely seeing", "d": "8/2015"}, {"body": "believe idea calling hooks reverse order allows leafy parts size selves parent ultimately order one wants likely depends usecase suspect someday may support multiple passes allow forms", "d": "8/2015"}, {"body": "rwjblue components didinsertelement events fires correct order parent child", "d": "8/2015"}, {"body": "specifying controller removed", "d": "8/2015"}, {"body": "likely either stray one sitting around repo using addon using take look stack deprecation trace object triggering", "d": "8/2015"}, {"body": "linearza also may help isolate issue creating code example jsbin jsfiddle embertwiddle", "d": "8/2015"}, {"body": "going close happy reopen provide details", "d": "8/2015"}, {"body": "yes sorry havent gotten around yet search complete repo node modules bower components included instance could find liquidfire addonjs containing modals dont use anyway uninstalling liquidfire didnt effect current upgrade rather major postponed deprecation fixes ill reopen issue things clearer thanks anyway", "d": "8/2015"}, {"body": "linearza understood please let us know track need additional help", "d": "8/2015"}, {"body": "jasonmit think example embertwiddle code uses also include method route see added render template method example like use something nonstandard like controller singleton app need define render template well nt think default make implementation choices automatically could seem intention rendertemplate method seems like plan customization wiring controller works also need define behavior method also great provided thorough example links source code think feel strongly changing default implementation method would great idea create issue ember rfc repo discuss see think plan going forward discuss issues proposals api changes using rfc process creating issue rfc repo also could create pull request go proposal issue demonstrate implementation maybe merged also title issue reads bug think proposal feature bug case controller singleton current behavior seems accurate container asked lookup controller provides new instance default using seem odd controller already setup route second instance would used render think container works nonsingleton factories whenever container asked instance may create new one issue illustrates change behavior route default implementation would need changed pass default options render method well template name pass controller instance see", "d": "8/2015"}, {"body": "pixelhandler disputing fact entirely unconventional something question asked debugging saw nt pass instance controller receives argument onward instead attempts container lookup based routename triggers new instance controller generated seems unnecessary since already instance pass explicitly nt believe changes behavior existing implementation eliminates unnecessary lookup sideeffect eliminates problem", "d": "8/2015"}, {"body": "provide jsbin embertwiddle reproduction", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "page seems place documented nt see listed api docs seem like bug though however since nt seem documented api docs confused expect seems guides api docs lack explanation lifecycle hooks curious landed release without docs aside blog post announcing maybe supposed use see blog post mentions expected accurate opinion seem bug sure finished ready primetime curious find documentation must missed somehow", "d": "8/2015"}, {"body": "pixelhandler seems guides api docs lack explanation lifecycle hooks curious landed release without docs aside blog post announcing miss adding docs features added work working updated guides api docs correct mistake also discussed decided landing new featuresapi without docs future rule existed series feel important usage various hooks nt really promoted yet definitely important work significant portions functionality still landed likely time indeed bug firing new attributes set prior values proxied back root component likely ordering problem sure yet", "d": "8/2015"}, {"body": "believe fixed double check mobile atm", "d": "8/2015"}, {"body": "confirmed works properly call absolutely suggest whenever implement framework hook call requirement", "d": "8/2015"}, {"body": "updating title issue track requirement", "d": "8/2015"}, {"body": "ah good mmun take original pull request embercollection confirm always call hooks great could said firmly docs true", "d": "8/2015"}, {"body": "tl dr robert right adding fine nice avoid possible small performance implication creates weird thing hooks supposed contract necessary super", "d": "8/2015"}, {"body": "ok understand new title suggests still bug one elegantly avoided via ugly hack", "d": "8/2015"}, {"body": "issue ultimately embercli resolver tracking issue basically happening use dashless helper without ordered hash arguments end trying look deep inside htmlbars embercli resolver updated use namespace separator expects format using regexp match need fix parsename function deal properly", "d": "8/2015"}, {"body": "also error occurs without shadowing property demo", "d": "8/2015"}, {"body": "timevans rwjblue issue closed since issue tracked embercliemberresolver project", "d": "8/2015"}, {"body": "still changes make ember stable branch like land changes ember changes resolver required", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "rwjblue heart thanks handling quick responsive manner", "d": "8/2015"}, {"body": "second interesting scenario remove default value positionalparam sets value fine however named assignment work", "d": "8/2015"}, {"body": "mmun positional params overwriting properties component appear", "d": "8/2015"}, {"body": "miracleblue updated embertwiddle example using release channel ember see noticed positional params seem work passing named param assigning value longer works appears using positional params property eg thing allow thing assignment component work use thing defined component prototype way documentation positional params first time heard", "d": "8/2015"}, {"body": "interesting seen different examples specifying positionalparams class property seems different effects sat aug bill heaton notifications githubcom wrote miracleblue update embertwiddle example using release channel ember see noticed positional params seem work passing named param assigning value longer works way documentation positional params first time heard reply email directly view github", "d": "8/2015"}, {"body": "way documentation positional params pixelhandler please create new issue document positional params nt lose track first time heard discussed slack showing examples avoid helper deprecations app days ago", "d": "8/2015"}, {"body": "rwjblue created oh yeah remember undocumented features stable branch must live twiddle somewhere lol", "d": "8/2015"}, {"body": "use case trying perform conditional redirect app loads persist query params grabbing query params transition argument trying pass along current workaround rename query params modified controller property names example javascript beforemodel function transition transitionqueryparamsfooter transitionqueryparamsisfootervisible transitionqueryparamsfooter delete transitionqueryparamsfooter thistransitionto test queryparams transitionqueryparams", "d": "8/2015"}, {"body": "ismyrnow nt think bug instead try variation strategy solve use case see testcontroller added computed property query param value controller javascript import ember ember export default embercontrollerextend queryparams sidebar footer sidebar false footer false isfootervisible embercomputedalias footer instead swapping queryparams transition use computed property", "d": "8/2015"}, {"body": "sort question generally better suited stack overflow discussemberjscom community slack ember ember data prefer track bugs via issue tracker nt seem like bug please explain think actually bug going close issue please link discussso post issue folks coming across issue future see resolution", "d": "8/2015"}, {"body": "well think bug reload true seems working fire reloading model store even route model hook called", "d": "8/2015"}, {"body": "question embercli ember", "d": "8/2015"}, {"body": "question embercli ember historically emberjs choice partials disambiguate nonpartials prefixed embercli dasherized became", "d": "8/2015"}, {"body": "yeah make partials differ nonpartials add leading would okay style ruby rails leading dash really good edit operate people work system gui could open editor like sub lime text mate edit terminal really inconvenient anyway thoughts", "d": "8/2015"}, {"body": "believe dash optional choose use work embercli dasherize things rule simplify naming collisions unlikely change", "d": "8/2015"}, {"body": "seems related", "d": "8/2015"}, {"body": "tehmaestro guess maybe something plan move toward data bindings actions methodology setting component value nt mutate value suspicious example good use observers count value magically observed declared template likely evaluates undefined property controller least nt see prototype controller property", "d": "8/2015"}, {"body": "tehmaestro perhaps would better implementation example data bindings actions methodology get works lot happening well slowly updating code following deprecation suggestions could make update apps perhaps worth updating implementation depended observer update", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "hi mmun explain mean say things exposed privately currently trying build reusable component used block form run assertion init currently checks wanted make check since template deprecated according api docs always comes back undefined exposing privately solve would need exposed privately", "d": "8/2015"}, {"body": "turned htmlbars keyword instead property component means available javascriptland", "d": "8/2015"}, {"body": "probably make public requires feature flag orthogonal issue", "d": "8/2015"}, {"body": "pretty dubious specifically escapedness apply first argument add subexpression write ast transform rewrites would remove one impurities", "d": "8/2015"}, {"body": "subexpression public needed internally nt time rfc documentation process docs transform support also could likely take care", "d": "8/2015"}, {"body": "rwjblue oh sweet", "d": "8/2015"}, {"body": "htmlunsafe feels bad", "d": "8/2015"}, {"body": "questions want pure component would want live assign knows everything unsure setting properties notes required js code need identify passed first argument block content specified block", "d": "8/2015"}, {"body": "implemented", "d": "8/2015"}, {"body": "public api suggest using app config sort thing generally work nt think regressions around getset ember might want ask sort question stack overflow community slack going close happily reopen reproduction jsbin embertwiddle vs", "d": "8/2015"}, {"body": "believe ember data thing confirm reopen ember data repo", "d": "8/2015"}, {"body": "yes emberdata", "d": "8/2015"}, {"body": "jelhan open emberdata", "d": "8/2015"}, {"body": "yeah right sorry already ongoing debate emberdata could found", "d": "8/2015"}, {"body": "provide runnable reproduction embertwiddlecom might easier since closer normal ember cli structure trouble spotting issue bat", "d": "8/2015"}, {"body": "also bit background instanceinitializers called single argument two format initializers instanceinitializers general initializers good registering scheduling injections instanceinitializers good looking things registrationsinjections done example nt really seem like needs look things actually registering new thing setting injection belongs initializer instanceinitializer describe specific errors getting assuming initializer pasted using initializer definitely function", "d": "8/2015"}, {"body": "going go ahead close happy reopen answer questions last comment", "d": "8/2015"}, {"body": "yes would expect work though using seems like better choice vs using alias", "d": "8/2015"}, {"body": "course example happens computed property", "d": "8/2015"}, {"body": "funtusov understood definitely seems like bug would mind submitting failing test case", "d": "8/2015"}, {"body": "following code worked couple days ago canary build morning still working template component", "d": "8/2015"}, {"body": "yep known issue fixed glimmercomponent branch set changes landing shortly ships week", "d": "8/2015"}, {"body": "seems issue close", "d": "8/2015"}, {"body": "funtusov might issue unsure though love pr failing test case though way ensure get exact scenario nailed", "d": "8/2015"}, {"body": "goes", "d": "8/2015"}, {"body": "awesome thanks submitting failing test pr going close issue track", "d": "8/2015"}, {"body": "try reserve issue tracker bugs framework seems like style question better suited stack overflow community slack needhelp channel please feel free cross post issue anyone might stumble upon issue future", "d": "8/2015"}, {"body": "create public fyi deprecated", "d": "8/2015"}, {"body": "stefanpenner deprecated favor objectassign add deprection log", "d": "8/2015"}, {"body": "stefanpenner saying deprecated generally would like deprecate favor new another story smilecat", "d": "8/2015"}, {"body": "likely merge", "d": "8/2015"}, {"body": "ya nt pr definitely accept pr making public", "d": "8/2015"}, {"body": "rwjblue stefanpenner seems marked public think issue closed api pr", "d": "8/2015"}, {"body": "duggiefresh thank saving us", "d": "8/2015"}, {"body": "anything two rose bouquet tulip", "d": "8/2015"}, {"body": "sure one api method missing warrants rfc issue ya nt think needs rfc feels like omissionbugfix would submit bugfix beta release maybe pr emberjsowners get confirmation", "d": "8/2015"}, {"body": "afaik conform completely native array imo intentionally emberspecific mutation methods proxied like etc notice nt proxied reason nt nt cause cp invalidationobserver notification embersortable array proxy needs sorting behavior otherwise obviously implement necessary notification hooks roll", "d": "8/2015"}, {"body": "satchmorun yes behavior describing correct sounds like want something like one way still listens upstream changes implement totally agree info deprecations page website repo nt really bug going go ahead close issue love pr website repo adding wonderful details", "d": "8/2015"}, {"body": "wonderfully detailed question thank really sure bug ember use issue tracker top head know trying possible generally transitioning provide dynamic segment values models thing often requested call relative linkto confirmed indeed possible today could create new issue emberjsrfcs repo detailed problem explanation request new public api added handle scenario", "d": "8/2015"}, {"body": "rwjblue maybe bug using routes without dynamic segments nt throw error strange works certain circumstances others making strict parameter requirements might help avoid type problem future", "d": "8/2015"}, {"body": "rwjblue semirelated note considered valid use case use linkto without route name specified example use case use linkto like open liquidfire modal nav bar application level worked fine us would trigger query param change without changing route linkview linkcomponent change behavior substantially different outlined", "d": "8/2015"}, {"body": "chbonser yes query params changing perfectly valid use case", "d": "8/2015"}, {"body": "ksnyde oh totally agree wonderful detail mostly asking thought similar issue reviewed struck may underlying issue", "d": "8/2015"}, {"body": "suspect feel free close rather track id long place radar", "d": "8/2015"}, {"body": "hi similar issue reduced test case set radio input components rendered loop ids determined index values computed inventory controller value enumerable used loop changes components rerendered issue comes values shared rendered outputs hunch glimmer optimizing rerenders looking coming keeps items dom overlap happening", "d": "8/2015"}, {"body": "fwiw error messages ember still errors", "d": "8/2015"}, {"body": "mixonic inputs needing known ids problem ember right bump lots scenarios like input unique explicit id needed labels throws error block changes transition occurs usually always liquidfire involved never actually instanced id present one instance torn nt removed yet another activated something thought trying build template helpers generating unique ids form inputs something like given id consumed assigned new feels heavy solution avoiding teardown animationif block switching cases", "d": "8/2015"}, {"body": "sberan working well chrome firefox", "d": "8/2015"}, {"body": "also modifying property within didinsertelement hook deprecated stated lot deprecation warnings", "d": "8/2015"}, {"body": "ca nt reproduce anymore either strange closing", "d": "8/2015"}, {"body": "locks close going add things done checklist", "d": "8/2015"}, {"body": "rwjblue still coordinating saladfork resolved either way end week", "d": "8/2015"}, {"body": "going go ahead close keep eye details angle bracket component changes enabled changing meaning quoted vs nonquoted attributes", "d": "8/2015"}, {"body": "default actions call preventdefault event triggered result invoking action disable setting action docs templates section views gone ca nt remember history around opt vs opt maybe behave possibly something discussed changed runup make less surprising obviously changing default would breaking change series", "d": "8/2015"}, {"body": "rlivsey correct change somecomponenthbs fires documented however feel like example like included docs people nt confused working multiple events", "d": "8/2015"}, {"body": "tsteuwer rlivsey awesome nt know passing take back comments breaking web seem easy actions events miguelcobain updated twiddle solution using see", "d": "8/2015"}, {"body": "yes solved problem thanks everyone", "d": "8/2015"}, {"body": "browser issue behavior different browsers made video illustrate issue", "d": "8/2015"}, {"body": "dmagunov provide sample code showing mean sounds like sorting query parameters aware possible want sorting array cause difference unless saying emberitself sorting differently still need example code show reproduce thanks", "d": "8/2015"}, {"body": "similar issue seems previously reported fixed ago nt seem probable changes routerecognizer quite time would seem impact either still sure experiencing still digging provide example code reproduce", "d": "8/2015"}, {"body": "ca nt create fully functional example via embertwiddle jsbin shows linkto issue maybe related query parameters sort order", "d": "8/2015"}, {"body": "created sample application git", "d": "8/2015"}, {"body": "fyi merged adding helpful warning use route named", "d": "8/2015"}, {"body": "sort obvious case one could also work around naming route something different keep path needed", "d": "8/2015"}, {"body": "jayphelps confirm warning helpful least folks know may issue", "d": "8/2015"}, {"body": "thanks jul pm bill heaton notifications githubcom wrote marksalpeter think issue ran documented well instead routermap function thisroute foo function thisroute bar function thisroute baz use function thisroute use index loading templates routermap function thisroute foo function thisroute bar function thisroute baz function reply email directly view github", "d": "8/2015"}, {"body": "abfx noticed jsbin crashes browser tried running locally problematic well gist work locally work previous release ember", "d": "8/2015"}, {"body": "pixelhandler nt work recreated issue new fiddle apparently works remove target action", "d": "8/2015"}, {"body": "passing something intended work likely continue work strongly suggest use improved actions much easier reason uncertain intended future abfx going close believe found problem please reopen let know missed something", "d": "8/2015"}, {"body": "mixonic thanks improved actions safe way go ember road", "d": "8/2015"}, {"body": "abfx yes absolutely", "d": "8/2015"}, {"body": "uncertain intended future viewname mixonic deprecated think appropriate primarily component world", "d": "8/2015"}, {"body": "mixonic rwjblue improved actions inside main controller ca nt pass component parent action", "d": "8/2015"}, {"body": "stefanpenner news", "d": "8/2015"}, {"body": "sure issue helper inside loop helper nt seem fire update one properties thoughts", "d": "8/2015"}, {"body": "also experiencing issue maybe way manually trigger helper refresh", "d": "8/2015"}, {"body": "sloppy got work wrapping component block forcing block compute false true immediately secession adding code else block causes blip sortable disappears updated twiddle", "d": "8/2015"}, {"body": "stevehanson thanks example case ember rerenders whole list focus selection lost", "d": "8/2015"}, {"body": "dmagunov yeah definitely ideal scenario focus selection would like preserve since list rerendered dropping sortable element new position nt seem like would focus selection worry", "d": "8/2015"}, {"body": "stevehanson case", "d": "8/2015"}, {"body": "dmagunov oh see thought problem jquery ui sortable case seems little trickier", "d": "8/2015"}, {"body": "see developers forgotten us", "d": "8/2015"}, {"body": "ran issue jrjohnson twiddle similar code however issue click checkbox longer responds changes things noticed helper recomputing checked attribute set dom whether seem matter", "d": "8/2015"}, {"body": "jrjohnson poking around fixed problem twiddle specifying action mystery still remains try build twiddle replicate", "d": "8/2015"}, {"body": "trying disentangle issue seems couple different things going jrjohnson aldhsu two issues twiddle helper automatically observer items array automatically prevents default events handles prevents checkbox showing checked property changes fixed example main issue related using jquery sortable experienced quantumking dmagunov stevehanson see issue sure actually going yet work quick switch twiddle seems show even issues", "d": "8/2015"}, {"body": "rwjblue nt work properly either latest versions issues differs main problem glimmer engine tell content dom changed refresh sort finished model updated", "d": "8/2015"}, {"body": "rwjblue thanks quick reply apologies nt understand helpers analogs computed properties dom would recomputed unless observe changed forced recomputes helpers observed arrays passing add observers", "d": "8/2015"}, {"body": "aldhsu yep definitely works way", "d": "8/2015"}, {"body": "rwjblue nt know either things thanks", "d": "8/2015"}, {"body": "experiencing issue", "d": "8/2015"}, {"body": "seems working properly demo closing issue happily reopen reproduction", "d": "8/2015"}, {"body": "sorry pixelhandler nt get chance create twiddle thanks rwjblue investigation code seems problem caused component includes internal dependency embercliautoregisterhelpers removed error went away everything continued work fine sheldonnbbaker might worth trawl see also problem whilst latest version embercliautoregisterhelpers code disable behaviour ember things remain broken ember", "d": "8/2015"}, {"body": "whilst latest version embercliautoregisterhelpers code disable behaviour ember things remain broken ember stevesims fixed nt seem like released yet maybe create issue asking release", "d": "8/2015"}, {"body": "really feels like browser bug sure", "d": "8/2015"}, {"body": "stefanpenner think rfc needed expose additional public api", "d": "8/2015"}, {"body": "btw small note promises tab ember inspector seems cases information would needed debug exception model id etc label column would nt easy add label promise id error message occuring inside promise like cases example right read property internalmodel undefined exception staging environment development ca nt explain trying check findfindrecords methods ca nt see anything wrong checking promises tab see lots promises rejected label fetching frontend model relationshipelement id may lead understand exception thousands promises inspector tab easy understand except exact id promise failed edit got one promises inspector tab fulfillment rejection value typeerror read property internalmodel undefined one label fetching frontend model id know coming nt seem possible search fullfilment value ember inspector tab least look rejected promises isolate one caused exception useful future think whole process least explained debugging docs ember", "d": "8/2015"}, {"body": "hey sounds like great little improvement inspector open issue also nt forget", "d": "8/2015"}, {"body": "done thanks stefan", "d": "8/2015"}, {"body": "adding feature request would ember inspector team add promise labels second argument error event", "d": "8/2015"}, {"body": "leooo might best place report", "d": "8/2015"}, {"body": "hmm point ember inspector team nt managing error event right mean nt know guys split work still posting threads suppose part request adding promise labels error event would nt", "d": "8/2015"}, {"body": "team need cross post easier track issues level used", "d": "8/2015"}, {"body": "stefanpenner think leooo proposing users access promise labels failed promises without look inspector", "d": "8/2015"}, {"body": "exactly sorry clear", "d": "8/2015"}, {"body": "ah get easy adding", "d": "8/2015"}, {"body": "teddyzeenny leooo", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "jmurphyau happen little time look one", "d": "8/2015"}, {"body": "yep", "d": "8/2015"}, {"body": "hit snag well way help expedite fix", "d": "8/2015"}, {"body": "mikenorth start along lines failing test case understand failing try fixing items would super helpful", "d": "8/2015"}, {"body": "seen issue first instinct check object fix problem wanted investigate null valid behaviour nt want chuck check potentially hiding actual problem nt chance yet get next days", "d": "8/2015"}, {"body": "nt think actually null value wow scenariocode path complex decided solve issue hand rather trying troubleshootdebug null see pr", "d": "8/2015"}, {"body": "result null query params longer sticky far trace back transition inside setup route null nt", "d": "8/2015"}, {"body": "pixelhandler problem build workaround point core feature set readonly attribute programatically want know proper way", "d": "8/2015"}, {"body": "stefanpenner specialcasing seems like good idea btw broken also noticed especially awkward making components wrap ca nt really expose attribute component since mere presence make input always disabled", "d": "8/2015"}, {"body": "definitely seems bad emberselect removed would love review pr fixing nt bug framework closing issue", "d": "8/2015"}, {"body": "rwjblue bug framework goal get people first upgrading latest fixing deprecations seems like built needs work people get around removing", "d": "8/2015"}, {"body": "raytiley nt bug framework available ember therefore bugs nt part framework saying would love entertain pr fixes nt something ember needs go forward since train moving tldr unlikely work sorry confusing", "d": "8/2015"}, {"body": "would still call bug though perhaps nt really discussed view bugs tracked rwjblue going reopen pending conversation offline", "d": "8/2015"}, {"body": "using inbrowser datastore setup start test seems like valid way set things unless suggesting even initial test state created using ux also seems reasonable expect startapp helper actually starts app way kick instanceinitializers without first visit page", "d": "8/2015"}, {"body": "swamped perf stuff hopefully get soon turned tricky transpose test suite invest time soon", "d": "8/2015"}, {"body": "think explains pretty gnarly leak app sorry plus one comment want follow along", "d": "8/2015"}, {"body": "came across problem traced problem found exactly problem us active class nt applied correctly reused template linkto helper linkcomponent solution us could used follows search emberjs emberdebugjs replaced line reads targetroutename wrapper fixes problem commented line line might need elsewhere javascript function computeactive view routerstate embermetalpropertygetget view loading return false currentwhen currentwhen embermetalpropertygetget view targetroutename currentwhen currentwhen viewhandleonlyqueryparamssupplied embermetalpropertygetget view targetroutename currentwhen currentwhensplit var len currentwhenlength lt len isactiveforroute view currentwhen iscurrentwhenspecified routerstate return embermetalpropertygetget view activeclass", "d": "8/2015"}, {"body": "update seems bug still", "d": "8/2015"}, {"body": "closing favor trying consolidate", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "going take additional approach fix issue qunit release modules force people var related issue w cibernox", "d": "8/2015"}, {"body": "think make sense expose component well need set class depending presence block root element nt think possible components tagless components course", "d": "8/2015"}, {"body": "chadhietala submit failing test pr add checklist", "d": "8/2015"}, {"body": "rwjblue branch addressing exactly case happens class becomes overridden inner template really special case much larger problem", "d": "8/2015"}, {"body": "wycats awesome branch make requested failing test pass wink", "d": "8/2015"}, {"body": "confirmed fixed", "d": "8/2015"}, {"body": "hated implemented happy see go", "d": "8/2015"}, {"body": "nice summary issues aortbals nt appear affect components component see seems affect bound attributes issues", "d": "8/2015"}, {"body": "seems fixed", "d": "8/2015"}, {"body": "yeah sorry fixed via build system updates thanks commenting", "d": "8/2015"}, {"body": "issue useful reuse common nested route different contexts guide documentation implies behavior", "d": "8/2015"}, {"body": "twiddle demonstrating bug wrote finding issue see linkto apples index route take fruitdetail route oranges", "d": "8/2015"}, {"body": "happy review entertain pr since emberselect removed public api closing issue", "d": "8/2015"}, {"body": "really annoying acceptance tests helper wo nt trigger keyup event want events properly fire since ca nt use change event probably would triggered", "d": "8/2015"}, {"body": "fryie unrelated issue reported seems similar though", "d": "8/2015"}, {"body": "apologies wanted point keyup feasible workaround sense related", "d": "8/2015"}, {"body": "stefanpenner jkgisme recently discovered using helper trigger actions specified events detailed example twiddle jkgisme", "d": "8/2015"}, {"body": "actually lot events nt work input helper right including anything mouse related", "d": "8/2015"}, {"body": "ya tracking try fill happening mobile", "d": "8/2015"}, {"body": "serious problem setting two actions ca nt nt input helper ca nt believe ember still nt attributes like oninput onchange hope fixed asap", "d": "8/2015"}, {"body": "nt tested actions successfully used also use old fashioned html version hbs actions achieve", "d": "8/2015"}, {"body": "right supports", "d": "8/2015"}, {"body": "ya thought issue reporting regression aliased mistaken works properly events listed specifically using certain something intend support moment", "d": "8/2015"}, {"body": "ok yes add action change html input version leads wonder point ca nt really use feels like flawed ca nt easily way binding hbs time somewhat unusable event handling restrictions would nt better confuse things", "d": "8/2015"}, {"body": "jkgisme huh flawed works used huge majority ember applications without incident", "d": "8/2015"}, {"body": "twiddle linked would work project inadvertently ended using html way input boxes got brought wondering bc ton actions attached events worked way p bad dev nt actually remember", "d": "8/2015"}, {"body": "rwjblue expectation using helper syntactical sugar creating html input twoway binding value binding events onetoone binding events use bind directly actions must use one documented events reading guide misleading mention use input especially actions section gives link events tells dasherize nt dig finally reach page starting statement helper allows user events send actions realize nt going crazy nt going work saying wrong unexpected caused jump slack ask greeted people perplexed", "d": "8/2015"}, {"body": "seem fixed canaryrelease", "d": "8/2015"}, {"body": "confirm fixed thanks", "d": "8/2015"}, {"body": "rwjblue still problem fixed canary hit next release", "d": "8/2015"}, {"body": "already pulled stable branch confirm queued release released", "d": "8/2015"}, {"body": "idea bug introduced", "d": "8/2015"}, {"body": "miguelcobain introduced part rendering engine rewrite glimmer specifically related implementation attrs proxy preanglebracket component support every version since", "d": "8/2015"}, {"body": "using seeing class output twice output space every letter jsbin reference would also expect specialclass case include emberview nt additive completely replace expected dom generated dom", "d": "8/2015"}, {"body": "fixed released", "d": "8/2015"}, {"body": "thanks updated jsbin point issue spaces letters fixed well class names additive however specialclass still output twice", "d": "8/2015"}, {"body": "vaguely think another open issue duplicated classes ca nt search atm double check open one ca nt find", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "nt see anything looked related opened", "d": "8/2015"}, {"body": "reason ca nt used adding onclick example", "d": "8/2015"}, {"body": "burned release well revert back lot sort thing going", "d": "8/2015"}, {"body": "thought mention ran similar story rlivsey", "d": "8/2015"}, {"body": "ran day similar usecase want query string reflect current selected person list straightforward approach simply alias query param selected person id nt work forced make complex also leave comment make sure colleague nt try refactor back simpler version javascript export default embercontrollerextend queryparams selectedid selected selectedid null query params nt support computed properties set id manually see issue details selected embercomputed set person thisset selectedid person personget id null return person", "d": "8/2015"}, {"body": "politely poking would like users deal understand", "d": "8/2015"}, {"body": "latest release three channels seem working properly understanding actual bug stuckouttongue canary reopen someone explains missing smilingimp", "d": "8/2015"}, {"body": "tests pass thanks confirmation still fail need check going beta", "d": "8/2015"}, {"body": "please let know think reopened", "d": "8/2015"}, {"body": "things needed fix deprecations etc seemed missed getting", "d": "8/2015"}, {"body": "thanks quick feedback", "d": "8/2015"}, {"body": "timevans sure deprecated possible happened late version", "d": "8/2015"}, {"body": "perf testing using mechanism would allow us maintain ember current eventing mechanics moment without changing expected behavior tl dr performance boost across board", "d": "8/2015"}, {"body": "rwjblue closed favor rfcimplementation", "d": "8/2015"}, {"body": "commit nt fix run loop join ability turn mousemove", "d": "8/2015"}, {"body": "rwjblue", "d": "8/2015"}, {"body": "maybe need bundle talking points push work capture phase improved event dispatcher vague hard action issues annoying", "d": "8/2015"}, {"body": "stefanpenner branch working actually think added friday schedule talking point", "d": "8/2015"}, {"body": "awesome link submit wip review", "d": "8/2015"}, {"body": "pr coming soon finish walker also adding second flag resolution caching eg element handler repeated firing super fast", "d": "8/2015"}, {"body": "stefanpenner also agenda friday", "d": "8/2015"}, {"body": "sorry trying reference issue close", "d": "8/2015"}, {"body": "update many thanks", "d": "8/2015"}, {"body": "look api docs obliterated without deprecation warnings notices weirdly still mentions", "d": "8/2015"}, {"body": "kanongil darn definititely missed adding deprecation demo jsbin sorry function view component absolutely print deprecation working adding proper deprecation", "d": "8/2015"}, {"body": "rwjblue right breaking component functionality anything work around make futureproof", "d": "8/2015"}, {"body": "render complex list results ember took ember took tests", "d": "8/2015"}, {"body": "another related pr nice improvements", "d": "8/2015"}, {"body": "something interest added ghetto instrumentation get picture new code utilized following likely worse offender interms performance", "d": "8/2015"}, {"body": "another interesting set data seeing gets common also annotated actually descriptors note removed small n interestingly identical gets descriptor ones interesting typically cp set watchers often something totally static", "d": "8/2015"}, {"body": "another interesting thing mutabledependencies proxystream viewviewcontext viewcontroller providing value right still created inaddition even provide value enumeration gets unique object allocations add", "d": "8/2015"}, {"body": "bet gets template defaultlayout defaulttemplate layout layoutname templatename template returned niche features vast majority components nt use would suggest anyone using new app", "d": "8/2015"}, {"body": "yup ideas make cp faster also nt use speculatively like", "d": "8/2015"}, {"body": "gets removed canary", "d": "8/2015"}, {"body": "rwjblue nice", "d": "8/2015"}, {"body": "performance initial component render times seems significantly slower ember ember updated jsbin appears initial render performance legacy components apposed angle brackets perform better near parity machine latast release machine although approaching parity going forward still work todo legacy style components getting better place focus performance likely continue focused angle bracket components exist shed handcuffs legacy components htmlbars blazingly fast goal continue make ember portions close zerocost abstractions possible thanks patiences rwjblue helping drive patches", "d": "8/2015"}, {"body": "super awesome thanks lot work going performance issues", "d": "8/2015"}, {"body": "super awesome thanks lot work going performance issues sandstrom example still near parity although original jsbin example involves nested likely factors", "d": "8/2015"}, {"body": "complex list rendering performance continues improve beers", "d": "8/2015"}, {"body": "seeing issue components dynamically changing templatelayoutname calling rerender suggestion hotfix behaviour workaround", "d": "8/2015"}, {"body": "changing template layout initial render currently supported bug tracked issue submitted failing test case", "d": "8/2015"}, {"body": "original issue partially linked te deprecation mentions didinsertelement instead didrender", "d": "8/2015"}, {"body": "hi noticed also hook component seems change bound property observer triggered parentview could related appcontrollersmycontrollerjs propertychanged function triggered consolelog changed observes property dosomething function thisset property false init bound controller updated component updates tried use component hooks worked examples ember outputs changed ember", "d": "8/2015"}, {"body": "thanks providing demosexamples definitely made easy confirm things fixed double observer firing issue resolved rounders updated jsbin current release branch double firing observers solved tehmaestro example seems unrelated issue since double firing observers seem legitimate issue report separately vvisheshd jsbin works properly fires latest release builds laynegt jsbin works properly latest release builds", "d": "8/2015"}, {"body": "thanks fix opened issue", "d": "8/2015"}, {"body": "rwjblue thanks", "d": "8/2015"}, {"body": "mixonic looks like indeed possible could please comment serve solution avoided", "d": "8/2015"}, {"body": "using component applicationview allow customization classnames whatnot definitely going number negative results well example controller correct definitely go forward solution nothing wrong using addon require functionality", "d": "8/2015"}, {"body": "rwjblue thanks comment mean controller incorrect tried access controller properties looks ok anyway updated answer comment", "d": "8/2015"}, {"body": "update jsbin see issue fixed canary", "d": "8/2015"}, {"body": "ported canary still seeing issue", "d": "8/2015"}, {"body": "believe done closing please reopen checklist something misunderstood", "d": "8/2015"}, {"body": "set right", "d": "8/2015"}, {"body": "thanks yall", "d": "8/2015"}, {"body": "seems working properly closing reopen fuller reproduction current versions", "d": "8/2015"}, {"body": "get problem use return type refresh model function replace promise object like return ajax xxxxx setupcontroller called nt know reason code model function model function params return type refresh return ajax xxxx", "d": "8/2015"}, {"body": "jslippy poplark similar problem code nt triggering injected service would job return would cause promise nt go along thus would nt called promises better return either another promise synchronous value switched order functions inside worked info", "d": "8/2015"}, {"body": "versions ember ie tested provide jsbin demo aid tracking", "d": "8/2015"}, {"body": "rwjblue sure problem still present since know avoid report back make demo", "d": "8/2015"}, {"body": "nt appear affect components component see seems affect bound attributes issues", "d": "8/2015"}, {"body": "thanks aortbals research closing favor updating summary issues", "d": "8/2015"}, {"body": "issue", "d": "8/2015"}, {"body": "closing favor trying consolidate", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "nt think bug bindings really work things mutable boolean values array nt fit bill issue exists array strings", "d": "8/2015"}, {"body": "shipped closing", "d": "8/2015"}, {"body": "sadly missed work ember updated internals move reserved word flagged deprecation removed next lts release", "d": "8/2015"}, {"body": "forked example repo peec needed mods", "d": "8/2015"}, {"body": "still seem issues elements paperradiobutton papercheckbox think issue polymer side ember see", "d": "8/2015"}, {"body": "polymer elements nt use works paperradiobutton checkbox drawer panel others use work see", "d": "8/2015"}, {"body": "confirm matheusdavidson reports chrome however seems work firefox suspect ember js andor polymer incompatibilities involving built shadow dom chrome uneducated guess though", "d": "8/2015"}, {"body": "tried browsers none works depending config shadow shady dom look like working transition routes see bug browsers tried use ember polymer month success told polymer members trying create interop get things working take time", "d": "8/2015"}, {"body": "able see main issue related polymer ready callback fires basically polymer element getting generated dynamically say glimmer ready fire content available able work around issue monkey patching broken components use attached callback instead ready fires element actually inserted page dom", "d": "8/2015"}, {"body": "thanks insight dnegstad", "d": "8/2015"}, {"body": "currently workaround use instance element polymer inside ember dark", "d": "8/2015"}, {"body": "concluded use emberpaper addon instead uses css angular material goes though googles ux team validation aug skrev steffen brem notifications githubcom currently workaround use instance paperinput element polymer inside ember dark reply email directly view github", "d": "8/2015"}, {"body": "finally solved", "d": "8/2015"}, {"body": "looking", "d": "8/2015"}, {"body": "think issue closed option documented", "d": "8/2015"}, {"body": "thanks diogomafra", "d": "8/2015"}, {"body": "tomdale told solution fair say never really understood get working way deferreadiness really think deserves separate blogpost least shed light proper way thanks short awesome description solve", "d": "8/2015"}, {"body": "tomdale threw one together someone issue would mind correcting something wrong feel free reuse anything makes sense put ember context could take post", "d": "8/2015"}, {"body": "spree ember lib array promises service spreeember addons push promises initializers host app initializes waits promises resolve application beforemodel hook rsvp super clean", "d": "8/2015"}, {"body": "hhff sounds promising could extrapolate code", "d": "8/2015"}, {"body": "actually still working local branch post ready", "d": "8/2015"}, {"body": "rwjblue admit pretty stupid ca nt figure simple way set attribute integer using vmalloc set property observe property cast integer set value could check input type number attribute parseint", "d": "8/2015"}, {"body": "totally one current behavior nt make sense \u05d9\u05d5\u05dd ben borowski notifications githubcom wrote rwjblue admit pretty stupid ca nt figure simple way set attribute integer using input vmalloc set property observe property cast integer set value attr could check input type number attribute parseint reply email directly view github", "d": "8/2015"}, {"body": "vmalloc quick hacky workaround set input valuemodelordinal case component also need set initial value ordinal think must better way", "d": "8/2015"}, {"body": "tracking failing test pr", "d": "8/2015"}, {"body": "still kinda fuzzy bug needs happen igort put together runnable demo jsbin something dgeb addressed yet know bunch work done already", "d": "8/2015"}, {"body": "rwjblue nt addressed yet complexity registry container relationships registry multiple containers registry fallback registry course recursive communication possible chain related registries containers straightforward instance container might received registration fallback registry registration reset fallback registry would expected container entries cleared new registration added key container direct registry fallback registry would replace fallback registry entry unclear whether previously instantiated objects cleared look problem registry container notifications murkier seems simple alternative call force reset entry container igort although nt automatic work", "d": "8/2015"}, {"body": "shim threw together nearestwithproperty works ember", "d": "8/2015"}, {"body": "suffers problem nt use custom ids possibly relevant code js graphhasgraphparentjs init thissuper arguments var graph thisnearestwithproperty isgraph thisset graph graph nfgraphjs init thissuper arguments var graph thisget graph graph graphregistergraphic graphregisteredgraphicjs init thissuper arguments var graph thisget graph graph graphregistergraphic", "d": "8/2015"}, {"body": "im also getting trouble trying set aria values input fields guess setting default value getting changes model values flow cause issue case nt runloop ensure final value used rendering", "d": "8/2015"}, {"body": "closing longer exposed externally without addon", "d": "8/2015"}, {"body": "submitted update seems still issue swapping location fixes issue likely means another case tag messing things changes url functions css based solution prevent tag used use something element id also embercli issue ember one see closing favor", "d": "8/2015"}, {"body": "ok pretty stale solution call overriding hooks case private one going close nt really see way forward happy reopen others better idea", "d": "8/2015"}, {"body": "joshforisha mean using fetch instance instead using also pass directly think would work purposes test", "d": "8/2015"}, {"body": "sorry super long delay seems working", "d": "8/2015"}, {"body": "lol problem thanks follow feeling working since series sam tue aug pm robert jackson notifications githubcom wrote closed reply email directly view github", "d": "8/2015"}, {"body": "changed way deal propsattributes may fixed nt setup locally test", "d": "8/2015"}, {"body": "services documented current guides gladly help review pr changestweaks guide api docs closing since guide exists", "d": "8/2015"}, {"body": "underlying code different iterations believe working properly closing let know still broken jsbin would helpful reopen", "d": "8/2015"}, {"body": "someone confirm still issue", "d": "8/2015"}, {"body": "deprecation removed guess nt get fixed sorry folks", "d": "8/2015"}, {"body": "provide jsbinembertwiddle certain understand", "d": "8/2015"}, {"body": "fixed context switching case removed codebase part efforts closing", "d": "8/2015"}, {"body": "updated jsbin canary still seems funky", "d": "8/2015"}, {"body": "emberselect deprecated removed closing", "d": "8/2015"}, {"body": "believe working intended currently using prevents setting attribute similar worked previously using coerced string means demo using", "d": "8/2015"}, {"body": "global integer tracks given transition amongst transitions entire system code manages see reason fails second test actually getting third transition first test initial visit first test redirection second test initial visit nt think bug perse though definitely understand confusion hit", "d": "8/2015"}, {"body": "emberselect deprecated removed closing", "d": "8/2015"}, {"body": "path mentioned used internally represent errorloading routes every route transitioned must url chosen prevent naming conflicts end user applications pretty unlikely route actual app behavior seeing would expect call inside error route ultimately nt bug going clsoe issue happy reopen explaination nt address issue properly", "d": "8/2015"}, {"body": "hi rwjblue thanks explanation since unuseddummyerrorpathroute used internally basically hidden outside world would expect remain hidden calling public method route calling refresh case akin setting godzilla loose tokyo lose model url get raw javascript thrown via location bar inconsistent refresh behaves everywhere else could least added documentation supported error routes realize use case described probably quite rare even case expect pop often production would still like understand anything side mitigate problem make error routes behave nicely refresh calls known issues like live application makes sad panda ideas cheers michal", "d": "8/2015"}, {"body": "calling refresh case akin setting godzilla loose tokyo smilingimp sure error route gets model generally folks nt put hook calling nt really know would expect trying error route", "d": "8/2015"}, {"body": "well long really quite sad story short ish version implement language switching nontrivial web application way works gets json language file via rest based global variable indicating current language switch language call force refresh model get new language file since call level propagate downwards child routes error route switch language also get called error route fact directly calling error route even know call somewhere higher ends error route customized way standard builtin ember error route like example obviously switching languages way far optimal argument said quite sad story regarding would expect typing kind realized really easy way looks like error route tries get model serializing original reason url use kills everything reason apparently function failed promise based see url might wrong ideally guess error route able use original reason refresh model without whole serialization shebang completely misunderstanding everything", "d": "8/2015"}, {"body": "sorry super delayed response type question better suited stack overflow irc needhelp community slack room please link back find solution help anyone comes via search", "d": "8/2015"}, {"body": "deprecated ember removed ember closing", "d": "8/2015"}, {"body": "run issue well especially frustrating since breaks example provided guides", "d": "8/2015"}, {"body": "believe fixed", "d": "8/2015"}, {"body": "closing favor", "d": "8/2015"}, {"body": "believe fix landed jsbin issue description nt runnable due ember data canary longer fixture adapter mikenorth update jsbin andor test see fixed", "d": "8/2015"}, {"body": "really sure progress generally suggesting acceptance tests use artificial means visit specific url closing happy entertain pr consensus found", "d": "8/2015"}, {"body": "closing favor", "d": "8/2015"}, {"body": "happy review merge feature adding nt seem issue framework closing issue", "d": "8/2015"}, {"body": "simonjefford would mind checking canary", "d": "8/2015"}, {"body": "seems like browser bug nt really think much end also test url works properly current chrome closing happy reopen something side", "d": "8/2015"}, {"body": "guess using would mean case actually instance sorry sat long without comment removed codebase efforts going close reevaluate comment nt help", "d": "8/2015"}, {"body": "agreed stefanpenner", "d": "8/2015"}, {"body": "hello warning nt bind style attribute template registration form loading mdloader controller set loading true controller get warning warning binding style attributes may introduce crosssite scripting vulnerabilities", "d": "8/2015"}, {"body": "definitely agree guides testing need updated issues open guides repo seems might want another one overhaul testing guide something closing issue favor issues guides repo since nt really bug ember", "d": "8/2015"}, {"body": "anything come trying upgrade numerous components tests project seeing numerous instances seems hopelessly vague seems one pr attempt made closed reasons clear wycats higher level issue going thanks", "d": "8/2015"}, {"body": "due way resolver looks template names route driven template looked attempts render component named agree trigger assertion due lack dash name looking checks first found used causing loop nt plan leverage routable components future versions unsure type another type close", "d": "8/2015"}, {"body": "closing see conversation details", "d": "8/2015"}, {"body": "nope using like perfectly fine", "d": "8/2015"}, {"body": "firstly sorry delay responding bit swamped lately something dockyardemberdataroute created make simple think documenting pattern guides would good unsure belongs one existing guides one yet written might want check folks documentation channel community slack", "d": "8/2015"}, {"body": "please provide demo jsbin embertwiddle", "d": "8/2015"}, {"body": "hard create demo requesting supported yet therefore allow explain situation providing clear example currently template contains map country divided province polygons looks like course would prefer hard code link point instead something like work linkto support least originally created issue looking documentation find", "d": "8/2015"}, {"body": "seems generally work could also use something like emberhrefto set attribute needed instead using", "d": "8/2015"}, {"body": "sorry lack response nt really seem like bug ember happy reopen issue provide reproduction dig", "d": "8/2015"}, {"body": "sorry delayed response double checked jsbin seems update value position properly upon update closing issue happy reopen misinterpreting jsbin", "d": "8/2015"}, {"body": "referenced chrome bug marked fixed closing nt think much", "d": "8/2015"}, {"body": "martndemus still issue looking code see solution fix document", "d": "8/2015"}, {"body": "updated includes changes made ksol", "d": "8/2015"}, {"body": "may stumble across deprecation point page tells use return new emberhandlebarssafestring get rid deprecation still work least looking jsbin noticed solution use return new emberhandlebarssafestring rather use htmlsafe return", "d": "8/2015"}, {"body": "chriscareycode believe best thing use without prototype extensions deprecation guide date written things changed", "d": "8/2015"}, {"body": "property private accessing things initialized generally supported", "d": "8/2015"}, {"body": "drobannx update jsbin confirm still issue", "d": "8/2015"}, {"body": "rwjblue made bin still get issue ember working ember get error", "d": "8/2015"}, {"body": "build assets working properly pack gem assets published closing", "d": "8/2015"}, {"body": "agree teddyzeenny wycats objections", "d": "8/2015"}, {"body": "favor mind making public api fleshed", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "fixed test passing glimmer restructuring happy reopen still issue", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "introduced official public api types helpers take look documentation rfc", "d": "8/2015"}, {"body": "generally track feature requests emberjsrfcs would please reopen", "d": "8/2015"}, {"body": "deprecation guides include context switching information", "d": "8/2015"}, {"body": "ever changed pods need two additional routes routenameloading routenameerror route", "d": "8/2015"}, {"body": "sure theory could add debug test checks modules resolver repo ensure compliant dashes rule world mentality closing happy reopen make bit actionable", "d": "8/2015"}, {"body": "fixed upstream guides repo", "d": "8/2015"}, {"body": "shows browser listing tested sauce labs", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "think fix via much discussed routing service going close need keep bug tracker focused issues", "d": "8/2015"}, {"body": "theory possible update event dispatcher capture additional arguments pass familiar many popular use cases setup though know", "d": "8/2015"}, {"body": "use case third party first party uses jquery extra params similar perhaps ddau friendly motivation time opened issue trying make ember component encapsulates typeaheadjs respond typeahead select event asks handler like autocomplete library fires event something gets selected passes selection data event know hard justify change popular approach fire event inside handler hunt information need like wrapper zurb foundation range sliders dealing extra parameters got make proxy call handler function actions attribute guess could like ember supporting custom parameters could cleaner code always love ember every time something ember code gets smaller particular case gets uglier still make sense today using finding easier reimplement everything emberland integrate third parties components gets center attentions wo nt go direction isolation wildcard nature integrations need", "d": "8/2015"}, {"body": "thank detailed reply think would possible thread extra arguments system gladly review pr updating code nt sure actual need runspired working event related things lately capture work gesture support thoughts thread extra arguments", "d": "8/2015"}, {"body": "updated demo canary still seems issue safari chrome works fine sure ember bug though mixonic thoughts", "d": "8/2015"}, {"body": "dollar shave club tshirt whomever fixes bug tweet claim", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "longer supported gladly accept pr fixing issues going keep issues open issue tracker", "d": "8/2015"}, {"body": "generate controller mentioned nt think something change trivially also convinced bug truest sense closing seems resolution mentioned happy reopen needed", "d": "8/2015"}, {"body": "deprecated longer ships ember default closing", "d": "8/2015"}, {"body": "looks like issue open upstream sure anyone time dig though", "d": "8/2015"}, {"body": "emberrunnext functionname callbacks inconsistent", "d": "8/2015"}, {"body": "reemasaluja sure related issue", "d": "8/2015"}, {"body": "still need determine handled anglebracket land wycats ping", "d": "8/2015"}, {"body": "talking krisselden day recent refactor unlock ability support", "d": "8/2015"}, {"body": "mixonic ton work close due timing rebase issues anyone care handle rebase us get documented", "d": "8/2015"}, {"body": "knownasilya commented maybe time", "d": "8/2015"}, {"body": "look later today", "d": "8/2015"}, {"body": "still broken canary become weeks", "d": "8/2015"}, {"body": "going go ahead close happy reopen reproduction", "d": "8/2015"}, {"body": "apparently gone wonder replaces stuckouttongue", "d": "8/2015"}, {"body": "things seem work properly using ember ember data jsbin using ember ember data throws error mutewinter mentioned jsbin", "d": "8/2015"}, {"body": "fix issue ember data unsure want release change potential interim work around would adding initializer like following demo", "d": "8/2015"}, {"body": "closing believe work around pr ember data solve issue everyone sorry long delay please let know additional errorsissues reopen related", "d": "8/2015"}, {"body": "closing favor know newer idea path forward made think", "d": "8/2015"}, {"body": "part dealing proxied things deprecated removed going close still problem happy reopen", "d": "8/2015"}, {"body": "nested helperscomponents definitely supported ember upgraded handlebars still quite sure api nested angle bracket components likely syntax specified since important issue closing issue somewhat old nt really describing bug would gladly accept pr adding documentation", "d": "8/2015"}, {"body": "general transition discussion rfcs repo", "d": "8/2015"}, {"body": "closing since fixed work around", "d": "8/2015"}, {"body": "tomdale believe issue completed checklist items seem done waiting go feature hopefully confirm close", "d": "8/2015"}, {"body": "make actionable close", "d": "8/2015"}, {"body": "need made performant", "d": "8/2015"}, {"body": "moved esperanto option babel afaik ability replace relative imports stefanpenner aware option babel", "d": "8/2015"}, {"body": "stefanpenner aware option babel unfortunately babel support box expose function us implement userland babel used everything relatively painless someone implement without mega legwork required previously", "d": "8/2015"}, {"body": "gotcha time could drop link reference aid researching", "d": "8/2015"}, {"body": "test babel demonstrates usage also", "d": "8/2015"}, {"body": "longer present", "d": "8/2015"}, {"body": "status qps seem work one cps second one depends array nt updated subsequent changes array", "d": "8/2015"}, {"body": "many changes naming structure ed landed likely resolved please provide checklist something actionable closing reopen still issue", "d": "8/2015"}, {"body": "think avoid changing support suggest folks deal api structure use transformation layer convert source format something works", "d": "8/2015"}, {"body": "closing issue favor stef wip pr", "d": "8/2015"}, {"body": "updated jsbin work canary seems working properly misunderstand bug happy reopen misunderstood broke jsbin updating", "d": "8/2015"}, {"body": "gone gone referenced issue closed working well latest versions closing think moved reopen folks disagree", "d": "8/2015"}, {"body": "stefanpenner correct think embercli drop baseurl entirely merely rewrite asset urls needed right rooturl ember cares case seems work case agreed believe embercli issue though ember one", "d": "8/2015"}, {"body": "reduce computed removed observers believe issue likely resolved", "d": "8/2015"}, {"body": "still issue need reproduction able track happy reopen reproduction current versions", "d": "8/2015"}, {"body": "thanks explaining thriqon", "d": "8/2015"}, {"body": "think came agreement mergeassign would fine would welcome pr tests closing issue since bit like feature requestproposal", "d": "8/2015"}, {"body": "closing bit old another issue tracking perf issues", "d": "8/2015"}, {"body": "seems resolved already", "d": "8/2015"}, {"body": "jsbin provided using redirect instead manually checking transition current routes name index reworked jsbin work properly", "d": "8/2015"}, {"body": "really sure bug would happen time review much tune support outlets", "d": "8/2015"}, {"body": "thar dragons corner cases old named outlet semantics nt know bug issue silent months close people reopen current examples overall takeaway stop using named outlets give benefits services components creating massive hidden pitfalls", "d": "8/2015"}, {"body": "tracking array scenarios still need deprecate usage various function prototype extensions relatively simple need supported throughout timeframe though", "d": "8/2015"}, {"body": "easier less cost people optin even strongly encourage", "d": "8/2015"}, {"body": "closing issue happily reopen reproduction current versions ed ember", "d": "8/2015"}, {"body": "closing happy reopen reproduction", "d": "8/2015"}, {"body": "hook seems reasonable kanongil happily review pr implementing new api need feature flagged", "d": "8/2015"}, {"body": "works without error", "d": "8/2015"}, {"body": "needs turned rfc expose routing service instead folks grabbing application controller going away anyways closing favor future routing service rfc", "d": "8/2015"}, {"body": "issue around deferred setting router first call demo current release branch", "d": "8/2015"}, {"body": "rewritten avoid usage reduce computed array computed likely fixed refactor closing reopen failing jsbinembertwiddle shared", "d": "8/2015"}, {"body": "specifying way forward etc going much less common enable angle bracket components default closing suggestion use update original demo using", "d": "8/2015"}, {"body": "updated provided jsbin seems properly using error template query param used closing", "d": "8/2015"}, {"body": "ancient seems like still problem figure circumstances periodically try set query parameter controller propagate url check value property controller correctly set url changed tried using avail woe", "d": "8/2015"}, {"body": "experiencing issue", "d": "8/2015"}, {"body": "rwjblue update", "d": "8/2015"}, {"body": "fixed demo", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "moves", "d": "8/2015"}, {"body": "nt really seem actionable reopen inspector repo needwant work still", "d": "8/2015"}, {"body": "jayphelps jamesarosen still issue chance one would try whipping pr", "d": "8/2015"}, {"body": "rwjblue nt cycles dig right disappointed", "d": "8/2015"}, {"body": "yes take next sprint starts next monday try slate", "d": "8/2015"}, {"body": "ok plan autolocation add change return emit deprecation warning change rest use instead historylocation keep use always full url add change return emit deprecation warning change rest use instead tests quite sure yet", "d": "8/2015"}, {"body": "repro jsbin seem demonstrate issue please open new issue still applicable", "d": "8/2015"}, {"body": "significant refactoring occurred think closed", "d": "8/2015"}, {"body": "think documented work way ie document calling agree would nice actually work would happily accept pr fixing nt seem much activity going close", "d": "8/2015"}, {"body": "branch become time reduces", "d": "8/2015"}, {"body": "closing likely going completely deprecated point cycle mostly avoided today closure actions", "d": "8/2015"}, {"body": "seems working properly demo", "d": "8/2015"}, {"body": "going close believe asyncawait best path forward want something without asyncawait need rfc proposalissue track tomdale please reopen rfcs still interseted pushing forward", "d": "8/2015"}, {"body": "ran basically exact issue today capybarawebkit ember solution use computed property instead template eg instead component filename emcomputed file function return thisget file name template filename", "d": "8/2015"}, {"body": "happily review pr nt seem likely point closing", "d": "8/2015"}, {"body": "wow old issue nicely closed rwjblue", "d": "8/2015"}, {"body": "nt believe supported longer exposed part happy reopen still issue idiomatic style ember", "d": "8/2015"}, {"body": "updated provided jsbin current canary setup reported issue clicking encoded transitioned raw refresh remains", "d": "8/2015"}, {"body": "nt really think direction want go also open pr rfcs cibernox sorry sitting long", "d": "8/2015"}, {"body": "neither mostly motivated arrayreduce computed black magic never felt need", "d": "8/2015"}, {"body": "closing gone stale", "d": "8/2015"}, {"body": "possible", "d": "8/2015"}, {"body": "manuelmitasch thanks taking time submit see nt terribly good handling feature requests main repo issues due created repo track proposals pr requests features issues still interested pushing forward could reopen", "d": "8/2015"}, {"body": "seems working correctly demo closing open new issue reproduction steps", "d": "8/2015"}, {"body": "rfc would nearly remove reliance jquery eventing current implementation used normalize event something could pulled microlib exposing needed jquery amd module", "d": "8/2015"}, {"body": "issue fixed point seems like might regression run behavior described transitionto login page application route model hook conditionally fires ajax request says user unauthenticated fairly simple scenario without query params anything page load application route hooks get called twice initial transition first transition aborted redirecting login page transition log looks like", "d": "8/2015"}, {"body": "issue related model routes nt working trying return model data store without hitting db filtering manually model function return thisstorefind business id bid found different ember inspector views model column blank even though model returned fashion illustrated", "d": "8/2015"}, {"body": "emberview deprecated", "d": "8/2015"}, {"body": "caffinatedmonkey sure looking section view documentation still applies components handle event method", "d": "8/2015"}, {"body": "caffinatedmonkey mixonic may able explain use case component dataset use loop click one datum want send action component need specific element clicked perform logic say hiding masking rest dataset inside standard template able something like older app still may new way expected inside component writing app actual dom element item iterated however component writing today referring component ember way nested components things clicked update able get work making element want click sub component inside components controller implemented click event like still nt seem like ember way issues hopefully helps someone googling future", "d": "8/2015"}, {"title": "select multiple return null values returned", "body": "looking issue whereby element option set options selected return rather empty array one items selected returns array would expected empty array would returned case fiddle shows issue appears way back jquery multiple value support added reason empty array returned check lt understand single select nt get would done multiselect removing would allow empty array returned said really expecting change made guess number sites depend upon behaviour wondering someone might willing say done way searched issue tracker bugsjquerycom site could nt find mention", "num": "2562", "d": "8/2015"}, {"title": "css animationdelay attribute set variable", "body": "use variable change animationdelay css property note work something like background color animation attributes animationdelay also work string variable even variable explicitly set string method also work currently works", "num": "2561", "d": "8/2015"}, {"title": "avoid unnecessary reflow amp restyle ie support check nonie browsers", "body": "trying reduce reflows restyles web application improve rendering performance found unnecessary occurrence jquery already removed jquery since seems relevant ie would nt possible check legacy ie api like attachevent execute test case", "num": "2560", "d": "8/2015"}, {"title": "jqueryeach", "body": "change jqueryeach inject function like arrayprototypeforeach func arr arr instead func arr arr", "num": "2559", "d": "8/2015"}, {"title": "mouseenter disabled elements", "body": "plugin needs handle mouseenter elements contain disabled elements ca nt issue test case jquery pure event handlers find related issue ca nt satisfy need events", "num": "2558", "d": "8/2015"}, {"title": "nt expose jqueryacceptdata", "body": "similar nt expose cases reason exposed undocumented", "num": "2555", "d": "8/2015"}, {"title": "queryparam adds incremented keys arrays objects", "body": "outer gets incremented keys case value object nt get key empty value number string would expected tried jquery version", "num": "2550", "d": "8/2015"}, {"title": "location attr href", "body": "browser emulated call function throws exception saying function property called getattribute browsers worked location attr href location prop href", "num": "2549", "d": "8/2015"}, {"title": "parsehtml removes content windows store app", "body": "removes certain content html parsed used windows store app according security restrictions outlined however ruins functionality dependent example comments work like virtual element template binding knockoutjs could fixed changing innerhtml winjsutilitiessetinnerhtmlunsafe used windows store app", "num": "2548", "d": "8/2015"}, {"title": "jquerywhen nt recognize solitary thenables", "body": "look method argument differs behavior longer invocations treat non thenables identically cases", "num": "2546", "d": "8/2015"}, {"title": "improve whenthen nonajax usage", "body": "following code simple example chaining would expect work documentation way deferred used nonajax example explain structure code also makes code complicated ugly may well use traditional callbacks clean suggestion let handle javascript promise expected result synchronous functions fire instantly instead waiting previous async promises resolve javascript var count var functionasync function return new promise function success fail settimeout function success var functionsync function return new promise function success fail count documentbody html count success functionasync functionsync functionasync functionsync addition promise returned next function called immediately unwrap function promise functionsync many others struggling bizarre terminology workflow ugly code feature even misunderstood everything documentation needs improved", "num": "2545", "d": "8/2015"}, {"title": "replacewith time p tags parsing error", "body": "test test var test test clone view testfind view viewclosest drag replacewith viewhtml consolelog testhtml error output wrong test wrong test", "num": "2544", "d": "8/2015"}, {"title": "jquery compatibility", "body": "hi case happened ie used jquery version project poped message said date yet define lead application runi tested ok jquery version problem worse project need bootstrap framework supports framework requires jquery version ca nt use othe low verion", "num": "2543", "d": "8/2015"}, {"title": "cache folder travis build", "body": "see", "num": "2541", "d": "8/2015"}, {"title": "use new qunit interface", "body": "", "num": "2540", "d": "8/2015"}, {"title": "chrome ff position offset nt work correctly within v", "body": "case setting element following element find height element subtract get accurate top position", "num": "2539", "d": "8/2015"}, {"title": "scripts inner html exectuted sequentially order", "body": "inner html contains scripts one external inline executed sequentially order sample demonstrating issue sample uses inner html contains external script twitter widget following inline script uses object previous external script project wickwood inline script generated dynamically put separate file run fiddle get console debugging see script tags processed scripts considered correct order unknown reason external script get loaded till inline script executed search find already reported find workaround thanks", "num": "2538", "d": "8/2015"}, {"title": "ca nt read transition css microsoft edge", "body": "sure case illustrated browsers would log transition edge empty string", "num": "2535", "d": "8/2015"}, {"title": "jquery truck factor", "body": "part phd research code authorship calculated truck factor tf popular github repositories probably know truck bus factor designates minimal number developers hit truck quit project incapacitated work consider system trouble files become orphan ie without main author details work preprint calculated tf jquery obtained value developers responsible tf timmy willison author files jaubourg author files john resig author files micha\u0142 go\u0142\u0119biowski author files validate results would like ask jquery developers following three brief questions agree listed developers main developers jquery b agree jquery trouble listed developers leave project eg win lottery less morbid c jquery characteristics would attenuate loss listed developers eg detailed documentation thanks advance collaboration guilherme avelino phd student applied software engineering group aserg ufmg brazil", "num": "2533", "d": "8/2015"}, {"title": "modify ajaxconvert return promisethenable", "body": "internal function always returns synchronously makes impossible support new techniques async jsonparse defining custom converters considering ajax already asynchronous unreachable private scope propose modify return promisethenable considered beneficial patch tests week", "num": "2532", "d": "8/2015"}, {"title": "npm shim module jquery compatibility build", "body": "hi chance get npm package jquerycompat multiple releases tracking nonbeta versions based looking thread shim modules seem like easiest way get want using npm browserify bundle stuff reasons use certain bundles others basically something like way lodash lodashcompat package require needed", "num": "2531", "d": "8/2015"}, {"title": "data new dataasexpando implementation uses delete dom nodes", "body": "data changes started similar originally see previously left data property nodes never deleted nt issue originally discussion jsperf mentioned still shows improvements using assign instead delete latest chrome", "num": "2530", "d": "8/2015"}, {"title": "call", "body": "hello jquery community first demo relevant output show browser console screenshot shows line jquery problem happens see source demo found situation delegate click event handler targets elements specific attribute custom element uses templates create simple list items item button remove parent item list happens click items button removes element event reaches jquery event handler time event arrives item removed placed document fragment jquery tests event selector document fragment fails course guess fix would simply check element tested selector actually attribute api", "num": "2529", "d": "8/2015"}, {"title": "ajax response parsed correctly ios chrome browser", "body": "developing web application use ajax request retrieve data server side application function working fine desktop browsers mobile browser except iphone chrome ajax request sent correctly data returned server empty ajax success callback function", "num": "2528", "d": "8/2015"}, {"title": "npmignore", "body": "hi add please srcsizzletest npm ignore node packages small possible", "num": "2527", "d": "8/2015"}, {"title": "jquery munges wheel event", "body": "two properties see mdn properties absent event jquery provides event outputs", "num": "2523", "d": "8/2015"}, {"title": "exclude parameter get request", "body": "example javascript var params str string lang null defparams lang en getparams jqueryextend defparams params object lang null str string jquerygetjson getparams get request sent address need essence question value option completely removed url address test using jqueryparam see empty values present url address request", "num": "2522", "d": "8/2015"}, {"title": "nt install jsdom requires python amp visual studio windows", "body": "hi problems like title says terminal says ca nt find python executable tell author fails system nodegyp rebuild tell author fails system npm install amp amp grunt also says need include file npmdebuglog support request ca nt find file nt exist needed copy pasted everything written terminal running jsdom task contextify install c usersanthonywebsitejquerynodemodulesjsdomn odemodulescontextify nodegyp rebuild c usersanthonywebsitejquerynodemodulesjsdomnodemodulescontextify defined npmconfignodegyp node c program filesnodejsnodemodulesnpmbi nnodegypbin nodemodulesnodegypbinnodegypjs rebuild else build gyp err configure error gyp err stack error ca nt find python executable python set pyt hon env variable gyp err stack failnopython c program filesnodejsnodemodulesnpmnod gyp err stack c program filesnodejsnodemodulesnpmnodemodulesnode gyp err stack fsreqwraponcomplete evalmachine gyp err system windowsnt gyp err command node c program filesnodejsnodemodulesnpmnodemodu lesnodegypbinnodegypjs rebuild gyp err cwd c usersanthonywebsitejquerynodemodulesjsdomnodemodulescon textify gyp err node v gyp err nodegyp v gyp err ok npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejs nodemodulesnpmbinnpmclijs install jsdom npm err node npm err npm npm err code elifecycle npm err contextify install npm err exit status npm err npm err failed contextify install script nodegyp rebuild npm err likely problem contextify package npm err npm npm err tell author fails system npm err nodegyp rebuild npm err get info via npm err npm owner ls contextify npm err likely additional logging output npm err please include following file support request npm err c usersanthonywebsitejquerynpmdebuglog warning use force continue aborted due warnings npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejs nodemodulesnpmbinnpmclijs run build npm err node npm err npm npm err code elifecycle npm err jquery build npm err exit status npm err npm err failed jquery build script npm install amp amp grunt npm err likely problem jquery package npm err npm npm err tell author fails system npm err npm install amp amp grunt npm err get info via npm err npm owner ls jquery npm err likely additional logging output npm err please include following file support request npm err c usersanthonywebsitejquerynpmdebuglog", "num": "2519", "d": "8/2015"}, {"title": "common event dom manipulation", "body": "hi looking long time currently common event dom manipulation event fired function calls event fired document window changes dom detected", "num": "2517", "d": "8/2015"}, {"title": "animate nt anything apparently random page loads", "body": "using jquery latest chrome firefox windows bug seems happen randomly maybe every times reload web app also happened people browsers want animate width element fixed value call callback simply logging success message console time works perfectly fine rare occasions load web app instruction nt anything width nt change end callback never called element never behavior remains reload page matter many times try call however still change css properties directly animate elements unfortunately since bug reproducible provide fiddle able investigate saw happen dug issue console", "num": "2516", "d": "8/2015"}, {"body": "mentioned official site jquery", "d": "8/2015"}, {"body": "read page completely missed part sorry however nt explain case nt really understand would want null rather array since would expect array cases items selected", "d": "8/2015"}, {"body": "sure exatly guess told use like nothing short circuit evaluation used set default values means null case fiddle", "d": "8/2015"}, {"body": "documented way since jquery likely breaking lot code changing behavior nt recall done way neelbhatt says easy get result want", "d": "8/2015"}, {"body": "ugh actually one test empty array another recent test null even though returning longstanding might want change consistency", "d": "8/2015"}, {"body": "agree inconsistent keep like reopen others voice opinions", "d": "8/2015"}, {"body": "careful changing case nt change successfulness control agree pretty inconsistent people may depending current values behavior see", "d": "8/2015"}, {"body": "set val called inside map callback returning effect returning ie contribution context element", "d": "8/2015"}, {"body": "okay resolved nt know delete solution", "d": "8/2015"}, {"body": "ca nt delete issue close please future impossible api breaks pass parameter via variable pure javascript jquery nothing", "d": "8/2015"}, {"body": "nt use browser sniffing unrelated inferences use featurebehavior detection example however note offending reflow happens waits dom ready even much may able switch jquery depending browser support", "d": "8/2015"}, {"body": "mistake already removed expect see jquery compat", "d": "8/2015"}, {"body": "unfortunately use jquery yet one hand understand suggestion pure however code specifically written ie unlikely another noniebased browser ever problem based assumption code also removed jquery compat therefore really understand code ignored nonie browsers runtime end removing code certain browser supported anymore checking code certain browser different", "d": "8/2015"}, {"body": "joelrich based assumption code also removed jquery compat therefore really understand code ignored nonie browsers runtime said test removed present jquery compat possible dropped support jquery compat jquery compat continuation jquery jquery continuation jquery currently maintained code contains code sure asking remark general user agent strings notoriously unreliable changed browsers changing particular sites present compatibility issues started relying introducing code may break various circumstances sometimes browsers user agents emulate browsers ones website compatibility checking user agents generally futureproof notably less true ie even microsoft trying get browsers mixed old ies still danger worth case code mentioned gone nothing regarding bug report", "d": "8/2015"}, {"body": "mzgol idea would change releases planned suggestion check ie legacy api like attachevent user agent sniffing alternatively could also use ie conditional comments described", "d": "8/2015"}, {"body": "joelrich releases planned except something critically important discovered happened welcome test jquery compat nt need support nt put production yet alpha suggestion check ie legacy api like attachevent user agent sniffing opera well checking unrelated api dangerous option case", "d": "8/2015"}, {"body": "nt think additional releases planned lines limited resources maintain support test multiple branches problem unrelated legacy apis feature inferences often go bad given age browsers may history shown risky conditional comments often eaten source code processors even mobile carriers use onthefly compression remove comments makes maintenance headache library code potentially processed published like jquery", "d": "8/2015"}, {"body": "ok thanks explanation consider jquery compat ready", "d": "8/2015"}, {"body": "backwards compatibility prevents us making change see also probably duplicate", "d": "8/2015"}, {"body": "confirmed thanks report", "d": "8/2015"}, {"body": "new way help fix issue help understand issue", "d": "8/2015"}, {"body": "jquery uses implement says bubble makes impossible use delegated events however test case mzgol seem show chrome bubbling even though nt supposed jquery also used originally standard ie implemented sure whether supported browsers whether implement properly whatever means depend follow spec bubble event although test breaks chrome firefox works fine nothing spec says browsers suppress event disabled element sure spec says form control disabled must prevent click events queued user interaction task source dispatched element bit pinch chrome firefox fix implementations suppress get spec say must suppressed could change use native get spec changed say event bubbles commitment change", "d": "8/2015"}, {"body": "however test case mzgol seem show chrome bubbling mouseenter even though nt supposed nt bubble happens since hover div time hover button native fired independently since button disabled nt fire button still div check hovering divonly part moving button native fires sure whether supported browsers mouseenter whether implement properly whatever means chrome firefox edge amp ie support safari sure support anyway safari critical bug ca nt use implementation fixed safari need delegated events work jquery mouseenter amp mouseleave though sure switch native implementation missing something ie although test breaks chrome firefox works fine works edge well nt copy chrome bit pinch chrome firefox fix implementations suppress get spec say must suppressed good point could change use native mouseenter get spec changed say event bubbles bubbles also please see wrote event delegation", "d": "8/2015"}, {"body": "right mzgol misinterpreted event bubbling definitely showing entering div think really need browsers allow disabled elements want work right use instead since bubble", "d": "8/2015"}, {"body": "use instead since bubble rely native ie browsers nt pass test checked use regular capture phase would work well real problem hover disabled button without intermediate step form hovering div ie button touches border div native fires native nt either bubble capture phase way us fix would rely capture phase available similarly treat might doable still like know first behavior standardsintended though even amp chrome amp firefox fixes behavior still patch safari also workaround attach one handler capture phase amp simulate regular one might performance implications need measure make sure regressing much", "d": "8/2015"}, {"body": "think wrong mouse events click nt fire disabled elements find whether changed nt think way us work around assume goal fix find whether mouse disabled element nt lot options fires parent button ca nt tell hovering button", "d": "8/2015"}, {"body": "today meeting mzgol pointed really two issues specific issue reported could addressed without dealing root cause disabled elements firing events pretty specific edge case though radical change example switching directly possible likely encounter bugs like one mentioned safari going ping folks find reason seeing look changing code behavior nt seem required spec prevents useful things like info tooltips disabled buttons", "d": "8/2015"}, {"body": "hm guess one might argue function could useful plugin writers seems stop exposing instead documenting", "d": "8/2015"}, {"body": "arschmitz scottgonzalez use mobileui", "d": "8/2015"}, {"body": "another option still expose use internal var instead save bytes support overriding today also copied data overriding would buggy anyway", "d": "8/2015"}, {"body": "timmywil used either ui mobile", "d": "8/2015"}, {"body": "timmywil used either ui mobile seems good stop exposing jbedard would like send us pr", "d": "8/2015"}, {"body": "another option still expose use internal var instead save bytes support overriding exposing mean putting object accessible compiled version use amd modules get lot internal stuff already nt guarantee file hierarchy nt change might even patch release", "d": "8/2015"}, {"body": "standard governing way javascript objects encoded query string behavior consistent many versions incentive us change possibly break existing code reason avoid json encoding well defined servers libraries parse", "d": "8/2015"}, {"body": "yes standard nt even consistent possibility make consistent break exising apps would introduce new flag like existing flag defaulting old inconsistent behaviour understand considered much trouble questionable benefit thought report stroke odd must overlooked big yellow boxes docs", "d": "8/2015"}, {"body": "purpose friends mimic way browsers serialize form inputs uncharted territory pass complex javascript objects since json already solves problem wellsupported nt lot reason come second way already yellowbox note suggesting people use json cases looks like trying serialize javascript data structures string would like use json", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "answer helped change code user locationhref believe jquery inconsistency trying tell", "d": "8/2015"}, {"body": "marceloodiniz literally first link dmethvin google location element dom thus jquery select", "d": "8/2015"}, {"body": "try support windows store apps using apis restricted security reasons one example setting name amp type attributes using windowsspecific nonstandard apis nogo restrictions introduced reason nt hack around could share example code breaks current jquery please test development version least latest alpha well", "d": "8/2015"}, {"body": "agree mzgol api explicitly word trying tell something nt circumvent restrictions likely open security holes use jquery directly follow restrictions listed reference jquery work properly case framework explicitly depends things like html comments semantic meaning injected document sure really good workaround could add sort trap door inside jquery allows user replace seems irresponsible point used reliable way tell good calls evil ones present nt test windows store app scenario talking microsoft integrate ci environment want jquery work course jquery functioning also knockout whether knockout used windows store apps something testing ci least directly knockout team would need commit ensuring worked", "d": "8/2015"}, {"body": "thought going crazy currently outputs console", "d": "8/2015"}, {"body": "example incorrect accepts function parameter passing promise initial async promise resolved sync promises created see printed async operation happens also jquery deferred follow promisesa spec mandates handlers always invoked asynchronously working example", "d": "8/2015"}, {"body": "improved example must still argue first function firing time initial function seems second synchronous function line functions correctly waits previous async function complete understand function invoked asynchronously invoked previous function queue completed notice shows straight away instead waiting first async function complete edit ok passing anything moving right onto solves problem confusing since returning resolved promise redundant something definitely wrong terms usability", "d": "8/2015"}, {"body": "new example still incorrect value passed example promise returned function passing function function considered resolved value results first executed without delay", "d": "8/2015"}, {"body": "scottgonzalez mzgol one instance return promise next return function obviously work like nt consistency majority use cases example edge case means example remove jquery equation see much cleaner original spec code want simple crossbrowser solution possible anything change example simplify jquery", "d": "8/2015"}, {"body": "example remove jquery equation direct equivalent jquery version allow take regular value amp wrap promise resolves thenable changed promise resolving value thenable therefore function nothing special passed functions promise regular value wrap promise resolve function course know promise get kind promise use code nt need conversion step enough attach directly promise hence nt need use example get another kind promise eg jquery promise code using promises promise code using jquery ones need convert first using hand accepts success andor error callback parameter gets invoked promise resolves equivalent way surprising accept different kind input afraid entering stack overflow area though please search help definitely bug jquery reported concepts struggle required comprehend able write promisebased code using jquery also using standard promises one resources might want read pretty comprehensive nt know js chapter promises", "d": "8/2015"}, {"body": "finish thing see currently wrong afaik nt convert another thenable jquery promise covered words print seconds immediately", "d": "8/2015"}, {"body": "mzgol great answers thank keep eye issue addressing example cover exact problem idea would mean seemed brokenmisleading hence confusion terminology hopefully solve thanks", "d": "8/2015"}, {"body": "krazyjakee ok apparently covered issue discovered bug thanks issue thanks pointers", "d": "8/2015"}, {"body": "mzgol sorry could nt direct descriptions see starting make use new features javascript thanks", "d": "8/2015"}, {"body": "valid inside browser infers tag start tag end correct behavior independent jquery", "d": "8/2015"}, {"body": "made popup layer close jquery ajax success problembut put close popup layer method jquery ajax method outside code good", "d": "8/2015"}, {"body": "please search programming help jquery forums stack overflow bug report need concrete information code sample reproduces problem ideally test case jsfiddle jsbin", "d": "8/2015"}, {"body": "thank much learn jquery time short recommend useful jquery forums appreciate much", "d": "8/2015"}, {"body": "nt think good idea lead travis succeeding fresh clone fail install newer dependencies got broken travis old working ones guess us also notice unless habit removing locally amp reinstalling deps regularly oth travis really fast wo nt speed build significantly", "d": "8/2015"}, {"body": "guess forgetting two cis", "d": "8/2015"}, {"body": "guess forgetting two cis good point considering fast travis jquery repository promisesa tests added whole build completed seconds reasons introducing cache", "d": "8/2015"}, {"body": "nt understand question upside downside", "d": "8/2015"}, {"body": "downside eg might miss broken subdependency nt commits recently someone submits pr merged notice jenkins crashes also one day might switch travis completely wo nt notice problem visible upsides saving seconds build nt real upside", "d": "8/2015"}, {"body": "merged notice jenkins crashes never happened chances never happen third party dep dep influence original dep tremendously order us fail even sure happen anywhere ever even could nt anything case wait dep dep would release another version fail would noise could nt even downgrade since original dep could use bad dep tilde caret since first version conjunction question also one day might switch travis completely wo nt notice problem seems try solve issue nt exist situation would indeed dangerous travis caching feature considered dangerous since would issue would issue node community every oss community", "d": "8/2015"}, {"body": "merged notice jenkins crashes never happened chances never happen third party dep dep influence original dep tremendously order us fail even sure happen anywhere ever happen project least twice projects usually depend lot subdependencies wrapped grunt plugin plugin usually thin wrapper around library library matters one failures eslint bug one rules nt catch one edge case fixing bug broke build specific linting bug code even could nt anything case wait dep dep would release another version fail would noise could nt even downgrade since original dep could use bad dep tilde caret since first version pin subdependency version directly fits semver range used least works way npm apply temporary shrinkwrap sometimes downgrade dependency older version temporarily temporarily disable broken functionality build broken sometimes plugin releases new version pinned older subdependency upgrade seen quite often lot things one worst know situation would indeed dangerous travis caching feature considered dangerous since would issue would issue node community every oss community generalizing way much ruby modules usually pin subdependencies file npm angularjs uses shrinkwrap travis caching builds deterministic lot deps though btw nt reply visible gains gains even small faults discredit solution", "d": "8/2015"}, {"body": "happen project bug already code proposed changes like pr already landed said never happens case would notice jenkins pin subdependency honestly options sounds awful wait trush commit history lot things one worst know talking bug dep issue would dissappear would prefer generalizing way much maybe case afraid projects would excluded danger yes loot would still vulnerable btw nt reply visible gains thought faster future might try use babel example least try use exportsimports constructions babel takes lot deps story switch full server js express karma phantom etc story use wd integration tests story would real node tests future bright lot dev deps", "d": "8/2015"}, {"body": "happen project bug already code proposed changes like pr already landed said never happens nt matter bug build worked one day broken later without changes please nt say never happens exactly described happen oo lot things one worst know talking bug dep issue would dissappear would prefer issues disappear one project described one example something never disappears fix code thought faster future might try use babel example least try use exportsimports constructions babel takes lot deps story switch full server js express karma phantom etc story use wd integration tests story would real node tests future bright lot dev deps always enable cache becomes real problem lot deps might even want use shrinkwrap hard project need future", "d": "8/2015"}, {"body": "nt matter bug build worked one day broken later without changes missing point never happens meaning dep dep never breaks significantly would break build broken case dependencies actually fixed might notice jscs preset updated quite lot past six months jquery builds never broke know use jscs dep patch versions jscs never show errors previous patch version meaning would never break code like eslint would explicitly ask putting caret front version number yes people say eslint would makes sense break code edge bug fixed maintainer responsibility fix bug show ppl since bug already code would happen us like jshint implicitly updated nt need show error contributor since might provoke contributor fix unrelated part code would commit would two unrelated things two commits one pr would different things contributor fixed pr would failed pr merge commit fix asap ask contributor rebase situations might discourage contributor submit fix continue work us pr submitted would actually better would notice failure jenkins", "d": "8/2015"}, {"body": "previous meeting decided wait would become issue could resurrect discussion", "d": "8/2015"}, {"body": "html new twtrwidget remote script executes asynchronously inline script executes synchronously given try always run synchronously backwards compatibility crossdomain scripts nt see options within jquery update inline script introduce grace period definition", "d": "8/2015"}, {"body": "even could run sync would bad idea anyway would perpetuate bad practice holding main thread really best way would use execute initialization suppose could define inline html script evaluation chain async deferreds make seqential problem would getting access end chain know ready many methods inject html also creates deferred dependency manipulation nt one today", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "seeing value possible get individual values", "d": "8/2015"}, {"body": "yeup right also windows expected behavior", "d": "8/2015"}, {"body": "shorthand properties little flaky general something jquery ca nt control setting via shorthand usually works fine getting shorthand properties iffy good example try get shorthand borders set uniquely different sides", "d": "8/2015"}, {"body": "see quite unfortunate still browser specific quirks even within jquery getting individually", "d": "8/2015"}, {"body": "looks like tf calculating may weight percent files highly versus contributions individual files example detail calculation new files created example result reorg done switched amd person files regardless whether wrote code also weighted way based age contributions look contributor graph see people mentioned made recent commits nt think project trouble result", "d": "8/2015"}, {"body": "alltime percentages properly right indicators limiting last year would probably give much accurate result", "d": "8/2015"}, {"body": "author files mostly moved lot code around see latest author via ignore wisdom went creation files amp evolution time", "d": "8/2015"}, {"body": "appreciate concept effort putting project suggestions made comments inclined go ahead close facilitate triage feel free continue discussion ticket closed", "d": "8/2015"}, {"body": "ajax always asynchronous option still exists", "d": "8/2015"}, {"body": "dcherman yes interface via already async callbacks thenable suppose could something created side effects synchronous manner without using callbacks believe explicitly opted use goal able write async converters able make run synchronously asynchronously necessary", "d": "8/2015"}, {"body": "quite true plumbing calls inside implicitly asyncsync point example user could callback promise could still use converter sure whether support async filters converters may break assumptions certainly would break assumptions sync ajax exceptions maybe way around", "d": "8/2015"}, {"body": "guess would nt use fetch right usecase usecases", "d": "8/2015"}, {"body": "stands still relatively immature still much api comparison suspect used parallel time achieving sort feature parity plus latent cost migration efforts suspect jquery important part migrating people adding support async converters creates bit technical bridge use case app dependence upon ember data turn delegates make requests server responses push parse times threshold want handle parsing asynchronously using goals nt want replace battletested handrolled version want intermediate step gt transition want enable every application using ember data immediately benefit technique improving entire ecosystem enable support future asynchronous apis allow converters become async well see simply early encounter numerous async dom network apis come", "d": "8/2015"}, {"body": "cc jaubourg", "d": "8/2015"}, {"body": "know alone need last month got question jquery india someone trying parse json response sob", "d": "8/2015"}, {"body": "maybe missing point necessary address ajax converter rather jqxhr", "d": "8/2015"}, {"body": "thought well one unfortunate problem coupled setting header suggesting header always couple workarounds set header manually nt depend jquery depend implementation details ajax set handler prefilter would nt work since get run headers set", "d": "8/2015"}, {"body": "override although admittedly implementation details land way slice magical tries", "d": "8/2015"}, {"body": "depend implementation details ajax set optionsdatatypes text beforesend handler prefilter would nt work since get run headers set although admittedly implementation details land way slice property part public api extendable part jquery pretty much nothing ca nt sure option somewhere make coffee look hard enough", "d": "8/2015"}, {"body": "like idea principle yes converters actually place handle support contenttype detection said prpoc solution needs support chaining converters code would much simpler request async could used great effect internally still handle sync requests", "d": "8/2015"}, {"body": "markelog jsfiddle messes header like described previous comment provided another workable alternative though blow away json converter maintain correct header still manual parsing curiosity wonder pros setting responsetype xhr using property browsers support tested still seemed freeze ui parsing nt seem beneficial piping responsetext jsonparse", "d": "8/2015"}, {"body": "jsfiddle messes accept header like described previous comment nt say nt initialy thought meant user could defer parsing method know see point tested still seemed freeze ui parsing besides last time checked issues json incorrect parsing give meaningful output browser still handle sync requests sync requests deprecated spec spec encourages browsers warn user vendors hand already partly deprecated since discussion removing timmywil dmethvin", "d": "8/2015"}, {"body": "thank comments review seems like general mood thread async converters something wish enable past first bits conversation focusing implementation alternative approaches accomplishing goal opposed value enabling implying rough consensus value provides implemented part goal right thing believe enabling async converters next day two iterate solution address known gaps use browsersafe solutions add tests tests currently pass without working converter chaining holes coverage get polished state landing misread room mood let know", "d": "8/2015"}, {"body": "generally opposed see adding complexity already cumbersome system given druthers converters theirselves would fully separate transports et al bridging two demonstrated already possible want existing api notably using way works around automatic behavior said though could convinced particularly good pr", "d": "8/2015"}, {"body": "see latest update painted us corner unsure get", "d": "8/2015"}, {"body": "test function see code nothing implementation promise libraries detect thenables hence name thenables", "d": "8/2015"}, {"body": "jaubourg yes problem valid converter ducktyped thenable unable protect user case assume intent provide error messages much prefer defensive apis duck typing especially library code ca nt figure way accomplish using disallowed values implementation detail especially nonrecoverable manner result lot nasty surprises jquery enough places seems inevitable would bite somebody", "d": "8/2015"}, {"body": "think overthinking first jquery support changing non issue library break long reach conversion logic secondly every javascript library handles thenable like even rsvpjs promise library used inside emberjs today pretty much coding error create object method promisestandard compliant got enough slack regarding know said decide go make happy sure would shame based design considerations apply jquery sense would place whole library considered", "d": "8/2015"}, {"body": "jaubourg said every method assumed honor promisesa point inside outside jquery cause block", "d": "8/2015"}, {"body": "yes copying old tags final release jquerycompat", "d": "8/2015"}, {"body": "cool thank", "d": "8/2015"}, {"body": "timmywil note enough copy tags every one needs get name jquery packagejsonbowerjson changed jquerycompat afterwards every tag older consistent main jquery package needs checked published npm via npm publish pointing little involved copying tags", "d": "8/2015"}, {"body": "good point think still worth", "d": "8/2015"}, {"body": "unable reproduce demo provide reduced test case eg without polymer git build preferably somewhere like js bin easy us tinker", "d": "8/2015"}, {"body": "haha sorry accidentally uploaded temp workaround timeout waits till event bubbled remove element demo js bin sorry nt prepare demo without polymer knowledge templates narrow set something like posted issue polymer repository got explanation maybe provides clues going also better workaround problem conversion", "d": "8/2015"}, {"body": "simple repro", "d": "8/2015"}, {"body": "looks like needed well ie listened dcherman", "d": "8/2015"}, {"body": "thanks report need concrete test case able procede report vague hard get anything", "d": "8/2015"}, {"body": "facing issue ios chrome latest version web application completely fine mobile browser still response receive ios chrome please help", "d": "8/2015"}, {"body": "duplicate thanks report discussed length people need source files need published going split separate packages much maintenance burden", "d": "8/2015"}, {"body": "btw test folder already published", "d": "8/2015"}, {"body": "mzgol nt talk sources directory nt see repo", "d": "8/2015"}, {"body": "version think remember something removed jquery wo nt contain check see looks like", "d": "8/2015"}, {"body": "mzgol default npm loads", "d": "8/2015"}, {"body": "okay waiting stable", "d": "8/2015"}, {"body": "yeah publishing mistake ca nt reverse fine see sth wrong jquery alphabeta packages please report fix time", "d": "8/2015"}, {"body": "jquery copies commonly used event properties event nt implemented browsers support still find browsers support event full support event please use either jquerymousewheel exposes event uses hood available nt need support older browsers like may try jquerywheel", "d": "8/2015"}, {"body": "see also", "d": "8/2015"}, {"body": "see empty values present url address request providing empty values get empty parameters nt want parameter request expected would remove property object literal even declare value paramslang option completely removed url address ca nt remove parameter messing property extending objects remove property object end javascript var params str string lang null defparams lang en delete paramslang lt delete defparamslang lt getparams jqueryextend defparams params object str string delete getparamslang jquerygetjson getparams", "d": "8/2015"}, {"body": "maybe makes sense include parameters value undefined string let explain code like javascript ajaxsetup data lang en key someaccesskey function callapi method options jquerygetjson method options used obvious solution add callapi condition approach causes lot problems unnecessary steps", "d": "8/2015"}, {"body": "since nt bug report close programming help found jquery forum stackoverflow", "d": "8/2015"}, {"body": "anthomaxcool need visual studio installed windows able install compiled dependencies one install iojs instead nodejs require visual studio jquerycore lot people seem problem compiled deps windows dep requires compiling since iojs going soon merge nodejs likely nodejs first release months starting think skip jsdomrelated tests nodejsiojs older always install latest one ie put installation work nodes using fail old nodejs current jsdom nt support nodejs anyway maybe nt support versions supported upstream leave open consideration next meeting", "d": "8/2015"}, {"body": "thanks fast reply mzgol visual studio installed ultimate visual studio", "d": "8/2015"}, {"body": "error posted seems nt python installed also looking readme seems might need visual studio instead sure true though unfortunately state things compiled packages work windows currently installing python wo nt help upgrade nodejs would easier install iojs use instead", "d": "8/2015"}, {"body": "alright thanks lot time help look foward iojs", "d": "8/2015"}, {"body": "pr", "d": "8/2015"}, {"body": "thank opening issue something implement jquery guarantee work across browsers source unexpected behaviors", "d": "8/2015"}, {"body": "probably want look mutationobserver", "d": "8/2015"}, {"body": "thank opening issue without reproducible test case nothing", "d": "8/2015"}, {"body": "pr", "d": "8/2015"}, {"body": "pr", "d": "8/2015"}, {"body": "although nt quite right approach think main issue normal path code takes generates error blob seems like fix specific problem inside jquery already fix area done issues resolved via approach took outside jquery using extensions provides", "d": "8/2015"}, {"body": "please try open console look", "d": "8/2015"}, {"body": "sure much value changing tool use conventionalchangelog looks decent also ton dependencies either way would nt change jquery part jqueryrelease", "d": "8/2015"}, {"body": "going close since nt see way work around jquery without introducing bugs decreasing performance setter overall hopefully lot css properties suffer behavior workaround hard", "d": "8/2015"}, {"body": "thanks reporting anyway", "d": "8/2015"}, {"body": "btw android market share last month created issue going extreme speed half year almost nonexistent trend continues", "d": "8/2015"}, {"body": "thats said plus market share dropped four months extrapolated data assume tendency another four months share go lower standart pretty big argument removal", "d": "8/2015"}, {"body": "well could still install ie nt necessary mean somebody note stats show browser market os market meaning ppl actually buying nt mean use default browser fact looks like primary clientele opera mini looking much lower percentage plus market share dropped four months extrapolated data assume tendency another four months share go lower standart pretty big argument removal consider android add numbers ios ms browsers would tiny like really tiny add desktop browsers share would practically nonexistent btw android market share last month created issue going extreme speed half year almost nonexistent trend continues think one two thing drop support master keep compat still suffer although little less reason android problems happen often master compat drop support branches redirect people still needing support amp jquery lines prefered second one still need android remain let push web forward slim easy lib", "d": "8/2015"}, {"body": "btw average android run looks like manually restarting jobs timed hard miss critical bugs used fact half tests time default", "d": "8/2015"}, {"body": "fixed sizzle added awaiting sizzle update label", "d": "8/2015"}, {"body": "replace prophook fix let make sure understand correctly suggest switch jquery users define proper need support need workaround issue", "d": "8/2015"}, {"body": "correct", "d": "8/2015"}, {"body": "really think could drop android android statistics", "d": "8/2015"}, {"body": "assume issue making sure always creating new deferred also treating regular value words print seconds immediately", "d": "8/2015"}, {"body": "actually separate issue blocker fortunately easy enough fix though thanks report", "d": "8/2015"}, {"body": "also noticed forced layout repaints ff progress regarding issue", "d": "8/2015"}, {"body": "havenchyk yet issue future milestone currently focusing finishing still lot additional perf tests pull requests tests confirming improve performance could make possible make would nt hold hopes high otherwise", "d": "8/2015"}, {"body": "btw issue dmethvin linked fixed maybe getters huge problem anymore still prs welcome especially perf tests", "d": "8/2015"}, {"body": "think problem jquery side would fixed solution proposed jbedard least jquery event handling code original problem layout dirty coming handler attempt code event handler read properties depend layout force layout well highfrequency handler mousemove scroll defer changes requestanimationframe handler possible throttle change rate avoid kind problem", "d": "8/2015"}, {"body": "dmethvin mean problem side well disabled event handlers app timeline shows time taken triggers layout firefox chrome work smooth glad help determine really problem jquery help something", "d": "8/2015"}, {"body": "nt active event handlers jquery nt event handler attached either create test case jsbincom", "d": "8/2015"}, {"body": "dmethvin problems flexbox performance ff case sorry disturbing", "d": "8/2015"}]