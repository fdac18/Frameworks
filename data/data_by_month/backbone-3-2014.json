[{"title": "router fails load optional query param", "body": "tried url like path amp amp appends last param supplied modifying like path amp amp solves issue optional parameter absent url like amp amp supply dangling amp quite desirable particular reason considered add amp another delimiter regular expression replacing namedparam let know missing something", "num": "3099", "d": "3/2014"}, {"title": "reason ignore minified files bowerjson", "body": "according bowerjson spec recommends include minified version main attribute wondering reason ignore", "num": "3097", "d": "3/2014"}, {"title": "crud http method default mapping", "body": "hi attended interesting talk rest apis design slides speaker thorough knowledge subject sequence slides recommendation use http post method update resources ideally patch indeed http put create resources since put idempotent post may idempotent using put whole representation resource sent partial update allowed resource overwritten database default crud http method mapping backbone create operation mapped http post method update operation http post method expert rest nt opposite considerations led mapping thanks feedback", "num": "3095", "d": "3/2014"}, {"title": "problems collections included template", "body": "hi template linked view model object modeled associated two collections view render function var phones phonecollectionphones phonesfetch renew true var addresses addresscollectionaddresses addressesfetch renew true model fetch declare success function pass phonesmodels addressesmodels problem sometimes collections appear sometimes nt occasions accessed view first time collections nt show refreshing page revealed occasions required renavigate home page application something wrong thanks help garey mills", "num": "3093", "d": "3/2014"}, {"title": "insertion sort add method sort", "body": "would nt better method implemented using insertion sort instead sorting collection gets even worst take look many times set traversed sortby one pluck another native code sort knowing collection far sorted give us ability iterate minimum times fastest sorting method set sorted quick sort worst case already sorted one know whether sorted nt native code instead", "num": "3086", "d": "3/2014"}, {"title": "backbone local storage", "body": "hello presently working backbonejs want know method save data locally temporarily mean need send data server dont wan na use backbonelocalstoragejs completely removes option store data server want use ie storing locally sending server per need please help", "num": "3081", "d": "3/2014"}, {"title": "questions generateid", "body": "alright admittedly favor mainly could used things like composite keys allow different models grouped together one collection even conflicting playing around practice feels like half solution since actually sets attribute nt used collection purposes breaks url construction magic unless want generated id act restful endpoint identifier intended used restful endpoint identifier presumably sending id server first place caseywebdev wanted get opinions something run situations used alternatively would make sense defined method collection rather model", "num": "3080", "d": "3/2014"}, {"title": "url property function must specified collection error", "body": "unable following var collection new collection url get following error latest version uncaught error url property function must specified version works fine", "num": "3079", "d": "3/2014"}, {"title": "proposal backbonerouterexecute add action name arguments", "body": "hey usually override execute judging callback come like javascript backbonerouterextend execute function callback args var actionname thisgetactionname callback super backbonerouterprototypeexecuteapply arguments getactionname function callback thisroutes return nt know anyone else show code someone like reuse common requirement suggest add argument", "num": "3078", "d": "3/2014"}, {"title": "", "body": "", "num": "3076", "d": "3/2014"}, {"title": "amd boilerplate still defines jquery dependency", "body": "trying get nativeview play nicely handlebones non amd tests passing hoorah current amd setup backbonejs still defines jquery hard dependency cause amd build blow try test suggestions handled backbone sure much strife amd boilerplate getting boy wish nt nothing wrong shimming imho", "num": "3074", "d": "3/2014"}, {"title": "link documentation tool backbonejsorg", "body": "documentation style used wwwbackbonejscom wwwunderscorejscom really great definitely seems like step jsdoc produces however could nt find information tool used generate would possible include link tool possibly fine print bottom page others could benefit perhaps somewhere wiki failing could possibly include link tool ticket", "num": "3072", "d": "3/2014"}, {"title": "modelsave work context server side nodejs", "body": "tried back things missing jquery work properly googlefu failing ca nt seem find discussion starting one missing something obvious lost p thanks help", "num": "3071", "d": "3/2014"}, {"title": "proposal backbonemodel matches", "body": "hey create pr w tests wanted test waters interest method essentially predicate would take object conditions la coffee model new backbonemodel conditions key value lol wat modelmatches conditions backbonemodel matches conditions gt every conditions value key gt get key value something worthy inclusion", "num": "3070", "d": "3/2014"}, {"title": "chrome extension local storage", "body": "anyone plz tell wrong unable store data using chromestoragesync html div id list text type input user enters something clicks add buttonon add text appears body also get stored happening js file chromestoragesyncget value function items text saved entered retrived added html body achieve body click p function hide user add text appears bodyif wishes remove click hide butt click function var entered documentgetelementbyid mytext value documentgetelementbyid mytext value", "num": "3069", "d": "3/2014"}, {"title": "ie lt redefined documentdomain block", "body": "project using load webapps redefined right browser ie backbone nt work averse use iframe requirement customer knew customer god", "num": "3068", "d": "3/2014"}, {"title": "previousattributes nt cleared change events", "body": "used following places guarded means usable change listeners documentation think reasoning accesses ever permitted within change handler unset attribute backbone hold reference old attribute value memory implications security implications consider someone setting sensitive piece information unset later may still easily accessible attacker found xss also way clear could best overwrite silently setting attribute guys think clearing change event listeners called", "num": "3066", "d": "3/2014"}, {"title": "documentation suggestion", "body": "recently spent days trying figure despite fact save creating new instance model server passed error function always getting called turns server fault instead returning entire object created server returning synthetic key backbone docs clear enough point stop bonehead like world frustration matter fact nt really know look find cheat sheet proper comportment restful server perhaps need pointed right direction thanks listening garey mills", "num": "3065", "d": "3/2014"}, {"title": "model attribute aliases feature request views", "body": "hi say two different models javascript var product skate definition product model productref backbonemodelextend idattribute name skate new productref name title plmskate desc nice skateboard revision previewurl javascript var person paulbismuth definition person model person backbonemodelextend idattribute email totally anonymous instance person paulbismuth new person email expresident elyseefr firstname paul lastname bismuth paul bismuth father pierre antimoine avatar say coding idcardview meant display image model data could somehow fit fields two models candidate displayed view following attributes mapping instance would mapped attribute alias concatenation would mapped attribute alias attribute would mapped attribute alias attribute instance would mapped attribute alias attribute would mapped attribute alias attribute would mapped attribute alias attribute words view need attribute aliases observedpointed model without modifying original models definitions golden rule models must know anything views nt want polute model code viewrelated mapping thought object roughly given mapping original attribute names expected attribute names listen original attributes events emitted proxified model reemit events expected attribute names reimplement expected attribute names changed original attribute names calls made proxified delegate execution method proxified model prototype chain javascript seems builtin way implement object would somehow instanciated overriden impl view ctor replace original view given options hash mapping defined hash object values would attribute names even maybe functions deal logic like concatenation firstname lastname rest code view deal model native attributes roughly idea moment outlines clear idea whole thing also like work collections would implement attribute aliases observedpointed model without modifying original models definitions plugins know provide feature would proxy object helful future nothing request thanks advance feedback ideas", "num": "3064", "d": "3/2014"}, {"title": "array attribute still nt trigger change event changed", "body": "", "num": "3061", "d": "3/2014"}, {"title": "listento", "body": "could listento applied windowlocationpathname know applied model objects", "num": "3059", "d": "3/2014"}, {"title": "array model attribute doesnt onchange trigger", "body": "hi use array part model also bound change events model changed array attribute wont receive event", "num": "3058", "d": "3/2014"}, {"title": "using polymorphic models breaks backbone ability ignore existing models adding array objects existing collection", "body": "using polymorphic models breaks backbone ability ignore existing models adding array objects existing collection collection also contain polymorphic models overriding property constructor returns model since function passed collectionmodel prototype following line collection set method work", "num": "3057", "d": "3/2014"}, {"title": "amdstyle define definition anonymous", "body": "underscorejs define call includes name library however backbone leads interesting error messages things rolled single file includes requirejs top example underscorejs backbonejs would nice backbonejs instead however sure implications noconflict mode", "num": "3055", "d": "3/2014"}, {"title": "would great checks within collection done rather", "body": "would allow people use custom models example backbonecollections pr wanted float idea approval first", "num": "3051", "d": "3/2014"}, {"title": "control put vs post models supplied ids", "body": "javascript var usermodel backbonemodelextend idattribute username urlroot userapi var newuser new usermodel newuserset username newusersave create new user code backbone makes assumption whatever api calling unique identifier resource manipulating generated creation always case example unique identifier username id provided code always try put request always fail think many different ways solving providing create update methods model save use changing exposing method options hash save method change like one two things application aware creating user updating user call appropriate method set appropriate option call save normally tries put gets error handler tries save forcing post thoughts", "num": "3050", "d": "3/2014"}, {"title": "router navigate url nt trigger", "body": "use case simple know plenty alternatives achieve behaviour imagine application sitting route somehow want retrigger route code navigate trigger true since routes trigger never happens intended bug bug try work pr", "num": "3047", "d": "3/2014"}, {"title": "possible memory leak", "body": "hi ive profiling app noticed stray dom nodes floating around removing views know many reasons however nodes seem clear use removing reason backboneview doesnt", "num": "3046", "d": "3/2014"}, {"title": "backbone appending url", "body": "hello using latest version backbone code works perfectly firefox google chromesafari appends unknown url expected url url chromesafari nt know coming also happening safari thanks", "num": "3045", "d": "3/2014"}, {"title": "polymorphic collections working", "body": "update polymorphic collections stopped working chrome throws exception like callstack reason issue fact method trying access case method returning instance model case workaround issue looks like", "num": "3044", "d": "3/2014"}, {"title": "invalid collectionmodel function", "body": "collectionmodel function shown example function invalid value collection instance nt example", "num": "3043", "d": "3/2014"}, {"title": "accessing view options construction", "body": "hi removed since backbone usual recommandation set need inside initialize constructor currently however views kind pattern js popupviewextend see root element constructor currently requiring options functional since initialize constructor called creating node fails worth error somewhat fixed overloading entire constructor js var view function think agree say best code snippet ever think issue solved", "num": "3033", "d": "3/2014"}, {"body": "ok maybe fault trying make use function outside change event sorry find another way", "d": "3/2014"}, {"body": "maybe avoid setting objects arrays hash fine", "d": "3/2014"}, {"body": "hi sankalan yes reasons adding delimiter main problem would query parameters generally guaranteed specific order matching regular expression sufficient version backbone using since version query params available custom parsing slightly different form case could use something like following parse query string however best hope helps smiley", "d": "3/2014"}, {"body": "create operation mapped http post method update operation http post method mapping reference believe current mapping restfully correct resource collection endpoint specific resource imply new resource created specific resource replacing entirety resource body mentioned idempotent way creation would longer idempotent would creating new records every request like", "d": "3/2014"}, {"body": "thanks get logic create gt post items idempotent add item collection resource persisted backend time call update gt put idempotent createsreplaces resource entirety url specified even better update patch rfc thanks clarification", "d": "3/2014"}, {"body": "believe used relying nt remember reason change", "d": "3/2014"}, {"body": "jashkenas possibly option maybe change comparator value without resorting collection leaving unsorted state need boolean keeps track whether model addedchanged since last", "d": "3/2014"}, {"body": "new variables one track state sort another retain last comparator method reference whenever sort called comparator used would set last comparator used method called would change state sorting called comparator changed sort state set true insertion sort called otherwise resort collection", "d": "3/2014"}, {"body": "yep caseywebdev right one need fork secondly reliably discerning whether array currently sorted harder might seem", "d": "3/2014"}, {"body": "braddunbar looking methods changes would affected method would set possible method sorting case equals insertion sort used else insertions called sorting case adding set false besides method influence process ca nt really think negative consequence common overwrite two methods change order methods think performance issue lib concern", "d": "3/2014"}, {"body": "think conversation would best moved pull request edygar maybe could open one mind", "d": "3/2014"}, {"body": "done anyone make benchmark test", "d": "3/2014"}, {"body": "nt worked way expeting performance got slower closing issue", "d": "3/2014"}, {"body": "hey naseerhussain might try mailing list stackoverflow irc channel questions like github issues used talk framework", "d": "3/2014"}, {"body": "uuugh remove least nt shipped yet", "d": "3/2014"}, {"body": "breaks url construction magic using already something would break default url construction magic nt see really relevant change presumably sending id server first place nt think server response conform backbone method uniquely identifying models want model hash pristine copy server nt want mess adding fake keys stored proper set backbonecollection something run situations used nt run issues yet nt using terribly long either alternatively would make sense defined method collection rather model curious see implementation sure collection really better place uuugh remove least nt shipped yet seeing issue anything gives backbone users flexibility trying without feels hacky", "d": "3/2014"}, {"body": "nt think server response conform backbone method uniquely identifying models yeah agreed thought would nice potential workaround strict oneidpercollection rule enforced collections using generateid already something would break default url construction magic nt see really relevant change sure though let say different collections want combine models third collection adhoc purposes sorting display etc needed guarantee models wo nt conflicting id collection viewpoint nt seem like model responsibility come unique id scheme temporary collection uuugh remove least nt shipped yet seeing issue anything generateid gives backbone users flexibility trying generateid without feels hacky sure wanted raise point think bit ship noticing ca nt easily used without breaking restful niceties nt want mess adding fake keys stored proper set backbonecollection agreed taking model putting collection could presumably used effect intending without confusing logic around etc put something together bit", "d": "3/2014"}, {"body": "sure though let say different collections want combine models third collection adhoc purposes sorting display etc needed guarantee models wo nt conflicting id collection viewpoint nt seem like model responsibility come unique id scheme temporary collection definitely good point good argument toward put something together bit curious see come seems like collection may listen event keep uptodate let futz wink", "d": "3/2014"}, {"body": "thought probably way sort coexist way user composite keys model level model truly compositenested key collection level group simple different model types", "d": "3/2014"}, {"body": "hi avjpl automatic attachment option removed models collections version due bug causes see details", "d": "3/2014"}, {"body": "would find useful", "d": "3/2014"}, {"body": "seems like fine idea fixed", "d": "3/2014"}, {"body": "merged enjoy", "d": "3/2014"}, {"body": "shimming messes build tool iirc commonjs solution assign backbone directly may route take opinions killing jquery require amd", "d": "3/2014"}, {"body": "scenarios seem pretty crappy leave means need map require maps jquery empty object maybe require black magic yet know jrburke ideas achieve conditional dependency without plugin ie nt care comes back null remove jquery dep means need set manually setup app correct missing clever third solution option seems correct whole point longer require jquery may well reflect defined dependency tree", "d": "3/2014"}, {"body": "context either backbone depends jquery nt module systems amd commonjsnode even based similar principle dependencies believe sort issue came node pathway backbone perhaps parts backbone need jquery broken separate modulefileaddon enough context suggest final pathway best folks backbone community sort", "d": "3/2014"}, {"body": "nt mind setting backbone application setup opinion one solution amd scenario catching error finding jquery though ugly", "d": "3/2014"}, {"body": "open pr", "d": "3/2014"}, {"body": "either backbone depends jquery doesnt nope docs state backbone hard dependency underscore light dependency jquery overridden one many advantages latebinding language like js rewriting dependencies exposed modules fly particularly useful scenarios like code remains functionally similar large underlying portions replaced perhaps parts backbone need jquery broken separate modulefileaddon also nope backbone nt need use amd manage internal code believe sort issue came node pathway backbone node pathway browserify pathway browserify choking trycatch wrapped around commonjs difference node browserify former runtime lookups latter must precompilation step hugely opposed making dev set manually bit ugly hurdle newbies make change let make sure document hell", "d": "3/2014"}, {"body": "either backbone depends jquery doesnt nope docs state backbone hard dependency underscore light dependency jquery overridden think jrburke means light dependency dependency consensus regarding commonjs well believe sort issue came node pathway backbone node pathway browserify pathway pedantically commonjs cases regardless precedent heed make change let make sure document hell", "d": "3/2014"}, {"body": "pedantically commonjs cases regardless precedent heed commonjs difference runtime lookup vs precompile step former use latter ca nt seen projects use within methods runtime dependencies lazyloading avoiding dependency loops ie depends method depending method", "d": "3/2014"}, {"body": "sorry previous answer bit short follow es modules work like amd far behavior specifying dependencies need specified declaratively front dynamic dependency loaded via similar amd async callback mechanism different node commonjslike system synchronous file access support dynamically fetched require jquery throw bad practice browser though carry forward end result deciding backbone would like express dependencies amd mean solved solution modules whatever solution even nothing wanted keep jquery specified dependency amd projects want use dom library helper instructing amd users following config setup would allow work javascript showing requirejs config call holds amd loader config call requirejsconfig normal config seed module loader empty jquery dependency starting main app loading define jquery function app loading require appmain option save file called jqueryjs project impression backbone users using backbone browser using dom helper library zeptoender supported via amd loader map config points jquery providers true would bias dependency expression mention jquery suggest pathways mentioned amd users want dom helper library backbone know community better", "d": "3/2014"}, {"body": "true would bias dependency expression mention jquery suggest pathways mentioned amd users want dom helper library backbone sounds good jrburke knows best", "d": "3/2014"}, {"body": "thumbsup setting empty jquery object", "d": "3/2014"}, {"body": "actionable item would keep jquery dep amd definition change backbone amd test definition setup blank jquery object reading correctly", "d": "3/2014"}, {"body": "must say would feel strange someone wants use library jquery backbone create jquery filedefinitioncumprimentos jos\u00e9 magalh\u00e3es wed mar pm ryan eastridge notifications githubcom wrote actionable item would keep jquery dep amd definition change backbone amd test definition setup blank jquery object reading correctly reply email directly view github", "d": "3/2014"}, {"body": "magalhas agree already primarily use zepto seems little strange", "d": "3/2014"}, {"body": "agreed magalhas seem like crap solutions", "d": "3/2014"}, {"body": "simple enough say two reasonable solutions defining jquery one way another even empty object using amd capture conversation date correctly jrburke thanks input hail lord require", "d": "3/2014"}, {"body": "oh let make minor release patch release blew faces way would expected patch release", "d": "3/2014"}, {"body": "kind prefer dependency removal also way works way cjs module definition said downside newbies wo nt know backbone needs defined order views routers working properly though overcome documentation break current interface minor release would proper opinion", "d": "3/2014"}, {"body": "also side note could default backbone implementation throws error stating library plugged would help people nt read documentation update though things like would stop working", "d": "3/2014"}, {"body": "reopening seems require discussion", "d": "3/2014"}, {"body": "jrburke says shim whatever like amd shim", "d": "3/2014"}, {"body": "hi machineghost referring annotated source generated docco would nt mention", "d": "3/2014"}, {"body": "nt think machineghost good old fashioned artisanally produced organic handwritten html friend", "d": "3/2014"}, {"body": "wow must annoying keep date kudos putting effort keep friendly readable", "d": "3/2014"}, {"body": "afaik must override sync method", "d": "3/2014"}, {"body": "like magalhas said override connect database another api whatever need readpersist", "d": "3/2014"}, {"body": "thanks guys confirming current state affairs suppose makes sense databases nt speak http using database like couchdb server side models client side models potential backbonemodels ability http calls like browser anyone else interested seeing work", "d": "3/2014"}, {"body": "probably write pretty simple library like superagent uses javascript api ajax browser http requests node backbone wo nt likely take route core though jquery ubiquitous ajax client days", "d": "3/2014"}, {"body": "think probably leverage new another proxy method", "d": "3/2014"}, {"body": "caseywebdev would nt need specialcase use", "d": "3/2014"}, {"body": "handled problem return predicate function would special case", "d": "3/2014"}, {"body": "understand correctly function designed provide bit syntactic sugar loops nt define anonymous function run check helps filter operation nt covered collectionwhere", "d": "3/2014"}, {"body": "lukesargeant many cases might want use something like outside collection", "d": "3/2014"}, {"body": "nt used function much right think use cases", "d": "3/2014"}, {"body": "ca nt set iframe documentdomain documentdomain embedding document", "d": "3/2014"}, {"body": "set inside outside iframe backbone use another iframe element make history ie low version ca nt find solution set backbone iframe", "d": "3/2014"}, {"body": "oh right iframe contentdocument readonly", "d": "3/2014"}, {"body": "", "d": "3/2014"}, {"body": "tried say also throw error message", "d": "3/2014"}, {"body": "think would break lot things right also may want access change event makes perfect sense could though explicit way dispose", "d": "3/2014"}, {"body": "magalhas since documentation indicates access intended change events reinforced explicit ternary code prevent access outside change events nt user responsibility make explicit copy model order access attributes changed use change listener understand may breaking change seems like keeping silent references around backwards compatibility use documentation suggests unintended wrong thing", "d": "3/2014"}, {"body": "backbone documentation return copy model previous attributes useful getting diff versions model getting back valid state error occurs", "d": "3/2014"}, {"body": "also backbone documentation change event method used get previous value changed attribute also happens work change events like using pointer sure might still memory address may used anyone else yet still error relying behavior probably bad idea may break internal behavior changes future worse could expose vulnerability diffing could save value want using use diff need multiple ways things internally inconsistent intentions code documentation especially side effect dubious value correctness", "d": "3/2014"}, {"body": "see point still think documentation issue bug worked couple years project uses big json data megabytes way tackled overriding set method disable previousattributes usage couple features nt need backbonemodel order optimize performance feel mainstream perspective extra object model nt killer memory wise fact makes possible easily undo model changes lets wait active collabs opinion", "d": "3/2014"}, {"body": "memory leak nt grow security hole already put sensitive information model xss present already lost nt think change made feel free disable copy backbone", "d": "3/2014"}, {"body": "yes make clear documentation also fix example currently broken", "d": "3/2014"}, {"body": "hi garey understand correctly saying server returned something object response operation failed option called response formatted json nt able reproduce locally would mind posting example", "d": "3/2014"}, {"body": "brad client created address containing fields posted server server saved address generated surrogate key returned serialized json object containing key result client save error called since writing server well able change behavior return entire json address save success called garey mon mar brad dunbar notifications githubcomwrote hi garey understand correctly youre saying server returned something object response operation failed error option called response formatted json nt able reproduce locally would mind posting example reply email directly view github generate messages directories read files opened rather silent", "d": "3/2014"}, {"body": "think still missing something would cause handler called knowledge called response valid json", "d": "3/2014"}, {"body": "request recently add concept virtual attributes bookshelfjs project follows similar conventions backbone modelscollections use serverside relational databases ended written plugin might useful starting point looking implement docs use nt see reason nt possible drop swapping current implementation uses getterssetters depending browsers looking target work otherwise need tweak bit get functionality looking hope helps", "d": "3/2014"}, {"body": "thanks seems event fired virtual properties values change right", "d": "3/2014"}, {"body": "nt events triggered virtual properties though easy adding check see whether old value different new value firing event accordingly", "d": "3/2014"}, {"body": "asking dirty checking model set checks deep equality points reference cases best practice store primitives strings numbers backbone attributes hash use properties model instance need something advanced", "d": "3/2014"}, {"body": "object extended onto javascript object nt dirty checking changes suspect looking merely provide facilities trigger listen events object would establish changed event case", "d": "3/2014"}, {"body": "thanks swift response casey thought work running problems earlier error probably backbone related", "d": "3/2014"}, {"body": "would mind providing example", "d": "3/2014"}, {"body": "thismodelset background viewlistento thismodel change viewrender thismodelset background background thismodeltrigger change background last line must expected nt executed cause nt detect array different", "d": "3/2014"}, {"body": "see triggering expected may bug code modified version backbone", "d": "3/2014"}, {"body": "version using factory function look like", "d": "3/2014"}, {"body": "sure mean factory function figure add prototype property contains idattribute property function returns model works feels hacky", "d": "3/2014"}, {"body": "want use simple function option less hacky solution uses proper constructor js var collection backbonecollectionextend model backbonemodelextend constructor function attrs options var model attrsfoo myfoomodel mybarmodel return new model attrs options", "d": "3/2014"}, {"body": "ok maybe docs updated use example like instead simple function", "d": "3/2014"}, {"body": "see", "d": "3/2014"}, {"body": "nt know answer question jrburke", "d": "3/2014"}, {"body": "anonymous modules preferred way define modules allows patterns use consumers modules combined together amdaware optimizer combines modules inserts names process similar nodebrowserify approach ecmascript modules source form name bundled ids pertain projectbundling scenario given issues loading scripts browsers share global scope insufficient browser capabilities across browsers modern browsers better always possible anonymous modules work scenarios mostly issue basic core scripts like jquery underscore however higher level scripts like backbone less concern details wiki page upgrading libraries", "d": "3/2014"}, {"body": "anonymous add functionality build tool actually rename modules name nt register anonymously", "d": "3/2014"}, {"body": "allows patterns use consumers jrburke expand statement detail", "d": "3/2014"}, {"body": "instance two different backbone versions available app sounds silly benefit example using anonymous define", "d": "3/2014"}, {"body": "ajaxsolutions consumers backbone library may want refer backbone examples ordered expect likely first developer may want add modifications backbone refer backbone dependency app modules could set backbone module real backbone modifications export value value backbone module sort proxy real backbone prefer mvc library called mvc allow swapping outin backbone mvc id horrible reason need load two different versions backbone page would awful scenario known happen necessarily backbone general modules versions modules keeping module anonymous allows uses", "d": "3/2014"}, {"body": "really good idea", "d": "3/2014"}, {"body": "want pr", "d": "3/2014"}, {"body": "jashkenas wo nt work simple factory functions referring", "d": "3/2014"}, {"body": "ah rub", "d": "3/2014"}, {"body": "everyone page", "d": "3/2014"}, {"body": "nt instead property example defaulted", "d": "3/2014"}, {"body": "supposed wink would solve problem maybe way prevents duplication", "d": "3/2014"}, {"body": "agree immediately obvious benefit supporting factory function", "d": "3/2014"}, {"body": "sounds like need method instead using directly need factory function polymorphism likely also need set custom method", "d": "3/2014"}, {"body": "know underscore would nt work", "d": "3/2014"}, {"body": "could work factory functions models produced inherited factory using example docs might bit fancy", "d": "3/2014"}, {"body": "like legastero idea adding overridable method collection using instead hard instanceof checks something like", "d": "3/2014"}, {"body": "went ahead wrote discussion suggesting instead seemed cleanerclearer", "d": "3/2014"}, {"body": "", "d": "3/2014"}, {"body": "henrik approach one way cost adding new internal hook function might never used anyone hard type checking usually bad thing would possible us replace instanceof ducktype testing instead case", "d": "3/2014"}, {"body": "folks linkedin including would love new internal hook currently swiveling preparemodel applications", "d": "3/2014"}, {"body": "would absolutely huge application team building linkedin see asakusuma comment confirmation well", "d": "3/2014"}, {"body": "flexibility one major advantages backbone able decouple models collections allowing people swap models seems like natural win backbone", "d": "3/2014"}, {"body": "actually bitten lack took debug native support would awesome", "d": "3/2014"}, {"body": "fixed enjoy", "d": "3/2014"}, {"body": "code always try put request correct put vs post nt create vs update know url resource belong simple puting representation feel free override sync like something different", "d": "3/2014"}, {"body": "override isnew method needed", "d": "3/2014"}, {"body": "guys indeed correct sorry causing noise", "d": "3/2014"}, {"body": "hi magalhas discussed several times others please comment arguments feature thanks", "d": "3/2014"}, {"body": "exist perhaps using master instead", "d": "3/2014"}, {"body": "fixed regression experienced", "d": "3/2014"}, {"body": "works like charm cheers", "d": "3/2014"}, {"body": "see edit mistake related referring reference created collection instance nt nt want collection access", "d": "3/2014"}, {"body": "ok works thank", "d": "3/2014"}, {"body": "", "d": "3/2014"}, {"body": "hm indeed possible introduce little delta elements need options nt nothing really serious nt thought using setelement thanks closing issue since nt see immediate use case snippet would nt work", "d": "3/2014"}, {"body": "makes easier arcanis override constructor like", "d": "3/2014"}, {"body": "issue defining function specially handy use passed customise class attributes element workaround set classes attributes method disappointed", "d": "3/2014"}, {"body": "mllocs still pass functions options constructor", "d": "3/2014"}, {"body": "meant using passed functions update longer automatically attached context calling methods", "d": "3/2014"}, {"body": "save overridden initialize method constructor", "d": "3/2014"}, {"body": "initialize called afterwards overriding constructor looks much need accomplish", "d": "3/2014"}, {"body": "nah overriding constructor good plan pretty common moreso", "d": "3/2014"}, {"body": "overriding constructor every view declaration seems much boilerplate reason remove context pass methods would like understand change pretty common pattern bad practice pattern", "d": "3/2014"}, {"body": "use case every view application comes backbone indirection something like js var view backboneviewextend constructor function options thisoptions options backboneviewapply arguments var userview viewextend var commentview viewextend", "d": "3/2014"}, {"body": "mllocs yes would say accessing antipattern instead use vehicle attach properties directly follows great deal detail interested", "d": "3/2014"}, {"body": "thanks braddunbar options whitelisting interesting investigate apply idea using backbonemarionette", "d": "3/2014"}, {"body": "symmetriq would like send patch fixes ender loading problem patch possible", "d": "3/2014"}, {"body": "jashkenas done", "d": "3/2014"}, {"body": "started happening still affected", "d": "3/2014"}, {"body": "yes also problem master", "d": "3/2014"}, {"body": "unsure whether actually bug whether previously undocumented behavior unsupported documentation states arguments create docs convenience create new instance model within collection equivalent instantiating model hash attributes saving model server adding model set successfully created would indicate expecting model instance example use case needing create way using seeing issue", "d": "3/2014"}, {"body": "docs also says create method accept either attributes hash existing unsaved model object", "d": "3/2014"}, {"body": "ah missed bug docs otherwise", "d": "3/2014"}, {"body": "anyone know commit introduced regression", "d": "3/2014"}, {"body": "yeah seems nt realize attribute set model relied upon reason model added collection", "d": "3/2014"}, {"body": "tgriesser think easy fix fundamental problem addreference idea", "d": "3/2014"}, {"body": "yeah think fundamental problem addreference idea feels bit odd need model knowledge collection able save nt yet exist collection let see anything come", "d": "3/2014"}, {"body": "also ran issue today nt spent much time investigating underlying cause confirm running update fixes", "d": "3/2014"}, {"body": "looks like still trouble feel free send failing test case ticket go", "d": "3/2014"}, {"body": "think passing along fine maybe even anything else overridden extending class", "d": "3/2014"}, {"body": "symmetriq add gotten work browserify environment", "d": "3/2014"}, {"body": "one note may missing seems model defined function collection still wont access idattribute model called correct targetproto defined model function called returned", "d": "3/2014"}, {"body": "chiplay check example setting optionally polymorphic", "d": "3/2014"}, {"body": "thanks caseywebdev dont think set idattribute collection since idattribute different model types polymorphic model sure looking use generateid produce correct id explain point right direction thanks", "d": "3/2014"}, {"body": "caseywebdev ahhh got little slow today need set generateid method collection use attrs return correct id brilliant", "d": "3/2014"}, {"body": "js var typea backbonemodelextend idattribute var typeb backbonemodelextend idattribute b var poly backbonecollectionextend model backbonemodelextend constructor function attrs options var model attrstype typea typeb return new model attrs options let know helps keep mind recently added latest release yet", "d": "3/2014"}, {"body": "yamsellem jashkenas ran issue well turns need add validate true options invalid model added collection guessing intended behaviour since exists test probably documented", "d": "3/2014"}, {"body": "backbone version issue still exist", "d": "3/2014"}, {"body": "derickbailey example since idea behind patch releases fixes needed", "d": "3/2014"}, {"body": "problem way prevent backbone registering without patching copy code something avoid improve maintainability working building new component site old legacy environment uses requirejs want new component sandboxed separate existing code nightmare ca nt use backbone even though ideal candidate forces existing requirejs package neither reach prevent interfering existing code adds requirements jquery underscore whole approach wrong opinion forcing certain way thinking unrelated actual backbone library", "d": "3/2014"}, {"body": "gmmorris suggestion change backbone amd support fit use case nt know issue ca nt subverted requirejs config sure trying accomplish", "d": "3/2014"}, {"body": "amd separation modules would also win using commonjs module definition browserifynode", "d": "3/2014"}, {"body": "nt think amd support hard coded backbone least provide way tell backbone register horrible way would window level flag trying avoid global variables like avoid possible explain use case existing code base dire need refactoring scraping trying build sandboxed infrastructure sits separate packaging existing code mainly prevent developers getting tempted mix new code modules old ones also order refactor various components way live side side without conflicting way obviously specific use case first time happened leading architecture dozen different companies last years consultant see problem direct result way implemented makes mistaken assumption environment setup simply think ideal solution removing assumption especially considering requirejs offers better solutions shims", "d": "3/2014"}, {"body": "gmmorris third party service injecting javascript client page need defensive wrap code function expression immediately invokes specify inline define implementation something like almond specific use case better addressed tool would require internal registration instead globally leaking load almond load backbone great sandbox nt invent", "d": "3/2014"}, {"body": "site brought help rebuild existing site without rebuild everything scratch wrapping option problematic existing backend infrastructure plenty solutions trying make general point regarding codebase point existing solution wrong assuming anything global scale backbone box side note btw problem wrapping code every file want load specific files demand rather concatenate files wrap every single file problematic backend infrastructure also forces concatenate files dev environment creates problems nothing backbone course points problems code makes invalid assumptions", "d": "3/2014"}, {"body": "backbone registering function call significantly better use case encapsulating logic inside function scope exposing global call means code looks like compare globals approach javascript include backbone function noconflict ideal assign undefined windowbackbone instead deleting never existed var backbone windowbackbonenoconflict var hadbackbone false var prevbackbone backbone window hadbackbone true load backbone var backbone windowbackbone hadbackbone delete windowbackbone else windowbackbone prevbackbone edit fixed typos", "d": "3/2014"}, {"body": "problem defined existing require package affects configuration requirejs also adds calls underscore jquery extends prerequisits means making changes existing code base problem spans multiple pages exiting code mess assuming nt option simply wrap backbone code change existing infrastructure simply ca nt prevent backbone registering suggest nt make current usecase already stated specific use case want stress problems project nothing amd support backbone fact surfaced inherent problem way backbone works nt think right vendor component choose register without lest providing way prevent acting assumption", "d": "3/2014"}, {"body": "force backbone store whatever object want sort amd state said use case specific think current state works majority", "d": "3/2014"}, {"body": "yeah thats exactly done point nt solving issue end honestly think way works wrong thanks time anyway guys", "d": "3/2014"}, {"body": "order underscore jquery backbone", "d": "3/2014"}, {"body": "", "d": "3/2014"}, {"body": "dminkovsky solution used clearing error view attempt set model view basically assume inputs view model responds value fact invalid", "d": "3/2014"}, {"body": "jashkenas seems lost fix subsequent evolutions backbone code backbone query params lost copying fragment purpose", "d": "3/2014"}, {"body": "hi olance handling search params modified bit allow custom parsing general usage params part search component moved hash transitioning pushstate hashchange eg causing failures end love see test case attempt address", "d": "3/2014"}, {"body": "hi braddunbar thanks replying maybe something wrong happening chrome modern browsers worries ie url reloaded param read serverside inject javascript init code embedded backbone app moved hash fragment server generates page without init code init backbone coffeescript initialize app appview require viewsappview configuratorviewsappview new appview approuter require routersapprouter configuratorroutersapprouter new approuter initialize backbone history backbonehistorystart pushstate true root configurator hope clear processproblem something wrong used work well previous versions backbone", "d": "3/2014"}, {"body": "thanks clarifying see mean right work previously considered briefly making change nt think anyone using pattern sorry breakage worried nt think likely go back behavior feedback search params overwhelmingly positive would probably suggest putting parameter root instead ie possibility", "d": "3/2014"}, {"body": "well nope quite seldom use get parameter however need work must say ca nt see server access get considered bug ca nt find something instance copying query string hash fragment nt mean delete url", "d": "3/2014"}, {"body": "backbone determines sort route last used checking application app root means url like assumed pushstate already swapped leaving search parameters would cause infinite loop case nt think", "d": "3/2014"}, {"body": "though totally agree jashkenas reply top thread kind agree dotbits opinion backbone great enforcing patterns developer expected navigate trigger true always fire bound methods route events even navigating url", "d": "3/2014"}, {"body": "need table pagination deleting row want reload url reload current page table deleted row last want reload url changing page", "d": "3/2014"}, {"body": "yeah totally tripped well fortunately several hours took time debug word adding parameter", "d": "3/2014"}, {"body": "reason choice triggering add events models particular set call added seems make sense model trigger add event soon done added collection loop causing issues testing number children list view collection length considering view listing callback fired collections add event first time fired collections length already total number passed set", "d": "3/2014"}, {"body": "krislab hi everyone comment want share solution problem people short solution available github repo backbonecollectionvalidation", "d": "3/2014"}, {"body": "looks like becoming standard see chance revisiting", "d": "3/2014"}]