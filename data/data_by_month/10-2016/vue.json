[{"title": "feature request map parent attributes events binding component child element within component", "body": "using example message wanted add html attributes placeholder input box without adding placeholder new prop wanted bind keypress event input box without adding component like following currently result test label div element hope provide new feature routemap event bindingattributes attachment specific child element instead always root element like following test label", "num": "4075", "d": "10/2016"}, {"title": "createelement work well transition component", "body": "vuejs version reproduction link steps reproduce click click button nt show transition expected show fade transition actually happening nt show transition transition also working make render funtion compiled jsx", "num": "4074", "d": "10/2016"}, {"title": "works dev nothing build", "body": "vuejs version reproduction link steps reproduce execute code build badalejo component wo nt appear errors shown expected dev behaviour build display newly added component elements array actually happening new component nt shown", "num": "4073", "d": "10/2016"}, {"title": "vue vfor working element dataprop", "body": "vuejs version reproduction link steps reproduce html vmessage javascript var new vue el data items message foo message bar expected html foo bar actually happening html foo bar", "num": "4072", "d": "10/2016"}, {"title": "destroy beforedestroy send wrong component", "body": "components inside loop remove component data ui works expected beforedestroy always get last component property value test fiddle clicking remove button removes data index however beforedestroy method alert message ie last index html remove lt div gt lt span vtext aid gt lt span gt lt span vtext name gt lt span gt lt span vtext power gt lt span gt lt div gt javascript code vuecomponent demogrid template gridtemplate replace true props aid name object power object beforedestroy alert destroy thisaid creating new vue instance pass options object var demo new vue methods destoryele function aid thisgriddatasplice aid", "num": "4071", "d": "10/2016"}, {"title": "vhtml working iframes", "body": "vuejs version reproduction link steps reproduce add iframe vhtml rendered field expected iframe render actually happening clear looks like vue tries render iframe", "num": "4070", "d": "10/2016"}, {"title": "ref component returning element", "body": "hi new documentation vue states used normal element ref dom element used component ref component instance try access properties expected component get errors log logs element previously vue would logged component instance docs vue says also getting element need access instance properties", "num": "4068", "d": "10/2016"}, {"title": "feature request add reference vmodel directive hook signature", "body": "currently vue use directive element options know allows update vmodel within directive functions hooks first option modify html template pass vmodel name parameter like problem approach first dry vmodel name right repeat also errorprone verbose importantly poses difficulties used loop second option far better opinion keep html simple semantic accessing name via variable lists attached element one iterate array find named directive lastly access name attribute created helpers function javascript export function findvmodelname vnode return vnodedatadirectivesfind function search vmodel name attached element return oname model expression export function setvmodelvalue value vnode vnodecontext findvmodelname vnode value works well also loops know name beforehand feature request would simply modify directive hook function signatures add reference vmodel object new signature would like javascript bind el bindings vnode oldvnode vmodel would able modify vmodel attached element directive declared using vmodel would automatically update vmodel accordingly think would help lot think see example needed access vmodel following forum thread", "num": "4065", "d": "10/2016"}, {"title": "use parent methods properties component", "body": "component want access methods parent without props html vue code var usersdata firstname john lastname doe firstname martin lastname bust var vm new vue el el data users usersdata parenttext parent methods getfullname function user return userid userfirstname userlastname components user template fullname parenttext props item computed fullname function return getfullname thisitem vuejs version", "num": "4064", "d": "10/2016"}, {"title": "vif dynamically updated", "body": "plunk vif work dynamic data vif answer question must see comment question vif reload data view new isshow variable", "num": "4063", "d": "10/2016"}, {"title": "option support readonly object", "body": "vuejs version reproduction link steps reproduce componentsindexjs export foo bar etc import components components export default name app components expected show ok without errors actually happening browser throw error reasons", "num": "4062", "d": "10/2016"}, {"title": "composing templates slots", "body": "say layout component follows normally would one items inside element however avoid huge components like compose however try move child component stuck use wrapper element nt work case due strict css rules nt think move full element child component would apply parent element way circumvent composition limitation lt trying avoid wrap like way tell template use kind virtual wrapper node limitation web components wtf menu", "num": "4061", "d": "10/2016"}, {"title": "problem literal object props template", "body": "vuejs version reproduction link steps reproduce template literal object props may cause template rerender expected actually happening usage common vue however causes problem vue warning recommendation easy debug find cause warning message usage description vue guide helpful", "num": "4060", "d": "10/2016"}, {"title": "xx keyed data accessible thisxx access vm dataxx", "body": "vuejs version reproduction link steps reproduce run expected thismydata child component printed console actually happening undefined printed", "num": "4058", "d": "10/2016"}, {"title": "vmodel component error", "body": "vuejs version actually happening hi new vuejs making chat following tutorial tutorial guy puts vmodel component work component shown console answer text defined used jsfiddle want https request server nt put dontpad repository problem input id problem thanks", "num": "4057", "d": "10/2016"}, {"title": "watch invoked elements adding new element array", "body": "vuejs version reproduction link steps reproduce create watch every array element created adding new array element watch invoked original elements available although change done jsfiddle click multiple times add record button text changes reported watches contains notifications watch function invoked items array adding new one expected text changes reported watches empty individual elements change new element added array actually happening text changes reported watches contains notifications watch function invoked items array adding new one click add record click add record invoked watch item click add record invoked watch item invoked watch item click add record invoked watch item invoked watch item invoked watch item click add record invoked watch item invoked watch item invoked watch item invoked watch item etc", "num": "4056", "d": "10/2016"}, {"title": "style custom component generate code using vueserverrenderer", "body": "vuejs version reproduction link steps reproduce assume two custom components template use inline styles render browser render server compare expected inline styles work consistently browser server environments actually happening server render attribute browser server workaround template added root element passed style prop eg obvious docs valid code suppose argument could made custom properties defined accepted", "num": "4055", "d": "10/2016"}, {"title": "vue typescript types module nodemodulesvuetypesindex default export", "body": "ca nt import vue within typescript file types ok testts ts import vue vue compiler shows module nodemodulesvuetypesindex default export packagejson", "num": "4054", "d": "10/2016"}, {"title": "property method defined instance referenced render", "body": "error background issues getting vuejs work laravel application errors whenever run know components compiling happens runtime whenever try render components full error gets logged file defined tried steps outlined github issue work also deleted ran avail applicationvue import clients clientsvue export default mounted consolelog component ready components clients clientsvue import client clientvue export default data return clients components client mounted gt thisclients responsebody appjs require bootstrap vuecomponent app require componentsapplicationvue vuecomponent clients require componentsclientsvue vuecomponent client require componentsclientvue", "num": "4053", "d": "10/2016"}, {"title": "render funciton missing using avts vuerouter", "body": "vuejs version reproduction link steps reproduce npm install npm run dev expected see worked browser actually happening get warning browser console vueuse vuerouter line maints commented code work uncomment line project work get error browser console vue warn failed mount component template render function defined found component problem resolveconstructoroptions method vueloader avts used component created ts file using vueextend render function added object vueloader component created render function part extendoptions vuerouter used suprtoptions changed logic resolveconstructoroptions completely ignores options happens believe options must merged extendoption thing done still get render function added vueloader", "num": "4052", "d": "10/2016"}, {"title": "transition class bind null values domexception addclass function", "body": "vuejs version animatein bind value empty string null addclass function exception semantically binding null value intended remove transition effect null check made addclass function transition ignored case null values", "num": "4050", "d": "10/2016"}, {"title": "objects array prototype reactive", "body": "vuejs version reproduction link steps reproduce press buttons expected counters increment actually happening simply vue reactivity works objects objects prototype happening vue js fancyarrayprototype function fancyarray new vue data normalarray objectwitharrayprototype new fancyarray watch normalarray function consolelog normal array triggered objectwitharrayprototype function watch never triggered consolelog object array prototype triggered created function thisnormalarraypush hey gt prints normal array triggered hey thisobjectwitharrayprototypepush hello gt prints nothing mount app problem easily circumvented assigning property object array would nice able use objects array prototype", "num": "4049", "d": "10/2016"}, {"title": "code relative path error", "body": "srccoreconfigjs import noop sharedutil import noop sharedutil", "num": "4048", "d": "10/2016"}, {"title": "ca nt get old value use object literal directive", "body": "vuejs version reproduction link steps reproduce use object literal directive change expected old value actually happening value object", "num": "4047", "d": "10/2016"}, {"title": "uncaught promise typeerror intermediate value function", "body": "vuejs version vuerouter version webpack version steps reproduce \u4f7f\u7528vuecli", "num": "4045", "d": "10/2016"}, {"title": "camelcased custom event name working", "body": "vuejs version reproduction link modified custom event example documentation example steps reproduce create custom event name custom event using camelcase call custom event ie using emit child component custom event wo nt listened nothing happened jsfiddle example incrementone custom event name buttoncounter component wo nt work clicking button change incrementone custom event name increment back normal everything work properly expected camelcased custom event name called parent component child component calling using emit actually happening use camelcased name custom event respond call change lowercased event name order respond call", "num": "4044", "d": "10/2016"}, {"title": "interpolation inside attributes removed deprecated", "body": "brought forums first phanan agreed deprecated misleading warning message logged trying use interpolation inside attributes interpolation inside attributes deprecated use vbind colon shorthand instead example instead use suggests feature still present removed future avoided however already removed seems deprecated replaced removed happy create pr helpful repro steps use mustache html attribute view messages logged console fiddle nt show console warning demonstrates feature removed", "num": "4042", "d": "10/2016"}, {"title": "suggestion warn user overrides vue internal methods", "body": "currently properties start proxied vue instance may conflict vue internal nt apply methods leading problematic cases like one users may accidentally define methods override vue internal api suggestion though arguably belongs userland might helpful vue introduce console warning cases", "num": "4041", "d": "10/2016"}, {"title": "request feature bowerjson vue", "body": "thanks", "num": "4040", "d": "10/2016"}, {"title": "", "body": "", "num": "4039", "d": "10/2016"}, {"title": "vuecli", "body": "\u5b89\u88c5\u4e86sudo npm install g vuecli init webpack vuecli helpersifeq amp amp helpermissing call function", "num": "4038", "d": "10/2016"}, {"title": "functional components rerendered props unchanged", "body": "vuejs version reproduction link steps reproduce open jsfiddle click button multiple times expected component rerendered props changing actually happening functional component rerendered props unchanged regular component exhibits expected behaviour optimise avoid expensive renders complex application moving html logic functional components expect rerendered data passed nt change intended perhaps docs reflect quirk nt see reason always call render function safely assume resulting html unchanged input output", "num": "4037", "d": "10/2016"}, {"title": "ssr typeerror h function", "body": "trying implement serverside rendering faced problem try make ps using functional component project view", "num": "4036", "d": "10/2016"}, {"title": "ref name multiple item create array refs render function", "body": "vuejs version reproduction link steps reproduce expected refsa dom node list actually happening refsa single dom", "num": "4035", "d": "10/2016"}, {"title": "infinite loop custom component object properties", "body": "vuejs version reproduction link note loops number steps reproduce create custom component able use vbind create watcher updates local data variable based value prop create watcher local variable emit updated value back parent set value local variable object expected local value gets updated event emitted parent update bound value prop actually happening watcher value keeps firing keeps calling local variable watcher turn updates parent updates value basically work like works fine vmodel value stringintbool etc issue starts value object array understand javascript b b stands reason watcher nt called new value old value equivalent eg jsonstringify newvalue jsonstringify oldvalue missing something", "num": "4032", "d": "10/2016"}, {"title": "feature request check iterator vfor first last", "body": "need check iterator vfor firstlast example html key val problem arrayobject keys numeric vue", "num": "4031", "d": "10/2016"}, {"title": "triggering method child component broadcast", "body": "hi found users similar issue far solution please look code calls child component vfor childitem component method called toggle want trigger toggle method specific child component instance know cant dynamic ref el using index moreover children coming created broadcast defined suggestion solution thanks bala", "num": "4030", "d": "10/2016"}, {"title": "react contextlike feature", "body": "would react contextlike feature ever added context implicit way pass data component without pass props every level generally good idea use context applicationspecific logic useful objects like stores currently working helper mixin achieves something similar would prefer see baked core", "num": "4029", "d": "10/2016"}, {"title": "", "body": "", "num": "4028", "d": "10/2016"}, {"title": "truevalue falsevalue working like expected", "body": "following form binding request params directly bound vue data model thus expect following gt case empty string lead false positive tested vuejs", "num": "4027", "d": "10/2016"}, {"title": "\u5efa\u8bae\u6539\u8fdbconfig ignoredelements", "body": "ignoredelementsindexof tag \u8fd9\u4f1a\u5bfc\u81f4\u5f53 ignoredelements \u90fd\u53ef\u4ee5\u901a\u8fc7", "num": "4026", "d": "10/2016"}, {"title": "compile function", "body": "vuejs version miss self compile self el way rebuild page easy way realize many public js components base jquery selfrender function event listener although use jquery way bind function bla bla bla things vue think vue way better could u help found many others puzzle", "num": "4025", "d": "10/2016"}, {"title": "\u52a8\u6001 props\u5904\u5c11\u7684data \u662f\u9057\u6f0f\u4e86\u5417", "body": "\u8bf7\u95ee\u52a8\u6001 props \u662f\u5426\u5e94\u8be5\u52a0\u4e0a data", "num": "4024", "d": "10/2016"}, {"title": "embeddable apps", "body": "far understand many things vue bound vue prototype instance vuex router etc call bound extension prototype problem standalone vuedriven application makes impossible build encapsulatedembeddable apps modern techniques availability cors support browsers web trends growing market stuff widgets sort like button support chats weatherstock widgets fullfeatured embeddable applications one drop site page provide services emberjs provides option set without prototype overloading fully isolated configured route via history api base url case vue one main stopper target page already uses vue problems feature considered roadmap nt know amount work needed unbound extensions prototype break existent extensions think beneficial many cases", "num": "4023", "d": "10/2016"}, {"title": "feature request vonce databound", "body": "method restrain data responsive mean since vonce directive seems restrain data responsive like ever databound indicate restrain data responsive dom wo nt rerender data true data false dom still data responsive making search result page want hold search result static user entering new search term page fetching search result fulfill autocomplete user hit return key click search button search result refreshed pseudocode html", "num": "4020", "d": "10/2016"}, {"title": "vue work use", "body": "code used iframe tag value span tag turned hello world problem", "num": "4019", "d": "10/2016"}, {"title": "model number modifier fails cast selected value select element", "body": "vuejs version reproduction link steps reproduce change selected option look output element expected selected number type element bound variable model modifier actually happening vue fails cast selected value remains workarounds people suggested binding value workaround fix great modifier worked least would notice documentation", "num": "4018", "d": "10/2016"}, {"title": "allow css variable style binding object syntax", "body": "sure intentional would like able instead able find workaround quickly thanks doc search bit different important would like push feature thanks lot good work work pr agree proposition", "num": "4017", "d": "10/2016"}, {"title": "using class names instead attributes would make scoped styles faster", "body": "vuejs version vue per docs using generated attribute names scoped styles example turns selectors hover hover matching tracking invalidation attribute selectors slow though get much better recalcstyle see chrome devtools timeline performance use generated class name like hover", "num": "4013", "d": "10/2016"}, {"title": "strange behavior using conditional operator textxtemplates", "body": "hello working private project came across strange error simplified code reproduce anyways makes sense problem exists using replacing tag tag makes versions work applies dont use template eg use custom element component vuejs version reproduction link working working steps reproduce change concertbandslength gt index index lt concertbandslength expected version work actually happening latter version throws error parsing template", "num": "4012", "d": "10/2016"}, {"title": "suggestion schema management", "body": "hi know project frontend based manycomponentsforcreatingoneform vuejs good innovation pole would like raise feature schema management cooperation one however technical js enough coding project also interested meteor already sent message aldeed simple schema package maintainer think could good lever object oriented frontends would improve everything fast word file enclosed let know prefer another format updated version next post thanks marc", "num": "4009", "d": "10/2016"}, {"title": "\u5728django\u4e2d\u4f7f\u7528vuejs list \u7684 index defined", "body": "\u62a5\u9519 index defined", "num": "4008", "d": "10/2016"}, {"title": "official ducumented support ajaxxhrfetch requests", "body": "got vue loving however wanted simple ajax request things kind stopped ducked vue ajax request got lot different results non official used lib obvious choise seems vueresource reports people getting work etc another issue vueresource non promise api catch also nt seem support new fetch api guess issues vueresource mention project looks official request would official vue docs include example best ajax call newcomers nt spend hour searching best practice would recon apps use ajaxrequest think docs thanks great alternative react", "num": "4006", "d": "10/2016"}, {"title": "include", "body": "hi guys want include scipts page contactvue mode work working removed please help tks", "num": "4005", "d": "10/2016"}, {"title": "problem type console", "body": "document description document know open browser javascript console set appmessage different value see rendered example update accordingly code html message value", "num": "4004", "d": "10/2016"}, {"title": "use wechat jssdk fail", "body": "", "num": "4003", "d": "10/2016"}, {"title": "ssr possible scopeid interference two components rendering", "body": "vuejs version steps reproduce javascript import vue vuedistvuecommonjs import createrenderer vueserverrenderer const rendertostream createrenderer const padding new array join x const new vue template scopeid const new vue template scopeid var rendertostream var b rendertostream var res aon data text gt res texttostring replace xg aon end gt consolelog res aread bread expected scopeid independent thus log html actually happening scopeid goes html found reading server rendering code problem shared across render functions returned nt know nodejs schedules stream flowing might pernicious bug two streams calls interleaved", "num": "4002", "d": "10/2016"}, {"title": "vue router routerlink update properly using tag", "body": "vuejs version vue version vuex version vuerouter version reproduction link steps reproduce hover link see click button see site id changed link expected click button see actually happening see fix remove tag", "num": "4001", "d": "10/2016"}, {"title": "list rendering vhtml nt work well", "body": "html elements always get replaced working intended anyone know workaround allow stay instead going back external plugins return arbitrary html rendered list good example embedded youtube videos unwatchable keep getting replaced", "num": "4000", "d": "10/2016"}, {"title": "local components inheritance", "body": "topic discussed long time ago want return think many developers benefit feature try make apps modular possible moreover component approach forces us make many simple mostly stateless components components set treelike hierarchy often leads situation set components used one branch tree case registering components globally bad thing obviously register globally truly global used app hand registering locally lead code overbloat repeatings rises possibility errors makes app support harder show real example app currently working many cases structure cutted illustrate case app considered sort subapplication thing like keynote powerpoint consists various components key used builder various subcomponents lots tens templates never used outside builder obviously good register globally also obviously repeated local registration components many places horrible yes probably could collect components single file export object require file several places object destruction work bad fact way forced html editorvue export default components require componentsslides default really nt think proper solution like hack work granular cases also nt think local components inheritance break dependency tree lucidity especially vue inspector could tip component came maybe type components b registered property something like thing think suggest feature make life easier many scenarios", "num": "3999", "d": "10/2016"}, {"title": "index defined", "body": "someone help index defined code x methods removeelement function e index epreventdefault thiselementssplice index", "num": "3998", "d": "10/2016"}, {"title": "overwriting style attribute vue", "body": "hello vue style attribute merged vue completely overwritten design following jsfiddle remove style attribute apply style within component definition long style present main html window completely overwrite component style thanks", "num": "3997", "d": "10/2016"}, {"title": "\u539f\u6765vue\u7684\u6570\u636e\u8fd8\u53ef\u4ee5\u8fd9\u4e48\u54cd\u5e94", "body": "", "num": "3996", "d": "10/2016"}, {"title": "template vfor item items \u4e0d\u80fd\u5168\u90e8\u6e32\u67d3\u4fe1\u606f", "body": "itemtitle", "num": "3995", "d": "10/2016"}, {"title": "events components bubble parent", "body": "vue componentavue componentbvue componentcvue", "num": "3994", "d": "10/2016"}, {"title": "dom rendering first time flashing use vif vshow vcloak", "body": "vuejs use correctly", "num": "3993", "d": "10/2016"}, {"title": "select option value ca nt rendered expected", "body": "got problem project render select like use string value first option could caught vuevalidator user nt select one options use default value formdatatype vue object wondering vuejs ca nt render first option chosen page default value choose first option value formdatatype vue ca nt render select first option chosen formdatatype", "num": "3992", "d": "10/2016"}, {"title": "vuejs", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "3991", "d": "10/2016"}, {"title": "vue vbind class work", "body": "render div class binding something wrong result chrome like child div anyone help", "num": "3990", "d": "10/2016"}, {"title": "ignore vmodel", "body": "vuejs version reproduction link vmodel use vuejs chrome console output vue warn failed compile template use vueminjs information outputed console empty webpage steps reproduce expected ignore case dont compile like von click cause problem actually happening", "num": "3989", "d": "10/2016"}, {"title": "strange component communication", "body": "vue data object without defined property fail property receive event another component triggered event step reproduce type fail field type success field vue fine reaction success field nt receive text property", "num": "3987", "d": "10/2016"}, {"title": "input dont want reactivity", "body": "hi typing input model effect e reactivity orderwhotook export default props list json list objects", "num": "3986", "d": "10/2016"}, {"title": "problem custom directive update callback", "body": "vuejs version reproduction link steps reproduce write something input watch console expected updatefunction excuted change input value actually happening updatefunction excuted change input value", "num": "3985", "d": "10/2016"}, {"title": "use key prop name component", "body": "vuejs version reproduction link steps reproduce sample expected thiskey key actually happening thiskey undefined vue problem", "num": "3984", "d": "10/2016"}, {"title": "data pushed array trigger update view", "body": "data pushed array trigger update view", "num": "3983", "d": "10/2016"}, {"title": "emit component work", "body": "create events component created vue component code work create component trying call event jquery work work app", "num": "3982", "d": "10/2016"}, {"title": "inlinetemplate issues", "body": "inlinetemplate components must exactly one child element", "num": "3981", "d": "10/2016"}, {"title": "unable watch nested data", "body": "vuejs version reproduction link steps reproduce create component nested data property object object containing array set watcher property specifying deep flag expected value array changes watcher runs actually happening watcher nt getting triggered code seemed work fine vue nested objectsarrays correct way managing view lots inputs", "num": "3979", "d": "10/2016"}, {"title": "templates functional components", "body": "like able write templates files functional components way standard components made proofofconcept fiddle quite hacky maybe template compiler could option make resulting functions adapted object would look like propsmsg static content n export default functional true props msg test margin", "num": "3977", "d": "10/2016"}, {"title": "removing element iterated array chekbox update model containing values selected checkboxes", "body": "vuejs version reproduction link steps reproduce select last checkbox click button remove last checkbox expected expected remove value checkbox removed selecteds variable actually happening value removed checkbox remains array selected checkboxes thank effort", "num": "3976", "d": "10/2016"}, {"title": "class binding removes dynamically added classes", "body": "vuejs version reproduction link steps reproduce see fiddle create vbind class dynamically add class using js elementclassname change vbind class binding value overwrite class added using elementclassname expected vue possible dynamically add classes important mdl support dynamically adds classes like isupgraded actually happening class names added manually removed", "num": "3975", "d": "10/2016"}, {"title": "allow mode transitiongroup", "body": "standalone demo repo shows issue click button click second notification appears first one disappears meant solve tag equivalent leads unattractive transition effect example could use instead except fact click button button vue gives error saying need use", "num": "3974", "d": "10/2016"}, {"title": "lt pug nt work", "body": "env macos beta nodejs vuejs steps reproduce init test vue project default options edit srccomponentshellovue div div vif lt export default run dev server actually happening got error test dev usersxiaoxiaotest node builddevserverjs listening webpack wait bundle finished indexhtml webpack built hash version webpack time asset size chunks chunk names appjs kb app error srccomponentshellovue module build failed error error parsing template lt export default babelloader vueloaderlibselectorjs typescript amp srcappvue child htmlwebpackplugin indexhtml asset size chunks chunk names indexhtml mb webpack bundle valid description similar issue however situations replace lt wo nt trigger error bug pug error occurs pug called fact error happens even pug installed thanks time review issue", "num": "3973", "d": "10/2016"}, {"title": "vuecompile function", "body": "using vuejs webpacksimple template would compile template render code appvue javascript msg export default name app mainjs javascript import vue vue import app appvue const res vuecompile app const vm new vue el app data msg hello render resrender staticrenderfns resstaticrenderfns start server got error please help make work", "num": "3972", "d": "10/2016"}, {"title": "", "body": "child msg export default data return msg hello vue parent import hello componentshello export default components hello methods handleclick consolelog handleclick \u8fd9\u662f\u4f7f\u7528vue", "num": "3971", "d": "10/2016"}, {"title": "slog component working render function", "body": "vuejs version followed babelplugintransformvuejsx using jsx project everything goes well except get component working use function code child component jsx imagepreviewjsx export default vueextend mounted consolelog use template work template hi parent componentapp jsx import imagepreview imagepreviewjsx new vue el app inspect element devtool element", "num": "3970", "d": "10/2016"}, {"title": "empty value property causes template compilation fail", "body": "vuejs version reproduction link steps reproduce bind prop empty string value provide json object string would work use empty string template fail compile sure expected behaviour vue used work vue however feels little counterintuitive example providing content prop serverside need check exists return literal string otherwise expected application still renders property becomes empty string null actually happening warning shown console application fails render found root instance", "num": "3969", "d": "10/2016"}, {"title": "view updated wechat browser", "body": "update project find data updated settimeout nt update view occur wechat browser", "num": "3968", "d": "10/2016"}, {"title": "component templates render first element", "body": "vuejs version reproduction link expected render renders fails works actually happening component template rendering first element discarding rest nt matter whether inline result", "num": "3966", "d": "10/2016"}, {"title": "vue problem slot", "body": "hello using vue standalone problem components slot always render default value inside slot never render content inside custom component packagejson name webcomponents description vuejs project author private true scripts watchify watchify vd p browserifyhmr e srcmainjs distbuildjs serve c localhost dev npmrunall parallel watchify serve lint eslint ext js vue src testunit test karma start karmaconfjs build crossenv nodeenvproduction browserify g envify p vueifypluginsextractcss distbuildcss e srcmainjs uglifyjs c warningsfalse gt distbuildjs browserify transform vueify babelify aliasify aliases vue vuedistvue dependencies vue devdependencies aliasify babelcore babelplugintransformruntime babelruntime babelify browserify browserifyhmr crossenv envify eslint eslintconfigstandard eslintpluginhtml eslintpluginpromise eslintpluginstandard jasminecore karma karmabrowserify karmajasmine karmaphantomjslauncher karmaspecreporter npmrunall phantomjsprebuilt proxyquireify uglifyjs vueify watchify mainjs show failed mount component template render function defined import vue vuedistvue import vue vue import hello componentshellovue vuecomponent hello hello new vue eslintdisableline nonew el app hellovue html msg defect export default name hello data return msg welcome vuejs app indexhtml html webcomponents change value", "num": "3965", "d": "10/2016"}, {"title": "vonce nt work list rendering", "body": "like", "num": "3964", "d": "10/2016"}, {"title": "watched input old value new value", "body": "vuejs version reproduction link steps reproduce write something input watch console expected new value old value different actually happening new value old value", "num": "3962", "d": "10/2016"}, {"title": "feature request add maxstack component keepalive", "body": "like vue cache switchedout components", "num": "3961", "d": "10/2016"}, {"title": "localregistration data vue data must function", "body": "", "num": "3960", "d": "10/2016"}, {"title": "add function reset component state", "body": "function vue core reset component state like simplify common pattern lead clearer code code function getinitialdata return b export default data getinitialdata methods reset data getinitialdata submit stuff thisreset would become", "num": "3959", "d": "10/2016"}, {"title": "vue vmodel updating using array", "body": "process migrating application vue application several selects vmodel binds individual index array without problems vue version update believe potential bug reproduced problem vuejs version reproduction link steps reproduce expected actually happening", "num": "3958", "d": "10/2016"}, {"title": "mixins props correctly mixed registered globally", "body": "vuejs version reproduction link steps reproduce register mixin props globally pass prop value component expected myprop becomes prop hellovue value myprop foo actually happening value myprop undefined notes props correctly mixed registered directly component using default values passed correctly never change clone provided git repository run see bug repo contains two components hellovue hellowithlocalmixinvue demonstrate apparently buggy behavior also see appvue mainjs", "num": "3957", "d": "10/2016"}, {"title": "problem updating array key binding element", "body": "vuejs version reproduction link steps reproduce click change button update array expected dom update display james bill actually happening james displayed following warning logged console exception raised uncaught promise typeerror read property tag undefined lign", "num": "3955", "d": "10/2016"}, {"title": "compile", "body": "sorry ask question asked gitter vuejs forum nt receive answer really stuck feel free close thinks asked wrong place currently using trying migrate technical reason components loaded inserted dynamically call inserted components rendered correctly notice looks like nt help thanks", "num": "3954", "d": "10/2016"}, {"title": "computed property changing", "body": "asked vue gitter room said looks good verify prop component receiving changing looking vue devtool problem computed property change component export default name postable props items computed empty function newitems return objectkeys newitems length methods mapactions addtopos props passed parent even tried moving computed used store value directly thing always", "num": "3953", "d": "10/2016"}, {"title": "installation docs link version", "body": "", "num": "3952", "d": "10/2016"}, {"title": "vmodel textarea tag rendering time long", "body": "vmodel textarea long data case rendering time long browser blocked form tags problem", "num": "3951", "d": "10/2016"}, {"title": "component data reset inside vfor", "body": "vuejs version reproduction link description hello guys problem stupid doubt bug researches led nothing vfor component problem update array used vfor everything alright except data component keeps values also created called like components sort recycled bug using wrong thanks", "num": "3950", "d": "10/2016"}, {"title": "using element using vue makes element disappear dom errors console", "body": "version vueminjs vue library based recommended template working ok vue using element using vue makes element disappear dom errors console", "num": "3949", "d": "10/2016"}, {"title": "runtimeonly build cdn contain references processenvnodeenv offer alternative build", "body": "bundling code using vue unpkg even using option forced use standalone build runtimeonly one node variables like uncaught referenceerror process defined", "num": "3948", "d": "10/2016"}, {"title": "inheritbind props parent", "body": "allow child component auto inherit props parent html hello export default props hello string html world world import componenta componentavue export default props componentaprops components componenta", "num": "3946", "d": "10/2016"}, {"title": "nexttick nt guarantee el indocument", "body": "vuejs version steps reproduce try use chrome logs error mounted nexttick gt thiscalendarheight elqueryselector calendar getboundingclientrect height", "num": "3945", "d": "10/2016"}, {"title": "data attribute point function defination", "body": "hi want set data attribute point function definition set methods like possible data return handler thismethodshandler methods handler consolelog", "num": "3944", "d": "10/2016"}, {"title": "vueset nt support sparse array", "body": "jsfiddle expected would bug got instead", "num": "3942", "d": "10/2016"}, {"title": "vue packages version mismatch", "body": "vuejs version reproduction link app ci log app console says use ci build app bug happens ci log shows fyi used template create app reinstalled weird thing use works well", "num": "3941", "d": "10/2016"}, {"title": "allow root nodes vif velse", "body": "ver macchrome \u770b\u4e0a\u9762\u7684\u5730\u5740\u8bf4 \u4fee\u590d\u4e86 \u4f46\u662f \u5f53vif\u6761\u4ef6\u6210\u7acb\u65f6 vif\u80fd\u6b63\u5e38\u6e32\u67d3\u51fa\u6765 \u5f53vif\u6761\u4ef6\u4e0d\u6210\u7acb\u65f6 velse\u5e76\u4e0d\u4f1a\u6e32\u67d3\u51fa\u6765 test \u4ee3\u7801\u4e2d\u7684button \u5e76\u6ca1\u6709\u6e32\u67d3\u51fa\u6765 code render", "num": "3940", "d": "10/2016"}, {"title": "vue working ios", "body": "render ios lt ios work fine", "num": "3939", "d": "10/2016"}, {"title": "vuetransition function webpack vue project", "body": "import vue vue vuecomonent test template test ok blow code run got error uncaught typeerror vuetransition function vuetransition fade css false enter function el done el css opacity animate opacity done entercancelled function el el stop leave function el done el animate opacity done leavecancelled function el el stop", "num": "3938", "d": "10/2016"}, {"title": "ca nt seem bind value attribute inputs", "body": "following works results following enter foobar field however try thing value nt behave results", "num": "3937", "d": "10/2016"}, {"title": "strange dom behaviour", "body": "preface read docs think done right thing ie proper oneway flow passing data props emitting events properly content changes might something really dumb please accept apologies really super clear going wrong vuejs version reproduction link visit steps reproduce swap blocks around using updown arrows note everything fine add new block set content eg add second new block notice content copy previous block data correctly blank move top block one notice renders correctly empty move back data looks fine dom displays content previous block eg set content top block eg move top two blocks display data ok move block back everything looks fine expected see description actually happening top block displays copy second block despite correct data", "num": "3935", "d": "10/2016"}, {"title": "trim whitespaces texts vuetemplatecompiler output", "body": "love feature single file components allow proper syntax highlighting write html without putting everything awkward javascript strings proper indentation within template useful improve readability files consider example compile webpack resulting bundle contains compiled version template find following line option described configure webpack get following note one array entry gone ie whitespace removed leading trailing whitespaces string feature rrequest allow trim texts compilation result look like changing line follows achieves want know whether might break complex layouts posted issue discussion", "num": "3934", "d": "10/2016"}, {"title": "flow directory missing installing vue npm", "body": "please publish flow directory delcaration files npm see types folder typescript users would try switch typescript flow also vuerouter missing flow directory installed npm thank advance", "num": "3933", "d": "10/2016"}, {"title": "inlinetemplate component compile slot use", "body": "vuejs version reproduction link", "num": "3931", "d": "10/2016"}, {"title": "transition leave hooks getting triggered", "body": "vuejs version reproduction link steps reproduce toggle button console displayed expected leave hooks triggered enter ones actually happening enter hooks getting triggered", "num": "3930", "d": "10/2016"}, {"title": "duplicate attribute class edge ie", "body": "vuejs version reproduction link steps reproduce load page edge internet explorer console open vue display warning duplicate attribute class removing attribute warning goes away expected warnings expect vue use regular attribute attribute merge together attribute", "num": "3929", "d": "10/2016"}, {"title": "", "body": "vuejs version steps reproduce \u4fe1\u606f\u4e3a message index var vmnew vue el vuedemo data message hello vuejsindex url wwwbaiducom expected \u6211\u60f3\u8ba9id\u7684 index actually happening index \u5e76\u6ca1\u6709\u663e\u793a", "num": "3928", "d": "10/2016"}, {"title": "ca nt receive event global child component event emit router beforeeach method", "body": "vuejs version steps reproduce expected receive event child actually happening received nothing event stickywhen emit child component may created", "num": "3927", "d": "10/2016"}, {"title": "", "body": "\u4fe1\u606f\u4e3a message index", "num": "3926", "d": "10/2016"}, {"title": "", "body": "\u4fe1\u606f\u4e3a message index", "num": "3925", "d": "10/2016"}, {"title": "initial inline input value", "body": "vuejs version reproduction link switching realize possible define model initial value template anymore let say serverside validated form preview powered vue brings back user validation detected error like populate form previously typed values get corresponding preview simply set inline value anymore vue warns took look migration guide found confirmation possible anymore ca nt find workaround course simple solution would modify initial value model within vue instantiation children component vue file webpacked scripts got solution working seems little bit overkill regarding usual elegance vuejs aim issue way pass initial value vmodel template vue used", "num": "3924", "d": "10/2016"}, {"title": "use keyword vuetemplatecompiler", "body": "exactly bug feature request apologies advance appropriate post inquired gitter chat nt able figure trying understand use deprecated keyword templaterender functions use strict mode basically nil means templated render functions work limits packagability vue components unless created exclusively virtualdombased render functions ran across issue trying webpacktogether bunch vue components spread across different modules webpack complains use keyword use strict context nt possible refactor template compilation use would slow massively real question recommended way packaging vue components render functions imported natural way without running afoul webpack strict guidelines", "num": "3923", "d": "10/2016"}, {"title": "set already created unmounted component", "body": "gone docs got response chat room forum starting wonder currently possible create dynamic component via setting component ca nt seem set existing component instance example working non working case components need setting shown setting data calling methods", "num": "3920", "d": "10/2016"}, {"title": "render functions behaviour changed without notice", "body": "since version subtle changes createelement behave createelement first argument string html tag prior accepting globally registered components render function must return value getting rendered without rising errors examples raise error jsfiddle link", "num": "3919", "d": "10/2016"}, {"title": "issues templates jsfiddle require updating", "body": "noticed issues template states default vue would nicer state additionally follow fiddle link provided nt execute example setting body element forbidden", "num": "3918", "d": "10/2016"}, {"title": "multiple select elements change event problem", "body": "multiple select box work vue instance vuejs version vuejs reproduction link steps reproduce change second select box value method testmethod called infinite times even bonded second select box change first select box value later change second select box value everything works expected expected update different models select actually happening infinite call assigned change method", "num": "3917", "d": "10/2016"}, {"title": "ca nt change select box arrow keys certain cases", "body": "uploaded simple standalone project explains situation focus select dropdown try use updown arrow keys change nt work console oninput get printed though every key press comment work leave uncommented instead remove class part work well working latest stable chrome tried figure could causing strange behavior luck", "num": "3916", "d": "10/2016"}, {"title": "template syntax error vmodel support dynamic input types use vif branches instead", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "3915", "d": "10/2016"}, {"title": "get props value code", "body": "hi guys may know get props value code template vbind want get props value control css class data function like", "num": "3914", "d": "10/2016"}, {"title": "nested vfor bug", "body": "vuejs version reproduction link steps reproduce use vfor render component component write vfor template wrapped root element open console run test function expected open console run success function actually happening throw warning error uncaught promise typeerror read property tag undefined situation however one contains two templates vif nested vfor one contains three templates vif project contain also want know template nested vfor run good", "num": "3913", "d": "10/2016"}, {"title": "style affect value update", "body": "vuejs version reproduction link written example jsfiddle steps reproduce style opacity isshow default value isshow dom hidden change value another property second expected nt effect style renderer results value changed actually happening change value another property second hidden dom show", "num": "3912", "d": "10/2016"}, {"title": "ios safarichrome multiselect vue", "body": "yet run fiddle ios safari chrome see first items selected open select item unselected click done items remains open item unselected click done items selected openclose items selected repeat sequence items items keep changing without selecting deselecting anything", "num": "3911", "d": "10/2016"}, {"title": "transition children created vfor triggered appear", "body": "vuejs version reproduction link steps reproduce list vfor transition item expected transition triggered adding item runtime actually happening transition triggered removing item adding", "num": "3909", "d": "10/2016"}, {"title": "transitiongroup working tables", "body": "transitiongroup appears ignored applied table furthermore keep pressing shuffle button rows getting cut", "num": "3907", "d": "10/2016"}, {"title": "vif amp amp operator working", "body": "vuejs version steps reproduce give error could problem pug render engine translating", "num": "3906", "d": "10/2016"}, {"title": "style value ignored", "body": "related vuejs version steps reproduce problems reproducing jsfiddle even projects inconsistent html expected div actually happening property style add runtime shows rerender missing vue inspector also shows string works expected", "num": "3905", "d": "10/2016"}, {"title": "", "body": "child parent", "num": "3902", "d": "10/2016"}, {"title": "chromevue multiple select items selected correctly", "body": "addition issue via opened issue also another problem know related looking solution tried right away multiple selections nt work last item selected preselected items ps vue works fine already downgraded apps", "num": "3901", "d": "10/2016"}, {"title": "migration vm destroy nt apply leave transition", "body": "vm destroy take one parameter remove set true related dom element removed dom important apply leave transition well seems way trigger leave transition case since remove deprecated simple example content class toast show msg var comp new vue toastcomp compcontent msg comp mount appendto body settimeout gt comp destroy true called create new vue instance append body removed automatically see version", "num": "3900", "d": "10/2016"}, {"title": "entities encoding problem ssr", "body": "vuejs version reproduction link steps reproduce open browser expected basicrenderingentitiesencoding function done var renderer require vueserverrenderer createrenderer actually happening entities codes rendered page contains entities codes like", "num": "3899", "d": "10/2016"}, {"title": "mounted hook nt triggered instantiated parent", "body": "vuejs version reproduction link steps reproduce instantiate vue parent mounted triggered nt know normal behavior think tell missed something noticed mounted hook called createcomponentjsinsert nothing going executing code thanks vue btw awesome lib", "num": "3898", "d": "10/2016"}, {"title": "data variables accessed computed property filter function", "body": "see code pen demonstrating data variable accessible within list filter accessible assign temporary variable filter", "num": "3897", "d": "10/2016"}, {"title": "issue inside component", "body": "vuejs version reproduction link steps reproduce expected actually happening shows button element browser chrome", "num": "3896", "d": "10/2016"}, {"title": "issue rendering certain unicode characters", "body": "vuejs version reproduction link steps reproduce run jsfiddle see content nt displayed errors console expected would expect app run regardless unicode characters without errors actually happening found root instance uncaught typeerror set property isstatic undefined background sure right place feeling bug vue also point knowledgable character encodings information testing vue upgrade website lot usergenerated content appears usergenerated contains uncommon unicode characters like line separator appear invisible standard however appear content vue page vue fails completely removes entire dom node tree leaving page bare jsfiddle demonstrates issue notice jsfiddle highlights unicode character question remove character app runs correctly", "num": "3895", "d": "10/2016"}, {"title": "typing chinese ime vmodel bound input keydown listener", "body": "issue concerns chinese ime think affects chinese users following chinese vuejs version reproduction link steps reproduce \u4f7f\u7528 macos \u81ea\u5e26\u7684\u4e2d\u6587\u8f93\u5165\u6cd5\u5728\u8f93\u5165\u6846\u8fdb\u884c\u8f93\u5165 expected actually happening \u4ee3\u7801\u7684\u7b2c \u81f3 vue \u5728 macos \u6ca1\u6709\u6d4b\u8bd5", "num": "3894", "d": "10/2016"}, {"title": "add warning trim event handler extra space template", "body": "vuejs version reproduction link steps reproduce see extra space click link output expected console warn event handler nt exist execute directly actually happening console output nothing even webpack dev environment vue nt show warning expect vue give warning situation trim execute method", "num": "3893", "d": "10/2016"}, {"title": "views created inside components put global scope", "body": "vuejs version reproduction link steps reproduce set template component tag attribute create view components field components firstview vuecomponent firstview render function createelement return createelement div slotsdefault create second component render expected documentation states components created object component available component scope actually happening view becomes global component makes code reuse tricky gives unexpected results using somewhat generic view names", "num": "3892", "d": "10/2016"}, {"title": "vue compile template string browsers", "body": "vuejs version standalone build reproduction link steps reproduce expected link url compiled actually happening vue compile template string tencent qq mobile wechat uc mobile browsers", "num": "3891", "d": "10/2016"}, {"title": "vue single letter key aliases key modifiers nt work", "body": "vuejs version reproduction link steps reproduce type v first textbox expected expected see alert actually happening alert shown info type v second textbox uses keycode instead key alias works expected", "num": "3890", "d": "10/2016"}, {"title": "bug use amp amp directive transfrom amp amp", "body": "use amp amp directive transfrom amp amp gt nt want use compiled cause simple", "num": "3889", "d": "10/2016"}, {"title": "nt bind chrome extension", "body": "vuejs version steps reproduce use vuejs chrome extension revert nt problem expected vuejs initializes fires ready method data event binding occur template actually happening ready fires binding nt occur", "num": "3888", "d": "10/2016"}, {"title": "v two waybind doesntwork", "body": "worked get mistake v js function html child \u65b0\u589e x \u8f93\u51fa", "num": "3886", "d": "10/2016"}, {"title": "hover work", "body": "work listgroupitem hover function find dask stop delay animate top function find dask stop animate top", "num": "3884", "d": "10/2016"}, {"title": "array directly inside array get watched", "body": "vuejs version reproduction link steps reproduce press create text press button expected text appeared right pressing create text instead press actually happening first instantiation vuejs app observer initial data see inner array nt watchers assigned inner loop template iterates array expect watcher created interestingly vue method triggered watched vue view appears refresh texts added inner array appear apparently longer example commit fixed issue real world case using empty array directly within array empty array nt watchers automatically set even though iterating template changing inner array instead object property empty array able get watchers watch empty array think bug nt wrap arrays objects nt want think edit updated description according jsfiddle reproduction", "num": "3883", "d": "10/2016"}, {"title": "lifecycle broken nested keepalive components", "body": "vuejs version reproduction link steps reproduce open reproduction link go authregister play step buttons console see components correctly activateddeactivated click login button redirected home view console see authloginregister components properly destroyed except components inside register component destroyed hook nt called expected dynamic component inside nested component always properly destroyed case redirecting see following logs console auth component destroyed login component destroyed register component destroyed destroyed step x actually happening destroyed hook step component never called means component never destroyed", "num": "3882", "d": "10/2016"}, {"title": "working working", "body": "working working without errors recently switched giving multiple warnings errors get warnings declaring initial values select components app data option ignored warning getting error app working works switch back fix", "num": "3881", "d": "10/2016"}, {"title": "conditional statements paths may exist", "body": "vuejs version reproduction link steps reproduce see could use computed property changing statements eg vif mydata amp amp mydatapath amp amp mydatapathexists ideal would add lot unnecessary code expected vue would fail property path exist actually happening typeerror exception thrown", "num": "3880", "d": "10/2016"}, {"title": "multitype prop validation consistent", "body": "vuejs version reproduction link steps reproduce create component prop type instantiate boolean value shorthand prop notation expected booleans accepted passed validator boolean value actually happening see validate booleans shorthand prop notation defining reversed seem work expected except able pass false value observations noticed following magic nt seem take option array types account", "num": "3879", "d": "10/2016"}, {"title": "multiple root components could allowed vif velse used", "body": "vuejs version reproduction link steps reproduce set standalone component template computed field computed iscomplex return false true expected following resolves exactly component believe could allowed throw error missing root component making return example display would display actually happening component template contain exactly one root element", "num": "3878", "d": "10/2016"}, {"title": "vmodel dynamic input type", "body": "vuejs version reproduction link building form component given radio check inputs similar like reuse component type dynamic ismulti flag turning checkbox rather radio nt seem work vmodel vuejs", "num": "3877", "d": "10/2016"}, {"title": "word emitted written emit ted migration vue doc", "body": "vuejs version reproduction link steps reproduce read first line listening native events components von chapter migration vue used component von listens custom events ted component expected used component von listens custom events emitted component actually happening ted", "num": "3875", "d": "10/2016"}, {"title": "suggest props used without declare better", "body": "case always define component suit almost scene always extend component fit one project vue props declared component makes complex need declare props like rect props used validation", "num": "3874", "d": "10/2016"}, {"title": "mistake code sample documentation", "body": "line removed initialize instances", "num": "3873", "d": "10/2016"}, {"title": "functional component used named slot another component", "body": "vuejs version reproduction link steps reproduce run demo expected default slot fallback inner actually happening inner named slot fallback replace part instead replaces part seems attribute working works fine deleted line functional component supposed named slot another component using wrong", "num": "3872", "d": "10/2016"}, {"title": "computed class bug originally designed", "body": "found bug using computed props class changed data generation always class default node merges maybe manually added class removed class vue help add eg fix js function updateclass oldvnode vnode updatevnodestaticclass vnode fix custom addclass elclassname var cls genclassforvnode vnode fix function updatevnodestaticclass vnode var el vnodeelm var data vnodedata var classlist arrayprototypeslicecall elclasslist var staticclass datastaticclasssplit find diff class elclassname classlistforeach function item var vnodeclass objectkeys dataclass vnodeclassindexof item amp amp staticclassindexof item staticclasspush item vnodedatastaticclass staticclassjoin", "num": "3871", "d": "10/2016"}, {"title": "child components hook called hook", "body": "vuejs version reproduction link steps reproduce open jsfiddle open devtools click show modal result view click ok modal observe consolelog statement order expected components hook always last hook fired actually happening hook getting called first hook later note makes difference component applied remove attribute modal hook order stays using tool like selectizejs inside modal want selectize stay modal offscreen destroy use events fire modal transitioned effect see flash destroyed selectize control", "num": "3870", "d": "10/2016"}, {"title": "vue null data causes render errors", "body": "vuejs version steps reproduce set data entry null instance mounted use vueresource request stats object replace template use stats item need statsproducts products actually happening idea make work without error console tried setting stats object default vue ideal tried use vif prevent rendering data properly available working either", "num": "3869", "d": "10/2016"}, {"title": "compatibility problem ssr", "body": "bundle rendering nt work exports function using instead server entry point throws error looks like compatibility problem bundle rendering changed codes nodemodulesvueserverrendererbuildjs following typeof mexports function resolve mexports context return var res objectprototypehasownpropertycall mexports default mexportsdefault works", "num": "3867", "d": "10/2016"}, {"title": "router routerstart either migration andor migrationhelper", "body": "old code var app require componentappvue var router new vuerouter routertransitiononload true routermap component frontcomponent routerredirect routerstart app app running migration tool code var app require componentappvue var router new vuerouter routes path redirect path component frontcomponent path station component boardcomponent path station url component journeycomponent routerstart app app im getting looked vue router migration routerstart defined anywhere looked docs router routerstart defined anywhere getting started use vue file generate app bit lost", "num": "3865", "d": "10/2016"}, {"title": "compile dynamic template bind vue event listeners", "body": "datatable component using many different componentspages different data pass object columns renders datatables action buttons edit delete nt action button trigger function component called code var datatablecomponent template datatabletemplate props columns default function return type array url default null type string data function return data mounted function thisgetdata methods getdata function fetch data api using defined url thisdata items id title test id title test id title test vuecomponent datatable datatablecomponent new vue el app data function return columns key id title id key title title title key id title options html function item return edit methods edititem function item alert editing item lt div gt datatable title would cool able somehow compile html content given columns object use vue provided elements directivespluginsmixins etc tried turning column definition components sure good idea define global components every column html field vue logic vue used partials handled problem well gotten little harder p guys idea think way solve problem also people wondering possible", "num": "3863", "d": "10/2016"}, {"title": "possible tag feature", "body": "tags reserved easy handle items like group container eg vif validations vfor cycles parent content extention dynamic component nt simplest need let mutate single element choice create depending container create dinamic element let choice create examples think could create reserved tag like component call eg know vue using render think render harder handle something simple choice use", "num": "3862", "d": "10/2016"}, {"title": "serverside rendering broken due render callback invoked multiple times situations", "body": "creating serverside rendering benchmark found benchmark breaking render callback passed invoked multiple times problem occur component rendered times rendering exact component large number times benchmark caused error created minimal repo reproduce problem additional docs please let know missing something looks like bug", "num": "3861", "d": "10/2016"}, {"title": "computed value parent child component props reactive", "body": "like title describe parent component parent component computed value set cache false reactive dependency getter like datenow want send computed value child component props fact computed value child component reactive example show resize editor click button see think normally computed value reactive component", "num": "3860", "d": "10/2016"}, {"title": "page found readmemd", "body": "links readmemd page working github page found info file found site configured address contain requested file site make sure filename case matches url root urls like must provide indexhtml file read full documentation information using github pages vuejs version reproduction link steps reproduce expected get respective docs page actually happening getting error", "num": "3857", "d": "10/2016"}, {"title": "vue nt understand cdata cdata gt", "body": "vuejs version reproduction link steps reproduce use cdata gt slot expected vue treats content inside cdata plain text actually happening vue attempts parse cdata content strange things", "num": "3856", "d": "10/2016"}, {"title": "vendorjs load slow", "body": "project builded vuecli vendorjs loaded slow somebody please help", "num": "3855", "d": "10/2016"}, {"title": "vfocus work official document", "body": "vuejs version reproduction link steps reproduce run expected input focused actually happening focus happen input element", "num": "3854", "d": "10/2016"}, {"title": "\u5347\u7ea7\u4f7f\u7528vue \u540e laravel elixir gulp \u51fa\u9519", "body": "vuecommonjs vue warn failed mount component template render function defined found root instance uncaught typeerror read property appendchild null uncaught typeerror read property addeventlistener null \u5b89\u88c5vueloader \u548c laravelelixirvueloader\u672a\u80fd\u89e3\u51b3", "num": "3853", "d": "10/2016"}, {"title": "chrome vue multiple select item unwantedly selected displayed", "body": "wasted much time investigate problem made new fresh installs etc result safari vue problem chrome vue problem chrome vue multiple select item selected displayed element show selected tag chrome debugger shows selected true ideas please screenshot added simple multiple select thanks", "num": "3852", "d": "10/2016"}, {"title": "ca nt sanitizemodify vmodel inputs", "body": "vuejs reproduction link seems clear way simply transform input data say simply notice workaround could create custom would overkill lot least lot use cases tried various setups computed properties also mentioned thread without success honestly convinced bug seem functionality missing area also kind hoping totally missing something simple understand attribute ignored using also seems make sense explicitly bind value expression would want take precedents speak particularly surprising example calling method transform model value using nt seem work either intentional update well sitting around messing quite realized couple implementations worked specifically using computed values getter setter sure missing", "num": "3851", "d": "10/2016"}, {"title": "camelcase capitalized abbreviation prop name works breaks", "body": "vuejs version reproduction link steps reproduce lt pass prop name like naming parent component idea intended consequence suggested conventionpractice work example gt break example finding ticket guessed fix would involve passing prop name totally makes sense retrospect would parser know meant sectionid sectionid solved note fix break code vue lt example words definitely edge case said break existing code work better worse prior patch version expected continuity passing props names like reiterate idea intended consequence suggested conventionpractice work actually happening nt know tiny manifestation smaller bug even worthy bug fix assuming even possible seem like warning somewhere andor slightly explicit docs", "num": "3850", "d": "10/2016"}, {"title": "problem ordering array sortablejs component", "body": "created vue sortable component takes javascript array emits event new ordering array item dropped weird issue nt work situations thought related images vfor able reproduce without images jsfiddle see list left break reordering items several times whereas list left never breaks position property update reflect new order item dropped hoping something simple missing using sortable fiddle", "num": "3849", "d": "10/2016"}, {"title": "directives break replacing item array using splice", "body": "vuejs version reproduction link steps reproduce click remove next expected result page rendered without vuejs throwing error info working small app twolevel hierarchy items item contains subitems rendered group contained items rendered recursively thus group item result different html rendered different directives elements replace group item using splice virtual dom nt notice html element changed directives tries update items directives group", "num": "3848", "d": "10/2016"}, {"title": "strange error reload", "body": "vuejs version reproduction link steps reproduce chrome push times ctrlshiftr expected actually happening", "num": "3847", "d": "10/2016"}, {"title": "invalid expression error due javascript keyword inside string expression", "body": "vuejs version reproduction link steps reproduce replace following inline expression total number tasks list one total number tasks list one extra task added expected expected list tasks including new one actually happening fails following error vue warn failed compile template invalid expression vfor todo body amet enim maxime sint corrupti velit voluptatem vel quis non eum assumenda omnis nemo nemo aperiam sequi vel repellat et createdat updatedat body alias non quae dolores debitis quia libero earum fuga rem provident esse consequatur facere enim laudantium quia et tempora et pariatur animi porro createdat updatedat body mollitia eaque doloremque esse fuga magnam qui non distinctio quam expedita et possimus commodi cupiditate illo modi suscipit qui id aut createdat updatedat body corrupti recusandae libero aut cupiditate illo aperiam fugit voluptas laboriosam rerum soluta doloremque nulla praesentium eos magnam aut qui magnam createdat updatedat body est et inventore est minus qui aut veritatis et vitae beatae doloremque ut veniam autem ad tenetur enim dolorem aut ea createdat updatedat body est voluptas dicta et ipsam blanditiis eveniet quaerat reiciendis tempore dolor qui repudiandae adipisci explicabo facilis harum ducimus consequatur aut itaque et facere aspernatur accusantium qui assumenda createdat updatedat found root instance notes error occurs injecting list view server eg using laravelblade backend requesting tasks everything works ok client request fails", "num": "3846", "d": "10/2016"}, {"title": "vuecommonjs uncaught typeerror read property tolowercase undefined node", "body": "seems happen assign value component data property within beforemount method component references data object like hello beforemount thisuser storestateuser error thrown inside vuecommonjs line function assertnodematch node vnode vnodetag consolelog assetnodematch node vnode interesting note error thrown actually assign thisuser within beforemount leave vif reference template nt assign anything property ever nothing thrown consolelog put shows right error thrown assetnodematch vnode tag div data undefined children array text undefined elm seeing node plain nodeopstagname ca nt find tagname property given node throws error node generated vue sure maybe server browser template state matching using ssr regardless error maybe handled differently anyone suggestions", "num": "3844", "d": "10/2016"}, {"title": "cannt use vmodel customs components", "body": "updated app happens cannt use vmodel component example warning property method address defined instance referenced render make sure declare reactive data properties data option found component thanks", "num": "3843", "d": "10/2016"}, {"title": "refs reactive able use computed properties", "body": "refs longer reactive need emit events payloads child components fine works well becomes hard maintain following scenario create custom form input component basically wraps input reusable component longer access input value props reactively eg computed prop parent take following usecase isvalid valid invalid previously could create computed prop like since refs nt work reactively anymore need use inform parent changes however emits handled methods need separate handler per input deal events something like handlevalidemail value thisemail value thisemailisvalid true handlevalidpassword value thispassword value thispasswordisvalid false could refactor bit nice way dealing assuming using forms quite common occurence lot devs think better solution something like", "num": "3842", "d": "10/2016"}, {"title": "docs missing slot option render function data object", "body": "referring part doc writing render function want pass something named slot component write something like currently documentation data object nt mention field cc chrisvfritz", "num": "3841", "d": "10/2016"}, {"title": "compile cleanup", "body": "currently migrating vue however compile clean methods longer exist component dynamically creates layouts include component html taken look vuecompile see replace existing component template render function one compiled", "num": "3840", "d": "10/2016"}, {"title": "vue refuse invalid prop values", "body": "vuejs version reproduction link steps reproduce open link expected text shown actually happening text shown description document says prop validation fails vue refuse set value behaves refuse invalid prop values shows warning", "num": "3839", "d": "10/2016"}, {"title": "vmodel custom element wrap checkbox", "body": "hi using vuejs want create component looks like api page vmodel syntactic sugar combinding write template props name value method input event like nt work nt know special care checked attribute checkbox tried exact thing worked aspect though suggestion", "num": "3838", "d": "10/2016"}, {"title": "allow template root element name", "body": "component like obviously causes stack overflow would nice terms nice output html different component name like mycell cellcomponent wondered would make sense vue could ignore root elements name terms recursing j", "num": "3837", "d": "10/2016"}, {"title": "computed property updated dependencies binded inline data", "body": "vuejs version reproduction link steps reproduce replace inline list eg expected expected remaining computed property updated user clicks task ie toggle complete state viceversa happens case binding data prop actually happening computed property reevaluated dependency ie taskcompleted changes note jsfiddle code works fine vue replacing inline list", "num": "3836", "d": "10/2016"}, {"title": "refs available parent component", "body": "vuejs version reproduction link steps reproduce check console expected expected refs available parent component actually happening available available root sure bug", "num": "3834", "d": "10/2016"}, {"title": "add function get plain object data", "body": "feature request get plain json data use application bootstrap bootstrap dependant jquery nt see reason add new external library like vueresources ajax helper basically comes ractivejs framework basically kind function get pojo viewmodel object way easy use situation specially ajax guess jquery library used often readable method get plain object data better jsonparse code point view snippet jsonparse jsonstringify sounds like workaround study better performant deep cloner data many reason moment nt figure suggest implement function simply return reactive copy data click test get better performance result jsonparse jsonstringify vuejs version reproduction link", "num": "3833", "d": "10/2016"}, {"title": "let vuetemplatecompiler work strict mode", "body": "hi really love vue would like use customize user interface salesforce problem salesforce recently introduced security feature called lockerservice enforces strict mode party libraries included project near future enforce also csp done tests seems thing prevent salesforce developer using vue compiler renders templates using functionality using inline templates option use new function violating csp seems possible modify compiler strict mode compliant improvement roadmap thank awesome work", "num": "3832", "d": "10/2016"}, {"title": "improve warning message information", "body": "says vue warn handler event click undefined got error somewhere related event click hundreds component click events componentfile get error", "num": "3831", "d": "10/2016"}, {"title": "applied range input vmodel directive use string value type instead number", "body": "vuejs version reproduction link steps reproduce given input range vmodel directive click input range change value expected updating type value number actually happening type value string", "num": "3830", "d": "10/2016"}, {"title": "passing json objects properties longer works", "body": "vuejs version reproduction link steps reproduce using laravel trying pass property currently logged user worked properly vue get source output seems correct however property checking vue devtools expected expect able pass json objects components even vue instance using property bindings actually happening get property", "num": "3829", "d": "10/2016"}, {"title": "vue render anything version fine", "body": "vue rendering correctly code vue ok render fine phrase none rendered sample code real code nothing renders inspect element appear place appear code im using brunch manage javascript file normal import inspecting element see vue loading correctly image well information vue loading inside iframe return version try things nothing worked hope help thanks much", "num": "3828", "d": "10/2016"}, {"title": "extra information transition guide might help", "body": "upgraded app stubbed toe things list items might help others added transition guide mention option gone implied obvious mention directive modifier gone handle mention directives filters converted component wrapping least seems case use migration tool project small enough nt seem worth effort", "num": "3827", "d": "10/2016"}, {"title": "execute npm run build failure", "body": "got following error message let builds require config getallbuilds syntaxerror blockscoped declarations let const function class yet supported outside strict mode exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload functionmodulerunmain startup", "num": "3825", "d": "10/2016"}, {"title": "unable work create property isstatic string", "body": "vuejs version reproduction link template tag able use group multiple elements inject component slot used work", "num": "3824", "d": "10/2016"}, {"body": "order switched arrays consistent javascript objects consistent arrays object iterators order switched back would major breaking change", "d": "10/2016"}, {"body": "simplesmiler pointed intended major breaking change switching back would another breaking change existing users unfortunately happen", "d": "10/2016"}, {"body": "using correct createelement syntax fixed transition names specified translated works fine provide code snippet since possible put jsbin please follow issue", "d": "10/2016"}, {"body": "hi thanks filling issue clarify mean build dev using npm build system like webpackbrowserify need provide github repo us look", "d": "10/2016"}, {"body": "yes using vue webpack kit works nt repo private", "d": "10/2016"}, {"body": "using vue webpack kit vueloader would require vue standalone version dev runtimeonly version build assume caused problem using option components need use vue standalone version please check section", "d": "10/2016"}, {"body": "right exception would appreciated template var supported client making use", "d": "10/2016"}, {"body": "toberorla normally would build exceptions messages stripped dev wo nt throw exception create issue vueloader later", "d": "10/2016"}, {"body": "interpolation within attribute removed please use instead refer migration guide", "d": "10/2016"}, {"body": "thanks", "d": "10/2016"}, {"body": "iterate components need provide key otherwise vue implicitly keys index instance actually dies fact last one list unless instances stateless causes issues like one describe demo", "d": "10/2016"}, {"body": "hi thanks filling issue repro link nt seem show problem please fix", "d": "10/2016"}, {"body": "apologies corrected fiddle", "d": "10/2016"}, {"body": "iframe rendering fine also original src wo nt work inside jsfiddle changed bingcom", "d": "10/2016"}, {"body": "original src might causing problem double check get home", "d": "10/2016"}, {"body": "yes sorry nt read src carefully enough believed normal twitter embed frame looks like kind custom ajax call breaking rendering apologies wasting time", "d": "10/2016"}, {"body": "update tried another project nt issues suspect unsure proceed component used two way thus far issue device app pure presentation datafunctionality floorplan data editor cms cms needs use compiler mode since need populate props php cms usage indexhtml actual app usage indexhtml used route component previously vue able access anything component via however seems possible using compiler mode html level need cms dump php data confirm expected behaviour vue", "d": "10/2016"}, {"body": "also get event tho always name property component importing log name clearly visible import floorplanviewer componentsfloorplanfloorplanviewer consolelog floorplanviewer floorplanviewername floorplanviewer export default components floorplanviewer", "d": "10/2016"}, {"body": "created new component extra code name imported behaviour methods fail use name register explicit still nt work", "d": "10/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "10/2016"}, {"body": "think worked whats going nt know one component breaks one nt version ive always array works vue finds property however unexplained reason vue finding thumbnails component viewer even tho definitely trial error tried shorthand vue camelkabab conversion works fine weird thing nt array method used work work works one component even array method dropped nt make sense getting error viewer component could easily dismissed viewer missing name prop typo always know vue could use array method object method cant find stated vue docs array method dropped favour object method ways thats probably better", "d": "10/2016"}, {"body": "use parent", "d": "10/2016"}, {"body": "oh vif dynamically updated vuejs worked", "d": "10/2016"}, {"body": "shmasya need declare data data function like bellow info could take look", "d": "10/2016"}, {"body": "defcc use vue set", "d": "10/2016"}, {"body": "ok", "d": "10/2016"}, {"body": "could please provide jsfiddlejsbincodepen demonstrate issue", "d": "10/2016"}, {"body": "seems webpack treats imported object read", "d": "10/2016"}, {"body": "ktsn think esspec conforming behavior also new spec properties writable easiest workaround default export typescript export default import components components", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks", "d": "10/2016"}, {"body": "problem within watch two things make deepequal val amp oldval emit content really changed nt use literals props maybe pass computed value instead", "d": "10/2016"}, {"body": "using object literals template prop indeed warned since means creating new object every time component updates though ca nt seem think way detect runtime maybe add warning docs chrisvfritz", "d": "10/2016"}, {"body": "fnlctrl parsing template could add objectarray literals component instancescoped cache reference remained updates", "d": "10/2016"}, {"body": "chrisvfritz hmm seems possible familiar template compiler defcc ideas", "d": "10/2016"}, {"body": "seems impossible vue parse simple regex scanner recursive descendant parser optimized payload size real javascript expression parser included source expression like supported imho adding warning doc probably enough longer term think check better integrated vuetemplatevalidator", "d": "10/2016"}, {"body": "think need cache literals misusage binding props maybe could introduce warning instead parsing dev mode", "d": "10/2016"}, {"body": "use case clear example changing number reaches introduce warning check using object literals quite usual class style bindings warn user kind forcing fix nobody wants leave warning console think good tell user use computed property instead wanted point", "d": "10/2016"}, {"body": "means nondynamic value object literals example", "d": "10/2016"}, {"body": "think objects arrays problem though pass reference js strings numbers booleans immutable equal values always share reference either way like avoid adding notes like docs even nt fix edge case resulting behavior nothing vue specifically would expected behavior js lib render functions", "d": "10/2016"}, {"body": "per manual properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty print value", "d": "10/2016"}, {"body": "thanks explanation pzanitti", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks", "d": "10/2016"}, {"body": "thanks pzanitti resolved issue future reference corrected version explanation pablo enzo zanitti pzanitti anyway problem put function gon na behave sort like computed property first ca nt array arraylength value bounds second set computed property every time arraylength changes computed property going change watcher going fire", "d": "10/2016"}, {"body": "think considered bug causes inconsistence client side render server side render looking props declared child component undocumented behavior document clearly", "d": "10/2016"}, {"body": "hi special module available elements components nt think undeclared props issue problem compiler print render functions text problem runtime every instance style module patch element module find vnode element set style case server rendering render function trigger module code thus bug quite hard fix renderstyle inspect parent node parent node indicates component tag append styles parent", "d": "10/2016"}, {"body": "exactly typescript equivalent use", "d": "10/2016"}, {"body": "difference way transpile typescript babel exported commonjs style need write typescript like herringtondarkholme said", "d": "10/2016"}, {"body": "thanks guys guess common knowledge kind new typescript sat oct katashin notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide reproduction repo github thanks", "d": "10/2016"}, {"body": "nt create router instance please refer docs", "d": "10/2016"}, {"body": "create router effect vue instances created vueuse vuerouter cause components fail router created anyway created router made commit still work", "d": "10/2016"}, {"body": "vueloader nt support usage html moduleexports require users default simply change html everything work", "d": "10/2016"}, {"body": "great thanks suggestion made changes still luck", "d": "10/2016"}, {"body": "tested fix computer nt error anymore problem still facing", "d": "10/2016"}, {"body": "import vue vue import vuerouter vuerouter import users usersvue vueuse vuerouter commenting make work const routes const router new vuerouter routes const app new vue el root router components users render h gt h users still error commenting vueuse vuerouter makes user component render properly", "d": "10/2016"}, {"body": "try putting import statement still investigating works minimal repro typescript import vue vue import vuerouter vuerouter var users vueextend users options render h gt h hhhh vueuse vuerouter use break render const app new vue el root components users users render h gt h users", "d": "10/2016"}, {"body": "yes putting import statement works", "d": "10/2016"}, {"body": "refer point mentioned method vue code think problem adding render later vue totally ignoring options superoptions changes happens move vueuse vuerouter component import", "d": "10/2016"}, {"body": "actually ca nt reproduce provide fiddle", "d": "10/2016"}, {"body": "jsfiddle repro", "d": "10/2016"}, {"body": "thanks imho functions check falsy values warn development work pr", "d": "10/2016"}, {"body": "looked source code see happening basically code uses false objects array however easily solved evaluating well tough call", "d": "10/2016"}, {"body": "please read doc object must plain native objects browser api objects prototype properties ignored think recursively watched every nested object also plain object", "d": "10/2016"}, {"body": "lgdexter works though whole picture might bit complex pinging decision herringtondarkholme believe different issue object till plain case", "d": "10/2016"}, {"body": "herringtondarkholme point nt purely plain object using array prototype shame might nice add feature future let know guys decide phanan", "d": "10/2016"}, {"body": "thing still determines one", "d": "10/2016"}, {"body": "got similar issue another project replaced", "d": "10/2016"}, {"body": "basically replaced object using everywhere ideal thanks clarification phanan would make tests pass", "d": "10/2016"}, {"body": "working adding extension library mine ran problem well first guess also override use still errors vuejs replaces extended array plain array loosing original object ended something similar vuejs already arrays decorate array functions new functions call needed well defined collections trigger events solution could similarly applied anyone else extended array", "d": "10/2016"}, {"body": "imho best two alternatives support native array collection vue currently roll full schema watching collections set map observable user defined collections", "d": "10/2016"}, {"body": "also another gotcha uses well array class passed object iteration uses need make sure functions amp classlevel variables defined enumerable inefficient workaround use slice like", "d": "10/2016"}, {"body": "objects creating fact arraylike objects real arrays vue supports native arrays arrays real proper subclass array available pass check assumption made multiple locations entire framework adapting involves lot complexity little gain unlikely supported also custom arraylike objects likely far worse performance real arrays personally recommend pattern", "d": "10/2016"}, {"body": "intentional build system configured aliases", "d": "10/2016"}, {"body": "expected nt change reference mutate property way tell property got mutated", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "html attributes csseinsensitive anything use kebapcase template however work either discuss weithet want change convert kebapcase camelcase like props", "d": "10/2016"}, {"body": "thanks regularmike suggestion working chrisvfritz", "d": "10/2016"}, {"body": "defcc fixed earlier today docs migration helper pr fix vue warnings reopen merged", "d": "10/2016"}, {"body": "recommended package manager npm use bower whatever reason afaik bowerjson required install vue", "d": "10/2016"}, {"body": "mintui\u8fd8\u4e0d\u9519", "d": "10/2016"}, {"body": "\u8bf7\u4e0d\u8981\u7528 issue", "d": "10/2016"}, {"body": "\u997f\u4e86\u4e48\u5f00\u6e90\u7684 \u53d1\u81ea\u6211\u7684 iphone \u5728 notifications githubcom receiving subscribed thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "\u8bf7\u4e0d\u8981\u7528 issue \u95ee\u95ee\u9898 \u8fd8\u662f\u7528 \u7684 \u7684 template \u7528", "d": "10/2016"}, {"body": "wonder whether bug intended feature according doc functional components cheap render imho rendering expense computing reactivity required functional components misleading think functional components magically cheaper less ordinary components functional components reactive props cheap nature preserved users keep function stateless functional yes pure function code stateful pure need state functional components use components", "d": "10/2016"}, {"body": "herringtondarkholme respectfully disagree use date example intended good way check whether render function called inputs unchanged force pure function change output keeping inputs unchanged call impure function case poor man debugging tool point use date thisrender called functional component even necessary bug imo even functional components cheap render free render mean render cases purpose reason exist give us simple way determining whether safely skip rendering safely skip rendering conditions appropriate", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks name usually given argument render function necessary name way using jsx hope helps", "d": "10/2016"}, {"body": "working expected creates array loops see could useful form elements element different nature needs function applied however something already achieve manually specifying different references different elements", "d": "10/2016"}, {"body": "example abrove creates array render function working expected vfor loop achieve render function", "d": "10/2016"}, {"body": "add refinfor attribute", "d": "10/2016"}, {"body": "thanks defcc work well", "d": "10/2016"}, {"body": "hi imho desired behavior described noticed understand javascript b b vue relies object identity tell whether change happens fundamental behavior changed easily saves lot bytes diffing algorithm change detection strategy pain point understandable changing behavior incur edge case say passing function props importantly introduce breaking change hard impossible user migrate", "d": "10/2016"}, {"body": "easily achieve adding custom equality check start watcher", "d": "10/2016"}, {"body": "nonnumeric keys notion order first last element easily achieve converting data numericallykeyed array computed property", "d": "10/2016"}, {"body": "first simplesmiler pointed guaranteed key iteration order objects notion first also depend keys named implementation dependent use case suggest create custom methods like use like", "d": "10/2016"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests stated contributing guidelines thanks", "d": "10/2016"}, {"body": "would need contexts vue", "d": "10/2016"}, {"body": "afaik currently nt way implicitly pass props current options explicitly passing props nt clean object like stores application state plugins kind solve issue applied globally option forced set data root component", "d": "10/2016"}, {"body": "possibly interesting alternative context plugins mixins apply component descendants instead globally", "d": "10/2016"}, {"body": "sebastiandedeyne functional components already context feature though currently normal components nt guess useful normal components get access", "d": "10/2016"}, {"body": "context functional components provides data direct parent nt think provides anything normal component would nt solve problem passing data deeper context react name something different", "d": "10/2016"}, {"body": "think feature nice vue libraries actually implement behavior vuerouter vuex global mixin also use case userland eg passing event bus instance descendants", "d": "10/2016"}, {"body": "get ball rolling needed feature recent project solved writing two mixins apply parent component would create object vm whatever data want next calling child component would recursively look parent component exposes certain property set child component prefixed js vuecomponent parent vuecomponent child", "d": "10/2016"}, {"body": "sebastiandedeyne quite interesting approach maybe something like js var parent expose user var child inject user", "d": "10/2016"}, {"body": "would passing props still unsure utility context vue looks like context issue either solved state management library injecting something every instance plugin inherits context parent overriding properties looking sebastiandedeyne", "d": "10/2016"}, {"body": "let say hypothetically vuex would nt implemented global plugin something applied percomponent basis passing store prop every single child component would counterintuitive way inject object set specific component instance looking mechanism property based something defines necessarily direct parent", "d": "10/2016"}, {"body": "course thing explicitly passing values props think sometimes need implicit data propagation case example writing canvas rendering abstraction library components shapes rect circle etc rendered canvas shape components descendants context component canvas dom element example data shape components updated notify context component event bus rerender canvas need react contextlike feature propagate event bus quite verbose write props shape components needs event bus instance context component instance nt want manage global state management local view concern", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "vuejs\u6027\u80fd\u4f18\u5316\u6709\u4ec0\u4e48\u65b9\u6cd5\u6ca1", "d": "10/2016"}, {"body": "looking", "d": "10/2016"}, {"body": "see", "d": "10/2016"}, {"body": "using yet besides fact curious solve problem circumstances", "d": "10/2016"}, {"body": "providing repro makes easier us check actually required bug report", "d": "10/2016"}, {"body": "ignoredelements\u6ca1\u6709\u6253\u7b97\u652f\u6301string\u7c7b\u578b\u7684", "d": "10/2016"}, {"body": "use get component use", "d": "10/2016"}, {"body": "need bundle vuevuexvuerouter along app webpackbrowserify global never affect anything outside app", "d": "10/2016"}, {"body": "nt need refresh data holds results user hits return feature still discussed another use case", "d": "10/2016"}, {"body": "hold data ai nt data vue responsive mean deep clone result", "d": "10/2016"}, {"body": "yes decide change data use different variables hold results autocomplete suggestions need help encourage open topic forums", "d": "10/2016"}, {"body": "see thanks", "d": "10/2016"}, {"body": "use firame close iframe tag vue work", "d": "10/2016"}, {"body": "yanzhenzeng right", "d": "10/2016"}, {"body": "thanks work yanzhenzeng", "d": "10/2016"}, {"body": "thanks gskema looking", "d": "10/2016"}, {"body": "fix problem later", "d": "10/2016"}, {"body": "color valid css property name object style binding could take look key valid css property name", "d": "10/2016"}, {"body": "defcc variable syntax", "d": "10/2016"}, {"body": "sure supported current style binding supports css properties afaik reopening however members chime ideas", "d": "10/2016"}, {"body": "mistake nt used google", "d": "10/2016"}, {"body": "phanan believe correct syntax", "d": "10/2016"}, {"body": "afaik usage definition syntax sure nt affect main issue anyway", "d": "10/2016"}, {"body": "scoped style nt vue feature please open issue vueloader repo instead thanks", "d": "10/2016"}, {"body": "also experiencing works nt work", "d": "10/2016"}, {"body": "updated version suggestions simple schemadocx", "d": "10/2016"}, {"body": "hi marcte thanks proposal however nt think issue best place discussion proposal nt include concrete implementation suggestions vue yet involves serverside data layer scope repo eg meteor apollo feel free submit forum invite members meteorapollo community join discussion", "d": "10/2016"}, {"body": "js vue index \u53bb\u9664\u4e86 \u7528 index \u66ff\u6362", "d": "10/2016"}, {"body": "hi thanks filling issue newcomers nt spend hour searching best practice best practice use whatever ajaxhttp lib suits need example fetchaxios etc even jquery fine ajaxhttp layer frameworkagnostic fact react nt official http lib either unfortunate frameworks like angularember left people impression http libs bundled frameworks truth use whatever like", "d": "10/2016"}, {"body": "quick sidenote another issue vueresource non promise api catch really also nt seem support new fetch api well fetch guess issues vueresource mention project looks official yeah vueresource open issues atm like vuex vuerouter vuevalidator supporting libs provide free use use alternatives lockin many people situations libs may better suited ones maintain", "d": "10/2016"}, {"body": "fnlctrl ok thanks quick answer still think would helpful least mention docs somewhere kind wrongly expected part vue spend hourse searching best lib task still sure one choose cases like helpfull tips experience found superagent qwest reqwest bunch others yea best etc linusborg talking example readme modern promise way would would nt agree", "d": "10/2016"}, {"body": "would agree ways speccompliant would work example hand yet different catch catch errors whole chain ofthen calls multiple error callback second argument catches errors previous stage", "d": "10/2016"}, {"body": "found superagent qwest reqwest bunch others yea best etc universal way deciding lib better comparing github starsissues count npm downlods", "d": "10/2016"}, {"body": "ask team members prefer would get three different replies minimum", "d": "10/2016"}, {"body": "fractalf use fetch fetchival", "d": "10/2016"}, {"body": "bestsuperlative subjective always misused opinion using best makes comparisons feeling like competition", "d": "10/2016"}, {"body": "hello thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum stack overflow gitter happy help", "d": "10/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests please use dedicated gitter forum ask questions thanks", "d": "10/2016"}, {"body": "took freedom make example readable", "d": "10/2016"}, {"body": "wrong repository please open vuerouter repository thanks", "d": "10/2016"}, {"body": "linusborg thanks ill", "d": "10/2016"}, {"body": "works intended data essentially html case reevaluated patched dom causing elements replaced workaround might simple turning returned html reactive data one edge cases directly manipulating html might preferred btw please use forum gitter questions like", "d": "10/2016"}, {"body": "ca nt directly manipulate html arbitrary html string given plugin tried gitter stackoverflow coming gitter nt helpful stackoverflow eventually solved though component anyone else issue checkout stackoverflow linked", "d": "10/2016"}, {"body": "make sure would correct tldr importing individual components large application becomes troublesome registering globally may break things components defined parent component available children components", "d": "10/2016"}, {"body": "posva well yes maybe even component optionally available children components", "d": "10/2016"}, {"body": "terionname sorry hold think nice idea needs discussion though let discuss team come back proposals imo custom properties ideal rather default behaviour components properties components able use declared components parent components", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks check", "d": "10/2016"}, {"body": "sorry man know first post know problem version vue", "d": "10/2016"}, {"body": "define static attribute vue attempt dynamically merge provide binding vue", "d": "10/2016"}, {"body": "ok nice know vue merge regardless static dynamic attribute would nice behavior continued vue quite important writing librariesframeworks vue elaborate needed thoughts thanks answer", "d": "10/2016"}, {"body": "yeah look sure", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks", "d": "10/2016"}, {"body": "reemit componentb", "d": "10/2016"}, {"body": "possible something like", "d": "10/2016"}, {"body": "please use dedicated gitter forum ask questions thanks possible templates use render functions", "d": "10/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests please use dedicated gitter forum ask questions thanks", "d": "10/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "10/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "10/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "10/2016"}, {"body": "tried evaluating expression chrome console please use forum questions", "d": "10/2016"}, {"body": "phanan oops sorry fault", "d": "10/2016"}, {"body": "firstly always use development version duh develop error pretty much obvious secondly think writing much different syntax error silently ignoring errors good idea", "d": "10/2016"}, {"body": "explained phanan", "d": "10/2016"}, {"body": "intentional amigo", "d": "10/2016"}, {"body": "explained required vmodel longer implicit create nonexistent paths intentional decision", "d": "10/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "10/2016"}, {"body": "update function seems invoked actually browser os using", "d": "10/2016"}, {"body": "chrome os", "d": "10/2016"}, {"body": "works chrome windows tested incgnito window ensure exptensions sth interfer", "d": "10/2016"}, {"body": "test incgnito window chrome windows still nt work maybe one give demo invoke custome directive update callback xd", "d": "10/2016"}, {"body": "hi thanks filling issue counterpart reserved used prop name", "d": "10/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "10/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests please use dedicated gitter forum ask questions thanks", "d": "10/2016"}, {"body": "issue", "d": "10/2016"}, {"body": "thanks reporting issue vuejsvuejsorg update document soon possible", "d": "10/2016"}, {"body": "problem resolving problem allistera could use object workaround jsfiddler", "d": "10/2016"}, {"body": "ah done better job searching thanks deffc awesome work", "d": "10/2016"}, {"body": "closing duplicates", "d": "10/2016"}, {"body": "already option roadmap however pospone current postrelease phase work left ecosystem done involve considerable amount work get right tested also making vueloadervueify work etc pp thanks poc seems helpful", "d": "10/2016"}, {"body": "nt think expectation code right removing items removeitem function vmodel selected added values vmodel items removed deleted items model data affected way best", "d": "10/2016"}, {"body": "deulos check issue seems problem could use workaroud", "d": "10/2016"}, {"body": "defcc check uncheck checkboxes model containing values selected checkboxes updated properly rajibahmed problem checked checkbox binded model remove feels logical remove value model also", "d": "10/2016"}, {"body": "deulos vue declarative less magic faced problem would write code solve add watcher guess solve problem best", "d": "10/2016"}, {"body": "deulos might seem logical usecase might someone elses maybe someone whant hide inputs vif keep selected values question application logic something vue decide", "d": "10/2016"}, {"body": "expected behaviour since changes ca nt reflected virtualdom get therefore overriden updates", "d": "10/2016"}, {"body": "dealing multiple places item notion transition mode unclear mean one animated item every moment mean incoming items batched deferred outgoing ones mean items within key follow regular rules transition mode meanings converge one dealing single place item", "d": "10/2016"}, {"body": "think would mean removals happen additions example shows new item gets added existing one gets removed items intended appear time", "d": "10/2016"}, {"body": "problem pug please refer issues hints open issue pug repository", "d": "10/2016"}, {"body": "posva mentioned bug pug error occurs pug called fact error happens even pug installed", "d": "10/2016"}, {"body": "version vueloader installed", "d": "10/2016"}, {"body": "linusborg vueloader", "d": "10/2016"}, {"body": "may issue related pug xmllike templting engine contain anything like script tag style tag without specific treat lt may break htmlparser parsing procedure", "d": "10/2016"}, {"body": "think fixed seems like nt", "d": "10/2016"}, {"body": "imports runtimeonly build compiler adjust template include standalone build version default", "d": "10/2016"}, {"body": "done", "d": "10/2016"}, {"body": "linusborg thanks reply mentioned added alias webpack config nt resolve problem got another error vuejs line", "d": "10/2016"}, {"body": "oh different problem mistake part nt catch expects template string pass object component options defined tag file template already compiled render function vueloader", "d": "10/2016"}, {"body": "ok linusborg get point main goals separate component content keep code clean nt want html content script tag keep content inside tag app component way get content", "d": "10/2016"}, {"body": "keep content inside tag app component way get content whole point vue files keep everything one place want appvue component want template string nt really understand trying despite explanation sorry maybe save install htmlloader", "d": "10/2016"}, {"body": "ok clear thanks lot linusborg detailed explanation", "d": "10/2016"}, {"body": "\u7ed9\u7ec4\u4ef6\u7ed1\u539f\u751fdom\u4e8b\u4ef6\u7684\u65f6\u5019\u9700\u8981\u52a0native\u4fee\u9970\u7b26", "d": "10/2016"}, {"body": "use", "d": "10/2016"}, {"body": "thanks changed works", "d": "10/2016"}, {"body": "hi thanks filling issue use empty string template fail compile setting empty string correct way recall vbind expects javascript expressions example providing content prop serverside need check exists return literal string null otherwise need give empty string", "d": "10/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "10/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "10/2016"}, {"body": "templates single root node see warnings console maybe nt show inlinetemplates", "d": "10/2016"}, {"body": "nt see warnings ran migration helper might case", "d": "10/2016"}, {"body": "bug browserify template today submitted pr assume reason problem likely fixed tomorrow meanwhile fix easy packagejson look like use original line commented", "d": "10/2016"}, {"body": "hello tried change packagejson use import vue vue error failed mount component template render function defined found root instance use import vue vuedistvue render content inside slot", "d": "10/2016"}, {"body": "please provide live reproduction repository ask forums help forum stack overflow gitter", "d": "10/2016"}, {"body": "repository problem", "d": "10/2016"}, {"body": "use npm run build instead nrpm run dev work fine", "d": "10/2016"}, {"body": "got take look issue linusborg", "d": "10/2016"}, {"body": "please nt mix runtime build standalone build incompatible suggestion digging buildjs comment fyi use standalone build use html template adapt runtime build use render option instead writing html info please see need complex entry point template write entry component render render function info problem vuehotload api vueify uses runtime build user code uses standalone build two builds mount component agnostic slots children lost two conflicting builds", "d": "10/2016"}, {"body": "herringtondarkholme metioned two vue versions app indeed standalone runtime version run npm run dev standalone required appjs used compile template html resolved vuedistvuejs internal runtime version used vueify compile vue files hotreload resolved vuedistvuecommonjs bundled compiled js files fails prototype checks runtime one vuejs vuecommonjs get default slot node npm run build nodeenv set production run hotreload logic eliminated works issue could select runtimeonly version init app vuecli move codes vue files make pr update related docs specifiy problem maybe best way could ensure one vue version browserify template looking", "d": "10/2016"}, {"body": "problem explained installation page guide maybe improved also mentioned migration guide", "d": "10/2016"}, {"body": "linusborg think also upgrade browserify template try", "d": "10/2016"}, {"body": "browserify template also updated uses aliasify standalone selected", "d": "10/2016"}, {"body": "linusborg seems working expected vue files processed duiring aliasify transformation open pr add vue file jsextensions merged update template well", "d": "10/2016"}, {"body": "issue browserify template submited pr fix forked repo updated could adjust packagejson like", "d": "10/2016"}, {"body": "pr merged close issue problem still exists could report issue", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue looking", "d": "10/2016"}, {"body": "repro adding vonce nt render", "d": "10/2016"}, {"body": "posva repro", "d": "10/2016"}, {"body": "koronero nt understand message nt asking repro provided one", "d": "10/2016"}, {"body": "met similar probably issue vonce found updated repo case thanks", "d": "10/2016"}, {"body": "koronero seekerlee think used element element executed therefore variable nt exist yet side note nt use nt need yet", "d": "10/2016"}, {"body": "posva case reference working en email app emails rendered vuejs since version emails conversation stored array like since email html content could huge nt want updated since born need lots dom operation html content using custom directive inserted example add ellipsis hide quoted content highlight text add link process mentions symbol etc also nt want operations executed requirement vonce vfor version use emailcontent works good spent time updated vuejs version found issue", "d": "10/2016"}, {"body": "using vonce vfor work case nt", "d": "10/2016"}, {"body": "posva using vonce vfor nt run error want example group email show use vfor vonce user mark email starred ui reflect show use vonce vfor ui change user star email", "d": "10/2016"}, {"body": "seekerlee using vonce inside component fixes problem", "d": "10/2016"}, {"body": "try let know", "d": "10/2016"}, {"body": "example", "d": "10/2016"}, {"body": "thanks much fiddle works case simplified fiddle bit reference later searched change vue template use custom component", "d": "10/2016"}, {"body": "watching object mutated newval oldval point original object case watch instead", "d": "10/2016"}, {"body": "update demo object dynamic keys problem", "d": "10/2016"}, {"body": "use approach whenever dynamic key changes also nt forget unwatch old one", "d": "10/2016"}, {"body": "come handy fnlctrl", "d": "10/2016"}, {"body": "things like infinite listvirtual scroll could many many detached keptalive components mon oct eduardo san martin morote lt notifications githubcom wrote come handy fnlctrl receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "10/2016"}, {"body": "might nice addition indeed something find regularly well might get core use", "d": "10/2016"}, {"body": "think would super useful something forever", "d": "10/2016"}, {"body": "imo easily done userland linusborg demonstrated hand practice might need small variations works eg reseting part data original state like form object overall adding trivial convenience utilities core opens precedence core nt b also follow end api surface bloated tiny util functions absolutely nt want see", "d": "10/2016"}, {"body": "yeah valid concern", "d": "10/2016"}, {"body": "looking seems selections get observered correctly", "d": "10/2016"}, {"body": "peterkorgaard update fiddler could use like workaround info take look", "d": "10/2016"}, {"body": "got question defcc solution solve already know many items model change model array object", "d": "10/2016"}, {"body": "use object type model binding uses model index internal implementation use array type value could observed could init selections created update selections selectboxes data updated update fiddler", "d": "10/2016"}, {"body": "defcc bravo solution worked fine thank much", "d": "10/2016"}, {"body": "thank defcc clarifying use workaround problem gets solved thanks great work everybody vue really amazed", "d": "10/2016"}, {"body": "passes objects attribute stringify keys duplicated pass", "d": "10/2016"}, {"body": "go note method work standalone build", "d": "10/2016"}, {"body": "getteronly computed property nt receive arguments please reread section fix", "d": "10/2016"}, {"body": "ooops sorry last suggestion one users gitter originally please reconsider update little bit info export default computed mapgetters itemsfromstore vue devtools shows updating remains true works turning cache property false seems proper data reactive expect computed property react need set false update moved statement element nt work solved vue react even level deep object use instead", "d": "10/2016"}, {"body": "need help suggested use forums also provide live example jsfiddlecodepen etc people really look problem", "d": "10/2016"}, {"body": "yes posted forums asked gitter said seems good thought time post thanks anyway", "d": "10/2016"}, {"body": "thanks much iabdulin issue vuejsorg could report make pr fix", "d": "10/2016"}, {"body": "iabdulin problem fixed", "d": "10/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "10/2016"}, {"body": "leyec similar issue vue vmodel child component wraps input input changed browser chrome froze restart browser issue emit input thissomevalue child input solved issue changing thissomevalue string emit input thissomevalue issue solved", "d": "10/2016"}, {"body": "closing due inactivity", "d": "10/2016"}, {"body": "arthurmaurer perfect question gitter chatroom would fixed fiddle time smile called component instantiated data changes increment value click event updating value scoped inside component update data list nt update data scoped within component updated fiddle think trying accomplish follow close issue gets close solving issue good luck", "d": "10/2016"}, {"body": "thanks gitter nt know solution gave works fine way around would pain use everytime face problem vfor refreshes changes data nothing else could notify data change aside watching", "d": "10/2016"}, {"body": "components actually get recycled use lifecycle hook listen changes data could also watch changes prop data nt change component wo nt updated rerendered much purpose part optimizations make vue fast", "d": "10/2016"}, {"body": "explained danieldiekmeier arthurmaurer", "d": "10/2016"}, {"body": "example nt using valid syntax corrected get errors nt know really happened side", "d": "10/2016"}, {"body": "would want use runtimeonly build inside browsers sure nt need templatejsx compilation want write render functions hand", "d": "10/2016"}, {"body": "build system configured support files nt use option", "d": "10/2016"}, {"body": "since build system use runtimeonly build instead loading vue separately browser", "d": "10/2016"}, {"body": "nt want one single big bundled file would better load frameworks libraries separately code webpack commonschunkplugin using rollup", "d": "10/2016"}, {"body": "nicolasparada fix add script tag adds global namespace html windowprocess env nodeenv production fnlctrl sure weither variables supposed present build cdn least inconvenient offer cdn access files require workaround like use think discuss internally deal", "d": "10/2016"}, {"body": "think runtime meant used bundler using rollup use", "d": "10/2016"}, {"body": "linusborg gave problems posva yeah couple solutions since cdn browser ready minified version", "d": "10/2016"}, {"body": "nicolasparada automatically added cdns normal browser ready andor without minified version", "d": "10/2016"}, {"body": "wanted start using cdn version vue inside rails app today met issue building upon linusborg amp nicolasparada input version works javascript windowprocess env nodeenv production windowmodule wonder version hosted somewhere used without tweak", "d": "10/2016"}, {"body": "hi thanks filling issue inheriting everything antipattern removed vue long ago please declare props specifically", "d": "10/2016"}, {"body": "totally agree btw something like", "d": "10/2016"}, {"body": "use vbind sure target browser supports object literal extensions simplified", "d": "10/2016"}, {"body": "could add jsfiddler provide context", "d": "10/2016"}, {"body": "nt seem related wether indocument query returned nt component template component mounted bug however seems highly unlikely repro needed", "d": "10/2016"}, {"body": "ops bad using computed property", "d": "10/2016"}, {"body": "please ask questions forum stackoverflow probably nt need add data already methods need add bit context forum post stackoverflow question people help better solve problem", "d": "10/2016"}, {"body": "reinstall vueloader", "d": "10/2016"}, {"body": "reinstall still ca nt work switched works", "d": "10/2016"}, {"body": "using lock likely either npm registry date explicitly upgrading", "d": "10/2016"}, {"body": "chrisvfritz might want look", "d": "10/2016"}, {"body": "\u53ef\u80fd\u662f\u6253\u5305\u7684\u95ee\u9898 \u7528vueminjs \u6709\u8fd9\u4e2abug \u4f46\u662f\u7528vuejs \u5e76\u6ca1\u6709\u8fd9\u4e2abug using bug use bug \u53e6\u5916 webpack\u7684\u5f00\u53d1\u73af\u5883\u4e5f\u6ca1\u8fd9\u4e2abug \u7528\u751f\u4ea7\u73af\u5883\u5c31\u4f1a\u51fa\u73b0", "d": "10/2016"}, {"body": "pretty sure already know right simple fix", "d": "10/2016"}, {"body": "reproduction important opening issue please describe problem instead adding labels", "d": "10/2016"}, {"body": "remove comment incule company info", "d": "10/2016"}, {"body": "nt ios device hand see errors use", "d": "10/2016"}, {"body": "yes alreay install vconsole test page find error ios", "d": "10/2016"}, {"body": "oct aviggngyv notifications githubcom wrote yes alreay install vconsole test page find error ios receiving subscribed thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "reverting work", "d": "10/2016"}, {"body": "think vue using arrow functions supported ios", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "using already using already binds value also bound property instead attribute nt show markup", "d": "10/2016"}, {"body": "want value name attributes input nt plan submit form using ajax mainly using vue case control many inputs form think invoice line items using vue addremove line item fields final form submitted regular form using ajax", "d": "10/2016"}, {"body": "somazx evan said value bound property attribute value attribute reflect current value input reflects initial value submitting html form takes current value initial one work correctly", "d": "10/2016"}, {"body": "simplesmiler ohhhhh thank explaining understand sorry", "d": "10/2016"}, {"body": "hello thanks filing issue happening relying tracking index unsuitable case described key documentation give items identifiers vue track properly something like recommend use dedicated id generating library avoid collisions closing bug", "d": "10/2016"}, {"body": "strange thing problem persists key applied thought autokeying bug edit actually may dom patching bug", "d": "10/2016"}, {"body": "believe nokey applies equivalent implicitly", "d": "10/2016"}, {"body": "simplesmiler nt know behavior thought nokey means key applied would kindly provide source reference", "d": "10/2016"}, {"body": "vuejs updating list elements rendered default uses inplace patch strategy similar behavior vue interpreted implicit key index may wrong assumption still surface level understanding mechanics remember tracking index causing exact issue", "d": "10/2016"}, {"body": "fact tried reproduce default tracking reference appears behave expected nt know valid use though", "d": "10/2016"}, {"body": "oh god love hours cried bug fixes buy several pints", "d": "10/2016"}, {"body": "guess already added vuetemplatecompiler exposed preservewhitespace option", "d": "10/2016"}, {"body": "fnlctrl please reread entry post option mentioned wink", "d": "10/2016"}, {"body": "fnlctrl means leading trailing whitespaces html tag looking", "d": "10/2016"}, {"body": "fyi nt think good idea sense could unsafe user may want ignore whitespaces tags necessarily trimming plain text eg inside whitespace tags whitespace around plain text different sense hand nt see practical advantage ignoring additional whitespace nodes small perf gain trimming text nt much aspect", "d": "10/2016"}, {"body": "working providing flow typings people use ones source ready yet example exports vue module declared yet typings internal development export package complete suitable use", "d": "10/2016"}, {"body": "actually ie messed outerhtml duplicating attribute disabled warning ie", "d": "10/2016"}, {"body": "thanks", "d": "10/2016"}, {"body": "\u5347\u7ea7\u524d\u8bf7\u5148\u9605\u8bfb\u5347\u7ea7\u6307\u5357", "d": "10/2016"}, {"body": "id messageindex", "d": "10/2016"}, {"body": "expected behavior actually explained", "d": "10/2016"}, {"body": "plan support sticky event eventbus", "d": "10/2016"}, {"body": "\u8bf7\u4ed4\u7ec6\u770b\u8fc7\u5f00 issue", "d": "10/2016"}, {"body": "\u8bf7\u53c2\u8003\u65b0\u5efa issue", "d": "10/2016"}, {"body": "vue template like function gets called every time something changes mind inline basically saying input value static never change nt make sense using makes use case bit complicated render form state server html output initialize component data", "d": "10/2016"}, {"body": "surprised hard instanciate simple html element understand reasons anyway thank support thank much vuejs", "d": "10/2016"}, {"body": "allowed strict mode inside modules nt mean deprecated valid use greatly simplifies compiler removing need expression parserewrite scope analysis makes possible get compiler slim mingzipped unless bundler wraps entire application bundle use strict function scope presence cause issue fact works fine official webpack templates sure ran problem first place maybe provide reproduction also note strict mode perfunction scoped generated output bundle actually look something like", "d": "10/2016"}, {"body": "thanks ludicrously fast response wrestling vue since later beta phases trying get things work waaay ready trying get things work library nt fully support vue yet got error building things clearly normal use case sufficiently confused situation want clarify things said able bundle render functions modules unfortunate though understand respect tradeoff however need serverside compiler small perhaps could different version compiler prepares functions inclusion modules much work would entail", "d": "10/2016"}, {"body": "dts yep something definitely consider alternative compiler generates strictmode compliant code even source map support suspected quite bit work like focus stability areas stack get close hope helps figure solution trying achieve", "d": "10/2016"}, {"body": "hey buble compiler injecting mode passed js files compiling components contain keyword users components running trouble using uses uses think bad design side open issue link back however maybe could need argumentative help edit buble issue", "d": "10/2016"}, {"body": "built component want use laravel project come issue using laravel elixir webpack plugin seems also use buble paulpflug exclude vue component getting processed buble quite familiar frontend techs lol stuck week", "d": "10/2016"}, {"body": "paulpflug think toplevel may injected rollup usestrict option turned might something needs go laravel default rollup configuration", "d": "10/2016"}, {"body": "prop accepts string names constructor functions always avoid manually creating components instead drive parent state", "d": "10/2016"}, {"body": "would best way handle case app element contain arbitrary component component known runtime may anything currently creating vue instance calling function set active go", "d": "10/2016"}, {"body": "please use dedicated gitter forum ask questions thanks pass component constructor via prop use", "d": "10/2016"}, {"body": "thanks moved response existing unanswered forum thread idea would much appreciated", "d": "10/2016"}, {"body": "discussion continued forum thread", "d": "10/2016"}, {"body": "correction point still support custom components could documented btw correction point functional components able return anything even empty string required right", "d": "10/2016"}, {"body": "thanks jsfiddle template fixed", "d": "10/2016"}, {"body": "reproduce windows chrome firefox edge everything works fine specify system browser using", "d": "10/2016"}, {"body": "windows chrome happens least one select element model initialized existing value select options specified model default solution suggested line chat", "d": "10/2016"}, {"body": "happens least one select element model initialized existing value select options specified model default ok see problem looks like bug", "d": "10/2016"}, {"body": "problem tis component forced rerrender change class select happens event listens event comes input component rerenders initial value vmodel tries save data point selected option initial one rerender use event instead input value written class changed component rerenders new value", "d": "10/2016"}, {"body": "actually nt work chrome works firefox specific reason might case", "d": "10/2016"}, {"body": "based explanation would nt see problem changing dropdown mouse problem appearing trying change value keyboard", "d": "10/2016"}, {"body": "actually nt work chrome works firefox specific reason might case appearantly firefox issue event case event tried callback console show anything store update would running class would changing rerender think firefox right select simply emit first place nt know specs actually say based explanation would nt see problem changing dropdown mouse happen mouse well least reproduction fiddle", "d": "10/2016"}, {"body": "happen mouse well least reproduction fiddle fiddle first fiddles demonstrating problem select different element dropdown mouse update along appears checkbox try select different dropdown element updown keyboard changes seeing behavior recent stable chrome linux", "d": "10/2016"}, {"body": "latest stable chrome mac tested windows well replied nt see describing error happens mouse keyboard", "d": "10/2016"}, {"body": "error suggested vmodel support dynamic input types nt use", "d": "10/2016"}, {"body": "stuck error someone help thx", "d": "10/2016"}, {"body": "ok thank change implement", "d": "10/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests please use dedicated gitter forum ask questions thanks use directly", "d": "10/2016"}, {"body": "thanks feedback quickly little fixed fine", "d": "10/2016"}, {"body": "duplicate", "d": "10/2016"}, {"body": "nt know commits fixed issue included latest build wait next release clone repo build vue", "d": "10/2016"}, {"body": "right tought included already vuejs dev ok lets wait next release", "d": "10/2016"}, {"body": "tested fiddle locally interestingly bug ios messed weird behavior exists even without vue involved", "d": "10/2016"}, {"body": "youre right seems multiselect special item century waiting selfdriving cars", "d": "10/2016"}, {"body": "list items need use", "d": "10/2016"}, {"body": "fix updating way browser wo nt get grumpy sees unusual element inside table", "d": "10/2016"}, {"body": "ahh yes using indom template browser parses first either fix chrisvfritz solution use pure string templates subject browser parsing restrictions", "d": "10/2016"}, {"body": "thank guys", "d": "10/2016"}, {"body": "actually jsfiddle everything works transfer code get warning children must keyed actually could problem fact working templates code vue entry key toprice key export default data return configheader first second third fourth fifth collapsed true props loc name index methods total function col thisloc return col stationname return thisname var sumthislocmap el gt el col reduce acc cur gt col payback return sumthisloclength return sum togglecollapsed function thiscollapsed thiscollapsed appreciate help ps debugger see transitiongroup rawchildren array gets created vnodes first four tr fifth one undefined", "d": "10/2016"}, {"body": "reason nt see warning fiddle using minified production build warnings stripped must unique object constancy animations", "d": "10/2016"}, {"body": "bet pug since works default html template try escape ampersant", "d": "10/2016"}, {"body": "supposed use computed value instead understand docs right look documentation one single expression found microsoft javascript docs performs logical conjunction two expressions", "d": "10/2016"}, {"body": "yields using computed values instead verbose fast", "d": "10/2016"}, {"body": "pretty sure pug problem works vanilla vue templates properly way make pug escape special chars attribute values", "d": "10/2016"}, {"body": "problem vuemultiselect vue gulpbabelify without pug switching webpack solves", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "somehow hack detailed explanation poc", "d": "10/2016"}, {"body": "pathing dom mutliple attribute select dose nt apply first mutli selected option dose nt work", "d": "10/2016"}, {"body": "transitions handled differently please read docs", "d": "10/2016"}, {"body": "toastjs var toastcomp require toastvue class toast show msg var comp new vue toastcomp compcontent msg documentbodyappendchild comp mount el settimeout gt comp destroy one trigger leave transition comp elremove moduleexports new toast toastvue content require toastscss moduleexports data return content toastenteractive toastleaveactive transition opacity ease toastenter opacity toastleaveactive opacity attribute used trigger enter transition initial render way trigger leave need destroy vm remove element dom fyi updated version please suggest trigger leave transition case", "d": "10/2016"}, {"body": "hello oliverzy thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum stack overflow gitter happy help", "d": "10/2016"}, {"body": "changed codes following works problems encodes html entities encode chinese special characters", "d": "10/2016"}, {"body": "thisodd inside iterator function nt point vue instance", "d": "10/2016"}, {"body": "template must one root element", "d": "10/2016"}, {"body": "want one another button dev branch already feature", "d": "10/2016"}, {"body": "marceloliberton works internet explorer", "d": "10/2016"}, {"body": "bug need root element template works like reactjs without root component render properly see anything working try forum docs first working ie maybe ie buggy best", "d": "10/2016"}, {"body": "hi abdulkhamidov marceloliberton rajibahmed mentioned fragment instance unsupported", "d": "10/2016"}, {"body": "according line terminators could cause problem special chars replaced gentext func try make pr", "d": "10/2016"}, {"body": "maybe better replacement phases chars parsing", "d": "10/2016"}, {"body": "hechentao curious find spaces around handle", "d": "10/2016"}, {"body": "posva find handler called look code find spaces important need warning dev environment", "d": "10/2016"}, {"body": "hechentao spaces introduces first place", "d": "10/2016"}, {"body": "posva yes made mistake wrote code like adding warning case make vue friendly", "d": "10/2016"}, {"body": "registered globally vuecomponent call unnecessary", "d": "10/2016"}, {"body": "see another way inline simple component nt require clientside template rendering specifically want saw pr coming fix would allow vifvelse conditional root main template would nice know anyway", "d": "10/2016"}, {"body": "use render function please make sure read docs opening issues asking questions", "d": "10/2016"}, {"body": "already using render function missing piece seems simply pass object component options also explained docs course", "d": "10/2016"}, {"body": "thanks linusborg works thought tried think forgot wrap object render ran problems", "d": "10/2016"}, {"body": "tencent support template string currently use template", "d": "10/2016"}, {"body": "crossjs know since vue supports according readmemd nt support occasion", "d": "10/2016"}, {"body": "vue supporting nt mean use js features supported expressions use templates must take target browsers account", "d": "10/2016"}, {"body": "valid keycode aliases", "d": "10/2016"}, {"body": "want support custom keys define global keycodes", "d": "10/2016"}, {"body": "example posted jsfiddle taken vue guide key aliases either removed guide added keycode object", "d": "10/2016"}, {"body": "oh indeed may need amend doc ping chrisvfritz", "d": "10/2016"}, {"body": "way think usage sample could better support builtin custom submit pr repo", "d": "10/2016"}, {"body": "applies guide submit pr", "d": "10/2016"}, {"body": "wrong works according docs", "d": "10/2016"}, {"body": "yes works single letter key aliases come back wo nt", "d": "10/2016"}, {"body": "custom mind something like nt case", "d": "10/2016"}, {"body": "mean single letter key aliases coming back feature removed believe need amend doc reflect change question please see keycodes api link documentation need help suggest using forum instead", "d": "10/2016"}, {"body": "mean deprecated bug could come back say feature removed wo nt weird though since ca nt find deprecation vue changes maybe missing", "d": "10/2016"}, {"body": "reproduce make sure using latest version vue", "d": "10/2016"}, {"body": "looking build chrome extension check", "d": "10/2016"}, {"body": "soviut build extension amp csp versions mac os chrome error occurs could provide info issue", "d": "10/2016"}, {"body": "longer works iterator value iterated primitive value eg string number similar affect local variable function scope use array objects instead", "d": "10/2016"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "10/2016"}, {"body": "posva alright trying reproduce turned whether initial array empty nt matter however issue watching still fiddle steps reproduce press create text press button actual see pressing button new text appears expected text appeared right pressing create text", "d": "10/2016"}, {"body": "working intended find better explanation smile", "d": "10/2016"}, {"body": "posva read docs see example see using push whose changes vue supposed detect also nt explain works changing inner array object contain array push instead also using push include example", "d": "10/2016"}, {"body": "directly access element array", "d": "10/2016"}, {"body": "seems indeed working", "d": "10/2016"}, {"body": "bad sorry amcsi", "d": "10/2016"}, {"body": "hey thanks fix looks like issue still persist updated jsfiddle steps reproduce go authregister switch steps go back authlogin click login button", "d": "10/2016"}, {"body": "follow migration guide", "d": "10/2016"}, {"body": "aphofstede thanks nt checked let try", "d": "10/2016"}, {"body": "nt support either implicitly eating nonexistent paths lead hard debug scenarios eg make typo everything fails silently also breaking change question", "d": "10/2016"}, {"body": "working migrating lots components breaking change behaviour different maybe documentation warning message sent console rather exception actually failing silently vue warn error evaluating expression mydatapropertydoesnotexists typeerror read property undefined forked example point vue", "d": "10/2016"}, {"body": "looking code version try catch within function watcherprototypeget outputs warning message", "d": "10/2016"}, {"body": "frizzauk warning means supported try catch done component level instead expression level causes affected component output nothing nt affect components", "d": "10/2016"}, {"body": "understood surely statement within template engine handle whether property path exists granted javascript nt really support behaviour hence third party libraries lodash provide basic functions get plug gaps seems shame write verbose statements wrapping function call eg vif doespathexist datapropertydoesnotexists", "d": "10/2016"}, {"body": "frizzauk make typo everything fails silently component consider using higher node", "d": "10/2016"}, {"body": "gettype func seems deal multitype props returns first type try make pr", "d": "10/2016"}, {"body": "sure understand issue expecting value cast boolean although said either string boolean would using order specify prop cast nonconsistent", "d": "10/2016"}, {"body": "consistent behaviour differs expectations using magic convert eventual boolean type multiple allowed types caller passes booleanable value would expect boolean type also passed custom validator resolved boolean conforms another type array allowed types passes custom validation also valid otherwise invalid", "d": "10/2016"}, {"body": "mean magic refer value say normal differ types differents order array matters", "d": "10/2016"}, {"body": "referred piece code mentioned observations order matter interpret x z", "d": "10/2016"}, {"body": "share rest team", "d": "10/2016"}, {"body": "workaround export default components buttonview vuecomponent buttonview render function createelement return createelement parentiscomplex button div slotsdefault computed iscomplex return true false make sense", "d": "10/2016"}, {"body": "nt added already chrisvfritz aphofstede using jsx would also work nt fit use cases well template", "d": "10/2016"}, {"body": "distinctly remember adding feature investigate probably later today", "d": "10/2016"}, {"body": "supported never supported binding performed creation time different types binding expects different bound data types would add huge amount complexity internal implementation need use branches", "d": "10/2016"}, {"body": "intended function name", "d": "10/2016"}, {"body": "define functions signature use", "d": "10/2016"}, {"body": "simplesmiler mean", "d": "10/2016"}, {"body": "understand convenience react world however props vue components assigned react dedicated property allowing pass props without declaration possibly occur naming conflict", "d": "10/2016"}, {"body": "ktsn yeah problem opinion especially use jsx style issue usefully besides use props validation avoid problem like react put props props object also vue great use restructure app want get", "d": "10/2016"}, {"body": "like ktsn explained feasible vue imo maintainable always declare props", "d": "10/2016"}, {"body": "nice catch thank added pr case next time prefer submitting pr", "d": "10/2016"}, {"body": "work indeed bug", "d": "10/2016"}, {"body": "vue support manually addingremoving classes already using vuemanaged class binding want manage class vue nt mix implementation intentionally using string ensure class order", "d": "10/2016"}, {"body": "ok thanks sometimes use thirdparty library change class update data cover sometimes makes library work", "d": "10/2016"}, {"body": "template rendered immediatly wait whatever api calls might started usual solution using keep parts rendering data eg", "d": "10/2016"}, {"body": "linusborg mentioned try work still sent error statsproducts products", "d": "10/2016"}, {"body": "actually seems work component gives error main vue instance", "d": "10/2016"}, {"body": "issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum stack overflow gitter happy help", "d": "10/2016"}, {"body": "needed could supply test case function rendercode code context callback var createbundlerenderer require vueserverrenderer createbundlerenderer var renderer createbundlerenderer code rendererrendertostring context callback function done var bundlecode var vue require vue moduleexports function context return new promise function resolve reject resolve new vue template app join n rendercode bundlecode function err html err done err return try htmlshouldequal app catch e done e return done", "d": "10/2016"}, {"body": "hi thanks filling issue open migration helper repo instead thanks question simply", "d": "10/2016"}, {"body": "addressed via template slots basically slot element serves template given data child component similar passing render function instead passing alreadyrendered elements open issue discussing feature details start working", "d": "10/2016"}, {"body": "said done render functions trivially easy implement think best left userland", "d": "10/2016"}, {"body": "said easy things like mutate single items need events something else look harder render well idea", "d": "10/2016"}, {"body": "testing discovered attribute reserved components exactly need", "d": "10/2016"}, {"body": "read common pitfalls chapter async documentation please check synchronous iteration functions section specially multiple callbacks section seems case", "d": "10/2016"}, {"body": "jbruni thanks response adding fix problem looks like might couple things play nt notice error hidden appeared much earlier output think still bug within causing error never invoke provided callback multiple times side note benchmark test project already using avoid error nt used warmup phase", "d": "10/2016"}, {"body": "hmm branch ca nt seem reproduce even using node close feel free provide information ensure reproduction", "d": "10/2016"}, {"body": "working expected reactive bindings works js end open question forums help", "d": "10/2016"}, {"body": "posva think working expected make sense make computed data call component last get value never computed make confuse computed value cached value although cache false", "d": "10/2016"}, {"body": "docs however note affects programmatic access inside javascript databindings still dependencydriven therefore doenst work pass computed property prop databinding works execute", "d": "10/2016"}, {"body": "fnlctrl oh see means way bind computed value child component thx", "d": "10/2016"}, {"body": "nt mean bind computed value prop child component nt work case computed value nt dependencies nt dependency reactive", "d": "10/2016"}, {"body": "yeah get sorry lost point", "d": "10/2016"}, {"body": "thanks reporting fixing", "d": "10/2016"}, {"body": "upon investigation cdata actually xml type usage supported without vue", "d": "10/2016"}, {"body": "hi vopjie vue problem problably vuecli problem either webpack problem issues github reserved bug reports please use forumvuejsorg ask webpack experts stakc overflow", "d": "10/2016"}, {"body": "ok thank much", "d": "10/2016"}, {"body": "hi thanks filling issue actually belongs vuejsorg repo please open issue instead thanks", "d": "10/2016"}, {"body": "fnlctrl mean belongs vuejsorg repo nt bug", "d": "10/2016"}, {"body": "longer bug way old problem docs nt updated", "d": "10/2016"}, {"body": "\u5df2\u7ecf\u627e\u5230\u89e3\u51b3\u65b9\u6848", "d": "10/2016"}, {"body": "reproduction please", "d": "10/2016"}, {"body": "problem thanks answering fiddle remove body id vue initialization select works like problem exists chrome pc mac included autofocus text input well fiddle nt see mean take testhtml load locally chrome see input gets focus appjs loading loaded losts focus vue works fine setup", "d": "10/2016"}, {"body": "behaviour firefox safari works well", "d": "10/2016"}, {"body": "unless sure vuerelated bug please use forum supportreleted questions forumvuejsorg", "d": "10/2016"}, {"body": "hi samgre thanks report look seems adding key topmost vfor seems make work docs recommended provide key vfor whenever possible unless iterated dom content simple intentionally relying default behavior performance gains think may nonetheless considered bug ping", "d": "10/2016"}, {"body": "thanks fast reply somehow missed attribute learning vue vfor worked nicely without submitting issue noticed also work around bug changing element name either reproduction example", "d": "10/2016"}, {"body": "please make sure follow issue reporting guideline provide reproduction jsfiddlecodepen etc thanks", "d": "10/2016"}, {"body": "updated nueko u using laravel elixir yes something browsersync delay", "d": "10/2016"}, {"body": "yes hot reload", "d": "10/2016"}, {"body": "according phanan length tasks interestingly sixth reserved keyword causes vue template parser fail reproduce issue easily using one task reproducing fiddle", "d": "10/2016"}, {"body": "keywords breaks foraliasre regexp expression try make pr", "d": "10/2016"}, {"body": "iraklisg update fiddler could assign server data variable initalize app would better way", "d": "10/2016"}, {"body": "seemed setting user main app component also component underneath component still thought element seems weird", "d": "10/2016"}, {"body": "keep experiencing seemingly simple cases template tries access data property wants render data exists component data return somedata null however setting somedata method besides initial data property causes error thrown happen anyone else seems like bug vue either improper error handling something end maybe correctly seems pretty straightforward seeing individual node think rendered serverside rendering match clientside seems verified remove typeof window undefined check created method set data client server everything matches error thrown way around update error produced set data within mounted method reason way scenario serverside rendering coupled clientside rerender seen projects try prefetch data would nt seem ordinary set data within created activated beforemount methods throwing error try", "d": "10/2016"}, {"body": "really know hydration part codebase well seems asking app break rendering component server therefore div rendered server app booting client change state component component virtualdom rendered essentially means server nt render div virtualdom client expects exist reason happen case change component state initial clientside render virtualdom virtualdom renders without div like server change components state triggering rerender includes div", "d": "10/2016"}, {"body": "linusborg thanks trying understand error produced sounds like solid reason", "d": "10/2016"}, {"body": "hi thanks filling issue please provide repro jsfiddlecodepen etc thanks", "d": "10/2016"}, {"body": "example linked function look fine outside thatyou using deprecated vue functionality everywhere ready vel debounce dispatch please clean code vue copatible syntax see problem persists", "d": "10/2016"}, {"body": "closing since looks like usage question encourage follow linusborg instructions still trouble open topic forums forumvuejsorg", "d": "10/2016"}, {"body": "actual component one showed yesterday jus referentially js export default props class placeholder data function return address return input bound autocomplete address google autocomplete object autocomplete google inputs retrieved inputs route longname country longname longname locality longname postalcode shortname api domain key libraries places mounted function consolelog mounted windowonload thisloadscript thisapidomain key thisapikey amp libraries thisapilibraries thisbindautocomplete controls address changes send listeners return void watch address function emit setaddress thisaddress methods load google class given library param src param callback return void loadscript function src callback var script documentcreateelement script documentbodyappendchild script callback scriptonload callback scriptsrc src bind autocomplete property return void bindautocomplete function thisautocomplete new googlemapsplacesautocomplete refscomplete types geocode thisautocompleteaddlistener placechanged thispipeaddress look places dispatch event return void pipeaddress function var data var place thisautocompletegetplace placeaddresscomponents undefined var lt placeaddresscomponentslength var input placeaddresscomponents types thisinputs input data input placeaddresscomponents thisinputs input data jsonstringify data emit setaddress jsonparse data get user location return void geolocate function navigatorgeolocation var vm navigatorgeolocationgetcurrentposition function position var geolocation lat positioncoordslatitude lng positioncoordslongitude var circle new googlemapscircle center geolocation radius positioncoordsaccuracy vmautocompletesetbounds circlegetbounds mounted method even fired thanks", "d": "10/2016"}, {"body": "better asking question forums", "d": "10/2016"}, {"body": "forums", "d": "10/2016"}, {"body": "appreciate help want leave anyone may problem take reference needed uninstall elixir compiler vue install new one problem installed started using new version without uninstalling old one thanks", "d": "10/2016"}, {"body": "using one handler multiple parameters handlevalid value type type value type valid true inside components emit valid value email emit valid value password", "d": "10/2016"}, {"body": "multiple type fields maybe could use id case instead", "d": "10/2016"}, {"body": "try something like vue isvalid valid invalid export default data return fields email value valid false password value valid false computed isvalid return objectvalues thisfields every field gt fieldvalid input components value input validity status", "d": "10/2016"}, {"body": "get confused model update part thought update value something works would good certainly great main issue need fields state whereas previously nt could use refs state pretty major pain ass clutters state without good reason", "d": "10/2016"}, {"body": "main issue need fields state whereas previously nt could use refs thedutchcoder inconvenient indeed something mind situations like", "d": "10/2016"}, {"body": "add context could previously need add additional state handler deal js data return email value isvalid false password value isvalid false method dynamically handles input changes computed prop computed isready return thisemailisvalid amp amp thispasswordisvalid mainly extra useful state handler bit pain would great could alternative used refs remain reactive sure implications would deprecated trying illustrate use case old refs useful", "d": "10/2016"}, {"body": "would ok rename issue something like refs reactive able use computed properties", "d": "10/2016"}, {"body": "sure go thanks discussion guys appreciated vue amazing framework open conversations around make better", "d": "10/2016"}, {"body": "get confused model update valid part thought update value component emits event accepting prop vmodel update value parent component would need something like vue props value oninput event emit value eventtargetvalue valid thissomevalidatorfunction imagine better way though without reactive refs perhaps using mixins somehow still reactive refs though super useful thing general", "d": "10/2016"}, {"body": "alright least example works added state real issue combination vuex since vuex getters nt yet available state defined ca nt use populate values could use something quite dirty", "d": "10/2016"}, {"body": "two repos compare two scenarios hope clearly illustrates current problem biggest issue right fact ca nt use computed props child component anymore even nt work emit event nt updated yet", "d": "10/2016"}, {"body": "also found reactive refs useful unit tests like suggested way replace sort pattern otherwise would nice work", "d": "10/2016"}, {"body": "agree thedutchcoder using refs easy way parent read child information inadvertently makes refs seem useless without reactivity commonly also use practice check validity ref components validate parent component", "d": "10/2016"}, {"body": "access could create use html isvalid valid invalid normal input would try computed setter using testing checking component instance calling methods child components data stuff andor never problem", "d": "10/2016"}, {"body": "nt use template", "d": "10/2016"}, {"body": "asselin thanks good catch shmasya brought attention mistake documentation problem templates anything", "d": "10/2016"}, {"body": "linusborg need method use old way template", "d": "10/2016"}, {"body": "sure vue offers ways", "d": "10/2016"}, {"body": "linusborg path choose easier faster way using render created people came react", "d": "10/2016"}, {"body": "let move vuejsorg repo shmasya matter preference familiar templates suggest stick templates use render functions feel component logic expressed templates", "d": "10/2016"}, {"body": "shmasya case needed write render function control template could provide beginning page render functions provides example might want write one vs use template linusborg go ahead open issue vuejsorg repo per evan", "d": "10/2016"}, {"body": "pattern longer supported recommended vue always try drive presence child components via parent state instead imperatively", "d": "10/2016"}, {"body": "investigation decided keep current behavior changing value way prop validation simply produces warnings side effect makes possible entirely strip related code production mode preserve consistent behavior devprod prop validation quite expensive perf sensitive case nt seem strong advantage setting invalid value justify perf loss prod mode consider breaking change update documentation accordingly", "d": "10/2016"}, {"body": "well think find solution question need set data variable accept value props change data corresponding event emit input event vmodel handle value change something along lines template javascript javascript data function return checked thisvalue props value work", "d": "10/2016"}, {"body": "phatchai work around issue", "d": "10/2016"}, {"body": "issues bugs feature requests please use forumvuejsorg gitter", "d": "10/2016"}, {"body": "hi weepy thanks suggestion nt think feasible though older browsers nt support custom elements reliably use element names identify vnode component internally would change many places mere convenience improvement feels inconsistent see component element names use templates placeholders appear final template component successfully processed", "d": "10/2016"}, {"body": "thanks number killer", "d": "10/2016"}, {"body": "number already currently browser support intend keep", "d": "10/2016"}, {"body": "ca nt check repro right could migrating props anti pattern", "d": "10/2016"}, {"body": "inline props immutable value every time parent rerenders mutated child prop reset back inline value relying reactively mutating inline prop usage longer makes sense therefore inline values made reactive want allow inline props initial value declare field uses props value", "d": "10/2016"}, {"body": "think expected behavior since created root component rule data scope", "d": "10/2016"}, {"body": "explained ktsn root direct children appear root template everything parent template compiled parent scope everything child template compiled child scope", "d": "10/2016"}, {"body": "clear morning thanks", "d": "10/2016"}, {"body": "hi thanks filling issue get pojo viewmodel object way easy use situation specially ajax pass reactive data obj getterssetters library example ajax work data pojo guess could hardly practical advantage cloning passing need deep clone implementation decent performance suggest lodashunderscore probably vue concern side note really care performance probably avoid using objectkeys array prototype functions loop object", "d": "10/2016"}, {"body": "want clone ajax nt see reason converted object works exactly serialization nt see point cloning", "d": "10/2016"}, {"body": "ok probably need test give vue data directly jquery ajax throw exception look solution internet found answer use jsonparse also mentioned vue api web site try found better solution get plain object guess cause jquery exception getter setter try next days create jsfiddler example vue jquery prove issue project working lodash underscore needed keep mind suggestion js code suggestion improved code jsonparse objectkeys work faster prop obj obj prop hasownproperty make test", "d": "10/2016"}, {"body": "ok tested team fnlctrl suggest better performance thanks", "d": "10/2016"}, {"body": "ok tested jquery ajax helper giving data object works perfectly really sure happends days ago reason jquery give back exception seems appear anymore", "d": "10/2016"}, {"body": "hi thanks filling issue improvement roadmap using design decision avoid manually parsing expressions bloats code takes time unlikely changed however relatively easy remove add every expression write template afterwards maybe option compiler try using jsx nt negative opinions official babel plugin compiling jsx vue render function really works great much flexible templates nt require", "d": "10/2016"}, {"body": "hmm precompiled templates although using cpscompliant work strict mode seems bit top platform enforce strict mode party code though removing generated render functions involves fundamental changes compiler implementation marginal gain unfortunately nt think happen time soon alternative solution fnlctrl suggested using render function jsx", "d": "10/2016"}, {"body": "hi problem salesforce exposes spa develop components components must directly manipulate dom others components use official way based events communicate components strict mode security features required keep component sort sandbox said tried jsxrender functions works precompiled templates lot better still productive even jsx except lack valid vmodel alternative use value onclick binding clearly optimal lot data entry understand situation probably edge case still sad hear feature roadmap", "d": "10/2016"}, {"body": "filed issue requires information using vue vue bug suggestion bug reproducible link jsfiddle component nt handler function vue issue best", "d": "10/2016"}, {"body": "using vue bug error message use well vue take suggestion improve error message style make specific mistake developer makes mistake fix little time knowing exactly mistake comparison react js show component name along line number course error wish error messege specific", "d": "10/2016"}, {"body": "lots messages vue nt really say much vue safety checks seem lacking unfortunately", "d": "10/2016"}, {"body": "guess vue add bit info warnings component name component type make warning message configurable development env", "d": "10/2016"}, {"body": "try provide component information whenever one maybe oversight justnobody please provide specific examples messages lacking improve complaining achieves nothing", "d": "10/2016"}, {"body": "nt really complaining figured kind something people already knew run plenty small edge cases past gave odd nondescript message actual issue instead rooted deep source issues nt emit error instead caused weird rendering bug easier track others nt bother reporting since figured stupid one particular actually created pull request took long figure wrong imagine lot fixed bad staying silent guess message readers think bug report even might end bug", "d": "10/2016"}, {"body": "even providing name key component nt help much thanks stopping adding issue improvement", "d": "10/2016"}, {"body": "thanks evan", "d": "10/2016"}, {"body": "default go data attribute goes string range input already starts number source truth solve put ps hey brasilian nt asks question us first bug xd", "d": "10/2016"}, {"body": "hi thanks filling issue may surprising javascript type html input values regardless type attribute string browser behavior work around use modifier halfeld suggested", "d": "10/2016"}, {"body": "correct wrong believe vue root instance use propsdata check passing component would correctly mind posting vue specific code verify", "d": "10/2016"}, {"body": "true propsdata would need used javascript files part server side views meaning output variables const app new vue el app simple", "d": "10/2016"}, {"body": "nt tried using propsdata personally believe strictly using props root instance deprecated see root instance longer use template props use propsdata instead solution laravelvue apps include data external store aka script tag take look laravel default bootstrap file see laravelcsrftoken reference could follow pattern include user root instance data object instead propspropsdata ps sorry poor formatting writing phone", "d": "10/2016"}, {"body": "craigpaul actually workaround", "d": "10/2016"}, {"body": "craigpaul pointed passing props root instance templates deprecated please use instead glad found workaround", "d": "10/2016"}, {"body": "fnlctrl one use propsdata", "d": "10/2016"}, {"body": "true propsdata would need used javascript files part server side views meaning output variables saw craigpaul suggested replied thought knew", "d": "10/2016"}, {"body": "render function check brasilian written article", "d": "10/2016"}, {"body": "hi thanks filling issue get runtime build compile templates either indom templates option case need standalone build helpful section explaining", "d": "10/2016"}, {"body": "thanks halfeld fnlctrl standalone version works fine case needed use standalone version brunch alias config brunchconfig", "d": "10/2016"}, {"body": "chrisvfritz", "d": "10/2016"}, {"body": "thanks davidkhess open issues vuejsvuejsorg repo core documentation", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "try using node", "d": "10/2016"}, {"body": "egoist said", "d": "10/2016"}, {"body": "parsing generating empty text node two probelm workaround remove space release fix edit remove template default slot guess work repro", "d": "10/2016"}, {"body": "tested latest vue vueloader works try using vue latest vueloader updating still issue please open issue vueloader", "d": "10/2016"}, {"body": "add selected attribute template update demo", "d": "10/2016"}, {"body": "peteranny clarify expected behavior optionssplice options b rendered html becomes getting result provided clicking remove clicking value b option become index exactly become value b click became click", "d": "10/2016"}, {"body": "fnlctrl um thank testing think asked wrong question according testing value b become click true question value b selecting b anyway seen image select option ought select option value misguessed value b nt change", "d": "10/2016"}, {"body": "peteranny may bug remained changed dom supposed reflect change sure try adding prop defcc suggested note mustache binding propsattrs deprecated please use instead add prop probably made vue think safe update selected value dom", "d": "10/2016"}, {"body": "tested worked expected marking bug", "d": "10/2016"}, {"body": "pure css solution might help anyone caught dilemma", "d": "10/2016"}, {"body": "way", "d": "10/2016"}, {"body": "ok nonexistent properties could tracked could tracked ridiculous", "d": "10/2016"}, {"body": "building large forms need duplicate property names template data initialiser function create make sure objects edited possible properties present null value missing properties binding vue vmodel still creates properties without warning reactive property meaning properties become reactive leading strange behaviour instance using computed properties custom vmodel directive solution pity default behaviour changed", "d": "10/2016"}, {"body": "updated jsfiddle use vue also switched test use problem gets better visibility output read instead reads vue nt problem", "d": "10/2016"}, {"body": "copypasting comment another issue think removing dispatch terrible idea nt first ui frameworklibrary implement notion bubbling actionsevents visual tree well established idea take away functionality premise able dispatch event causes side effects unknown parent tree sounds like recipe trouble need leave responsibility users sure common sense use feature appropriately new concept really ca nt see benefit change library built upon long time established web technologiesconcepts dom dom events fact bubble visual tree years one complaining nt idea components something recently embraced thanks proposal web components opinion makes sense vue components behave similarly regular dom elements regards event handling done proposed alternative use global event bus seems illogical something practical effective easier understand due well established concept years already existed proposals thread remind emberjs wants passing closure actions properties components level hierarchy tedious unnecessary vuejs reason wrote aside really like library seriously think terrible change", "d": "10/2016"}, {"body": "event bus paradigm proposed solution exact thing eventbased architecture often times inferior declarative statebased architecture say app user log eventbased solution listen login event fire event later username password respond said event accordingly whatever components listening comes problems though biggest one components nt rendered dom event fired nt going receive change along knowing parts application receive event addition receivers event ca nt possibly know event coming without additional information given excuse language massive clusterfuck dealt nt care use let use stateful approach create global state variable representing user account info signed user login information signed user logs set account info everything app relies state variable updates accordingly events nt matter component created always display correct information could use event update global state update declarative approach lets write components way always appear way depending exactly localglobal state regardless user application without listen things happen believe vue meant along akin things software development took us figure damn well glad edit oh nt forget watch parameters say send ajax request perform action changes eg user logs watch loggedin variable true load profile images something like", "d": "10/2016"}, {"body": "understand saying random component modify global state think thing random component bubble event god knows still run risk application flow dirtied accidentally ways handle paradigms clean manner usually end responsibility framework user certain situations one mechanism make sense example agree loggedin state something known whole application global state makes sense button application user clicks usually handle logic behind actually logging user something handled higher chain might component might route button likely need notify something intent log button therefore need modify global state directly removal dispatch need button component know global object manages application user session notify directly intent makes button tightly coupled whole application might button nested levels deep declare handler every level intent reaches destiny totally unnecessary", "d": "10/2016"}, {"body": "actually every level makes code harder maintain", "d": "10/2016"}, {"body": "well obviously directly changing state problematic vuex solves issue mutations actions true solutions fit bill better others never encountered situation declarative logic nt better option specific case probably make button specific logging heh addendum loginrelated component nested deep reason mutate global state", "d": "10/2016"}, {"body": "log button example vuex store referring mentioned global object look vuex works expect tightly coupling random component rest app state simply manage reference store desirable example log button part third party library really wish nt take away choice use either paradigm especially event bubbling widely recognized therefore easy comprehend new contributors project", "d": "10/2016"}, {"body": "depends mean random component router view component example full rights access commit store opinion however smaller component reuse button form ui element times nt logical reason access store using props events since data vue application topdown want keep much local state toplevel possible deep nesting problem avoided much possible much bother propagate events two levels chances might need rethink template structure goes deeper mostly tangent though often times easier paradigms understand ones end getting abused end hell become unwieldy statebased approach much straightforward agreed upon us currently using free continue using move another framework approach nt preference", "d": "10/2016"}, {"body": "times nt logical reason access store using props events exactly point deep nesting problem avoided much possible sometimes option much bother propagate events two levels true levels go deeper easier paradigms understand ones end getting abused end hell become unwieldy users discipline free continue using move another framework approach nt preference mmk simplicity convenience reason considering switching ember vue one things enjoyed vue removing seems arbitrary team removed lot features release honestly agree one thank replies", "d": "10/2016"}, {"body": "ktsn alternatives broadcast dispatch simple removal come improve got better", "d": "10/2016"}, {"body": "rhyek would like give couple points raised since discussion already brushed number topics would like get back basics deprecated diospatch broacast implicit coupling parent deeply nested child dispatches event way infer relationship code true oviously look changes deprecations introduced vue might realize removing implicit behaviour favour explicit alternatives common theme deprecating fits right example js parent events someevent function deeply nested child dispatch someevent fine parent one direct child case listener template real extra work either becomes hard follow especially teams soon nested children especially deeply nested even one direct child either look children rely code comments document event tiggered child component additional boilerplate well say like dispatch broadcast nt pass components agree easier come across many situations actually nessessary rather chain passing event would rather case data would changedappended trip component event names use deeply nested components would explicit namespacing events otherwise could clashing js parent events close function deeply nested child dispatch close deeply nested child dispatch close children thirdpartylibs screwed catch event component middle rename parent nt forget comment someone looking code might think nothing event renaming using emit template listeners problem use simple short event names everywhere wo nt clash event callback attached template really wish nt take away choice use either paradigm thought paradigms work equally well would treat equally nt think reasons therefore try steer users pactices found work best leaving way get around global bus method would also like talk worries global state sure understand position fully yet maybe provide example think dispatch broadcast work best try show approach could improve situation", "d": "10/2016"}, {"body": "think dispatch broadcast event bus address different things make code easy maintain decoupled different scenarios keep great hard say one better every cases", "d": "10/2016"}, {"body": "cnweibo think pretty exhaustive arguments sides honestly nt see point addressing different things feel free make arguments tell certainly happen really really want hard implement plugin", "d": "10/2016"}, {"body": "linusborg truly appreciate time took write reply understand arguments say like dispatch broadcast like honestly definitely seemed odd like said event bubbling something ubiquitous among many platforms point much thing similar ever encountered preview events wpf paired normal events tunnel visual tree topmost element source original event get sent directly chain related elements nt spread everything would explicit namespacing events agree usually anyways also people used jquery furthermore platforms send source object argument handler could maybe filter contexts based hint dom events available example platforms benefit working static types clash pretty hard encounter event instance class case honestly nt understand concern vuejs team people ca nt careful enough using sure could find plenty things wrong using library far go protect users careless fine parent one direct child case emit listener template real extra work either honest question decidedly new vue aside declaring listeners every level nt also event every component chain seems annoying conclusion let quote something someone said issue vuecli introducing official templates new projects probably know locked official templates gives freedom time causes need decisions think end meter balance many decisions make front users many ones users want agree philosophy attitude encountered issue strangely contrast see comment comments boils freedom taking away choices based although good ultimately flawed intentions really really want hard implement plugin probably end probably", "d": "10/2016"}, {"body": "linusborg also therefore try steer users pactices found work best leaving way get around global bus method trying steer forcing", "d": "10/2016"}, {"body": "tried implementing feature eventbus methods may help", "d": "10/2016"}, {"body": "posva plan mean basically declare event bus object module import wherever else want nt like tbh definitely use things strongly believe want every time", "d": "10/2016"}, {"body": "case honestly nt understand concern vuejs team people ca nt careful enough using well point one team could point reallife usecase preferable solutions also bus global state nt see countless forum posts answered either might subjective view maybe understand whole team thinks experience always inferior solution drop core point want renew offer discuss real example sure could find plenty things wrong using library far go protect users careless course delicate question hard balance find judge case case fine parent one direct child case emit listener template real extra work either honest question decidedly new vue aside declaring listeners every level nt also emit event every component chain seems annoying since talk direct parentchildreleationships would emit deeply nested children course reemit every level repeat nt found presented situations dispatching across many nested children really nessessary preferable solutions therefore try steer users pactices found work best leaving way get around global bus method trying steer forcing say make life little harder use bus thing achieve similar behaviour cases reimplement plugin quite easily forcing use ae making way around bit harder", "d": "10/2016"}, {"body": "think also add every vue instance liking something constructive waiting examples", "d": "10/2016"}, {"body": "posva think also add every vue instance vueprototype bus new vue like pretty clever liking something constructive think pretty valid criteria choosing use something least case stated many times think event bubbling place waiting examples mean really need given examples situations nt like idea using event bus declaring listeners every level want see code could maybe come something make point bit clearer feel event bubbling pretty standard thing people appreciate something useful event buses state managers least kind paradigm shift although hard comprehend stretch seem like hipster territory course kidding last comment like stated see uses definitely find problem solve actually projects worked using ember tend write service acts exactly like global state manager assure trying stubborn purpose really like vue want love know", "d": "10/2016"}, {"body": "nt also emit event every component think terms event bubbling nt use component composition eg html open modal close modal component need care events component two instances direct logical children single instance despite complicated view hierarchy nesting", "d": "10/2016"}, {"body": "think repeating point end working around issue somehow seems strange discussion revolved around stating several workarounds something pretty standard practical nt exist anymore whatever reason linusborg well point one team could point reallife usecase dispatch preferable solutions emit sounds like civil engineer asking reason close highway exit says something like offramp leads intersection people get confused whether turn left right people know way lived years new citizens often get lost couple minutes want avoid say alright sure close cool travel km next offramp manage thank replies glad open discussion least seems like good team", "d": "10/2016"}, {"body": "sounds like civil engineer asking reason close highway exit says something like offramp leads intersection people get confused whether turn left right people know way lived years new citizens often get lost couple minutes want avoid add bad methaphor aswell view like road encourages people race faster speed limits rarely payed attention add bumpers force people slow like arrive destination quickly speeding sure might server well times observe part road constantly years amount accidents andpeople missing next offramp simply worth many drivers one problems attested nt like bumpers well destinations road fast one bumpers take one nt like road view nt nice liking something constructive think pretty valid criteria choosing use something least case stated many times think event bubbling place think posva meant like constructive argument discussing weither keep something add something library wide range users keep asking valid reallife usecase discuss instead personal preferences", "d": "10/2016"}, {"body": "yeah except blew perfectly good highway built another rubberized asphalt read somewhere pretty neat also extra km example think one posted original question recursive components ok one imagine want something every level sequence event caught perfectly good example dispatch pretty straightforward", "d": "10/2016"}, {"body": "want see code yes please", "d": "10/2016"}, {"body": "posva gave example previous comment note think seconds without dispatch proves point", "d": "10/2016"}, {"body": "example think one posted original question recursive components ok one imagine want something every level sequence event caught perfectly good example dispatch pretty straightforward js recursivechild something export default methods dispatch dispatch dosomething events dosomething function something dont return true nessessary make event bubble nt like unexpressivness js recursivechild something export default methods dosomething someting dont emit dosomething really worse got another one", "d": "10/2016"}, {"body": "ok sure recursive yet still nested like alright going rough day thanks come something better later post either lost interest", "d": "10/2016"}, {"body": "recursive yet still nested like would add listener template seen good bad depending weither stress verboseness vs expressiveness btw situation chain event till parent done something like mourn coupling components praise expressiveness bit type big deal still claim real usecase example probably different optimization available like global store depends individual scenario hard argue example code anyways nice discussion enjoy welldeserved sleep", "d": "10/2016"}, {"body": "rhyek looks like workarounds determined use first place goal goal allow components communicate one another decent maintainability achieving goal inferior solution list practical pros cons excluding preferences dropped also note dom event bubbling fundamentally different crosscomponent communication argument event bubbling widely recognized nt mean must good solution problem trying solve done commenting thread find hard argue nt like", "d": "10/2016"}, {"body": "evan intentional sounds like intentional murder people lazy life long mirroring whole schema looks pretty weird background native javascript objects", "d": "10/2016"}, {"body": "chois maybe use class names instead", "d": "10/2016"}, {"body": "quangv using vue together gsap animations", "d": "10/2016"}, {"body": "nice gsap amazing vue great thinking combining assuming work nicely together thursday october cho garcia notifications githubcom wrote quangv using vue together gsap animations receiving mentioned reply email directly view github mute thread", "d": "10/2016"}, {"body": "indeed javascript playing much better new vue transitions", "d": "10/2016"}, {"body": "actually issue laravel php generating json objectmodelclass get quoted keys thus compiler vue break property passing", "d": "10/2016"}, {"body": "need pass json string params single quotes important generated json double quotes", "d": "10/2016"}, {"body": "well course using still working properly", "d": "10/2016"}, {"body": "send problem vuejs forum", "d": "10/2016"}, {"body": "first congratulations releasing vue evaluating vue last months especially works together haxe using nice macro able really get best worlds issue think boils changing way virtual dom translated interface dom looking code think need overwrite functions nodeops object createelement appendchild etc think best way really appreciate could take look understand really busy moment quick pointers enough us", "d": "10/2016"}, {"body": "remcohuijser probably create fork add directory alongside model platform implementation done", "d": "10/2016"}, {"body": "sounds like good plan tricky thing want use html dom interfaces alongside interface dom interfaces feel makes sense able pass nodehandler something creating new vue instance handler offers createelement function etc manipulates dom creating handler dom manipulation changed javascript data shared interface var data create vueinstance mount html element var new vue data data el htmlelement nodehandler new htmlhandler var new vue data data el htmlelement create html handler default create vue instance mount one elements var new vue data data el ourelement nodehandler new ourownhandler think", "d": "10/2016"}, {"body": "danielsamuels possibly still feature could added vue made migration easy trying may much demand", "d": "10/2016"}, {"body": "going setting keep comments would nice setting like ractive", "d": "10/2016"}, {"body": "found issue fixed within vuejs change vuejs verson add native click work wo nt alert changed wo nt alert document also explain usage native", "d": "10/2016"}, {"body": "sqal hey bro nt close wraptag", "d": "10/2016"}, {"body": "hi use vue web recently broken browser would problem", "d": "10/2016"}, {"body": "xiaoshuangli issue vue think found bug open new issue minimal repro broken website general", "d": "10/2016"}, {"body": "posva thanks trying still learning vue feel awesome", "d": "10/2016"}, {"body": "found made stupid mistake thanks lot", "d": "10/2016"}, {"body": "thanks elithrar added section twoway filters specifically migration guide would love hear thoughts", "d": "10/2016"}, {"body": "chrisvfritz great writeup breaking vue vue steps great job illustrating changes required benefits custom component approach", "d": "10/2016"}, {"body": "kazupon thank work vuejs awesome could please correct official example contain name attribute vuecomponent definition", "d": "10/2016"}, {"body": "nt work trying following getting error interpolation inside attributes deprecated use vbind colon shorthand instead simple vue making complicated unknown", "d": "10/2016"}, {"body": "got problem found solution yet", "d": "10/2016"}, {"body": "maybe read docs find complicated unknown", "d": "10/2016"}, {"body": "zjhiphop actually simple long read doc least migration guide normally fan using issue list support since saying complicatedunknown fiddle please note though doable nt mean setting id fly often unnecessary keep issue list clean locking discussion welcome open thread active forum", "d": "10/2016"}, {"body": "link broken", "d": "10/2016"}, {"body": "steviey", "d": "10/2016"}, {"body": "modify add code see export single file vue gist exportsinglefilejs important thing works windows console stdout base c vue \u03bb npm run build vue build c node buildbuildjs error could load c imported c enoent file directory open c c processtickcallback modulerunmain run startup c vue \u03bb npm run build vue build c node buildbuildjs c c c c c c c c c c c c distvuecommonjs c c c c c c c c c c distvuecommonminjs distvuecommonminjsgz c c c c distvuejs c c c c distvueminjs distvueminjsgz c c c c packagesvuetemplatecompilerbuildjs c c c c packagesvueserverrendererbuildjs c vue \u03bb", "d": "10/2016"}, {"body": "think removing dispatch terrible idea nt first ui frameworklibrary implement notion bubbling actionsevents visual tree well established idea take away functionality premise able dispatch event causes side effects unknown parent tree sounds like recipe trouble need leave responsibility users sure common sense use feature appropriately new concept really ca nt see benefit change library built upon long time established web technologiesconcepts dom dom events fact bubble visual tree years one complaining nt idea components something recently embraced thanks proposal web components opinion makes sense vue components behave similarly regular dom elements regards event handling done proposed alternative use global event bus seems illogical something practical effective easier understand due well established concept years already existed proposals thread remind emberjs wants passing closure actions properties components level hierarchy tedious unnecessary vuejs reason wrote aside really like library seriously think terrible change", "d": "10/2016"}, {"body": "really interested know simplesmiler solution still elegant way go vuejs ability able create dynamic slots key good component reusability think topic deserves little section documentation current docs made believe way achieve using custom logic inside render function", "d": "10/2016"}, {"body": "problem solved mine first suggested solution davejamesmiller thing migrate code vuejs instead using used", "d": "10/2016"}, {"body": "api transitions new version want trigger transition component custom directive calculations offsetheight need use visibility instead display vshow", "d": "10/2016"}, {"body": "use expressions syntax templates unless browsers support reason babel extract expressions transform know vue precompile templates rendering functions backend want know possible use babel transform expressions think posva", "d": "10/2016"}, {"body": "made simple test vue noticed babel properly transform expressions great one benefits use vue instead vue sorry disturb", "d": "10/2016"}, {"body": "ikristher think better way delaying broadcast using settimeout", "d": "10/2016"}, {"body": "repo related", "d": "10/2016"}, {"body": "right repo weex scott", "d": "10/2016"}, {"body": "yes pretty sure vuepowered weex work seems happening repo mentioned", "d": "10/2016"}, {"body": "great stuff finally alternative react native ionic huge vuejs community", "d": "10/2016"}, {"body": "also like bring attention quasar framework someone already mentioned created ios android apps framework also porting vue speak nt pure native bridge framework pretty good nonetheless scott", "d": "10/2016"}, {"body": "believe current behavior unless attributes referring dom attributes vue props sure case", "d": "10/2016"}, {"body": "feature helpful porting react components vue", "d": "10/2016"}, {"body": "using vue best naming strategy private variable name computed props example prop called passed avoid mutation define variable datacomputed prop however best name came advices naming strategy circumstance", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "better performant way get plain json vue data following code click test get performance better result jsonparse jsonstringify", "d": "10/2016"}, {"body": "thank alot ramreddy", "d": "10/2016"}, {"body": "libraries like semanticui require hidden input eg display dropdown multiples selection rjoo using solve problem use vuejs whats version using", "d": "10/2016"}, {"body": "vuejs possibility use object filter read write functions work anymore", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "tolerious \u7684\u65b9\u6cd5vmodel\u65e0\u6cd5\u4e0d\u7ed1\u5b9a", "d": "10/2016"}, {"body": "accaolei init datetimepicker input different id bind input value different data refer code", "d": "10/2016"}, {"body": "revisited found simple solution create custom object add getterssetters created using model path string simple example inputlist js div div vfor form configforms input vmodel formdata formmodel import vue vue import lodash export default props value config computed methods vueset obj path val let value obj let fields isarray path path topath path let f fields let idx number f let p fields idx idx fieldslength vueset value p val else value p vueset value p isnumber p value value p data return formdata created foreach thisconfigforms form gt objectdefineproperty thisformdata formmodel get gt get thisvalue formmodel set v gt thisvueset thisvalue formmodel v use js div inputlist vmodel formdata configformconfig import inputlist inputlist export default components inputlist data return formdata name jon loc id formconfig forms type input model locid type input model loc name", "d": "10/2016"}, {"body": "would one vm set key val vue working reporting errors simply trying display value json file like vue trying easy complicated confusing thing ever tried use something even simple", "d": "10/2016"}, {"body": "tmiguelt cheapsteak nt work anymore vue", "d": "10/2016"}, {"body": "moduleexports data defaultdata methods resetdata function data defaultdata write like ca nt work must function get default data wan na reset", "d": "10/2016"}, {"body": "tmiguelt ok go single file template syntax return ajax like html name template loaded ajax export default data return name ajax template make work vue want work way coz ide support etc", "d": "10/2016"}, {"body": "tmiguelt ok go single file template syntax returned ajax like html name template loaded ajax export default data return name ajax template make work vue think putting native protected runtime template compiler something vue missing want work way coz ide support etc nt want use webpack code splitting like want able load template ajax use browser", "d": "10/2016"}, {"body": "ok bit old problem way last comment user input stuff celsius field trying write anything say fahrenheit change celsius immediately change fahrenheit try typing fahrenheit field example implement similar thing two fields two watchers semafor nt feel right way came", "d": "10/2016"}, {"body": "closing vue vuerouter vuex ship typings right npm packages terms component decorators offical many great community solutions thanks everyone involved discussion", "d": "10/2016"}, {"body": "would still nice able use typescript vue files well far know possible right", "d": "10/2016"}, {"body": "amcsi vuetsloader use typescript single file component", "d": "10/2016"}, {"body": "oh wow", "d": "10/2016"}, {"body": "also introductory guide vuets integration check", "d": "10/2016"}, {"body": "made vue typescript example using standalone vue little experience vuetswebpack feel free make pull request working would nt recommend encountered many bugs far use instead", "d": "10/2016"}, {"body": "would please file bugs related projects curious", "d": "10/2016"}, {"body": "hugely appreciated reverted discussion took place although noticed reverted back newer versions thing vmodel directive still escaping logic made readaptable custom components impossible create custom components behave like form inputs manipulating referenced value parent scope let take example someone wanting create switch multiple choice different markdown select possible using default html inputs nothing like allowed understand reasoning philosophy behind one directional data flow approach nt really allow anyone adopt different patterns exception form inputs still behave like twoway binding custom components sort escape rule nt mean annoying reopening conversation since still using vuejs long time great supporter one things always appreciated aspect unopinionated versatile vuejs presented start lightweight vm class nt try enforce upon monolithic architecture allowing truly modular however wish structure tour application escaping framework hell feature war feels bit like step back trying impose philosophy limiting choice really expect vuejs", "d": "10/2016"}, {"body": "custom components use work native inputs see docs essence component accepts prop component value changes emit event new value parent uses component value updates", "d": "10/2016"}, {"body": "oh nt spot guess pulled elaborate rant nothing sorry actually quite nice implementation still really liked two way data binding syntax present sub versions though", "d": "10/2016"}, {"body": "instanceofmichael answer vue using vue use computed properties apply filters combined", "d": "10/2016"}, {"body": "like sure allows run filter escaping", "d": "10/2016"}, {"body": "instanceofmichael use computed properties said docs instead html unsafestring customfilter something like said really like old syntax discussed somewhere understand reason removal", "d": "10/2016"}, {"body": "runs escape custom filter instead", "d": "10/2016"}, {"body": "need escape use html escape function", "d": "10/2016"}, {"body": "need escape use html escape function use one builtin vuejs instead adding extra dependency", "d": "10/2016"}, {"body": "right specs ones talked htmlspec xmlcompatible part htmlspec edit far understood spec means allowed prohibits contain", "d": "10/2016"}, {"body": "note difference valid html syntax vs fullyvalid html former means adheres syntax constraints laid spec syntax latter entails following spec every extreme detail eg element nt certain attribute use element syntax level attribute names defined follows attributes name value attribute names must consist one characters space characters null quotation mark apostrophe characters control characters characters defined unicode vue templates valid html syntax level practical reasons enables speccompliant html parser able parse vue templates makes possible reuse excellent htmlbased tools already aspects tooling however opinion striving fullyvalid html templating syntax completely pointless template eventually gets rendered browser template job convey connection javascript model final desired output fullyvalid html making templates fully valid html zero practical benefits except maybe getting rid warnings overlyrigorous ide", "d": "10/2016"}, {"body": "opinion page first render js events fire free broken html event dependent javascript fails render clean mess things uglier seeing js framework fail render jumbled mess template tag soup halffunctioning elements idea adding exclusive attributesprefixes adds additional attack vector may minority position days", "d": "10/2016"}, {"body": "id love know image request even made place img tag hardcoded src div ngiffalse image request still made even template rendered plunkr open console look requesting image", "d": "10/2016"}, {"body": "becuase vue template dom vue chance find parse render elements browser sees vue tries download", "d": "10/2016"}, {"body": "hi use code", "d": "10/2016"}, {"body": "could take look", "d": "10/2016"}]