[{"title": "documentation guides models finding records seems inconsistent", "body": "guides section models says note ember default json api adapter provide functionality needed support queryrecord directly relies rest request definitions return result data form array seem consistent either json api spec api docs dsjsonapiadapter would seem allow single object returned top level response response data attribute new ember apologies missing something obvious", "num": "14565", "d": "10/2016"}, {"title": "helper resolved instead property", "body": "use property name equal helper name helper wins gets rendered happens even property name camelcased helper name dasherized surprise reproduction reproduction based ember switch app ember works expected property wins could nt find related issue issue tracker pull request looks related", "num": "14561", "d": "10/2016"}, {"title": "using parent controller queryparam causes assertion ember", "body": "embertry tests alerted us possible regression investigation discovered route declares matches parent controller parent controller queryparams cause assertion thrown using assertion occurs occur twiddle scenario invite key user redeeming invite multistep multiroute process similar saas apps namespaced controller houses application state steps process including queryparam route classes declare templates interface controller directly problem two handlers using controller calls router function newly added check throws exception handlers using queryparams exception also bit nonobvious assertion failed allowed one controller property map query param key map fix mapping one controller properties different query param key via config option eg key otherkey use use invite service house state phase invite process answer two parts old code nt touched long long time stuckouttonguewinkingeye clean way service access queryparams router yea know another one crazy queryparam issues come guys want \u30c4 happy probably find work around always reporting issues see", "num": "14560", "d": "10/2016"}, {"title": "typeerror invalid value used weak map key get canary", "body": "hey trying ember beta canary versions travisweb getting weakmap error run chrome get stacktrace similar errors happen safari firefox chrome reproduced repository running locally ember version enable pausing exceptions see property key working permanent beta canary production environment deployments ember failing differently error presence makes wonder somehow related though stack trace pretty different production canary stacktrace familiar code gotten anywhere trying debug let know additional information provide", "num": "14557", "d": "10/2016"}, {"title": "create feature flag conditional removal", "body": "currently order improve error messages like pay double cost order leverage future state able use feature flag allows us strip things without needing call twice leave code run context would look something like wish add feature flag like related though tremendous way accidentally troll cc krisselden rwjblue", "num": "14555", "d": "10/2016"}, {"title": "ensure uses", "body": "likely result", "num": "14551", "d": "10/2016"}, {"title": "doc embercomponent layout documented public", "body": "inspired currently default addon component blueprint sets component template via property evidence api docs public mention use appropriate section guides leading confusion whether ok use add deprecated emberview concept name understandable people new framework tripping", "num": "14548", "d": "10/2016"}, {"title": "doc modelfor documentation inaccurate", "body": "current documentation states returns resolved model parent ancestor route route hierarchy correct description returns resolved model current route parent ancestor route route hierarchy example getting current route model used route action method", "num": "14544", "d": "10/2016"}, {"title": "computed property updating component", "body": "defined computed property component gets value controller whenever changing value controller computed property component change happen controller js setting action controller hbs component hbs", "num": "14542", "d": "10/2016"}, {"title": "bug nested components ember", "body": "report bug searched apparently report similar issue writing report bug found ember create child component ember recognize working perfectly ember components parentcomponent childcomponent parentcomponentchildcomponent undefined example", "num": "14541", "d": "10/2016"}, {"title": "regression onward textarea unusable", "body": "take ember app type words hello click somewhere middle try add new word first key stroke moves end textarea makes control unusable users reproduction click run js takes ie try textarea appear chrome appears ember causing particular also appears big regression us roll production back possibly related glimmer", "num": "14539", "d": "10/2016"}, {"title": "adopt hooks", "body": "order right thing embersource enforce publish npm move script currently correct location goal would exactly right thing box additional commands nt trigger build cc locks", "num": "14536", "d": "10/2016"}, {"title": "correctly observe nested array changes", "body": "sure bug possible ember moment trying unsuccessfully get work use case want observer changes child array array items essence know exact computed property nt possible moment ember trying multiple alternative variations find solution data want see happen even nt ordered least show new item added unsuccessful attempts tried correctly observe changes attempts general idea try observe right properties get selections update end items added selection line nt change work around templates components able take lines array iterate pass single line component observe selections line situation need aggregate selections multiple lines get total value make properties volatile course works dealing many values would like cached nt changed known limitation bug", "num": "14534", "d": "10/2016"}, {"title": "improve error message assertion failed helper named somethingsomething could found", "body": "lets say add ember template error receive helper user could trying reference component common case user typo referencing component couple new guys stumbled error couldshould improved assertion failed component helper named somethingsomething could found", "num": "14532", "d": "10/2016"}, {"title": "backfill tests master", "body": "reminder also add test ensure existing one exists ensuring nt regress future", "num": "14530", "d": "10/2016"}, {"title": "ember unregistering views correctly", "body": "introduced root cause really original code appeared covered tests reasonable refactoring broke without test failure issue sure nt forget test master", "num": "14526", "d": "10/2016"}, {"title": "doc additional pattern action mut", "body": "moved looking guides amp published api docs handy pattern seem covered setting value property literal value variant accessing particular property event option part action helper way works conjunction may make worth mentioning explicitly use case clarity examples", "num": "14525", "d": "10/2016"}, {"title": "clarify escapecss documentation", "body": "upon reading documentation binding style deprecations think may want clarify nt implemented ember one may get impression implemented ember given inclusion code snippet source", "num": "14518", "d": "10/2016"}, {"title": "event ember router fired incorrectly ember", "body": "ember enabled firing component lifecycle hooks fired different order ember simple app consolelog component lifecycle hooks adds instance initializer subscribes router event ordering events different ember ordering events willtransition router fired didtransition router fired init component fired didinsertelement component fired didrender component fired ember ordering events willtransition router fired init component fired didinsertelement component fired didrender component fired didtransition router fired repro app toggle ember version app see difference ordering events cc stefanpenner chadhietala krisselden", "num": "14516", "d": "10/2016"}, {"title": "hasmany relationship foreign key children table", "body": "trouble hasmany relationship ember lets say want retrieve comments attached post easily postgres schema look like posts comments want get rid comments posts table like posts comments far nt found anything help even nt seem hard nt understand need array id parent table", "num": "14515", "d": "10/2016"}, {"title": "warning usage needs show details", "body": "following warning nt really tell code problem lies makes hard debug especially since searching entire code base ca nt find single place using one level deep error message clarified information property component offending one thanks", "num": "14514", "d": "10/2016"}, {"title": "elper force update", "body": "", "num": "14513", "d": "10/2016"}, {"title": "typeerror invalid value used weak map key destroy", "body": "reported following error running stack trace without source maps reported production build source maps nt trust stack trace much according sentryio browser hit chrome mobile android backspace reported similar issue devember feel free paste call stack well", "num": "14512", "d": "10/2016"}, {"title": "request deprecate usage emberon component lifecycle events", "body": "request deprecate favor reasoning order happens unknown code might result bug refactoring developer new code base noticing event observed already subtle bugs easily introduced also easier read understand behavior component single place event dependent code executed tracking different pieces code executed different moments lifecycle cumbersome easily avoided using overrides one argument might come overrides people forgets call super introduce bugs easier know always call inside hook determinism whereas keeping track might cohabiting object straightforward reading code keep mental map pieces might executed hook cognitive load high", "num": "14511", "d": "10/2016"}, {"title": "possible documentation error action helper", "body": "api documentation helper source contains following example heading invoking action nested use usage comment seems incorrect understanding correct usage would simply someone confirm", "num": "14510", "d": "10/2016"}, {"title": "linkcomponent yielded contextual component", "body": "first look stackoverflow creating issue matter fact could find anything pretty sure one tried handlebars componentsacomponenttemplatehbs yield hash contextuallink component linkto class acomponentcontextuallink end somewhere else acomponent component componentcontextuallink someroute unfortunately work componentcontextuallink acomponent end used like linkcomponent complain needs least one parameter one bogus parameter supplied template application wo nt replaced time invoked missing something", "num": "14508", "d": "10/2016"}, {"title": "possible documentation error component helper", "body": "api documentation helper includes section nested usage source example suspect incorrect component template defined follows shown used like understanding correct use keyword block error since component name component usage also appears odds shown beta release note guides happy provide fix would like someone confirm interpretation since learning contextual components first time", "num": "14503", "d": "10/2016"}, {"title": "android chrome swiftkey breaks", "body": "using even simplest reproduction app typing swiftkey chrome seen broken type word via swiping attempt type another expected two words text area actual recently typed word data works fine built keyboard swiping swiftkey firefox works fine dandy", "num": "14502", "d": "10/2016"}, {"title": "classnamebindings reset classes might added component", "body": "hi issue starting ember example issues example see two classes set initially click first button new class added component issues pressing second button toggles class name binding class added using jquery removed means reset component classes desired behavior thanks", "num": "14497", "d": "10/2016"}, {"title": "jsonapi assertionerror jsonserializer", "body": "switched serializer adding application serializer file appserializersapplicationjs import ds emberdata export default dsjsonserializerextend using restadapter customized appadaptersapplicationjs server fails validation errors get assertion error errors json api format", "num": "14496", "d": "10/2016"}, {"title": "update url error state", "body": "facing similar issue use case similar need url updated whenever transition goes error state whenever end error page user tend two things press back button go previous working page press refresh button retry failed page url updated ca nt done suggestions handle", "num": "14495", "d": "10/2016"}, {"title": "unknownproperty called original key", "body": "original function expected get passed actual key gets passed", "num": "14491", "d": "10/2016"}, {"title": "get helper working passing integer instead string access arrays", "body": "using get helper access array helper silently fails unless parameter string workaround inside helper reproduced", "num": "14490", "d": "10/2016"}, {"title": "glimmer method tostring helper hash exists", "body": "assume following helper exists js apphelpermyhelperjs export function myhelper params hash consolelog calling tostring params paramstostring consolelog calling tostring hash hashtostring return params calling get undefined used work reproduction", "num": "14489", "d": "10/2016"}, {"title": "emberjs server minute startup time vagrant ubuntu", "body": "see", "num": "14483", "d": "10/2016"}, {"title": "yield hash used binding", "body": "according pr yield hash contextual component able use binding today still found problem twiddle reproduce also include workaround twiddle could solve problem right still could pain point future usage", "num": "14481", "d": "10/2016"}, {"title": "shipping globals free build ember browser", "body": "let explore would take us able ship build ember nt write amp globals would beneficial users trying use ember modularly within another web application global pollution considered bad practice cases existing application may embedding widgets use different versions ember also using global provide configuration flags apps nice add another mechanism configure ember related issue embercli", "num": "14478", "d": "10/2016"}, {"title": "calling extend es emberobject subclass call", "body": "documented calling es subclass emberobject yields factory whose objects nt call constructed easier explain js js class subemberobject extends emberobject constructor never called let myobject subemberobjectextend myobjectcreate note following work js class subemberobject extends emberobject constructor called class myobject extends subemberobject myobjectcreate", "num": "14473", "d": "10/2016"}, {"title": "defining queryparamsdidchange action breaks refreshmodel true query params", "body": "investigating similar issue ran across scenario twiddle identical routes route action defined bubbling enabled route simply nt define action expect functionality two routes identical instead see updating query params route never calls model hooks whereas route", "num": "14470", "d": "10/2016"}, {"title": "support option closure actions", "body": "seems using closure option respected way traditional helper main need called actionfunction context object caller common use case trying pass action ember component ex however time able use traditional helper works ex working example ember twiddle reference called function would look something like chatting rwjblue company slack community apparently handled action ast file able eliminate ugly code action modifier still trying wrap head around internals ast stuff least direction start", "num": "14469", "d": "10/2016"}, {"title": "updating property supplied hash helper triggers observers properties", "body": "helper trigger happy regarding changes properties causing change fire observers properties even static ones eg changing template triggers observers property full twiddle note solved something like stable hash helper though solutions might better", "num": "14468", "d": "10/2016"}, {"title": "bug willrender able", "body": "lt hooks ran following order also hooks called rendering done eg applying thus set would yield error repro", "num": "14458", "d": "10/2016"}, {"title": "ember goes infinite loop return promiseobject helper", "body": "reproduction reproduce simply goto applicationhbs add final warning cause browser computer cry see console printed imagine need better trying emberresolvepromisehelper trying achieve nt know whether ember get loop like twiddle abstract example trying achieve part workflow real app adds child store nt save child created already nt show particular button cant use myparentchild directly async belongsto returns truthy even though child thing say approach works fine computed component", "num": "14456", "d": "10/2016"}, {"title": "cleanup combine component lifecycle hook tests", "body": "share existing lifecycle tests backport extra assertions attrs state", "num": "14451", "d": "10/2016"}, {"title": "bug components via appendto still affected", "body": "addressed issue also mode working x didinitattr didretrieveattrs destroy hooks diddestroyelement first willdestroyelement topcomponent managed components enhancing existing lifecycle checks ensure covered explore missing tests may missing proper coverage types components lifecycle tests fix removing duplicate hooks", "num": "14447", "d": "10/2016"}, {"title": "bug referencing positionalparams attrs work", "body": "repro likely similar", "num": "14445", "d": "10/2016"}, {"title": "didreceiveattrs firing incorrectly", "body": "difference behaviour release alpha see twiddle reproduce click toggle multiple times notice didreceiveattrs nt fire switch alpha click toggle multiple times notice didreceiveattrs fires", "num": "14444", "d": "10/2016"}, {"title": "longer called", "body": "repro edit updated title accurate", "num": "14439", "d": "10/2016"}, {"title": "bug updating one query param causes qp reset default value", "body": "found another bug query params updating one query param causes qp reset default value bug happens specific circumstances given controller let call must query param say must query param e g either controller child controller route model hook must return pending promise must template adjacent route route must nested route route must dynamic segment resulting route structure implicit route update nondefault value updating cause reset default value crazy removing listed prerequisites prevents bug manifesting demo able narrow issue line prerequisites met update pausing execution line qp running would return subsequently cause reset default value remove least one prerequisite returns current value expected please help loss finish work last week stuck sob never even heard idea fails", "num": "14438", "d": "10/2016"}, {"title": "max callstack exceeded calling destroy component", "body": "hi ember get max callstack error calling inside component works previous ember versions twiddle thanks", "num": "14437", "d": "10/2016"}, {"title": "binding disabled attribute generates invalid markup", "body": "using within embercomponent object allow binding attributes component attributes form bindings work correctly however disabled attribute function way disabled elements generated rather tl dr disabled attribute value yet ember generates", "num": "14436", "d": "10/2016"}, {"title": "embersource related cleanup", "body": "x fix script ember x fix including waaaaaayyyyy much targz right x fix embersource name change", "num": "14434", "d": "10/2016"}, {"title": "quest document solutions titlebar problem", "body": "rfc included discussion around properly configuring text editors easy developers distinguish filenames within typical ember app even though names necessarily repetition canonical example files like readily distinguishable despite sharing common ending quest issue exists people chime anything required make popular editors nicely editors x atom x brackets x chocolat chrome dev tools x emacs x jetbrains x sublime text vim x visual studio code please suggest others long actually use work ember apps solutions atom locks configuration required brackets locks configuration required emacs outofthebox behavior since emacs two example files appear configuration required see options customizing behavior see visual studio code taken tomdale comment rfc configuration required jetbrains family phpstorm webstorm intellij rubymine jetbrains family ides make sure uncheck small labels editor tabs setting add parent directory tab label soon ambiguity tested phpstorm probably apply whole familiy ides webstorm intellij rubymine etc sublime text locks configuration required chocolat locks configuration required", "num": "14430", "d": "10/2016"}, {"title": "using send action name breaks things", "body": "twiddle imaginary component blogging system send delete blog posts expected clicking delete button actual clicking delete button template replace component result actions component call closure action super confusing ideally would work send natural name use action alternatively ember could warn user", "num": "14424", "d": "10/2016"}, {"title": "beta bug longer works", "body": "repro one use able component", "num": "14423", "d": "10/2016"}, {"title": "bug beta longer works", "body": "reproduction used work lt", "num": "14418", "d": "10/2016"}, {"title": "positional params error", "body": "template code nonsense bug app opening issue causes nasty error ember internals twiddle compare ember vs beta ember earlier positional params ignored error happens", "num": "14416", "d": "10/2016"}, {"title": "block params named unusable beta", "body": "starting per rwjblue request understand would nt necessarily work naming block param really usable within block scope work lt refactored away name reporting couple issues noticed nothing output using text error produced used attribute uncaught error assertion failed create component undefined using component helper hbs abc components abc abc component components component component component attribute components component index index reproduced issue embertwiddle", "num": "14413", "d": "10/2016"}, {"title": "hidden bound default", "body": "attribute valid elements would nice able use components need dom visible easiest way add default set see current behavior twiddle", "num": "14412", "d": "10/2016"}, {"title": "didinsertelement running twice", "body": "modifying property inside hook get deprecation expected however ember versions hook runs twice reproduction able see two logs ember versions cc rwjblue", "num": "14409", "d": "10/2016"}, {"title": "positional parameters components two way binding", "body": "positional parameters components behave differently oneway binding twoway binding looked around could nt find documentation suggesting change intentional click change twiddle reproduce compare beta release", "num": "14408", "d": "10/2016"}, {"title": "deprecate hasarrayobservershasenumerableobservers", "body": "go along", "num": "14406", "d": "10/2016"}, {"title": "exploreconsider removaldeprecation enumerable events hasarrayobservershasenumerableobservers", "body": "et al", "num": "14405", "d": "10/2016"}, {"title": "computedsort nt update dependant array set", "body": "created ember twiddle shows issue would expect calling would cause computed property update", "num": "14404", "d": "10/2016"}, {"title": "helper rerenders dom elements without preserving style", "body": "hi updated ember wanted ask guidance issue maybe bug following piece code array using helper call custom helper item array inside action push new item array animate initially div referenced opacity animation moves element fades without weird glitches action triggered element array must remain visible opacity works fine ember nt push another item itemitems array go back opacity loose styling basically elements array completely rerender lose previously set styling intended work like ember bug thank helper simply outputs html div certain background image depending item", "num": "14401", "d": "10/2016"}, {"title": "willinsertelement fire tagless components", "body": "replication true make less semantic sense tagless components function standings", "num": "14398", "d": "10/2016"}, {"body": "one solution app developer wrap jquery promise interactions described ember wait promises complete puts heavy burden app developer nt help jquery promises used internally exposed thirdparty code another solution make ember aware jquery promises done using hacks add number unresolved promises let pending embertestregisterwaiter gt pending function shim obj name fn let original obj name obj name function args return fnapply original args function trackedthen oldthen onfulfilled onrejected onprogress pending return oldthencall function success args pending onfulfilled onfulfilled args function failure args pending onrejected onrejected args onprogress shim windowjquery deferred function olddeferred args let deferred olddeferredcall args shim deferred promise function oldpromise args let promise oldpromisecall args shim promise trackedthen return promise return deferred", "d": "10/2016"}, {"body": "bit different twiddle talking block params properties template context believe helpers winning always true actually see demo twiddle dasherized name intentional design decision fact looks helper named separate issue suspect embercli resolver function", "d": "10/2016"}, {"body": "thank clarifications explanatory example rwjblue embercli resolver normalize function line makes little bit unsure property try resolved via resolver plain javascript value parent scope also intentional decision understand question current issue scope anyway would like understand need fill another issue one smirkcat", "d": "10/2016"}, {"body": "looks like finally found something related dasherizing camelcased props", "d": "10/2016"}, {"body": "nt really dug demo yet related large scale router query param cleanup effort likely trentmwillis better understanding exactly going advise bug new feature", "d": "10/2016"}, {"body": "dig later assertion nt really new moved different part qp flow guess previously nt checking specific qp due missing hash serialization step try dig later one clarifying question use controllername create multiple instances controller still singleton used multiple routes think inform whether actual error", "d": "10/2016"}, {"body": "trentmwillis definitely later afaik controllers singletons services makes reuse controller via valuable multiple routes setting data single place reference api docs emberroute controllername", "d": "10/2016"}, {"body": "okay latter considered bug easy fix though improve check see qps nt error error qps use come different propertiescontrollers", "d": "10/2016"}, {"body": "issue set document global used many libs detect real dom expected thing pass document api", "d": "10/2016"}, {"body": "issue set document global well complicated something time broken requiring document set need addressed first document removed", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "krisselden address", "d": "10/2016"}, {"body": "gauthierm would mind opening pr fix file edit", "d": "10/2016"}, {"body": "pixelhandler take one", "d": "10/2016"}, {"body": "invoke cp somewhere either component template", "d": "10/2016"}, {"body": "oh used template seems work however work always nested object", "d": "10/2016"}, {"body": "ok case cp recomputed change cp called", "d": "10/2016"}, {"body": "updating using set sure nt working", "d": "10/2016"}, {"body": "hello dhawalbhanushali closing since emberjs bug please go help channel slack registered use slackin app thank", "d": "10/2016"}, {"body": "closing duplicate please let know referring different issue using render twiddle thank", "d": "10/2016"}, {"body": "ember ship glimmer adding needs bug verification check someone get windows machine replicate thank", "d": "10/2016"}, {"body": "thanks serabe also tried appears resolve issue perhaps prep glimmer caused issue fixes guess someone else verifys question whether worth fixed lts would good know plan versioning", "d": "10/2016"}, {"body": "lts definitely important figure fix needs digging figure changed break", "d": "10/2016"}, {"body": "limitation one intended see references solution closing since issue providing example refer later thank", "d": "10/2016"}, {"body": "serabe thanks looking giving solution done work arounds like past hoping solution provided better separation concerns ideally like able lines computed property filtered based several properties type isdeleted etc able take computed property result filter aggregate child selections current work around ember start add several properties line object aggregated used one specific object concerns object consuming properties instead shifted line object start multiple aggregate properties lines becomes somewhat dumping ground anyway thanks", "d": "10/2016"}, {"body": "sounds good would mind submitting pr review", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "fixed master tested unfortunately nt properly mark commit pulled branches", "d": "10/2016"}, {"body": "working pr", "d": "10/2016"}, {"body": "fix fix", "d": "10/2016"}, {"body": "branches updated via released next days closing", "d": "10/2016"}, {"body": "patterns combination interoperable features documented api least part fear creating implicit dependency documentation maybe stating option available works even passed action", "d": "10/2016"}, {"body": "mikenorth please check pr comment thank", "d": "10/2016"}, {"body": "agree would mind submitting pr emberjswebsite", "d": "10/2016"}, {"body": "added quick note", "d": "10/2016"}, {"body": "pr emberjswebsite merged closing thank guys", "d": "10/2016"}, {"body": "used call scheduled queue call ultimately schedule fix likely schedule working pr", "d": "10/2016"}, {"body": "first seemed like appendoutletview return value used appear suggests may working correctly either", "d": "10/2016"}, {"body": "proposed fix", "d": "10/2016"}, {"body": "thanks stefanpenner", "d": "10/2016"}, {"body": "kratiahuja confirmcheck issue present subsequent transitions initial transition fix proposed likely correct initial render since top hierarchy would like see also need figure fix similar issue rerenders", "d": "10/2016"}, {"body": "fix subsequent transitions look like initial render transition transition", "d": "10/2016"}, {"body": "thank confirming stefanpenner", "d": "10/2016"}, {"body": "rwjblue also mentioned ordering issue appears initial render subsequent rerenders work correctly", "d": "10/2016"}, {"body": "hello eraleis closing since emberjs bug please go help channel slack registered use slackin app case data send need table query db values would like thank", "d": "10/2016"}, {"body": "likely computed property based another computed property based first computed property", "d": "10/2016"}, {"body": "likely computed property based another computed property based first computed property btecu nt make sense message clearly states please create intermediary computed property implies correct way handle situations like", "d": "10/2016"}, {"body": "adambuczynski could definitely improved thanks pointing", "d": "10/2016"}, {"body": "mmun worries thanks looking", "d": "10/2016"}, {"body": "mmun would solve well find general solution close well", "d": "10/2016"}, {"body": "please provide details bug would great reproduction ember twiddle thank", "d": "10/2016"}, {"body": "falkf actionable close please reopen description emberjs issue", "d": "10/2016"}, {"body": "dont remember wtf \u30c4", "d": "10/2016"}, {"body": "empty app", "d": "10/2016"}, {"body": "yes similar error chrome canary things render presumably let know provide debugging help somehow sure look since see application code stacktrace", "d": "10/2016"}, {"body": "serabe nope one production apps", "d": "10/2016"}, {"body": "try provide reproduction try take look travisweb later week otherwise", "d": "10/2016"}, {"body": "unfortunately nt able reproduce yet", "d": "10/2016"}, {"body": "get error every load local server get happen deployed production build sorry get mysterious errors see know related", "d": "10/2016"}, {"body": "seems related need dig bit", "d": "10/2016"}, {"body": "added conditional breakpoint look unfamiliar much insight screenshot one levels stacktrace deeper entry would helpful let know", "d": "10/2016"}, {"body": "common error message make issue need stack traces case like serabe added separate issues rwjblue node get non object key fails seem match stack gave fixed issue serabe confirm error running old", "d": "10/2016"}, {"body": "krisselden nt able trigger current chrome versions installed macbook mobile devices user able trigger reportedly using chrome stated", "d": "10/2016"}, {"body": "understand correctly krisselden suggesting open another issue detail give apart pasting stacktraces including browser versions", "d": "10/2016"}, {"body": "backspace yes issue reported fixed please nt open issues typeerror say typeerror operation error old destroy fixed error ref get bailing different", "d": "10/2016"}, {"body": "open separate issue sorry lack understand see difficult someone familiar internals know portion stacktrace important extracted saying important part issue important one without discussion see could know", "d": "10/2016"}, {"body": "givanse think request something made rfc issue since bug issue tracker emberjs bugs see contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo idea would nice create issue emberjsrfcs repo", "d": "10/2016"}, {"body": "happy keep exploring suggestion emberon often makes code harder reason matches perfectly experiences pixelhandler absolutely right take rfcs repo since nt actual bug feature request givanse would mind opening issue", "d": "10/2016"}, {"body": "opened new issue rfcs repo thanks", "d": "10/2016"}, {"body": "confirm would work specified doc considered property path read first parameter action nesting action makes work since curries first argument outer action would consider second argument first argument checked ember twiddle nested actions without nested actions take look difference action implementation thank report", "d": "10/2016"}, {"body": "wow interesting obviously nt understand paragraph following example thanks", "d": "10/2016"}, {"body": "phcoliveira see missing closing parenthesis acomponent see twiddle seems work", "d": "10/2016"}, {"body": "apologize describing problem exactly seeing trying something different possible used contextual component handlebars acomponent component componentcontextuallink paramslinkparams work componentcontextuallink acomponent linkto paramslinkparams works linkto", "d": "10/2016"}, {"body": "phcoliveira make embertwiddle example reproduces issue", "d": "10/2016"}, {"body": "investigating", "d": "10/2016"}, {"body": "reproduction happens since behaviour fixed glimmer reproduction used work broke reproduction would consider regression try land fix morning though nt get right wo nt able fix ember fest", "d": "10/2016"}, {"body": "thanks locks noticing reproduction transition renders render transitions reproduction", "d": "10/2016"}, {"body": "summary bug introduced partially fixing another issue rest positional params component would render would received empty stopped rendering given assertion added check receives least one parameter submitted pr fixing checking lts since seems regression hope getting thank report", "d": "10/2016"}, {"body": "much happened slept really described basics created twiddle bad using ember", "d": "10/2016"}, {"body": "closing since pr merged thank", "d": "10/2016"}, {"body": "markmt yeah correct component need helper subject contextual components links enjoy", "d": "10/2016"}, {"body": "ha beat", "d": "10/2016"}, {"body": "thanks confirmation pixelhandler", "d": "10/2016"}, {"body": "markmt oh sorry figured easy pr", "d": "10/2016"}, {"body": "problem", "d": "10/2016"}, {"body": "confirmed issue related swiftkey android device chrome although manifests differently open reproduction linked swiftkey word appear switftkey second word space added also confirmed occur input textarea created browser normal page parser presume related something creating elements", "d": "10/2016"}, {"body": "yes use implement behaviour see twiddle", "d": "10/2016"}, {"body": "please move emberjsdata add error payload sending thank", "d": "10/2016"}, {"body": "wrong button close move ember data repo thank", "d": "10/2016"}, {"body": "moved closing issue", "d": "10/2016"}, {"body": "ivanvanderbyl perhaps reach help channel see anyone suggestion use issue tracker ember bugs also helps provide example using simple making new app embercli sharing repo see comment able use error substates provide user back link uses history also url nt changed nt refresh work case help general links subject using error substates", "d": "10/2016"}, {"body": "pixelhandler created ember twiddle please see", "d": "10/2016"}, {"body": "nt going submit pr someone confirmed wanted behaviour consolelog later something working went ahead created pr anyway", "d": "10/2016"}, {"body": "designed", "d": "10/2016"}, {"body": "nt seem issue according documentation dynamically look property object second argument get string value although bound", "d": "10/2016"}, {"body": "glennvd link btecu indicate string expected close issue ember bug", "d": "10/2016"}, {"body": "think related code happy get pr someone give assistance fix", "d": "10/2016"}, {"body": "sure something fix noted hash object created null prototype allows check see keys provided without use hasownproperty checks throughout helpers", "d": "10/2016"}, {"body": "completely agree bug keep open improve documentation though", "d": "10/2016"}, {"body": "fixed exact thing embercliaccounting", "d": "10/2016"}, {"body": "hello since ember cli related request please move embercliembercli thank", "d": "10/2016"}, {"body": "forgot please reference issue close thank", "d": "10/2016"}, {"body": "thanks serabe issue moved embercliembercli", "d": "10/2016"}, {"body": "sorry explain issue correctly pr problem double bound nothing helper value passed helper never double bound helper recomputed argument changed function helper class helper control value returned helper linked way input parameters check twiddle please notice given using inner part shown unless type something ping slack channel need help subject closing since bug", "d": "10/2016"}, {"body": "serabe thank explanation understand better helper works", "d": "10/2016"}, {"body": "moved", "d": "10/2016"}, {"body": "thank", "d": "10/2016"}, {"body": "mitchlloyd curious well typically class used find using confusing see expect use know ember used since emberobject makes easy otherwise see tests include use main issue using method expecting behave like bug somewhere", "d": "10/2016"}, {"body": "idea future world use classes work us interchange ie consumer class nt care class result emberobjectextend", "d": "10/2016"}, {"body": "rwjblue yeah suspected thanks clarity", "d": "10/2016"}, {"body": "jesseditson curious action twiddle also name private method route name avoided action route", "d": "10/2016"}, {"body": "looks like perhaps docs miscategorized method sure normal protocol around private events seen used elsewhere workaround double early fires original issue troubleshooting understand private method may expected behavior docs think perhaps documentation issue exploring calling causes bubble expect returning resolves case guessing get let know help clarifying docs bad poking around private apis", "d": "10/2016"}, {"body": "jesseditson typically avoid private properties methods events etc", "d": "10/2016"}, {"body": "fair enough might appropriate drop doc mention bubbling bit misleading try find moment pr", "d": "10/2016"}, {"body": "looking back slack chat robert provided even direction great needs rewritten search arguments use present completely remove cc sukima since involved particular convo", "d": "10/2016"}, {"body": "makes sense understand suggestion basically would change ast plugin check hash arg nt one create one", "d": "10/2016"}, {"body": "cc sukima", "d": "10/2016"}, {"body": "option specifies object look context bind resulting function specifies template facing api object example want target service actions added little wary making general purpose helper zackthehuman use case could nt handled hash currently agree improve ergonomics hash think everyone eager adopt decorators usecase devs nt like ergonomics though worried forking convention templatefacing actions", "d": "10/2016"}, {"body": "mixonic thought issue inconsistency closure actions modifier actions used differs case nt work like bind believe would bad consequences since pass path references action function argument without specifying target function called wrong context seems badconfusing", "d": "10/2016"}, {"body": "agree zackthehuman thought issue fix inconsistency actions hash string usage something nt know worked first troubleshooting issuecase could refactor make usage work think still fixed", "d": "10/2016"}, {"body": "without specifying target function called wrong context seems badconfusing written execute like called nt wrong right javascript general nt expected devs passing raw functions helper expected passing either strings already created actions yielded elsewhere bound function classic action helper seems like perhaps implementation quirk zackthehuman sounds like usecases binding behavior though provide example use application today would like able use", "d": "10/2016"}, {"body": "mixonic say ember data model helper functions emberdata const model attr ds const get ember export default modelextend foo attr defaultvalue return addnewfoo get foo pushobject bar bar movefooup index let foo get foo let orig fooobjectat index fooremoveat index fooinsertat index orig movefoodown index let foo get foo let orig fooobjectat index fooremoveat index fooinsertat index orig view might", "d": "10/2016"}, {"body": "mixonic call means implicitly bound calling free function twiddle illustrate mean edit nt horse race intended behavior happy close pr", "d": "10/2016"}, {"body": "mixonic related adding new functionality seem implying related making support things one small example call call additionally take look following docs suggest general concept support perhaps position never supported ship sailed point super bizarre place document forms together actually support things said pr also merits removing maybe implicit explicit target behavior code modifier helper large win", "d": "10/2016"}, {"body": "right totally understand inconsistency elementspace action closure actions regards nt inconsistency example closure actions bubble might seem unintentional agree silent failing case today developer might migrate elementspace action closure action copypasta expecting consistent behavior get less ideal improved however strongly believe usecase outlined addressing methods model antipattern ember app development light behavior classic actions considered something bug would like copy behavior forward closure actions mediumterm elementspace actions deprecated ember long term removed however closure action api remain ember expect long time let bring us want documentation suggesting context three documentation snippets rwjblue linked single one implies would used context function evaluation example code however uses string action name function documentation aware describes context argument functions passed fact documentation explicit intro look instead current context hash useful targeting service actions look hash call function context avoiding antipattern many experienced devs grow annoyed design ember totally agree ergonomics less ideal however improved time design serves purpose common footgun intended help conflict templatefacing actions lifecycle hooks example defined nt way know user unwittingly used method name conflicts hook intended subclass behavior goal code override lifecycle hook add action permitted create context method called user fallen intro trap prevent falling stomping also needed type twice given could service something complex name invites typos reduces readability encourage compare actions system works today repetition conflict lifecycle hook model actions work well framework needs encourage times even though may cases passing context may work safely need something robust known failure cases want apps use expose api templates ergonomics suck agree seems dated expect would like es classes supported use decorators example decorator would allow us assert user nt fallen prey common footgun example check method named superclass method superclass also actions override actions case indeed defined chain assert action stomping lifecycle hook notify user appropriately system place also actions create closures context context packaged action would needed specify context removes duplication addresses method model think would viable point perhaps helper nt needed think improve improve eager encourage developers something use current designed today think nt suggest nothing done definitely subtle inconsistency two apis improve failure mode closure actions deal raw functions passed think assert also passed suggesting user instead use string actions closure actions implicit context scanning code ca nt point exactly believe since others raised change basically function passed action target passed run always method closure still evaluate expected implicit cases see change behavior", "d": "10/2016"}, {"body": "agree fix implicit binding use instead aligns action semantics normal js function semantics", "d": "10/2016"}, {"body": "kanongil documentation available says updating property supplied hash helper trigger observers properties comment seems indicate perhaps defensive code may needed avoid unwanted observer behaviors", "d": "10/2016"}, {"body": "pixelhandler meant bug rather notice regarding performance issue current helper implementation unintuitive seems solvable aware ember makes guarantees triggered observer updated value agree cautious approach far tell properly implemented always superior current implementation ie choice would probably always choose", "d": "10/2016"}, {"body": "interests helping folks triage issues want suggest closing behavior change always worked way think addressed rerender scenario made behavior expensive enough notice first place would still happy review pr optimizes hash helper stability long avoid forcing eager evaluation properties hash object nt impose undo cost amp complexity expectation long rest rerender amp invalidation correctly sophisticated hash helper net gain", "d": "10/2016"}, {"body": "thank hint closing thank thread pleasure read", "d": "10/2016"}, {"body": "chadhietala issue closed pr merged", "d": "10/2016"}, {"body": "believe duplicate nt looked super deeply confirm double check see think dupe", "d": "10/2016"}, {"body": "hard tell occurs ember whereas looks related look similar im happy add twiddle thread monitor reopen fix doesnt fix mine", "d": "10/2016"}, {"body": "investigating top level destroy hook issues", "d": "10/2016"}, {"body": "fixed cherrypicked beta", "d": "10/2016"}, {"body": "could wrong looks like related guess controller invalidated toggling property since controller invalidated rerenders children switch beta didreceiveattrs also fires multiple times", "d": "10/2016"}, {"body": "confirm scottmessinger seems like issue going close track single place likely since conversation atm", "d": "10/2016"}, {"body": "ok try find dupe cheers", "d": "10/2016"}, {"body": "previously invoked order means work done initial render remained inert emit change events also means time object construction completes invoked", "d": "10/2016"}, {"body": "twiddle repo look demonstrates issue based special setup circumstances likely wo nt able reproduce demo would help push forward", "d": "10/2016"}, {"body": "yes demo", "d": "10/2016"}, {"body": "crazy specific prerequisites legit resulting behavior totally wrong date range filter unusable ca nt select start end date sort table sort order qp dates reset table data gets redownloaded", "d": "10/2016"}, {"body": "lolmaus thank reproduction", "d": "10/2016"}, {"body": "lolmaus yeah crazy", "d": "10/2016"}, {"body": "hmm destroying component manually seems like somewhat odd thing twiddle something different app code", "d": "10/2016"}, {"body": "hi thanks answering destroying component manually safety measure component renders whole screen something like ui coach mark encounter problems animating various elements coach mark manually destroy component nt block ui app empty overlayed div main ui contents users interact app anymore could probably something like would set property false template component actually destroyed would good way handling however wanted let guys know problem nt previous ember versions actually discovered call inside listener one components", "d": "10/2016"}, {"body": "thanks opening issue going somewhat hard track without reproduction put together embertwiddlecom demonstrating issue described", "d": "10/2016"}, {"body": "suspect may passing string attribute binding actual boolean value really need demosnippet understand going", "d": "10/2016"}, {"body": "andhofmt see curious issue mentioning related terms behavior boolean html attribute", "d": "10/2016"}, {"body": "andhofmt follow issue please thank", "d": "10/2016"}, {"body": "locks closed", "d": "10/2016"}, {"body": "serabe get automatically closed pr merged keep eye", "d": "10/2016"}, {"body": "looks like chrome sources tab", "d": "10/2016"}, {"body": "ugh yes chrome dev tools added list", "d": "10/2016"}, {"body": "knowledge problem unsolvable chrome dev tools place lots folks spend quite bit time even though names necessarily repetition precise even though names designed way extensive repetition", "d": "10/2016"}, {"body": "jetbrains family ides make sure uncheck small labels editor tabs setting add parent directory tab label soon ambiguity tested phpstorm probably apply whole familiy ides webstorm intellij rubymine etc", "d": "10/2016"}, {"body": "whereas techniques solve basic problem remains case substantial title bar real estate wasted meaningless semantically vacuous component part title", "d": "10/2016"}, {"body": "atom noted configuration required using atom see behavior atom package installed", "d": "10/2016"}, {"body": "might consider adding intellij ide editor suite list webstorm pycharm rubymine etc know full stack engineers even work prefer use ides addressed simonihmig", "d": "10/2016"}, {"body": "work sublime text mac os x shows folder name sidebar tabs two files filename open", "d": "10/2016"}, {"body": "whereas techniques solve basic problem remains case substantial title bar real estate wasted meaningless semantically vacuous component part title rtm meaningless distinguishing component model route share common", "d": "10/2016"}, {"body": "workmanw one added atom tried clean environment see disambiguating behaviour reach topiceditors", "d": "10/2016"}, {"body": "pichfl thank report nt notice added screenshot glad see confirmation", "d": "10/2016"}, {"body": "one weird pain point atom disambiguates tabs name pane left actually file one inactive tab right different labels", "d": "10/2016"}, {"body": "rtm type meaningless distinguishing component model route share common name dgeb absolutely right working components often open time type name equally relevant", "d": "10/2016"}, {"body": "existing vim plugins modify way tabs displayed nt see could easily configured match examples editors also nt look deeply probably exist anyway straightforward modify tabline settings vim get something nice like others threw together plugin people use copy code make special snowflake tabs", "d": "10/2016"}, {"body": "note solved atom looks setiui one popular atom themes files open fullscreen monitor", "d": "10/2016"}, {"body": "sure would consider solved editor name conflict among files open think would nice able always show parent directory", "d": "10/2016"}, {"body": "sure would consider solved editor name conflict among files open think would nice able always show parent directory prior art address issue smarttabname customtitle tabfoldernameindex nt found setting always enable atom user", "d": "10/2016"}, {"body": "workmanw dfreeman willmanduffy et al using embertabs atom solves problems configuration required behavior screenshotted kicks multiple files name open truncates part care whereas embertabs leads component root also handy keyboard shortcut swap templatehbs amp componentjs within folder subfolder point chrome devtools pain point unfortunately big one", "d": "10/2016"}, {"body": "dwickern twiddle example show confused behavior defining action named also noticed component took look guide page actions components ca nt find mentioned historically primary way fire action component seems days community generally favor using closure actions callable example perhaps replace see fork twiddle method component prototype avoided name action see generally would good idea avoid using action name already defined existing method component case changes behavior component send one action sure documenting adding assert right thing", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "would consider bug previous behaviour keywords sure different term gt meant lowlevel helpers helpers took precedence properties name see twiddle guess change behaviour make standard think seen test regarding helper precedence find", "d": "10/2016"}, {"body": "yeah helpers keywords win properties nt win block params block params always win", "d": "10/2016"}, {"body": "rwjblue updated twiddle show behaviour consistent block params well helpers win twiddle using think consistent behaviour non making difference block param property otherwise refactoring block component would harder one would expect", "d": "10/2016"}, {"body": "seems like nt fix particular scenario make block params always win helpers glimmer side however since handled ember need another fixtest case", "d": "10/2016"}, {"body": "hmm think would nice addon todays components real solution conceptual still super nebulous angle bracket components top level tag component includes things passed invocation concern adding additional components likely used relatively small subset going negative performance impact", "d": "10/2016"}, {"body": "also think general feature request rfc issue", "d": "10/2016"}, {"body": "reason isvisible wo nt work causally brought using hidden attribute isvisible avoid using inline styles tue oct robert jackson notifications githubcom wrote also think general feature request rfc issue receiving subscribed thread reply email directly view github mute thread", "d": "10/2016"}, {"body": "real solution conceptual still super nebulous angle bracket components top level tag component includes things passed invocation seems far feature request rfc issue could nt find default set bindings nt sure missed nt sure whether accidental omission new feature happy open rfc reason isvisible wo nt work using older ember versions told avoid secondly semantically correct lastly write css animating toggle", "d": "10/2016"}, {"body": "seems far agreed addon command away smiley", "d": "10/2016"}, {"body": "closing open rfc list common attributes", "d": "10/2016"}, {"body": "confirm mean firing twice", "d": "10/2016"}, {"body": "rwjblue bug probably introduced edited make clear", "d": "10/2016"}, {"body": "hmm see two log messages twiddle beta release branches would indicate working properly confirm", "d": "10/2016"}, {"body": "right could almost swear seen two log messages beta openmouth anyway looks like beta fine release needed fix", "d": "10/2016"}, {"body": "miguelcobain yeah figure going wrong", "d": "10/2016"}, {"body": "scheduled log shown might related rerender warning shown twiddle", "d": "10/2016"}, {"body": "rereviewed curious using nested run loop serabe mentioned work around either use omit altogether depending needed initially", "d": "10/2016"}, {"body": "miguelcobain check rwjblue comment please thank", "d": "10/2016"}, {"body": "let close reopen come meaningful reproduction problem", "d": "10/2016"}, {"body": "afaik bug previous versions", "d": "10/2016"}, {"body": "confirm bug previously one way begin", "d": "10/2016"}, {"body": "thank closing issue thank", "d": "10/2016"}, {"body": "setting value determined force cp invalidate twiddle either use add items array slice array set new instance may gotcha pr updating documentation would definitely welcome nt bug going go ahead close misunderstood something please let know reopen", "d": "10/2016"}, {"body": "thanks robert problem seeing coming route transition setting dependant property nt get updated get chance try reproduce", "d": "10/2016"}, {"body": "demo would helpful would allow us see fixed newer versions quite old point fairly unlikely receive bug fixes even determined bug", "d": "10/2016"}, {"body": "hey thanks much slowly making way ember coming ember reproduction click button", "d": "10/2016"}, {"body": "thanks reporting folks running work around willrenderdidrender track initial firing vs subsequent obviously ideal", "d": "10/2016"}, {"body": "reason triggering hook within curly component manager called manager actual element created however called inside compatible need correct fire tagless components", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "serabe last twiddle demonstrates content locks pr see passing property complex object vs primitive object reference object protected using helper contents bound property changed simultaneously read oneway binding behaves similar keyword think documentation issue would resovled", "d": "10/2016"}, {"body": "pixelhandler think actual problem array bindings turned unbound ones serialization array need knowledgeable eyes", "d": "10/2016"}, {"body": "locks nt think problem updated already happened passing arrays helpers workaround use parameter see tweedle sadly update either take deeper look later week", "d": "10/2016"}, {"body": "quick look weekend got nothing try document triage meeting", "d": "10/2016"}, {"body": "let let one slide oblivion p", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "heroiceric closed merged", "d": "10/2016"}, {"body": "yeah closing fixed release branch", "d": "10/2016"}, {"body": "seems fixed least cases", "d": "10/2016"}, {"body": "something encountering quite often test suite seems related wrapping expression removed error goes away", "d": "10/2016"}, {"body": "fivetanley originally opened think may dupe although see ember twiddle reproduce simply goto applicationhbs add final warning cause browser computer cry", "d": "10/2016"}, {"body": "longer seeing error application release inclined close resolved elsewhere fivetanley snewcomer still seeing issue", "d": "10/2016"}, {"body": "jrjohnson basically use new glimmer rendering engine chancancode tracked one owe failing tests", "d": "10/2016"}, {"body": "ah nt know thought included obviously missed critical announcement leave open thanks", "d": "10/2016"}, {"body": "believe fixed verified least fixed adamknights gist fivetanley jrjohnson confirm fix available middle releasing latter probably time see", "d": "10/2016"}, {"body": "actual fix tests", "d": "10/2016"}, {"body": "chancancode quick click around app appears fixed thanks", "d": "10/2016"}, {"body": "dimul regarding see private property deprecated object component guides api docs recommend using perhaps another approach altogether", "d": "10/2016"}, {"body": "perhaps another approach altogether suggestions", "d": "10/2016"}, {"body": "passing property parent component child component explicitly yield property create contextual components see example contextual components", "d": "10/2016"}, {"body": "dimul far appears issue question support related think get feedback help ember community slack erhaps reach help channel", "d": "10/2016"}, {"body": "sure agree support issue think clearly usage intimate api worked one version ember work current version using intimate api controversial think find people older apps use certainly simpler time using accepted solution many problems certainly cases using broken change case easy move pass reference component instance attribute think sensible least acknowledge use supported complicated technical reasons longer practical", "d": "10/2016"}, {"body": "would like chime effects code well canary causing significant rerendering likely block updating app resolved", "d": "10/2016"}, {"body": "mentioned think way absorb difference per object per property invalidation would definitely useful bet making glimmer tracking individual properties changes actually costly recomputing need escape hatch nt case targeted scenarios", "d": "10/2016"}, {"body": "may related fixes happening krisselden mentioned", "d": "10/2016"}, {"body": "stefanpenner fixes performance regressions experienced nt fix specific issue", "d": "10/2016"}, {"body": "scottmessinger kanongil believe fixed twiddle works expected think wrong please let know reopen", "d": "10/2016"}, {"body": "chancancode works thanks much", "d": "10/2016"}, {"body": "hello zxcware time creating reproduction twiddle would ok sometimes bug needs reproduce ember cli project need help ping slack thank", "d": "10/2016"}, {"body": "closing according triaging policy please provide reproduction dig thank", "d": "10/2016"}, {"body": "bryancrotaz check please still going latest master thank", "d": "10/2016"}, {"body": "closing according triage policy please provide reproduction follow thank", "d": "10/2016"}, {"body": "worth error thrown tagname property embercomputed note merely triggered deprecation warning advising remember correctly future computed tagnames would respected component creation subsequent changes would effect new ember expected computed tagnames supported also ca nt seem find reference original deprecation message google github maybe going crazy", "d": "10/2016"}, {"body": "nathanhammond link blog post", "d": "10/2016"}, {"body": "similar issue problem trying delete key emptyobject using operator trows error fixed sure people expect work probably yes", "d": "10/2016"}, {"body": "hash frozen object delete nt work going manipulate hashparams objects need copy first", "d": "10/2016"}, {"body": "ok cool nt know expected behaviour thanks explanation", "d": "10/2016"}, {"body": "runspired still understand", "d": "10/2016"}, {"body": "private please deprecate unless another public way render component programmatically", "d": "10/2016"}, {"body": "public surprised", "d": "10/2016"}, {"body": "mentioned neither public today would love rfc make public mechanism programmatic creation components also lets centralize conversation topic instead spreading place making hard others follow", "d": "10/2016"}, {"body": "closing favor contains information thank report", "d": "10/2016"}, {"body": "hi updated ember facing issue usecase exact one describe pull request example best way future proof getting behaviour example thanks", "d": "10/2016"}, {"body": "yeah guides suggest use see curious creating custom async helpers seems syntax example still useful especially since helper implemented", "d": "10/2016"}, {"body": "rwjblue confirm line removed appears part builtin", "d": "10/2016"}, {"body": "serabe looks like existing link pointing nodemodules folder ember data nt exist source code also emberinflector class dependency sure change needs made emberjs repo looks like might data repo needs update even though nt figured exactly change needs happen also best way make source code links point another repo since emberinflector source separate repo real let know way try join slack channel sometime today", "d": "10/2016"}, {"body": "eglenfield closing fixes", "d": "10/2016"}, {"body": "still addressed given glimmer provide messaging dev get people right thing possibly add coercion opcode detect build time never add hot path would sad cc cibernox rwjblue", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "locks description seem could add something like route using thissend check local actions prior sending action router controller behavior sends action router delegate currently active route hierarchy per bubbling rules explained actions however sure really explain see twiddle twiddle index route action one fired button index template action sends route rwjblue close", "d": "10/2016"}, {"body": "chancancode still relevant thank", "d": "10/2016"}, {"body": "confirm inconstant behaviour another example showcase issue seems array listeners set sort properties array empty", "d": "10/2016"}, {"body": "note works fine index route work correctly routes instead causing full page refresh", "d": "10/2016"}, {"body": "getting similar issue nt warning template breaking", "d": "10/2016"}, {"body": "new glad issue exists going crazy trying figure nested route breaking implemented arrow function good stuff know amp learn", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "salamondharamaraj gramozkrasniqi struggling issue way found refreshing model calling know call refresh route possible define actions route unless use addon action implemented controller get route trigger refresh get current route handler controller", "d": "10/2016"}, {"body": "jcano send action controller route using method fixed sarus jsbin typos route named instead reason send method finding right route user see params part use last send action save snapshot jsbin right giving problem cors main part js appexploretagcommentsroute emberrouteextend model function params consoleinfo model hook exploretagcomments route called return thismodelfor exploretag actions refreshonlycomments function thisrefresh appexploretagcommentscontroller embercontrollerextend actions reloadcomments function thissend refreshonlycomments please sarus jcano check comments fix problems thank", "d": "10/2016"}, {"body": "jcano call route action controller action inside route action use thisrefresh", "d": "10/2016"}, {"body": "serabe confirm solution works confused closure actions nt work defined route routes handle normal actions thanks", "d": "10/2016"}, {"body": "jcano addon using route actions see", "d": "10/2016"}, {"body": "ok closing thank", "d": "10/2016"}, {"body": "apparently exact point described pixelhandler tempted create routes error handling hard time programmatically triggering error substates", "d": "10/2016"}, {"body": "gnapse describe exactly trying instead user flow", "d": "10/2016"}, {"body": "sure nathanhammond deal login page user submits form catch submit perform ajax request signing normal failure expect ajax request unauthorized ajax request ends error condition want switch error page initially wanted achieve showing error page shows route model hook fails could nt achieve loading programmatically get route model hook fails", "d": "10/2016"}, {"body": "okay thing note error routes actually dynamic segments means order achieve goal reusing error page must use intermediatetransitionto nt get new url pass second argument correctly address error route name always closed bug pixelhandler possibly worth improving documentation seems poweruserish", "d": "10/2016"}, {"body": "nathanhammond warn error original twiddlecase", "d": "10/2016"}, {"body": "adamknights behaves identically routes dynamic segments linked manner opposed new error message thoughts larger audience internet people", "d": "10/2016"}, {"body": "nathanhammond interesting would welcome others thoughts error message think particular piece doc adds confusion suggests navigate error route way", "d": "10/2016"}, {"body": "adamknights et al note work static route defined application one special ember routes said docs likely confuse issue", "d": "10/2016"}, {"body": "yes absolutely error better scenario matter fact router spelunking found exactly error want comment nt fully understand preceding comment referring ideally throw error provide maximal information user enough context objects provided proves cumbersome ember cases inner template helpers evaluated parent helpers unrender cases error somewhat prematurely fires try uncommenting error see happens", "d": "10/2016"}, {"body": "rwjblue line existence commented october say possibly fixed corresponding issue intervening three years interestingly though error message never uncommented first appears repo commit", "d": "10/2016"}, {"body": "thanks stravid still solution maybe add args error callback check model request fail", "d": "10/2016"}, {"body": "welp ran straight use case basically got route serves datadriven content along navbar transitions route different model gets applied every nt able narrow properly running issues getting ember dev environment set suspect culprit somewhere around suspect computed property returning incorrect never gets recomputed transition completes since never set extra links leaving class hanging limbo see pry better throw together test app nt upgrade working ember version canary p", "d": "10/2016"}, {"body": "hi best workaround cause understand nt work nt work would fire often anyway allowed set properties hook update bound property inside component thanks", "d": "10/2016"}, {"body": "almost certainly points pixelhandler points guides never use two configuration options together example teach queryparams also use separate example config option limitationbug would big help know following situations issue falls guidedocs describe intended feature set accurately completeness mutually exclusive options design would surprise consumption standpoint two concepts concerned seem loosely related read eitheror tradeoff neither expected beneficial push vs replace browser history stack route lifecycle hooks called guide describes subset intended feature set intent allow used together queryparam case let get issue tagged bug happy submit failing test case sure requires core team discussion case like lobby discussed sooner rather later current behavior gets way simple amp common use cases teams bump exploring options tech stack choices ie typeaheadstyle server side filtering list search pattern serialized url via data binding happy pull weight know looking", "d": "10/2016"}, {"body": "issues well needed change save button values inputs changed found set inputs inside form set action change form run action time one inputs within form changed twiddle see event names nt problem please ignore", "d": "10/2016"}, {"body": "status workaround handling special characters id", "d": "10/2016"}, {"body": "checked still issue", "d": "10/2016"}, {"body": "linking blob like contain link relevant content long position nt change branch points commit master today", "d": "10/2016"}, {"body": "problem twiddle works applicationhbs perfect must render newlayouthbs without applicationhbs doest work", "d": "10/2016"}, {"body": "people wondering bug still open bug lingered low priority small minority apps use small minority attempt top level none people working apps stepped forward fix would killed entirely could survived nobody time properly deprecate remove instead able keep working always rough edge cases hard keep implementation changed time poked code break different subset rarelyused edge cases stop using dates time ember neither components services anything done better components services rendering modals sidebars see trying show applicationhbs template sometimes nt abusing meaning applicationhbs literally supposed template always present move sometimespresent content child route remember routes meaning url structure unrelated change", "d": "10/2016"}, {"body": "bug still reproducible", "d": "10/2016"}, {"body": "chancancode rwjblue facing issue use case similar need url updated whenever transition goes error state whenever end error page user tend two things press back button go previous page press refresh button retry failed page url updated ca nt done suggestions resolve", "d": "10/2016"}, {"body": "jesseditson thanks mixin one issue change query params route transition different page come back page query params refresh happens causes error", "d": "10/2016"}, {"body": "supersabillon ah resuming sticky qps disabled app using wonder nt come across case", "d": "10/2016"}, {"body": "ok know router fixed allow multiple hashes bootstrap scrollspy still recognize scrolled hashanchor page still ca nt link hashanchor clickable element anybody got example working still broken thx", "d": "10/2016"}, {"body": "paulbhartzog browsers scroll nt dom page load case ember apps targeted element nt dom time browser see apply scrolltoid logic race behavior would emulated instead described untested example becomes even complex nest hashes element link need split apart convention decides one wins", "d": "10/2016"}, {"body": "paulbhartzog browsers scroll described untested example comment becomes even complex nest hashes route first second third element link need split apart convention decides one wins jayphelps thx reply example actually got anchors working part care bootstrap navbar active class blissfully unaware scrolling going wo nt update suspect issue bootstrap ember", "d": "10/2016"}, {"body": "hi stefanpenner solution works ok full screen soon table becomes responsive hides whole row info solution issue", "d": "10/2016"}, {"body": "willibaur unsure", "d": "10/2016"}, {"body": "stefanpenner found issue caused materialize class solved changing attribute thanks", "d": "10/2016"}, {"body": "hope issue still cause nt know post issue using ember got observer fired var emberobjectcreate b b emberaddobserver eachb function consolelog fire emberset oa b nothing happens var emberobjectcreate b b emberaddobserver eachb function consolelog fire emberset oa b difference case property name anyone recognizes issue please help explain thanks", "d": "10/2016"}, {"body": "unconsumed computed properties trigger observers", "d": "10/2016"}, {"body": "thanks triggering lowercase var emberobjectcreate b b emberaddobserver eachb function consolelog fire emberset oa b computed property", "d": "10/2016"}, {"body": "oh upper case supported use property names start lower case letters", "d": "10/2016"}, {"body": "thanks happens uppercase name fine simple property like var emberobjectcreate emberaddobserver function consolelog fire emberset ca nt find documentation anywhere think endup bunch lowercase aliases uppercase named properties", "d": "10/2016"}, {"body": "historically capitalized paths indicated global case would observing issue talking nested paths comment discussing hopefully special casing capitalized paths removed test still isnt working please open new issue twiddlejsbin reproduction", "d": "10/2016"}]